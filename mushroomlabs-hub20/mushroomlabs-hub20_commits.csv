Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
48230e9a89e1c99738c5b5ffc6e00ae1765edfcb,First commit,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-11-27 11:37:07+01:00,-3600,2019-11-27 11:37:07+01:00,-3600,True,False,"['.dockerignore', '.gitignore', 'Dockerfile', 'contributors.txt', 'dev.envfile', 'docker-compose.yml', 'docker.envfile', 'local.envfile', 'pyproject.toml', 'setup.cfg', '__init__.py', 'celery.py', 'settings.py', 'urls.py', 'wsgi.py', '__init__.py', 'admin.py', 'api.py', 'apps.py', 'choices.py', '0001_initial.py', '__init__.py', '__init__.py', 'accounts.py', 'ethereum.py', 'payments.py', 'raiden.py', 'serializers.py', 'tests.py', 'views.py', 'requirements-dev.txt', 'requirements.txt', 'setup.py']",[],0,1378,1378,33,1.0,1.0,0.7777777777777778
2f58855487b3ae14adbe253f943a9fcb4cfcd650,Add is_locked attribute to Wallet (to indicate that it is involved in some transaction/payment). Removed STATUS attribute from invoices and using different property defintions to control whether is invoice is paid/expired/etc,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-11-27 12:48:13+01:00,-3600,2019-11-27 12:48:13+01:00,-3600,True,False,"['0001_initial.py', 'ethereum.py', 'payments.py', 'serializers.py']",['48230e9a89e1c99738c5b5ffc6e00ae1765edfcb'],72,96,168,4,1.0,1.0,1.0
07b9137a241503f86e9156b2343c83ca90b48b09,"Add django app to record information about blocks and transactions, along with a command to pull the blocks from the ethereum node into the database

Add backfill function to sync_blockchain command. It also runs an async function that saves block going back in time",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-11-29 18:43:54+01:00,-3600,2019-11-29 23:12:23+01:00,-3600,True,False,"['settings.py', 'apps.py', 'choices.py', 'fields.py', '__init__.py', '__init__.py', 'sync_blockchain.py', '0001_initial.py', '__init__.py', 'models.py', 'tokens.json', '0001_initial.py', 'ethereum.py', 'payments.py', 'requirements.txt']",['2f58855487b3ae14adbe253f943a9fcb4cfcd650'],26,306,332,15,0.8023255813953488,1.0,0.5116279069767442
18e0679c4a0d91bcd2a70e5dd819ac56c68a2712,"Implementation of payment verification for payments done on the blockchain

The normal payment flow goes like this:

  1. Invoice is generated by hub20, with a ""chain payment address"" and
     (when currency selected is possible) ""raiden address"". The ""chain"" address
     is from a Wallet object that is part of a pool of address that we control.
     A Wallet is ""locked"" for the payment until is complete (or expired).
     An invoice identifier is also generated

  2. The merchant site then display the chain payment address - and possibly the
     raiden address - along with currency, amount and expiration time and identifier

  3. The payee then initiates the payment by their prefered method.

This commit is the implementation for the payment done on-chain. It brings:

 - A django ""management command"" (background process) that listens to
   pending transactions for ETH transfers, and token contracts event filters
   to track ERC20 token transfers to all of the addresses from ""locked"" wallets.
 - Signal handlers for blockchain Transaction objects and new Blocks that are created.

The result is as following:

 1. When a chain transaction is sent and not yet mined, the listeners pick up the
    transaction hash and create a Blockchain payment object with the proper amount/currency.
    Given that the wallet is locked, we assume that any payment in this interval is done
    regarding to an invoice
 2. When a new block is added to the chain, the ""sync_blockchain"" command will create the
    corresponding block and transactions in the database. The payment entries that related
    to this transaction are now considered ""received"", i.e, this sends the `payment_received`
    signal. With this, for example, we can unlock the wallet. Note that we are not yet
    counting the payment as confirmed. For that, the next step is necessary.
 3. On every Block created, we check for all of the payments that happen `N`  blocks before,
    and if we can still find the transaction we can then assume the payment to be confirmed.
    Another signal is sent with the payment as a parameter and other handlers can deal with
    the logic (e.g, updating the account's balance, send an email to the merchant confirming
    payment, etc)",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-11-30 05:40:16+01:00,-3600,2019-11-30 23:31:42+01:00,-3600,True,False,"['celery.py', 'sync_blockchain.py', 'models.py', 'app_settings.py', 'tokens.json', '__init__.py', '__init__.py', 'poll_payments.py', '0001_initial.py', '__init__.py', 'ethereum.py', 'payments.py', 'signals.py', 'serializers.py', 'views.py', 'requirements.txt']",['07b9137a241503f86e9156b2343c83ca90b48b09'],47,376,423,16,0.5384615384615384,0.6713286713286714,0.8671328671328671
3484f369fb9194120eff8383c4706b636ef5e274,"Implementation of Account Balances for Users

 - Remove hub20.models.accounts module. (User model not really needed)
 - Add hub20.models.accounting module (to control balances)
 - Change of hub20.models.payments:
      * PaymentRequest -> Payment
      * Payments -> Transfers
      * Add a separate entiry (PaymentLog) to track state changes of Payments.

 - Breaking of hub20.models.signals into hub20.signals (only to define new signals)
   and hub20.handlers (to define functions that are signal handlers and emitters
   of these signals)

 - When a payment is confirmed, a signal is emitted. A handler function reads this
   signal and creates a BalanceEntry record to correspond for the credit

 - Add first factories needed for unit testing
 -",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-02 01:52:51+01:00,-3600,2019-12-02 17:41:42+01:00,-3600,True,False,"['settings.py', 'factories.py', '__init__.py', 'base.py', 'providers.py', 'models.py', '__init__.py', 'admin.py', 'api.py', 'app_settings.py', 'apps.py', 'choices.py', '__init__.py', 'base.py', 'ethereum.py', 'payments.py', 'handlers.py', 'poll_transfers.py', '0001_initial.py', '__init__.py', 'accounting.py', 'accounts.py', 'ethereum.py', 'payments.py', 'signals.py', 'serializers.py', 'signals.py', 'tests.py', 'views.py']",['18e0679c4a0d91bcd2a70e5dd819ac56c68a2712'],268,621,889,29,1.0,0.9009009009009009,0.954954954954955
911932d28888aff076d5facf80274700d0f5a7f6,Add API endpoints for user balances,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-02 19:48:12+01:00,-3600,2019-12-02 19:48:12+01:00,-3600,True,False,"['api.py', 'accounting.py', 'ethereum.py', 'serializers.py', 'tests.py', 'views.py']",['3484f369fb9194120eff8383c4706b636ef5e274'],17,116,133,6,1.0,1.0,0.8653846153846154
596cf59ba64baf50cc5584584fe8aacdb2aedd47,Removed CURRENT_CHAIN_ID (that depended on a web3 call and turned it into a setting),Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-02 22:46:41+01:00,-3600,2019-12-02 22:46:41+01:00,-3600,True,False,"['models.py', 'app_settings.py', 'accounting.py', 'ethereum.py', 'serializers.py', 'views.py']",['911932d28888aff076d5facf80274700d0f5a7f6'],14,16,30,6,,,
46b21ed2291165ec8e69bc4416734937e365f726,"To avoid overloading of terms between ""payment transfers"" (transfers done
upon request) and transfers - done from users who simply wants to send
funds to one-another - Let's rename once again the models.

 - PaymentOrder: the entity that controls payment requests
 - PaymentEvent: A payment event is a record of the state change of a payment order
 - Payment: transfers done via blockchain/raiden/etc that related to a payment order

With these nomenclature, we can have the concept of Transfer exclusively
referring to an user that wants to initiate a transfer of tokens to
another user of the hub or EOA or raiden address.

Unify BlockchainTransfer and RaidenTransfer into ExternalTransfer, as they both should follow the same mechanism

Add model `Reserve` for control of funds that are destined for transfers.
Add signal-based flow for execution of transfers

Whenever a `Transfer` is created, a `Reserve` object with matching amount
is also created and the transfer is marked as `scheduled`.

When a transfer is executed, the total reserved can be checked and if all
conditions are satisfied, it can go through. After execution, the reserve
entry is destroyed to indicate that the balance is consumed in case of successful
 or returned to the owner in case of failed transfer.

Transfers are scheduled via signals and then executed via celery

Refactored raiden and ethereum modules into separate django apps. Sketched out functionality for external transfers
Add the concept of UserReserve (and TransferUserReserve) to control for funds that are in-flight and proper signal handling for executed/confirmed transfers
Add models to keep track of unconfirmed blockchain transfers / raiden payments
Refactor accounting models to not be dependent on web3.

Decouple Wallet model from ethereum account to allow pluggable account backends and make easier testing",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-02 18:31:15+01:00,-3600,2019-12-10 07:15:28+01:00,-3600,True,False,"['dev.envfile', 'docker-compose.yml', 'setup.cfg', 'celery.py', 'app_settings.py', 'choices.py', 'factories.py', 'base.py', '0001_initial.py', 'models.py', '__init__.py', 'admin.py', 'api.py', 'app_settings.py', 'apps.py', 'factories.py', 'tokens.json', 'handlers.py', '0001_initial.py', '__init__.py', 'models.py', 'serializers.py', 'signals.py', 'views.py', 'admin.py', 'api.py', 'app_settings.py', 'choices.py', '__init__.py', 'accounting.py', 'base.py', 'ethereum.py', 'payments.py', 'transfers.py', 'handlers.py', 'poll_transfers.py', '0001_initial.py', '__init__.py', 'accounting.py', 'ethereum.py', 'payments.py', 'raiden.py', 'transfers.py', 'serializers.py', 'signals.py', 'tasks.py', 'tests.py', 'views.py', '__init__.py', 'celery.py', 'settings.py', 'urls.py', 'wsgi.py', 'apps.py', '0001_initial.py', '__init__.py', 'models.py', 'requirements.txt']",['596cf59ba64baf50cc5584584fe8aacdb2aedd47'],793,2565,3358,58,0.8231884057971014,0.9246376811594202,0.9072463768115943
bbc0dc464e68fe7eef5c617a3ebaac3d7b880dc4,"Add processing from raiden events and payments

Adding admin entry for token network and raiden
Command to connect to raiden and feed the database with information about token networks, channels and payments
Payments received via raiden with the correct identifier are now credit to the payment order
Add factories for raiden and tests for raiden payments",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-10 13:29:56+01:00,-3600,2019-12-11 13:16:27+01:00,-3600,True,False,"['admin.py', '0001_initial.py', 'models.py', 'handlers.py', '0001_initial.py', 'payments.py', 'serializers.py', 'tests.py', '__init__.py', 'admin.py', 'apps.py', 'client.py', 'factories.py', 'handlers.py', '__init__.py', '__init__.py', 'sync_raiden.py', '0001_initial.py', 'models.py', 'signals.py']",['46b21ed2291165ec8e69bc4416734937e365f726'],730,702,1432,20,0.8105263157894737,1.0,0.49473684210526314
91b501517d8896abefe1f762543cb9e39904ff4b,Removed strict check for untyped definitions on mypy,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-11 13:17:40+01:00,-3600,2019-12-11 13:17:40+01:00,-3600,True,False,['setup.cfg'],['bbc0dc464e68fe7eef5c617a3ebaac3d7b880dc4'],1,1,2,1,,,
9ff3e25af52b9774b2bf817ef13904ee3059fb75,Adding LICENSE and README files,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-11 14:32:21+01:00,-3600,2019-12-11 14:32:21+01:00,-3600,True,False,"['LICENSE', 'README.md']",['91b501517d8896abefe1f762543cb9e39904ff4b'],0,57,57,2,,,
1af3dc45bbf50d50ec490c4e9406fdd83e270d60,"Add celery task to expire payment methods

To avoid having wallets locked indefinitely while waiting for the payment,
some way of expiring the payment method is necessary. This commit adds a
signal handler to the PaymentOrderMethod.post_save signal, which schedules a
task to run at the time determined at the `expiration_time` attribute of the
object.

This celery tasks check if the method should be expired, and if removes the
payment method entry associated with the Payment Order and sets the status of
the order to `expired`.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-11 20:51:15+01:00,-3600,2019-12-11 20:51:15+01:00,-3600,True,False,"['app_settings.py', 'handlers.py', 'payments.py', 'tasks.py']",['9ff3e25af52b9774b2bf817ef13904ee3059fb75'],9,34,43,4,1.0,1.0,1.0
e8f6f74b65282804f22f50e62d9bb32012b5c6ce,"Implementation of a system to track if an ethereum address has any channel on raiden

 - Implementation of `sync_token_network_channel_events` period task that can
   find new `ChannelOpened` and `ChannelClosed` events
 - The events are registered on the database.
 - The status of the channel is determined by the last event received (ordered by block number
   and transaction index of the transaction)
 - The ChannelOpened event tells us what are the addresses of the participants, these are stored
   with the `TokenNetworkChannel` model
 - An address is deemed reachable via Raiden if the address if we can find it in the token network
   channel participant list",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-13 20:25:08+01:00,-3600,2019-12-13 20:25:08+01:00,-3600,True,False,"['.gitignore', 'dev.envfile', 'local.envfile', 'app_settings.py', 'models.py', '0001_initial.py', 'tests.py', 'celery.py', 'settings.py', 'contracts.py', 'handlers.py', 'sync_raiden.py', '0001_initial.py', 'models.py', 'tasks.py']",['1af3dc45bbf50d50ec490c4e9406fdd83e270d60'],49,278,327,15,0.5277777777777778,0.8333333333333334,0.7407407407407407
95f57634a8d3b9d865f5a3f6abc2d169dac85247,"Refactor of apps

Removed dependency of gnosis-py and copied only the required modules into the blockchain apps.
This was needed to eliminate the conflict on different versions of web3 used by gnosis 2.0 and
the other packages

Moved all of the apps and the project into a hub20 top-level module.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-16 13:40:41+01:00,-3600,2019-12-16 13:44:40+01:00,-3600,True,False,"['dev.envfile', 'docker-compose.yml', '__init__.py', '__init__.py', 'celery.py', 'settings.py', 'urls.py', 'wsgi.py', '__init__.py', '__init__.py', 'app_settings.py', 'apps.py', 'choices.py', 'constants.py', '__init__.py', 'base.py', 'providers.py', 'fields.py', '__init__.py', '__init__.py', 'sync_blockchain.py', '0001_initial.py', '__init__.py', 'models.py', 'serializers.py', 'validators.py', '__init__.py', 'admin.py', 'api.py', 'app_settings.py', 'apps.py', 'choices.py', '__init__.py', 'accounting.py', 'base.py', 'payments.py', 'transfers.py', 'handlers.py', '0001_initial.py', '__init__.py', '__init__.py', 'accounting.py', 'payments.py', 'transfers.py', 'serializers.py', 'signals.py', 'tasks.py', 'tests.py', 'views.py', '__init__.py', 'admin.py', 'api.py', 'app_settings.py', 'apps.py', 'factories.py', 'tokens.json', 'handlers.py', '0001_initial.py', '__init__.py', 'models.py', 'serializers.py', 'signals.py', 'views.py', '__init__.py', 'admin.py', 'apps.py', 'client.py', 'contracts.py', 'factories.py', 'handlers.py', '__init__.py', '__init__.py', 'sync_raiden.py', '0001_initial.py', '__init__.py', 'models.py', 'signals.py', 'tasks.py', 'requirements-dev.txt', 'requirements.txt', 'setup.py', 'fields.py', '__init__.py', '__init__.py']",['e8f6f74b65282804f22f50e62d9bb32012b5c6ce'],180,489,669,84,0.8540145985401459,0.7591240875912408,0.8321167883211679
a13ad7c95949ac5145b652f3b13512a57cdd952f,"Add django channels to allow for web socket communication.

Introduces a NotificationConsumer class that can be used as an endpoint to send
messages to via the websocket.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-17 02:15:13+02:00,-7200,2019-12-17 02:15:13+02:00,-7200,True,False,"['dev.envfile', 'docker-compose.yml', 'middleware.py', 'routing.py', 'settings.py', 'api.py', 'consumers.py', 'handlers.py', 'serializers.py', 'requirements.txt']",['95f57634a8d3b9d865f5a3f6abc2d169dac85247'],13,114,127,10,1.0,1.0,1.0
029ef520945faa1e47fddbe9205e16afd825b8bc,"Add setup of Store & Checkout model

With the store model, users may setup specific payment flows for websites.

Upon creating a store, it will have an API key and a RSA pair. The API key
might be used for authenticating requests done from the websites, while the
RSA pair is used so that our payment gateway instance can issue secure
JSON Web Tokens, which can be given to the client application. The client
applcation can then send this JWT to the store website and the store site
can securely verify the status of the payment (received, confirmed, etc)

Cleaned up command that syncs blockchain, so that it respects STARTING_BLOCK_NUMBER
and avoid loading too much of old chain history

Add views/serializers for Checkout models and added a permission class that
allows clients to access a checkout endpoint if they are using the api key
and/or authenticated as the user who owns the store

Introduce blockchain_payment_sent signal and command that track blockchain transfers

During the payment flow, we have signals to indicate when a payment has been received
and when it has been confirmed. However, this is not enough for the use case of a payment
gateway when the user initiates a blockchain transfer.

For this reason, the blockchain_payment_sent signal is introduced. with it, parts of the
application that might be interested not in the transaction itself but in the detection of
the payment (i.e, part of the checkout payment flow) can receive this signal and do whatever
it wants with the information.

A `track_pending_payments` django command is also added that listens to every pending
transaction where the recipient is any of the existing account addresses that are reserved
for payments.

Started using django channels by introduction of CheckoutConsumer, for users that want to
be updated in real-time about the status of a checkout. On any payment-relevant (such as
payment_sent, payment_received, payment_confirmed), the endpoint sends a message containing
the name of the event and a signed jwt representing the status of the checkout

Add pytest-based tests for channels",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-18 21:05:41+02:00,-7200,2019-12-21 03:07:51+02:00,-7200,True,False,"['Dockerfile', 'dev.envfile', 'docker-compose.yml', 'docker.envfile', 'settings.py', 'test_settings.py', 'urls.py', 'sync_blockchain.py', 'api.py', 'app_settings.py', 'consumers.py', '__init__.py', 'store.py', 'handlers.py', 'track_pending_payments.py', '0001_initial.py', '__init__.py', 'store.py', 'permissions.py', 'serializers.py', 'signals.py', 'tasks.py', '__init__.py', 'base.py', 'test_consumers.py', 'test_models.py', 'views.py', 'models.py', 'pytest.ini', 'requirements.txt', 'setup.cfg']",['6efdb13ab6af65f3e2424d9e48c47f0a8d601d4b'],190,845,1035,31,0.8032128514056225,0.8072289156626506,0.8152610441767069
3be3c2467cec68af010bc7805cebab75e25d444f,Install setup for mkdocs (with material theme),Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-22 22:21:45+02:00,-7200,2019-12-22 22:23:05+02:00,-7200,True,False,"['.gitignore', 'index.md', 'mkdocs.yml', 'requirements-dev.txt']",['029ef520945faa1e47fddbe9205e16afd825b8bc'],0,32,32,4,,,
4f09d8453a02fd6cc5b29f98454688d4e97aad3d,Add jwt to list of requirements.txt,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-25 00:25:11+02:00,-7200,2019-12-25 00:25:11+02:00,-7200,True,False,['requirements.txt'],['3be3c2467cec68af010bc7805cebab75e25d444f'],0,1,1,1,,,
a0f18d021c162ca15b76bbdfc285479a6281de7d,"Simplified setup used for docker and testing

Docker-compose file now only provides the files for the underlying services

RabbitMQ is no longer needed (redis can also be used for celery)

Celery settings are a little tricky to get a consistent definition for testing
and development with the same environment settings - e.g, during testing, celery needs to be
eager/not submit the task to be broker. To account for this, settings.py and celery.py now
alsocheck for an environment variable HUB20_TEST, which is set by pytest",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-25 00:25:25+02:00,-7200,2019-12-25 00:35:44+02:00,-7200,True,False,"['.gitignore', 'dev.envfile', 'docker-compose.yml', 'celery.py', 'settings.py', 'test_settings.py', 'test_consumers.py', 'pytest.ini', 'requirements-dev.txt', 'requirements.txt']",['4f09d8453a02fd6cc5b29f98454688d4e97aad3d'],92,54,146,10,,,
a9801ff04efe24b7812750aa5297e47eb0326533,Ensure that always produces an web3 client that connects to the same network defined in settings.py,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2019-12-27 02:46:07+02:00,-7200,2019-12-27 02:46:07+02:00,-7200,True,False,['models.py'],['a0f18d021c162ca15b76bbdfc285479a6281de7d'],9,9,18,1,1.0,1.0,1.0
a3276db50dbd7ddfa88cdb037bd948b186979921,"With some changes in the docker-compose definitions, it is easier to attach to our app container and make sure that everything runs on its own network. Add geth node service to docker-compose definitions. Add docker-compose.override.yml to gitignore so that developers can override settings (useful for things such as defining different geth node urls, exposing ports, etc)",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-01-10 11:23:42+01:00,-3600,2020-01-10 11:23:42+01:00,-3600,True,False,"['.env', '.gitignore', 'Dockerfile', 'docker-compose.yml', 'docker.envfile', 'settings.py', 'requirements-dev.txt', 'requirements.txt']",['a9801ff04efe24b7812750aa5297e47eb0326533'],14,123,137,8,,,
c13c11e0f34250da7773406a6fc37e054a551350,"Exchange Rates via Coingecko + Refactor of docker environment files

The order of environment variable precedence is breaking the idea of
having a overrideable docker-compose and envfiles. The current solution is to
have the default "".env"" file to contain all of the variables. This way, one should
define all of the desired environment variables in one file and symlink it to .env,
which can then be picked up by docker-compose and start time.

Add celery task to fetch exchange rates from coingecko and REST API endpoint to present the rate of a token pair",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-01-10 18:34:23+01:00,-3600,2020-01-12 14:02:38+01:00,-3600,True,False,"['.gitignore', 'docker-compose.yml', 'docker.envfile', 'base.envfile', 'celery.py', 'settings.py', 'app_settings.py', '0001_initial.py', 'api.py', 'app_settings.py', 'handlers.py', '__init__.py', '__init__.py', 'fetch_token_exchange_rate.py', 'load_ethereum_tokens.py', 'load_token_data.py', '0001_initial.py', 'models.py', 'serializers.py', 'tasks.py', 'views.py', '0001_initial.py', 'requirements.txt']",['a3276db50dbd7ddfa88cdb037bd948b186979921'],40,383,423,23,0.3333333333333333,0.8083333333333333,0.7833333333333333
94fdef694d66913413d80723fed74f6e1bc11e05,"Remove StoreAPIKey, allow public access to store details

The API Key was not working as a true authentication/access control
method anyway and there is nothing about the store detail endpoint that
needs to be protected. So, the following changes are made:

 - The ID attribute of a Store is now a randomly-generated UUID
 - Only authenticated users can created them
 - No listing is allowed. To have access, users must have the UUID already",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-01-13 00:10:00+01:00,-3600,2020-01-13 00:19:19+01:00,-3600,True,False,"['.gitignore', 'handlers.py', '0001_initial.py', 'store.py', 'permissions.py', 'serializers.py', '__init__.py', 'test_views.py', 'views.py', 'app_settings.py', 'tokens.json', 'handlers.py', '0001_initial.py', 'models.py', 'serializers.py', 'views.py', '0001_initial.py']",['c13c11e0f34250da7773406a6fc37e054a551350'],166,69205,69371,17,0.0,0.0,0.18181818181818182
e88bee31e2536816668f7243f3b99c0ab4df7b60,Add support to CORS headers,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-01-15 01:14:03+01:00,-3600,2020-01-15 01:14:03+01:00,-3600,True,False,"['settings.py', 'requirements.txt']",['94fdef694d66913413d80723fed74f6e1bc11e05'],0,7,7,2,,,
51b016d1505d9eef0add9505c308fbdaafd0e953,Add function/task to make mock exchange rates for some testnet tokens,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-01-15 11:09:06+01:00,-3600,2020-01-15 11:09:06+01:00,-3600,True,False,"['docker-compose.yml', 'settings.py', 'app_settings.py', 'tasks.py']",['e88bee31e2536816668f7243f3b99c0ab4df7b60'],13,53,66,4,0.08333333333333333,1.0,1.0
ae890d2521745f398da620357b1332473e1f7930,Add better error handling for syncing with raiden,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-01-15 11:10:23+01:00,-3600,2020-01-15 11:10:23+01:00,-3600,True,False,"['client.py', 'sync_raiden.py']",['51b016d1505d9eef0add9505c308fbdaafd0e953'],11,23,34,2,0.9,1.0,0.0
c7605a3a62eea094f3b067fd691046d4f578541c,"Work on checkout page:

 - Due to Javascript not dealing with integers largers than 2^53 -1, the function that
   generates the random identifier takes that as an upper limit
 - Add handling of DELETE requests for payment orders/checkouts. It works by setting its
   status to 'canceled'",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-01-21 00:11:58+01:00,-3600,2020-01-21 00:11:58+01:00,-3600,True,False,"['app_settings.py', 'choices.py', 'handlers.py', 'payments.py', 'serializers.py', 'signals.py', 'test_views.py', 'views.py']",['ae890d2521745f398da620357b1332473e1f7930'],10,57,67,8,1.0,1.0,0.6521739130434783
5cc95b312596822f7dd8ad579545d9c2ee2ffd97,"Add transfer amounts and payment method (raiden, blockchain, internal) used for each payment message during checkout",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-01-27 14:07:24+01:00,-3600,2020-01-27 14:07:24+01:00,-3600,True,False,"['docker-compose.yml', 'choices.py', 'consumers.py', 'handlers.py', 'track_pending_payments.py', 'signals.py', 'tasks.py', 'test_consumers.py', 'handlers.py', 'serializers.py']",['c7605a3a62eea094f3b067fd691046d4f578541c'],24,79,103,10,0.0,1.0,0.8285714285714286
1015f99accd7c8b7744ad4544956a843276cbe08,"Handling of event data to ensure that transactions related to ERC20 tokens are indeed
successful transfers.

This commit introduces the model for TransactionLog and fixes the issue that every
transaction related to an ERC20 token address was assumed to be a transfer function call.

It is still not perfect, as still need to decode the transfer event properly and none of
the web3 libraries seem to be do that in a straightforward method. The only check it makes
so far:

 - Every transfer transaction needs to have one event
 - The event must have 3 topics (transfer, from, to)
 - The event data contains the amount transferred, and it must match the parsed transaction.data",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-01-29 11:12:45+01:00,-3600,2020-01-29 18:26:22+01:00,-3600,True,False,"['base.py', 'fields.py', 'sync_blockchain.py', '0001_initial.py', 'models.py', '0001_initial.py', 'test_models.py', 'factories.py', 'handlers.py', '0001_initial.py', 'models.py', '0001_initial.py']",['5cc95b312596822f7dd8ad579545d9c2ee2ffd97'],161,193,354,12,1.0,1.0,0.1875
1b1b9e31189592e52e175e94c232808d176e4977,"Tokens can not have unique codes, so we will have to ensure that the API only references addresses",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-01-30 14:00:18+01:00,-3600,2020-01-30 14:00:18+01:00,-3600,True,False,"['handlers.py', '0001_initial.py', 'store.py', 'serializers.py', 'admin.py', 'api.py', 'tokens.json', 'handlers.py', '0001_initial.py', 'models.py', 'serializers.py', 'tasks.py', 'views.py', '0001_initial.py']",['1015f99accd7c8b7744ad4544956a843276cbe08'],32,67,99,14,0.8571428571428571,0.8571428571428571,1.0
ded8ca6d51cdfa9be6278e3513219ca786756669,"Remove exchange rate and coingecko definition (Checkout and Payment Orders only work with tokens anyway, so we should exchange rates to client-side)",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-01-30 14:16:43+01:00,-3600,2020-01-30 14:16:43+01:00,-3600,True,False,"['docker-compose.yml', 'celery.py', '0001_initial.py', 'api.py', 'handlers.py', '__init__.py', 'fetch_token_exchange_rate.py', 'load_ethereum_tokens.py', 'load_token_data.py', '0001_initial.py', 'models.py', 'serializers.py', 'tasks.py', 'views.py', '0001_initial.py']",['1b1b9e31189592e52e175e94c232808d176e4977'],349,14,363,15,0.6071428571428571,0.16428571428571428,0.2714285714285714
e350dae21dbd999f594b3f231e4341f2e5860180,Renamed EthereumToken.ticker to EthereumToken.code,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-01-30 15:24:09+01:00,-3600,2020-02-03 14:27:34+01:00,-3600,True,False,"['handlers.py', 'track_pending_payments.py', '0001_initial.py', 'store.py', 'serializers.py', 'views.py', 'admin.py', 'factories.py', 'tokens.json', '0001_initial.py', 'models.py', 'serializers.py', 'views.py', 'models.py']",['ded8ca6d51cdfa9be6278e3513219ca786756669'],2809,2805,5614,14,0.0,0.0,0.0
76f81112420395b486a2a1d22af451b7853b8318,Add more information to checkout payments so each can be uniquely identified,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-02-16 23:59:39+01:00,-3600,2020-02-16 23:59:39+01:00,-3600,True,False,"['docker-compose.yml', 'handlers.py', 'payments.py', 'store.py', 'serializers.py', 'tasks.py']",['e350dae21dbd999f594b3f231e4341f2e5860180'],12,55,67,6,0.0,1.0,1.0
b2c3d7d2589161a1f889d79c8f32f3f8ddb156b0,Pinning django version to avoid GH (false positive?) vulnerability warning,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-02-17 00:03:03+01:00,-3600,2020-02-17 00:03:03+01:00,-3600,True,False,['requirements.txt'],['949355f3d42e2bc48a258abaed5ec72174d4cdcb'],1,1,2,1,,,
79edde415aad98eddf56896d424fcb6fad59ddee,Add setup.py classifiers (preparation for pypi publishing),Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-02-17 00:12:45+01:00,-3600,2020-02-17 00:12:45+01:00,-3600,True,False,['setup.py'],['b2c3d7d2589161a1f889d79c8f32f3f8ddb156b0'],1,8,9,1,,,
968666f5a224f115132d05a0506d0a9fa8e22007,Update dependencies. Drop eth_abi<2 requirement,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-02-24 20:44:03+01:00,-3600,2020-02-24 20:44:03+01:00,-3600,True,False,"['requirements.txt', 'setup.py']",['79edde415aad98eddf56896d424fcb6fad59ddee'],1,6,7,2,,,
bc9bf04433922f7c525ef41f41d90d2cdf746018,raiden_contracts is missing an dependency.,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-02-24 22:12:57+01:00,-3600,2020-02-24 22:12:57+01:00,-3600,True,False,"['requirements.txt', 'setup.py']",['968666f5a224f115132d05a0506d0a9fa8e22007'],1,2,3,2,,,
c7dc50edc18dc23de70e1ae60d10707281a5960b,Add missing entries to get python package running correctly,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-03-01 14:35:45+01:00,-3600,2020-03-01 14:35:45+01:00,-3600,True,False,"['settings.py', '__init__.py']",['bc9bf04433922f7c525ef41f41d90d2cdf746018'],0,1,1,2,,,
2c435debf5738a59d4db4ac871f0f44d91bc5be9,"Fix for missing access to README.md on docker container, which makes docker build to fail",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-03-01 14:36:42+01:00,-3600,2020-03-01 14:36:42+01:00,-3600,True,False,['Dockerfile'],['c7dc50edc18dc23de70e1ae60d10707281a5960b'],0,1,1,1,,,
2b1c4459e1c0d993588b02a6bc05b26d7191251e,Fix for usage of updated web3 (middleware_stack -> middleware_onion),Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-03-02 02:54:17+01:00,-3600,2020-03-02 02:54:17+01:00,-3600,True,False,['models.py'],['2c435debf5738a59d4db4ac871f0f44d91bc5be9'],1,1,2,1,,,
6d7fec805f67dc3e4665a41c5ad2baeda568844a,uvicorn deployment depends on python-dotenv but not explicitly,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-03-02 02:54:54+01:00,-3600,2020-03-02 02:54:54+01:00,-3600,True,False,['requirements.txt'],['2b1c4459e1c0d993588b02a6bc05b26d7191251e'],0,1,1,1,,,
3d1fab718eb361eaaf12696bc0ede0914c300c8a,django.setup() needs to be called before importing core.api consumers,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-03-02 03:24:29+01:00,-3600,2020-03-02 03:24:29+01:00,-3600,True,False,['routing.py'],['6d7fec805f67dc3e4665a41c5ad2baeda568844a'],2,4,6,1,,,
e3ef6270149f3cb5552c65de53bbe9da2ae094b0,"Add command to load data from all tracked tokens

(fix) Tracked token information should be based on the address, not the token symbol.
(chore) Finished removal of code related to coingecko/fiat currency data",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-03-03 15:55:45+01:00,-3600,2020-03-03 15:55:45+01:00,-3600,True,False,"['settings.py', 'app_settings.py', '__init__.py', 'load_tracked_tokens.py', 'models.py', 'serializers.py', 'views.py']",['3d1fab718eb361eaaf12696bc0ede0914c300c8a'],28,31,59,7,1.0,1.0,0.0
b81275e8454f66e8f327e466a5ede6cb4f48ee7f,Change websocket consumer endpoints to its own namespace (/ws/),Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-03-08 01:23:14+01:00,-3600,2020-03-08 01:23:14+01:00,-3600,True,False,"['routing.py', 'api.py']",['e3ef6270149f3cb5552c65de53bbe9da2ae094b0'],4,5,9,2,,,
aaea31d4de1bf1c5c2275449b3f631e072b5cedf,"Add nginx to list of services, use uvicorn directly instead of django's runserver",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-03-11 22:26:59+01:00,-3600,2020-03-11 22:26:59+01:00,-3600,True,False,"['docker-compose.yml', 'settings.py']",['b81275e8454f66e8f327e466a5ede6cb4f48ee7f'],1,12,13,2,,,
0b7327c158b53526c0180ce29c4921c0361fbb01,Add missing __init__.py to core.management.commands,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-03-12 03:15:27+01:00,-3600,2020-03-12 03:15:27+01:00,-3600,True,False,['__init__.py'],['aaea31d4de1bf1c5c2275449b3f631e072b5cedf'],0,0,0,1,,,
82ffd553a47e8917cdf50d6ae9accfb34b2d2f45,"Change id of payment to be UUIDs, and introduce API endpoints to display Payment Info",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-03-23 18:29:02+01:00,-3600,2020-04-09 15:41:03+02:00,-7200,True,False,"['api.py', '0001_initial.py', 'payments.py', 'store.py', 'serializers.py', 'views.py']",['8efce667ccee4f0f80a88ecfead1df0e94899c1a'],6,43,49,6,0.9333333333333333,1.0,1.0
b359b4d1e1aa9ff5bd0de7452fcc7b1350a5538e,"When a 'expired' PaymentOrderEvent is created, we check if that order relates to a checkout. If it does, we send a 'checkout.expired' message on the websocket",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-04-11 09:46:51+02:00,-7200,2020-04-11 09:46:51+02:00,-7200,True,False,['handlers.py'],['82ffd553a47e8917cdf50d6ae9accfb34b2d2f45'],0,11,11,1,1.0,1.0,1.0
ad7cd70083e73cbe421bae27e93ba04bc8be1276,Updated version,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-04-14 17:26:09+02:00,-7200,2020-04-14 17:26:09+02:00,-7200,True,False,['setup.py'],['e3ef6270149f3cb5552c65de53bbe9da2ae094b0'],1,1,2,1,,,
aca595a6002bb5933b09dc8b668ae7eddaaa3c6b,Make CORS header setting optional instead of always-allow,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-04-18 19:58:27+02:00,-7200,2020-04-18 19:58:27+02:00,-7200,True,False,['settings.py'],['078635e4592ad96e290d2df80516997ff0d48228'],2,2,4,1,,,
3317195e0ec5f80f4b8e7f474028c7d36d43e127,Minor version bump,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-04-19 09:17:33+02:00,-7200,2020-04-19 09:17:33+02:00,-7200,True,False,['setup.py'],['ad7cd70083e73cbe421bae27e93ba04bc8be1276'],1,1,2,1,,,
1d6130e37eb64c7d3e7093ce8e007a374433c91f,Turn the track_pending_payment command from a asyncio into a celery task,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-05-04 16:53:12+02:00,-7200,2020-05-05 04:06:59+02:00,-7200,True,False,"['track_pending_payments.py', 'tasks.py']",['3a4d9cf16ed9d91495ac1a28c464ffb05e9f837b'],61,101,162,2,0.0,0.0,1.0
b6cb89ebe7c068fa4cc00e77e830eeb31f344a4d,version bump,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-05-05 05:01:28+02:00,-7200,2020-05-05 05:01:28+02:00,-7200,True,False,['setup.py'],['1d6130e37eb64c7d3e7093ce8e007a374433c91f'],1,1,2,1,,,
2542107d7eae9a3b4660229aa86968407c28ee2c,Add `name` parameter to celery config,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-05-06 18:50:03+02:00,-7200,2020-05-06 18:50:21+02:00,-7200,True,False,['celery.py'],['b6cb89ebe7c068fa4cc00e77e830eeb31f344a4d'],0,2,2,1,,,
aecce9a47e2d468bd24e0c94c2f4c1edacd1e694,"Update to django3, remove invitations app",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-05-08 04:52:53+02:00,-7200,2020-05-08 04:52:53+02:00,-7200,True,False,"['settings.py', 'requirements-dev.txt', 'requirements.txt']",['2542107d7eae9a3b4660229aa86968407c28ee2c'],15,6,21,3,,,
3e13f01d37b5a7c365b83616d59f7d6e722715aa,Add more type hints for mypy verification,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-05-08 04:54:05+02:00,-7200,2020-05-08 04:54:05+02:00,-7200,True,False,"['base.py', 'accounting.py', 'serializers.py', 'factories.py', 'tasks.py']",['aecce9a47e2d468bd24e0c94c2f4c1edacd1e694'],13,16,29,5,1.0,1.0,1.0
8a34bbceaf79b09365bc3667e656772ab2eeb832,"Application clean, django-update, app settings refactor

AttriuteDict (by way of the rootpath module) has a serious bug in that it sets
the value of `None` when the code is installed in a virtualenv but the working
directory is not on the sys.path. This was causing the celery job to fail to start
when django.setup was called.

The cleaner solution is to simply remove the usage of AttributeDict, so this was
an opportunity to refactor hub20.apps.core.app_settings module.

This commit also removes the apps that were not used (django-invitations, qr code)
which allows up to upgrade to django3.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-05-08 22:52:26+02:00,-7200,2020-05-08 22:52:26+02:00,-7200,True,False,"['app_settings.py', 'handlers.py', 'payments.py', 'settings.py', 'test_models.py', 'setup.py']",['3e13f01d37b5a7c365b83616d59f7d6e722715aa'],54,81,135,6,1.0,1.0,1.0
cea44a187cb175fd42a38b83fe3725e40237206b,Bump revision number,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-05-08 23:25:06+02:00,-7200,2020-05-08 23:25:06+02:00,-7200,True,False,['setup.py'],['8a34bbceaf79b09365bc3667e656772ab2eeb832'],1,1,2,1,,,
34cf3c7f7993902562cf8c9bb74904c5dee17e3f,"Python 3.8 did not like the implementation of Remove sync_blockchain based on asyncio, so making it based on celery",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-05-11 06:09:00+02:00,-7200,2020-05-11 07:02:31+02:00,-7200,True,False,"['docker-compose.yml', 'sync_blockchain.py', 'models.py', 'serializers.py', 'tasks.py', 'test_consumers.py', 'requirements-dev.txt', 'requirements.txt']",['5dc9e07f45ad32c0ff28a54667c76b6f26dd0d00'],80,85,165,8,1.0,0.0,0.0
efe17e2f20da5b8ccca0c23c35f693388cbfd563,Adding expiration and priority time to track_payments task (makes no sense to run task if it is old),Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-05-11 07:29:10+02:00,-7200,2020-05-11 07:40:42+02:00,-7200,True,False,['track_pending_payments.py'],['34cf3c7f7993902562cf8c9bb74904c5dee17e3f'],5,11,16,1,0.0,0.0,1.0
7486d81f0efb1f20d683cb577b0b7a6f9a03b0b1,"Rework of sync_blockchain command, avoids reliance on celery

To avoid excessive reliance on on celery for blockchain sync process, the sync_blockchain
command now works by scheduling only the missing blocks on celery and then running an
infinite loop that checks every 10 seconds if there is any new mined block.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-05-13 18:24:59+02:00,-7200,2020-05-13 18:24:59+02:00,-7200,True,False,['sync_blockchain.py'],['efe17e2f20da5b8ccca0c23c35f693388cbfd563'],14,30,44,1,0.0,1.0,0.5833333333333334
e82f6de6a5fdd77bee0f042366736b81b4a035d9,"Create chain model and got rid of make_web3
Checkout model now inheirits directly from PaymentOrder. Also now payment methods are completely replaced by payment routes and the its definitions are stable.
Remove chain_id attributes from EthereumToken, turn into proper FK to Chain. Also add Chain reference to PaymentOrder
Add signals to indicate that ETH node is out of sync/back in sync
Work on checkout serializer to reflect changes in model. Added test for checkout view
Add event handlers to notify checkout consumer when blockchain node is disconnected or out of sync",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-05-14 21:41:21+02:00,-7200,2020-05-29 13:29:48+02:00,-7200,True,False,"['app_settings.py', 'apps.py', 'exceptions.py', 'base.py', 'handlers.py', 'sync_blockchain.py', '0001_initial.py', 'models.py', 'signals.py', 'tasks.py', 'consumers.py', 'payments.py', 'store.py', 'handlers.py', 'track_pending_payments.py', '0001_initial.py', 'accounting.py', 'payments.py', 'store.py', 'serializers.py', 'settings.py', 'tasks.py', 'test_consumers.py', 'test_models.py', 'test_views.py', 'views.py', 'factories.py', 'handlers.py', 'load_tracked_tokens.py', '0001_initial.py', 'models.py', 'serializers.py', '__init__.py', 'test_views.py', 'views.py', 'sync_raiden.py', '0001_initial.py', 'tasks.py', 'pytest.ini', 'requirements-dev.txt']",['7486d81f0efb1f20d683cb577b0b7a6f9a03b0b1'],446,829,1275,40,0.4014084507042254,0.6690140845070423,0.647887323943662
3654c555326b083bdb000703efe6cc3dc5374e43,Add raiden docker image to compose.,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-05-31 21:17:00+02:00,-7200,2020-05-31 21:17:00+02:00,-7200,True,False,"['docker-compose.yml', 'serializers.py', 'sync_raiden.py', 'models.py']",['e82f6de6a5fdd77bee0f042366736b81b4a035d9'],7,15,22,4,1.0,0.0,1.0
8ee87cf6b15c0944ea76384a5c04be429747c7bf,"Refactor of PaymentOrder/Checkout models.

Orders/checkout can only be deleted by its creator, and only when no
payments have been done.

We can use the state of the payment routes to determine if an order is
expired or not. This is done by ensuring that any route has some
method to indicate its expiration (block height for blockchain
routes, time for raiden ones) and that by establishing that an order
is expired if all of its routes are expired as well

This also adds methods to select orders that are paid or
unpaid (if the sum of payments done through the routes is bigger than
the order amount, then it is considered paid)

Add status field to PaymentOrderSerializer
Add expiration_time to RaidenPaymentRouteSerializer
Add messages for checkout events (new block added, route expired)",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-01 04:47:38+02:00,-7200,2020-06-08 13:45:32+02:00,-7200,True,False,"['docker-compose.yml', 'settings.py', 'providers.py', '0001_initial.py', 'models.py', 'admin.py', 'choices.py', 'accounting.py', 'payments.py', 'handlers.py', 'track_pending_payments.py', '0001_initial.py', 'accounting.py', 'managers.py', 'payments.py', 'store.py', 'serializers.py', 'settings.py', 'signals.py', 'tasks.py', '__init__.py', 'base.py', 'test_consumers.py', 'test_managers.py', 'test_models.py', 'test_views.py', 'views.py', '0001_initial.py', 'models.py', '__init__.py', 'admin.py', 'apps.py', 'factories.py', '0001_initial.py', '__init__.py', 'models.py', '__init__.py', 'base.py', 'test_models.py', '0001_initial.py', 'models.py']",['3654c555326b083bdb000703efe6cc3dc5374e43'],459,621,1080,41,0.8656716417910447,1.0,1.0
6560de501a55e4c70139518a4f63f5bed1b4c6fd,"Implementation of dynamically loaded ""Web3Indexer"" classes for web3 sync

To avoid depending on syncing all transaction data obtained on the eth
node, we introduce the concept of a ""Web3Indexer"" classes which can be
called and run any kind of queries to the blockchain (via web3 client)
and record whatever Transaction and Block data it may be interested in.

In our case, we are mostly interested in keeping track of transactions
that involved any of the addresses of our custodial accounts. These
policies are implemented in the ethereum_money/policies/indexing
module.

For customization, a setting HUB20[""WEB3_INDEXERS""] on
settings.py can be defined and it should take a list of dotted paths
to the class that are to be loaded. The command
run_blockchain_indexers then creates one process for each indexer",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-08 15:10:11+02:00,-7200,2020-06-10 00:07:13+02:00,-7200,True,False,"['docker-compose.yml', '__init__.py', '__init__.py', 'sync_blockchain.py', 'managers.py', 'models.py', '__init__.py', 'indexing.py', 'handlers.py', 'run_blockchain_indexers.py', 'track_pending_payments.py', 'settings.py', 'signals.py', 'tasks.py', 'test_consumers.py', 'handlers.py', 'sync_account_transfers.py', 'models.py', '__init__.py', 'indexing.py', 'signals.py', 'tasks.py', 'pytest.ini']",['8ee87cf6b15c0944ea76384a5c04be429747c7bf'],200,463,663,23,0.744,1.0,1.0
91f454a88e5396ce700622a77941245756379ae6,Fix use of Transaction.fetch_by_hash in raiden.process_events,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-10 15:14:02+02:00,-7200,2020-06-10 15:14:02+02:00,-7200,True,False,['tasks.py'],['6560de501a55e4c70139518a4f63f5bed1b4c6fd'],4,5,9,1,0.0,0.0,1.0
64d5758bf699022e5e7337299bd802cf4359bfcf,"Clean up of some methods using for decoding/storing transactions

Also removed the sync_account_transfers. (Do not want to have multiple
commands to deal with fetching data from ethereum node)",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-11 03:53:40+02:00,-7200,2020-06-11 03:53:40+02:00,-7200,True,False,"['models.py', 'sync_account_transfers.py', 'models.py']",['91f454a88e5396ce700622a77941245756379ae6'],65,13,78,3,0.14814814814814814,0.8888888888888888,0.25925925925925924
d97bdf3f8126e8760f77804ff2195c8fd2c2644d,Remove unused max_block_drift max_block_height settings,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-11 17:05:41+02:00,-7200,2020-06-11 17:05:41+02:00,-7200,True,False,['app_settings.py'],['64d5758bf699022e5e7337299bd802cf4359bfcf'],2,0,2,1,,,
0e8ec4e0354752238976e70057371166a6ec5a31,Rename blockchain_node_* ->  ethereum_node_* signals,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-11 17:12:23+02:00,-7200,2020-06-11 17:12:23+02:00,-7200,True,False,"['handlers.py', 'indexing.py', 'signals.py', 'handlers.py', 'store.py']",['d97bdf3f8126e8760f77804ff2195c8fd2c2644d'],32,30,62,5,0.0,0.0,0.0
3b420e777a532059bd0d4c508b54854bab81df53,"Reafactor ethereum_wallet -> ethereum_money (AbstractEthereumAccount)

The Wallet model was only providing interface methods that can be
merged into the AbstractEthereumAccount. We can remove this module
without losing any functionality",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-11 18:19:32+02:00,-7200,2020-06-11 18:19:32+02:00,-7200,True,False,"['settings.py', '0001_initial.py', 'handlers.py', 'track_pending_payments.py', '0001_initial.py', 'accounting.py', 'payments.py', 'transfers.py', 'serializers.py', 'test_consumers.py', 'test_managers.py', 'test_models.py', 'test_views.py', 'admin.py', '0001_initial.py', 'models.py', 'tasks.py', 'base.py', 'test_models.py', 'typing.py', '__init__.py', 'admin.py', 'apps.py', 'factories.py', '0001_initial.py', '__init__.py', 'models.py', '__init__.py', 'base.py', 'test_models.py', '0001_initial.py']",['0e8ec4e0354752238976e70057371166a6ec5a31'],328,260,588,31,0.25,0.0,0.0
1fb6fa9ed98db114309ec72afcda98a293a2ee21,Rename signal blockchain_reorganization -> chain_reorganization,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-11 23:08:42+02:00,-7200,2020-06-11 23:09:57+02:00,-7200,True,False,"['handlers.py', 'signals.py']",['3b420e777a532059bd0d4c508b54854bab81df53'],3,3,6,2,,,
d57be10bae6ed8efc17e43456ea9911e295ff4b5,"Clean up of process to handle events from ethereum node / web3

To have a cleaner separation between data/logic from our system and
external systems (blockchain/raiden events), let's move the handling
of any web3-related operation into a separate module which can only
communicate with the django models either by calling them or by
passing data via specific signals.

The idea is that the django models *DO NOT* have any knowledge about
system that interacts with the external services.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-12 04:44:27+02:00,-7200,2020-06-13 01:16:33+02:00,-7200,True,False,"['docker-compose.yml', 'client.py', 'handlers.py', 'models.py', 'signals.py', 'tasks.py', 'run_blockchain_indexers.py', 'run_event_listeners.py', 'settings.py']",['1fb6fa9ed98db114309ec72afcda98a293a2ee21'],82,174,256,9,0.31343283582089554,0.5522388059701493,0.9552238805970149
9454c18d0c39d8477da67d5142a427545542d125,Listen events for erc20/ETH transfers and send appropriate signals,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-15 04:07:01+02:00,-7200,2020-06-15 04:07:01+02:00,-7200,True,False,"['client.py', 'handlers.py', 'signals.py', 'run_event_listeners.py', 'settings.py', 'client.py', '__init__.py', 'indexing.py', 'signals.py']",['d57be10bae6ed8efc17e43456ea9911e295ff4b5'],125,283,408,9,0.6952380952380952,1.0,0.47619047619047616
0d910b3d481d0e5cf82e33cfc4200883fb92a95f,"Get rid of {Block,Transaction}.fetch_by_hash model functions

Part of the effort to refactor and to remove any web3 logic out of the
django models and make all functions that depend on web3 part of the
client.py module",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-16 00:36:39+02:00,-7200,2020-06-16 00:36:39+02:00,-7200,True,False,"['client.py', 'models.py', 'tasks.py']",['9454c18d0c39d8477da67d5142a427545542d125'],23,26,49,3,0.0,0.0,1.0
e38699f146c2c1a883e34fdef23afa38db925bb3,"Simplified processing of incoming transfers

Moved logic to ethereum_money.client module, where a single function
listens to every new block that is added to the blockchain and looks
for transactions involving:

 - Any of our accounts as either sender or recipient of ETH transfer
 - Any of our accounts as either sender or recipient of any ERC20
   token transfer with a token in the database (i.e, tracked tokens)",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-16 03:09:39+02:00,-7200,2020-06-16 15:33:46+02:00,-7200,True,False,"['client.py', 'handlers.py', 'models.py', 'indexing.py', 'signals.py', 'tasks.py', 'settings.py', 'client.py', 'signals.py', 'tasks.py']",['0d910b3d481d0e5cf82e33cfc4200883fb92a95f'],188,83,271,10,0.0,0.0,0.36065573770491804
d37b911757f63b44d6c7a74d2daca9cea6720e9f,"Add command to sync whole blockchain

Not really required to run the payment processing anymore, but in case
someone wants to control all transaction history of any given account,
the only easy way to get it is by replicating the whole chain in the database",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-17 19:39:42+02:00,-7200,2020-06-17 19:39:42+02:00,-7200,True,False,"['app_settings.py', 'client.py', 'sync_blockchain.py', 'models.py', '__init__.py', 'indexing.py', 'tasks.py', 'run_event_listeners.py', 'utils.py', 'client.py']",['e38699f146c2c1a883e34fdef23afa38db925bb3'],175,89,264,10,0.40425531914893614,0.0,0.1702127659574468
cabdced7e75f3cc7b1480feb4b08b220ed3b7d2a,Change blockchain_payment_sent -> incoming_transfer_broadcast signal,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-19 05:05:06+02:00,-7200,2020-06-19 05:05:06+02:00,-7200,True,False,"['handlers.py', '__init__.py', 'settings.py', 'test_consumers.py', 'client.py', 'signals.py', 'tasks.py']",['d37b911757f63b44d6c7a74d2daca9cea6720e9f'],147,123,270,7,1.0,0.9166666666666666,0.0
c26225c09ce1ce10570be3d4d6f552b2d1db3960,Rename event listener functions,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-19 05:19:04+02:00,-7200,2020-06-19 05:19:04+02:00,-7200,True,False,"['settings.py', 'client.py']",['cabdced7e75f3cc7b1480feb4b08b220ed3b7d2a'],51,52,103,2,1.0,1.0,0.0
cc5d0f202ca2f683e6014e796b4e4f891bf9e2b0,Add model to handle/generate HD Wallets,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-21 04:34:46+02:00,-7200,2020-06-21 04:34:46+02:00,-7200,True,False,"['settings.py', '0001_initial.py', '0001_initial.py', 'test_models.py', 'admin.py', 'app_settings.py', 'factories.py', '0001_initial.py', 'models.py', 'base.py', 'test_models.py', '0001_initial.py', 'pytest.ini', 'requirements.txt']",['eb2eed359e7a4583dbbbed44f13233d201a0613b'],282,827,1109,14,1.0,1.0,1.0
8c70cbcd5ab0da44599a0c506ce3b7e0bd6d0ac5,"Change Transaction model. Add web3 mock responses

To make a transaction, some of its relevant data comes from web3
transaction receipt (logs, gas used) and some from the transaction
data (input, value). To make it simpler, the transaction model needs
to have both these parameters provided to Transaction.make

Based on factory for models, this commit introduces factories that
generate web3 data. With those we can then write unit tests for the
client functions.

Ideally, these would be the basis for a ""fake"" web3 provider that
could then be used to replace the HTTPProvider used in production.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-23 14:44:42+02:00,-7200,2020-06-30 07:01:15+02:00,-7200,True,False,"['docker-compose.yml', 'app_settings.py', 'client.py', 'base.py', 'handlers.py', 'sync_blockchain.py', '0001_initial.py', 'models.py', 'mocks.py', 'handlers.py', 'run_event_listeners.py', 'track_pending_payments.py', '0001_initial.py', 'accounting.py', '__init__.py', 'base.py', '__init__.py', 'test_consumers.py', 'test_managers.py', 'test_models.py', 'test_views.py', 'test_web3_client.py', 'views.py', 'client.py', 'load_tracked_tokens.py', 'models.py', 'serializers.py', 'mocks.py', 'views.py', 'sync_raiden.py', 'tasks.py']",['cc5d0f202ca2f683e6014e796b4e4f891bf9e2b0'],252,421,673,31,0.7857142857142857,1.0,0.047619047619047616
cd7bcf81aa56d9ab06100e5cca2b20a7e4d78e6f,Add bumpversion,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-30 07:04:59+02:00,-7200,2020-06-30 07:04:59+02:00,-7200,True,False,"['.bumpversion.cfg', 'requirements.txt']",['8c70cbcd5ab0da44599a0c506ce3b7e0bd6d0ac5'],1,9,10,2,,,
e1352a9afb84e2a179a03c9a08b904e5a5f490a0,Bump version: 0.1.3 → 0.2.0,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-06-30 07:05:03+02:00,-7200,2020-06-30 07:05:03+02:00,-7200,True,False,"['.bumpversion.cfg', 'setup.py']",['cd7bcf81aa56d9ab06100e5cca2b20a7e4d78e6f'],2,2,4,2,,,
862e016b450538dff2d1523276a79ccd8e690d46,"Add better handling to ethereum_money event listener functions

Also making the logger a bit less verbose",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-07-03 13:39:03+02:00,-7200,2020-07-03 13:39:03+02:00,-7200,True,False,['client.py'],['e1352a9afb84e2a179a03c9a08b904e5a5f490a0'],10,11,21,1,1.0,1.0,0.0
b9fe25676b3786ecb0035e47608ae7829484a575,"Add event listener to get all token transfers

Introduce an event listener that does not run on an infinite loop, but
that can look for all blocks and transactions that are token
transfers, and record those that affect one of our accounts",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-07-05 23:15:15+02:00,-7200,2020-07-05 23:15:15+02:00,-7200,True,False,"['models.py', 'settings.py', 'client.py']",['862e016b450538dff2d1523276a79ccd8e690d46'],2,58,60,3,0.0,0.35555555555555557,0.35555555555555557
7dc456673b5065fdad1851ee148eb812bc38181c,"Add command to record a transaction

For the case where we want to manually record one or more transactions in the
database, the command record_transactions can help with that. Simply
pass the hex strings representing the transactions you want to save
and it will be recorded (provided that it can get the data and receipt
from the blockchain)

This is useful if you are using a wallet that you have already
generated and would like to add the records from it. It can also help
the commands that track token transfers - just pass the first token
transfer that you are interested in, and the event listener will be
able to start the scan from that transaction instead of the genesis block.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-07-05 23:17:23+02:00,-7200,2020-07-05 23:17:23+02:00,-7200,True,False,['record_transactions.py'],['b9fe25676b3786ecb0035e47608ae7829484a575'],0,42,42,1,0.09523809523809523,1.0,0.09523809523809523
4683865be92e5e920d8f9c1db8f15ffb0b92524c,"Add event listener to get all txs related to current accounts

Requests all block data from the blockchain and saves transactions
where the `to` or `from` addresses are the same as any of our
accounts.

Event listener has not been added by default because it does take
quite a lot of time to run and is only effective for recording ETH
transfers.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-07-06 02:13:41+02:00,-7200,2020-07-06 02:13:41+02:00,-7200,True,False,"['sync_accounts.py', 'client.py']",['7dc456673b5065fdad1851ee148eb812bc38181c'],1,70,71,2,0.9318181818181818,1.0,0.3181818181818182
2157426e39db0a2a78af53e56b3dad9709f6af7a,Bump version: 0.2.0 → 0.2.1,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-07-06 02:17:51+02:00,-7200,2020-07-06 02:17:51+02:00,-7200,True,False,"['.bumpversion.cfg', 'setup.py']",['862e016b450538dff2d1523276a79ccd8e690d46'],2,2,4,2,,,
c5eb548582020f5907c40e11f1b357da92be5097,Add missing init files for blockchain commands,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-07-06 03:04:33+02:00,-7200,2020-07-06 03:04:33+02:00,-7200,True,False,"['__init__.py', '__init__.py']",['daed75776042480893b734c8317ae711d34b5581'],0,0,0,2,,,
44ab4c1ce16d321d9bdc136b4462ee1f0fb20db0,"Documentation site

Add first set of pages for documentation site. Pages with text to
explain what/why to use Hub20 and basic skeleton of pages that are yet
to be written",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-07-08 00:50:09+02:00,-7200,2020-07-08 01:10:26+02:00,-7200,True,False,"['.gitlab-ci.yml', 'architecture.md', 'features.md', 'index.md', 'footer.html', 'use_cases.md', 'users.md', 'mkdocs.yml']",['c5eb548582020f5907c40e11f1b357da92be5097'],15,276,291,8,,,
b885695a17c64d06e881ab189b7e6ed7af0f821c,Simple reorder of mkdocs configuration attributes,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-07-09 12:57:21+02:00,-7200,2020-07-09 12:57:21+02:00,-7200,True,False,['mkdocs.yml'],['44ab4c1ce16d321d9bdc136b4462ee1f0fb20db0'],16,16,32,1,,,
c0b731b46b35402e07dc96195d92604d345e05f1,"Docker-compose file now is setup for simple development

Removed all volume definitions and made the base docker-compose
responsible only in defining the services.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-07-10 19:20:36+02:00,-7200,2020-07-10 19:20:36+02:00,-7200,True,False,"['docker-compose.yml', 'sample.env', 'getting_started.md', 'overview.md', 'mkdocs.yml']",['b885695a17c64d06e881ab189b7e6ed7af0f821c'],64,90,154,5,,,
fd70eca50a13c3ae6e6429e1f094e41245bb3ce9,"Add site_url to mkdocs

Search results depend on it.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-07-10 19:23:54+02:00,-7200,2020-07-10 19:23:54+02:00,-7200,True,False,['mkdocs.yml'],['c0b731b46b35402e07dc96195d92604d345e05f1'],0,1,1,1,,,
992c141b9c0861b6cb332ba69b03dbfd125623c7,"Updated docker-compose and pytest for CI testing
Add CI setup on gitlab",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-07-11 00:45:48+02:00,-7200,2020-08-20 02:19:02+02:00,-7200,True,False,"['.gitignore', '.gitlab-ci.yml', 'docker-compose.yml', 'ci.yml', 'base.env', 'ci.env', 'test_web3_client.py', 'pytest.ini']",['fd70eca50a13c3ae6e6429e1f094e41245bb3ce9'],42,93,135,8,,,
847e59792b30cc5409eeb8fa67c9fe953581f081,"Updated docker-compose and pytest for CI testing
Add CI configuration file for gitlab",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-07-11 00:45:48+02:00,-7200,2020-08-20 02:20:13+02:00,-7200,True,False,"['.gitignore', '.gitlab-ci.yml', 'docker-compose.yml', 'ci.yml', 'base.env', 'ci.env', 'test_web3_client.py', 'pytest.ini']",['fd70eca50a13c3ae6e6429e1f094e41245bb3ce9'],42,93,135,8,,,
b9e470881bebbaaedc006e18a2a9788382a6c666,Reverting to using one single .env file,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-08-21 00:15:27+02:00,-7200,2020-08-21 00:15:27+02:00,-7200,True,False,"['.gitlab-ci.yml', 'docker-compose.yml', 'ci.yml', 'ci.env']",['847e59792b30cc5409eeb8fa67c9fe953581f081'],15,31,46,4,,,
3b28f7b79efd0922a98c8ced10b3947c21437c5e,Test on CI trigger for feature branch,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-08-21 01:03:23+02:00,-7200,2020-08-21 01:03:23+02:00,-7200,True,False,['.gitlab-ci.yml'],['b9e470881bebbaaedc006e18a2a9788382a6c666'],1,1,2,1,,,
9178e2006754e47e725bf21b2be9061feb4599b4,"Removed unused env file and back with .env on docker-compose

Having multiple files with environment variables is not a bad idea,
but seems like unnecessary complexity. Let's stick with one single
file placed at .env, and the CI and dev environments can make symlinks
to the proper files provided at the source repository.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-08-21 02:41:45+02:00,-7200,2020-08-21 02:41:45+02:00,-7200,True,False,"['.dockerignore', '.gitlab-ci.yml', 'docker-compose.yml', 'base.env', 'sample.env']",['3b28f7b79efd0922a98c8ced10b3947c21437c5e'],40,7,47,5,,,
220a5fea76626a36e7b5f91a974ccad7e4048966,Raiden model should derive from KeystoreAccount,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-08-25 14:20:25+02:00,-7200,2020-08-25 14:20:25+02:00,-7200,True,False,"['handlers.py', '0001_initial.py', 'payments.py', '0002_auto_20200825_1045.py', 'models.py']",['81bebb87e3654d9efe8bca3b8ccaaacbce237b10'],8,35,43,5,1.0,0.0,0.0
c7feef29406d9d9568aa97277471dc056448e3d6,"Use pip-compile to manage dependencies and clean up some modules

Introducing raiden as a dependency revealed an extraordinary number of
dependencies that were conflicting. This commit brings a
requirements.in file that defines all dependencies and we start using
pip-compile to solve all constraints.

Some packages (ethtoken and attributedict) were causing too much
trouble and it was easier to remove them and refactor the provided
functionality instead of relying on them. ethtoken was only being used
for the EIP20_ABI definition and attributedict could be substituted by
a similar data structure provided by web3",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-08-26 23:14:11+02:00,-7200,2020-08-26 23:14:11+02:00,-7200,True,False,"['mocks.py', 'test_web3_client.py', 'abi.py', 'client.py', 'models.py', 'requirements.in', 'requirements.txt']",['220a5fea76626a36e7b5f91a974ccad7e4048966'],43,341,384,7,,,
5cad88b89af72805db5fc80685f1154e959200bc,"Ignore Django 4. deprecation warnings from pytest

The warnings are being generated due to third-parties, nothing we can
do at the moment",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-08-26 23:49:10+02:00,-7200,2020-08-26 23:49:10+02:00,-7200,True,False,['pytest.ini'],['c7feef29406d9d9568aa97277471dc056448e3d6'],0,1,1,1,,,
f8cc3e99828cc19873a4681d09098a630d257e53,"Start raiden process based on data stored on hub20

First step of integration is to get the a Raiden client started with
the configuration parameters stored on hub20. More specifically, we
have:

 - Account info: the private key is stored on the database - part of
   the KeystoreAccount model.
 - ethereum node: the same one that is used by hub20

Raiden makes a lot of assumptions about how it is run and operated. It
expects to be run called via main and never embedded from a different
process (due to the required gevent monkey patching?). To deal with
this, we call raiden via subprocess.call and pass all the
configuration as part of the environment.

There is also the issue that Raiden currently assumes that the private
key from the account used comes via a password-protected keystore
file. To overcome this, the process that starts raiden writes two
temporary files with the required data.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-08-27 00:10:29+02:00,-7200,2020-08-27 00:10:29+02:00,-7200,True,False,"['docker-compose.yml', 'settings.py', '__init__.py', 'raiden.py', 'settings.py', 'models.py', 'client.py', 'exceptions.py', 'run_raiden.py', '0001_initial.py', '0002_auto_20200825_1045.py', 'models.py', 'requirements.txt']",['5cad88b89af72805db5fc80685f1154e959200bc'],45,174,219,13,0.24,1.0,0.5466666666666666
c549cff4063f42c8b35666e8b0141c8c7f6d1e7f,"More checks to ensure preconditions are met to start raiden node

This commit ensures that the raiden node:

 - has enough ETH on its account so that it can do all the required
operations (deposit/withdrawal, open/settle channels, etc)

 - has the required amount of RDN (called ""service token"" by the
contract code due its usage with the ""Raiden Service Bundle"") locked
with the User Deposit Contract

This commit also provides functions to run the blockchain operations
related to the deposit contract, as well as provide a django command
for minting tokens (on testnets)",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-08-27 22:25:36+02:00,-7200,2020-08-27 22:25:36+02:00,-7200,True,False,"['app_settings.py', 'client.py', 'raiden.py', 'settings.py', 'client.py', 'contracts.py', 'exceptions.py', 'mint_test_tokens.py', '__init__.py', 'test_contracts.py']",['f8cc3e99828cc19873a4681d09098a630d257e53'],42,242,284,10,0.6403508771929824,1.0,0.20175438596491227
bdbcb284793803e392d876ad7188ed90e9968967,Upgraded dependencies,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-01 23:48:04+02:00,-7200,2020-09-01 23:48:04+02:00,-7200,True,False,['requirements.txt'],['c549cff4063f42c8b35666e8b0141c8c7f6d1e7f'],6,6,12,1,,,
05a53f90235031c7d92cb42e263309ad7d3ba3c1,"Add service deposit

For Raiden to run, it requires a minimum amount of service
tokens (RDN) to be deposited in a contract that can be accessed by
the Raiden Service Bundle.

This commit brings the whole functionality that allows this deposit
to be executed. It assumes that the account used by Raiden already has
the service tokens. An API endpoint is added that lets admins make a
request for a deposit of an specified amount. This saves a
`ServiceDeposit` model and a signal handler takes any `ServiceDeposit`
and initiates the `send_service_deposit` celery task.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-02 03:36:21+02:00,-7200,2020-09-02 12:45:15+02:00,-7200,True,False,"['urls.py', 'client.py', 'exceptions.py', 'raiden.py', 'client.py', 'api.py', 'client.py', 'factories.py', 'handlers.py', 'run_raiden.py', '0002_auto_20200901_2137.py', 'models.py', 'serializers.py', 'tasks.py', 'test_views.py', 'views.py']",['bdbcb284793803e392d876ad7188ed90e9968967'],33,337,370,16,0.6621621621621622,1.0,0.6621621621621622
edf497e75b84fcc7d4cf284efb9fe059d57e3b2b,"Refactor of modules related to raiden.client functionality

raiden.client needs to provide functionality related to blockchain
activities (token network contract interaction, transactions related
to user deposit contract, etc) as well as direct info from the Raiden node.

This PR mostly moves things around to get all functionality that
interfaces with the outside world to raiden.client module",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-02 14:31:39+02:00,-7200,2020-09-02 14:31:39+02:00,-7200,True,False,"['raiden.py', '__init__.py', 'blockchain.py', 'node.py', 'contracts.py', 'sync_raiden.py', 'serializers.py', 'tasks.py', 'test_contracts.py']",['05a53f90235031c7d92cb42e263309ad7d3ba3c1'],143,142,285,9,1.0,0.0,1.0
b98478e6fc34ddecc0ab31d639b345869354c789,"Endpoint for submitting deposit to raiden service and signal handler

Added another blockchain event listener to detect deposit transactions
to service contract.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-04 00:38:25+02:00,-7200,2020-09-04 00:38:25+02:00,-7200,True,False,"['serializers.py', 'settings.py', 'client.py', 'models.py', 'serializers.py', 'typing.py', 'blockchain.py', 'handlers.py', '0002_auto_20200901_2137.py', '0002_auto_20200902_2313.py', 'models.py', 'serializers.py', 'signals.py', 'tasks.py', 'views.py']",['edf497e75b84fcc7d4cf284efb9fe059d57e3b2b'],121,230,351,15,0.23529411764705882,0.5686274509803921,0.5490196078431373
9a49684303132c68c137d649e4f87c7143c14b62,Refactor from raiden.contracts into raiden.client.blockchain,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-04 00:39:48+02:00,-7200,2020-09-04 00:39:48+02:00,-7200,True,False,['mint_test_tokens.py'],['b98478e6fc34ddecc0ab31d639b345869354c789'],2,1,3,1,,,
c88bc58c6653efec7f9e76404ffe92b66be90891,Fix error when celery dies before DB is started on docker-compose,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-04 00:40:24+02:00,-7200,2020-09-04 00:40:24+02:00,-7200,True,False,['docker-compose.yml'],['9a49684303132c68c137d649e4f87c7143c14b62'],1,6,7,1,,,
a694af96488afe738aa562d320136ed9e3b1cb53,Use pycodestyle as syntax checker instead of plain pep8,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-04 00:51:33+02:00,-7200,2020-09-04 00:51:33+02:00,-7200,True,False,['setup.cfg'],['c88bc58c6653efec7f9e76404ffe92b66be90891'],1,1,2,1,,,
010999e116070c6f864812e4a03699d294b727e0,Add endpoint to list all open raiden channels,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-04 16:31:13+02:00,-7200,2020-09-04 18:21:06+02:00,-7200,True,False,"['api.py', '0003_auto_20200904_1612.py', 'models.py', 'serializers.py', 'views.py']",['d17fac1b261b0ff591d36d98e6bc494bf1e26c96'],15,78,93,5,1.0,1.0,1.0
ecdab584e46d0cf906c8d814c4b68b5664da07e3,"API for raiden operations

Adds endpoints for listing token networks and channels, as well as
endpoints for depositing and withdrawing for channels.

Each operation on the API simply creates a ""RaidenManagementOrder""
entry, which should then on creation be scheduled as a background task
that executes the actual operation.

TODO: If any blockchain transaction comes out of this operation, we
should detect them and save in the RaidenManagementOrderResult entry",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-08 15:06:03+02:00,-7200,2020-09-08 15:06:03+02:00,-7200,True,False,"['handlers.py', 'test_managers.py', 'test_models.py', 'admin.py', 'api.py', 'blockchain.py', 'node.py', 'factories.py', 'handlers.py', 'mint_test_tokens.py', 'run_raiden.py', 'sync_raiden.py', '0004_auto_20200904_2233.py', '0005_auto_20200907_1600.py', 'models.py', 'serializers.py', 'tasks.py', '__init__.py', 'test_views.py', '__init__.py', 'test_contracts.py', 'test_views.py', 'views.py']",['010999e116070c6f864812e4a03699d294b727e0'],241,697,938,23,0.9910714285714286,1.0,0.8303571428571429
a38696d810d11ea4c7e678454c7f39c7de528d0a,"Change method of generated passphrases for temporary keystore files

To run raiden, we need to generate a keystore file with the private
key from the account that we want to use.

The first method used a randomly generated passphrase every time. This
works but we might end up with multiple keystore files if the process
fails and restarts.

To remediate that and still keep some things secure, the passphrase is
now generated as a SHA256 hash of django's SECRET KEY.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-09 12:42:00+02:00,-7200,2020-09-09 12:42:00+02:00,-7200,True,False,['run_raiden.py'],['ecdab584e46d0cf906c8d814c4b68b5664da07e3'],2,2,4,1,,,
20b94a90b6edb150dea58e528aea5ebc808bea09,"Add views to API to handle joining/leaving token networks in Raiden

POST to `/api/raiden/networks/<network_address>/join` with the amount
desired of funds will create a background task that gets Raiden to
join the network

DELETE on `/api/raiden/networks/<network_address>` makes Raiden leave
the token network, settling and closing all channels on that token network",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-09 12:57:24+02:00,-7200,2020-09-09 15:10:04+02:00,-7200,True,False,"['api.py', 'node.py', 'handlers.py', 'models.py', 'serializers.py', 'tasks.py', 'views.py']",['a38696d810d11ea4c7e678454c7f39c7de528d0a'],55,122,177,7,0.7115384615384616,1.0,0.34615384615384615
36457b7b677c5c3368159767a6998b264a255940,"Add flag to EthereumToken to allow tracking of listed tokens only

In order to better control which tokens operators want to track and
use for transactions, an attribute ""is_listed"" is added to the
EthereumToken model.

ETH is always marked as listed.

A model manager `EthereumToken.tracked` is added to filter only those
tokens that are being marked as listed.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-14 12:57:21+02:00,-7200,2020-09-14 12:57:21+02:00,-7200,True,False,"['settings.py', 'client.py', 'load_tracked_tokens.py', '0002_ethereumtoken_is_listed.py', 'models.py', 'serializers.py', 'views.py']",['a6b15d1a58970b7853ea5cbe3496a2a0973f9192'],10,40,50,7,0.7777777777777778,0.7777777777777778,0.7777777777777778
e35fd29a0e63801ceeb1ecdf2c5d0cc385c61c5e,"Refactor Transfer method, implementation of Raiden transfer

The main goal of the implementation is to place as much of the
functionality related to interacting with external systems into the
corresponding `client` modules.

In that spirit, this commit adds the implementation transfers via
RaidenClient and EthereumClient classes. The ExternalTransfer model
then defines what is the best method to complete the
transfer (currently, it assumes Raiden will always be used if the
destination address has an open channel on the TokenNetwork)

The idea of StatusModels to control the state of the transfer was
dropped in favor of Execution/Confirmation/Cancelation/Failure which
are more directly related to the flow and that are more easily queried
for the handler methods.

Testing:

Still a lot of work to do to ensure that all unit tests do not rely on
web3 proper, but this commit already introduces a proper
`Web3Mock` object that can be used to test functionality that relies
on client modules.

REST API: Changes in tokens

Token API Endpoints need to use their address for representation

The code is not unique, so to avoid any possibility of confusion we
must use the address to represent a token resourse",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-14 13:08:43+02:00,-7200,2020-09-15 02:36:17+02:00,-7200,True,False,"['ci.env', 'client.py', 'signals.py', 'mocks.py', 'typing.py', 'api.py', 'handlers.py', '0002_auto_20200911_0014.py', '0003_auto_20200913_2210.py', 'accounting.py', 'transfers.py', 'serializers.py', 'settings.py', 'tasks.py', 'test_managers.py', 'test_models.py', 'test_web3_client.py', 'views.py', 'admin.py', 'client.py', 'factories.py', 'models.py', 'signals.py', 'base.py', 'test_models.py', 'typing.py', 'node.py', 'exceptions.py', 'handlers.py', '0006_auto_20200913_2210.py', 'models.py', 'serializers.py', 'signals.py']",['36457b7b677c5c3368159767a6998b264a255940'],405,748,1153,33,0.9036144578313253,0.6867469879518072,0.27710843373493976
c7c162d65028c75d7173b80a64d2650d5a0e46e8,Upgrading python dependencies,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-15 10:57:59+02:00,-7200,2020-09-15 10:57:59+02:00,-7200,True,False,['requirements.txt'],['e35fd29a0e63801ceeb1ecdf2c5d0cc385c61c5e'],7,7,14,1,,,
aae744d546a520db6431e52ddb8491841d1abf2b,Move server code to separate folder,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-15 17:50:46+02:00,-7200,2020-09-15 17:50:46+02:00,-7200,True,False,"['Dockerfile', '.bumpversion.cfg', '__init__.py', '__init__.py', 'celery.py', 'middleware.py', 'routing.py', 'settings.py', 'urls.py', 'wsgi.py', '__init__.py', '__init__.py', 'app_settings.py', 'apps.py', 'choices.py', 'client.py', 'constants.py', 'exceptions.py', '__init__.py', 'base.py', 'providers.py', 'fields.py', 'handlers.py', '__init__.py', '__init__.py', 'record_transactions.py', 'sync_blockchain.py', 'managers.py', '0001_initial.py', '__init__.py', 'models.py', 'serializers.py', 'signals.py', 'tasks.py', 'mocks.py', 'typing.py', 'validators.py', '__init__.py', 'admin.py', 'api.py', 'apps.py', 'choices.py', 'consumers.py', '__init__.py', 'accounting.py', 'base.py', 'payments.py', 'store.py', 'transfers.py', 'handlers.py', '__init__.py', 'raiden.py', '__init__.py', '__init__.py', 'run_event_listeners.py', 'sync_accounts.py', 'utils.py', '0001_initial.py', '0002_auto_20200911_0014.py', '0003_auto_20200913_2210.py', '__init__.py', '__init__.py', 'accounting.py', 'managers.py', 'payments.py', 'store.py', 'transfers.py', 'serializers.py', 'settings.py', 'signals.py', 'tasks.py', '__init__.py', '__init__.py', 'test_consumers.py', 'test_managers.py', 'test_models.py', 'test_views.py', 'test_web3_client.py', 'views.py', '__init__.py', 'abi.py', 'admin.py', 'api.py', 'app_settings.py', 'apps.py', 'client.py', 'factories.py', 'tokens.json', 'handlers.py', '__init__.py', '__init__.py', 'load_tracked_tokens.py', '0001_initial.py', '0002_ethereumtoken_is_listed.py', '__init__.py', 'models.py', 'serializers.py', 'signals.py', '__init__.py', 'base.py', 'mocks.py', 'test_models.py', 'test_views.py', 'typing.py', 'views.py', '__init__.py', 'admin.py', 'api.py', 'apps.py', '__init__.py', 'blockchain.py', 'node.py', 'contracts.py', 'exceptions.py', 'factories.py', 'handlers.py', '__init__.py', '__init__.py', 'mint_test_tokens.py', 'run_raiden.py', 'sync_raiden.py', '0001_initial.py', '0002_auto_20200902_2313.py', '0003_auto_20200904_1612.py', '0004_auto_20200904_2233.py', '0005_auto_20200907_1600.py', '0006_auto_20200913_2210.py', '__init__.py', 'models.py', 'serializers.py', 'signals.py', 'tasks.py', '__init__.py', '__init__.py', 'test_contracts.py', 'test_views.py', 'views.py', 'pyproject.toml', 'pytest.ini', 'requirements-dev.txt', 'requirements.in', 'requirements.txt', 'setup.cfg', 'setup.py']",['3d27affc19f16bbed8998441cb4d3a227b3665a5'],18,0,18,144,,,
8c0c3fcd5bfb1670efe800424f8af09710a7e415,Renaming 'server' to 'backend',Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-16 00:03:07+02:00,-7200,2020-09-16 00:05:06+02:00,-7200,True,False,"['.dockerignore', '.bumpversion.cfg', 'Dockerfile', 'README.md', '__init__.py', '__init__.py', 'celery.py', 'middleware.py', 'routing.py', 'settings.py', 'urls.py', 'wsgi.py', '__init__.py', '__init__.py', 'app_settings.py', 'apps.py', 'choices.py', 'client.py', 'constants.py', 'exceptions.py', '__init__.py', 'base.py', 'providers.py', 'fields.py', 'handlers.py', '__init__.py', '__init__.py', 'record_transactions.py', 'sync_blockchain.py', 'managers.py', '0001_initial.py', '__init__.py', 'models.py', 'serializers.py', 'signals.py', 'tasks.py', 'mocks.py', 'typing.py', 'validators.py', '__init__.py', 'admin.py', 'api.py', 'apps.py', 'choices.py', 'consumers.py', '__init__.py', 'accounting.py', 'base.py', 'payments.py', 'store.py', 'transfers.py', 'handlers.py', '__init__.py', 'raiden.py', '__init__.py', '__init__.py', 'run_event_listeners.py', 'sync_accounts.py', 'utils.py', '0001_initial.py', '0002_auto_20200911_0014.py', '0003_auto_20200913_2210.py', '__init__.py', '__init__.py', 'accounting.py', 'managers.py', 'payments.py', 'store.py', 'transfers.py', 'serializers.py', 'settings.py', 'signals.py', 'tasks.py', '__init__.py', '__init__.py', 'test_consumers.py', 'test_managers.py', 'test_models.py', 'test_views.py', 'test_web3_client.py', 'views.py', '__init__.py', 'abi.py', 'admin.py', 'api.py', 'app_settings.py', 'apps.py', 'client.py', 'factories.py', 'tokens.json', 'handlers.py', '__init__.py', '__init__.py', 'load_tracked_tokens.py', '0001_initial.py', '0002_ethereumtoken_is_listed.py', '__init__.py', 'models.py', 'serializers.py', 'signals.py', '__init__.py', 'base.py', 'mocks.py', 'test_models.py', 'test_views.py', 'typing.py', 'views.py', '__init__.py', 'admin.py', 'api.py', 'apps.py', '__init__.py', 'blockchain.py', 'node.py', 'contracts.py', 'exceptions.py', 'factories.py', 'handlers.py', '__init__.py', '__init__.py', 'mint_test_tokens.py', 'run_raiden.py', 'sync_raiden.py', '0001_initial.py', '0002_auto_20200902_2313.py', '0003_auto_20200904_1612.py', '0004_auto_20200904_2233.py', '0005_auto_20200907_1600.py', '0006_auto_20200913_2210.py', '__init__.py', 'models.py', 'serializers.py', 'signals.py', 'tasks.py', '__init__.py', '__init__.py', 'test_contracts.py', 'test_views.py', 'views.py', 'pyproject.toml', 'pytest.ini', 'requirements-dev.txt', 'requirements.in', 'requirements.txt', 'setup.cfg', 'setup.py']",['aae744d546a520db6431e52ddb8491841d1abf2b'],1,58,59,146,,,
acec3d9a11fd6dfa5a934f0d676f16ddd28f24d1,README file needs to be stored inside python top package to be used as part of the description,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-16 00:06:30+02:00,-7200,2020-09-16 00:06:30+02:00,-7200,True,False,"['README.md', 'README.md']",['8c0c3fcd5bfb1670efe800424f8af09710a7e415'],36,1,37,1,,,
dce53a8408f6b0256d27a2047875fb79401d1715,Docker compose configuration for frontend and backend services,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-16 00:09:47+02:00,-7200,2020-09-16 00:09:47+02:00,-7200,True,False,"['docker-compose.yml', 'ci.yml', 'dev.yml']",['acec3d9a11fd6dfa5a934f0d676f16ddd28f24d1'],6,146,152,3,,,
a8402ca7af4373aa7861234ba63b38f823213f47,frontend app based on vue-cli scaffold,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-16 00:09:54+02:00,-7200,2020-09-16 00:09:54+02:00,-7200,True,False,"['.dockerignore', '.gitignore', 'Dockerfile', 'README.md', 'babel.config.js', 'package.json', 'favicon.ico', 'index.html', 'App.vue', 'logo.png', 'HelloWorld.vue', 'main.js', 'yarn.lock']",['dce53a8408f6b0256d27a2047875fb79401d1715'],0,8702,8702,13,,,
40ff87381ff51e69cd9a8dbd6fd1933f8a6bfb25,Adding frontends ignore files to .gitignore,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-16 00:27:59+02:00,-7200,2020-09-16 00:27:59+02:00,-7200,True,False,"['.gitignore', '.gitignore']",['a8402ca7af4373aa7861234ba63b38f823213f47'],23,23,46,2,,,
8dfd2c6a8d395881e017666cd12de7a0bba6fe58,Integrate paper-dashboard and paper-kit2 (SCSS only) into frontend,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-16 12:25:49+02:00,-7200,2020-09-16 12:25:49+02:00,-7200,True,False,"['package-lock.json', 'package.json', 'App.vue', 'themify-icons.css', 'glyphicons-halflings-regular.448c34a.woff2', 'glyphicons-halflings-regular.e18bbf6.ttf', 'glyphicons-halflings-regular.f4769f9.eot', 'glyphicons-halflings-regular.fa27723.woff', 'themify.eot', 'themify.svg', 'themify.ttf', 'themify.woff', 'apple-icon.png', 'background.jpg', 'face-0.jpg', 'face-1.jpg', 'face-2.jpg', 'face-3.jpg', 'favicon.png', 'glyphicons-halflings-regular.8988968.svg', 'new_logo.png', 'tim_80x80.png', 'vue-logo.png', 'logo.png', 'paper-dashboard.scss', '_alerts.scss', '_buttons.scss', '_cards.scss', '_chartist.scss', '_checkbox-radio.scss', '_dropdown.scss', '_footers.scss', '_inputs.scss', '_misc.scss', '_mixins.scss', '_navbars.scss', '_responsive.scss', '_sidebar-and-main-panel.scss', '_tables.scss', '_typography.scss', '_variables.scss', '_buttons.scss', '_cards.scss', '_chartist.scss', '_icons.scss', '_inputs.scss', '_labels.scss', '_navbars.scss', '_sidebar.scss', '_tabs.scss', '_transparency.scss', '_vendor-prefixes.scss', 'paper-kit.scss', '_alerts.scss', '_badges.scss', '_buttons.scss', '_cards.scss', '_carousel.scss', '_checkbox-radio.scss', '_dropdown.scss', '_examples.scss', '_footers.scss', '_headers.scss', '_icons.scss', '_images.scss', '_inputs.scss', '_labels.scss', '_misc.scss', '_mixins.scss', '_modal.scss', '_navbars.scss', '_nucleo-icons.scss', '_nucleo-outline.scss', '_pagination.scss', '_progress-bars.scss', '_responsive.scss', '_sections.scss', '_sidebar.scss', '_sliders.scss', '_social-buttons.scss', '_switch.scss', '_tabs-navs.scss', '_tags.scss', '_tooltips-and-popovers.scss', '_typography.scss', '_variables.scss', '_card-plain.scss', '_card-profile.scss', '_card-register.scss', '_alerts.scss', '_buttons.scss', '_inputs.scss', '_labels.scss', '_navbars.scss', '_popovers.scss', '_tabs.scss', '_transparency.scss', '_vendor-prefixes.scss', '_plugin-bootstrap-switch.scss', '_plugin-datepicker.scss', '_plugin-nouislider.scss', '_plugin-perfect-scrollbar.scss', 'Button.vue', 'Card.vue', 'ChartCard.vue', 'StatsCard.vue', 'Dropdown.vue', 'HelloWorld.vue', 'formGroupInput.vue', 'PaperTable.vue', 'MovingArrow.vue', 'SideBar.vue', 'SidebarLink.vue', 'index.js', 'index.js', 'Content.vue', 'ContentFooter.vue', 'DashboardLayout.vue', 'MobileMenu.vue', 'TopNavbar.vue', 'main.js', 'Dashboard.vue', 'Icons.vue', 'Maps.vue', 'NotFoundPage.vue', 'Notifications.vue', 'NotificationTemplate.vue', 'TableList.vue', 'Typography.vue', 'UserProfile.vue', 'EditProfileForm.vue', 'MembersCard.vue', 'UserCard.vue', 'globalComponents.js', 'globalDirectives.js', 'paperDashboard.js', 'index.js', 'routes.js']",['40ff87381ff51e69cd9a8dbd6fd1933f8a6bfb25'],84,31031,31115,138,1.0,1.0,1.0
73dd1c2248033bdc8d1cea45df946d1a47d5f9ca,Use pushState on VueRouter,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-16 12:32:45+02:00,-7200,2020-09-16 12:33:36+02:00,-7200,True,False,['index.js'],['8dfd2c6a8d395881e017666cd12de7a0bba6fe58'],0,1,1,1,,,
53b77b7210ee68f8e3e69efcfe5eb04c69fb2a32,"Basic Views, components and store for authentication and signup",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-18 12:28:43+02:00,-7200,2020-09-18 12:28:43+02:00,-7200,True,False,"['package-lock.json', 'package.json', 'App.vue', 'auth.js', 'session.js', 'main.js', 'Login.vue', 'Register.vue', 'routes.js', 'auth.js', 'index.js', 'password.js', 'signup.js', 'types.js']",['73dd1c2248033bdc8d1cea45df946d1a47d5f9ca'],65,503,568,14,1.0,1.0,0.9170506912442397
092efaaa989e57627ce736ac1d4ec21cb723428c,Setup skeleton for top navigation bar,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-21 13:17:26+02:00,-7200,2020-09-21 14:38:13+02:00,-7200,True,False,"['DashboardLayout.vue', 'TopNavbar.vue', 'index.js', 'notifications.js', 'types.js']",['53b77b7210ee68f8e3e69efcfe5eb04c69fb2a32'],87,94,181,5,1.0,1.0,1.0
dacc70cac8d8df2952e46aeb9ccb008f6a45b047,Remove footer and replace with action menu (send/receive transfers),Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-21 14:38:25+02:00,-7200,2020-09-21 14:39:53+02:00,-7200,True,False,"['ActionMenu.vue', 'DashboardLayout.vue']",['092efaaa989e57627ce736ac1d4ec21cb723428c'],5,26,31,2,,,
00b60881d4d73fd78d9acee95368146cd428f94c,Changed Logo on Sidebar,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-21 15:39:27+02:00,-7200,2020-09-21 15:39:27+02:00,-7200,True,False,"['ethereum.svg', '_sidebar-and-main-panel.scss', 'SideBar.vue']",['dacc70cac8d8df2952e46aeb9ccb008f6a45b047'],38,49,87,3,,,
9614c5e859acad4253edc2651a6efc46a3ef541c,Basic Sidebar view navigation,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-22 01:02:46+02:00,-7200,2020-09-22 01:02:46+02:00,-7200,True,False,"['App.vue', '_sidebar-and-main-panel.scss', '_sidebar.scss', 'SideBar.vue', 'SidebarLink.vue', 'BaseLayout.vue', 'Content.vue', 'DashboardLayout.vue', 'routes.js', 'notifications.js', 'Exchange.vue', 'History.vue', 'Market.vue', 'Overview.vue', 'Stores.vue']",['00b60881d4d73fd78d9acee95368146cd428f94c'],318,224,542,15,,,
befece01f34eaf68d4574843b6232f87934437c4,"Rework base components styling structure

This is an attempt to get an uniform structure for the code.

""widgets"" should contain all vue components that deal with UI controls
and not deal with any styling.

Styling goes to ""assets/sass/toolkit""",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-23 17:37:17+02:00,-7200,2020-09-23 17:37:17+02:00,-7200,True,False,"['App.vue', 'ethereum.jpg', 'network.jpg', 'widgets.scss', 'ActionMenu.vue', 'index.js', 'BaseLayout.vue', 'DashboardLayout.vue', 'main.js', 'Login.vue', 'globalComponents.js', 'paperDashboard.js', 'routes.js', 'Button.vue', 'Card.vue', 'ChartCard.vue', 'StatsCard.vue', 'PaperTable.vue', 'formGroupInput.vue', 'index.js', 'ActionPanel.vue', 'MovingArrow.vue', 'SideBar.vue', 'SidebarLink.vue', 'index.js', 'Dropdown.vue']",['9614c5e859acad4253edc2651a6efc46a3ef541c'],77,121,198,26,1.0,1.0,1.0
d53f5b0f142048893f5a54e5ba037dcd85bc76f5,"Styling of login buttons from Action Panel

Working to get full separation between document structure and
presentation. Ideally the <style> tags on the page would be used only
to determine component position using mixins",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-23 19:14:48+02:00,-7200,2020-09-23 19:14:48+02:00,-7200,True,False,"['_buttons.scss', '_buttons.scss', 'widgets.scss', 'Login.vue']",['befece01f34eaf68d4574843b6232f87934437c4'],51,70,121,4,,,
4acec8f58fc453a4807e4ee0bde743ff370dafdd,Application-specific styling and Registration Page,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-24 02:54:08+02:00,-7200,2020-09-24 02:54:08+02:00,-7200,True,False,"['App.vue', 'auth.js', 'ethereum.jpg', 'app.scss', 'Login.vue', 'Register.vue', 'signup.js', 'Button.vue', 'Card.vue']",['d53f5b0f142048893f5a54e5ba037dcd85bc76f5'],96,121,217,9,1.0,1.0,0.6
9a7d2985db3a8865243a267cbf02f9d209fa89da,"Add allauth.socialaccount to installed apps

It seems to be required when deleting users (https://github.com/Tivix/django-rest-auth/issues/412)",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-24 12:57:44+02:00,-7200,2020-09-24 12:57:44+02:00,-7200,True,False,['settings.py'],['ffb5d7ea68f20f57f36cec34d905bf6d4e376316'],0,1,1,1,,,
947f2ee7c43b507aaff9ba026cc9bde34101a4d2,Styling of login/signup forms,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-24 14:52:21+02:00,-7200,2020-09-24 14:52:21+02:00,-7200,True,False,['app.scss'],['9a7d2985db3a8865243a267cbf02f9d209fa89da'],0,1,1,1,,,
31e734ce2539c66e5a40ea5f5ff8c5fbf2eec9de,"Basic Overview screen.

Simply displays list of tokens which the user has an open balance.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-25 13:10:48+02:00,-7200,2020-09-25 13:10:48+02:00,-7200,True,False,"['models.py', 'package-lock.json', 'package.json', 'account.js', 'tokens.js', 'TokenBalanceCard.vue', 'paperDashboard.js', 'account.js', 'index.js', 'Overview.vue']",['947f2ee7c43b507aaff9ba026cc9bde34101a4d2'],10,161,171,10,1.0,1.0,1.0
430594a274344de84a64a58acc5d0ae848a2c8dc,"Fix to `process_latest_transfers`

This function still needs to handle the case of ETH transfers",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-25 17:01:20+02:00,-7200,2020-09-25 17:01:20+02:00,-7200,True,False,['client.py'],['33f19dae449367916f5b4001867e26f348e6d596'],7,9,16,1,0.0,0.0,0.0
108bcfc58a630883a7c4bbccda8a82e55e62e317,"Adding endpoint to list all payments

Eventually any API endpoints related to incoming payments (without
information about deposit/order) should be only of concern of hub
operators. But given that the payment endpoint might still be used for
checkouts, they are kept open (not requiring any authentication)",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-25 21:51:47+02:00,-7200,2020-09-26 01:52:45+02:00,-7200,True,False,"['api.py', 'serializers.py', 'views.py']",['430594a274344de84a64a58acc5d0ae848a2c8dc'],16,31,47,3,1.0,1.0,1.0
8b69eb4d66248659129e6c37cf6449f7a16038b6,"Change in method to determine payment confirmation

Reflecting the changes done in the transfer modules, we now store a
PaymentConfirmation model to indicate the time that a payment was
confirmed.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-26 01:53:56+02:00,-7200,2020-09-26 02:09:34+02:00,-7200,True,False,"['client.py', 'handlers.py', '0004_paymentconfirmation.py', 'payments.py', 'signals.py', 'tasks.py']",['108bcfc58a630883a7c4bbccda8a82e55e62e317'],53,123,176,6,0.64,1.0,0.68
a7f764704f7852644b554c854453e857223724ec,"Fix to blockchain raiden event handler

Function `get_service_token` needs to be wrapped in a sync_to_async call",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-26 03:14:24+02:00,-7200,2020-09-26 03:14:24+02:00,-7200,True,False,['blockchain.py'],['8b69eb4d66248659129e6c37cf6449f7a16038b6'],1,1,2,1,,,
ebaa3210464daf14bbfebaa62e10779299e1a6e0,"Balance calculation now based on double-entry accounting method

The commit changes the model of keeping balances from a single list of
UserBalanceEntry records to a model based on double-entry accounting
principles. It is still to be properly implemented (does not do
verification of all entries and is only keeping track of internal user
accounting books) but we can determine a balance now by the checking
all credits and debits.

This model also tries to ensure that all credits and debits can be
traced back to one recorded model on the database. This can make it
easier for us to calculate balances without relying on state and make
it purely functional. For example, transfers generate a
TransferExecution and TransferConfirmation records. The sender of the
transfer will have the debit associated with the execution record. In
case of a blockchain transfer that fails (or a chain re-org), the
associated transaction will be deleted and cascade to the execution
record and the debit as well.

This approach also makes tests more functional and easier to
reason. To get a desired test condition, all it takes is to call a
factory that generates the data records.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-28 01:41:52+02:00,-7200,2020-09-28 01:41:52+02:00,-7200,True,False,"['app_settings.py', 'models.py', 'accounting.py', 'payments.py', '__init__.py', 'accounting.py', 'payments.py', 'store.py', 'transfers.py', 'raiden.py', '0001_initial.py', '0005_auto_20200926_2218.py', 'accounting.py', 'payments.py', 'transfers.py', 'test_models.py', 'views.py', 'factories.py', 'models.py', 'base.py']",['a7f764704f7852644b554c854453e857223724ec'],242,581,823,20,0.3793103448275862,1.0,0.9655172413793104
e5bfee4389de10898ef7828ece65b6db0f3d92de,Add entrypoint to list credit and debit entries from user's account,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-28 16:48:30+02:00,-7200,2020-09-29 01:22:14+02:00,-7200,True,False,"['api.py', 'payments.py', 'serializers.py', 'views.py']",['ebaa3210464daf14bbfebaa62e10779299e1a6e0'],8,99,107,4,1.0,1.0,1.0
2a79f2f4f7a252541172dbeacec64f01537bed6c,Client application is hydrated by App component,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-29 01:23:58+02:00,-7200,2020-09-29 01:23:58+02:00,-7200,True,False,"['App.vue', 'Overview.vue']",['e5bfee4389de10898ef7828ece65b6db0f3d92de'],9,13,22,2,,,
8bb2b3f33c5e28caee016465980ca5a2845c71c0,"Add basic table of transaction history

Implements related store and api endpoints.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-29 01:25:18+02:00,-7200,2020-09-29 01:25:18+02:00,-7200,True,False,"['account.js', 'account.js', 'types.js', 'utils.js', 'History.vue']",['2a79f2f4f7a252541172dbeacec64f01537bed6c'],10,148,158,5,1.0,1.0,1.0
04b157e1a8bec8e22e835a21a49264db859af99d,Adding basic table that displays current store data,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-29 22:40:53+02:00,-7200,2020-09-29 22:40:53+02:00,-7200,True,False,"['App.vue', 'stores.js', 'tokens.js', '_buttons.scss', 'StoreTable.vue', 'StoreTableItem.vue', 'index.js', 'stores.js', 'tokens.js', 'types.js', 'History.vue', 'Stores.vue']",['1896174f9bb1a588ea7035cefae29dcd36804f24'],18,326,344,12,1.0,1.0,1.0
71fc1ac6d727ea446552c2784e7666a3a78526d8,"Add test helper commands to deal with Raiden operations

mint_test_tokens can now call mint for any token and account (asks for
private key if not an account stored in the database)

make_service_deposit runs the service deposit contract.

Both can specify the amount as a parameter
Raiden commands for contract manipulation can accept standard account",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-30 09:50:49+02:00,-7200,2020-09-30 09:59:29+02:00,-7200,True,False,"['blockchain.py', 'make_service_deposit.py', 'mint_test_tokens.py']",['04b157e1a8bec8e22e835a21a49264db859af99d'],22,70,92,3,0.18181818181818182,1.0,0.3181818181818182
e9ccb4b0dc992530562321fc99f9780d60892f7f,"Add store identifier to visible attributes

The Store UUID is required when setting up a merchant integration,
alongside with the public key.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-30 09:53:44+02:00,-7200,2020-09-30 09:59:41+02:00,-7200,True,False,"['StoreTable.vue', 'StoreTableItem.vue']",['71fc1ac6d727ea446552c2784e7666a3a78526d8'],0,2,2,2,,,
9dae691f622c1a07b0608fc9e530bd4ef6f3df8c,"Make BookEntry an abstract class that Credit and Debit implement

To make our accounting model consistent, book entries can only be
either credits or debits and should be unique per book

This commit introduces these changes and also squashes all the
migrations generated since the last release.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-30 09:55:16+02:00,-7200,2020-09-30 09:59:41+02:00,-7200,True,False,"['0002_auto_20200911_0014.py', '0002_auto_20200929_2318.py', '0003_auto_20200913_2210.py', '0004_paymentconfirmation.py', '0005_auto_20200926_2218.py', 'accounting.py', 'serializers.py', 'views.py']",['e9ccb4b0dc992530562321fc99f9780d60892f7f'],296,294,590,8,1.0,1.0,1.0
0a65bdf0ce928ef7b61d5337d3e1a9ea1dfc3e09,Payment identifiers needs to be UIN256 fields,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-30 13:25:54+02:00,-7200,2020-09-30 13:28:36+02:00,-7200,True,False,"['0007_auto_20200930_1115.py', 'models.py']",['9dae691f622c1a07b0608fc9e530bd4ef6f3df8c'],7,34,41,2,1.0,1.0,1.0
538f2cd547d5c4a2675a096e1d148a49d3364120,Add  command to docker-compose services,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-30 13:26:21+02:00,-7200,2020-09-30 13:28:40+02:00,-7200,True,False,"['docker-compose.yml', 'ci.yml', 'dev.yml']",['0a65bdf0ce928ef7b61d5337d3e1a9ea1dfc3e09'],0,25,25,3,,,
9530b889f5a8c92798585303e9ed34685984e81e,Table header style should be applied on all frontend,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-09-30 13:49:07+02:00,-7200,2020-09-30 13:49:07+02:00,-7200,True,False,"['app.scss', 'StoreTable.vue']",['538f2cd547d5c4a2675a096e1d148a49d3364120'],3,12,15,2,,,
2b451ea7e0dbf03c99a2b1c54b38c15271f30007,Fix for creation of TransferSerializer.create method,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-09 15:55:33+02:00,-7200,2020-10-09 15:55:33+02:00,-7200,True,False,['serializers.py'],['9530b889f5a8c92798585303e9ed34685984e81e'],5,3,8,1,1.0,1.0,0.0
21babd70acaa73f45cd8739a2ff663ba408c2bf4,Add properties to get payments received/sent from Raiden channel,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-09 15:56:08+02:00,-7200,2020-10-09 15:56:08+02:00,-7200,True,False,['models.py'],['2b451ea7e0dbf03c99a2b1c54b38c15271f30007'],0,12,12,1,1.0,1.0,1.0
a812e17d50aad63287eadf7ed938dfd066121548,Ensure EthereumAcount.formatted displays integral values properly,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-09 15:56:54+02:00,-7200,2020-10-09 15:56:54+02:00,-7200,True,False,['models.py'],['21babd70acaa73f45cd8739a2ff663ba408c2bf4'],1,5,6,1,1.0,1.0,1.0
b834e7abb2f3c5fe523e70cdf8b95369f79d4706,"Work on dashboard sidebar styling

Instead of a floating/sliding sidebar, the sidebar now reduces its
width for mobile screens.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-13 01:52:59+02:00,-7200,2020-10-13 01:52:59+02:00,-7200,True,False,"['App.vue', 'app.scss', 'app.scss', 'dashboard.scss', 'registration.scss', 'table.scss', 'paper-dashboard.scss', '_mixins.scss', '_responsive.scss', '_variables.scss', '_sidebar.scss', 'BaseLayout.vue', 'DashboardLayout.vue', 'SideBar.vue']",['a812e17d50aad63287eadf7ed938dfd066121548'],193,175,368,14,,,
4606ed1cc89dd8ece819c65cfc93b97bfd0aaf4c,Cleaned up styling and layout of topbar,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-13 03:53:48+02:00,-7200,2020-10-13 03:53:48+02:00,-7200,True,False,"['App.vue', 'dashboard.scss', 'TopNavbar.vue']",['b834e7abb2f3c5fe523e70cdf8b95369f79d4706'],53,72,125,3,,,
205a39e96e57f473a6521c27c77a3e20f789b819,"Add route, component and vuex mutation for manipulating stores",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-14 15:25:13+02:00,-7200,2020-10-14 15:25:13+02:00,-7200,True,False,"['StoreTable.vue', 'StoreTableItem.vue', 'routes.js', 'stores.js', 'types.js', 'StoreDetail.vue']",['4606ed1cc89dd8ece819c65cfc93b97bfd0aaf4c'],44,68,112,6,1.0,1.0,1.0
f2be7bbd45ada806e97c35293d652087a961e0e0,Change styling: logo text is white in original theme,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-14 15:26:13+02:00,-7200,2020-10-14 15:26:13+02:00,-7200,True,False,['dashboard.scss'],['205a39e96e57f473a6521c27c77a3e20f789b819'],0,3,3,1,,,
1d5d5976c7d066f341c64b5dbcd231d0c0b48df4,Rework of store initialization,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-14 22:57:22+02:00,-7200,2020-10-14 22:57:22+02:00,-7200,True,False,"['App.vue', 'DashboardLayout.vue', 'routes.js', 'account.js', 'index.js', 'stores.js', 'tokens.js', 'types.js', 'StoreDetail.vue']",['f2be7bbd45ada806e97c35293d652087a961e0e0'],72,118,190,9,1.0,1.0,1.0
55db8004bbe301290ad884476a29515e677d21f7,"Logout link was referencing relative URL, need to name of view",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-14 22:58:18+02:00,-7200,2020-10-14 22:58:18+02:00,-7200,True,False,['TopNavbar.vue'],['1d5d5976c7d066f341c64b5dbcd231d0c0b48df4'],1,1,2,1,,,
6d182814beb8825f9b08047817b1304d4a67c02d,Code linting,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-14 22:59:07+02:00,-7200,2020-10-14 22:59:07+02:00,-7200,True,False,['account.js'],['55db8004bbe301290ad884476a29515e677d21f7'],8,8,16,1,,,
f4ebfe53b5e539981cf47ff8b67e09f52acebc75,Use transaction reference as key when listing in component,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-14 23:02:42+02:00,-7200,2020-10-14 23:02:42+02:00,-7200,True,False,['History.vue'],['6d182814beb8825f9b08047817b1304d4a67c02d'],1,1,2,1,,,
cbf061a07c537782dc03d9d242a21c19d3f202f9,Prettifying files,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-15 23:03:35+02:00,-7200,2020-10-15 23:05:36+02:00,-7200,True,False,"['App.vue', 'main.js', 'Login.vue', 'formGroupInput.vue']",['f4ebfe53b5e539981cf47ff8b67e09f52acebc75'],34,27,61,4,,,
1f1d741d92da146699091d77ddd65a0cbaee7909,"Add formGroupSelect widget

Similar to formGroupInput, this component provides a select control
that is part of a form-group block",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-15 23:06:20+02:00,-7200,2020-10-15 23:06:20+02:00,-7200,True,False,"['globalComponents.js', 'formGroupSelect.vue', 'index.js']",['cbf061a07c537782dc03d9d242a21c19d3f202f9'],25,108,133,3,1.0,1.0,1.0
a7989903468b55c61ea7e42c8bd413002635d431,Add actions and mutations to edit store,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-15 23:07:18+02:00,-7200,2020-10-15 23:07:18+02:00,-7200,True,False,"['stores.js', 'types.js', 'StoreDetail.vue']",['1f1d741d92da146699091d77ddd65a0cbaee7909'],72,153,225,3,1.0,1.0,1.0
00aa490838aac66a2eacf3e64c04bd2b7987d12f,Add error message and styling classes to formGroup components,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-20 03:04:39+02:00,-7200,2020-10-20 03:04:39+02:00,-7200,True,False,"['app.scss', 'formGroupInput.vue', 'formGroupSelect.vue']",['a7989903468b55c61ea7e42c8bd413002635d431'],2,17,19,3,,,
d28005af45522476a26adfcbdb29ac6e1d532726,"Make stores vuex module more uniform

Specific elements for each state of store that is being created or
edited, plus definition of all store collection",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-20 03:05:29+02:00,-7200,2020-10-20 03:05:29+02:00,-7200,True,False,"['StoreTable.vue', 'stores.js', 'types.js']",['00aa490838aac66a2eacf3e64c04bd2b7987d12f'],47,59,106,3,1.0,1.0,1.0
c7eb3c74681595d1524452f948e68daa6980d3af,Error message and error state handling adapted for StoreDetail,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-20 03:07:29+02:00,-7200,2020-10-20 03:07:29+02:00,-7200,True,False,['StoreDetail.vue'],['d28005af45522476a26adfcbdb29ac6e1d532726'],19,102,121,1,,,
668d7ab2c837e41e65d2db63526667536ebda04e,Redirect to store list after creation or update of store details,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-20 10:36:14+02:00,-7200,2020-10-20 10:36:14+02:00,-7200,True,False,['StoreDetail.vue'],['c7eb3c74681595d1524452f948e68daa6980d3af'],0,1,1,1,,,
40762871693df0d88bb2053dbcde4f7e41a25c2f,Notification message upon store update,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-20 10:41:32+02:00,-7200,2020-10-20 10:41:32+02:00,-7200,True,False,['StoreDetail.vue'],['668d7ab2c837e41e65d2db63526667536ebda04e'],1,3,4,1,,,
a11290fdebffcf213e77b38e999afe6215abbbb1,Removed paper kit 2,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-20 13:42:03+02:00,-7200,2020-10-20 13:42:03+02:00,-7200,True,False,"['paper-kit.scss', '_alerts.scss', '_badges.scss', '_buttons.scss', '_cards.scss', '_carousel.scss', '_checkbox-radio.scss', '_dropdown.scss', '_examples.scss', '_footers.scss', '_headers.scss', '_icons.scss', '_images.scss', '_inputs.scss', '_labels.scss', '_misc.scss', '_mixins.scss', '_modal.scss', '_navbars.scss', '_nucleo-icons.scss', '_nucleo-outline.scss', '_pagination.scss', '_progress-bars.scss', '_responsive.scss', '_sections.scss', '_sidebar.scss', '_sliders.scss', '_social-buttons.scss', '_switch.scss', '_tabs-navs.scss', '_tags.scss', '_tooltips-and-popovers.scss', '_typography.scss', '_variables.scss', '_card-plain.scss', '_card-profile.scss', '_card-register.scss', '_alerts.scss', '_buttons.scss', '_inputs.scss', '_labels.scss', '_navbars.scss', '_popovers.scss', '_tabs.scss', '_transparency.scss', '_vendor-prefixes.scss', '_plugin-bootstrap-switch.scss', '_plugin-datepicker.scss', '_plugin-nouislider.scss', '_plugin-perfect-scrollbar.scss']",['40762871693df0d88bb2053dbcde4f7e41a25c2f'],8662,0,8662,50,,,
6a53305f6c676e2e36a8a07ba2573058b96a6d1a,Refactor code from paperkit stylesheet and prettifying,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-20 22:45:42+02:00,-7200,2020-10-20 22:49:59+02:00,-7200,True,False,"['app.scss', 'app.scss', '_typography.scss', '_variables.scss', '_buttons.scss', '_defaults.scss', 'widgets.scss', 'Content.vue', 'DashboardLayout.vue', 'TopNavbar.vue', 'paperDashboard.js', 'routes.js', 'Stores.vue', 'Card.vue']",['a11290fdebffcf213e77b38e999afe6215abbbb1'],185,228,413,14,0.0,0.0,0.0
1159ceca1f35d7b8f4c089ecb74812f2e5c84f1d,"More refactor between bootstrap and paper mixin definitions

Needed to get button styles generated independent from .btn classes",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-21 01:26:17+02:00,-7200,2020-10-21 01:26:17+02:00,-7200,True,False,"['_mixins.scss', '_typography.scss', '_variables.scss', '_border-radius.scss', '_buttons.scss', '_defaults.scss']",['6a53305f6c676e2e36a8a07ba2573058b96a6d1a'],4,93,97,6,,,
9a3094b0658d3c75244178bfc54a260a044e1322,Change presentation of top bar title based on route meta attribute,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-21 01:48:32+02:00,-7200,2020-10-21 01:48:32+02:00,-7200,True,False,"['TopNavbar.vue', 'routes.js']",['1159ceca1f35d7b8f4c089ecb74812f2e5c84f1d'],1,7,8,2,,,
a647c256fe78480de3cfc1147263ce36bb11f55a,Add button to remove store,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-21 01:49:37+02:00,-7200,2020-10-21 01:49:37+02:00,-7200,True,False,['StoreTableItem.vue'],['9a3094b0658d3c75244178bfc54a260a044e1322'],28,24,52,1,,,
fd74f111ea9582d4e80b9e4444b5bfa1b1bda6cd,Style of Store Table view,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-21 01:50:02+02:00,-7200,2020-10-21 01:50:02+02:00,-7200,True,False,['Stores.vue'],['a647c256fe78480de3cfc1147263ce36bb11f55a'],2,2,4,1,,,
704b0c9f4ad3ddfc316d7c9b7ac7f6b323b73d45,Vuex now uses same logic for creating/updating existing new stores,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-21 03:06:22+02:00,-7200,2020-10-21 03:06:22+02:00,-7200,True,False,"['stores.js', 'types.js', 'StoreDetail.vue']",['fd74f111ea9582d4e80b9e4444b5bfa1b1bda6cd'],98,114,212,3,1.0,1.0,1.0
f45820fc7a053412e06e3603377abf2da0dd3a52,Updated python packages,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-23 11:55:12+02:00,-7200,2020-10-23 11:55:12+02:00,-7200,True,False,['requirements.txt'],['2f75c97406e3f10d21bdac4c70d9979eae0f19f2'],33,32,65,1,,,
c5ad80762b4d35cb0877e1e7e76fd6d2743d14c4,Add view for account funding - Deposit/Withdraw,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-25 16:57:00+01:00,-3600,2020-10-25 16:57:00+01:00,-3600,True,False,"['funding.js', 'FundingTable.vue', 'FundingTableItem.vue', 'funding.js', 'Funding.vue']",['f45820fc7a053412e06e3603377abf2da0dd3a52'],0,178,178,5,1.0,1.0,1.0
5b8e4e2e40bea61281fdc06df64781ade096066f,"Remove unncessary call from initialization on App component

The call to the store initialization is already happening at the
router module",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-27 06:33:44+01:00,-3600,2020-10-27 06:33:44+01:00,-3600,True,False,['App.vue'],['c5ad80762b4d35cb0877e1e7e76fd6d2743d14c4'],3,1,4,1,,,
a279dd97b7ffe67104b6f8f1d61cedf807364928,"Components for accoutn funding (Deposit/Withdraw)

Both components use the payments/transfer API endpoints.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-27 06:37:08+01:00,-3600,2020-10-27 06:37:08+01:00,-3600,True,False,"['funding.js', 'DashboardLayout.vue', 'routes.js', 'funding.js', 'index.js', 'tokens.js', 'types.js', 'Deposit.vue', 'Transfer.vue']",['5b8e4e2e40bea61281fdc06df64781ade096066f'],24,226,250,9,1.0,1.0,0.7096774193548387
8c3cc9e3e31b5723e9b5da8e21b932187e4113b4,"Changes in backend to make integration easier

- Add 'id' attribute to transfer serializer
- Add handling of payment order cancel (by sending DELETE request)",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-27 06:38:07+01:00,-3600,2020-10-27 06:38:07+01:00,-3600,True,False,"['serializers.py', 'views.py', 'docker-compose.yml']",['a279dd97b7ffe67104b6f8f1d61cedf807364928'],3,15,18,3,1.0,1.0,0.0
4b3b94e6e62e4d20bb567cfddef2cb9c49dde9dc,CSS changes for button bar and funding screens,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-27 06:40:02+01:00,-3600,2020-10-27 06:40:02+01:00,-3600,True,False,"['app.scss', 'registration.scss', '_variables.scss', '_buttons.scss', 'widgets.scss', 'main.js']",['8c3cc9e3e31b5723e9b5da8e21b932187e4113b4'],13,49,62,6,,,
2bbfebdab45554d18b4b127d09e45120089b10e6,Funding page just links to the deposit/withdraw token views,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-27 06:40:45+01:00,-3600,2020-10-27 06:46:09+01:00,-3600,True,False,"['_variables.scss', 'FundingTableItem.vue']",['4b3b94e6e62e4d20bb567cfddef2cb9c49dde9dc'],6,6,12,2,,,
c5f8f8c28c66ee3d7a32ff448ebe0fa33a28ed33,(bugfix) formGroupSelect needs to check for selected value as prop,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-27 06:41:25+01:00,-3600,2020-10-27 06:46:09+01:00,-3600,True,False,['formGroupSelect.vue'],['2bbfebdab45554d18b4b127d09e45120089b10e6'],2,2,4,1,,,
68bed74dad3ad8d0e3cb7a753e657e8fb01ef3d4,(chore) code prettified,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-27 06:42:17+01:00,-3600,2020-10-27 06:46:09+01:00,-3600,True,False,['account.js'],['c5f8f8c28c66ee3d7a32ff448ebe0fa33a28ed33'],16,31,47,1,1.0,1.0,1.0
90822f27279f01fca76e35f6804d357eef4f8723,"Change ""withdraw"" to ""transfer"" terminology",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-28 11:47:43+01:00,-3600,2020-10-28 11:47:43+01:00,-3600,True,False,"['FundingTableItem.vue', 'routes.js', 'funding.js', 'Transfer.vue']",['68bed74dad3ad8d0e3cb7a753e657e8fb01ef3d4'],21,13,34,4,,,
fd45d5afb4163a6f198084683816747c97e53deb,"(feat) Deposit model

When developing the UI for the funding section from the web
application, it was possible to realize that the deposit process
should not require the user to specify an amount beforehand. The user
should need to only specify what token it wants to make a deposit so
that hub20 can generate the proper routes, and then any confirmed payment made
through any of the routes should be enough to consider the deposit
amount to be added to the user's balance.",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-30 01:44:34+01:00,-3600,2020-10-30 01:44:34+01:00,-3600,True,False,"['base.py', '0001_initial.py', 'mocks.py', 'choices.py', 'payments.py', 'accounting.py', 'payments.py', '0001_initial.py', '0002_auto_20200929_2318.py', 'managers.py', 'payments.py', 'serializers.py', 'test_managers.py', 'test_models.py', 'test_views.py', 'test_web3_client.py', '0001_initial.py', '0002_ethereumtoken_is_listed.py', '0001_initial.py', '0002_auto_20200902_2313.py', '0003_auto_20200904_1612.py', '0004_auto_20200904_2233.py', '0005_auto_20200907_1600.py', '0006_auto_20200913_2210.py', '0007_auto_20200930_1115.py']",['ed3ff9bcc251e4d9602e520d2711210ac6ddc7a6'],832,529,1361,25,0.0,1.0,1.0
ba2416311a8854e665617a9a2bffdd05d6da1c16,"(feat) Signal handler to check blockchain payments on chain update

The block_sealed signal is not needed if we simply use post_save
signal for every chain update",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-30 15:35:51+01:00,-3600,2020-10-30 15:35:51+01:00,-3600,True,False,['payments.py'],['fd45d5afb4163a6f198084683816747c97e53deb'],0,7,7,1,1.0,1.0,1.0
e759ddabfee26b4859519a9c77b29e2bebd25f18,"(feat) Add API endpoints, serializers and handlers for deposits",Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-30 15:38:56+01:00,-3600,2020-10-30 15:38:56+01:00,-3600,True,False,"['api.py', 'serializers.py', 'views.py']",['ba2416311a8854e665617a9a2bffdd05d6da1c16'],10,35,45,3,1.0,1.0,1.0
2c543189c28b7dd5de4e282f46a8c2b721793aa5,Ensure that job_listen_events service waits on geth,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-30 15:40:09+01:00,-3600,2020-10-30 15:40:09+01:00,-3600,True,False,['dev.yml'],['e759ddabfee26b4859519a9c77b29e2bebd25f18'],0,4,4,1,,,
48238ea01977bdd24499d31d744361cb4eb8e399,(fix) Making processing of ethereum blockchain transfers more robust,Raphael Lullis,raphael@lullis.net,Raphael Lullis,raphael@lullis.net,2020-10-30 15:41:26+01:00,-3600,2020-10-30 15:41:26+01:00,-3600,True,False,['client.py'],['2c543189c28b7dd5de4e282f46a8c2b721793aa5'],6,11,17,1,0.5,0.5,0.0
