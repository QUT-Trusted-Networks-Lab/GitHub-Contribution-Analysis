Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
ec72235f8bb3138b25638903458f47e4a61d1b53,First public release,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-06 19:11:51+02:00,-7200,2016-09-12 16:43:06+02:00,-7200,True,False,"['CONTRIBUTORS', 'LICENSE.txt', 'README.rst', '__init__.py', '__init__.py', 'bool_solver.py', 'mba_if.py', 'mba_impl_petanque.py', 'mba_impl_sympy.py', 'tester.py', '__init__.py', 'petanque.py', 'benchs', 'cmp.py', 'run-suite.py', 'iarybo', 'Makefile', 'concepts.rst', 'conf.py', 'index.rst', 'intro.rst', 'reference-arybo.rst', 'reference-libpetanque.rst', 'reference-pytanque.rst', 'setup.rst', 'tutorial.rst', 'usage.rst', 'dirac.py', 'gen_mba.py', 'gen_mba2.py', 'hitb2015_crypto400.py', 'opaque_predicates.py', 'sstic2016_crc.py', 'stribog.py', 'xor_5C.py', 'xor_6.py', 'CMakeCompilers.txt', 'CMakeLists.txt', 'CMakeRequiredLibraries.txt', 'LICENSE.txt', 'MANIFEST.in', 'README.rst', 'CMakeLists.txt', 'CMakeLists.txt', 'config.h', 'pytanque.cpp', 'FindTBB.cmake', 'algos.h', 'analyses.h', 'app.h', 'bitfield.h', 'cast.h', 'compat.h', 'config.h.in', 'dynamic_caller.h', 'errors.h', 'exports.h', 'exprs.h', 'matrix.h', 'prettyprinter.h', 'simps.h', 'sorted_vector.h', 'subs.h', 'symbols.h', 'syms_hist.h', 'syms_set.h', 'traits.h', 'vector.h', 'visitors.h', 'llvm_distutils_env.bat', 'setup.cfg', 'setup.py', 'CMakeLists.txt', 'analyses.cpp', 'app.cpp', 'bitfield.cpp', 'exprs.cpp', 'matrix.cpp', 'ops.cpp', 'prettyprinter.cpp', 'simps.cpp', 'subs.cpp', 'symbols.cpp', 'syms_hist.cpp', 'syms_set.cpp', 'vector.cpp', 'CMakeLists.txt', 'algos.cpp', 'app.cpp', 'bench.cpp', 'double_free.cpp', 'exprs.cpp', 'identify_ors_no_rec.cpp', 'matrix.cpp', 'op_add.cpp', 'op_complex.cpp', 'op_esf.cpp', 'op_mul.cpp', 'op_names.cpp', 'op_or.cpp', 'or_to_esf.cpp', 'prettyprinter.cpp', 'random_simplify.cpp', 'simp.cpp', 'simp_constants_prop.cpp', 'simp_expand.cpp', 'simp_expand_no_rec.cpp', 'simp_flatten.cpp', 'simp_flatten_no_rec.cpp', 'simp_remove_dead_ops.cpp', 'sort.cpp', 'sort2.cpp', 'sorted_vector.cpp', 'subs.cpp', 'syms_set.cpp', 'tests.cpp', 'tests.h', 'vec_int.cpp', 'vector.cpp', 'vectorial_decomp.cpp', 'visitors.cpp', 'bcp.sh', 'config.hpp', 'borland_prefix.hpp', 'borland_suffix.hpp', 'msvc_prefix.hpp', 'msvc_suffix.hpp', 'abi_prefix.hpp', 'abi_suffix.hpp', 'auto_link.hpp', 'borland.hpp', 'clang.hpp', 'codegear.hpp', 'comeau.hpp', 'common_edg.hpp', 'compaq_cxx.hpp', 'cray.hpp', 'digitalmars.hpp', 'gcc.hpp', 'gcc_xml.hpp', 'greenhills.hpp', 'hp_acc.hpp', 'intel.hpp', 'kai.hpp', 'metrowerks.hpp', 'mpw.hpp', 'nvcc.hpp', 'pathscale.hpp', 'pgi.hpp', 'sgi_mipspro.hpp', 'sunpro_cc.hpp', 'vacpp.hpp', 'visualc.hpp', 'cmath.hpp', 'complex.hpp', 'functional.hpp', 'memory.hpp', 'utility.hpp', 'aix.hpp', 'amigaos.hpp', 'beos.hpp', 'bsd.hpp', 'cray.hpp', 'cygwin.hpp', 'haiku.hpp', 'hpux.hpp', 'irix.hpp', 'linux.hpp', 'macos.hpp', 'qnxnto.hpp', 'solaris.hpp', 'symbian.hpp', 'vms.hpp', 'vxworks.hpp', 'win32.hpp', 'posix_features.hpp', 'requires_threads.hpp', 'select_compiler_config.hpp', 'select_platform_config.hpp', 'select_stdlib_config.hpp', 'dinkumware.hpp', 'libcomo.hpp', 'libcpp.hpp', 'libstdcpp3.hpp', 'modena.hpp', 'msl.hpp', 'roguewave.hpp', 'sgi.hpp', 'stlport.hpp', 'vacpp.hpp', 'suffix.hpp', 'user.hpp', 'warning_disable.hpp', 'addressof.hpp', 'cstdint.hpp', 'indirect_traits.hpp', 'iterator.hpp', 'workaround.hpp', 'static_log2.hpp', 'integer_fwd.hpp', 'iterator.hpp', 'config_def.hpp', 'config_undef.hpp', 'enable_if.hpp', 'facade_iterator_category.hpp', 'interoperable.hpp', 'iterator_categories.hpp', 'iterator_facade.hpp', 'iterator_traits.hpp', 'limits.hpp', 'always.hpp', 'and.hpp', 'apply.hpp', 'apply_fwd.hpp', 'apply_wrap.hpp', 'arg.hpp', 'arg_fwd.hpp', 'assert.hpp', 'adl_barrier.hpp', 'arg_typedef.hpp', 'arity.hpp', 'arity_spec.hpp', 'common_name_wknd.hpp', 'adl.hpp', 'arrays.hpp', 'bcc.hpp', 'bind.hpp', 'compiler.hpp', 'ctps.hpp', 'dmc_ambiguous_ctps.hpp', 'dtp.hpp', 'eti.hpp', 'gcc.hpp', 'gpu.hpp', 'has_apply.hpp', 'has_xxx.hpp', 'integral.hpp', 'intel.hpp', 'lambda.hpp', 'msvc.hpp', 'msvc_typename.hpp', 'nttp.hpp', 'overload_resolution.hpp', 'pp_counter.hpp', 'preprocessor.hpp', 'static_constant.hpp', 'ttp.hpp', 'use_preprocessed.hpp', 'workaround.hpp', 'count_args.hpp', 'full_lambda.hpp', 'has_apply.hpp', 'has_rebind.hpp', 'has_type.hpp', 'include_preprocessed.hpp', 'integral_wrapper.hpp', 'lambda_arity_param.hpp', 'lambda_no_ctps.hpp', 'lambda_support.hpp', 'logical_op.hpp', 'msvc_dtw.hpp', 'msvc_is_class.hpp', 'msvc_never_true.hpp', 'na.hpp', 'na_assert.hpp', 'na_fwd.hpp', 'na_spec.hpp', 'nested_type_wknd.hpp', 'nttp_decl.hpp', 'advance_backward.hpp', 'advance_forward.hpp', 'and.hpp', 'apply.hpp', 'apply_fwd.hpp', 'apply_wrap.hpp', 'arg.hpp', 'basic_bind.hpp', 'bind.hpp', 'bind_fwd.hpp', 'bitand.hpp', 'bitor.hpp', 'bitxor.hpp', 'deque.hpp', 'divides.hpp', 'equal_to.hpp', 'fold_impl.hpp', 'full_lambda.hpp', 'greater.hpp', 'greater_equal.hpp', 'inherit.hpp', 'iter_fold_if_impl.hpp', 'iter_fold_impl.hpp', 'lambda_no_ctps.hpp', 'less.hpp', 'less_equal.hpp', 'list.hpp', 'list_c.hpp', 'map.hpp', 'minus.hpp', 'modulus.hpp', 'not_equal_to.hpp', 'or.hpp', 'placeholders.hpp', 'plus.hpp', 'quote.hpp', 'reverse_fold_impl.hpp', 'reverse_iter_fold_impl.hpp', 'set.hpp', 'set_c.hpp', 'shift_left.hpp', 'shift_right.hpp', 'template_arity.hpp', 'times.hpp', 'unpack_args.hpp', 'vector.hpp', 'vector_c.hpp', 'advance_backward.hpp', 'advance_forward.hpp', 'and.hpp', 'apply.hpp', 'apply_fwd.hpp', 'apply_wrap.hpp', 'arg.hpp', 'basic_bind.hpp', 'bind.hpp', 'bind_fwd.hpp', 'bitand.hpp', 'bitor.hpp', 'bitxor.hpp', 'deque.hpp', 'divides.hpp', 'equal_to.hpp', 'fold_impl.hpp', 'full_lambda.hpp', 'greater.hpp', 'greater_equal.hpp', 'inherit.hpp', 'iter_fold_if_impl.hpp', 'iter_fold_impl.hpp', 'lambda_no_ctps.hpp', 'less.hpp', 'less_equal.hpp', 'list.hpp', 'list_c.hpp', 'map.hpp', 'minus.hpp', 'modulus.hpp', 'not_equal_to.hpp', 'or.hpp', 'placeholders.hpp', 'plus.hpp', 'quote.hpp', 'reverse_fold_impl.hpp', 'reverse_iter_fold_impl.hpp', 'set.hpp', 'set_c.hpp', 'shift_left.hpp', 'shift_right.hpp', 'template_arity.hpp', 'times.hpp', 'unpack_args.hpp', 'vector.hpp', 'vector_c.hpp', 'advance_backward.hpp', 'advance_forward.hpp', 'and.hpp', 'apply.hpp', 'apply_fwd.hpp', 'apply_wrap.hpp', 'arg.hpp', 'basic_bind.hpp', 'bind.hpp', 'bind_fwd.hpp', 'bitand.hpp', 'bitor.hpp', 'bitxor.hpp', 'deque.hpp', 'divides.hpp', 'equal_to.hpp', 'fold_impl.hpp', 'full_lambda.hpp', 'greater.hpp', 'greater_equal.hpp', 'inherit.hpp', 'iter_fold_if_impl.hpp', 'iter_fold_impl.hpp', 'lambda_no_ctps.hpp', 'less.hpp', 'less_equal.hpp', 'list.hpp', 'list_c.hpp', 'map.hpp', 'minus.hpp', 'modulus.hpp', 'not_equal_to.hpp', 'or.hpp', 'placeholders.hpp', 'plus.hpp', 'quote.hpp', 'reverse_fold_impl.hpp', 'reverse_iter_fold_impl.hpp', 'set.hpp', 'set_c.hpp', 'shift_left.hpp', 'shift_right.hpp', 'template_arity.hpp', 'times.hpp', 'unpack_args.hpp', 'vector.hpp', 'vector_c.hpp', 'advance_backward.hpp', 'advance_forward.hpp', 'and.hpp', 'apply.hpp', 'apply_fwd.hpp', 'apply_wrap.hpp', 'arg.hpp', 'basic_bind.hpp', 'bind.hpp', 'bind_fwd.hpp', 'bitand.hpp', 'bitor.hpp', 'bitxor.hpp', 'deque.hpp', 'divides.hpp', 'equal_to.hpp', 'fold_impl.hpp', 'full_lambda.hpp', 'greater.hpp', 'greater_equal.hpp', 'inherit.hpp', 'iter_fold_if_impl.hpp', 'iter_fold_impl.hpp', 'lambda_no_ctps.hpp', 'less.hpp', 'less_equal.hpp', 'list.hpp', 'list_c.hpp', 'map.hpp', 'minus.hpp', 'modulus.hpp', 'not_equal_to.hpp', 'or.hpp', 'placeholders.hpp', 'plus.hpp', 'quote.hpp', 'reverse_fold_impl.hpp', 'reverse_iter_fold_impl.hpp', 'set.hpp', 'set_c.hpp', 'shift_left.hpp', 'shift_right.hpp', 'template_arity.hpp', 'times.hpp', 'unpack_args.hpp', 'vector.hpp', 'vector_c.hpp', 'advance_backward.hpp', 'advance_forward.hpp', 'and.hpp', 'apply.hpp', 'apply_fwd.hpp', 'apply_wrap.hpp', 'arg.hpp', 'basic_bind.hpp', 'bind.hpp', 'bind_fwd.hpp', 'bitand.hpp', 'bitor.hpp', 'bitxor.hpp', 'deque.hpp', 'divides.hpp', 'equal_to.hpp', 'fold_impl.hpp', 'full_lambda.hpp', 'greater.hpp', 'greater_equal.hpp', 'inherit.hpp', 'iter_fold_if_impl.hpp', 'iter_fold_impl.hpp', 'lambda_no_ctps.hpp', 'less.hpp', 'less_equal.hpp', 'list.hpp', 'list_c.hpp', 'map.hpp', 'minus.hpp', 'modulus.hpp', 'not_equal_to.hpp', 'or.hpp', 'placeholders.hpp', 'plus.hpp', 'quote.hpp', 'reverse_fold_impl.hpp', 'reverse_iter_fold_impl.hpp', 'set.hpp', 'set_c.hpp', 'shift_left.hpp', 'shift_right.hpp', 'template_arity.hpp', 'times.hpp', 'unpack_args.hpp', 'vector.hpp', 'vector_c.hpp', 'advance_backward.hpp', 'advance_forward.hpp', 'and.hpp', 'apply.hpp', 'apply_fwd.hpp', 'apply_wrap.hpp', 'arg.hpp', 'basic_bind.hpp', 'bind.hpp', 'bind_fwd.hpp', 'bitand.hpp', 'bitor.hpp', 'bitxor.hpp', 'deque.hpp', 'divides.hpp', 'equal_to.hpp', 'fold_impl.hpp', 'full_lambda.hpp', 'greater.hpp', 'greater_equal.hpp', 'inherit.hpp', 'iter_fold_if_impl.hpp', 'iter_fold_impl.hpp', 'lambda_no_ctps.hpp', 'less.hpp', 'less_equal.hpp', 'list.hpp', 'list_c.hpp', 'map.hpp', 'minus.hpp', 'modulus.hpp', 'not_equal_to.hpp', 'or.hpp', 'placeholders.hpp', 'plus.hpp', 'quote.hpp', 'reverse_fold_impl.hpp', 'reverse_iter_fold_impl.hpp', 'set.hpp', 'set_c.hpp', 'shift_left.hpp', 'shift_right.hpp', 'template_arity.hpp', 'times.hpp', 'unpack_args.hpp', 'vector.hpp', 'vector_c.hpp', 'advance_backward.hpp', 'advance_forward.hpp', 'and.hpp', 'apply.hpp', 'apply_fwd.hpp', 'apply_wrap.hpp', 'arg.hpp', 'basic_bind.hpp', 'bind.hpp', 'bind_fwd.hpp', 'bitand.hpp', 'bitor.hpp', 'bitxor.hpp', 'deque.hpp', 'divides.hpp', 'equal_to.hpp', 'fold_impl.hpp', 'full_lambda.hpp', 'greater.hpp', 'greater_equal.hpp', 'inherit.hpp', 'iter_fold_if_impl.hpp', 'iter_fold_impl.hpp', 'lambda_no_ctps.hpp', 'less.hpp', 'less_equal.hpp', 'list.hpp', 'list_c.hpp', 'map.hpp', 'minus.hpp', 'modulus.hpp', 'not_equal_to.hpp', 'or.hpp', 'placeholders.hpp', 'plus.hpp', 'quote.hpp', 'reverse_fold_impl.hpp', 'reverse_iter_fold_impl.hpp', 'set.hpp', 'set_c.hpp', 'shift_left.hpp', 'shift_right.hpp', 'template_arity.hpp', 'times.hpp', 'unpack_args.hpp', 'vector.hpp', 'vector_c.hpp', 'advance_backward.hpp', 'advance_forward.hpp', 'and.hpp', 'apply.hpp', 'apply_fwd.hpp', 'apply_wrap.hpp', 'arg.hpp', 'basic_bind.hpp', 'bind.hpp', 'bind_fwd.hpp', 'bitand.hpp', 'bitor.hpp', 'bitxor.hpp', 'deque.hpp', 'divides.hpp', 'equal_to.hpp', 'fold_impl.hpp', 'full_lambda.hpp', 'greater.hpp', 'greater_equal.hpp', 'inherit.hpp', 'iter_fold_if_impl.hpp', 'iter_fold_impl.hpp', 'lambda_no_ctps.hpp', 'less.hpp', 'less_equal.hpp', 'list.hpp', 'list_c.hpp', 'map.hpp', 'minus.hpp', 'modulus.hpp', 'not_equal_to.hpp', 'or.hpp', 'placeholders.hpp', 'plus.hpp', 'quote.hpp', 'reverse_fold_impl.hpp', 'reverse_iter_fold_impl.hpp', 'set.hpp', 'set_c.hpp', 'shift_left.hpp', 'shift_right.hpp', 'template_arity.hpp', 'times.hpp', 'unpack_args.hpp', 'vector.hpp', 'vector_c.hpp', 'advance_backward.hpp', 'advance_forward.hpp', 'and.hpp', 'apply.hpp', 'apply_fwd.hpp', 'apply_wrap.hpp', 'arg.hpp', 'basic_bind.hpp', 'bind.hpp', 'bind_fwd.hpp', 'bitand.hpp', 'bitor.hpp', 'bitxor.hpp', 'deque.hpp', 'divides.hpp', 'equal_to.hpp', 'fold_impl.hpp', 'full_lambda.hpp', 'greater.hpp', 'greater_equal.hpp', 'inherit.hpp', 'iter_fold_if_impl.hpp', 'iter_fold_impl.hpp', 'lambda_no_ctps.hpp', 'less.hpp', 'less_equal.hpp', 'list.hpp', 'list_c.hpp', 'map.hpp', 'minus.hpp', 'modulus.hpp', 'not_equal_to.hpp', 'or.hpp', 'placeholders.hpp', 'plus.hpp', 'quote.hpp', 'reverse_fold_impl.hpp', 'reverse_iter_fold_impl.hpp', 'set.hpp', 'set_c.hpp', 'shift_left.hpp', 'shift_right.hpp', 'template_arity.hpp', 'times.hpp', 'unpack_args.hpp', 'vector.hpp', 'vector_c.hpp', 'advance_backward.hpp', 'advance_forward.hpp', 'and.hpp', 'apply.hpp', 'apply_fwd.hpp', 'apply_wrap.hpp', 'arg.hpp', 'basic_bind.hpp', 'bind.hpp', 'bind_fwd.hpp', 'bitand.hpp', 'bitor.hpp', 'bitxor.hpp', 'deque.hpp', 'divides.hpp', 'equal_to.hpp', 'fold_impl.hpp', 'full_lambda.hpp', 'greater.hpp', 'greater_equal.hpp', 'inherit.hpp', 'iter_fold_if_impl.hpp', 'iter_fold_impl.hpp', 'lambda_no_ctps.hpp', 'less.hpp', 'less_equal.hpp', 'list.hpp', 'list_c.hpp', 'map.hpp', 'minus.hpp', 'modulus.hpp', 'not_equal_to.hpp', 'or.hpp', 'placeholders.hpp', 'plus.hpp', 'quote.hpp', 'reverse_fold_impl.hpp', 'reverse_iter_fold_impl.hpp', 'set.hpp', 'set_c.hpp', 'shift_left.hpp', 'shift_right.hpp', 'template_arity.hpp', 'times.hpp', 'unpack_args.hpp', 'vector.hpp', 'vector_c.hpp', 'advance_backward.hpp', 'advance_forward.hpp', 'and.hpp', 'apply.hpp', 'apply_fwd.hpp', 'apply_wrap.hpp', 'arg.hpp', 'basic_bind.hpp', 'bind.hpp', 'bind_fwd.hpp', 'bitand.hpp', 'bitor.hpp', 'bitxor.hpp', 'deque.hpp', 'divides.hpp', 'equal_to.hpp', 'fold_impl.hpp', 'full_lambda.hpp', 'greater.hpp', 'greater_equal.hpp', 'inherit.hpp', 'iter_fold_if_impl.hpp', 'iter_fold_impl.hpp', 'lambda_no_ctps.hpp', 'less.hpp', 'less_equal.hpp', 'list.hpp', 'list_c.hpp', 'map.hpp', 'minus.hpp', 'modulus.hpp', 'not_equal_to.hpp', 'or.hpp', 'placeholders.hpp', 'plus.hpp', 'quote.hpp', 'reverse_fold_impl.hpp', 'reverse_iter_fold_impl.hpp', 'set.hpp', 'set_c.hpp', 'shift_left.hpp', 'shift_right.hpp', 'template_arity.hpp', 'times.hpp', 'unpack_args.hpp', 'vector.hpp', 'vector_c.hpp', 'add.hpp', 'def_params_tail.hpp', 'default_params.hpp', 'enum.hpp', 'ext_params.hpp', 'filter_params.hpp', 'params.hpp', 'partial_spec_params.hpp', 'range.hpp', 'repeat.hpp', 'sub.hpp', 'tuple.hpp', 'static_cast.hpp', 'template_arity.hpp', 'template_arity_fwd.hpp', 'type_wrapper.hpp', 'value_wknd.hpp', 'yes_no.hpp', 'bind.hpp', 'bind_fwd.hpp', 'bool.hpp', 'bool_fwd.hpp', 'eval_if.hpp', 'has_xxx.hpp', 'identity.hpp', 'if.hpp', 'int.hpp', 'int_fwd.hpp', 'integral_c.hpp', 'integral_c_fwd.hpp', 'integral_c_tag.hpp', 'is_placeholder.hpp', 'lambda.hpp', 'lambda_fwd.hpp', 'arity.hpp', 'next.hpp', 'next_prior.hpp', 'not.hpp', 'or.hpp', 'placeholders.hpp', 'protect.hpp', 'quote.hpp', 'void.hpp', 'void_fwd.hpp', 'add.hpp', 'dec.hpp', 'inc.hpp', 'sub.hpp', 'data.hpp', 'elem.hpp', 'size.hpp', 'cat.hpp', 'comma_if.hpp', 'config.hpp', 'while.hpp', 'while.hpp', 'while.hpp', 'while.hpp', 'expr_if.hpp', 'expr_iif.hpp', 'if.hpp', 'iif.hpp', 'while.hpp', 'error.hpp', 'dec.hpp', 'auto_rec.hpp', 'check.hpp', 'auto_rec.hpp', 'is_binary.hpp', 'split.hpp', 'empty.hpp', 'enum_params.hpp', 'enum_shifted_params.hpp', 'expr_if.hpp', 'is_empty.hpp', 'empty.hpp', 'expand.hpp', 'identity.hpp', 'is_1.hpp', 'is_empty.hpp', 'is_empty_variadic.hpp', 'overload.hpp', 'identity.hpp', 'inc.hpp', 'iterate.hpp', 'lower1.hpp', 'lower2.hpp', 'lower3.hpp', 'lower4.hpp', 'lower5.hpp', 'upper1.hpp', 'upper2.hpp', 'upper3.hpp', 'upper4.hpp', 'upper5.hpp', 'finish.hpp', 'forward1.hpp', 'forward2.hpp', 'forward3.hpp', 'forward4.hpp', 'forward5.hpp', 'reverse1.hpp', 'reverse2.hpp', 'reverse3.hpp', 'reverse4.hpp', 'reverse5.hpp', 'local.hpp', 'rlocal.hpp', 'self.hpp', 'start.hpp', 'iterate.hpp', 'local.hpp', 'self.hpp', 'adt.hpp', 'fold_left.hpp', 'fold_left.hpp', 'fold_right.hpp', 'fold_left.hpp', 'fold_right.hpp', 'fold_left.hpp', 'fold_right.hpp', 'for_each_i.hpp', 'reverse.hpp', 'and.hpp', 'bitand.hpp', 'bool.hpp', 'compl.hpp', 'comma.hpp', 'comma_if.hpp', 'is_begin_parens.hpp', 'is_begin_parens.hpp', 'repeat.hpp', 'for.hpp', 'for.hpp', 'for.hpp', 'for.hpp', 'enum_params.hpp', 'enum_shifted_params.hpp', 'enum_trailing_params.hpp', 'for.hpp', 'repeat.hpp', 'split.hpp', 'elem.hpp', 'first_n.hpp', 'fold_left.hpp', 'rest_n.hpp', 'seq.hpp', 'size.hpp', 'subseq.hpp', 'counter.hpp', 'def.hpp', 'shared.hpp', 'slot1.hpp', 'slot2.hpp', 'slot3.hpp', 'slot4.hpp', 'slot5.hpp', 'slot.hpp', 'stringize.hpp', 'is_single_return.hpp', 'eat.hpp', 'elem.hpp', 'rem.hpp', 'size.hpp', 'to_list.hpp', 'elem.hpp', 'size.hpp', 'static_assert.hpp', 'add_const.hpp', 'add_lvalue_reference.hpp', 'add_pointer.hpp', 'add_reference.hpp', 'add_rvalue_reference.hpp', 'config.hpp', 'bool_trait_def.hpp', 'bool_trait_undef.hpp', 'cv_traits_impl.hpp', 'false_result.hpp', 'ice_and.hpp', 'ice_eq.hpp', 'ice_not.hpp', 'ice_or.hpp', 'is_function_ptr_helper.hpp', 'is_function_ptr_tester.hpp', 'is_mem_fun_pointer_impl.hpp', 'is_mem_fun_pointer_tester.hpp', 'template_arity_spec.hpp', 'type_trait_def.hpp', 'type_trait_undef.hpp', 'yes_no_type.hpp', 'function_traits.hpp', 'ice.hpp', 'integral_constant.hpp', 'intrinsics.hpp', 'is_abstract.hpp', 'is_arithmetic.hpp', 'is_array.hpp', 'is_class.hpp', 'is_const.hpp', 'is_convertible.hpp', 'is_enum.hpp', 'is_float.hpp', 'is_function.hpp', 'is_integral.hpp', 'is_lvalue_reference.hpp', 'is_member_function_pointer.hpp', 'is_member_pointer.hpp', 'is_pod.hpp', 'is_pointer.hpp', 'is_polymorphic.hpp', 'is_reference.hpp', 'is_rvalue_reference.hpp', 'is_same.hpp', 'is_scalar.hpp', 'is_union.hpp', 'is_void.hpp', 'is_volatile.hpp', 'remove_bounds.hpp', 'remove_const.hpp', 'remove_cv.hpp', 'remove_pointer.hpp', 'remove_reference.hpp', 'addressof.hpp', 'declval.hpp', 'version.hpp', 'enhanced_allocators.h', 'malloc_allocator.h', 'pector.h', 'pector_internals.h', 'recommended_size.h', 'attr.h', 'cast.h', 'common.h', 'complex.h', 'descr.h', 'eigen.h', 'functional.h', 'numpy.h', 'operators.h', 'pybind11.h', 'pytypes.h', 'stl.h', 'stl_bind.h', 'typeid.h', 'CMakeLists.txt', 'setup.cfg', 'setup.py', 'app.py', 'exprs.py', 'lib.py']",[],0,182345,182345,1036,0.5459153501731858,0.7564416659626595,0.7966545577426712
276a1d5cc3bf407f08e2ffb9f69da188a811ee40,"Fix compilation under Win32

ssize_t might have already been defined by Python! Do not override it.

Thanks to Kevin Szkudlapski for reporting this issue!",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-12 14:27:56+02:00,-7200,2016-09-12 16:43:07+02:00,-7200,True,False,['compat.h'],['ec72235f8bb3138b25638903458f47e4a61d1b53'],0,2,2,1,,,
9fc4b6c4e19c83192e2c2e763fe81ac4d5df151a,Fix non existent (for now) reference in the documentation,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-17 13:49:15+02:00,-7200,2016-09-17 13:49:15+02:00,-7200,True,False,['concepts.rst'],['276a1d5cc3bf407f08e2ffb9f69da188a811ee40'],2,0,2,1,,,
9d7abb2aec24e74f9f6300709357e380e58bcf2d,"Fix sub_exprs in pytanque

pybind11 was returning a pointer to a local reference for the list of
values to replace. Note that a static_assert is now present in newer
version of pybind11 and that VC++ emitted a warning about this.",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-17 13:50:02+02:00,-7200,2016-09-17 13:50:02+02:00,-7200,True,False,"['pytanque.cpp', 'subs.cpp']",['9fc4b6c4e19c83192e2c2e763fe81ac4d5df151a'],30,54,84,2,1.0,1.0,1.0
d0a9db05f466ea06feb9a5ddf8fe0262b2809bf9,Bump to 0.1.5,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-17 13:52:09+02:00,-7200,2016-09-17 13:52:09+02:00,-7200,True,False,"['conf.py', 'setup.py', 'setup.py']",['9d7abb2aec24e74f9f6300709357e380e58bcf2d'],3,3,6,3,,,
da33bf56c550febd1ce467b692088bbfe7dea28e,TypeError became a RuntimeError with pybind11,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-18 09:11:43+02:00,-7200,2016-09-18 09:11:43+02:00,-7200,True,False,['mba_impl_petanque.py'],['d0a9db05f466ea06feb9a5ddf8fe0262b2809bf9'],1,1,2,1,,,
110ea730d1dc49cf16683f16d54489bac398fbd5,"Fix pytanque.Matrix constructor w/ lambda function

This issue was incorrectly fixed when we changed from boost.python to
pybind11",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-23 15:33:12+02:00,-7200,2016-09-23 15:33:12+02:00,-7200,True,False,"['pytanque.cpp', 'matrix.h']",['da33bf56c550febd1ce467b692088bbfe7dea28e'],5,5,10,2,,,
785e32b629e1db3e0dbe8cbc2d14e015fa15b7d3,"Add new API/helpers/operations to mba_if

Support for:
* slice extraction from a variable
* rol/ror
* flattening variables
* sext/zext",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-23 15:36:35+02:00,-7200,2016-09-23 15:44:04+02:00,-7200,True,False,"['__init__.py', 'mba_if.py', 'mba_impl_petanque.py', 'iarybo']",['110ea730d1dc49cf16683f16d54489bac398fbd5'],6,96,102,4,1.0,0.8225806451612904,0.8387096774193549
4aa4aa376ec5c9d481a6d476fe87bd26df79d6d4,Support for running test independently,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-23 15:37:35+02:00,-7200,2016-09-23 15:44:04+02:00,-7200,True,False,"['app.py', 'exprs.py', 'lib.py']",['785e32b629e1db3e0dbe8cbc2d14e015fa15b7d3'],0,9,9,3,,,
4f2efa2f0b3b538b2a9702b41473207e6efb9ec9,"Initial support for Triton!

Conversion from a subset of the triton AST to an MBA variable!",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-23 15:38:18+02:00,-7200,2016-09-24 12:45:02+02:00,-7200,True,False,"['__init__.py', 'triton_.py', 'triton_.py']",['4aa4aa376ec5c9d481a6d476fe87bd26df79d6d4'],1,247,248,3,0.3313953488372093,0.5465116279069767,0.9883720930232558
a0704a7cd7607826dc6f3e7aff0a4dfdae4b0620,"Python2 support!

Tested under OSX/Linux!",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-23 15:43:40+02:00,-7200,2016-09-24 12:45:02+02:00,-7200,True,False,"['README.rst', 'bool_solver.py', 'mba_if.py', 'mba_impl_petanque.py', 'mba_impl_sympy.py', 'tester.py', 'petanque.py', 'triton_.py', 'setup.rst', 'setup.py']",['4f2efa2f0b3b538b2a9702b41473207e6efb9ec9'],22,38,60,10,0.0,0.0,0.0
d2769b5c40706d804b7a7ccf26855ec459b980c3,Documentation and examples for using Triton and IDA with Arybo,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-24 12:43:09+02:00,-7200,2016-09-24 13:38:48+02:00,-7200,True,False,"['ida_xor5C.png', 'index.rst', 'integration.rst', 'reference-arybo.rst', 'triton_ast.py', 'triton_ida.py']",['a0704a7cd7607826dc6f3e7aff0a4dfdae4b0620'],0,113,113,6,,,
10f8cde045643459e49f14ab479bfce577dbbc17,"Remarks on Python 2 and Windows

This is not possible to install pytanque for Python2 under Windows for
now (Visual Studio 2010 can't compile libpetanque).",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-24 13:35:52+02:00,-7200,2016-09-24 13:38:48+02:00,-7200,True,False,"['README.rst', 'setup.rst']",['d2769b5c40706d804b7a7ccf26855ec459b980c3'],9,17,26,2,,,
023c19df8ff2fde6e1fe125a7f30dc6c5cca8509,Bump to 0.2.0,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-24 13:36:13+02:00,-7200,2016-09-24 13:38:48+02:00,-7200,True,False,"['CHANGELOG', 'conf.py', 'setup.py', 'setup.py']",['10f8cde045643459e49f14ab479bfce577dbbc17'],4,18,22,4,,,
e8a7eeb473fcecb2774d48b4b37a7560df4bfb60,"Fix flatten_no_rec and the simplification process

* run flatten_no_rec on the *same* expression until no flattening is
possible
* add another flatten_no_rec call before expand_no_rec (previous pass
can add opportunities for flattening)
* first sort the overall expression before simplification (the
simplification process implies that argument are sorted at the
beggining)",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-10-26 12:09:12+02:00,-7200,2016-10-26 13:05:06+02:00,-7200,True,False,"['simps.cpp', 'simp_flatten.cpp']",['023c19df8ff2fde6e1fe125a7f30dc6c5cca8509'],9,23,32,2,0.0,1.0,1.0
21afd5cad77e71cafac1b0b9595cb6e30193b5b5,"Documentation for installation under Ubuntu 14.04

GCC 4.8 can't compile some C++14 feature used by libpetanque. This can
be fixed by using a PPA that provides GCC 6 and a more up-to-date
libstdc++.

This fixes #1.

Thanks to Sebastian Banescu for reporting this issue!",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-11-02 21:13:33+01:00,-3600,2016-11-02 21:22:01+01:00,-3600,True,False,"['README.rst', 'setup.rst']",['e8a7eeb473fcecb2774d48b4b37a7560df4bfb60'],1,30,31,2,,,
7b4d52c6eb4c7befd3b749e87fb1cf349fa7f336,Fix multiplication by negative numbers,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-11-08 10:09:03+01:00,-3600,2016-11-08 10:09:03+01:00,-3600,True,False,['mba_impl_petanque.py'],['21afd5cad77e71cafac1b0b9595cb6e30193b5b5'],0,2,2,1,0.5,0.5,0.0
f6bb9e015019392ef1173637001b2eee9fd3483b,"Arybo word-level expressions and lazy eval

Add a word-level expression AST inside arybo, which allows to define
expressions like ExprXor(ExprBV(mba.var('x')), ExprCst(0xAA)).
We can also eval them bit-per-bit, which makes a kind of ""lazy
evaluation"" for these expressions. For instance, with the expression
ExprAdd(x32,y32)[:8] (only the first 8 bits of the 32-bit addition of x
and y), we will only compute the first 8 bits of this addition (and not
the 32 bits of the addition and then keep only the first 8 bits).",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-09-27 15:15:46+02:00,-7200,2016-11-12 12:11:39+01:00,-3600,True,False,"['mba_exprs.py', 'mba_if.py', '__init__.py', 'triton_.py', 'iarybo', 'triton_ida.py', 'xor_5C.py', 'sorted_vector.h', 'simps.cpp', 'CMakeLists.txt', 'mba_exprs.py', 'triton_.py']",['7b4d52c6eb4c7befd3b749e87fb1cf349fa7f336'],27,882,909,12,0.8470790378006873,0.9587628865979382,0.4639175257731959
65fc65d2b1bc29e7027e17bc98805709fa9748bb,"Expression assembler thanks to LLVM & llvmlite :)

Add the ""passes"" concept on the expressions, with the first one being
the lowering of ROR and ROL to a combinaison of LShr/Shl/XOR.",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-10-14 19:16:10+02:00,-7200,2016-11-12 15:35:25+01:00,-3600,True,False,"['exprs_asm.py', 'exprs_passes.py', 'mba_exprs.py', 'pytanque.cpp', 'examples.py', 'llvm.py']",['f6bb9e015019392ef1173637001b2eee9fd3483b'],12,386,398,6,0.8565737051792829,1.0,0.701195219123506
9d345b57f21de33ffeca1657bb7199903081e483,Triton + IDA + llvm + patching example,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-10-14 19:17:51+02:00,-7200,2016-11-12 15:35:25+01:00,-3600,True,False,['triton_ida_patch.py'],['65fc65d2b1bc29e7027e17bc98805709fa9748bb'],0,60,60,1,,,
2e063679c92d0eb5a062831cf783bf72d78a759a,"Identify word-level expression from the ANF form

This is just the beggining. We identify for now AND, XOR and a
combination of them.",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-10-14 19:16:39+02:00,-7200,2016-11-17 11:44:23+01:00,-3600,True,False,"['identify.py', 'identify.py']",['9d345b57f21de33ffeca1657bb7199903081e483'],0,88,88,2,0.5263157894736842,0.3333333333333333,0.9298245614035088
860a11684b872a4c708f725b84d9d7a59650908e,Caching passes,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-10-25 12:04:59+02:00,-7200,2016-11-17 11:44:23+01:00,-3600,True,False,"['exprs_asm.py', 'exprs_passes.py', 'mba_exprs.py', 'llvm.py']",['2e063679c92d0eb5a062831cf783bf72d78a759a'],3,25,28,4,0.05555555555555555,0.8888888888888888,0.4444444444444444
58cab3e55bd831f4df4fb6e4889602dcbd646787,Fix variable.eval for pytanque when a symbolic expression is returned,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-10-25 14:20:45+02:00,-7200,2016-11-17 11:44:23+01:00,-3600,True,False,['mba_impl_petanque.py'],['860a11684b872a4c708f725b84d9d7a59650908e'],5,6,11,1,0.0,0.0,0.0
e489194cfd2a3e12e01db38957b4c99d81e4db45,"IR: logical expressions and comparaisons

Only ExprEq is lowered into ANF. Others are supported by LLVM and
Triton.",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-10-25 14:54:15+02:00,-7200,2016-11-17 11:44:23+01:00,-3600,True,False,"['exprs_asm.py', 'mba_exprs.py', 'llvm.py', 'mba_exprs.py']",['58cab3e55bd831f4df4fb6e4889602dcbd646787'],17,134,151,4,0.9565217391304348,1.0,0.2608695652173913
98272a64f44743b44a97121238a1bd607f504b3a,LLVM backend: comparaison and condition expressions,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-10-25 15:59:04+02:00,-7200,2016-11-17 11:44:23+01:00,-3600,True,False,"['exprs_asm.py', 'mba_exprs.py', 'triton_.py', 'llvm.py']",['e489194cfd2a3e12e01db38957b4c99d81e4db45'],26,94,120,4,0.5357142857142857,0.8571428571428571,0.7857142857142857
9a5928082a77900f5ea039bb062ec6c50d09c00b,"IR+triton: fix shifts operation

* make shifts and rotate shifts binary operations, so that they can have
a symbolic shift count (still not supported in pytanque)
* fix associated tests
* triton: fix bug because rotate shifts and classical shifts don't have
the same API...",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-11-12 15:39:39+01:00,-3600,2016-11-17 11:44:23+01:00,-3600,True,False,"['exprs_asm.py', 'exprs_passes.py', 'mba_exprs.py', 'mba_if.py', 'triton_.py', 'llvm.py', 'mba_exprs.py', 'triton_.py']",['98272a64f44743b44a97121238a1bd607f504b3a'],99,144,243,8,0.34285714285714286,0.4,0.6857142857142857
d13ed449b2fc71b841aa74f586f8ba96393db8e5,Fix eval_expr when the new values are pytanque vectors,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-11-12 15:36:43+01:00,-3600,2016-11-17 11:44:23+01:00,-3600,True,False,['mba_impl_petanque.py'],['9a5928082a77900f5ea039bb062ec6c50d09c00b'],2,5,7,1,0.0,0.0,0.0
618ca704ef4bb2fa5dfe41bb1abe455ace6d3326,"Rename triton2arybo to tritonast2arybo

Moreover, add a more complete test to fully test the triton frontend",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-11-12 15:37:23+01:00,-3600,2016-11-17 11:44:23+01:00,-3600,True,False,"['__init__.py', 'triton_.py', 'triton_ida_patch.py', 'triton_.py']",['d13ed449b2fc71b841aa74f586f8ba96393db8e5'],14,102,116,4,0.0,1.0,1.0
8e284acad3f9f88b4f79c8a75e4fb0b973642938,New API for store_reg/load_reg in llvmlite,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-11-17 11:40:54+01:00,-3600,2016-11-17 11:44:23+01:00,-3600,True,False,['exprs_asm.py'],['618ca704ef4bb2fa5dfe41bb1abe455ace6d3326'],2,2,4,1,,,
7b9aa5b3960845b1a1a949c17f5bc432a7dc5e36,Expression prettyprinter imported in iarybo,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2016-11-17 11:41:10+01:00,-3600,2016-11-17 11:44:23+01:00,-3600,True,False,['iarybo'],['8e284acad3f9f88b4f79c8a75e4fb0b973642938'],0,1,1,1,,,
f331c60fd8e60d6c1cdfe0f69d4fd959064fb4e5,Version bump,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2017-01-02 18:34:04+01:00,-3600,2017-01-05 13:09:52+01:00,-3600,True,False,"['conf.py', 'setup.py', 'setup.py']",['7b9aa5b3960845b1a1a949c17f5bc432a7dc5e36'],5,5,10,3,,,
cd0564b2a33aa1f7ace0980829c017cf18cf7be7,Documentation for asm_binary and llvmlite setup,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2017-01-03 23:15:16+01:00,-3600,2017-01-05 13:11:24+01:00,-3600,True,False,"['exprs_asm.py', 'reference-arybo.rst', 'setup.rst']",['f331c60fd8e60d6c1cdfe0f69d4fd959064fb4e5'],3,70,73,3,,,
d90207e918c40d8a3209a7099d9d987e3eb82618,"Import asm_{module,binary} in iarybo

Moreover, emit a warning if llvmlite isn't available!",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2017-01-03 23:24:23+01:00,-3600,2017-01-05 13:11:24+01:00,-3600,True,False,['iarybo'],['cd0564b2a33aa1f7ace0980829c017cf18cf7be7'],0,8,8,1,,,
cb85eb32eb06c3a3ad88f5165cfed1476a08e64b,Enhance MBA.eval to support symbols as keys,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2017-01-04 21:10:39+01:00,-3600,2017-01-05 13:11:24+01:00,-3600,True,False,"['mba_if.py', 'mba_impl_petanque.py', 'pytanque.cpp']",['d90207e918c40d8a3209a7099d9d987e3eb82618'],56,74,130,3,0.8333333333333334,0.9166666666666666,0.9166666666666666
c0df91675d279f2bc3dbff34e997164957d17237,"Fix ExprBV.__ror

This wans't working with an integer object as argument",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2017-02-06 17:28:53+01:00,-3600,2017-02-06 17:28:53+01:00,-3600,True,False,['mba_exprs.py'],['cb85eb32eb06c3a3ad88f5165cfed1476a08e64b'],0,1,1,1,1.0,1.0,1.0
79c4cd713c5888ea18404e02d69944567cdba848,"Add ExprRem and fix ExprDiv

* fix ExprDiv _is_signed property
* use udiv or sdiv whether ExprDiv is signed or not
* add ExprRem, without ANF form for now",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2017-07-30 15:00:42+02:00,-7200,2017-07-30 15:50:05+02:00,-7200,True,False,"['exprs_asm.py', 'mba_exprs.py', 'triton_.py', 'triton_.py']",['c0df91675d279f2bc3dbff34e997164957d17237'],8,55,63,4,0.45161290322580644,0.9354838709677419,0.9032258064516129
db6d5ff3e5f059418d17da42172c83924e8661d5,"Compatibility fix with the latest version of triton + AShr support

Moreover, fix the prettyprinter!",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2017-12-27 11:31:56+01:00,-3600,2017-12-27 15:46:27+01:00,-3600,True,False,"['exprs_asm.py', 'mba_exprs.py', 'mba_if.py', 'mba_impl_petanque.py', 'triton_.py', 'triton_.py']",['79c4cd713c5888ea18404e02d69944567cdba848'],29,85,114,6,0.8536585365853658,0.975609756097561,0.4878048780487805
57c7f90e6f3f6c7ef8010ec6dad00d32bba2fbd7,Fix MBAVariable evaluation and app inversion!,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2017-12-27 16:05:25+01:00,-3600,2017-12-27 16:05:25+01:00,-3600,True,False,"['mba_if.py', 'mba_impl_petanque.py', 'petanque.py']",['db6d5ff3e5f059418d17da42172c83924e8661d5'],5,14,19,3,0.14285714285714285,0.14285714285714285,0.0
b3a468befe647720a07ecc9e833590a6eb14e59b,"Fix LLVM IR emitter: phi nodes had the wrong source basic block

This can be seen for instance when conditions contains themselves a
condition! Thanks Jonathan Salwan for the report.",Adrien Guinet,adrien@guinet.me,Adrien Guinet,adrien@guinet.me,2018-03-01 18:06:32+01:00,-3600,2018-03-01 18:06:32+01:00,-3600,True,False,"['exprs_asm.py', 'mba_exprs.py']",['57c7f90e6f3f6c7ef8010ec6dad00d32bba2fbd7'],14,42,56,2,1.0,1.0,0.7692307692307693
38dd93c920d0c0f16090346dd839979d750f7259,Up-to-date with the Triton API,Jonathan Salwan,jonathan.salwan@gmail.com,Adrien Guinet,adrien@guinet.me,2019-01-21 13:47:10+01:00,-3600,2019-01-21 13:53:00+01:00,-3600,True,False,['triton_.py'],['b3a468befe647720a07ecc9e833590a6eb14e59b'],1,1,2,1,,,
d50423ed5f0ea26f278f04da79fc62f9341c3a7b,Rename rest triton2arybo to tritonast2arybo,ntddk,ntinternal@gmail.com,Adrien Guinet,adrien@guinet.me,2017-11-13 13:36:35+09:00,-32400,2019-01-21 13:56:36+01:00,-3600,True,False,"['integration.rst', 'triton_ast.py', 'triton_ida.py']",['38dd93c920d0c0f16090346dd839979d750f7259'],5,5,10,3,,,
72ebe7dcead6ec2823b026bf278cf3bbec068059,Synch with the Triton API,Jonathan Salwan,jonathan.salwan@gmail.com,Adrien Guinet,adrien@guinet.me,2019-02-15 15:11:03+01:00,-3600,2019-02-15 15:12:31+01:00,-3600,True,False,['triton_.py'],['d50423ed5f0ea26f278f04da79fc62f9341c3a7b'],12,2,14,1,1.0,1.0,1.0
04fad817090b3b9f2328a5e984457aba6024e971,Sync with Triton API,Loris Reiff,loris.reiff@liblor.ch,Adrien Guinet,adrien@guinet.me,2019-03-26 21:10:22+01:00,-3600,2019-04-10 22:00:44+02:00,-7200,True,False,['triton_.py'],['72ebe7dcead6ec2823b026bf278cf3bbec068059'],4,4,8,1,,,
514b32e9b219d716b99adfe6a0104643d400f52e,Support networkx 2.4,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2020-03-28 12:37:21+01:00,-3600,2020-03-28 12:37:21+01:00,-3600,True,False,"['petanque.py', 'setup.py']",['04fad817090b3b9f2328a5e984457aba6024e971'],2,2,4,2,,,
6cc69c38dec5acf913f1c8f93cb80f78d06c1542,C++14 proper support for petanque,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2020-03-28 12:37:29+01:00,-3600,2020-03-28 12:37:29+01:00,-3600,True,False,['setup.py'],['514b32e9b219d716b99adfe6a0104643d400f52e'],1,1,2,1,,,
a45be8a1445bdbfd9086d70a7fe2ca490a2280de,python: s/collections/collections.abc,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2020-03-28 12:37:38+01:00,-3600,2020-03-28 12:37:38+01:00,-3600,True,False,['exprs_asm.py'],['6cc69c38dec5acf913f1c8f93cb80f78d06c1542'],2,2,4,1,,,
f03e21c6956135afd89fa19bf845fa220525f568,"Bump to 1.1.0, production/stable and newest python3 versions",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2020-03-28 12:39:50+01:00,-3600,2020-03-28 12:39:50+01:00,-3600,True,False,"['setup.py', 'setup.py']",['a45be8a1445bdbfd9086d70a7fe2ca490a2280de'],10,10,20,2,,,
bbcbd6e38703c97a9a982c976c81258d3f65d584,"Update pybind11 to 2.4.3

Remove deprecated usages",Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2020-03-28 12:57:28+01:00,-3600,2020-03-28 13:07:51+01:00,-3600,True,False,"['pytanque.cpp', 'attr.h', 'buffer_info.h', 'cast.h', 'chrono.h', 'common.h', 'complex.h', 'descr.h', 'class.h', 'common.h', 'descr.h', 'init.h', 'internals.h', 'typeid.h', 'eigen.h', 'embed.h', 'eval.h', 'functional.h', 'iostream.h', 'numpy.h', 'operators.h', 'options.h', 'pybind11.h', 'pytypes.h', 'stl.h', 'stl_bind.h']",['f03e21c6956135afd89fa19bf845fa220525f568'],2887,10045,12932,26,0.5651623787431463,0.5588359342049768,0.7359763812737241
b2ce70e770890a8dca5dceb1d3079d32f0ffaa71,Update boost to 1.67,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2020-03-28 13:02:46+01:00,-3600,2020-03-28 13:07:51+01:00,-3600,True,False,"['config.hpp', 'auto_link.hpp', 'borland.hpp', 'clang.hpp', 'codegear.hpp', 'comeau.hpp', 'common_edg.hpp', 'compaq_cxx.hpp', 'cray.hpp', 'diab.hpp', 'digitalmars.hpp', 'gcc.hpp', 'gcc_xml.hpp', 'greenhills.hpp', 'hp_acc.hpp', 'intel.hpp', 'kai.hpp', 'metrowerks.hpp', 'mpw.hpp', 'nvcc.hpp', 'pathscale.hpp', 'pgi.hpp', 'sgi_mipspro.hpp', 'sunpro_cc.hpp', 'vacpp.hpp', 'visualc.hpp', 'xlcpp.hpp', 'xlcpp_zos.hpp', 'posix_features.hpp', 'select_compiler_config.hpp', 'select_platform_config.hpp', 'select_stdlib_config.hpp', 'suffix.hpp', 'header_deprecated.hpp', 'helper_macros.hpp', 'aix.hpp', 'beos.hpp', 'bsd.hpp', 'cloudabi.hpp', 'cray.hpp', 'cygwin.hpp', 'haiku.hpp', 'hpux.hpp', 'irix.hpp', 'linux.hpp', 'macos.hpp', 'qnxnto.hpp', 'solaris.hpp', 'symbian.hpp', 'vxworks.hpp', 'win32.hpp', 'zos.hpp', 'pragma_message.hpp', 'dinkumware.hpp', 'libcomo.hpp', 'libcpp.hpp', 'libstdcpp3.hpp', 'modena.hpp', 'msl.hpp', 'roguewave.hpp', 'sgi.hpp', 'stlport.hpp', 'vacpp.hpp', 'xlcpp_zos.hpp', 'workaround.hpp', 'addressof.hpp', 'cstdint.hpp', 'iterator.hpp', 'workaround.hpp', 'integer_fwd.hpp', 'iterator.hpp', 'iterator_categories.hpp', 'iterator_facade.hpp', 'iterator_traits.hpp', 'assert.hpp', 'integral_c.hpp', 'integral_c_fwd.hpp', 'dec.hpp', 'cat.hpp', 'not_equal.hpp', 'config.hpp', 'enum_params.hpp', 'identity.hpp', 'for.hpp', 'is_empty.hpp', 'rest_n.hpp', 'size.hpp', 'eat.hpp', 'static_assert.hpp', 'add_const.hpp', 'add_lvalue_reference.hpp', 'add_pointer.hpp', 'add_reference.hpp', 'add_rvalue_reference.hpp', 'declval.hpp', 'bool_trait_def.hpp', 'bool_trait_undef.hpp', 'config.hpp', 'cv_traits_impl.hpp', 'false_result.hpp', 'ice_and.hpp', 'ice_eq.hpp', 'ice_not.hpp', 'ice_or.hpp', 'is_function_ptr_helper.hpp', 'is_function_ptr_tester.hpp', 'is_mem_fun_pointer_impl.hpp', 'is_mem_fun_pointer_tester.hpp', 'template_arity_spec.hpp', 'type_trait_def.hpp', 'type_trait_undef.hpp', 'ice.hpp', 'integral_constant.hpp', 'intrinsics.hpp', 'is_abstract.hpp', 'is_arithmetic.hpp', 'is_array.hpp', 'is_class.hpp', 'is_complete.hpp', 'is_const.hpp', 'is_convertible.hpp', 'is_enum.hpp', 'is_float.hpp', 'is_floating_point.hpp', 'is_function.hpp', 'is_integral.hpp', 'is_lvalue_reference.hpp', 'is_member_function_pointer.hpp', 'is_member_pointer.hpp', 'is_pod.hpp', 'is_pointer.hpp', 'is_polymorphic.hpp', 'is_reference.hpp', 'is_rvalue_reference.hpp', 'is_same.hpp', 'is_scalar.hpp', 'is_union.hpp', 'is_void.hpp', 'is_volatile.hpp', 'remove_bounds.hpp', 'remove_const.hpp', 'remove_cv.hpp', 'remove_pointer.hpp', 'remove_reference.hpp', 'version.hpp']",['bbcbd6e38703c97a9a982c976c81258d3f65d584'],3315,5835,9150,145,1.0,1.0,0.8461538461538461
3b01c1ab13cb454c220912d17204fc794d7c1ab0,ipython as an optional dependency,Adrien Guinet,aguinet@quarkslab.com,aguinetqb,36816500+aguinetqb@users.noreply.github.com,2020-03-28 13:11:51+01:00,-3600,2020-03-28 13:15:15+01:00,-3600,True,False,"['iarybo', 'setup.py']",['b2ce70e770890a8dca5dceb1d3079d32f0ffaa71'],3,8,11,2,,,
0b49a6f74ec0b20ed0f5e48fdd1775a339be288a,Tests arybo + pytanque using GH actions,aguinetqb,36816500+aguinetqb@users.noreply.github.com,aguinetqb,36816500+aguinetqb@users.noreply.github.com,2020-03-28 12:16:34+01:00,-3600,2020-03-28 13:15:15+01:00,-3600,True,False,['python_tests.yml'],['3b01c1ab13cb454c220912d17204fc794d7c1ab0'],0,28,28,1,,,
42cc3e2b22b56fcca15df51f8f7deac71094bd7b,Create petanque_tests.yml,aguinetqb,36816500+aguinetqb@users.noreply.github.com,aguinetqb,36816500+aguinetqb@users.noreply.github.com,2020-03-28 13:20:40+01:00,-3600,2020-03-28 13:25:21+01:00,-3600,True,False,['petanque_tests.yml'],['0b49a6f74ec0b20ed0f5e48fdd1775a339be288a'],0,26,26,1,,,
18e5c025fbd4edeed6c3e8306376a1cbf83802bd,Update petanque_tests.yml,aguinetqb,36816500+aguinetqb@users.noreply.github.com,aguinetqb,36816500+aguinetqb@users.noreply.github.com,2020-03-28 13:22:35+01:00,-3600,2020-03-28 13:25:21+01:00,-3600,True,False,['petanque_tests.yml'],['42cc3e2b22b56fcca15df51f8f7deac71094bd7b'],1,1,2,1,,,
6806acdb4f924f0f1efbe2ebc9775921942e7604,Update petanque_tests.yml,aguinetqb,36816500+aguinetqb@users.noreply.github.com,aguinetqb,36816500+aguinetqb@users.noreply.github.com,2020-03-28 13:23:49+01:00,-3600,2020-03-28 13:25:21+01:00,-3600,True,False,['petanque_tests.yml'],['18e5c025fbd4edeed6c3e8306376a1cbf83802bd'],1,3,4,1,,,
27cf1468dac22485919b85fddab40aa25b83b836,Run tests under OSX,Adrien Guinet,aguinet@quarkslab.com,aguinetqb,36816500+aguinetqb@users.noreply.github.com,2020-03-28 13:27:38+01:00,-3600,2020-03-28 14:16:17+01:00,-3600,True,False,"['petanque_tests.yml', 'python_tests.yml']",['6806acdb4f924f0f1efbe2ebc9775921942e7604'],4,13,17,2,,,
0baec4d1eb69cb948b4cb0051d15446ed2d532b9,CMake: cleanup compiler flags and library definition,Adrien Guinet,aguinet@quarkslab.com,aguinetqb,36816500+aguinetqb@users.noreply.github.com,2020-03-28 15:05:00+01:00,-3600,2020-03-28 15:46:49+01:00,-3600,True,False,"['CMakeCompilers.txt', 'CMakeLists.txt', 'setup.py', 'CMakeLists.txt', 'CMakeLists.txt']",['27cf1468dac22485919b85fddab40aa25b83b836'],16,23,39,5,,,
62235ed087cf02aae1da6129187047008b1ab418,Run tests under Windows,Adrien Guinet,aguinet@quarkslab.com,aguinetqb,36816500+aguinetqb@users.noreply.github.com,2020-03-28 14:16:48+01:00,-3600,2020-03-28 15:46:49+01:00,-3600,True,False,"['petanque_tests.yml', 'python_tests.yml', 'CMakeCompilers.txt', 'exports.h', 'CMakeLists.txt', 'CMakeLists.txt', 'tests.h']",['0baec4d1eb69cb948b4cb0051d15446ed2d532b9'],42,35,77,7,,,
11c2ba9b31fe84355450cc329bb5c037c034f25c,Build python wheels for pytanque,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,adrien@guinet.me,2020-03-28 16:02:47+01:00,-3600,2020-03-28 17:53:28+01:00,-3600,True,False,"['python_wheels.yml', 'setup.py']",['62235ed087cf02aae1da6129187047008b1ab418'],1,57,58,2,,,
a87cfd5f25a2f462731174bbb1326a53bba0fcf8,CI: merge tests into a single YAML file,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,adrien@guinet.me,2020-03-28 17:54:50+01:00,-3600,2020-03-28 18:10:39+01:00,-3600,True,False,"['python_tests.yml', 'tests.yml']",['11c2ba9b31fe84355450cc329bb5c037c034f25c'],33,29,62,2,,,
3bfbc67279ed449155e2f99f7f3bd8c4847e2cd3,Tests: run only on pull requests and master,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,adrien@guinet.me,2020-03-28 17:55:25+01:00,-3600,2020-03-28 18:10:39+01:00,-3600,True,False,['tests.yml'],['a87cfd5f25a2f462731174bbb1326a53bba0fcf8'],2,6,8,1,,,
7a6bcb06bd15af6bce4d48e346f487a55431e5bc,Publish on PyPI on releases,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,adrien@guinet.me,2020-03-28 18:20:16+01:00,-3600,2020-03-28 18:46:04+01:00,-3600,True,False,['dist_publish.yml'],['3bfbc67279ed449155e2f99f7f3bd8c4847e2cd3'],2,37,39,1,,,
71a0243a4090cc84137a2b12c7ffc3635334f908,Fix setup.py classifiers,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2020-03-28 19:00:47+01:00,-3600,2020-03-28 19:00:47+01:00,-3600,True,False,"['setup.py', 'setup.py']",['7a6bcb06bd15af6bce4d48e346f487a55431e5bc'],8,8,16,2,,,
9957eb95706fb753b620c6c2be5ed9a09eb8e55f,Wheelhouse/linux: only save tagged wheels in the artifact,Adrien Guinet,aguinet@quarkslab.com,Adrien Guinet,aguinet@quarkslab.com,2020-03-28 19:11:07+01:00,-3600,2020-03-28 19:16:21+01:00,-3600,True,False,['dist_publish.yml'],['71a0243a4090cc84137a2b12c7ffc3635334f908'],1,5,6,1,,,
abf5aa1ca5177c1d1caa1e0966e2b04928e3c7dc,fix: fix small typo in docs,Pedro Tammela,pctammela@gmail.com,Adrien Guinet,adrien@guinet.me,2020-04-23 12:46:06+00:00,0,2020-06-24 09:39:50+02:00,-7200,True,False,['mba_if.py'],['9957eb95706fb753b620c6c2be5ed9a09eb8e55f'],1,1,2,1,,,
89d9a4266fa51c1a560f6c4a66f65d1ffde5f093,Python 3.9 tests & wheels,Adrien Guinet,adrien@guinet.me,Adrien Guinet,adrien@guinet.me,2020-10-10 10:55:10+02:00,-7200,2020-10-10 12:33:55+02:00,-7200,True,False,"['dist_publish.yml', 'tests.yml']",['abf5aa1ca5177c1d1caa1e0966e2b04928e3c7dc'],7,7,14,2,,,
