Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
35d0557ea4b4aa0c0abe44fb9e5bdef1d0ff9f2b,Initial commit.,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-07 14:33:43-05:00,18000,2017-03-07 14:33:43-05:00,18000,True,False,"['.gitignore', '.gitreview', '.testr.conf', 'AUTHORS', 'CONTRIBUTING.rst', 'ChangeLog', 'HACKING.rst', 'LICENSE', 'MANIFEST.in', '__init__.py', 'discovery.py', 'requirements.txt', 'setup.cfg', 'setup.py', 'test-requirements.txt', 'tox.ini']",[],0,430,430,16,1.0,1.0,1.0
764289a3ac21d3a998968d319b5b30a2517d0edd,adds unit tests and README,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-17 15:59:16-04:00,14400,2017-03-17 15:59:16-04:00,14400,True,False,"['README.md', 'discovery.py', '__init__.py', 'base.py', '__init__.py', 'base.py', 'test_discovery.py', 'setup.cfg', 'test-requirements.txt', 'tox.ini']",['35d0557ea4b4aa0c0abe44fb9e5bdef1d0ff9f2b'],38,127,165,10,1.0,1.0,0.2857142857142857
a3d80ae0137b56e90b8dd69a9dae76927d937a4c,"moves discovery -> memory

Decided to organize the os_hardware library into component-specific modules
(like memory, numa, pci, etc) instead of function-specific modules (like
discovery, configure, etc)",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-18 14:05:56-04:00,14400,2017-03-18 14:05:56-04:00,14400,True,False,"['README.md', 'memory.py', 'test_memory.py']",['764289a3ac21d3a998968d319b5b30a2517d0edd'],11,12,23,3,,,
e2854efab85b4720d2fe943284fe4a68468f7087,"start fleshing out memory functionality

Adds a new os_hardware.memory.info() method which returns a memory.Info object
containing various attributes about the memory on a system. Took a little work
to get physical memory information for a Linux system without resorting to
using dmidecode which requires root privileges to execute.

In the process, added a @os_hardware.utils.memoize decorator for caching the
results of the expensive operations. @memoize grabbed from
https://wiki.python.org/moin/PythonDecoratorLibrary#Memoize",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-19 12:04:13-04:00,14400,2017-03-19 12:04:13-04:00,14400,True,False,"['README.md', 'memory.py', 'utils.py']",['a3d80ae0137b56e90b8dd69a9dae76927d937a4c'],0,186,186,3,0.5747126436781609,0.7701149425287356,0.9770114942528736
f00aee93cdb57682f134a3d59a3204b0b44e3971,"Rename os-hardware to hwk

Rebirthing as `hwk`, the HardWare toolKit :)

In the process, decoupling from OpenStack cookiecutter stuff and processes.",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-20 20:00:36-04:00,14400,2017-03-20 20:00:36-04:00,14400,True,False,"['.gitreview', '.testr.conf', 'CONTRIBUTING.rst', 'README.md', '__init__.py', 'memory.py', '__init__.py', 'base.py', '__init__.py', 'base.py', 'test_memory.py', 'utils.py', 'setup.cfg', 'tox.ini']",['e2854efab85b4720d2fe943284fe4a68468f7087'],79,38,117,14,,,
b9829b2d57151ef1a67b1f47fe1725245df7fdaa,adds describe() method to memory.Info,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-21 13:51:11-04:00,14400,2017-03-21 13:51:11-04:00,14400,True,False,"['README.md', 'memory.py']",['f00aee93cdb57682f134a3d59a3204b0b44e3971'],2,49,51,2,1.0,1.0,1.0
8740d337dee4d03efcc9db9919d7bb0751b1af09,"Adds disk subsystem module

Add first round support for discovering disk information on Linux.

>>> from hwk import disk
>>> disk.info()
disk (1 disks, 1905440.0 MB total size)
>>> for d in disk.info().disks:
...     print d
...
sda  (1905440 MB) [SCSI]",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-21 15:47:49-04:00,14400,2017-03-21 15:47:49-04:00,14400,True,False,"['README.md', 'disk.py', 'memory.py']",['b9829b2d57151ef1a67b1f47fe1725245df7fdaa'],5,193,198,3,1.0,1.0,0.9333333333333333
f780c44da03dab3ecd89a766efc0ee41d73d4aaa,"disk -> block

What we were describing is block devices, not disks. Adding a new disk module
that sticks to disks, not block devices.",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-22 19:24:58-04:00,14400,2017-03-22 19:24:58-04:00,14400,True,False,"['README.md', 'block.py', 'units.py']",['8740d337dee4d03efcc9db9919d7bb0751b1af09'],51,70,121,3,0.0,0.0,0.2
08e93eb2bbd4d610f75690c17face7acce8534ff,"udevadm support for grabbing device properties

Adds vendor and serial number information for block devices by querying the
udev database via udevadm",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-22 20:00:55-04:00,14400,2017-03-22 20:00:55-04:00,14400,True,False,"['README.md', 'block.py', 'udev.py']",['f780c44da03dab3ecd89a766efc0ee41d73d4aaa'],6,94,100,3,1.0,1.0,0.8888888888888888
11ed679f0b244cb492835fc80e489a108e52d7a7,"add partitions and disks

Changes the representation of hwk.block.Device to hwk.block.Disk and adds a
collection of hwk.block.Partition objects representing the various partitions
on the disk drive.",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-27 19:22:31-04:00,14400,2017-03-27 19:22:31-04:00,14400,True,False,"['README.md', 'block.py']",['08e93eb2bbd4d610f75690c17face7acce8534ff'],30,178,208,2,0.45161290322580644,1.0,0.8387096774193549
ffda40699a9fb43c52196cc28331625e5473eb1c,Quick typo in docstring correction,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-28 08:19:09-04:00,14400,2017-03-28 08:19:09-04:00,14400,True,False,['memory.py'],['11ed679f0b244cb492835fc80e489a108e52d7a7'],1,1,2,1,,,
fdf4a4ac2b153d19e94541e7eb2f23ae969d8091,"add cpu module

Adds start of CPU module",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-28 08:31:51-04:00,14400,2017-03-28 08:31:51-04:00,14400,True,False,"['README.md', 'cpu.py']",['ffda40699a9fb43c52196cc28331625e5473eb1c'],2,125,127,2,0.6851851851851852,1.0,1.0
11bfa55064bb57771e9f73b4837f0302f53269eb,unit tests for udev helper module,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-29 17:29:53-04:00,14400,2017-03-29 17:29:53-04:00,14400,True,False,['test_udev.py'],['fdf4a4ac2b153d19e94541e7eb2f23ae969d8091'],0,58,58,1,0.0,1.0,1.0
46370aaa5a9b62c15906bb4ce9941b85042ed4a0,"adds CPU object to cpu.info()

Adds a new CPU object model describing each physical CPU on the system to the
hwk.cpu.Info object returned by the hwk.cpu.info() function",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-29 19:44:58-04:00,14400,2017-03-29 19:44:58-04:00,14400,True,False,"['README.md', 'cpu.py']",['11bfa55064bb57771e9f73b4837f0302f53269eb'],11,79,90,2,0.18181818181818182,0.15151515151515152,1.0
7ab34d1b2405f2e96afac18ac2fd7275cccc2fb6,"add processor mapping to CPU object

Adds a map of core # within a physical CPU to a set of physical processors
associated with that core.",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-29 20:52:20-04:00,14400,2017-03-29 20:52:20-04:00,14400,True,False,"['README.md', 'cpu.py']",['46370aaa5a9b62c15906bb4ce9941b85042ed4a0'],0,52,52,2,0.0,0.0,1.0
60388570d14decde8061484396471edb916eef0e,add a few more design principles,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-29 20:58:09-04:00,14400,2017-03-29 20:58:09-04:00,14400,True,False,['README.md'],['7ab34d1b2405f2e96afac18ac2fd7275cccc2fb6'],0,12,12,1,,,
382593fc0596e7d2954c6f8de8e0458e1a040ef6,add back a missing example line for cpu,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-29 21:00:13-04:00,14400,2017-03-29 21:00:13-04:00,14400,True,False,['README.md'],['60388570d14decde8061484396471edb916eef0e'],0,2,2,1,,,
26c43c22679030ee47642697200ccefc32fbe754,"add physical package/socket count to cpu info

I overlooked the need to list the number of physical sockets/packages in the
cpu.info(), so this patch simply adds that information to the __repr__ output
of hwk.cpu.info()",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-30 15:16:20-04:00,14400,2017-03-30 15:16:20-04:00,14400,True,False,"['README.md', 'cpu.py']",['382593fc0596e7d2954c6f8de8e0458e1a040ef6'],4,6,10,2,1.0,1.0,1.0
53925bd5f1eabb50144d0889be0c26b73a715c40,"add CPU feature flags to CPU model

Grabs CPU feature flags from the /proc/cpuinfo output and adds them as a set of
strings to the CPU object model.",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-30 15:34:06-04:00,14400,2017-03-30 15:34:06-04:00,14400,True,False,"['README.md', 'cpu.py']",['26c43c22679030ee47642697200ccefc32fbe754'],2,27,29,2,0.3333333333333333,0.3333333333333333,1.0
5cb2905f5f6c1812daec449fc0e759d68348c49a,"add net module for network subsystem

Adds start of `hwk.net` module for querying information about networking
hardware.",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-30 17:19:33-04:00,14400,2017-03-30 17:19:33-04:00,14400,True,False,"['README.md', 'net.py']",['53925bd5f1eabb50144d0889be0c26b73a715c40'],0,132,132,2,1.0,1.0,1.0
31fecfe5e94c3a16a25513bc7bc90e1e96653586,Add NIC's MAC address,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-30 17:40:06-04:00,14400,2017-03-30 17:40:06-04:00,14400,True,False,"['README.md', 'net.py']",['5cb2905f5f6c1812daec449fc0e759d68348c49a'],3,20,23,2,0.0,1.0,1.0
5632ff6e79a33dd36cd881100d5c0b9a86284169,Add NIC features to net module,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-31 14:08:26-04:00,14400,2017-03-31 14:08:26-04:00,14400,True,False,"['README.md', 'net.py']",['31fecfe5e94c3a16a25513bc7bc90e1e96653586'],2,190,192,2,0.2413793103448276,1.0,1.0
fe65c76bc35a0f30988eaa067d91f2136d0fad62,add NIC bus type attribute.,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-31 14:52:27-04:00,14400,2017-03-31 14:52:27-04:00,14400,True,False,['net.py'],['5632ff6e79a33dd36cd881100d5c0b9a86284169'],0,7,7,1,0.6666666666666666,1.0,1.0
d07a06be40b4fa9496841f1e0bb410f7832674c4,add driver attribute to net.NIC,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-03-31 14:57:57-04:00,14400,2017-03-31 14:57:57-04:00,14400,True,False,"['README.md', 'net.py']",['fe65c76bc35a0f30988eaa067d91f2136d0fad62'],1,14,15,2,0.5,1.0,1.0
0c47839d33a4139f90b96c1ba932260d01811a80,adds basic GPU (PCI-only for right now) module,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-01 16:24:17-04:00,14400,2017-04-01 16:24:17-04:00,14400,True,False,"['README.md', 'cpu.py', 'gpu.py', 'net.py']",['d07a06be40b4fa9496841f1e0bb410f7832674c4'],2,142,144,4,0.6346153846153846,1.0,1.0
a63f8fe85aabc9b1ce4b1bf1ad7a3cf8b512cb39,adds driver attribute for GPUs,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-01 16:27:48-04:00,14400,2017-04-01 16:27:48-04:00,14400,True,False,"['README.md', 'gpu.py']",['0c47839d33a4139f90b96c1ba932260d01811a80'],0,8,8,2,0.5,1.0,1.0
0c83f246f3f4558e9154509fe7aeb97f5ecfe61f,add vendor ID to NIC objects,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-02 21:14:18-04:00,14400,2017-04-02 21:14:18-04:00,14400,True,False,"['README.md', 'net.py']",['a63f8fe85aabc9b1ce4b1bf1ad7a3cf8b512cb39'],3,9,12,2,0.5,1.0,1.0
aacf9e505808cfb2e697eec1ab31093abf80d471,add vendor ID to GPU objects,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-02 21:20:20-04:00,14400,2017-04-02 21:20:20-04:00,14400,True,False,['gpu.py'],['0c83f246f3f4558e9154509fe7aeb97f5ecfe61f'],0,9,9,1,0.0,1.0,1.0
10d92e1d79bac86228ffac8002626431a94ba603,adds start of physical topology module,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-03 17:10:22-04:00,14400,2017-04-03 17:10:22-04:00,14400,True,False,"['README.md', 'topology.py']",['aacf9e505808cfb2e697eec1ab31093abf80d471'],0,92,92,2,1.0,1.0,1.0
8de044d3be9272a02c349579f9e1d0b90128eddd,"add missing docstring for hwk.topology.Node

The Node object was not being described in the hwk.topology.Info object's
describe() method.",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-04 13:29:50-04:00,14400,2017-04-04 13:30:56-04:00,14400,True,False,['topology.py'],['10d92e1d79bac86228ffac8002626431a94ba603'],0,11,11,1,,,
404b3d808e23e93182ba5398f86484fd716e1777,Add processor_set logical processor set for hwk.topology.Node,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-04 16:08:21-04:00,14400,2017-04-04 16:08:21-04:00,14400,True,False,"['README.md', 'topology.py', 'utils.py']",['8de044d3be9272a02c349579f9e1d0b90128eddd'],2,75,77,3,1.0,1.0,1.0
ac264a191a819590aed87d33641ef24d3338fce4,"add hwk.topology.Core object

Adds a new Core object to the topology module along with additional core ->
logical processor and node -> core relationships",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-05 13:40:09-04:00,14400,2017-04-05 13:40:09-04:00,14400,True,False,"['README.md', 'topology.py']",['404b3d808e23e93182ba5398f86484fd716e1777'],6,98,104,2,0.47619047619047616,1.0,1.0
bd77a428b894be421f9991ae3f99b59a6047bb39,add memory cache information for nodes and cores,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-05 14:08:08-04:00,14400,2017-04-05 14:08:08-04:00,14400,True,False,['topology.py'],['ac264a191a819590aed87d33641ef24d3338fce4'],1,111,112,1,0.43103448275862066,0.43103448275862066,1.0
ed6e63fcfae9c9ece4057b8cd5085f8e23f15669,"fix memory cache processor set mapping

We were failing to key memory caches with the cache type, resulting in
instruction and data L1 caches being viewed as a duplicate cache. This
fixes that and renames MemoryCache to just Cache.",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-05 16:25:17-04:00,14400,2017-04-05 16:25:17-04:00,14400,True,False,"['README.md', 'topology.py']",['bd77a428b894be421f9991ae3f99b59a6047bb39'],32,77,109,2,0.0,0.0,1.0
62d172438f581b2677f44ac6aada37b225063c47,Map cores to caches in Core object.,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-05 16:35:27-04:00,14400,2017-04-05 16:35:27-04:00,14400,True,False,"['README.md', 'topology.py']",['ed6e63fcfae9c9ece4057b8cd5085f8e23f15669'],2,32,34,2,0.14285714285714285,0.0,1.0
9b0389563287a7d93ecdd2d9b2507ee92c40e6f4,pep8 fixes,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-06 14:23:56-04:00,14400,2017-04-06 14:23:56-04:00,14400,True,False,"['block.py', 'cpu.py', 'gpu.py', 'memory.py', 'net.py', 'test_memory.py', 'topology.py']",['62d172438f581b2677f44ac6aada37b225063c47'],17,21,38,7,0.3333333333333333,0.3333333333333333,1.0
4a8ef8f6a355b831cb8f78ade8d02fe3d9cb4f96,Correct some bad lines in the README for topology example,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-06 14:36:58-04:00,14400,2017-04-06 14:36:58-04:00,14400,True,False,['README.md'],['9b0389563287a7d93ecdd2d9b2507ee92c40e6f4'],9,2,11,1,,,
6ccdb3e1c98c8dc4d2428852d24fadbf2568d1c6,travis-CI-ify hwk,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-06 14:56:17-04:00,14400,2017-04-06 14:56:17-04:00,14400,True,False,"['.travis.yml', 'test-requirements.txt', 'tox.ini']",['4a8ef8f6a355b831cb8f78ade8d02fe3d9cb4f96'],0,16,16,3,,,
0554e48dc0a0adecdfdf07defd1b98a85efcec13,Adds Travis-CI build button,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-06 15:02:19-04:00,14400,2017-04-06 15:02:19-04:00,14400,True,False,['README.md'],['6ccdb3e1c98c8dc4d2428852d24fadbf2568d1c6'],1,1,2,1,,,
9c26ec276b2eee88988d8a3cb45e2799d7879da2,move from pbr to distutils and testr to pytest,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-06 16:47:25-04:00,14400,2017-04-06 16:47:25-04:00,14400,True,False,"['.gitignore', '.testr.conf', 'ChangeLog', 'base.py', 'requirements.txt', 'setup.cfg', 'setup.py', 'test-requirements.txt', 'tox.ini']",['0554e48dc0a0adecdfdf07defd1b98a85efcec13'],62,36,98,9,,,
4058b85b19376982634dcc8f67873d13ef01cc6e,PyPI readiness,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-07 16:43:11-04:00,14400,2017-04-07 16:43:11-04:00,14400,True,False,"['.gitignore', 'HACKING.rst', 'LICENSE.txt', 'MANIFEST.in', 'setup.py']",['9c26ec276b2eee88988d8a3cb45e2799d7879da2'],7,6,13,5,,,
6ec9369a8da30a8448eee2984229cfa27e46bbe9,Add PYPI badging to README,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-04-07 16:47:46-04:00,14400,2017-04-07 16:50:04-04:00,14400,True,False,['README.md'],['4058b85b19376982634dcc8f67873d13ef01cc6e'],1,1,2,1,,,
9b1df6fc462b7ac34ca6443e85046f9fdcce2d1e,Missing partitions attribute on disk constructor,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-05-29 13:43:39-04:00,14400,2017-05-29 13:43:39-04:00,14400,True,False,['block.py'],['6ec9369a8da30a8448eee2984229cfa27e46bbe9'],0,1,1,1,1.0,1.0,0.0
9b8ff84c743ccc293905cc17014aaff1cf37bfdb,"Fallback to usable when physical mem not determined

Sometimes the physical memory cannot be determined without root privileges
because either the syslog doesn't exist or the user does not have the
privileges to read it. This can happen in containerized or reduced-privilege
environments. In these cases, fall back to using usable amount of memory, which
is always readable from /proc/meminfo.

Closes issue #2
Partly addresses issue #1",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-01 20:45:10-04:00,14400,2017-06-01 20:45:10-04:00,14400,True,False,['memory.py'],['9b1df6fc462b7ac34ca6443e85046f9fdcce2d1e'],27,37,64,1,0.0,0.75,1.0
5e373b8c2d9ee30901b7c62306fd158a6c16471b,"Add the start of functional tests

Adds an initial functional test for the memory module which is executed by
default with the normal py27 and py35 tox runners",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-01 20:47:34-04:00,14400,2017-06-01 20:47:34-04:00,14400,True,False,"['__init__.py', 'base.py', 'test_memory.py']",['9b8ff84c743ccc293905cc17014aaff1cf37bfdb'],0,57,57,3,1.0,1.0,1.0
53fca567624a50020be3d709ffdc017d34e0e234,os.stderr does not exist. use sys,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-01 20:52:04-04:00,14400,2017-06-01 20:52:04-04:00,14400,True,False,['memory.py'],['5e373b8c2d9ee30901b7c62306fd158a6c16471b'],1,2,3,1,,,
b97be4c99cb9dc0f8e1afa149c52688d8b914131,"cpu: add functional tests and py35 compat

Adds a simple functional test for the CPU module and corrects some py35
compatibility issues found.

Addresses issue #1",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-02 17:30:52-04:00,14400,2017-06-02 17:30:52-04:00,14400,True,False,"['cpu.py', 'test_cpu.py']",['53fca567624a50020be3d709ffdc017d34e0e234'],25,67,92,2,1.0,1.0,1.0
eac99656b8cd046cadc50642e598d6a40e25d170,"Add basic functional test for block module

Adds a simple functional test to exercise the block module. In the process,
makes the block and udev modules py35-compatible

Address Issue #1",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-02 18:26:25-04:00,14400,2017-06-02 18:26:25-04:00,14400,True,False,"['block.py', 'test_block.py', 'udev.py']",['b97be4c99cb9dc0f8e1afa149c52688d8b914131'],26,54,80,3,1.0,1.0,1.0
a5b5af0b0261dc9e2df0fe6b5445be8bd7dc875a,Remove memoization. Was a bad premature optimization.,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-02 18:37:43-04:00,14400,2017-06-02 18:37:43-04:00,14400,True,False,"['block.py', 'gpu.py', 'net.py', 'utils.py']",['eac99656b8cd046cadc50642e598d6a40e25d170'],40,0,40,4,0.0,0.0,0.125
22b2c1c299f676729572cfadc3ab4c25445432c2,Enable travis CI real VMs in order to test block storage,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-02 18:43:11-04:00,14400,2017-06-02 18:43:11-04:00,14400,True,False,['.travis.yml'],['a5b5af0b0261dc9e2df0fe6b5445be8bd7dc875a'],0,3,3,1,,,
5bfe1f14b960671cab28f6ca5b791d7683ee2790,"Remove use of udevadm for block module

Replaces the use of udevadm output -- which cannot be accessed or isn't
available in some VMs or containers like Travis CI build environments -- with
simple file reads against sysfs. This required removing the label and uuid
attributes of the Partition object temporarily until I can figure out a better
way of getting this information.

Issue #3",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-02 19:08:03-04:00,14400,2017-06-02 19:08:03-04:00,14400,True,False,"['README.md', 'block.py', 'net.py']",['22b2c1c299f676729572cfadc3ab4c25445432c2'],40,58,98,3,1.0,1.0,1.0
652977f78ae5e856ca0fceb9fd62cfd1977e9e45,"net: Use straight sysfs for getting NIC MAC

There's no need to use udevadm to get a NIC's MAC address. We can query
for /sys/class/net/$DEVICE/addr_assign_type and
/sys/class/net/$DEVICE?address for this information.

Addresses issue #3",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 13:42:15-04:00,14400,2017-06-03 13:42:15-04:00,14400,True,False,['net.py'],['5bfe1f14b960671cab28f6ca5b791d7683ee2790'],22,26,48,1,1.0,1.0,1.0
98f30e49b5fdb077d4b9278767a00136dedb93f1,"net: start of functional tests

Uncovered some py35-compat issues by adding a very simple functional test that
loops over the NICs in hwk.net.info()

Addresses issue #1",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 14:15:24-04:00,14400,2017-06-03 14:15:27-04:00,14400,True,False,['net.py'],['652977f78ae5e856ca0fceb9fd62cfd1977e9e45'],4,6,10,1,,,
3cd2d46fe4e40085355157c41a3af00d76f488fa,"Guh, actually add the damn test file.",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 14:18:15-04:00,14400,2017-06-03 14:18:15-04:00,14400,True,False,['test_net.py'],['98f30e49b5fdb077d4b9278767a00136dedb93f1'],0,28,28,1,1.0,1.0,1.0
dd9b603d0a374d658f5a54382270c71157745c02,catch process errors in udev shellout.,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 14:35:50-04:00,14400,2017-06-03 14:35:50-04:00,14400,True,False,['udev.py'],['3cd2d46fe4e40085355157c41a3af00d76f488fa'],1,4,5,1,1.0,1.0,1.0
11333ab7a3e8c11a93dcf023ece6f130901fcf6c,Trying to track down a problem identifying NIC features on py35,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 14:45:33-04:00,14400,2017-06-03 14:45:33-04:00,14400,True,False,['test_net.py'],['dd9b603d0a374d658f5a54382270c71157745c02'],3,10,13,1,1.0,1.0,1.0
bd08fa2fd381156a3b66fcd26bd257a0615e671b,Still trying to track down a problem identifying NIC features on py35,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 15:38:34-04:00,14400,2017-06-03 15:38:34-04:00,14400,True,False,['test_net.py'],['11333ab7a3e8c11a93dcf023ece6f130901fcf6c'],1,2,3,1,1.0,1.0,1.0
bfed10ef64f0a7ca9c1172d971f63d0338146b9c,Still trying to track down a problem identifying NIC features on py35,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 15:46:51-04:00,14400,2017-06-03 15:46:51-04:00,14400,True,False,['net.py'],['bd08fa2fd381156a3b66fcd26bd257a0615e671b'],3,1,4,1,1.0,0.0,0.0
0e9f57986bf9d30f0cac95173f090b35ab998b1c,"add a simple inspection script and run it in CI

It's great to have functional tests, but sometimes an inspection script
that executes the hwk library modules and simply outputs the discovered
hardware information is more useful than anything else...",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 18:32:20-04:00,14400,2017-06-03 18:33:23-04:00,14400,True,False,"['.travis.yml', 'inspect_host.py']",['bfed10ef64f0a7ca9c1172d971f63d0338146b9c'],0,61,61,2,,,
8d2d363a4034928aac29a4279a094f7da73e5f5a,"Correct output of warning to stderr

The warning about not being able to get physical size of memory was improperly
being written to stdout, not stderr. While fixing this, we also do a little
py35-compat work on the Partition object's __repr__ that was identified with
the latest CI run.",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 18:41:38-04:00,14400,2017-06-03 18:41:38-04:00,14400,True,False,"['block.py', 'memory.py']",['0e9f57986bf9d30f0cac95173f090b35ab998b1c'],3,3,6,2,,,
e9b46d8d1310f5a8fe68082dfd276777bb4d4bc2,"Some more output in inspect_host.py

Include the NIC features in the output of inspect_host.py. While doing some
testing, ran into yet more py35-compat issues around bytes vs. string decoding
and fixed those up.",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 19:15:54-04:00,14400,2017-06-03 19:15:54-04:00,14400,True,False,"['block.py', 'memory.py', 'net.py', 'inspect_host.py']",['8d2d363a4034928aac29a4279a094f7da73e5f5a'],10,19,29,4,0.0,1.0,1.0
4673d4fe344ba3c9b537b981f9142d8c0b1598b0,Testing udevadm in travis envs,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 19:27:55-04:00,14400,2017-06-03 19:27:55-04:00,14400,True,False,"['.travis.yml', 'block.py', 'udev.py']",['e9b46d8d1310f5a8fe68082dfd276777bb4d4bc2'],2,2,4,3,0.0,1.0,1.0
ad1a716a4aaa7889cd77ea7c8a58cf33922a9ddc,More testing udevadm in travis envs,Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 19:37:15-04:00,14400,2017-06-03 19:37:15-04:00,14400,True,False,['.travis.yml'],['4673d4fe344ba3c9b537b981f9142d8c0b1598b0'],1,2,3,1,,,
b43be56fafc7e853614cafc7d02c734aadb72cbe,"don't use udevadm on virtio net devices

If we attempt to query udevadm info -q property for a virtual network device
(such as is the case with containerized or virtual environments), we will get
an error ""query needs a valid device specified by --path= or --name="". This
patch averts that particular error.",Jay Pipes,jaypipes@gmail.com,Jay Pipes,jaypipes@gmail.com,2017-06-03 19:54:52-04:00,14400,2017-06-03 19:54:52-04:00,14400,True,False,"['.travis.yml', 'net.py', 'udev.py']",['ad1a716a4aaa7889cd77ea7c8a58cf33922a9ddc'],6,17,23,3,1.0,1.0,1.0
