Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
2511ee74936e3d6f68a9c8fec701e42dc75f11e4,Initial commit,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-01-02 10:15:59-08:00,28800,2016-01-02 10:15:59-08:00,28800,True,False,"['.gitignore', 'README.rst', 'asgi_redis.py', 'setup.py']",[],0,295,295,4,0.576,0.776,0.336
9365be05701822dd602a3da56949a034fac48039,Fix .gitignore,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-01-02 22:48:46-08:00,28800,2016-01-02 22:48:46-08:00,28800,True,False,['.gitignore'],['2511ee74936e3d6f68a9c8fec701e42dc75f11e4'],0,1,1,1,,,
ffa1d46eedbf3bd1d5d11278eb6c7cef2a05ce55,Fixed setup.py,ocZio,arakelian@aeguana.com,ocZio,arakelian@aeguana.com,2016-01-07 11:38:48+00:00,0,2016-01-07 11:38:48+00:00,0,True,False,"['asgi_redis.py', 'setup.py']",['9365be05701822dd602a3da56949a034fac48039'],3,5,8,2,,,
82f770371e03090eb6aef069a1cf4e06a7ea94a7,Remove pointless docstring bit,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-02-22 15:07:46+00:00,0,2016-02-22 15:07:58+00:00,0,True,False,['asgi_redis.py'],['0c8f223f2773483471b984bc39aa4819851e4895'],3,0,3,1,,,
b8093b54cef9bff1accd3e00bb13a644d71c706a,Version 0.8.1,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-02-22 15:09:12+00:00,0,2016-02-22 15:11:00+00:00,0,True,False,"['CHANGELOG.txt', 'setup.py']",['82f770371e03090eb6aef069a1cf4e06a7ea94a7'],3,7,10,2,,,
71b2deb4eee66723a9e4073ac689c2b344ba1be1,Add testing configuration (tests do not yet pass),Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-02-22 15:21:38+00:00,0,2016-02-22 15:21:38+00:00,0,True,False,"['.travis.yml', 'test_asgi_redis.py']",['b8093b54cef9bff1accd3e00bb13a644d71c706a'],0,16,16,2,,,
ede588ac6eb2984e07faa1de656e574c9e94e662,Python 3 and nonblock mode fixes,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-02-22 15:46:06+00:00,0,2016-02-22 15:46:06+00:00,0,True,False,['asgi_redis.py'],['71b2deb4eee66723a9e4073ac689c2b344ba1be1'],6,13,19,1,0.16666666666666666,0.16666666666666666,0.0
c399d9d2695bf316fc570a23f4a2cb496caf31a0,Releasing 0.8.2,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-02-22 15:48:02+00:00,0,2016-02-22 15:48:02+00:00,0,True,False,"['CHANGELOG.txt', 'setup.py']",['ede588ac6eb2984e07faa1de656e574c9e94e662'],1,7,8,2,,,
9d68bee44fde8aeaf1fbbb8de906f38568a8a856,Update travis config,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-02-22 15:50:50+00:00,0,2016-02-22 15:50:50+00:00,0,True,False,['.travis.yml'],['c399d9d2695bf316fc570a23f4a2cb496caf31a0'],1,1,2,1,,,
8b9b1da3b0ca2af2ea9e0e5fe930a22cb411bc19,More travis fixes,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-02-22 16:05:37+00:00,0,2016-02-22 16:05:37+00:00,0,True,False,['.travis.yml'],['9d68bee44fde8aeaf1fbbb8de906f38568a8a856'],1,3,4,1,,,
0e90107752ea95ee0b5598a491b6d5c193b56e6c,Hopefully final travis fix,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-02-22 16:09:15+00:00,0,2016-02-22 16:09:15+00:00,0,True,False,"['.travis.yml', 'setup.py']",['8b9b1da3b0ca2af2ea9e0e5fe930a22cb411bc19'],1,2,3,2,,,
54015c26a43c6db17692ba17a3ba847a74b0fbdb,Use Lua script rather than lpop in loop for nonblock receive,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-02-24 07:56:43-08:00,28800,2016-02-24 07:56:43-08:00,28800,True,False,['asgi_redis.py'],['0e90107752ea95ee0b5598a491b6d5c193b56e6c'],9,22,31,1,0.0,1.0,1.0
efa399b9ec5808d6cc81bf16b7f595d1858f71f0,Releasing 0.8.3,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-02-28 21:14:17-08:00,28800,2016-02-28 21:14:17-08:00,28800,True,False,"['CHANGELOG.txt', 'setup.py']",['54015c26a43c6db17692ba17a3ba847a74b0fbdb'],1,6,7,2,,,
a9a6f30c30772cc007216beb8fd6a7438a957369,Support new single-channel mode,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-03-21 16:30:08-07:00,25200,2016-03-21 16:30:08-07:00,25200,True,False,['asgi_redis.py'],['efa399b9ec5808d6cc81bf16b7f595d1858f71f0'],9,7,16,1,0.0,0.0,0.0
6e7cbe2833ef1ae3654e9d792bd7f6054539622c,Increase size of random portion,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-03-21 16:35:35-07:00,25200,2016-03-21 16:35:35-07:00,25200,True,False,['asgi_redis.py'],['a9a6f30c30772cc007216beb8fd6a7438a957369'],1,1,2,1,,,
e890d3688a22835dc50a1cd82e8c70364d4324f2,Actually connection pool redis shards properly again.,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-03-21 16:37:48-07:00,25200,2016-03-21 16:37:48-07:00,25200,True,False,['asgi_redis.py'],['6e7cbe2833ef1ae3654e9d792bd7f6054539622c'],1,7,8,1,0.0,1.0,0.0
0319816d36156df13b44ae6fd82075f90d3f9308,Release version 0.9.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-03-21 16:42:11-07:00,25200,2016-03-21 16:42:11-07:00,25200,True,False,"['CHANGELOG.txt', 'setup.py']",['e890d3688a22835dc50a1cd82e8c70364d4324f2'],2,9,11,2,,,
0632f43572c48a818552c6efb43fe0bc238b195b,Don't remove groups after 70 seconds!,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-03-23 13:27:03-07:00,25200,2016-03-23 13:27:03-07:00,25200,True,False,['asgi_redis.py'],['0319816d36156df13b44ae6fd82075f90d3f9308'],2,0,2,1,0.0,0.0,0.0
d3ea73b6e8f33c2d19f2871b7ff57622cd443092,Releasing 0.9.1,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-03-23 13:28:42-07:00,25200,2016-03-23 13:28:42-07:00,25200,True,False,"['CHANGELOG.txt', 'setup.py']",['0632f43572c48a818552c6efb43fe0bc238b195b'],1,6,7,2,,,
16bdf4d3951c7f88b96bd922b5d4273cd93c4d98,Update to match new asgiref test style,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-03-27 11:11:14-07:00,25200,2016-03-27 11:11:14-07:00,25200,True,False,['test_asgi_redis.py'],['d3ea73b6e8f33c2d19f2871b7ff57622cd443092'],3,8,11,1,,,
faba272dffd9dffecfc87e67afc26d55a21719f4,Mark as universal wheel,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-03-27 11:11:30-07:00,25200,2016-03-27 11:11:30-07:00,25200,True,False,['setup.cfg'],['16bdf4d3951c7f88b96bd922b5d4273cd93c4d98'],0,2,2,1,,,
f213ce8c439f79f79c1ced3f15cc1fb4e6ea591e,"Add group expiry back properly, implement flush extension",Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-03-27 11:11:49-07:00,25200,2016-03-27 11:11:49-07:00,25200,True,False,['asgi_redis.py'],['faba272dffd9dffecfc87e67afc26d55a21719f4'],5,25,30,1,0.6666666666666666,1.0,0.6666666666666666
348894eb3994353e2f39866f676596fa3fe2f792,Set group keys to expire themselves,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-03-27 13:44:31-07:00,25200,2016-03-27 13:44:31-07:00,25200,True,False,['asgi_redis.py'],['f213ce8c439f79f79c1ced3f15cc1fb4e6ea591e'],1,6,7,1,1.0,1.0,0.0
51f8e588efa4324de49dd30c233f1439d18a329a,"Start progress on group-discard-on-message-expire, but not yet complete.",Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-03-27 14:04:34-07:00,25200,2016-03-27 14:04:34-07:00,25200,True,False,"['asgi_redis.py', 'test_asgi_redis.py']",['348894eb3994353e2f39866f676596fa3fe2f792'],8,34,42,2,1.0,1.0,0.8333333333333334
77ca35e060bfd0a088038cc9512bfb131eb93788,Release 0.10.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-03-27 14:07:05-07:00,25200,2016-03-27 14:07:05-07:00,25200,True,False,['setup.py'],['51f8e588efa4324de49dd30c233f1439d18a329a'],2,2,4,1,,,
21422db2f88afb0e872e51810105fedabcc55058,Make technically compatible with backpressure but not implemented yet,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-05-05 22:49:12-07:00,25200,2016-05-05 22:49:12-07:00,25200,True,False,"['.gitignore', 'asgi_redis.py', 'test_asgi_redis.py']",['77ca35e060bfd0a088038cc9512bfb131eb93788'],0,5,5,3,,,
ded803461434c259001014bb492542b45b532301,Bump up asgiref dependency,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-05-05 22:49:49-07:00,25200,2016-05-05 22:49:49-07:00,25200,True,False,['setup.py'],['21422db2f88afb0e872e51810105fedabcc55058'],1,1,2,1,,,
12197e201488016c756cbcd8b36109cb17365e74,Introduce backpressure properly,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-05-07 12:26:50-07:00,25200,2016-05-07 12:26:50-07:00,25200,True,False,"['README.rst', 'asgi_redis.py', 'test_asgi_redis.py']",['ded803461434c259001014bb492542b45b532301'],32,47,79,3,1.0,1.0,0.0
3fb7bc55a29d2242257066a3e105f1084ac95f1e,Releasing version 0.11.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-05-07 12:28:25-07:00,25200,2016-05-07 12:28:25-07:00,25200,True,False,['setup.py'],['12197e201488016c756cbcd8b36109cb17365e74'],2,2,4,1,,,
66642fee7457759a3c358c899a3d18fb1c068475,Get changelog up to date,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-05-07 13:11:40-07:00,25200,2016-05-07 13:11:40-07:00,25200,True,False,['CHANGELOG.txt'],['3fb7bc55a29d2242257066a3e105f1084ac95f1e'],0,10,10,1,,,
927ec9041e5f2c633313d2d09d67e3499cecbcc5,Added encryption support,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-05-25 11:57:34-07:00,25200,2016-05-25 11:57:34-07:00,25200,True,False,"['.travis.yml', 'README.rst', 'asgi_redis.py', 'setup.py', 'test_asgi_redis.py']",['66642fee7457759a3c358c899a3d18fb1c068475'],16,142,158,5,0.4583333333333333,0.0,0.4583333333333333
d870b49fb78f7b1401c48ae84bdfdf28dca303f1,Releasing 0.12.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-05-25 12:05:31-07:00,25200,2016-05-25 12:05:31-07:00,25200,True,False,"['CHANGELOG.txt', 'setup.py']",['927ec9041e5f2c633313d2d09d67e3499cecbcc5'],1,6,7,2,,,
2f0cea6586f7cee0f52e05faf9d0e1dd67ae950c,Add note about when data is encrypted,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-05-25 12:07:41-07:00,25200,2016-05-25 12:07:41-07:00,25200,True,False,['README.rst'],['d870b49fb78f7b1401c48ae84bdfdf28dca303f1'],0,3,3,1,,,
22848aa35c8f61b089992785652337d402a14cf3,Be even more explicit in crypto notes.,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-05-25 12:11:19-07:00,25200,2016-05-25 12:11:19-07:00,25200,True,False,['README.rst'],['2f0cea6586f7cee0f52e05faf9d0e1dd67ae950c'],1,3,4,1,,,
ab51b8e9218c4432dae309f78947a9045e88354d,Add example of SECRET_KEY use,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-05-25 16:10:09-07:00,25200,2016-05-25 16:10:09-07:00,25200,True,False,['README.rst'],['22848aa35c8f61b089992785652337d402a14cf3'],1,13,14,1,,,
05e535df33cf536c5ddf58996e1c6fba1f490d8d,Rearrange asgi_redis into a directory module in prep for local variant.,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-06-08 23:47:51+00:00,0,2016-06-08 23:47:51+00:00,0,True,False,"['__init__.py', 'core.py', 'local.py', 'setup.py']",['ab51b8e9218c4432dae309f78947a9045e88354d'],6,26,32,4,,,
3f5beb08ee2f4b777cdddfad1cb3c76126813aa4,Improve name checking,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-06-09 00:02:36+00:00,0,2016-06-09 00:02:36+00:00,0,True,False,['core.py'],['05e535df33cf536c5ddf58996e1c6fba1f490d8d'],5,10,15,1,1.0,1.0,0.0
b102e38d6899f4cbabbb8620c307432329898ac6,"Flesh out local-and-remote layer, move tests inside package",Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-06-09 00:18:56+00:00,0,2016-06-09 00:18:56+00:00,0,True,False,"['__init__.py', 'local.py', '__init__.py', 'test_core.py', 'test_local.py']",['3f5beb08ee2f4b777cdddfad1cb3c76126813aa4'],4,61,65,5,1.0,0.6363636363636364,0.09090909090909091
949e96fc95dae0071c7de92361a9e565560c6895,Add test requirement for asgi_ipc,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-06-09 00:19:25+00:00,0,2016-06-09 00:19:25+00:00,0,True,False,['.travis.yml'],['b102e38d6899f4cbabbb8620c307432329898ac6'],1,1,2,1,,,
8881fe0c85663f9337594bd1b6c8cd6e6c828f96,Add README section about local-and-remote,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-06-09 00:31:51+00:00,0,2016-06-09 00:31:51+00:00,0,True,False,['README.rst'],['949e96fc95dae0071c7de92361a9e565560c6895'],0,24,24,1,,,
0a6e87bd904f2e184073dbfa85e9f69c52e48266,Releasing 0.13.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-06-09 00:32:50+00:00,0,2016-06-09 00:32:50+00:00,0,True,False,['setup.py'],['8881fe0c85663f9337594bd1b6c8cd6e6c828f96'],1,1,2,1,,,
72d30b7099ba882a335f20929162899da019906e,Updated minimum requirement for asgiref.,Alexis Durand,alexis.durand@iwoca.co.uk,Alexis Durand,alexis.durand@iwoca.co.uk,2016-06-09 16:16:03+01:00,-3600,2016-06-09 16:16:03+01:00,-3600,True,False,['setup.py'],['0a6e87bd904f2e184073dbfa85e9f69c52e48266'],1,1,2,1,,,
62051f0c983289dacff4f601bfca09122459272d,Releasing 0.13.1,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-06-09 15:41:35+00:00,0,2016-06-09 15:41:35+00:00,0,True,False,['setup.py'],['5d7df5ae853a77392ec8115607c8fd1bbc474f5e'],1,1,2,1,,,
a7bd869a4de28c1b8e43cf9526e6d8db59b5f82b,Add group_members,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-07-16 22:48:28-07:00,25200,2016-07-16 22:48:28-07:00,25200,True,False,"['core.py', 'setup.py']",['62051f0c983289dacff4f601bfca09122459272d'],17,17,34,2,,,
00d911d34e722bea4462f063a3e5b70385f444fc,Releasing 0.14.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-07-16 22:50:35-07:00,25200,2016-07-16 22:50:35-07:00,25200,True,False,"['CHANGELOG.txt', 'Makefile', 'setup.py']",['a7bd869a4de28c1b8e43cf9526e6d8db59b5f82b'],1,27,28,3,,,
05b407dc4f182b86457892e5884f575e386a1f2f,Initial implementation of Twisted-compatible receive_many,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-07-22 21:26:25-04:00,14400,2016-07-22 21:26:25-04:00,14400,True,False,"['core.py', 'test_core.py', 'twisted_utils.py']",['00d911d34e722bea4462f063a3e5b70385f444fc'],16,138,154,3,0.43103448275862066,0.43103448275862066,1.0
001718c5d8228877a165a03d0ccb19820d2f47da,Twisted compat fixes,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-07-22 21:47:00-04:00,14400,2016-07-22 21:47:00-04:00,14400,True,False,"['core.py', 'twisted_utils.py']",['05b407dc4f182b86457892e5884f575e386a1f2f'],3,3,6,2,,,
7810fec052170d80e3621e68aae03ec390e10057,Missed a return,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-07-22 21:53:11-04:00,14400,2016-07-22 21:53:11-04:00,14400,True,False,['core.py'],['001718c5d8228877a165a03d0ccb19820d2f47da'],1,1,2,1,,,
60f8b826378add34769400b6a1514f13de54a244,Make inline_callbacks fakery a static method,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-07-22 21:54:35-04:00,14400,2016-07-22 21:54:35-04:00,14400,True,False,['twisted_utils.py'],['7810fec052170d80e3621e68aae03ec390e10057'],1,2,3,1,,,
e040fe911afbb857b9570b2077eaecd6753c32a2,iForgotToUseTwistedMethodNamingStyle,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-07-22 21:56:56-04:00,14400,2016-07-22 21:56:56-04:00,14400,True,False,['twisted_utils.py'],['60f8b826378add34769400b6a1514f13de54a244'],1,1,2,1,,,
6ad033f5e13692bc5b506883971649504a3d7d87,BUILD MATRICES,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-07-22 22:00:25-04:00,14400,2016-07-22 22:00:25-04:00,14400,True,False,['.travis.yml'],['e040fe911afbb857b9570b2077eaecd6753c32a2'],0,4,4,1,,,
420014bdb40fbab1095731ef99018791b853c56e,Extra parentheses. We need extra parentheses over here.,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-07-22 22:04:03-04:00,14400,2016-07-22 22:04:03-04:00,14400,True,False,['core.py'],['6ad033f5e13692bc5b506883971649504a3d7d87'],3,3,6,1,,,
0c374b0e8eb378657c60abea0e12c8264834531c,"Remove unused channel groups key, cluttering up redis pointlessly",Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-08-24 22:06:29-07:00,25200,2016-08-24 22:06:29-07:00,25200,True,False,['core.py'],['420014bdb40fbab1095731ef99018791b853c56e'],9,0,9,1,0.0,0.0,0.6666666666666666
37dbaecf85eb07c042bc73b48457efe4410d0d4d,Releasing 0.14.1,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-08-24 22:09:13-07:00,25200,2016-08-24 22:09:13-07:00,25200,True,False,"['CHANGELOG.txt', 'setup.py']",['0c374b0e8eb378657c60abea0e12c8264834531c'],1,7,8,2,,,
515de7bc15b2e7e0c2874b31390d93894b7c38fd,"* Modified RedisChannelLayer to allow a different mechanism
  for generating Redis connections.
* Made a new layer, DjangoRedisChannelLayer, for getting connections
  using `django-redis`'s connection pool. This way I can configure
  the connection pool to limit the number of connections, and use
  a blocking connection, and have Channels observe the configuration.",Luke Hodkinson,furious.luke@gmail.com,Luke Hodkinson,furious.luke@gmail.com,2016-09-01 13:05:54+10:00,-36000,2016-09-01 13:05:54+10:00,-36000,True,False,"['__init__.py', 'core.py']",['37dbaecf85eb07c042bc73b48457efe4410d0d4d'],5,16,21,2,1.0,1.0,1.0
84b77229fb23d2d2bdb358dff69a4833d5b3752a,Add maintenance and security README,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-09-09 12:52:43+01:00,-3600,2016-09-09 12:52:43+01:00,-3600,True,False,['README.rst'],['37dbaecf85eb07c042bc73b48457efe4410d0d4d'],3,10,13,1,,,
34624767ff76c3f1904241c5208855efa327ffaa,Django-ification,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-09-09 13:28:12+01:00,-3600,2016-09-09 13:28:12+01:00,-3600,True,False,"['README.rst', 'setup.py']",['84b77229fb23d2d2bdb358dff69a4833d5b3752a'],6,6,12,2,,,
0a5a4920d73df837df8bab5870023547f7cc5372,Pass selected connection as client to the chansend script call,Krukov Dima,glebov.ru@gmail.com,Krukov Dima,glebov.ru@gmail.com,2016-09-15 22:24:50+00:00,0,2016-09-15 22:24:50+00:00,0,True,False,['core.py'],['34624767ff76c3f1904241c5208855efa327ffaa'],0,1,1,1,0.0,1.0,0.0
b3ecaffc2f30060f8143c92e9b6dec30ef35d51a,Version in function,Krukov Dima,glebov.ru@gmail.com,Krukov Dima,glebov.ru@gmail.com,2016-09-17 21:10:28+03:00,-10800,2016-09-17 21:10:28+03:00,-10800,True,False,['__init__.py'],['0a5a4920d73df837df8bab5870023547f7cc5372'],1,3,4,1,1.0,1.0,1.0
767b39f99e590cf4ab86d7550062c324dc6e1233,"README - add syntax highlighting

Makes it a little easier on the eyes.",Adam Chainz,me@adamj.eu,GitHub,noreply@github.com,2016-09-20 13:41:00+01:00,-3600,2016-09-20 13:41:00+01:00,-3600,True,False,['README.rst'],['34624767ff76c3f1904241c5208855efa327ffaa'],17,23,40,1,,,
20f7102daf411a07ec922fceb2fac6c00356a84b,"Revert ""Version in function""

This reverts commit b3ecaffc2f30060f8143c92e9b6dec30ef35d51a.",Krukov Dima,glebov.ru@gmail.com,Krukov Dima,glebov.ru@gmail.com,2016-09-23 20:44:02+03:00,-10800,2016-09-23 20:44:02+03:00,-10800,True,False,['__init__.py'],['b3ecaffc2f30060f8143c92e9b6dec30ef35d51a'],3,1,4,1,0.0,0.0,0.0
f4ca1b1550d00a2fd105bbe033ec41f256fe28f4,Version in module,Krukov Dima,glebov.ru@gmail.com,Krukov Dima,glebov.ru@gmail.com,2016-09-23 18:20:52+00:00,0,2016-09-23 18:20:52+00:00,0,True,False,"['__init__.py', 'setup.py']",['20f7102daf411a07ec922fceb2fac6c00356a84b'],3,7,10,2,1.0,1.0,1.0
853d84b19fd0b2f8da9e33a21ff9b77715872be4,Oops! returned current version,Krukov Dima,glebov.ru@gmail.com,Krukov Dima,glebov.ru@gmail.com,2016-09-23 18:43:33+00:00,0,2016-09-23 18:43:33+00:00,0,True,False,['__init__.py'],['f4ca1b1550d00a2fd105bbe033ec41f256fe28f4'],1,1,2,1,,,
a70a136307178bd878a7cdab118dbf6280a9192b,Missed space,Krukov Dima,glebov.ru@gmail.com,Krukov Dima,glebov.ru@gmail.com,2016-09-23 19:24:59+00:00,0,2016-09-23 19:24:59+00:00,0,True,False,['core.py'],['853d84b19fd0b2f8da9e33a21ff9b77715872be4'],1,1,2,1,,,
38b360095034cd9d9526d4a257a0a0638c900204,Remove useless import,Krukov Dima,glebov.ru@gmail.com,Krukov Dima,glebov.ru@gmail.com,2016-09-23 19:25:40+00:00,0,2016-09-23 19:25:40+00:00,0,True,False,['__init__.py'],['a70a136307178bd878a7cdab118dbf6280a9192b'],1,0,1,1,,,
665b59e89047b53c4c77876506da5531eedca269,"Handle Redis response errors instead of silencing them

The exception handling for send() silenced all Redis errors apart from
the ""full"" message. This commit updates the exception logic to also
specifically handle the ""unknown command"" error which might point at an
unsupported version of Redis. It also now lets any other exception
bubble up instead of being silently dropped.

Reported by @wynbennet in
https://github.com/django/asgi_redis/issues/14.",Maik Hoepfel,m@maikhoepfel.de,Maik Hoepfel,m@maikhoepfel.de,2016-10-17 12:07:25+02:00,-7200,2016-10-17 12:11:13+02:00,-7200,True,False,['core.py'],['3f037ca0e5a3b6a98d62cd4c4fefb023c8350b7d'],0,11,11,1,0.0,0.0,0.0
c042c4cd177b57f9f34f00bb09113864a46b6ffd,"Document supported versions

I found no reference of supported versions of our dependencies, so I
made wild guesses as to what might be supported.",Maik Hoepfel,m@maikhoepfel.de,Maik Hoepfel,m@maikhoepfel.de,2016-10-17 12:11:21+02:00,-7200,2016-10-17 12:11:21+02:00,-7200,True,False,['README.rst'],['665b59e89047b53c4c77876506da5531eedca269'],0,6,6,1,,,
e20c28069087e008d18eba625ae80b35c3382723,"Stripping out the DjangoRedisChannelLayer code, but leaving in
a little refactor to make implementing it elsewhere super easy.",Luke Hodkinson,furious.luke@gmail.com,Luke Hodkinson,furious.luke@gmail.com,2016-10-27 14:57:12+11:00,-39600,2016-10-27 14:57:12+11:00,-39600,True,False,"['__init__.py', 'core.py']",['aeaa9a1470861d68ec7cab52c58efa84e23a8ff7'],10,1,11,2,0.0,0.0,0.0
724d738b03f42e7b9b3f9059f330c1710341638e,Document RedisChannelLayer.,Artem Malyshev,proofit404@gmail.com,Artem Malyshev,proofit404@gmail.com,2016-10-31 02:31:39+03:00,-10800,2016-10-31 03:49:03+03:00,-10800,True,False,['core.py'],['86fb9ce8f6ef6df35e5378a46d120def5d87132b'],2,6,8,1,,,
3309f3a44592a79b9d1b6221c2a0d01b750fda81,Properly catch bad hosts config instead of silently creating malformed hosts,Nick Sweeting,git@nicksweeting.com,GitHub,noreply@github.com,2016-11-01 21:22:49-04:00,14400,2016-11-01 21:22:49-04:00,14400,True,False,['core.py'],['67d2ad31391acc27c8c526c3677f557bf35f8c2a'],0,5,5,1,0.0,0.0,0.0
459811d94e03bad174269342ab4a360a20bcb567,Move asgi_redis to provide receive not receive_many,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-11-04 14:30:25+01:00,-3600,2016-11-04 14:52:16+01:00,-3600,True,False,"['core.py', 'local.py', 'test_core.py', 'setup.py']",['52881b650b1dbaea388b5529b749d35933495321'],18,18,36,4,,,
51e085ff5c7ac158415f318b9c6962b8a453da5f,Releasing 1.0.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2016-11-05 11:26:43+01:00,-3600,2016-11-05 11:26:43+01:00,-3600,True,False,"['CHANGELOG.txt', '__init__.py']",['459811d94e03bad174269342ab4a360a20bcb567'],1,8,9,2,,,
cde42d7a774f67a4ddbd99d577d2743bdac9439e,"simplify consistent_hash

if you need values 0-4095, you can just take last 12 bits.",Bartek Ogryczak,b.ogryczak@gmail.com,GitHub,noreply@github.com,2017-01-04 16:45:34-08:00,28800,2017-01-04 16:45:34-08:00,28800,True,False,['core.py'],['51e085ff5c7ac158415f318b9c6962b8a453da5f'],3,3,6,1,,,
d3405786d80907a9a9f218bf8ac34edcae5dbfea,"Better consistent hash distribution

With integer divisor for ring size N, nodes 0..N-2 get same amount of work slightly above what would be average, while the last node gets less.
With float divisor and rounding down the result the difference in distribution is always at _most_ of one slot.

For example for 45 nodes, with ceil method nodes 0..N-2 get 92 slots, while last node gets 48 slots. With float method first one gets 92 slots, while all the rest get 91.",Bartek Ogryczak,bartek@eventbrite.com,Bartek Ogryczak,bartek@eventbrite.com,2017-01-12 14:16:01-08:00,28800,2017-01-12 14:16:01-08:00,28800,True,False,['core.py'],['5590861838265d62f29ee29c10291eec8348529e'],4,4,8,1,1.0,1.0,1.0
2285a9abe5cdc05590abeb03b682670cabbf3656,"Statistics (#24)

* metrics WIP

* commented out values not being set for global stats

* unittest + small fixes

* Global stats will not implement messages_pending and messages_max_age aggregated across all channels, as it would be too heavy of an operation, yet would provide little value.

* - making stat names into constants
- some PEP-8 cleanup

* CHANNEL, singular

* typos",Bartek Ogryczak,b.ogryczak@gmail.com,Andrew Godwin,andrew@aeracode.org,2017-01-13 13:47:54-08:00,28800,2017-01-13 13:47:54-08:00,28800,True,False,"['.gitignore', 'core.py', 'test_core.py']",['6da188c22f1f5b2798c15a5f4d8818cacbf7af37'],6,185,191,3,0.125,0.6833333333333333,0.7583333333333333
8478568cd78b933e560ed67b08db29d761fb5eab,Add License,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-01-23 10:08:47-08:00,28800,2017-01-23 10:08:52-08:00,28800,True,False,['LICENSE'],['2285a9abe5cdc05590abeb03b682670cabbf3656'],0,27,27,1,,,
9a29cb0610f347d8ade44d27e41a6593e618f31f,"Test improvements (#25)

* Correctly declare extra dependency

A small typo caused pip to not detect the cryptography extra.

* Skip Twisted test instad of not declaring them

It's easy to miss that there are tests for running against Twisted. I
hope to make it a bit more obvious by raising a SkipTest during test
collection, and extracting them into their own module.

* Declare testing dependencies in setup.py

I'd like to avoid duplicating test requirements between the tox and
Travis configuration. This is done by declaring them as part of the
packages requirements, and follows e.g. what Sentry and pip are doing.
Unfortunately, pip can't currently install requirements declarded in
`test_requires` due to the wheel format not including that information,
so I opted to just declare them as an extra.

The Twisted dependencies are declared as part of the others. As far as I
can tell, the Twisted tests are separate tests and don't influence the
others, so I'm fine with running them all the time by CI. We can of
course split them out if there are use cases for not wanting to run
them.

This is the alternative to declaring the dependencies in
requirements_dev.txt, as previously suggested.

* Add tox and simplify Travis configuration

This commit adds tox to runs the tests, and nicely illustrates how the
previous changes tie in together to allow for a one-command development
enviroment setup.

* Update docs about supported versions",Maik Hoepfel,m@maikhoepfel.de,Andrew Godwin,andrew@aeracode.org,2017-01-31 02:23:26+01:00,-3600,2017-01-30 17:23:26-08:00,28800,True,False,"['.gitignore', '.travis.yml', 'README.rst', 'test_core.py', 'test_twisted.py', 'setup.py', 'tox.ini']",['8478568cd78b933e560ed67b08db29d761fb5eab'],52,75,127,7,1.0,1.0,1.0
035455016445f68d113346f1fc2cffe734c59ced,Fixed #28: Allowed configuration of additional redis options,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-02-16 10:15:06-08:00,28800,2017-02-16 10:15:27-08:00,28800,True,False,['core.py'],['9a29cb0610f347d8ade44d27e41a6593e618f31f'],5,27,32,1,0.0,0.0,0.0
6d95fbb07b7b7bdfd5e1b14cdecb56a992552dcc,Fix error with None socket timeout,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-02-16 10:20:02-08:00,28800,2017-02-16 10:20:02-08:00,28800,True,False,['core.py'],['035455016445f68d113346f1fc2cffe734c59ced'],1,1,2,1,,,
db70324e872ce3a3cb8d2b1ca6bf88c1e4464630,Handle redis timeouts,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-03-18 11:32:17-07:00,25200,2017-03-18 11:32:17-07:00,25200,True,False,['core.py'],['6d95fbb07b7b7bdfd5e1b14cdecb56a992552dcc'],1,4,5,1,0.0,0.0,0.0
84a56dae3d23f1ad66b3420f27a84824f9d59aaf,Releasing 1.1.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-03-18 12:43:11-07:00,25200,2017-03-18 12:43:11-07:00,25200,True,False,"['CHANGELOG.txt', '__init__.py']",['db70324e872ce3a3cb8d2b1ca6bf88c1e4464630'],1,10,11,2,,,
82bc16bb5f8ed830891b1f6d8091cbd557e32cb2,Update to work with new process-local channel style,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-03-27 19:16:16-07:00,25200,2017-03-27 19:16:16-07:00,25200,True,False,['core.py'],['84a56dae3d23f1ad66b3420f27a84824f9d59aaf'],3,17,20,1,0.0,0.0,0.18181818181818182
1be04b69a705ce3f58f76b3288ea0986f8fb89c7,Also update twisted receive for process-local change,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-03-27 19:49:32-07:00,25200,2017-03-27 19:49:32-07:00,25200,True,False,['core.py'],['82bc16bb5f8ed830891b1f6d8091cbd557e32cb2'],1,7,8,1,0.0,0.0,1.0
6f654c81c8b78e0f744a2ceff01a031060c7dac8,"Add RedisSentinelChannelLayer

- It only supports one sentinel cluster, so sharding is supported by having the sentinel cluster monitor multiple services, and specifying those services in the CHANNEL_LAYERS setting.
- At least one service has to be specified in order to have something to ask the sentinel servers for.
- The default redis sentinel object doesn't seem to support URL-format server specifications configuration, just tuple-format. So, the sentinel channel layer doesn't support URL-format either.
- The ""hosts"" config setting in Sentinel format is the list of Sentinel servers, not redis servers.",g-clef,aaron@avaloncyber.com,Andrew Godwin,andrew@aeracode.org,2017-03-28 10:42:58-07:00,25200,2017-03-28 10:45:24-07:00,25200,True,False,"['README.rst', '__init__.py', 'core.py', 'sentinel.py', 'sentinel.conf', 'test_sentinel.py']",['1be04b69a705ce3f58f76b3288ea0986f8fb89c7'],23,334,357,6,0.6265060240963856,1.0,0.7710843373493976
a9d6cf900aed415e9799a0a422225814cf9bfd5c,Only advertise twisted extension if available,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-03-28 11:14:29-07:00,25200,2017-03-28 11:14:29-07:00,25200,True,False,['core.py'],['6f654c81c8b78e0f744a2ceff01a031060c7dac8'],1,7,8,1,,,
dad9ecf072a6ff1fa7607edc41d6221be65eca8c,Add twisted extra,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-03-28 11:15:36-07:00,25200,2017-03-28 11:15:36-07:00,25200,True,False,['setup.py'],['a9d6cf900aed415e9799a0a422225814cf9bfd5c'],1,3,4,1,,,
4be9d4ef026bc62862edcf985a568f014c3fef06,Pass arguments down into Redis layer superclass,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-03-28 18:35:56-07:00,25200,2017-03-28 18:35:56-07:00,25200,True,False,['local.py'],['dad9ecf072a6ff1fa7607edc41d6221be65eca8c'],1,8,9,1,0.0,1.0,0.0
9281cede845311a7429512252d834073c52db347,Releasing 1.2.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-04-01 15:06:10+01:00,-3600,2017-04-01 15:06:10+01:00,-3600,True,False,"['CHANGELOG.txt', '__init__.py', 'setup.py']",['4be9d4ef026bc62862edcf985a568f014c3fef06'],2,8,10,3,,,
671bdc00681b15fbf0807a4dc5f918c22e7d371a,Fixed mutation of message on send to process-local channel,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-04-02 15:17:49+01:00,-3600,2017-04-02 15:17:49+01:00,-3600,True,False,['core.py'],['9281cede845311a7429512252d834073c52db347'],0,1,1,1,0.0,0.0,0.0
d989f59efcb816618cae5098fbc1e1469c00d68d,Releasing 1.2.1,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-04-02 15:18:55+01:00,-3600,2017-04-02 15:18:55+01:00,-3600,True,False,"['CHANGELOG.txt', '__init__.py']",['671bdc00681b15fbf0807a4dc5f918c22e7d371a'],1,6,7,2,,,
15fcaa4a1ba3c7a5eea4c2183a32492c558e7855,"Move connection kwargs to one dict as they vary by Redis conn class

Fixes #36.",Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-04-03 19:11:20+02:00,-7200,2017-04-03 19:11:40+02:00,-7200,True,False,"['README.rst', 'core.py', 'sentinel.py']",['d989f59efcb816618cae5098fbc1e1469c00d68d'],53,45,98,3,1.0,0.0,1.0
d2c230f48c109c48c903f2b5c854c2b80410b446,Releasing 1.3.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-04-07 04:46:38+01:00,-3600,2017-04-07 04:46:38+01:00,-3600,True,False,"['CHANGELOG.txt', '__init__.py']",['15fcaa4a1ba3c7a5eea4c2183a32492c558e7855'],1,10,11,2,,,
96f9582536343c05d6f25cdd2316d4e4724aa309,"Add redis's password from config to txredisapi. (#41)

Fix for #40.",Arkadiusz Adamski,ar4s@users.noreply.github.com,Andrew Godwin,andrew@aeracode.org,2017-04-21 02:03:02+02:00,-7200,2017-04-20 17:03:02-07:00,25200,True,False,['core.py'],['d2c230f48c109c48c903f2b5c854c2b80410b446'],0,1,1,1,0.0,0.0,1.0
132528609213283953efda2583312aa5c23cd577,"Sentinel service discovery/connection caching, send/receive more deterministic (#43)

* Added a Docker-based testing environment using docker-compose. Provides two Redis masters, two slaves, and one Sentinel server. The Redis servers are configured to not persist data to disk.
* Made send/receive logic more deterministic for normal (non-single-reader) channels. When sending to or receiving from a normal channel, the channel layer now cycles through all connections in order, rather than choosing at random. This guarantees that a single worker backed by multiple connections will pick up a message after calling receive() no more than once for each connection. This makes the channel layer behavior more predictable without compromising performance, and makes it possible to test channel layers with multiple connections.
* Added two new capabilities to the Sentinel channel layer: connection caching and service discovery.
  * Connection caching is enabled by passing sentinel_refresh_interval. This will cause the channel layer to cache its master connections and only refresh them when a connection is requested and the refresh interval has passed since the last refresh.
  * Service discovery happens automatically if services is empty. The channel layer calls out to its Sentinel hosts to get all service names tracked by Sentinel, and uses that information to build its service list.",Ben Greenberg,bgreenberg@eventbrite.com,Andrew Godwin,andrew@aeracode.org,2017-05-18 13:06:41-07:00,25200,2017-05-18 13:06:41-07:00,25200,True,False,"['.gitignore', 'Dockerfile', 'core.py', 'sentinel.py', 'constants.py', 'sentinel.conf', 'test_core.py', 'test_local.py', 'test_sentinel.py', 'test_twisted.py', 'docker-compose.yml', 'setup.py', 'Dockerfile', 'redis.conf', 'Dockerfile', 'sentinel.conf', 'tox.ini']",['96f9582536343c05d6f25cdd2316d4e4724aa309'],162,1320,1482,17,1.0,0.7058823529411765,0.8235294117647058
e4d3e6d4ba79e46ee0490c7816f265dc60e0df25,Releasing 1.4.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-05-18 13:16:53-07:00,25200,2017-05-18 13:16:53-07:00,25200,True,False,"['CHANGELOG.txt', 'README.rst', '__init__.py']",['132528609213283953efda2583312aa5c23cd577'],2,25,27,3,,,
2496730b7d90ac652b651c5360bb661e955a5621,Add Python 3.6 test env,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-05-28 22:51:04-07:00,25200,2017-05-28 22:51:04-07:00,25200,True,False,"['.travis.yml', 'README.rst']",['e4d3e6d4ba79e46ee0490c7816f265dc60e0df25'],2,3,5,2,,,
289e10f3e04332cf7d25f87b26cf7ef3f9064571,Fixed #48: Message body keys are deleted on receive,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-06-15 16:10:36+08:00,-28800,2017-06-15 16:10:36+08:00,-28800,True,False,"['core.py', 'test_core.py']",['2496730b7d90ac652b651c5360bb661e955a5621'],0,21,21,2,0.875,0.875,0.875
e71e4b3fba914daf0e9bb04ecbf21bac47f237d7,Releasing 1.4.1,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-06-15 16:37:08+08:00,-28800,2017-06-15 16:37:08+08:00,-28800,True,False,"['CHANGELOG.txt', '__init__.py']",['289e10f3e04332cf7d25f87b26cf7ef3f9064571'],1,8,9,2,,,
bd485f48dfa55b1aefd7676f39aef8b128667588,remove the try/except around blpop and do not loop forever on block=True (#49),Ben Greenberg,bgreenberg@eventbrite.com,Andrew Godwin,andrew@aeracode.org,2017-06-15 19:33:15-07:00,25200,2017-06-16 10:33:15+08:00,-28800,True,False,['core.py'],['e71e4b3fba914daf0e9bb04ecbf21bac47f237d7'],5,2,7,1,1.0,1.0,1.0
c9d14816271dfa7ac65fcae7ca165ead1014f4af,"Precalculate Script.sha when creating scripts (#51)

This is a workaround for a problem in redis-py.

Script objects are initialized with sha set to the empty string, which means that the first time the Script is executed, it makes an EVALSHA call that is guaranteed to fail. This produces extra traffic for no apparent benefit. A fix has been submitted upstream, but this works around it in the meantime.",Ben Greenberg,bgreenberg@eventbrite.com,Andrew Godwin,andrew@aeracode.org,2017-06-19 16:20:52-07:00,25200,2017-06-19 16:20:52-07:00,25200,True,False,"['core.py', 'sentinel.py']",['bd485f48dfa55b1aefd7676f39aef8b128667588'],4,17,21,2,1.0,1.0,1.0
984b5be51e7aba6144f9e99bcdc90139c10454d4,Run integration test suite with Channels test project. (#32),Artem Malyshev,proofit404@gmail.com,Andrew Godwin,andrew@aeracode.org,2017-06-20 03:57:50+03:00,-10800,2017-06-19 17:57:50-07:00,25200,True,False,"['.travis.yml', 'pytest.ini', 'setup.py', '__init__.py', 'constants.py', 'test_core.py', 'test_integration.py', 'test_local.py', 'test_sentinel.py', 'test_twisted.py', 'tox.ini']",['c9d14816271dfa7ac65fcae7ca165ead1014f4af'],15,87,102,11,1.0,1.0,1.0
be5694e32557b3cf2736041f289cf50ce2173049,Releasing 1.4.2,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-06-20 10:21:27-07:00,25200,2017-06-20 10:21:27-07:00,25200,True,False,"['CHANGELOG.txt', '__init__.py']",['984b5be51e7aba6144f9e99bcdc90139c10454d4'],1,10,11,2,,,
3c1a59a0566a3d0a21e94b0cfc642d71e48baec2,Travis - test on Trusty (#55),Adam Johnson,me@adamj.eu,Andrew Godwin,andrew@aeracode.org,2017-07-26 20:00:34+01:00,-3600,2017-07-26 12:00:34-07:00,25200,True,False,['.travis.yml'],['be5694e32557b3cf2736041f289cf50ce2173049'],0,1,1,1,,,
a8d70bd3900350dc3906a4fed9ba857133293bb5,Factor out common functionality from Redis and Sentinel channel layers into base class (#59),Ben Greenberg,bgreenberg@eventbrite.com,Andrew Godwin,andrew@aeracode.org,2017-09-14 14:23:00-07:00,25200,2017-09-14 14:23:00-07:00,25200,True,False,"['Dockerfile', 'core.py', 'sentinel.py', 'setup.py', 'test_integration.py']",['3c1a59a0566a3d0a21e94b0cfc642d71e48baec2'],161,184,345,5,0.0,1.0,0.0
533df6e1f134b20b76d9d9f300ec65475eff1d2b,Releasing 1.4.3,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-09-14 14:30:12-07:00,25200,2017-09-14 14:30:12-07:00,25200,True,False,"['CHANGELOG.txt', '__init__.py']",['a8d70bd3900350dc3906a4fed9ba857133293bb5'],1,10,11,2,,,
ff8c8e682fc08509bc2eaac7c51f5194b37b549d,Basic working version of send and receive,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2017-10-27 23:46:28-07:00,25200,2017-10-27 23:48:35-07:00,25200,True,False,['core.py'],['be5694e32557b3cf2736041f289cf50ce2173049'],461,152,613,1,0.7570621468926554,0.8022598870056498,0.6949152542372882
ab186b41c7410b7aaf6aa9acab96bf75fb8f8926,Standardise on double quotes,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-01-06 20:56:55-08:00,28800,2018-01-06 20:56:55-08:00,28800,True,False,"['__init__.py', 'core.py', 'test_core.py', 'test_integration.py', 'test_sentinel.py', 'test_twisted.py']",['ff8c8e682fc08509bc2eaac7c51f5194b37b549d'],27,27,54,6,,,
9d60176aadcba065cc74ffe04969ac14536b27c8,Fix import ordering,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-01-06 21:01:50-08:00,28800,2018-01-06 21:01:50-08:00,28800,True,False,"['core.py', 'local.py', 'sentinel.py', 'test_core.py', 'test_integration.py', 'test_local.py', 'test_sentinel.py', 'test_twisted.py']",['ab186b41c7410b7aaf6aa9acab96bf75fb8f8926'],14,23,37,8,,,
3ba76a2f866a941517e3e28cce38fff5ba5e7d93,Deleting old testing stuff,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-01-06 21:08:45-08:00,28800,2018-01-06 21:34:40-08:00,28800,True,False,"['.gitignore', '.travis.yml', 'Dockerfile', '__init__.py', 'core.py', 'local.py', 'sentinel.py', 'twisted_utils.py', 'docker-compose.yml', 'pytest.ini', 'setup.cfg', 'setup.py', 'Dockerfile', 'redis.conf', 'Dockerfile', 'sentinel.conf', 'constants.py', 'test_core.py', 'test_integration.py', 'test_local.py', 'test_sentinel.py', 'test_twisted.py', 'tox.ini']",['9d60176aadcba065cc74ffe04969ac14536b27c8'],1785,70,1855,23,0.3633879781420765,0.07650273224043716,0.20765027322404372
7a54a3f6c9de0bb1a39c7e3119fc89f80f40c6cd,Few more tests and try to fix travis,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-01-06 21:46:16-08:00,28800,2018-01-06 21:46:16-08:00,28800,True,False,"['.travis.yml', 'core.py', 'setup.py', 'test_core.py']",['3ba76a2f866a941517e3e28cce38fff5ba5e7d93'],2,51,53,4,1.0,1.0,1.0
fb4d0ccf06c26990e00db17af5931c3e9c161787,Cleaning up test layout,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-01-06 22:13:51-08:00,28800,2018-01-06 22:13:51-08:00,28800,True,False,"['core.py', 'setup.py', 'test_core.py']",['7a54a3f6c9de0bb1a39c7e3119fc89f80f40c6cd'],37,64,101,3,0.0,1.0,1.0
e267e6cc167478e65b49bbc329d76b13d52aed52,Upgrade to aioredis 1.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-01-06 22:55:33-08:00,28800,2018-01-06 22:55:33-08:00,28800,True,False,"['core.py', 'test_core.py']",['fb4d0ccf06c26990e00db17af5931c3e9c161787'],37,37,74,2,1.0,1.0,1.0
ee26c3e66f24d16f1d559db4d11fdd2abe09caee,Install linting deps in travis,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-01-06 23:58:55-08:00,28800,2018-01-06 23:58:55-08:00,28800,True,False,['.travis.yml'],['e267e6cc167478e65b49bbc329d76b13d52aed52'],1,1,2,1,,,
af48463c7c8e7f8c3eac6cba693ae51f79cc19c6,Remove unicode_literals import,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-01-07 00:03:38-08:00,28800,2018-01-07 00:03:38-08:00,28800,True,False,['core.py'],['ee26c3e66f24d16f1d559db4d11fdd2abe09caee'],2,0,2,1,,,
0fb5288bd3eff7d071ea4a60338285ab17f4461a,Print isort diffs,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-01-07 00:17:46-08:00,28800,2018-01-07 00:17:46-08:00,28800,True,False,['.travis.yml'],['af48463c7c8e7f8c3eac6cba693ae51f79cc19c6'],1,1,2,1,,,
5cb6e82a828e85529c47b8d2667ef981bb2c5660,Add channels to first party packages,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-01-07 00:23:27-08:00,28800,2018-01-07 00:23:27-08:00,28800,True,False,['setup.cfg'],['0fb5288bd3eff7d071ea4a60338285ab17f4461a'],0,3,3,1,,,
8240c4ea07d5886b3ed25f0ec7beb6d48d8be90e,Fixed #67: msgpack has renamed its package,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-01-17 10:43:32-08:00,28800,2018-01-17 10:43:32-08:00,28800,True,False,['setup.py'],['5cb6e82a828e85529c47b8d2667ef981bb2c5660'],1,1,2,1,,,
b3740e0509bb24ec5538ab7aa95641e83d41c034,Add group methods to asgi_redis,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-01 18:11:29-08:00,28800,2018-02-01 18:11:29-08:00,28800,True,False,"['core.py', 'setup.py', 'test_core.py']",['8240c4ea07d5886b3ed25f0ec7beb6d48d8be90e'],0,92,92,3,1.0,1.0,0.29411764705882354
8ce398a224b51dc0ef72b21fe6f17d3227979521,Make new_channel into a coroutine for potential future needs,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-01 20:51:04-08:00,28800,2018-02-01 20:51:04-08:00,28800,True,False,"['__init__.py', 'core.py', 'test_core.py']",['b3740e0509bb24ec5538ab7aa95641e83d41c034'],2,4,6,3,,,
3389cb75060ac920ebdcf67f100d27538efcbfde,"Rename package to ""channels_redis""",Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-01 20:59:38-08:00,28800,2018-02-01 20:59:38-08:00,28800,True,False,"['.travis.yml', 'README.rst', '__init__.py', '__init__.py', 'core.py', 'setup.py', 'test_core.py']",['8ce398a224b51dc0ef72b21fe6f17d3227979521'],112,43,155,7,,,
628d8daa3db813f284493d2f764d27e92dcca786,Add note about package name change,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-01 21:06:46-08:00,28800,2018-02-01 21:06:46-08:00,28800,True,False,['README.rst'],['0d544c6f6948fb057b3b9a91e90a7a2e41a52a64'],0,4,4,1,,,
1fa597f47c30e66be3500a2829dc2cfe2c764c7c,Releasing 2.0.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-01 21:25:05-08:00,28800,2018-02-01 21:25:05-08:00,28800,True,False,['CHANGELOG.txt'],['628d8daa3db813f284493d2f764d27e92dcca786'],0,7,7,1,,,
0e83eff1b63eeb5203b4abc55e6278fc411567ae,Update dependencies to be more loose (and match Channels),Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-02 17:38:07-08:00,28800,2018-02-02 17:38:07-08:00,28800,True,False,['setup.py'],['1fa597f47c30e66be3500a2829dc2cfe2c764c7c'],2,2,4,1,,,
150eb9766fcff5dc87050fe880bf3e17e3d1e068,Releasing 2.0.1,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-02 17:39:48-08:00,28800,2018-02-02 17:39:48-08:00,28800,True,False,"['CHANGELOG.txt', '__init__.py']",['0e83eff1b63eeb5203b4abc55e6278fc411567ae'],1,7,8,2,,,
9c991cd44547c0aac073d01fb3128141278886a6,Make it clear you need Python 3.5.2 (because of loop.create_future),Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-02 23:46:51-08:00,28800,2018-02-02 23:46:51-08:00,28800,True,False,['README.rst'],['150eb9766fcff5dc87050fe880bf3e17e3d1e068'],1,2,3,1,,,
99efa2906ab62fdf92a96804c08549026282b230,Fix ChannelFull behaviour,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-04 11:49:26-08:00,28800,2018-02-04 11:49:26-08:00,28800,True,False,"['core.py', 'test_core.py']",['9c991cd44547c0aac073d01fb3128141278886a6'],4,30,34,2,1.0,1.0,1.0
976db02edbeffecdaddfab9e3c9a3bc8ec38a6e6,Move build and release into Travis,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-04 11:51:12-08:00,28800,2018-02-04 11:51:12-08:00,28800,True,False,"['.travis.yml', 'Makefile']",['99efa2906ab62fdf92a96804c08549026282b230'],19,13,32,2,,,
228a4d49d57078cd67b116f6f8ddc8aab85f71e2,Releasing 2.0.2,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-04 11:54:16-08:00,28800,2018-02-04 11:54:16-08:00,28800,True,False,"['CHANGELOG.txt', '__init__.py']",['976db02edbeffecdaddfab9e3c9a3bc8ec38a6e6'],1,8,9,2,,,
0c3125278f0162b2317b212dc84899c55300ff48,Fixed #73: Compile channel capacities in init,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-10 11:04:19-08:00,28800,2018-02-10 11:04:19-08:00,28800,True,False,"['core.py', 'test_core.py']",['228a4d49d57078cd67b116f6f8ddc8aab85f71e2'],1,14,15,2,1.0,1.0,1.0
f5e4799e11f472cc267598e9f78099a160f81550,Don't use cached connection pools from other event loops,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-14 12:04:34-08:00,28800,2018-02-14 12:04:34-08:00,28800,True,False,['core.py'],['0c3125278f0162b2317b212dc84899c55300ff48'],2,11,13,1,0.75,1.0,0.75
4390d280ceb6c240ceed17f86a6823b943d5405e,Releasing 2.0.3,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-14 15:45:39-08:00,28800,2018-02-14 15:45:39-08:00,28800,True,False,"['CHANGELOG.txt', '__init__.py']",['f5e4799e11f472cc267598e9f78099a160f81550'],1,11,12,2,,,
6613baf73a8fbb2a01e08008160a19f27981ef25,"Remove connection pools and long-running tasks

This will result in slightly higher connection times, but make it much
easier to not leak connections when using threads. We can revisit pools
at a later date if the need becomes apparent.",Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-20 17:27:20-08:00,28800,2018-02-20 17:27:20-08:00,28800,True,False,"['core.py', 'test_core.py']",['4390d280ceb6c240ceed17f86a6823b943d5405e'],94,79,173,2,0.0,0.0,0.14285714285714285
d69d722bfa9bd01a715a9f56ff6bc6bd7a2a3d13,"Fix loop concurrency with new receive, and add test",Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-21 10:36:30-08:00,28800,2018-02-21 10:36:30-08:00,28800,True,False,"['core.py', 'test_core.py']",['6613baf73a8fbb2a01e08008160a19f27981ef25'],4,53,57,2,0.9655172413793104,1.0,0.9655172413793104
a29c4b7090292af3f95a1f5cdcef87b9f8c81b83,Fix isort for asgiref import,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-21 10:44:08-08:00,28800,2018-02-21 10:44:08-08:00,28800,True,False,['setup.cfg'],['d69d722bfa9bd01a715a9f56ff6bc6bd7a2a3d13'],1,1,2,1,,,
f1580fcc3d5b1e28be9ba03e8a38fc57c68bed8c,Releasing 2.1.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-02-21 14:24:31-08:00,28800,2018-02-21 14:24:31-08:00,28800,True,False,"['CHANGELOG.txt', '__init__.py']",['a29c4b7090292af3f95a1f5cdcef87b9f8c81b83'],1,10,11,2,,,
9e93d9ce01cc5fef011936dc07dcd6a15f14a7c4,Fix default hosts value,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-03-07 21:50:46+00:00,0,2018-03-07 21:50:46+00:00,0,True,False,['core.py'],['f1580fcc3d5b1e28be9ba03e8a38fc57c68bed8c'],1,1,2,1,,,
9a60fd5dbd48b5469c25f7032e037fe14e91bb68,Rearrange receive_loop to only run one instance,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-03-20 23:13:20-07:00,25200,2018-03-20 23:13:20-07:00,25200,True,False,"['core.py', 'setup.cfg']",['9e93d9ce01cc5fef011936dc07dcd6a15f14a7c4'],40,36,76,2,0.0,0.0,0.0
f01fca4233355c549696fef5522eec8362e25d24,Releasing 2.1.1,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-03-21 16:15:06-07:00,25200,2018-03-21 16:15:06-07:00,25200,True,False,"['CHANGELOG.txt', '__init__.py']",['9a60fd5dbd48b5469c25f7032e037fe14e91bb68'],1,10,11,2,,,
2362cbe393f0beb5ded6ff88557ded21c453a128,Loosen aioredis requirement,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-03-27 21:18:44-07:00,25200,2018-03-27 21:18:44-07:00,25200,True,False,['setup.py'],['f01fca4233355c549696fef5522eec8362e25d24'],1,1,2,1,,,
01be50fa3eadd208ddab950212b7c1f85dfa36dd,"Group Send using Lua (#85)

Implements `group_send` using Lua for efficiency, providing over 100x performance increase with groups of thousands of channels.",mmcardle,mmcardle@users.noreply.github.com,Andrew Godwin,andrew@aeracode.org,2018-04-03 02:10:08+01:00,-3600,2018-04-02 18:10:08-07:00,25200,True,False,"['core.py', 'test_core.py']",['2362cbe393f0beb5ded6ff88557ded21c453a128'],16,134,150,2,0.07407407407407407,1.0,0.4444444444444444
502acba5222b2b95a4fabd99dc939d0e642f0f32,"Reword the group_expiry explanation (#91)

Make it clearer about the link between servers and the timeout.",Matthias Kestenholz,mk@feinheit.ch,Andrew Godwin,andrew@aeracode.org,2018-04-03 17:45:48+02:00,-7200,2018-04-03 08:45:48-07:00,25200,True,False,['README.rst'],['01be50fa3eadd208ddab950212b7c1f85dfa36dd'],3,6,9,1,,,
54d935beb6842333ba4f3e6c29cbe86c4307cf16,"Fixed the receive_buffer to be a defaultdict using queues instead of lists (#90)

Removes polling and improves ordering semantics.",Kyle Agronick,agronick@gmail.com,Andrew Godwin,andrew@aeracode.org,2018-04-03 12:05:44-04:00,14400,2018-04-03 09:05:44-07:00,25200,True,False,['core.py'],['502acba5222b2b95a4fabd99dc939d0e642f0f32'],13,9,22,1,1.0,1.0,0.0
f50bbd5ec20233078343a2bd6a9ee1d0cd0bc6eb,"Fixed Lua group_send correctness (#99)

Fixes group send to use the correct channel name for hashing. Fixes #93. Fixes #94.",Aloïs Brunel,alois@deepomatic.com,Andrew Godwin,andrew@aeracode.org,2018-04-11 19:19:04+02:00,-7200,2018-04-11 10:19:04-07:00,25200,True,False,"['core.py', 'test_core.py']",['54d935beb6842333ba4f3e6c29cbe86c4307cf16'],12,42,54,2,0.0,1.0,0.6842105263157895
9bc120084a2d770e5c3859c652afd7db030a833f,"Added channel capacity check to lua-based group_send (#101)

Fixed #96.",mmcardle,mmcardle@users.noreply.github.com,Andrew Godwin,andrew@aeracode.org,2018-04-16 18:22:09+01:00,-3600,2018-04-16 10:22:09-07:00,25200,True,False,"['core.py', 'test_core.py']",['f50bbd5ec20233078343a2bd6a9ee1d0cd0bc6eb'],5,38,43,2,0.6842105263157895,0.0,0.6842105263157895
2997fa5c04841388aee81c67665c4533d43a560b,Releasing 2.2.0,Andrew Godwin,andrewgodwin@eventbrite.com,Andrew Godwin,andrew@aeracode.org,2018-05-14 11:40:51-04:00,14400,2018-05-14 11:40:51-04:00,14400,True,False,"['CHANGELOG.txt', '__init__.py']",['9bc120084a2d770e5c3859c652afd7db030a833f'],1,8,9,2,,,
2a7ce2e44ac710ba105d1397812dc0083c87a48a,Fixed #105: Bad call to get_capacity,Andrew Godwin,andrewgodwin@eventbrite.com,Andrew Godwin,andrew@aeracode.org,2018-05-17 23:18:08-07:00,25200,2018-05-17 23:18:08-07:00,25200,True,False,"['core.py', 'test_core.py']",['2997fa5c04841388aee81c67665c4533d43a560b'],2,6,8,2,1.0,1.0,1.0
c26f00771b54d91932a4fd69bc8e0b668c8042c7,Releasing 2.2.1,Andrew Godwin,andrewgodwin@eventbrite.com,Andrew Godwin,andrew@aeracode.org,2018-05-17 23:20:12-07:00,25200,2018-05-17 23:20:12-07:00,25200,True,False,"['CHANGELOG.txt', '__init__.py']",['2a7ce2e44ac710ba105d1397812dc0083c87a48a'],1,7,8,2,,,
9f05013d91c7a59b7f5515faceec5b604ab9af5a,"Sending Single Message Per Client Prefix (#107)

Replaces single channel names with lists of channel names with the same prefix for efficiency.",Ankit Kathuria,ankitkathuria534@gmail.com,Andrew Godwin,andrew@aeracode.org,2018-06-18 23:20:40+05:30,-19800,2018-06-18 10:50:40-07:00,25200,True,False,['core.py'],['c26f00771b54d91932a4fd69bc8e0b668c8042c7'],16,66,82,1,0.17391304347826086,1.0,0.17391304347826086
52d0d48861d814379a5b5364f524a5635a7b7fa3,Support additional redis connection parameters (#110),Nick Farrell,nicholas.farrell@gmail.com,Andrew Godwin,andrew@aeracode.org,2018-07-03 02:26:41+10:00,-36000,2018-07-02 09:26:41-07:00,25200,True,False,"['README.rst', 'core.py']",['9f05013d91c7a59b7f5515faceec5b604ab9af5a'],4,7,11,2,1.0,1.0,1.0
1f055f40adf6157f653a2e492871a4a51d49a052,Implement a connection pool class so that connections can be reused,Jan Berčič,jan.bercic@gmail.com,Andrew Godwin,andrew@aeracode.org,2018-06-14 15:50:29+02:00,-7200,2018-08-09 11:12:45-07:00,25200,True,False,['core.py'],['52d0d48861d814379a5b5364f524a5635a7b7fa3'],8,95,103,1,1.0,1.0,0.9347826086956522
58745999c556540ccf2995cf9b0ead7f406e2e2b,Fix event loop handling in the tests,Jan Berčič,jan.bercic@gmail.com,Andrew Godwin,andrew@aeracode.org,2018-06-18 19:04:20+02:00,-7200,2018-08-09 11:12:45-07:00,25200,True,False,['test_core.py'],['1f055f40adf6157f653a2e492871a4a51d49a052'],2,20,22,1,0.8333333333333334,1.0,0.9166666666666666
054c2ee34ca36a25d5e36584c8433b99cc07e271,"Change process-local message receiving

The previous implementation was very racy. Suppose there are two
messages waiting in the Redis asgi message queue:
- the first receiver creates the receiver loop,
- the loop gets the first message and puts it in the appropriate queue,
- the loop is then free to loop again to get the next message,
- the receiver pops the first message off the queue
- after processing the message, the loop is cancelled;
- if it had already sent a BLPOP command, the response will be lost.

The problem can arise when using connection pools: because a
pre-existing connection won't have the initial handshake overhead, it'll
be able to fire off a BLPOP command to Redis immediately after being
taken out of the pool. The receive() code, on the other hand, won't be
aware of this and will, having processed the message it wanted, proceed
to cancel the receiver loop mid-command. If the Redis server had already
sent its response by the time the client-side connection was dropped by
the cancellation, the message will now be lost.

The root problem here is the race condition between the loop proceeding
to the next message (in cases where there aren't any other immediately
running receivers) and the final receiver cancelling it.

To avoid this, the loop has to be synchronized with its receivers.
However, merely counting the currently running receivers is
insufficient, because the loop might get messages from Redis for
channels which aren't being waited on. If this could somehow be
overcome, there is still the problem of initial startup: between
starting the loop and getting to a point where the initial receiver can
signal to the loop that it needs a message for a certain channel, the
loop might already have got to the point where it checks for its
terminating conditions and ending prematurely.

The solution implemented in this commit approaches the problem from a
different point of view. Each receiver is itself responsible for getting
messages out of Redis; if the message is for a different channel, the
old receive_buffer is used, letting any other receivers still get the
message that was just ignored. To avoid having multiple simultaneous
receivers contacting Redis independently, a token is used, which is
shared between competing receivers through an asyncio.Queue, ensuring
they all get a chance to pull from Redis. Because there is only one
token, these chances will be serialized.

As previously, the last receiver to exit also shuts down the queue; this
must happen in order to be compatible with the channel layer being used
from multiple event loops, since an asyncio.Queue will bind to an event
loop at construction time.",Jan Berčič,jan.bercic@gmail.com,Andrew Godwin,andrew@aeracode.org,2018-06-18 19:04:46+02:00,-7200,2018-08-09 11:12:45-07:00,25200,True,False,['core.py'],['58745999c556540ccf2995cf9b0ead7f406e2e2b'],35,24,59,1,0.0,0.0,0.0
8bc04334871ef9557e4a77e2d2f9ab0794b08045,"Fix issue with token-based locking

Previously while you were blocked on getting the token, you could not
make progress even if something arrived into your queue. This changes
it so that we block on either getting a lock or getting a new message
from the queue, whichever comes first.

Also instead of using a queue of tokens, this changes it to use Lock
objects provided by asyncio.",Jernej Kos,jernej@kos.mx,Andrew Godwin,andrew@aeracode.org,2018-06-29 14:53:49+02:00,-7200,2018-08-09 11:12:45-07:00,25200,True,False,['core.py'],['054c2ee34ca36a25d5e36584c8433b99cc07e271'],17,63,80,1,0.0,0.0,1.0
e2416af18918a5db12aa61e844aecda2f8ba779a,"Handle receive cancellation correctly

The one remaining loophole is Redis `BLPOP` cancellation, which was also
the original problem when changing from per-request connections to
connection pools.

Once a `BLPOP` command is started, Python will switch to some other task
while waiting for the server to respond. If that other task decides to
cancel the `receive`, then one of two things will happen:
- the connection is dropped soon enough for the server to notice, so
  that it won't send the response at all, or
- the response already reached Python's process, but the task processing
  it is flagged for cancellation.

In the latter scenario, the message will be lost. To solve this, `BLPOP`
could be shielded from cancellation, but this would lead to problematic
timeout handling, where a read command to Redis could easily outlive its
event loop, leading to all sorts of problems for shutdown code or
environments where the global channels layer instance is used from
multiple event loops.

Redis documentation suggests using `BRPOPLPUSH` instead, where messages
are atomically returned and copied to an auxiliary list. This makes the
Python implementation easier inasmuch as cancellation during the
`BRPOPLPUSH` no longer needs to be handled; but the message must still
be removed from the auxiliary list once processed - if and only if it is
processed.

One option for implementing this is to make the auxiliary removal
completely uninterruptible from the point of view of the code path
executing it. In a usual single-threaded asyncio program, the
`BRPOPLPUSH` would be the last interruptible operation before returning
a valid message; the code following this command is essentially atomic
with respect to any other task attached to the event loop. Any other
task might then reasonably expect that either:
- the receive succeeded completely, will return a valid message and has
  cleaned the auxiliary list, or
- `BRPOPLPUSH` was interrupted, there will be no message to speak of and
  there is a backup of it in the auxiliary list.

Making removal atomic violates the second expectation and also a fairly
basic principle of single-threaded asyncio code. Because it is still an
interruptible operation, other tasks will be run during this ""atomic""
piece of code, meaning it could be cancelled. If it is cancelled, then
that cancellation must become visible outside, otherwise we've just
""run"" two independent code paths at the same time in a single thread,
and also made life difficult for anyone wanting to make sure tasks are
complete in a timely manner - the receive cancellation would essentially
be gobbled and the task would need to be cancelled again at its next
interruption point.

If the cancellation must proceed, however, we could be left in the
following situation: the message has been unpacked, but the cancellation
occured too late to stop the removal operation, so we're left with a
message that we somehow have to return, because there's no backup of it
in Redis.

There would be a way to solve this e.g. by subclassing the cancellation
exception and having it carry the message as a payload, but that would
be messy.

A second option is to create a detached removal task. This lets us still
have a properly atomic code path from when the message is unpacked to
when the function returns, and the removal will happen at some point
""soon"", because there are no delays in it.

Notably, ordering is not a problem: if two close receives both fire off
removals for their own messages, the end result will still be that two
messages will be deleted from a list into which two messages were put
earlier by Redis.

On the other hand, it is a problem if a receive commences after a
previous receive, but before its cleanup: the message backup would be
moved back into the regular message queue, and the second receive would
get it again even though the earlier receive processed it successfully.
The solution to this is rather heavy-handed but easily reasoned about:
the stretch of time between starting a removal task and finishing it can
be protected by a per-channel lock. Acquiring the lock is interruptible
but doesn't change the cancellation semantics of the design, since
cancelling lock acquisition has the same effect as cancelling
`BRPOPLPUSH` before the command reaches Redis - no message is received
and Redis state is not corrupted.

*NOTE*: It is useful to observe that `BRPOPLPUSH` is also the only Redis
command that requires this level of special handling. The others used by
`channels_redis` are either read-only, such as `LLEN`, or are
destructive without expecting a return value, such as `ZREM`.
`BRPOPLPUSH` is at the same time destructive (an element is removed
server-side from the list) and with an important return value.",Jan Berčič,jan.bercic@gmail.com,Andrew Godwin,andrew@aeracode.org,2018-07-06 13:25:01+02:00,-7200,2018-08-09 11:12:45-07:00,25200,True,False,['core.py'],['8bc04334871ef9557e4a77e2d2f9ab0794b08045'],18,142,160,1,0.2037037037037037,0.9814814814814815,0.6111111111111112
b727a4f6d35b2d10463a8c41e25396c874ed0b45,Add issue template,Andrew Godwin,andrewgodwin@eventbrite.com,GitHub,noreply@github.com,2018-08-09 11:37:06-07:00,25200,2018-08-09 11:37:06-07:00,25200,True,False,['ISSUE_TEMPLATE.md'],['e2416af18918a5db12aa61e844aecda2f8ba779a'],0,14,14,1,,,
16b1162497eb45115d4f1b82a013f98936825d56,Releasing 2.3.0,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-08-16 21:25:16-07:00,25200,2018-08-16 21:36:38-07:00,25200,True,False,"['CHANGELOG.txt', '__init__.py', 'setup.py']",['b727a4f6d35b2d10463a8c41e25396c874ed0b45'],2,16,18,3,,,
c6b321fc2938974046a90464bb4251fe2b6c4e30,Start using the Black code formatter,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-08-27 12:04:35+10:00,-36000,2018-08-27 12:04:35+10:00,-36000,True,False,"['.travis.yml', 'core.py', 'setup.py', 'test_core.py']",['16b1162497eb45115d4f1b82a013f98936825d56'],74,111,185,4,0.0,0.56,0.36
654a696ec8f74279c115e738ab5a9c80ec2cca68,Don't make pyflakes wait for stdin,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-08-27 12:09:23+10:00,-36000,2018-08-27 12:09:23+10:00,-36000,True,False,['.travis.yml'],['c6b321fc2938974046a90464bb4251fe2b6c4e30'],1,1,2,1,,,
20fe818f57231d2616d3b3c1b59da01a2ee44a7b,Further fixing the travis build,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-08-27 12:15:27+10:00,-36000,2018-08-27 12:15:27+10:00,-36000,True,False,['.travis.yml'],['654a696ec8f74279c115e738ab5a9c80ec2cca68'],1,1,2,1,,,
46951c05d8ad46583c4e6a04e023e8b1bb2c7a6e,Isort config tweaking,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-08-27 12:18:04+10:00,-36000,2018-08-27 12:18:04+10:00,-36000,True,False,['setup.cfg'],['20fe818f57231d2616d3b3c1b59da01a2ee44a7b'],1,1,2,1,,,
1997169644d9b4523a30f293d903143063e7612c,Fix travis release stage,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-08-29 17:58:52-07:00,25200,2018-08-29 17:58:52-07:00,25200,True,False,['.travis.yml'],['46951c05d8ad46583c4e6a04e023e8b1bb2c7a6e'],1,1,2,1,,,
277961a7663f3b38812e441d82d4021e7d37bbb0,"PendingDeprecationWarning: encoding is deprecated, Use raw=False instead",kradem,kradem@gmail.com,Andrew Godwin,andrew@aeracode.org,2018-09-08 15:06:42+02:00,-7200,2018-09-13 23:03:39-07:00,25200,True,False,['core.py'],['1997169644d9b4523a30f293d903143063e7612c'],1,1,2,1,,,
cf5f74177424ebca03603460c47109af180fb20e,msgpack dependency version updated to 0.5.2,kradem,kradem@gmail.com,Andrew Godwin,andrew@aeracode.org,2018-09-13 10:53:18+02:00,-7200,2018-09-13 23:03:39-07:00,25200,True,False,['setup.py'],['277961a7663f3b38812e441d82d4021e7d37bbb0'],1,1,2,1,,,
0e541389c4dc574ce0b850a46688008cc00493e7,"Fix pool management on event loop shutdown (#130)

Monkey patches the close method so it works on 3.6 as well.",jberci,jan.bercic@gmail.com,Andrew Godwin,andrew@aeracode.org,2018-10-09 14:09:23+02:00,-7200,2018-10-09 14:09:23+02:00,-7200,True,False,['core.py'],['cf5f74177424ebca03603460c47109af180fb20e'],3,39,42,1,1.0,1.0,0.75
6221965e1072dfbebb1f2f7acdf91b092953a325,Releasing 2.3.1,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-10-17 00:56:07-07:00,25200,2018-10-17 00:56:07-07:00,25200,True,False,"['CHANGELOG.txt', '__init__.py']",['0e541389c4dc574ce0b850a46688008cc00493e7'],1,7,8,2,,,
0a7d10e0b3a9efffe859b8ae75e0b3cc6421f57b,"Release receive_lock on CancelledError when task.cancel() fails

Fixes #134",Kevin Peterson,37301941+khpeterson@users.noreply.github.com,Andrew Godwin,andrew@aeracode.org,2018-11-26 12:38:04-08:00,28800,2018-11-26 12:38:04-08:00,28800,True,False,"['core.py', 'test_core.py']",['6221965e1072dfbebb1f2f7acdf91b092953a325'],1,26,27,2,0.8235294117647058,0.8235294117647058,1.0
6031d2573a00d5d5f6a5add562264fd142b69b95,"Clean up receive_buffer. Fixes memory leak. (#141)

Refs django/channels#1181",Kyle Agronick,agronick@gmail.com,Andrew Godwin,andrew@aeracode.org,2018-11-27 13:21:06-05:00,18000,2018-11-27 10:21:06-08:00,28800,True,False,['core.py'],['0a7d10e0b3a9efffe859b8ae75e0b3cc6421f57b'],0,4,4,1,0.0,0.0,1.0
b87fe275fd75de4991fba3eb0ac31f4cb8f29016,Releasing 2.3.2,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2018-11-27 17:07:36-08:00,28800,2018-11-27 17:07:36-08:00,28800,True,False,"['CHANGELOG.txt', '__init__.py']",['6031d2573a00d5d5f6a5add562264fd142b69b95'],1,9,10,2,,,
b6ef126ff7ece67fcd22feef17eb114a124e63bb,"Add 'python_requires' check (#142)

Prevents unsupported Python versions installing the package",Mike Mahony,mikemahony@users.noreply.github.com,Andrew Godwin,andrew@aeracode.org,2018-11-29 09:49:13-08:00,28800,2018-11-29 09:49:13-08:00,28800,True,False,['setup.py'],['b87fe275fd75de4991fba3eb0ac31f4cb8f29016'],0,1,1,1,,,
001fd6b0b7f2ed9dcc59cc5fa0641e8beafd7eb5,Upgrade msgpack to 0.6.0 (#147),Marcelo Theodoro,marcelotheodoro@outlook.com,Andrew Godwin,andrew@aeracode.org,2019-01-03 21:58:18-02:00,7200,2019-01-03 15:58:18-08:00,28800,True,False,['setup.py'],['b6ef126ff7ece67fcd22feef17eb114a124e63bb'],1,1,2,1,,,
ea5cc4052f7776309ba2f6df851d7ced201e99e0,Enforce Python 3.6 and up only. Fixed #145.,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2019-01-10 09:43:41-08:00,28800,2019-01-10 09:44:33-08:00,28800,True,False,"['README.rst', 'setup.py']",['001fd6b0b7f2ed9dcc59cc5fa0641e8beafd7eb5'],2,4,6,2,,,
24f4fe76af24f62ab0c90edc416833422a0b4ecf,Releasing 2.3.3,Andrew Godwin,andrew@aeracode.org,Andrew Godwin,andrew@aeracode.org,2019-01-10 09:50:06-08:00,28800,2019-01-10 09:55:11-08:00,28800,True,False,"['.travis.yml', 'CHANGELOG.txt', '__init__.py']",['ea5cc4052f7776309ba2f6df851d7ced201e99e0'],2,9,11,3,,,
d72de5646229761778753837826cfbe2d71ea955,"Added LICENSE to distribution (#150)

Signed-off-by: Guenther Meyer <d.s.e@sordidmusic.com>",d.s.e,d.s.e@sordidmusic.com,Carlton Gibson,carlton.gibson@noumenal.es,2019-04-14 10:14:10+02:00,-7200,2019-04-14 10:14:10+02:00,-7200,True,False,['MANIFEST.in'],['24f4fe76af24f62ab0c90edc416833422a0b4ecf'],0,1,1,1,,,
4a212bde214a41c1b4460855ba221666c9b56b24,"Update asgiref and channels requirements for ASGI 3. (#153)

See django/channels#1277",Michael,michael-k@users.noreply.github.com,Carlton Gibson,carlton.gibson@noumenal.es,2019-04-14 13:16:34+00:00,0,2019-04-14 15:16:34+02:00,-7200,True,False,['setup.py'],['d72de5646229761778753837826cfbe2d71ea955'],2,2,4,1,,,
049625d2b36c8ae7cc1631757374cbcaf29863ea,"Document unix socket format (#154)

* Added missing LICENSE to distribution
* added documentation for unix socket format

Signed-off-by: Guenther Meyer <d.s.e@sordidmusic.com>",d.s.e,d.s.e@sordidmusic.com,Carlton Gibson,carlton.gibson@noumenal.es,2019-04-14 15:17:30+02:00,-7200,2019-04-14 15:17:30+02:00,-7200,True,False,['README.rst'],['4a212bde214a41c1b4460855ba221666c9b56b24'],0,3,3,1,,,
c436cca4fccd0d2cf02b4faac7d0927710b3c7f1,Releasing 2.4.0 (#155),Carlton Gibson,carlton.gibson@noumenal.es,GitHub,noreply@github.com,2019-04-14 15:30:57+02:00,-7200,2019-04-14 15:30:57+02:00,-7200,True,False,"['CHANGELOG.txt', '__init__.py']",['049625d2b36c8ae7cc1631757374cbcaf29863ea'],1,6,7,2,,,
eec4b27264538b26ec32c104b4f79bff854683b9,Support Python 3.8 (#171),laevilgenius,13280256+laevilgenius@users.noreply.github.com,Carlton Gibson,carlton.gibson@noumenal.es,2019-10-23 22:39:37+03:00,-10800,2019-10-23 21:39:37+02:00,-7200,True,False,"['.travis.yml', 'core.py']",['c436cca4fccd0d2cf02b4faac7d0927710b3c7f1'],2,4,6,2,,,
8efee75564ef36dd5388cfbcaff5bc5b12e76a0b,Releasing 2.4.1.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton.gibson@noumenal.es,2019-10-23 21:40:42+02:00,-7200,2019-10-23 21:40:42+02:00,-7200,True,False,"['CHANGELOG.txt', '__init__.py']",['eec4b27264538b26ec32c104b4f79bff854683b9'],1,8,9,2,,,
2dfc89289861cc642062daa4279ed4f3523647c3,"ConnectionPool.pop must ensure active connections are returned. (#178)

Co-authored-by: originmarkets-antoniodudarev <52928815+originmarkets-antoniodudarev@users.noreply.github.com>",Antonio Dudarev,8568870+Rusox89@users.noreply.github.com,Carlton Gibson,carlton@noumenal.es,2020-01-24 14:44:09+00:00,0,2020-01-24 15:44:09+01:00,-3600,True,False,"['core.py', 'test_core.py']",['8efee75564ef36dd5388cfbcaff5bc5b12e76a0b'],4,36,40,2,0.8888888888888888,1.0,0.8888888888888888
449b90f61be9805e4a6c92b089cdf288274255be,Log error if failed to group_send because of full capacity. (#172),tarikki,tariq.alsadoon@gmail.com,GitHub,noreply@github.com,2020-02-05 21:06:23+02:00,-7200,2020-02-05 20:06:23+01:00,-3600,True,False,"['core.py', 'test_core.py']",['2dfc89289861cc642062daa4279ed4f3523647c3'],6,62,68,2,0.0,0.0,0.7741935483870968
0c27648b60a1918c867b96a5ad3f67ef58ccceda,Releasing 2.4.2.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton.gibson@noumenal.es,2020-02-19 20:59:51+01:00,-3600,2020-02-19 20:59:51+01:00,-3600,True,False,"['CHANGELOG.txt', '__init__.py']",['449b90f61be9805e4a6c92b089cdf288274255be'],1,10,11,2,,,
cd7a171bf7891707b5de385519f909c537eaed8c,Bump pytest to 5.4.0 to resolve version conflicts (#190),tarikki,tariq.alsadoon@gmail.com,GitHub,noreply@github.com,2020-05-14 13:32:06+03:00,-10800,2020-05-14 12:32:06+02:00,-7200,True,False,['setup.py'],['0c27648b60a1918c867b96a5ad3f67ef58ccceda'],1,1,2,1,,,
0c0fa36620a93f08fa3f3cc968e5caaba5ef638d,Unpin test dependencies. (#196),Carlton Gibson,carlton@noumenal.es,GitHub,noreply@github.com,2020-06-15 16:30:45+02:00,-7200,2020-06-15 16:30:45+02:00,-7200,True,False,"['.gitignore', '.travis.yml', 'setup.py']",['cd7a171bf7891707b5de385519f909c537eaed8c'],4,6,10,3,,,
ad66e089ae7cec5164aef31d87d95adcdcb44713,"Updated msgpack requirement to 1.0. (#197)

Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>
Co-authored-by: Sigurd Ljødal <544451+ljodal@users.noreply.github.com>",Carlton Gibson,carlton@noumenal.es,GitHub,noreply@github.com,2020-06-15 16:39:06+02:00,-7200,2020-06-15 16:39:06+02:00,-7200,True,False,"['CHANGELOG.txt', 'setup.py']",['0c0fa36620a93f08fa3f3cc968e5caaba5ef638d'],1,7,8,2,,,
d96aa34028b9ce541d22bb110f4707364a48b5b4,Update Travis to report diff in black violations,William Morrell,WCMorrell@lbl.gov,Carlton Gibson,carlton@noumenal.es,2020-05-27 10:48:21-07:00,25200,2020-06-25 20:09:50+02:00,-7200,True,False,['.travis.yml'],['ad66e089ae7cec5164aef31d87d95adcdcb44713'],1,1,2,1,,,
132efcf0d911ed46d6d51064879edfc530fbf568,"Check aioredis version for deprecated parameter

Starting with aioredis 1.3.1, the loop parameter is deprecated when calling
create_redis. See aio-libs/aioredis#666 and django/channels_redis#179.

When running Python 3.8+ and aioredis 1.3.1+, calls should omit the loop
parameter. Otherwise, continue to include the parameter for the older
versions that expect it.",William Morrell,WCMorrell@lbl.gov,Carlton Gibson,carlton@noumenal.es,2020-05-27 10:50:12-07:00,25200,2020-06-25 20:09:50+02:00,-7200,True,False,['core.py'],['d96aa34028b9ce541d22bb110f4707364a48b5b4'],1,8,9,1,1.0,1.0,1.0
2cb1c080e586186b8a626921a34dcc80b0c99812,Used UUID4 to guarantee unique channel names.,Gabriel Garcia,gabriel.antunes.garcia@gmail.com,Carlton Gibson,carlton@noumenal.es,2020-03-05 21:27:35-08:00,28800,2020-06-25 20:33:35+02:00,-7200,True,False,"['CHANGELOG.txt', 'core.py', 'test_core.py']",['132efcf0d911ed46d6d51064879edfc530fbf568'],12,34,46,3,1.0,1.0,1.0
dee807446700fa71eb1b395328a8e674fc7ac575,Add .vscode folder to .gitignore.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton@noumenal.es,2020-06-25 20:22:41+02:00,-7200,2020-06-25 20:33:35+02:00,-7200,True,False,['.gitignore'],['2cb1c080e586186b8a626921a34dcc80b0c99812'],0,1,1,1,,,
2ae5ad34599c00eefb47e5f155557262242b34d0,Fixed flake8 errors.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton@noumenal.es,2020-06-25 20:52:56+02:00,-7200,2020-06-25 21:07:53+02:00,-7200,True,False,"['core.py', 'test_core.py']",['dee807446700fa71eb1b395328a8e674fc7ac575'],4,4,8,2,,,
4c8808877bbc3f609fb4f546b2976d9877f64577,Used a sorted set to guarantee message expiration.,Gabriel Garcia,gabriel.antunes.garcia@gmail.com,Carlton Gibson,carlton@noumenal.es,2020-03-05 21:09:15-08:00,28800,2020-06-28 14:18:53+02:00,-7200,True,False,"['core.py', 'test_core.py']",['2ae5ad34599c00eefb47e5f155557262242b34d0'],13,205,218,2,0.06504065040650407,0.967479674796748,0.7479674796747967
572aa946b58b8187da542efb375d73bf526030d7,Moving LUA arguments to ARGV to optimize Redis script caching,Gabriel Garcia,gabriel.antunes.garcia@gmail.com,Carlton Gibson,carlton@noumenal.es,2020-06-25 13:02:11-07:00,25200,2020-06-28 14:18:53+02:00,-7200,True,False,"['CHANGELOG.txt', 'core.py']",['4c8808877bbc3f609fb4f546b2976d9877f64577'],13,19,32,2,0.0,0.0,0.0
b10cef2897ca51f9f6c970402b35db71bf6e621b,Lowered group_send failure logging level from exception to info.,tarikki,tariq.alsadoon@gmail.com,Carlton Gibson,carlton@noumenal.es,2020-03-06 04:34:57+02:00,-7200,2020-07-01 20:43:39+02:00,-7200,True,False,"['CHANGELOG.txt', 'core.py', 'test_core.py']",['572aa946b58b8187da542efb375d73bf526030d7'],4,6,10,3,,,
6f8ad5df127d0fb315ad2ce6f35c403138015d3c,"Use format string plus arguments in logging call.

This makes it easier for tools to group similar messages
even when the exact values change",Simon Schmidt,schmidt.simon@gmail.com,Carlton Gibson,carlton@noumenal.es,2020-05-16 15:59:40+03:00,-10800,2020-07-01 21:42:15+02:00,-7200,True,False,"['core.py', 'test_core.py']",['b10cef2897ca51f9f6c970402b35db71bf6e621b'],3,10,13,2,0.0,0.5714285714285714,0.5714285714285714
7e232d498b8ff6d6588023b6999cdc5a701da0c9,"Removed trailing `:` from default group name prefix. (#201)

Closes #177.",Carlton Gibson,carlton@noumenal.es,GitHub,noreply@github.com,2020-07-03 15:47:12+02:00,-7200,2020-07-03 15:47:12+02:00,-7200,True,False,"['CHANGELOG.txt', 'core.py', 'test_core.py']",['6f8ad5df127d0fb315ad2ce6f35c403138015d3c'],1,17,18,3,1.0,1.0,1.0
08989d1cc5c4a1b2af15e0c380bab6e29bdece23,Releasing 3.0. (#202),Carlton Gibson,carlton@noumenal.es,GitHub,noreply@github.com,2020-07-03 15:52:17+02:00,-7200,2020-07-03 15:52:17+02:00,-7200,True,False,"['CHANGELOG.txt', '__init__.py']",['7e232d498b8ff6d6588023b6999cdc5a701da0c9'],3,3,6,2,,,
5ddd906efdcae55fc5c3a356a0408acb3c63afdd,"Update README.rst (#204)

With the changes introduced in 4c8808877bbc3f609fb4f546b2976d9877f64577,
the minimum Redis version needed is now 5.0",Imran Iqbal,imran-iq@users.noreply.github.com,GitHub,noreply@github.com,2020-07-06 16:16:33-04:00,14400,2020-07-06 22:16:33+02:00,-7200,True,False,['README.rst'],['08989d1cc5c4a1b2af15e0c380bab6e29bdece23'],1,1,2,1,,,
8e1476eb335b9e60028bce24851e79babee9dbab,Update 3.0.0 changelog with Redis version requirement. (#205),Dan DeFelippi,dan@driverdan.com,GitHub,noreply@github.com,2020-07-11 14:48:25-04:00,14400,2020-07-11 20:48:25+02:00,-7200,True,False,['CHANGELOG.txt'],['5ddd906efdcae55fc5c3a356a0408acb3c63afdd'],0,2,2,1,,,
90129a68660d94b16bd223fe92018a0a95e30847,"Fixed call to ZADD in Lua script (#209)

Calling ZRANGE with WITHSCORES will return list with
[member, score, member, score, ...]
Iterate over with step -2 will iterate in reverse and skip every second
index. [i] is the score, [i - 1] is the member.
ZADD syntax: ZADD key [NX|XX] [CH] [INCR] score member

Reduced delay in tests to trigger cancel with full backup q 
demonstrating issue.",Stefan Wehrmeyer,stefanw@users.noreply.github.com,GitHub,noreply@github.com,2020-07-15 07:03:53+02:00,-7200,2020-07-15 07:03:53+02:00,-7200,True,False,"['CHANGELOG.txt', 'core.py', 'test_core.py']",['8e1476eb335b9e60028bce24851e79babee9dbab'],4,9,13,3,,,
2075071eb1054f2e39c7252507e74b1e0da002cc,Releasing 3.0.1 (#210),Carlton Gibson,carlton@noumenal.es,GitHub,noreply@github.com,2020-07-15 07:11:28+02:00,-7200,2020-07-15 07:11:28+02:00,-7200,True,False,"['CHANGELOG.txt', '__init__.py']",['90129a68660d94b16bd223fe92018a0a95e30847'],3,4,7,2,,,
1d8db668af84409f9eb57ae6f730efc80505d240,"Respect channel layer capacity in RedisChannelLayer.receive_buffer (#219)

respect the capacity setting so that the receive_buffer does not grow
without bounds

see: https://github.com/django/channels_redis/issues/212",Ryan Petrello,lists@ryanpetrello.com,GitHub,noreply@github.com,2020-09-03 14:34:14-04:00,14400,2020-09-03 20:34:14+02:00,-7200,True,False,"['CHANGELOG.txt', 'core.py', 'test_core.py']",['2075071eb1054f2e39c7252507e74b1e0da002cc'],2,42,44,3,0.9047619047619048,1.0,0.9047619047619048
7ebedf0c807773c6d6ce99d340b4d4def3600056,Releasing 3.1.0,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton.gibson@noumenal.es,2020-09-06 10:19:26+02:00,-7200,2020-09-06 10:19:26+02:00,-7200,True,False,"['CHANGELOG.txt', '__init__.py']",['1d8db668af84409f9eb57ae6f730efc80505d240'],5,9,14,2,,,
97618c770cf1c48ac9dda46c24651b6b8ca40ad8,"Bumped dependencies to allow updating.

asgiref to match Django 3.1
Channels to <4 pending release.",Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton@noumenal.es,2020-10-29 16:37:34+01:00,-3600,2020-10-29 19:31:29+01:00,-3600,True,False,['setup.py'],['7ebedf0c807773c6d6ce99d340b4d4def3600056'],2,2,4,1,,,
3fb7b3989de1dd1676644d81b4b89884a2a75346,Bumped version and change notes for 3.2.0 release.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton@noumenal.es,2020-10-29 16:43:46+01:00,-3600,2020-10-29 19:31:29+01:00,-3600,True,False,"['CHANGELOG.txt', '__init__.py']",['97618c770cf1c48ac9dda46c24651b6b8ca40ad8'],1,9,10,2,,,
4c4fa01c4c45b973ffc7901f482c7064e71196de,Switched to GitHub Actions for CI,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton@noumenal.es,2020-10-29 17:06:16+01:00,-3600,2020-10-29 19:31:29+01:00,-3600,True,False,"['tests.yml', '.travis.yml', 'README.rst', 'tox.ini']",['3fb7b3989de1dd1676644d81b4b89884a2a75346'],47,83,130,4,,,
243eb7e4ecfc2e922508e50210884d3c9bae5403,Fixed GitHub Action badge in README (#231),Gagan Deep,the.one.above.all.titan@gmail.com,GitHub,noreply@github.com,2020-11-07 19:28:03+05:30,-19800,2020-11-07 14:58:03+01:00,-3600,True,False,['README.rst'],['4c4fa01c4c45b973ffc7901f482c7064e71196de'],1,1,2,1,,,
5c3300e69dfc842e105fce253e004b5e7fba6048,Cleaned-up some dictionary operations.  (#238),yed podtrzitko,yedpodtrzitko@users.noreply.github.com,GitHub,noreply@github.com,2021-03-04 20:06:08+07:00,-25200,2021-03-04 14:06:08+01:00,-3600,True,False,['core.py'],['243eb7e4ecfc2e922508e50210884d3c9bae5403'],3,3,6,1,,,
b873bda4352211b90eeee0129271ad71d7f201dd,Don't declare wheels as universal (#240),Michael K,michael-k@users.noreply.github.com,GitHub,noreply@github.com,2021-04-08 13:11:15+00:00,0,2021-04-08 15:11:15+02:00,-7200,True,False,['setup.cfg'],['5c3300e69dfc842e105fce253e004b5e7fba6048'],3,0,3,1,,,
38ffdeb610ce175a01698ca267a6cccc171043c9,Used pipeline for message garbage collection (#242),qeternity,33002121+qeternity@users.noreply.github.com,GitHub,noreply@github.com,2021-04-17 05:21:54+01:00,-3600,2021-04-17 06:21:54+02:00,-7200,True,False,['core.py'],['b873bda4352211b90eeee0129271ad71d7f201dd'],1,3,4,1,0.0,0.0,0.0
3656d87813d643bee28fe1960124063268c850a2,"Added Redis sentinel support. (#250)

Co-authored-by: Chase Bennett <ch@se.gd>",Carlton Gibson,carlton@noumenal.es,GitHub,noreply@github.com,2021-05-12 20:44:00+02:00,-7200,2021-05-12 20:44:00+02:00,-7200,True,False,"['tests.yml', 'README.rst', 'core.py', 'setup.py', 'test_sentinel.py']",['38ffdeb610ce175a01698ca267a6cccc171043c9'],17,706,723,5,0.5677083333333334,1.0,0.890625
084ddc431e7fd1212c8b10a172a2429d3c27f742,Added RedisPubSubChannelLayer. (#251),Ryan Henning,ryan@masterai.ai,GitHub,noreply@github.com,2021-06-24 23:34:53-05:00,18000,2021-06-25 06:34:53+02:00,-7200,True,False,"['tests.yml', 'README.rst', 'pubsub.py', 'test_pubsub.py']",['3656d87813d643bee28fe1960124063268c850a2'],1,462,463,4,0.6954732510288066,0.6625514403292181,0.7736625514403292
0caaacd21ee7a83d517a7fe6d343db7633debc8d,add sentinel support to pubsub layer,Chase Bennett,ch@se.gd,Chase Bennett,ch@se.gd,2021-06-26 10:18:48+01:00,-3600,2021-06-26 10:18:48+01:00,-3600,True,False,"['pubsub.py', 'test_pubsub_sentinel.py']",['084ddc431e7fd1212c8b10a172a2429d3c27f742'],3,140,143,2,0.7341772151898734,0.9240506329113924,0.9746835443037974
9ea85ff479dfb369a6112919f7d9dd923e3c412f,add optional redis event handlers,Chase Bennett,ch@se.gd,Chase Bennett,ch@se.gd,2021-06-27 12:15:57+01:00,-3600,2021-06-27 12:15:57+01:00,-3600,True,False,"['README.rst', 'pubsub.py']",['084ddc431e7fd1212c8b10a172a2429d3c27f742'],4,41,45,2,0.8,0.8,0.6
9f89bb62773dc5d825f2b08cda742b275c25606f,Updated Readme to mention PubSub layer.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton@noumenal.es,2021-07-01 12:43:53+02:00,-7200,2021-07-01 16:40:58+02:00,-7200,True,False,['README.rst'],['4012ef70025d007f199560b41e2d44e53b51c367'],7,13,20,1,,,
9ed5a74cccb48442051444598b78a2db7a56bdce,Added change notes for 3.3.0 release.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton@noumenal.es,2021-07-01 15:08:51+02:00,-7200,2021-07-01 16:40:58+02:00,-7200,True,False,"['CHANGELOG.txt', 'README.rst']",['9f89bb62773dc5d825f2b08cda742b275c25606f'],1,33,34,2,,,
9793d099beff719884854dcdd25709aee745ce97,Bumped version for 3.3.0 release.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton@noumenal.es,2021-07-01 15:13:34+02:00,-7200,2021-07-01 16:40:58+02:00,-7200,True,False,['__init__.py'],['9ed5a74cccb48442051444598b78a2db7a56bdce'],1,1,2,1,,,
49e419dce642b7aef12daa3fa8495f6b9beb1fbe,pubsub event loop layer proxy (#262),Chase Bennett,33002121+qeternity@users.noreply.github.com,GitHub,noreply@github.com,2021-07-25 18:24:16+01:00,-3600,2021-07-25 12:24:16-05:00,18000,True,False,"['pubsub.py', 'test_pubsub.py', 'test_pubsub_sentinel.py', 'test_sentinel.py']",['9793d099beff719884854dcdd25709aee745ce97'],3,135,138,4,1.0,1.0,0.8390804597701149
f5eef165017a702a1e53fe19a673036c0e337c95,"Fix #273 -- Use consistent hashing for PubSub (#274)

* Fix #273 -- Use consistent hashing for PubSub

* Update pubsub.py

* Add missing import

* Refactor hash function into utils module and add test

* Run black",Raphael Michel,mail@raphaelmichel.de,GitHub,noreply@github.com,2021-09-06 18:46:57+02:00,-7200,2021-09-06 11:46:57-05:00,18000,True,False,"['core.py', 'pubsub.py', 'utils.py', 'test_utils.py']",['49e419dce642b7aef12daa3fa8495f6b9beb1fbe'],15,43,58,4,1.0,1.0,0.3333333333333333
bb0fc90164991de8caf9402fe84813bf0276f1a3,Fixed intermittent ChannelFull test failures (#277),revoteon,revoteon@users.noreply.github.com,GitHub,noreply@github.com,2021-09-30 17:32:29+10:00,-36000,2021-09-30 09:32:29+02:00,-7200,True,False,"['test_core.py', 'test_sentinel.py']",['f5eef165017a702a1e53fe19a673036c0e337c95'],2,2,4,2,,,
1a4d5a2898be2bed2b78cd31fce87dc6a4c250b9,Added change notes for 3.3.1 release.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton.gibson@noumenal.es,2021-09-23 11:28:50+02:00,-7200,2021-09-30 16:11:14+02:00,-7200,True,False,['CHANGELOG.txt'],['bb0fc90164991de8caf9402fe84813bf0276f1a3'],0,12,12,1,,,
781228c0d8f9a7a7ce86046cfb6f2557924bb5be,Bumped version for 3.3.1 release.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton.gibson@noumenal.es,2021-09-23 11:29:06+02:00,-7200,2021-09-30 16:11:14+02:00,-7200,True,False,['__init__.py'],['1a4d5a2898be2bed2b78cd31fce87dc6a4c250b9'],1,1,2,1,,,
1132fccbaf924f705321dae69bb53ff0d13ac81d,"Add serialize and deserialize method to RedisPubSubChannelLayer (#281)

* Add serializer and deserialize method to RedisPubSubChannelLayer

* move serialization methods directly to RedisPubSubChannelLayer

* Pass a full reference of RedisPubSubChannelLayer to RedisPubSubLoopLayer instance

* Fix linter errors

* Fix linter errors (again)

Using the version of `black` to match the repo this time.

* Not specifying these parameters (since they are the defaults)

There are many _other_ parameters which are not specified. It's more clear this way to show we are using _all_ defaults.

Co-authored-by: Jakub Stawowy <jakub.stawowy@testrevolution.io>
Co-authored-by: Ryan Henning <ryan@masterai.ai>",Jakub Stawowy,Kub-AT@users.noreply.github.com,GitHub,noreply@github.com,2021-10-29 00:40:49+02:00,-7200,2021-10-28 17:40:49-05:00,18000,True,False,"['pubsub.py', 'test_core.py', 'test_pubsub.py', 'test_pubsub_sentinel.py', 'test_sentinel.py']",['781228c0d8f9a7a7ce86046cfb6f2557924bb5be'],7,134,141,5,0.6865671641791045,1.0,0.8955223880597015
5eeec34657cecfbafa47eacfd13ffa44b9a8d086,Add installation instructions to readme. (#282),Ellis Percival,github.com@failcode.co.uk,GitHub,noreply@github.com,2021-12-02 13:54:51+00:00,0,2021-12-02 14:54:51+01:00,-3600,True,False,['README.rst'],['1132fccbaf924f705321dae69bb53ff0d13ac81d'],0,11,11,1,,,
fe27f1a83a87bf61a9245188c8825ddfa30119fa,"Remove unnecessary : ( Colon ) (#286)

In line 37 and 50 there are :: ( two colons ) before the code-block 
Where it should be : ( One Colon )  to properly lint the code.

This pull request fixes this issue.",baseplate-admin,61817579+baseplate-admin@users.noreply.github.com,GitHub,noreply@github.com,2021-12-23 21:55:24+06:00,-21600,2021-12-23 09:55:24-06:00,21600,True,False,['README.rst'],['5eeec34657cecfbafa47eacfd13ffa44b9a8d086'],2,2,4,1,,,
a3333fd427b65376a0e3469492e80ddf25d2b4a7,Documented used Redis commands. (#291),Klaas van Schelven,klaas@vanschelven.com,GitHub,noreply@github.com,2022-02-14 16:07:12+01:00,-3600,2022-02-14 16:07:12+01:00,-3600,True,False,['README.rst'],['fe27f1a83a87bf61a9245188c8825ddfa30119fa'],0,12,12,1,,,
9821ab1a2f7e384ff68941d4ad719721533a9c2c,"Fix list of Redis commands used by `RedisPubSubChannelLayer` (#292)

Followup of https://github.com/django/channels_redis/pull/291 to manually fix the auto-generated list.",Ryan Henning,ryan@masterai.ai,GitHub,noreply@github.com,2022-02-16 11:55:54-06:00,21600,2022-02-16 11:55:54-06:00,21600,True,False,['README.rst'],['a3333fd427b65376a0e3469492e80ddf25d2b4a7'],2,1,3,1,,,
8e6afe1b2dbd8f59a8cc384a759640dbad85ed5b,"Fix iscoroutine check for pubsub proxied methods (#297)

* Fix iscoroutine check for pubsub proxied methods

Adjust the proxying approach in `RedisPubSubChannelLayer` to ensure the
proxied methods are properly marked as coroutines according to
`inspect.iscoroutinefunction`. This can be issue during testing when
trying to mock channel layer methods.

The underlying issue is a [Python bug][1] where partial methods are not
fully unwrapped to determine if they are coroutines. The workaround
simply moves the proxy wrapper to a top-level async function, tricking
`inspect.iscoroutinefunction` to correctly detecting the proxied async
methods.

[1]: https://bugs.python.org/issue38364

Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",Jameel Al-Aziz,247849+jalaziz@users.noreply.github.com,GitHub,noreply@github.com,2022-03-07 06:35:39-08:00,28800,2022-03-07 15:35:39+01:00,-3600,True,False,"['pubsub.py', 'test_pubsub.py']",['9821ab1a2f7e384ff68941d4ad719721533a9c2c'],8,18,26,2,,,
8dc1762f2bae428d3896293eb55dfd2199caede9,"Deprecate Python 3.6 support, add Python 3.10 (#301)

* Deprecate Python 3.6 support, add Python 3.10
* Deprecate Python 3.6 and remove code to support Python versions < 3.7.
* Add Python 3.10 to tox configuration.
* Updated README/CHANGELOG.

Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",Jameel Al-Aziz,247849+jalaziz@users.noreply.github.com,GitHub,noreply@github.com,2022-03-07 11:44:55-08:00,28800,2022-03-07 20:44:55+01:00,-3600,True,False,"['tests.yml', 'CHANGELOG.txt', 'README.rst', 'pubsub.py', 'setup.py', 'tox.ini']",['8e6afe1b2dbd8f59a8cc384a759640dbad85ed5b'],12,11,23,6,,,
92b64a92f246fe36dcd2587ff92812ad7dede254,"Fix workers support when using Redis PubSub layer (#298)

* Fix workers support when using Redis PubSub layer

The new Redis PubSub layer broke support for Channels workers. Add
support for workers by subscribing to non-owned channels instead of
throwing an exception.

Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",Jameel Al-Aziz,247849+jalaziz@users.noreply.github.com,GitHub,noreply@github.com,2022-03-08 03:21:11-08:00,28800,2022-03-08 12:21:11+01:00,-3600,True,False,"['pubsub.py', 'test_pubsub.py']",['8dc1762f2bae428d3896293eb55dfd2199caede9'],6,42,48,2,1.0,1.0,1.0
dda8dd5ed5a27b8f90ed0710c7a1bf739f850ecd,Added change notes for 3.4.0 release.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton.gibson@noumenal.es,2022-03-10 16:13:03+01:00,-3600,2022-03-10 16:13:03+01:00,-3600,True,False,['CHANGELOG.txt'],['92b64a92f246fe36dcd2587ff92812ad7dede254'],3,10,13,1,,,
bba93196d8fe5e5fbfc470350c1f3da168c56739,Bumped version for 3.4.0 release.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton.gibson@noumenal.es,2022-03-10 16:13:31+01:00,-3600,2022-03-10 16:13:31+01:00,-3600,True,False,['__init__.py'],['dda8dd5ed5a27b8f90ed0710c7a1bf739f850ecd'],1,1,2,1,,,
65a05285d512e32607829b45cba5b4093e6003a6,"Migrated from aioredis to redis-py (#296)

Co-authored-by: bbrowning918 <benbrowning918@gmail.com>",Peter Baumgartner,pete@lincolnloop.com,GitHub,noreply@github.com,2022-06-28 03:41:05-06:00,21600,2022-06-28 11:41:05+02:00,-7200,True,False,"['README.rst', 'core.py', 'pubsub.py', 'setup.cfg', 'setup.py', 'test_core.py', 'test_pubsub.py', 'test_sentinel.py']",['bba93196d8fe5e5fbfc470350c1f3da168c56739'],335,180,515,8,0.0,0.0,0.16129032258064516
52e240e7d59b12df498dcdb0b1fc165919c0f3d0,Bumped version and change notes for v4.0.0b1 release. (#311),Carlton Gibson,carlton.gibson@noumenal.es,GitHub,noreply@github.com,2022-06-28 11:55:55+02:00,-7200,2022-06-28 11:55:55+02:00,-7200,True,False,"['CHANGELOG.txt', '__init__.py']",['65a05285d512e32607829b45cba5b4093e6003a6'],1,9,10,2,,,
517546ffd76c97f5bc786ca12225f54bcf453fc8,"Removed obsolete code. (#314)

The following are obsolete:

- `channels_redis.core._wrap_close()` since 65a05285d512e32607829b45cba5b4093e6003a6.
- `channels_redis.core.UnsupportedRedis` since ff8c8e682fc08509bc2eaac7c51f5194b37b549d.
- `channels_redis.core.RedisChannelLayer._map_channel_to_connection()` since 9f05013d91c7a59b7f5515faceec5b604ab9af5a.",Nick Pope,nick@nickpope.me.uk,GitHub,noreply@github.com,2022-07-12 09:30:50+01:00,-3600,2022-07-12 10:30:50+02:00,-7200,True,False,['core.py'],['52e240e7d59b12df498dcdb0b1fc165919c0f3d0'],57,0,57,1,0.71875,0.0,0.875
d946ce2875b2a2efe2c4cbfb14107fd7d7a4a551,Added change notes for v3.4.1.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton.gibson@noumenal.es,2022-07-12 11:22:54+02:00,-7200,2022-07-12 11:22:54+02:00,-7200,True,False,['CHANGELOG.txt'],['517546ffd76c97f5bc786ca12225f54bcf453fc8'],0,6,6,1,,,
96de3745254c8faf99b276fb9512c1ecb4cb64cc,"Used testpaths for pytest configuration. (#320)

Specifying the `tests` dir in testpaths allows overriding at the
command line. Previously, as part of addopts it couldn't be removed.

For example:

pytest tests/test_pubsub.py

... will now pick up just that once file, rather than the whole
`tests` folder, and that file again.",Carlton Gibson,carlton.gibson@noumenal.es,GitHub,noreply@github.com,2022-07-21 15:25:00+02:00,-7200,2022-07-21 15:25:00+02:00,-7200,True,False,['setup.cfg'],['d946ce2875b2a2efe2c4cbfb14107fd7d7a4a551'],1,2,3,1,,,
ed3544ac67bf6eccb47d017e6218b07bf6a4910b,Removed async_generator test dependency. (#321),Carlton Gibson,carlton.gibson@noumenal.es,GitHub,noreply@github.com,2022-07-21 16:24:43+02:00,-7200,2022-07-21 16:24:43+02:00,-7200,True,False,"['setup.py', 'test_core.py', 'test_pubsub.py', 'test_pubsub_sentinel.py', 'test_sentinel.py']",['96de3745254c8faf99b276fb9512c1ecb4cb64cc'],21,7,28,5,,,
6d0c6c05c8b2654120069a83de3b1909f16bf77c,Updated pytest-asyncio dependency.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton@noumenal.es,2022-07-21 16:29:29+02:00,-7200,2022-07-21 16:45:20+02:00,-7200,True,False,"['setup.cfg', 'setup.py']",['ed3544ac67bf6eccb47d017e6218b07bf6a4910b'],1,2,3,2,,,
a8e51ba4bbaa36f472ac857c744324315795b239,"Fixed incorrect asyncio test marker warnings.

Refs #321 which did the same for the non-sentinel version.",Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton@noumenal.es,2022-07-21 16:37:26+02:00,-7200,2022-07-21 16:45:20+02:00,-7200,True,False,['test_pubsub_sentinel.py'],['6d0c6c05c8b2654120069a83de3b1909f16bf77c'],2,0,2,1,,,
313e2789ce436eaf547e99558f37969404fdc019,use get_running_loop,bbrowning918,benbrowning918@gmail.com,Carlton Gibson,carlton@noumenal.es,2022-07-09 13:56:34-06:00,21600,2022-08-04 14:44:47+02:00,-7200,True,False,['core.py'],['a8e51ba4bbaa36f472ac857c744324315795b239'],1,1,2,1,,,
c850fa9d9470c8f0940780a45cb1d47f6670ddce,add test for async_to_sync,bbrowning918,benbrowning918@gmail.com,Carlton Gibson,carlton@noumenal.es,2022-07-09 13:56:48-06:00,21600,2022-08-04 14:44:47+02:00,-7200,True,False,['test_core.py'],['313e2789ce436eaf547e99558f37969404fdc019'],0,14,14,1,1.0,1.0,1.0
2b65ceca918f29bbdf185587801b4830318e02e2,lazy pool creation for the current running loop,bbrowning918,benbrowning918@gmail.com,Carlton Gibson,carlton@noumenal.es,2022-07-12 21:44:50-06:00,21600,2022-08-04 14:44:47+02:00,-7200,True,False,['core.py'],['c850fa9d9470c8f0940780a45cb1d47f6670ddce'],20,29,49,1,1.0,1.0,0.8333333333333334
db5e8ff762862ea9bb274d9a12dfbd7f486ac8c5,missed a black run ;_;,bbrowning918,benbrowning918@gmail.com,Carlton Gibson,carlton@noumenal.es,2022-07-12 21:53:39-06:00,21600,2022-08-04 14:44:47+02:00,-7200,True,False,['test_core.py'],['2b65ceca918f29bbdf185587801b4830318e02e2'],3,7,10,1,1.0,1.0,1.0
c2c6bb847cb11c3801607f27362febe7e532c757,Updated Channels dependency specifier (#325),Dmytro Litvinov,me@dmytrolitvinov.com,GitHub,noreply@github.com,2022-09-02 10:18:51+03:00,-10800,2022-09-02 09:18:51+02:00,-7200,True,False,['setup.py'],['db5e8ff762862ea9bb274d9a12dfbd7f486ac8c5'],1,1,2,1,,,
3631538954a93de972587325f6833ff8035d50b1,Refactored PubSub shard connection. (#326),Chase Bennett,33002121+qeternity@users.noreply.github.com,GitHub,noreply@github.com,2022-09-08 18:59:25+01:00,-3600,2022-09-08 19:59:25+02:00,-7200,True,False,"['pubsub.py', 'test_pubsub.py', 'test_pubsub_sentinel.py']",['c2c6bb847cb11c3801607f27362febe7e532c757'],167,128,295,3,1.0,1.0,0.09523809523809523
70e31ec787ab0e6b031dced1fc33081a04cf07fa,Bumped version and change notes for v4.0.0b2 release.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton.gibson@noumenal.es,2022-09-08 20:02:41+02:00,-7200,2022-09-08 20:02:41+02:00,-7200,True,False,"['.gitignore', 'CHANGELOG.txt', '__init__.py']",['3631538954a93de972587325f6833ff8035d50b1'],2,3,5,3,,,
a993f3fc1ba9e52296fdd18199f6316af39e165b,Added support for connection sentinel_kwargs. (#318),Andrii Lahuta,13280256+andriilahuta@users.noreply.github.com,GitHub,noreply@github.com,2022-09-08 21:22:44+03:00,-10800,2022-09-08 20:22:44+02:00,-7200,True,False,"['tests.yml', 'core.py', 'pubsub.py', 'test_pubsub_sentinel.py', 'test_sentinel.py']",['70e31ec787ab0e6b031dced1fc33081a04cf07fa'],15,86,101,5,1.0,1.0,0.8333333333333334
77a301f389fa9e21e7c3f40252163e631eb4b34f,"Ensure PubSub layer closes connection pool before loop shutdown.

Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",Thiago Bellini Ribeiro,thiago@bellini.dev,Carlton Gibson,carlton@noumenal.es,2022-10-07 11:04:38+02:00,-7200,2022-10-07 11:11:39+02:00,-7200,True,False,"['pubsub.py', 'test_pubsub.py']",['a993f3fc1ba9e52296fdd18199f6316af39e165b'],1,19,20,2,1.0,1.0,1.0
95d87449c2b899c1cfdf8a10cfa1425e30127ef2,Bumped version and change notes for v4.0.0 release.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton.gibson@noumenal.es,2022-10-07 11:49:12+02:00,-7200,2022-10-07 11:49:12+02:00,-7200,True,False,"['CHANGELOG.txt', '__init__.py']",['77a301f389fa9e21e7c3f40252163e631eb4b34f'],5,12,17,2,,,
d663090059fd5b1ec97706fbcc18502225f365a7,Run tests against Python 3.11,Michael Käufl,django@c.michael-kaeufl.de,Carlton Gibson,carlton@noumenal.es,2022-10-27 15:13:23+02:00,-7200,2022-10-27 18:01:22+02:00,-7200,True,False,"['tests.yml', 'tox.ini']",['95d87449c2b899c1cfdf8a10cfa1425e30127ef2'],1,2,3,2,,,
29b22a9a78548cbb2f2a9492a36a217a8d025197,Makes group_discard a noop if channel not in group (#344),Nikhil Bhargava,993682+nbhargava@users.noreply.github.com,GitHub,noreply@github.com,2022-12-01 10:16:07-05:00,18000,2022-12-01 09:16:07-06:00,21600,True,False,"['pubsub.py', 'test_pubsub.py']",['d663090059fd5b1ec97706fbcc18502225f365a7'],4,13,17,2,1.0,1.0,1.0
a7094c58a15cbf6e621b2129253060fc80cfdfad,Adjusted CHANGELOG for v4.0 release. (#333),Klaas van Schelven,klaas@vanschelven.com,GitHub,noreply@github.com,2023-01-25 09:13:50+01:00,-3600,2023-01-25 09:13:50+01:00,-3600,True,False,['CHANGELOG.txt'],['29b22a9a78548cbb2f2a9492a36a217a8d025197'],2,4,6,1,,,
ffe356669b61b18e38995827ab56164ed447af85,"Clarified that README ref to Redis version is for Redis server. (#351)

Co-authored-by: Carlton Gibson <carlton@noumenal.es>",Mark Walker,theshow@gmail.com,GitHub,noreply@github.com,2023-03-01 13:01:32+00:00,0,2023-03-01 14:01:32+01:00,-3600,True,False,['README.rst'],['a7094c58a15cbf6e621b2129253060fc80cfdfad'],1,1,2,1,,,
89b29ad300704aa09ec9e2e31efad5eec11ec03f,"Pinned redis py to 4.3.5 (#349)

* tox tests longer than 10 minutes are likely hung so let github bail
* pin redis 4.3.5
* let the async_timeout occur
* Added change note.

---------

Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",Ben Browning,benbrowning918@gmail.com,GitHub,noreply@github.com,2023-03-09 04:57:34-06:00,21600,2023-03-09 11:57:34+01:00,-3600,True,False,"['tests.yml', 'CHANGELOG.txt', 'setup.py', 'test_pubsub.py', 'test_pubsub_sentinel.py']",['ffe356669b61b18e38995827ab56164ed447af85'],3,13,16,5,1.0,1.0,1.0
422d735235f50553ec7457be1eb24ee3213fa68d,"Refs #348 -- Marked problem test cases as xfail.

- test_receive_cancel failing with TypeError inside redis-py.
- test_message_expiry__group_send__one_channel_expires_message hanging
  indefinitely. Added pytest-timeout with global timeout of 10s.",Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton@noumenal.es,2023-03-28 10:39:23+02:00,-7200,2023-03-28 11:13:14+02:00,-7200,True,False,"['setup.cfg', 'setup.py', 'test_core.py', 'test_sentinel.py']",['89b29ad300704aa09ec9e2e31efad5eec11ec03f'],0,16,16,4,,,
dbf4f30177d0e10ea6eb8b14088981a42d225251,"Update redis-py dependency to >=4.5.3.

For https://github.com/redis/redis-py/releases/tag/v4.5.3",Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton@noumenal.es,2023-03-28 10:41:07+02:00,-7200,2023-03-28 11:13:14+02:00,-7200,True,False,['setup.py'],['422d735235f50553ec7457be1eb24ee3213fa68d'],1,1,2,1,,,
0c89a975951b252b52db70422027f99e2480e5ed,Assured pools are closed on loop close in core (#347),Devid,setti.davide89@gmail.com,GitHub,noreply@github.com,2023-03-28 11:30:35+02:00,-7200,2023-03-28 11:30:35+02:00,-7200,True,False,"['core.py', 'pubsub.py', 'utils.py']",['dbf4f30177d0e10ea6eb8b14088981a42d225251'],44,54,98,3,1.0,1.0,1.0
62e8fe2388db5e49452a7b8ba6bcfaf4f35155d3,Refactored Redis connection utilities to share between layers. (#352),Devid,setti.davide89@gmail.com,GitHub,noreply@github.com,2023-03-28 12:02:20+02:00,-7200,2023-03-28 12:02:20+02:00,-7200,True,False,"['core.py', 'pubsub.py', 'utils.py']",['0c89a975951b252b52db70422027f99e2480e5ed'],65,61,126,3,0.23076923076923078,0.0,0.38461538461538464
4bc3154083a625df42ddb898809727f9e7228791,"Fix prefix default in docs (#338)

This actually defaults to `asgi`, not `asgi:`",Nik Nyby,nikolas@gnu.org,GitHub,noreply@github.com,2023-03-28 06:05:40-04:00,14400,2023-03-28 12:05:40+02:00,-7200,True,False,['README.rst'],['62e8fe2388db5e49452a7b8ba6bcfaf4f35155d3'],1,1,2,1,,,
61247494f2bd6b923b5b75f55e79a4718f9cfa4e,Updated GHA workflow action versions. (#357),Carlton Gibson,carlton.gibson@noumenal.es,GitHub,noreply@github.com,2023-03-28 12:18:53+02:00,-7200,2023-03-28 12:18:53+02:00,-7200,True,False,['tests.yml'],['4bc3154083a625df42ddb898809727f9e7228791'],13,13,26,1,,,
093471f68f11da1dfa495a76305d1e96c3cda0ad,Refs #348 -- Skip PY311 tests until redis-py fixes compatibility. (#358),Carlton Gibson,carlton.gibson@noumenal.es,GitHub,noreply@github.com,2023-03-28 12:27:01+02:00,-7200,2023-03-28 12:27:01+02:00,-7200,True,False,['tests.yml'],['61247494f2bd6b923b5b75f55e79a4718f9cfa4e'],1,2,3,1,,,
8b4ed2d3b03a03dc792ee80142e891efabb5bbd6,Bumped version and change notes for v4.1.0 release.,Carlton Gibson,carlton.gibson@noumenal.es,Carlton Gibson,carlton.gibson@noumenal.es,2023-03-28 19:50:22+02:00,-7200,2023-03-28 19:54:32+02:00,-7200,True,False,"['CHANGELOG.txt', '__init__.py']",['093471f68f11da1dfa495a76305d1e96c3cda0ad'],5,18,23,2,,,
513f85901bee6ad2543abe0c9e113e73865218a0,"Reenabled Python 3.11 testing. (#362)

redis-py 4.5.4 was released fixing the issue with PY311.
Reverts 093471f68f11da1dfa495a76305d1e96c3cda0ad.",Carlton Gibson,carlton.gibson@noumenal.es,GitHub,noreply@github.com,2023-04-04 08:47:19+02:00,-7200,2023-04-04 08:47:19+02:00,-7200,True,False,['tests.yml'],['8b4ed2d3b03a03dc792ee80142e891efabb5bbd6'],2,1,3,1,,,
ba6dfcd633be7d505f739cc3c294853222350e48,Use normalized channels-redis PyPI package name (#363),johnthagen,johnthagen@users.noreply.github.com,GitHub,noreply@github.com,2023-04-08 16:25:44-04:00,14400,2023-04-08 22:25:44+02:00,-7200,True,False,['README.rst'],['513f85901bee6ad2543abe0c9e113e73865218a0'],3,3,6,1,,,
1e9b7387814f3c1dae5cab5034624e283f88b4bf,"use the stable docs for redis, and I hope this is a good example (#370)

Co-authored-by: benbrowning <ben@skillshark.com>",Ben Browning,benbrowning918@gmail.com,GitHub,noreply@github.com,2023-09-04 05:57:39-06:00,21600,2023-09-04 13:57:39+02:00,-7200,True,False,['README.rst'],['ba6dfcd633be7d505f739cc3c294853222350e48'],1,13,14,1,,,
7c4b4b64b7bc002826b714e0f3319b08f66226b8,Adjusted README hosts example.,Carlton Gibson,carlton@noumenal.es,GitHub,noreply@github.com,2023-09-08 11:37:39+02:00,-7200,2023-09-08 11:37:39+02:00,-7200,True,False,['README.rst'],['1e9b7387814f3c1dae5cab5034624e283f88b4bf'],7,9,16,1,,,
78237594af8d0588b5dda0bfac81f5ce0caf48bb,test: Add python 3.12 and drop 3.7 (#374),Mark Walker,mark@marksweb.co.uk,GitHub,noreply@github.com,2023-11-23 19:24:52+00:00,0,2023-11-23 20:24:52+01:00,-3600,True,False,"['tests.yml', 'tox.ini']",['7c4b4b64b7bc002826b714e0f3319b08f66226b8'],2,2,4,2,,,
66187aa3d96b11bc67a93d5f1cdb2c54f4717bb2,chore: Cleanup refs to python 3.7 (#375),Mark Walker,mark@marksweb.co.uk,GitHub,noreply@github.com,2023-11-23 19:46:59+00:00,0,2023-11-23 20:46:59+01:00,-3600,True,False,"['README.rst', 'setup.py']",['78237594af8d0588b5dda0bfac81f5ce0caf48bb'],2,2,4,2,,,
6c98134e2361476d869c7d7532affa6c453b1122,Added redis-py and Channels versions to test matrix (#377),Devid,13779643+sevdog@users.noreply.github.com,GitHub,noreply@github.com,2024-01-10 16:49:20+01:00,-3600,2024-01-10 16:49:20+01:00,-3600,True,False,"['tests.yml', 'setup.py', 'tox.ini']",['66187aa3d96b11bc67a93d5f1cdb2c54f4717bb2'],4,12,16,3,,,
dad0b133348ebb6407d1112925d214885463570c,Avoid redis 5.x deprecation warning when closing connection (#376),Devid,13779643+sevdog@users.noreply.github.com,GitHub,noreply@github.com,2024-01-12 10:17:24+01:00,-3600,2024-01-12 10:17:24+01:00,-3600,True,False,"['core.py', 'pubsub.py', 'utils.py', 'test_pubsub.py', 'test_pubsub_sentinel.py']",['6c98134e2361476d869c7d7532affa6c453b1122'],8,32,40,5,1.0,1.0,1.0
594831714df69657af75cac4fafecb0d6812d6dc,Updated change notes and readme for 4.2 release. (#378),Carlton Gibson,carlton.gibson@noumenal.es,GitHub,noreply@github.com,2024-01-12 15:24:17+01:00,-3600,2024-01-12 15:24:17+01:00,-3600,True,False,"['CHANGELOG.txt', 'README.rst', '__init__.py']",['dad0b133348ebb6407d1112925d214885463570c'],2,19,21,3,,,
