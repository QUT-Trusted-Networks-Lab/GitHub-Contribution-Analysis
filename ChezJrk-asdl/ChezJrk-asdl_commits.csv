Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
211733182fbce045e4aede6c267f93ac9d3cf20f,Create README.md,gilbo,gilbert@gilbertbernstein.com,GitHub,noreply@github.com,2020-05-07 13:35:59-07:00,25200,2020-05-07 13:35:59-07:00,25200,True,False,['README.md'],[],0,3,3,1,,,
cc333c81c200c1b6a58a8f6b15cfca897556120b,adding seed files,gilbo,gilbert@gilbertbernstein.com,gilbo,gilbert@gilbertbernstein.com,2020-05-07 13:38:17-07:00,25200,2020-05-07 13:38:17-07:00,25200,True,False,"['.gitignore', 'How-to Represent IRs.ipynb', 'Memoization of IRs.ipynb', 'adt.py']",['211733182fbce045e4aede6c267f93ac9d3cf20f'],0,1422,1422,4,0.5661375661375662,0.671957671957672,0.708994708994709
2b93a6a7eae21c157093533fd1071274be6a544c,readme link added,gilbo,gilbert@gilbertbernstein.com,gilbo,gilbert@gilbertbernstein.com,2020-05-07 13:40:34-07:00,25200,2020-05-07 13:40:34-07:00,25200,True,False,['README.md'],['cc333c81c200c1b6a58a8f6b15cfca897556120b'],0,2,2,1,,,
b9e1830d367dea196bb3748c0d2d2b95a343bb89,Update README.md,gilbo,gilbert@gilbertbernstein.com,GitHub,noreply@github.com,2020-05-07 13:41:13-07:00,25200,2020-05-07 13:41:13-07:00,25200,True,False,['README.md'],['2b93a6a7eae21c157093533fd1071274be6a544c'],1,1,2,1,,,
cf09adb037d3ec687d003651f06cf90a66921353,added pip requirements,gilbo,gilbert@gilbertbernstein.com,gilbo,gilbert@gilbertbernstein.com,2020-05-07 13:46:12-07:00,25200,2020-05-07 13:46:12-07:00,25200,True,False,"['.gitignore', 'requirements.txt']",['2b93a6a7eae21c157093533fd1071274be6a544c'],0,2,2,2,,,
c75f63e17c13e404dc29fbea674cf3817b286c91,Fix typo in memo docstring,Jonathan Ragan-Kelley,jrk@csail.mit.edu,GitHub,noreply@github.com,2020-06-19 12:22:36-04:00,14400,2020-06-19 12:22:36-04:00,14400,True,False,['adt.py'],['5d604bf5b5b765e85a8ea0883603e733c211e1e6'],1,1,2,1,,,
daf502af6b14022559dbb866ce6329cfd11d2619,Update README (todos),Jonathan Ragan-Kelley,jrk@mit.edu,Jonathan Ragan-Kelley,jrk@mit.edu,2020-07-17 14:25:48-04:00,14400,2020-07-17 14:25:48-04:00,14400,True,False,['README.md'],['c75f63e17c13e404dc29fbea674cf3817b286c91'],3,6,9,1,,,
3fb688b1f63c050bcbcbb1feefc80f8eca85e6fe,Ignores,Jonathan Ragan-Kelley,jrk@mit.edu,Jonathan Ragan-Kelley,jrk@mit.edu,2020-07-17 14:26:18-04:00,14400,2020-07-17 14:26:18-04:00,14400,True,False,['.gitignore'],['daf502af6b14022559dbb866ce6329cfd11d2619'],3,2,5,1,,,
5a466efb36b2b0c7ce5e34f889b6293a1ddc85a8,TODOs,Jonathan Ragan-Kelley,jrk@mit.edu,Jonathan Ragan-Kelley,jrk@mit.edu,2020-07-17 14:40:51-04:00,14400,2020-07-17 14:40:51-04:00,14400,True,False,['README.md'],['3fb688b1f63c050bcbcbb1feefc80f8eca85e6fe'],0,1,1,1,,,
f4a3a6f297c9041218d8747dfaa2256b1f9b47f0,Mild tweaks to base notebook,Jonathan Ragan-Kelley,jrk@mit.edu,Jonathan Ragan-Kelley,jrk@mit.edu,2020-07-17 14:40:59-04:00,14400,2020-07-17 14:40:59-04:00,14400,True,False,['How-to Represent IRs.ipynb'],['5a466efb36b2b0c7ce5e34f889b6293a1ddc85a8'],19,59,78,1,,,
1469a1e43bdceed4ae2038ef1d9b8a0e74c8ccca,Add __eq__ and __hash__ functions to generators,Jonathan Ragan-Kelley,jrk@mit.edu,Jonathan Ragan-Kelley,jrk@mit.edu,2020-07-17 14:43:05-04:00,14400,2020-07-17 14:43:05-04:00,14400,True,False,['adt.py'],['f4a3a6f297c9041218d8747dfaa2256b1f9b47f0'],1,33,34,1,0.9230769230769231,1.0,0.9230769230769231
b62c2c012cab82b9fb762ef7cbfe41dfe574b83f,Whitespace cleanup,Jonathan Ragan-Kelley,jrk@mit.edu,Jonathan Ragan-Kelley,jrk@mit.edu,2020-07-17 14:43:12-04:00,14400,2020-07-17 14:43:12-04:00,14400,True,False,['adt.py'],['1469a1e43bdceed4ae2038ef1d9b8a0e74c8ccca'],3,0,3,1,,,
c67d17eac0a48a03a67cbf3fe6efac293e070616,Initial stab: register generated modules,Jonathan Ragan-Kelley,jrk@mit.edu,Jonathan Ragan-Kelley,jrk@mit.edu,2020-07-17 14:44:01-04:00,14400,2020-07-17 14:44:01-04:00,14400,True,False,['adt.py'],['b62c2c012cab82b9fb762ef7cbfe41dfe574b83f'],0,3,3,1,0.0,1.0,1.0
ed4e595c41468fb62193bb34a6a39b3d6a254e0b,Make into Python package,Jonathan Ragan-Kelley,jrk@mit.edu,Jonathan Ragan-Kelley,jrk@mit.edu,2021-01-05 12:04:51-05:00,18000,2021-01-05 12:04:51-05:00,18000,True,False,"['README.md', 'How-to Represent IRs.ipynb', 'Memoization of IRs.ipynb', 'requirements.txt', 'setup.py', 'adt.py']",['c67d17eac0a48a03a67cbf3fe6efac293e070616'],3,114,117,6,,,
81fcfdc40bc0533a6598e9a1fc4f3b5cda4bf0e6,Todo,Jonathan Ragan-Kelley,jrk@mit.edu,Jonathan Ragan-Kelley,jrk@mit.edu,2021-01-05 12:05:29-05:00,18000,2021-01-05 12:05:29-05:00,18000,True,False,['README.md'],['ed4e595c41468fb62193bb34a6a39b3d6a254e0b'],0,1,1,1,,,
d5fa9efd0d23f855bae9787156d61a59c8b6b803,Code cleanup. Un-nest adt module,Alex Reinking,alex.reinking@gmail.com,Alex Reinking,alex.reinking@gmail.com,2021-10-11 22:05:25-07:00,25200,2021-10-11 22:06:24-07:00,25200,True,False,"['__init__.py', 'adt.py']",['81fcfdc40bc0533a6598e9a1fc4f3b5cda4bf0e6'],136,164,300,2,0.4444444444444444,0.7777777777777778,0.6666666666666666
66ea0f08d3d23797b5665d4821e10abd27a7d656,Ignore local .egg-info noise,Alex Reinking,alex.reinking@gmail.com,Alex Reinking,alex.reinking@gmail.com,2021-10-12 15:52:45-07:00,25200,2021-10-12 15:52:45-07:00,25200,True,False,['.gitignore'],['d5fa9efd0d23f855bae9787156d61a59c8b6b803'],0,1,1,1,,,
87b0254b81baaab78ed732465f5776b35da0a8ee,"Big update (#2)

* Use newer setuptools config files

* Drop notebooks

* Update README.md

* Add requirements.txt

* Auto-format sources

* Add test of observable properties of real grammar.

* Test memoization

* A bit more code cleanup

* Use `is` for type comparison

* Fix nocover comments.

* tickle GHA

* Don't filter for now

* Quote python versions

* Rename module to asdl_adt. Fix tox.

* Drop windows because GHA is buggy

* Enable codecov.io",Alex Reinking,alex.reinking@gmail.com,GitHub,noreply@github.com,2022-02-10 16:40:13-08:00,28800,2022-02-10 16:40:13-08:00,28800,True,False,"['ci.yml', 'README.md', 'How-to Represent IRs.ipynb', 'Memoization of IRs.ipynb', 'requirements.txt', 'setup.cfg', 'setup.py', '__init__.py', '__init__.py', 'adt.py', 'test_memoization.py', 'test_ueq_grammar.py']",['66ea0f08d3d23797b5665d4821e10abd27a7d656'],1398,462,1860,12,0.4634146341463415,0.9207317073170732,1.0
5ff6f0be37d9c962887481ddb23d654c7882f59c,"Add __slots__ and __match_args__ to generated classes. (#3)

* Add __slots__ and __match_args__ to generated classes.

* Fix _public_names for __slots__",Alex Reinking,alex.reinking@gmail.com,GitHub,noreply@github.com,2022-02-10 16:54:47-08:00,28800,2022-02-10 16:54:47-08:00,28800,True,False,"['adt.py', 'test_ueq_grammar.py']",['87b0254b81baaab78ed732465f5776b35da0a8ee'],1,8,9,2,1.0,1.0,0.6
9b9706f1eab4b516354754a434cc1ff1799d6c7f,"Major rewrite using standard code quality tools (#4)

* Start adding code quality tools.

- Black
- flake8
- pylint

* Appease flake8

* Appease pylint (partially)

* Appease pylint (partially)

* Restrict CI to PRs and master

* Add docstring to __init__.py

* Add docstrings to tests.

* Improve variable names

* Make sure pylint runs on everything

* Simplify memo implementation

* Refactor ADT implementation to use attrs

* Add test cases for immutability and hashing

* Add failing test for memoization

* Add docstrings and respond to linter.

* Fix one memoization bug.

* Add failing test for kwargs

* A bit of refactoring and passing the test case.

* Refactor function generation code.

* Compress base type generation code.

* Improve immutability test

* Remove unused kwargs from _make_class

* Inline _make_base_type

* Rename some functions for brevity.

* Make _init_fn take an OrderedDict again.

* Drop unused _no_init

* Add some validator tests, fix bugs

* Appease pylint, at last.

* Restore python 3.8 support?

* Restore python 3.8 support?

* Remove unused import.

* Remove useless staticmethod() wrapper.

* Fix python 3.8, for real

* Add coverage hint",Alex Reinking,alex.reinking@gmail.com,GitHub,noreply@github.com,2022-02-12 23:35:57-08:00,28800,2022-02-12 23:35:57-08:00,28800,True,False,"['.flake8', 'ci.yml', '.gitignore', 'requirements.txt', 'setup.cfg', 'setup.py', '__init__.py', 'adt.py', 'conftest.py', 'test_attributes.py', 'test_immutability.py', 'test_memoization.py', 'test_ueq_grammar.py', 'test_update.py', 'test_validators.py']",['5ff6f0be37d9c962887481ddb23d654c7882f59c'],431,673,1104,15,1.0,1.0,0.0
2a97f3f4ad980d984341073a6cfda1fa59591e57,"Extend validator functionality; add tests. (#5)

* Extend validator functionality; add tests.

* Appease linter & formatter.

* Restore Python 3.8 compatibiity.

* Fix tests.",Alex Reinking,alex.reinking@gmail.com,GitHub,noreply@github.com,2022-02-13 14:20:18-08:00,28800,2022-02-13 14:20:18-08:00,28800,True,False,"['adt.py', 'validators.py', 'test_ueq_grammar.py', 'test_validators.py']",['9b9706f1eab4b516354754a434cc1ff1799d6c7f'],26,260,286,4,0.8211382113821138,1.0,0.943089430894309
e4f3c73f2faa229715c3fe4a933510bccc7df310,"Add pre-commit hooks, update README.md (#6)",Alex Reinking,alex.reinking@gmail.com,GitHub,noreply@github.com,2022-02-13 15:02:10-08:00,28800,2022-02-13 15:02:10-08:00,28800,True,False,"['.pre-commit-config.yaml', 'README.md', 'requirements.txt']",['2a97f3f4ad980d984341073a6cfda1fa59591e57'],3,66,69,3,,,
e0bf0ca5b09abb2c94084eacd568b3e6c3939d9a,"Bugfixes for SYSTL, module caching (#7)

* Fix optional-None bug

* Register module globally.

* fix up tests for module caching

* Move module caching higher up.",Alex Reinking,alex.reinking@gmail.com,GitHub,noreply@github.com,2022-02-14 00:19:26-08:00,28800,2022-02-14 00:19:26-08:00,28800,True,False,"['adt.py', 'conftest.py', 'test_validators.py']",['e4f3c73f2faa229715c3fe4a933510bccc7df310'],12,25,37,3,0.5555555555555556,1.0,0.5555555555555556
7bbfa403b05d0b8bb32f03c287f7f00c1f2e031d,"Add PyPI packaging (#8)

* Update package info for PyPI

* Add CI flows for packaging

* Update tox settings for pyproject.toml

* Don't upload to Test PyPI",Alex Reinking,alex.reinking@gmail.com,GitHub,noreply@github.com,2022-02-14 11:08:45-08:00,28800,2022-02-14 11:08:45-08:00,28800,True,False,"['ci.yml', 'publish.yml', 'pyproject.toml', 'setup.cfg', 'setup.py']",['e0bf0ca5b09abb2c94084eacd568b3e6c3939d9a'],10,47,57,5,,,
5838ad857dd7ec2317d8701354ca1d022f087ff5,"Upgrade dependencies (#9)

Also fix/suppress new pylint warnings",Alex Reinking,alex_reinking@berkeley.edu,GitHub,noreply@github.com,2022-11-07 16:07:21-08:00,28800,2022-11-07 16:07:21-08:00,28800,True,False,"['ci.yml', 'requirements.txt', 'setup.cfg', 'adt.py']",['7bbfa403b05d0b8bb32f03c287f7f00c1f2e031d'],17,19,36,4,,,
5c29b7a93457aef1c39f9ee859b7138adba51999,"Add mixin types feature to ADT (#10)

Now, by specifying mixin_types={'prod': cls} one can inject an additional
base class to any production `prod`. This enables users to attach methods
to the generated classes. It might also be useful to static type checkers
by setting a base type to be one of Python 3.8's ""Protocol"" types.",Alex Reinking,alex_reinking@berkeley.edu,GitHub,noreply@github.com,2022-11-07 16:40:39-08:00,28800,2022-11-07 16:40:39-08:00,28800,True,False,"['adt.py', 'test_mixins.py', 'test_module_caching.py', 'test_ueq_grammar.py']",['5838ad857dd7ec2317d8701354ca1d022f087ff5'],5,75,80,4,0.35294117647058826,1.0,0.7647058823529411
eb294e42335eaa678d7eacd71da3894861bfa020,Bump version to 0.2.0 (#11),Alex Reinking,alex_reinking@berkeley.edu,GitHub,noreply@github.com,2022-11-07 16:44:46-08:00,28800,2022-11-07 16:44:46-08:00,28800,True,False,['__init__.py'],['5c29b7a93457aef1c39f9ee859b7138adba51999'],1,1,2,1,,,
