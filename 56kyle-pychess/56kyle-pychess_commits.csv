Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
bb6f24f823bf89b4cb3e178c034ce137820984e8,Initial commit,kyle,oliverke@mail.uc.edu,kyle,oliverke@mail.uc.edu,2022-08-14 07:04:37-04:00,14400,2022-08-14 07:04:37-04:00,14400,True,False,"['.coverage', 'README.md', '__init__.py', '__init__.py', 'base.py', 'standard.py', 'constants.py', 'decorators.py', '__init__.py', 'base.py', 'standard.py', '__init__.py', 'move.py', '__init__.py', 'base.py', 'pawn.py', 'poetry.lock', 'pyproject.toml', '__init__.py', 'conftest.py', '__init__.py', 'test_base.py', 'test_standard.py', 'test_decorators.py', '__init__.py', 'test_base.py', 'test_standard.py', '__init__.py', 'test_move.py', '__init__.py', 'test_base.py', 'test_pawn.py']",[],0,475,475,32,1.0,1.0,0.7714285714285715
8b55fcde677be9080f97392455b5d09df3039b93,removes callback decorators and adds in a piece color enum,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-17 13:46:28-04:00,14400,2022-08-17 13:46:28-04:00,14400,True,False,"['.coverage', 'color.py', 'decorators.py', 'base.py', 'standard.py', 'base.py', 'poetry.lock', 'test_color.py', 'test_decorators.py', 'test_base.py', 'test_standard.py', 'test_base.py', 'test_pawn.py']",['bb6f24f823bf89b4cb3e178c034ce137820984e8'],60,44,104,13,0.0,0.0,0.2727272727272727
265202600175c3c7eb9996debd3557f6fafd34bf,adds starting piece to recorded moves,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-17 13:54:19-04:00,14400,2022-08-17 13:54:19-04:00,14400,True,False,['move.py'],['8b55fcde677be9080f97392455b5d09df3039b93'],0,1,1,1,,,
0ccd79729f5c96c5f33e14812b03138eecb98dce,adds remaining pieces and returns tests to 100% coverage,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-17 15:14:44-04:00,14400,2022-08-17 15:14:44-04:00,14400,True,False,"['.coverage', 'base.py', 'standard.py', 'base.py', 'standard.py', 'move.py', '__init__.py', 'base.py', 'bishop.py', 'king.py', 'knight.py', 'queen.py', 'rook.py', 'conftest.py', 'test_base.py', 'test_standard.py', 'test_base.py', 'test_standard.py', 'test_move.py', 'test_bishop.py', 'test_king.py', 'test_knight.py', 'test_queen.py', 'test_rook.py']",['265202600175c3c7eb9996debd3557f6fafd34bf'],29,235,264,24,1.0,1.0,0.8666666666666667
966ac52dd0b22e2935cd379383654586a5d2e95b,Adds needed functions for getting all pieces from the boards and comparing them,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-18 11:04:08-04:00,14400,2022-08-18 11:04:08-04:00,14400,True,False,"['.coverage', 'standard.py', 'base.py', 'standard.py', 'move.py', '__init__.py', 'base.py', 'base.py', 'test_standard.py', 'test_base.py', 'test_standard.py', '__init__.py', 'test_base.py', 'test_base.py']",['0ccd79729f5c96c5f33e14812b03138eecb98dce'],18,146,164,14,1.0,1.0,0.9315068493150684
8a612556600aed51a466b6fa6eee4a240792fa02,Adds piece value data and some more tests,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-18 15:53:49-04:00,14400,2022-08-18 15:53:49-04:00,14400,True,False,"['.coverage', 'move.py', 'base.py', 'bishop.py', 'king.py', 'knight.py', 'pawn.py', 'queen.py', 'rook.py', 'conftest.py', 'test_base.py']",['966ac52dd0b22e2935cd379383654586a5d2e95b'],13,26,39,11,1.0,1.0,1.0
93675798840e5e442cc1309ced2cee37ac1e37a8,Adds notation,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-20 02:45:30-04:00,14400,2022-08-20 02:45:30-04:00,14400,True,False,"['.coverage', 'base.py', 'standard.py', 'base.py', '__init__.py', 'base.py', 'descriptive.py', 'fide.py', 'conftest.py', 'test_base.py', 'test_standard.py', 'test_base.py', 'test_fide.py']",['8a612556600aed51a466b6fa6eee4a240792fa02'],14,160,174,13,1.0,1.0,0.9215686274509803
d81845479c023e6a21318d1c6874a0d51bb43d29,Removes untested portion of fide notation and returns code to 100% coverage,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-20 02:47:48-04:00,14400,2022-08-20 02:47:48-04:00,14400,True,False,"['.coverage', 'fide.py', 'test_fide.py']",['93675798840e5e442cc1309ced2cee37ac1e37a8'],5,3,8,3,0.0,0.0,0.0
8f1876dda54cbc6b719a67d3f72d3bb6a3a05c24,Removes unneeded methods from chess.base.ChessPiece,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-20 03:13:50-04:00,14400,2022-08-20 03:13:50-04:00,14400,True,False,"['.coverage', 'base.py', 'test_base.py']",['d81845479c023e6a21318d1c6874a0d51bb43d29'],68,0,68,3,0.0,0.0,0.0
4ec2059e2530957c7087019de01fd83dd87cab44,Adds algebraic notation for FIDE to inherit from,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-20 20:33:13-04:00,14400,2022-08-20 20:33:13-04:00,14400,True,False,"['.coverage', '__init__.py', 'algebraic.py', 'base.py', 'descriptive.py', 'fide.py', 'base.py', 'test_algebraic.py', 'test_base.py']",['8f1876dda54cbc6b719a67d3f72d3bb6a3a05c24'],11,47,58,9,1.0,1.0,0.8947368421052632
47d08a340a5cb7398c627ac49c0b30b42006b83f,Converted piece into a frozen dataclass,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-21 15:04:36-04:00,14400,2022-08-21 15:04:36-04:00,14400,True,False,"['.coverage', 'standard.py', 'piece.py', '__init__.py', 'base.py', 'bishop.py', 'king.py', 'knight.py', 'pawn.py', 'queen.py', 'rook.py', 'test_base.py', 'test_standard.py', 'test_base.py', 'test_standard.py', 'test_move.py', '__init__.py', 'test_base.py', 'test_bishop.py', 'test_king.py', 'test_knight.py', 'test_pawn.py', 'test_queen.py', 'test_rook.py']",['4ec2059e2530957c7087019de01fd83dd87cab44'],229,57,286,24,0.0,0.0,0.061224489795918366
f9ff2ebaf948b7f75831bf764bbfa8f91bcd40f1,Grouped up some piece info into child dataclasses,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-22 15:02:06-04:00,14400,2022-08-22 15:02:06-04:00,14400,True,False,"['.coverage', 'piece.py']",['47d08a340a5cb7398c627ac49c0b30b42006b83f'],13,49,62,2,,,
74febcae96d845433e278ff0db79c64e66e87e90,Hides board's array behind accessor methods,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-23 14:58:12-04:00,14400,2022-08-23 14:58:12-04:00,14400,True,False,"['.coverage', 'base.py', 'standard.py', 'standard.py', 'conftest.py', 'test_base.py', 'test_standard.py', 'test_standard.py']",['f9ff2ebaf948b7f75831bf764bbfa8f91bcd40f1'],21,54,75,8,1.0,1.0,0.9090909090909091
8100a374070d1330d1c56a8ccd13bfaf388b6130,Moves some game methods from standard to base,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-24 14:07:41-04:00,14400,2022-08-24 14:07:41-04:00,14400,True,False,"['.coverage', 'base.py', 'base.py', 'standard.py', 'test_base.py', 'test_standard.py']",['74febcae96d845433e278ff0db79c64e66e87e90'],19,10,29,6,0.0,0.0,0.4444444444444444
14c1ea66124c03bfada49ab527346da817736046,"Converts most of the numpy based index entries (I.E. foo(row=0, column=3)) into Square entries (I.E. foo(Square(row=0, column=3)) so that refactoring is easier",Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-24 14:32:50-04:00,14400,2022-08-24 14:32:50-04:00,14400,True,False,"['.coverage', 'base.py', 'base.py', 'square.py', 'conftest.py', 'test_base.py', 'test_base.py', 'test_square.py']",['8100a374070d1330d1c56a8ccd13bfaf388b6130'],24,64,88,8,1.0,1.0,1.0
12dffe36fff902f9c19ed05bc11a4ad504fc8ffa,Removes make move so that piece can be refactored to have a dynamic unit class that inherits from it,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-24 18:04:48-04:00,14400,2022-08-24 18:04:48-04:00,14400,True,False,"['.coverage', 'base.py', 'base.py', 'standard.py', 'move.py', 'conftest.py', 'test_base.py', 'test_standard.py', 'test_move.py']",['14c1ea66124c03bfada49ab527346da817736046'],31,23,54,9,0.0,0.0,0.4444444444444444
2c040b718d52526a44c528ad260805c2a065b5cd,Removes standard board and moves functionality to base board,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-24 22:24:07-04:00,14400,2022-08-24 22:24:07-04:00,14400,True,False,"['.coverage', '__init__.py', 'base.py', 'standard.py', 'conftest.py', 'test_base.py', 'test_standard.py']",['12dffe36fff902f9c19ed05bc11a4ad504fc8ffa'],75,55,130,7,0.0,0.0,0.2727272727272727
e2c1833b2f6047234e253c9ef0122bd9f57059bb,Refactors colored pieces into their own factories that will eventually contain movement information that is dependent on piece color,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-25 11:45:47-04:00,14400,2022-08-25 11:45:47-04:00,14400,True,False,"['.coverage', 'base.py', 'base.py', 'piece.py', '__init__.py', 'base.py', 'bishop.py', 'king.py', 'knight.py', 'pawn.py', 'queen.py', 'rook.py', 'test_base.py', 'test_base.py', 'test_move.py', '__init__.py', 'test_base.py', 'test_bishop.py', 'test_king.py', 'test_knight.py', 'test_pawn.py', 'test_queen.py', 'test_rook.py']",['2c040b718d52526a44c528ad260805c2a065b5cd'],60,165,225,23,1.0,1.0,0.0
c3fee5d89d19602b4e5c9f769951ce565be52b81,Simplified the definitions of colored units,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-25 12:03:51-04:00,14400,2022-08-25 12:03:51-04:00,14400,True,False,"['.coverage', 'bishop.py', 'king.py', 'knight.py', 'pawn.py', 'queen.py', 'rook.py', 'test_bishop.py']",['e2c1833b2f6047234e253c9ef0122bd9f57059bb'],23,22,45,8,0.0,0.0,1.0
ac6e7366cd09110c748e2e75bc317a9d2f0725d8,Adds unit data and adds some test structuring for the abstract class structure being used now,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-25 16:50:22-04:00,14400,2022-08-25 16:50:22-04:00,14400,True,False,"['.coverage', 'offset.py', 'piece.py', 'base.py', 'bishop.py', 'king.py', 'knight.py', 'pawn.py', 'queen.py', 'rook.py', 'test_offset.py', 'test_base.py', 'test_bishop.py', 'test_king.py', 'test_knight.py', 'test_pawn.py', 'test_queen.py', 'test_rook.py']",['c3fee5d89d19602b4e5c9f769951ce565be52b81'],7,192,199,18,1.0,1.0,1.0
16570b2ba7937e42a5aa7c8cf853b64fea9a1f71,Adds in piece movements as constants in their respective unit files,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-26 03:16:00-04:00,14400,2022-08-26 03:16:00-04:00,14400,True,False,"['.coverage', '.gitignore', 'profiles_settings.xml', 'markdown.xml', 'misc.xml', 'modules.xml', 'pychess.iml', 'vcs.xml', 'movement.py', 'offset.py', '__init__.py', 'base.py', 'bishop.py', 'king.py', 'knight.py', 'pawn.py', 'queen.py', 'rook.py', 'test_movement.py', 'test_offset.py', 'conftest.py', 'test_base.py', 'test_bishop.py', 'test_king.py']",['ac6e7366cd09110c748e2e75bc317a9d2f0725d8'],72,348,420,24,1.0,1.0,1.0
5070a8e28d7a902b92302f1aa6e6e1a014f7bf38,Adds allowed_movement_types to Movement to distinguish between movements that can only capture/move and movements that can do both,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-26 13:27:56-04:00,14400,2022-08-26 13:27:56-04:00,14400,True,False,"['.coverage', 'movement.py', 'king.py', 'pawn.py', 'test_movement.py']",['16570b2ba7937e42a5aa7c8cf853b64fea9a1f71'],11,37,48,5,1.0,1.0,1.0
bb9d8038a1983082f8b83a646c01112a777b40d8,fixes test,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-26 13:28:43-04:00,14400,2022-08-26 13:28:43-04:00,14400,True,False,"['.coverage', 'test_movement.py']",['5070a8e28d7a902b92302f1aa6e6e1a014f7bf38'],3,2,5,2,0.0,0.0,0.0
c6c47899436e61625edec6050a9ea68a13f7de47,Cleans up imports and adds small methods to Offset and Square. Adds a method to Board to limit a Movement to the scope of the board,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-26 15:51:23-04:00,14400,2022-08-26 15:51:23-04:00,14400,True,False,"['.coverage', 'base.py', 'base.py', 'movement.py', 'offset.py', 'square.py', 'bishop.py', 'king.py', 'knight.py', 'pawn.py', 'queen.py', 'rook.py', 'test_base.py', 'test_base.py', 'test_movement.py', 'test_offset.py']",['bb9d8038a1983082f8b83a646c01112a777b40d8'],99,195,294,16,1.0,1.0,0.9
3f9d830eabda651d79d20d8fcb29e3801a260eed,Adds method to game for fitting a Movement to the boards pieces,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 01:46:07-04:00,14400,2022-08-27 01:46:07-04:00,14400,True,False,"['.coverage', 'base.py', 'base.py', 'test_base.py', 'test_base.py']",['c6c47899436e61625edec6050a9ea68a13f7de47'],16,57,73,5,1.0,1.0,0.7291666666666666
35862986734ec1d5e7422103570ee9cbd3c92204,Removes pointless standard version of game and refactors tests/fixtures,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 14:46:14-04:00,14400,2022-08-27 14:46:14-04:00,14400,True,False,"['.coverage', '__init__.py', 'standard.py', 'conftest.py', 'test_base.py', 'test_base.py', 'test_standard.py']",['3f9d830eabda651d79d20d8fcb29e3801a260eed'],126,84,210,7,0.0,0.0,0.0
b735fc61cd6dcd5201a8416876d8f129e9c530c9,Renames all Movement terminology to the more accurate term Path,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 15:00:12-04:00,14400,2022-08-27 15:00:12-04:00,14400,True,False,"['.coverage', 'base.py', 'base.py', 'path.py', '__init__.py', 'base.py', 'bishop.py', 'king.py', 'knight.py', 'pawn.py', 'queen.py', 'rook.py', 'test_base.py', 'test_base.py', 'test_movement.py', 'test_path.py', 'test_bishop.py']",['35862986734ec1d5e7422103570ee9cbd3c92204'],133,131,264,17,0.0,0.0,1.0
2b92c1ea00cf904e93cce5abc555055480a36424,Cleans up unused imports,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 15:08:36-04:00,14400,2022-08-27 15:08:36-04:00,14400,True,False,"['piece.py', 'square.py']",['b735fc61cd6dcd5201a8416876d8f129e9c530c9'],3,2,5,2,,,
fa51396553cf9556af2dafff347070227f68733c,Adds methods to Path for limiting path to a given shape,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 15:31:33-04:00,14400,2022-08-27 15:31:33-04:00,14400,True,False,"['.coverage', 'path.py', 'test_path.py']",['2b92c1ea00cf904e93cce5abc555055480a36424'],0,97,97,3,1.0,1.0,0.918918918918919
b19020df11208649cd27171227fe0a732c1bb1d9,Updates pyproject.toml,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 17:47:30-04:00,14400,2022-08-27 17:47:30-04:00,14400,True,False,"['.coverage', 'LICENSE', 'offset.py', 'poetry.lock', 'pyproject.toml']",['fa51396553cf9556af2dafff347070227f68733c'],10,47,57,5,,,
578b75b77449558ed38774d0cc3fa6817f2a726a,adds git ignore,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 17:50:31-04:00,14400,2022-08-27 17:50:31-04:00,14400,True,False,"['.gitignore', 'pychess.iml', '56kyle-pychess-0.1.0.tar.gz', '56kyle_pychess-0.1.0-py3-none-any.whl']",['b19020df11208649cd27171227fe0a732c1bb1d9'],1,5,6,4,,,
820aa5a44c1f20bdb7292e8d2465d2e70eccc85f,adds github actions for testing,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 18:02:56-04:00,14400,2022-08-27 18:02:56-04:00,14400,True,False,"['python-package.yml', '.gitignore', 'pychess.iml', 'pyproject.toml']",['578b75b77449558ed38774d0cc3fa6817f2a726a'],4,43,47,4,,,
66c26d9410c4a5d7e1b6ddbf3f6fa98be1b7e409,adds gitignore,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 18:03:26-04:00,14400,2022-08-27 18:03:26-04:00,14400,True,False,['.gitignore'],['820aa5a44c1f20bdb7292e8d2465d2e70eccc85f'],0,1,1,1,,,
81f65d8ff72d10b6c5194bcecf8afc7d2eba7e05,removes ide exclusion,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 18:04:11-04:00,14400,2022-08-27 18:04:11-04:00,14400,True,False,['pychess.iml'],['66c26d9410c4a5d7e1b6ddbf3f6fa98be1b7e409'],1,0,1,1,,,
c85c48c987dfb65b693a07668590e5b7558c77ae,updates pyproject.toml,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 18:06:07-04:00,14400,2022-08-27 18:06:07-04:00,14400,True,False,['pyproject.toml'],['81f65d8ff72d10b6c5194bcecf8afc7d2eba7e05'],4,4,8,1,,,
93bb5434e2001a726f38987611b04f3d0597583e,adds publish github action,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 18:13:32-04:00,14400,2022-08-27 18:13:32-04:00,14400,True,False,['python-publish.yml'],['c85c48c987dfb65b693a07668590e5b7558c77ae'],0,39,39,1,,,
a61c53c6cb6263f360eb1571d775ba0765f44065,adds badges to README.md,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 19:24:19-04:00,14400,2022-08-27 19:24:19-04:00,14400,True,False,['README.md'],['93bb5434e2001a726f38987611b04f3d0597583e'],0,23,23,1,,,
9d1532554ccff51c5c134da81af9fd09af7cdbdc,Adds coverage reporting to actions,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 19:33:53-04:00,14400,2022-08-27 19:33:53-04:00,14400,True,False,"['python-package.yml', 'README.md']",['a61c53c6cb6263f360eb1571d775ba0765f44065'],6,10,16,2,,,
ecd8bb96d2de1721e7e1788304925ad9f853c9a6,Fixes readme and pyproject.toml,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 19:37:05-04:00,14400,2022-08-27 19:37:05-04:00,14400,True,False,"['README.md', 'pyproject.toml']",['9d1532554ccff51c5c134da81af9fd09af7cdbdc'],8,3,11,2,,,
d3bfd45268e586ed8087615d85cb5482f778695e,increments version to 0.1.1,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 19:38:17-04:00,14400,2022-08-27 19:38:17-04:00,14400,True,False,"['56kyle-pychess-0.1.0.tar.gz', '56kyle_pychess-0.1.0-py3-none-any.whl', 'pyproject.toml']",['ecd8bb96d2de1721e7e1788304925ad9f853c9a6'],1,1,2,3,,,
bd9804381e3b6caf7a4f3d6683c605062d996836,fixes codecov badge maybe,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 19:40:58-04:00,14400,2022-08-27 19:40:58-04:00,14400,True,False,['README.md'],['d3bfd45268e586ed8087615d85cb5482f778695e'],1,1,2,1,,,
7c7bd9e3f213791b0603d5aafb22c77c5ca77186,hopefully fixes github action,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 19:44:34-04:00,14400,2022-08-27 19:44:34-04:00,14400,True,False,['python-package.yml'],['bd9804381e3b6caf7a4f3d6683c605062d996836'],2,2,4,1,,,
153b37e539b86d71ca84902ad5209d1e5c5dfa6b,converts tests to use poetry for install,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 19:49:29-04:00,14400,2022-08-27 19:49:29-04:00,14400,True,False,['python-package.yml'],['7c7bd9e3f213791b0603d5aafb22c77c5ca77186'],2,2,4,1,,,
79ddb8f5cdb08a65056f4eb488c49a4781115307,adds flake8 as a dev dependency,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 19:51:52-04:00,14400,2022-08-27 19:51:52-04:00,14400,True,False,"['python-package.yml', 'poetry.lock', 'pyproject.toml']",['153b37e539b86d71ca84902ad5209d1e5c5dfa6b'],2,56,58,3,,,
ff0277dd25a05bd034dd83b2468b31b3978919ff,makes github action install flake8 seperate from poetry,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 19:53:54-04:00,14400,2022-08-27 19:53:54-04:00,14400,True,False,['python-package.yml'],['79ddb8f5cdb08a65056f4eb488c49a4781115307'],1,1,2,1,,,
bd1b4a3ccf48277ce8bd6a4ce930990387e9124c,works on fixing github action tests,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 19:56:17-04:00,14400,2022-08-27 19:56:17-04:00,14400,True,False,['python-package.yml'],['ff0277dd25a05bd034dd83b2468b31b3978919ff'],2,2,4,1,,,
f85c2ec473129d98f5adc97ee8140575773f4b19,works on fixing github action tests,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 20:00:09-04:00,14400,2022-08-27 20:00:09-04:00,14400,True,False,['python-package.yml'],['bd1b4a3ccf48277ce8bd6a4ce930990387e9124c'],1,1,2,1,,,
db4905ddde2a21013c55840ba1f3c42e61c49604,works on fixing github action tests,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 20:01:25-04:00,14400,2022-08-27 20:01:25-04:00,14400,True,False,['python-package.yml'],['f85c2ec473129d98f5adc97ee8140575773f4b19'],1,1,2,1,,,
db11d336d4a903e7af3749ab64ede75f5f8e7fc5,Fixes the codecov badge in the README.md,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 20:08:08-04:00,14400,2022-08-27 20:08:08-04:00,14400,True,False,['README.md'],['db4905ddde2a21013c55840ba1f3c42e61c49604'],2,2,4,1,,,
b9c823dc6c33d3cbaad27c9c5fbf00ab0cee57a8,increments version to 0.1.2,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-27 20:11:00-04:00,14400,2022-08-27 20:11:00-04:00,14400,True,False,['pyproject.toml'],['db11d336d4a903e7af3749ab64ede75f5f8e7fc5'],1,1,2,1,,,
62fcee621b032f3d8f21e61840da4fcae91adae5,Refactors some game methods into board methods,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-08-31 14:23:01-04:00,14400,2022-08-31 14:23:01-04:00,14400,True,False,"['.coverage', 'pychess.iml', 'base.py', 'base.py', 'test_base.py', 'test_base.py']",['b9c823dc6c33d3cbaad27c9c5fbf00ab0cee57a8'],75,76,151,6,,,
f9506ce6c4e849d9c05d724d068788a364034ca9,Removes currently unneeded notation,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-01 00:12:09-04:00,14400,2022-09-01 00:12:09-04:00,14400,True,False,"['.coverage', '__init__.py', 'algebraic.py', 'base.py', 'fide.py', '__init__.py', 'test_algebraic.py', 'test_base.py', 'test_fide.py']",['62fcee621b032f3d8f21e61840da4fcae91adae5'],111,0,111,9,0.0,0.0,0.09302325581395349
a251079734f43f0e62879b40077724944f236184,Refactors board to be in one file,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-01 00:16:19-04:00,14400,2022-09-01 00:16:19-04:00,14400,True,False,"['.coverage', 'board.py', '__init__.py', 'test_board.py', '__init__.py']",['f9506ce6c4e849d9c05d724d068788a364034ca9'],26,19,45,5,,,
20fe8376dc906b6c9fb3932008ef0418a89174a9,Removes empty gui module for time being,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-01 00:17:04-04:00,14400,2022-09-01 00:17:04-04:00,14400,True,False,"['.coverage', '__init__.py', '__init__.py']",['a251079734f43f0e62879b40077724944f236184'],0,0,0,3,,,
e1250e3464d89a66471ae5559717193e48adebc8,Refactors game into one file,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-01 00:18:30-04:00,14400,2022-09-01 00:18:30-04:00,14400,True,False,"['.coverage', 'game.py', 'test_game.py', '__init__.py']",['20fe8376dc906b6c9fb3932008ef0418a89174a9'],4,20,24,4,1.0,1.0,0.2857142857142857
60aeb164fcfd4ecdf4fc8da56962b0ef8e151f21,Refactors game into one file,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-01 00:18:51-04:00,14400,2022-09-01 00:18:51-04:00,14400,True,False,"['.coverage', '__init__.py', 'base.py']",['e1250e3464d89a66471ae5559717193e48adebc8'],28,0,28,3,0.0,0.0,0.7142857142857143
84a03e002a1b35e7bfed651eb97aa85349437138,Refactors AllowedMovementTypes to be AllowedPathTypes,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-01 00:34:36-04:00,14400,2022-09-01 00:34:36-04:00,14400,True,False,"['.coverage', 'board.py', 'path.py', 'king.py', 'pawn.py', 'test_board.py', 'test_game.py', 'test_path.py']",['60aeb164fcfd4ecdf4fc8da56962b0ef8e151f21'],20,20,40,8,,,
03c66856c2e1a09d583e2119716845aa26728e94,Adds get_valid_paths method to Board,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-01 00:48:49-04:00,14400,2022-09-01 00:48:49-04:00,14400,True,False,"['.coverage', 'board.py', 'path.py', 'test_board.py']",['84a03e002a1b35e7bfed651eb97aa85349437138'],3,38,41,4,1.0,1.0,1.0
c66452b509807a0de1e3cf7d7427dcded782bcb1,Adds get_path_squares to Board and refactors some attribute names in Move,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-01 01:22:39-04:00,14400,2022-09-01 01:22:39-04:00,14400,True,False,"['.coverage', 'board.py', 'move.py', '56kyle_pychess-0.1.0-py3-none-any.whl', 'test_board.py', 'test_move.py']",['03c66856c2e1a09d583e2119716845aa26728e94'],17,88,105,6,0.7377049180327869,0.7377049180327869,0.7540983606557377
51c0433fdd8e58a6e7d4e1d8f3b1b9186b530ac4,Adds get_path_moves to board,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-01 20:04:37-04:00,14400,2022-09-01 20:04:37-04:00,14400,True,False,"['.coverage', 'board.py', 'move.py', 'test_board.py']",['c66452b509807a0de1e3cf7d7427dcded782bcb1'],2,37,39,4,1.0,1.0,0.5172413793103449
aaa22bdf56153ed2e6da123bca0b7c5f86fb2272,Adds Turn dataclass,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-01 20:15:01-04:00,14400,2022-09-01 20:15:01-04:00,14400,True,False,"['.coverage', 'turn.py', 'test_turn.py']",['51c0433fdd8e58a6e7d4e1d8f3b1b9186b530ac4'],0,47,47,3,1.0,1.0,1.0
98196f2f5f1a6cd6013ea8c7dcd2be7951c5d0b3,Refactors Move to use starting square and offset instead of starting and ending squares. Adds small move validation methods to game,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-03 20:13:00-04:00,14400,2022-09-03 20:13:00-04:00,14400,True,False,"['.coverage', 'board.py', 'game.py', 'move.py', 'path.py', 'conftest.py', 'test_board.py', 'test_game.py', 'test_move.py', 'test_turn.py']",['aaa22bdf56153ed2e6da123bca0b7c5f86fb2272'],38,106,144,10,1.0,1.0,0.9782608695652174
3b8454f0886fd9f32873c572acdf4e45cb6b64a1,Removes some misplaced methods from Game,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-08 02:49:50-04:00,14400,2022-09-08 02:49:50-04:00,14400,True,False,"['game.py', 'test_game.py']",['98196f2f5f1a6cd6013ea8c7dcd2be7951c5d0b3'],34,0,34,2,0.0,0.0,0.0
337b30f5507cfe1898b7bc6e538c4a6ee0a2bede,Removes a lot of methods that distract from the initial deciding of the structures to be used,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-08 02:56:46-04:00,14400,2022-09-08 02:56:46-04:00,14400,True,False,"['.coverage', 'board.py', 'move.py', 'path.py', 'test_board.py', 'test_path.py', 'test_square.py']",['3b8454f0886fd9f32873c572acdf4e45cb6b64a1'],326,4,330,7,0.05904059040590406,0.05904059040590406,0.1992619926199262
ae6599b55cf36bec68e03538412e121bbe354417,"Revert ""Removes a lot of methods that distract from the initial deciding of the structures to be used""

This reverts commit 337b30f5507cfe1898b7bc6e538c4a6ee0a2bede.",Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-08 03:06:42-04:00,14400,2022-09-08 03:06:42-04:00,14400,True,False,"['.coverage', 'board.py', 'move.py', 'path.py', 'test_board.py', 'test_path.py', 'test_square.py']",['337b30f5507cfe1898b7bc6e538c4a6ee0a2bede'],4,326,330,7,0.940959409594096,0.940959409594096,0.8007380073800738
d3e88bb0dcd59e0935618c1a3c890a77f2b2c36c,"Revert ""Removes some misplaced methods from Game""

This reverts commit 3b8454f0886fd9f32873c572acdf4e45cb6b64a1.",Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-08 03:06:48-04:00,14400,2022-09-08 03:06:48-04:00,14400,True,False,"['game.py', 'test_game.py']",['ae6599b55cf36bec68e03538412e121bbe354417'],0,34,34,2,1.0,1.0,1.0
d2a44fd8a07c36e537dac15d4db4e1de91b35a69,Realized that numpy array acting as basis for everything was not worth the headaches it caused. Scrapped most things and redid it all with pieces having their positions attached to them and making things even more data driven,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-09 03:55:23-04:00,14400,2022-09-09 03:55:23-04:00,14400,True,False,"['.coverage', 'board.py', 'board_factory.py', 'board_state.py', 'board_validator.py', 'castle_right.py', 'color.py', 'constants.py', 'coverage.py', 'game.py', 'move.py', 'offset.py', 'path.py', 'piece.py', 'position.py', 'side.py', 'square.py', 'turn.py', '__init__.py', 'base.py', 'bishop.py', 'king.py', 'knight.py', 'pawn.py', 'queen.py', 'rook.py', 'conftest.py', 'test_board.py', 'test_board_state.py', 'test_castle_right.py', 'test_game.py', 'test_move.py', 'test_path.py', 'test_side.py', 'test_square.py', 'test_turn.py', '__init__.py', 'conftest.py', 'test_base.py', 'test_bishop.py', 'test_king.py', 'test_knight.py', 'test_pawn.py', 'test_queen.py', 'test_rook.py']",['d3e88bb0dcd59e0935618c1a3c890a77f2b2c36c'],1218,386,1604,45,0.03292181069958848,0.03292181069958848,0.13168724279835392
69761d2eae6835a3268dea9f194046946dc54ac1,"Completely refactors most structures into a more standardized format that uses factories, interfaces, and validators to act on frozen dataclasses. Removes numpy as a dependency",Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-09 21:39:26-04:00,14400,2022-09-09 21:39:26-04:00,14400,True,False,"['.coverage', 'board.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'board_factory.py', 'board_state.py', 'board_validator.py', 'coverage.py', 'data.py', 'exceptions.py', 'factory.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'interface.py', 'move.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'path.py', 'piece.py', 'position.py', 'validator.py', 'poetry.lock', 'pyproject.toml', 'conftest.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'test_board_state.py', 'test_coverage.py', 'test_data.py', 'test_exceptions.py', 'test_factory.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'test_interface.py', 'test_move.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'test_offset.py', 'test_path.py', 'test_position.py', 'test_validator.py']",['d2a44fd8a07c36e537dac15d4db4e1de91b35a69'],249,735,984,65,1.0,1.0,0.6917808219178082
8c4df35bc6b141277b3de4e8ebab053c8ab384da,Updates poetry.lock and README.md,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-09 21:49:08-04:00,14400,2022-09-09 21:49:08-04:00,14400,True,False,"['.coverage', 'README.md', 'poetry.lock']",['69761d2eae6835a3268dea9f194046946dc54ac1'],8,54,62,3,,,
804e8e776c7270e0ecbca83b5293f4b46adc41b9,Adds missing game factory and validator tests,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-10 04:41:22-04:00,14400,2022-09-10 04:41:22-04:00,14400,True,False,"['.coverage', 'test_factory.py', 'test_validator.py']",['8c4df35bc6b141277b3de4e8ebab053c8ab384da'],0,29,29,3,1.0,1.0,1.0
ba1f67f0a924dcca13520bcbdb68d6f12f8aed48,"Refactors interface to just be the object representation of each dataclass. Turns Piece into a dataclass based package like board and game. NOT PASSING TESTS, just need a stopping point for now",Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-15 04:01:00-04:00,14400,2022-09-15 04:01:00-04:00,14400,True,False,"['.coverage', '__init__.py', 'data.py', 'factory.py', 'interface.py', 'validator.py', 'data.py', 'factory.py', '__init__.py', 'factory.py', 'interface.py', 'validator.py', 'interface.py', '__init__.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'validator.py', 'conftest.py', 'conftest.py', 'test_factory.py', 'test_validator.py', 'conftest.py', 'test_validator.py', 'conftest.py', 'test_validator.py', '__init__.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_exceptions.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_exceptions.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_exceptions.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'test_validator.py']",['804e8e776c7270e0ecbca83b5293f4b46adc41b9'],157,504,661,74,0.5641025641025641,1.0,0.7435897435897436
2035e334de9ba34bad5ae0bf94daf303763c09c9,Removes unneeded ABC and continues fixing tests. Tests almost working,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-15 06:17:33-04:00,14400,2022-09-15 06:17:33-04:00,14400,True,False,"['.coverage', 'interface.py', 'factory.py', 'factory.py', 'interface.py', 'interface.py', 'data.py', 'factory.py', 'interface.py', 'factory.py', 'interface.py', 'validator.py', 'conftest.py', 'conftest.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'test_factory.py', 'conftest.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'conftest.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'test_validator.py']",['ba1f67f0a924dcca13520bcbdb68d6f12f8aed48'],193,137,330,27,0.0,0.0,0.041666666666666664
0bcd7a87a960f3ed2f113dd3c8a04572e62172a4,Removes standard version so that details of mode structuring can be reorganized more easily for the moment,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-15 07:53:10-04:00,14400,2022-09-15 07:53:10-04:00,14400,True,False,"['.coverage', '__init__.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'conftest.py', '__init__.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_exceptions.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_exceptions.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_exceptions.py', 'test_factory.py', 'test_interface.py', 'test_validator.py']",['2035e334de9ba34bad5ae0bf94daf303763c09c9'],203,1,204,43,0.9,0.0,0.9
e0d92701f84f7c0907e985cd1c0f4da3438e806d,Refactors general structure. Adds standard pieces. Returns test coverage to 100%,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-16 16:09:07-04:00,14400,2022-09-16 16:09:07-04:00,14400,True,False,"['.coverage', 'factory.py', 'validator.py', 'coverage.py', 'factory.py', 'interface.py', 'data.py', 'factory.py', 'interface.py', 'validator.py', 'piece.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'data.py', 'factory.py', 'interface.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'validator.py', 'validator.py', 'conftest.py', 'test_validator.py', 'test_coverage.py', 'test_factory.py', 'test_interface.py', 'conftest.py', '__init__.py', 'conftest.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'test_data.py', 'test_factory.py', 'test_interface.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'test_validator.py', 'test_validator.py']",['0bcd7a87a960f3ed2f113dd3c8a04572e62172a4'],215,1535,1750,101,0.9553571428571429,1.0,0.5928571428571429
813c7c7e978147322190534d3efbf05d22cdfb10,"Adds Capture, EnPassant, and Castle as Moves",Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-22 02:07:33-04:00,14400,2022-09-22 02:07:33-04:00,14400,True,False,"['.coverage', 'data.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'path.py', 'interface.py', 'interface.py', 'interface.py', 'conftest.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py']",['e0d92701f84f7c0907e985cd1c0f4da3438e806d'],1,576,577,43,1.0,1.0,0.664804469273743
cf8fb03330e88b4ae97064150d929a51e34cf527,Adds a bit to GameData,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-23 19:14:13-04:00,14400,2022-09-23 19:14:13-04:00,14400,True,False,"['data.py', 'factory.py']",['813c7c7e978147322190534d3efbf05d22cdfb10'],4,23,27,2,1.0,1.0,0.0
a55ccd1526e21862307efbaf1bf2daad1dd83b10,Removes some unneeded bits from Game interface,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-09-28 05:37:38-04:00,14400,2022-09-28 05:37:38-04:00,14400,True,False,"['.coverage', 'interface.py', 'conftest.py']",['cf8fb03330e88b4ae97064150d929a51e34cf527'],3,14,17,3,1.0,1.0,1.0
7231f540ebb0b94180bfb3b9644db45c6ed0eaf9,"Still working on getting tests running, changes data for pieces",Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-10-04 03:59:38-04:00,14400,2022-10-04 03:59:38-04:00,14400,True,False,"['.coverage', 'data.py', 'factory.py', 'data.py', 'data.py', 'offset.py', 'data.py', 'interface.py', 'data.py', 'factory.py', 'data.py', 'interface.py', 'data.py', 'data.py', 'data.py', 'data.py', 'conftest.py', 'conftest.py', 'conftest.py', 'conftest.py', 'conftest.py', 'conftest.py', 'conftest.py', 'conftest.py']",['a55ccd1526e21862307efbaf1bf2daad1dd83b10'],131,186,317,24,1.0,0.0,1.0
ee5db6b7cb90d112a3208a5284f7eb58c57de23d,Makes Piece move sets into default factories still accessible by init,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-10-04 06:35:51-04:00,14400,2022-10-04 06:35:51-04:00,14400,True,False,"['.coverage', 'data.py', 'factory.py', 'data.py', 'data.py', 'data.py', 'data.py', 'data.py', 'data.py', 'data.py', 'conftest.py', 'conftest.py', 'conftest.py', 'test_data.py', 'test_data.py', 'test_data.py', 'test_data.py', 'test_data.py', 'test_data.py', 'test_data.py']",['7231f540ebb0b94180bfb3b9644db45c6ed0eaf9'],40,71,111,20,1.0,1.0,0.6666666666666666
dedb9f3489b12cc316d5350bda3a25a9404e4e3e,Recreating structures. Found myself in a hole and figured it best to stop digging.,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-10-05 11:10:48-04:00,14400,2022-10-05 11:10:48-04:00,14400,True,False,"['.coverage', 'bishop.py', 'board.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'game.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'king.py', 'knight.py', 'move.py', '__init__.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'data.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'path.py', 'pawn.py', 'piece.py', '__init__.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', '__init__.py', 'data.py', 'exceptions.py', 'factory.py', 'interface.py', 'validator.py', 'validator.py', 'queen.py', 'rook.py', 'conftest.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'test_data.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'test_data.py', 'test_factory.py', 'test_interface.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', '__init__.py', 'conftest.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_validator.py', 'test_validator.py']",['ee5db6b7cb90d112a3208a5284f7eb58c57de23d'],2634,297,2931,168,0.05006418485237484,0.0,0.38125802310654683
c545c9637f9317659efea8af8c5721df068c4457,Restructures Piece into Piece and PieceMeta while adjusting all other structures accordingly. WIP still,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-10-14 16:48:03-04:00,14400,2022-10-14 16:48:03-04:00,14400,True,False,"['.coverage', 'bishop.py', 'board.py', 'castle_right.py', 'data.py', 'factory.py', 'interface.py', 'king.py', 'knight.py', 'move.py', 'path.py', 'pawn.py', 'piece.py', 'piece_meta.py', 'position.py', 'queen.py', 'rook.py', 'size.py', 'validator.py', 'conftest.py', 'test_board.py', 'test_data.py', 'test_factory.py', 'test_interface.py', 'test_piece.py', 'test_size.py', 'test_validator.py']",['dedb9f3489b12cc316d5350bda3a25a9404e4e3e'],330,266,596,27,0.0,0.0,0.4634146341463415
90a5dd11d8c965f448949879c8835b26d579bb68,Finishes refactoring Piece and Move. Returns test coverage to 100%,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-10-14 19:31:51-04:00,14400,2022-10-14 19:31:51-04:00,14400,True,False,"['.coverage', 'bishop.py', 'board.py', 'king.py', 'knight.py', 'pawn.py', 'piece.py', 'piece_meta.py', 'queen.py', 'rook.py', 'test_board.py', 'test_castle_right.py', 'test_piece.py']",['c545c9637f9317659efea8af8c5721df068c4457'],96,112,208,13,0.0,0.0,0.5
ed345bc17abb5d9272395c4f47d042863dd3dfc8,Bumps version,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-10-14 19:33:03-04:00,14400,2022-10-14 19:33:03-04:00,14400,True,False,['pyproject.toml'],['90a5dd11d8c965f448949879c8835b26d579bb68'],1,1,2,1,,,
08a1dbc7a0b1a7890779903006aa2f307b5e366e,"Replaces Paths with Lines, Rays, and Segments",Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-10-20 04:41:57-04:00,14400,2022-10-20 04:41:57-04:00,14400,True,False,"['.coverage', 'bishop.py', 'king.py', 'knight.py', 'line.py', 'offset.py', 'pawn.py', 'piece.py', 'piece_meta.py', 'position.py', 'queen.py', 'ray.py', 'rook.py', 'segment.py', 'test_board.py', 'test_line.py', 'test_position.py', 'test_ray.py', 'test_segment.py']",['ed345bc17abb5d9272395c4f47d042863dd3dfc8'],51,224,275,19,1.0,1.0,0.9272727272727272
e9be2aac822ff1a8ce784bbff8ee06fb1a26bd79,fixes ray creation in Piece and adds missing test cases for Piece methods,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-10-20 15:09:05-04:00,14400,2022-10-20 15:09:05-04:00,14400,True,False,"['.coverage', 'piece.py', 'test_piece.py']",['08a1dbc7a0b1a7890779903006aa2f307b5e366e'],1,21,22,3,1.0,1.0,1.0
26339a7f083af034a78511a51c6e7054e03d3d02,"Removes Path since it has been fully replaced by Lines, Segments, and Rays. Refactors all mentions of paths into lines for clarity",Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-10-20 15:18:16-04:00,14400,2022-10-20 15:18:16-04:00,14400,True,False,"['.coverage', 'bishop.py', 'board.py', 'king.py', 'knight.py', 'path.py', 'pawn.py', 'piece.py', 'piece_meta.py', 'queen.py', 'rook.py', 'test_piece.py']",['e9be2aac822ff1a8ce784bbff8ee06fb1a26bd79'],61,62,123,12,1.0,1.0,1.0
e7466ad4af1a031cfe100501e143c948a78557d4,"Adds some tests for Lines, Rays, and Segments. Adds Direction to all Line based classes in order to handle weird unit circle edge cases with equality and various geometric comparisons.",Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-10-26 03:07:35-04:00,14400,2022-10-26 03:07:35-04:00,14400,True,False,"['.coverage', 'board.py', 'direction.py', 'line.py', 'position.py', 'conftest.py', 'test_board.py', 'test_line.py', 'test_position.py', 'test_ray.py', 'test_segment.py']",['26339a7f083af034a78511a51c6e7054e03d3d02'],31,162,193,11,1.0,1.0,0.9615384615384616
207bd702f71c3a2916b537a9c2164731a4f59ed2,Fixes how lines handle __contains__ with positions. Adds test for direction and various other geometric based classes,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-02 06:47:18-04:00,14400,2022-11-02 06:47:18-04:00,14400,True,False,"['.coverage', 'board.py', 'king.py', 'line.py', 'piece.py', 'position.py', 'position_constants.py', 'conftest.py', 'test_board.py', 'test_direction.py', 'test_line.py', 'test_piece.py', 'test_position.py']",['e7466ad4af1a031cfe100501e143c948a78557d4'],52,377,429,13,1.0,0.88268156424581,0.7653631284916201
f7f3819cd1a88486b4ed44671cba064a7d64f7d6,Refactors PieceMeta to PieceType,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-02 09:36:43-04:00,14400,2022-11-02 09:36:43-04:00,14400,True,False,"['.coverage', 'bishop.py', 'board.py', 'king.py', 'knight.py', 'pawn.py', 'piece.py', 'piece_type.py', 'queen.py', 'rook.py', 'test_board.py', 'test_piece.py']",['207bd702f71c3a2916b537a9c2164731a4f59ed2'],43,30,73,12,,,
b58e13c77379ca3e612aa6741374eec1494b481f,Adds some tests for line direction,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-03 21:27:48-04:00,14400,2022-11-03 21:27:48-04:00,14400,True,False,"['.coverage', 'line.py', 'move.py', 'test_line.py']",['f7f3819cd1a88486b4ed44671cba064a7d64f7d6'],1,13,14,4,1.0,1.0,1.0
5b9f095f431438cb85e71f51a390836397b5a2e4,Updates poetry dependencies for use with python 3.11. From now on will be using Python 3.11 features,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-03 22:37:24-04:00,14400,2022-11-03 22:37:24-04:00,14400,True,False,"['misc.xml', 'pychess.iml', 'poetry.lock']",['b58e13c77379ca3e612aa6741374eec1494b481f'],31,85,116,3,,,
8a7727d07570be815469617eff949a48f62d86a3,Refactors Piece slightly,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-04 05:02:23-04:00,14400,2022-11-04 05:02:23-04:00,14400,True,False,"['piece.py', 'piece_type.py', 'position.py']",['5b9f095f431438cb85e71f51a390836397b5a2e4'],18,12,30,3,,,
59c43ba6c5b8246da9362397a366cbafa36afc9d,Removes faulty import,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-04 05:03:05-04:00,14400,2022-11-04 05:03:05-04:00,14400,True,False,"['.coverage', 'position.py']",['8a7727d07570be815469617eff949a48f62d86a3'],2,0,2,2,,,
2b60e5370fd39501cc2796cbde42610143a4213c,Cleans up imports,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-04 16:59:20-04:00,14400,2022-11-04 16:59:20-04:00,14400,True,False,"['.coverage', 'bishop.py', 'board.py', 'color.py', 'direction.py', 'king.py', 'knight.py', 'pawn.py', 'queen.py', 'rook.py', 'conftest.py']",['59c43ba6c5b8246da9362397a366cbafa36afc9d'],44,15,59,11,,,
320663cbf779a5a838a774495e2c82b19d8398ab,Removes algebraic notation methods from position so that they can be done in a notation specific factory later,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-05 04:45:19-04:00,14400,2022-11-05 04:45:19-04:00,14400,True,False,"['position.py', 'test_position.py']",['2b60e5370fd39501cc2796cbde42610143a4213c'],56,1,57,2,0.0,0.0,0.0
8ff5f82f0211b48eb579c03ca8d26b466fa6a907,Cleans up imports,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-07 03:40:26-05:00,18000,2022-11-07 03:40:26-05:00,18000,True,False,"['.coverage', 'line.py']",['320663cbf779a5a838a774495e2c82b19d8398ab'],4,0,4,2,,,
aa0a9f97da14d39a6417904e492c428231b326a0,Refactors pieces so that board state affects how pieces get their possible move lines,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-08 07:39:39-05:00,18000,2022-11-08 07:39:39-05:00,18000,True,False,"['.coverage', 'board.py', 'king.py', 'line.py', 'move.py', 'pawn.py', 'piece.py', 'piece_type.py', 'position.py', 'size.py', 'conftest.py', 'test_board.py', 'test_pawn.py', 'test_size.py']",['8ff5f82f0211b48eb579c03ca8d26b466fa6a907'],31,267,298,14,1.0,0.9183673469387755,0.8707482993197279
00aa64814a14ef6c8b94cc4e58d9253b581f373d,"Loads of changes and ideas, but isn't tested properly. Mainly just serves as references for ideas to be implemented properly in another branch",Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-14 09:02:36-05:00,18000,2022-11-14 09:02:36-05:00,18000,True,False,"['.coverage', 'board.py', 'board_analyzer.py', 'game.py', 'line.py', 'metadata.py', 'move.py', 'offset.py', 'rect.py', 'segment.py', 'test_board.py', 'test_line.py']",['aa0a9f97da14d39a6417904e492c428231b326a0'],40,287,327,12,0.8272727272727273,0.8272727272727273,0.9545454545454546
d4f5659b62dc3c8f93fa0d72fb19d93326d91170,Adds piece factories and refactors further,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-19 05:51:38-05:00,18000,2022-11-19 05:51:38-05:00,18000,True,False,"['.coverage', 'bishop.py', 'board.py', 'board_analyzer.py', 'game.py', 'king.py', 'knight.py', 'metadata.py', 'pawn.py', 'queen.py', 'rook.py', 'rules.py', 'conftest.py', 'test_board.py', 'test_game.py']",['00aa64814a14ef6c8b94cc4e58d9253b581f373d'],44,169,213,15,1.0,0.9777777777777777,0.7333333333333333
48ab0d1c33ab96f871474daba7266b4ef5311926,Removes GameMetadata and Game for the time being so that Board can be situated out first,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-19 14:12:40-05:00,18000,2022-11-19 14:12:40-05:00,18000,True,False,"['.coverage', 'README.md', 'game.py', 'metadata.py']",['d4f5659b62dc3c8f93fa0d72fb19d93326d91170'],114,23,137,4,0.0,0.0,0.17391304347826086
38c097c481491c7aa9297c10c879ed0730100f6e,Removes Game and GameMetadata tests,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-19 14:12:58-05:00,18000,2022-11-19 14:12:58-05:00,18000,True,False,['test_game.py'],['48ab0d1c33ab96f871474daba7266b4ef5311926'],10,0,10,1,,,
b4fa77eb713e47c1f76616efadd94da240de1f12,Refactors most of the board tests to use piece factories that are much clearer than a ton of similar looking fixtures,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-19 15:53:55-05:00,18000,2022-11-19 15:53:55-05:00,18000,True,False,"['.coverage', 'test_board.py']",['38c097c481491c7aa9297c10c879ed0730100f6e'],86,98,184,2,1.0,1.0,1.0
1d9c45d175b13809aa335afab6117fd42e0ee185,Updates CI/CD to use Python 3.11,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-20 05:24:59-05:00,18000,2022-11-20 05:24:59-05:00,18000,True,False,"['.coverage', 'python-package.yml']",['aa0a9f97da14d39a6417904e492c428231b326a0'],1,1,2,2,,,
29e15e18bb608ebea680a902940b6431cc96eff4,Updates CI/CD for this branch,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-20 05:26:49-05:00,18000,2022-11-20 05:26:49-05:00,18000,True,False,['python-package.yml'],['b4fa77eb713e47c1f76616efadd94da240de1f12'],1,1,2,1,,,
e3bab8f35b3d56c1220c9e70889043577e8fbfe3,Fixes coverage conflicts,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-20 05:27:22-05:00,18000,2022-11-20 05:27:22-05:00,18000,True,False,['.coverage'],['29e15e18bb608ebea680a902940b6431cc96eff4'],0,0,0,1,,,
761f51fb94bbf9b3628aaaec0510fbf3b463b7af,Just updates coverage,Kyle Oliver,oliverke@mail.uc.edu,Kyle Oliver,oliverke@mail.uc.edu,2022-11-21 03:56:24-05:00,18000,2022-11-21 03:56:24-05:00,18000,True,False,['.coverage'],['e3bab8f35b3d56c1220c9e70889043577e8fbfe3'],0,0,0,1,,,
