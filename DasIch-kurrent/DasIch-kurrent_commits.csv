Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
9ee082024c678f6ab8a57884121deca8a9d80489,Initial commit,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-16 00:40:15+02:00,-7200,2013-06-16 00:40:15+02:00,-7200,True,False,"['.gitignore', 'LICENSE.rst', '__init__.py', 'ast.py', 'parser.py', 'utils.py', 'test_kurrent.py']",[],0,595,595,7,0.6649350649350649,0.9012987012987013,0.8675324675324675
5854a81951d45c090ac9f1aa5d09b61c906f2e7f,Add tox configuration,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-16 00:46:56+02:00,-7200,2013-06-16 00:46:56+02:00,-7200,True,False,"['.gitignore', 'MANIFEST.in', 'setup.py', 'tox.ini']",['9ee082024c678f6ab8a57884121deca8a9d80489'],0,22,22,4,,,
226906e9aca3a8f34a04fc788db9bb262b9a72e0,Add travis configuration,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-16 00:49:04+02:00,-7200,2013-06-16 00:49:04+02:00,-7200,True,False,['.travis.yml'],['5854a81951d45c090ac9f1aa5d09b61c906f2e7f'],0,9,9,1,,,
5c3622aac0234886e34a02af2eba20a7c8e102af,Add py26 to tox configuration,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-16 00:51:10+02:00,-7200,2013-06-16 00:51:10+02:00,-7200,True,False,['tox.ini'],['226906e9aca3a8f34a04fc788db9bb262b9a72e0'],1,1,2,1,,,
13d724facc42d4580bd2fc166b05ab26bda92b96,Fix ur'' literal issue,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-16 00:56:54+02:00,-7200,2013-06-16 00:56:54+02:00,-7200,True,False,['parser.py'],['5c3622aac0234886e34a02af2eba20a7c8e102af'],2,3,5,1,,,
b4327eb6f2c7e5d741698606e6b69cf426e9fc16,Really fix ur'' issue,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-16 01:00:34+02:00,-7200,2013-06-16 01:00:34+02:00,-7200,True,False,['parser.py'],['13d724facc42d4580bd2fc166b05ab26bda92b96'],2,2,4,1,,,
efa4e8e278448f525b5dc0b7e490999fd09e905e,Make iterators work on 3.x,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-16 01:12:39+02:00,-7200,2013-06-16 01:12:39+02:00,-7200,True,False,"['_compat.py', 'parser.py', 'utils.py']",['b4327eb6f2c7e5d741698606e6b69cf426e9fc16'],3,36,39,3,1.0,1.0,1.0
9f51b9a2047a9434354a523c5a419bf73f961006,Add KurrentWriter,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-16 03:21:31+02:00,-7200,2013-06-16 03:21:31+02:00,-7200,True,False,"['writers.py', 'test_kurrent.py']",['efa4e8e278448f525b5dc0b7e490999fd09e905e'],0,184,184,2,0.7101449275362319,1.0,0.9420289855072463
d5785cc5b2b75364ba12e46ebedbd911b121afb0,Fix tox configuration,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-16 03:24:34+02:00,-7200,2013-06-16 03:24:34+02:00,-7200,True,False,['tox.ini'],['9f51b9a2047a9434354a523c5a419bf73f961006'],0,1,1,1,,,
71274ea4e4522cf352611b2cc72fc186f118bef3,Fix count() issue in write_OrderedList,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-16 03:25:00+02:00,-7200,2013-06-16 03:25:00+02:00,-7200,True,False,['writers.py'],['d5785cc5b2b75364ba12e46ebedbd911b121afb0'],1,1,2,1,,,
95154d42de86327e8818f3020743671d8279cd5c,Add HTML5Writer,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-16 03:56:26+02:00,-7200,2013-06-16 03:56:26+02:00,-7200,True,False,"['writers.py', 'test_kurrent.py']",['71274ea4e4522cf352611b2cc72fc186f118bef3'],3,62,65,2,1.0,1.0,1.0
bc819fbbc7bd5e7da1641f1a19817d89ccce6ed3,Add missing url to setup.py,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-16 03:59:25+02:00,-7200,2013-06-16 03:59:25+02:00,-7200,True,False,['setup.py'],['95154d42de86327e8818f3020743671d8279cd5c'],0,1,1,1,,,
663295ff907f05c7f4f1ea024b353a4e3cd9e1e0,Kill PushableIterator,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 02:24:05+02:00,-7200,2013-06-17 02:24:05+02:00,-7200,True,False,"['parser.py', 'utils.py']",['bc819fbbc7bd5e7da1641f1a19817d89ccce6ed3'],48,29,77,2,0.0,0.0,0.0
a043cf541d3a9c4b615f6c3e946e39b72a6c2f31,Make LineIterator.until() return LineIterator,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 03:11:05+02:00,-7200,2013-06-17 03:11:05+02:00,-7200,True,False,"['parser.py', 'test_kurrent.py']",['663295ff907f05c7f4f1ea024b353a4e3cd9e1e0'],7,13,20,2,1.0,1.0,1.0
a19b3e92ab17940fabf9fce739c1c485c3517020,Add LineIterator.unindented,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 03:16:01+02:00,-7200,2013-06-17 03:16:01+02:00,-7200,True,False,"['parser.py', 'test_kurrent.py']",['a043cf541d3a9c4b615f6c3e946e39b72a6c2f31'],10,25,35,2,1.0,1.0,1.0
b2246bc0ea51f76804eca12f06a3ded4292e1277,Make LineIterator.unindented() return LineIterator,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 03:20:07+02:00,-7200,2013-06-17 03:20:07+02:00,-7200,True,False,"['parser.py', 'test_kurrent.py']",['a19b3e92ab17940fabf9fce739c1c485c3517020'],23,24,47,2,1.0,1.0,1.0
de492faea93224b252245088915684eab5c7445d,Give ParentNode a children argument,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 03:37:50+02:00,-7200,2013-06-17 03:37:50+02:00,-7200,True,False,"['ast.py', 'parser.py', 'test_kurrent.py']",['b2246bc0ea51f76804eca12f06a3ded4292e1277'],43,36,79,3,1.0,0.0,0.0
a864cbdc22b652ce6f42cb845a4a95eb7da50f9b,Yield Line objects from LineIterator,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 04:46:40+02:00,-7200,2013-06-17 04:46:40+02:00,-7200,True,False,"['_compat.py', 'parser.py', 'test_kurrent.py']",['de492faea93224b252245088915684eab5c7445d'],9,42,51,3,1.0,1.0,0.6153846153846154
12e740f444d5997ae500507d8e176260c43b6f0e,Remove ParserFlow exception,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 04:47:18+02:00,-7200,2013-06-17 04:47:18+02:00,-7200,True,False,['parser.py'],['a864cbdc22b652ce6f42cb845a4a95eb7da50f9b'],5,1,6,1,,,
c9b723e2ddbc0d07b22d296f4884caa39495f358,Add location information to ast,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 05:17:37+02:00,-7200,2013-06-17 05:17:37+02:00,-7200,True,False,"['ast.py', 'parser.py', 'test_kurrent.py']",['12e740f444d5997ae500507d8e176260c43b6f0e'],9,35,44,3,1.0,1.0,0.8571428571428571
dbe6104eb784e4f46c30a1e0d612272eead38b4f,Add escaping to HTML5Writer,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 05:27:41+02:00,-7200,2013-06-17 05:27:41+02:00,-7200,True,False,"['writers.py', 'setup.py', 'test_kurrent.py']",['c9b723e2ddbc0d07b22d296f4884caa39495f358'],3,9,12,3,1.0,1.0,1.0
07b31fe4efbcbd94ed5f188a2f3fb6f2de8b19f9,Fix travis configuration,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 05:35:55+02:00,-7200,2013-06-17 05:35:55+02:00,-7200,True,False,['.travis.yml'],['dbe6104eb784e4f46c30a1e0d612272eead38b4f'],0,2,2,1,,,
5d43d9821a44a7241287fcbf6aa5e185d901181c,Fix location info on blocks,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 17:44:08+02:00,-7200,2013-06-17 17:44:08+02:00,-7200,True,False,"['parser.py', 'test_kurrent.py']",['07b31fe4efbcbd94ed5f188a2f3fb6f2de8b19f9'],9,36,45,2,0.0,1.0,1.0
8c06fc9d3dbadace05f70eb07de5136879b2ff30,Test locations in test_until,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 17:49:44+02:00,-7200,2013-06-17 17:49:44+02:00,-7200,True,False,['test_kurrent.py'],['5d43d9821a44a7241287fcbf6aa5e185d901181c'],2,7,9,1,1.0,1.0,1.0
01d4fbee779edd9e2cd96a5d8690fd71d8556126,"Test .{start,end} in test_unindented",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 17:51:14+02:00,-7200,2013-06-17 17:51:14+02:00,-7200,True,False,['test_kurrent.py'],['8c06fc9d3dbadace05f70eb07de5136879b2ff30'],2,2,4,1,,,
ee8649265587c07d03cf7bdb78703c0b9dcec2b8,Refactor LineIterator.unindented(),Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 19:40:56+02:00,-7200,2013-06-17 19:40:56+02:00,-7200,True,False,['parser.py'],['01d4fbee779edd9e2cd96a5d8690fd71d8556126'],3,1,4,1,0.0,0.0,0.0
bbd73f5be9851f7d1e5cb1bbd7012892961577ed,Split up test_kurrent.py,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 20:46:50+02:00,-7200,2013-06-17 20:46:50+02:00,-7200,True,False,"['MANIFEST.in', 'test_parser.py', 'test_writers.py']",['ee8649265587c07d03cf7bdb78703c0b9dcec2b8'],95,105,200,3,,,
36c7a41cc7a1bf5709f08027f93f7aa2f33dbcae,Remove unnecessary rule in MANIFEST.in,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 21:02:17+02:00,-7200,2013-06-17 21:02:17+02:00,-7200,True,False,['MANIFEST.in'],['bbd73f5be9851f7d1e5cb1bbd7012892961577ed'],1,0,1,1,,,
1b9da51084938d8d0f1e8913309654f8aa7eca25,Add Makefile,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 21:05:18+02:00,-7200,2013-06-17 21:05:18+02:00,-7200,True,False,"['MANIFEST.in', 'Makefile', 'dev-requirements.txt']",['36c7a41cc7a1bf5709f08027f93f7aa2f33dbcae'],1,27,28,3,,,
207e6276a3a7c78c7cf5e2a142393a0673834592,Add classifiers,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 21:21:41+02:00,-7200,2013-06-17 21:21:41+02:00,-7200,True,False,['setup.py'],['1b9da51084938d8d0f1e8913309654f8aa7eca25'],1,9,10,1,,,
1296bea984893499d98719b8aa2d8e40b7b2614f,Use exact package name in install_requires,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 21:22:26+02:00,-7200,2013-06-17 21:22:26+02:00,-7200,True,False,['setup.py'],['207e6276a3a7c78c7cf5e2a142393a0673834592'],1,1,2,1,,,
4ea390a91187087b411c7b8fcb8fedbd8db0cf98,Add Document.title,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 22:37:39+02:00,-7200,2013-06-17 22:37:39+02:00,-7200,True,False,"['ast.py', 'parser.py', 'writers.py', 'test_writers.py']",['1296bea984893499d98719b8aa2d8e40b7b2614f'],5,13,18,4,1.0,1.0,0.8571428571428571
88d95fe8faa59a84082f91b4aa740611ea9eded4,Add TitleTransformation,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-17 23:13:12+02:00,-7200,2013-06-17 23:13:12+02:00,-7200,True,False,"['_compat.py', 'ast.py', 'transformations.py', 'test_transformations.py']",['4ea390a91187087b411c7b8fcb8fedbd8db0cf98'],1,68,69,4,1.0,1.0,1.0
f3681865f61b934d6279fa1794ab6369611d6cb8,Make Paragraph a ParentNode; add Text,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 16:05:58+02:00,-7200,2013-06-18 16:05:58+02:00,-7200,True,False,"['ast.py', 'parser.py', 'writers.py', 'test_parser.py', 'test_writers.py']",['88d95fe8faa59a84082f91b4aa740611ea9eded4'],45,140,185,5,0.0,0.7816091954022989,1.0
0fb9ea1004e53e513f0d47a4fb4dd6f259a98faa,Add tests for Location,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 16:25:18+02:00,-7200,2013-06-18 16:25:18+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['f3681865f61b934d6279fa1794ab6369611d6cb8'],0,35,35,2,1.0,1.0,1.0
b1690199d79e176e5ce08edfe492450a598102a9,Add tests for Header,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 16:28:58+02:00,-7200,2013-06-18 16:28:58+02:00,-7200,True,False,['test_ast.py'],['0fb9ea1004e53e513f0d47a4fb4dd6f259a98faa'],1,14,15,1,1.0,1.0,1.0
e0d4c0200b87bc5326327f427bf4873eb9ec2368,Add tests for TestText,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 16:34:25+02:00,-7200,2013-06-18 16:34:25+02:00,-7200,True,False,['test_ast.py'],['b1690199d79e176e5ce08edfe492450a598102a9'],1,12,13,1,1.0,1.0,1.0
93bee549a26e6dced08e2ed122e50ee0f2bad5ed,Use Location in ast tests,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 16:50:36+02:00,-7200,2013-06-18 16:50:36+02:00,-7200,True,False,['test_ast.py'],['e0d4c0200b87bc5326327f427bf4873eb9ec2368'],6,6,12,1,,,
5473e143bd5d0ab2eec3c974077e19b74f7375e0,Add tests for Paragraph,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 17:01:52+02:00,-7200,2013-06-18 17:01:52+02:00,-7200,True,False,['test_ast.py'],['93bee549a26e6dced08e2ed122e50ee0f2bad5ed'],1,17,18,1,1.0,1.0,1.0
207fce87455a378e5f87da141610b0a11a3a8c6d,Implement Location.__lt__,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 17:24:02+02:00,-7200,2013-06-18 17:24:02+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['5473e143bd5d0ab2eec3c974077e19b74f7375e0'],0,18,18,2,1.0,1.0,1.0
4f38ea52e83e1cf44ff047b308074a054ee8a55e,"Add test for Location.__gt__

Apparently we don't need to add an implementation.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 17:28:12+02:00,-7200,2013-06-18 17:28:12+02:00,-7200,True,False,['test_ast.py'],['207fce87455a378e5f87da141610b0a11a3a8c6d'],0,8,8,1,1.0,1.0,1.0
a1520a0e114825015cd2e493c650f4e0e25b3b39,Implement Location.__le__,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 17:33:20+02:00,-7200,2013-06-18 17:33:20+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['4f38ea52e83e1cf44ff047b308074a054ee8a55e'],0,11,11,2,1.0,1.0,1.0
4d3bef0b2aba21f52d6a0e69c70b13e688289503,"Add test for Location.__ge__

Apparently we don't need to implement that either.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 17:37:34+02:00,-7200,2013-06-18 17:37:34+02:00,-7200,True,False,['test_ast.py'],['a1520a0e114825015cd2e493c650f4e0e25b3b39'],0,11,11,1,1.0,1.0,1.0
758a2ffcb534679d27331fafa6564dc5deb6beae,Add asserts to Location.__eq__ test,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 17:39:27+02:00,-7200,2013-06-18 17:39:27+02:00,-7200,True,False,['test_ast.py'],['4d3bef0b2aba21f52d6a0e69c70b13e688289503'],0,2,2,1,1.0,1.0,1.0
195ecd05f3b943a644bead0441666a1c3bdaed6b,Add asserts to Location.__le__ test,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 17:40:51+02:00,-7200,2013-06-18 17:40:51+02:00,-7200,True,False,['test_ast.py'],['758a2ffcb534679d27331fafa6564dc5deb6beae'],0,3,3,1,1.0,1.0,1.0
145a224b1158295f10bce7099df9309f76e86b5b,Add asserts to Location.__ne__ test,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 17:44:16+02:00,-7200,2013-06-18 17:44:16+02:00,-7200,True,False,['test_ast.py'],['195ecd05f3b943a644bead0441666a1c3bdaed6b'],0,2,2,1,1.0,1.0,1.0
b408598a782cc5f762c963019bbc89cf07822b4b,Add test for Document,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 18:05:58+02:00,-7200,2013-06-18 18:05:58+02:00,-7200,True,False,['test_ast.py'],['145a224b1158295f10bce7099df9309f76e86b5b'],1,41,42,1,0.0,1.0,1.0
5e9454181f67eed0386320fbad0adec01e983426,Add test for ListItem,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 18:11:55+02:00,-7200,2013-06-18 18:11:55+02:00,-7200,True,False,['test_ast.py'],['b408598a782cc5f762c963019bbc89cf07822b4b'],1,15,16,1,1.0,1.0,1.0
a3a61ec3c69b876964ce11c37884779d7c4d227c,Add test for OrderedList,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 18:17:30+02:00,-7200,2013-06-18 18:17:30+02:00,-7200,True,False,['test_ast.py'],['5e9454181f67eed0386320fbad0adec01e983426'],1,23,24,1,0.0,1.0,1.0
2901693e160f7839a3ed61446e20d17908a65f44,Add test for UnorderedList,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 18:19:44+02:00,-7200,2013-06-18 18:19:44+02:00,-7200,True,False,['test_ast.py'],['a3a61ec3c69b876964ce11c37884779d7c4d227c'],1,22,23,1,0.0,1.0,1.0
1f08a16c765236fb6dcebe3861461473406765f9,"Add ASTNode.parent

Also ParentNode.add_child(ren) to set the .parent attribute",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 19:31:04+02:00,-7200,2013-06-18 19:31:04+02:00,-7200,True,False,"['ast.py', 'parser.py', 'test_ast.py', 'test_writers.py']",['2901693e160f7839a3ed61446e20d17908a65f44'],11,44,55,4,0.0,1.0,0.7931034482758621
a10eecb3b98f8cfcbdfefd46734703f6b7cc3e42,Add tests for .add_child(),Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 21:17:39+02:00,-7200,2013-06-18 21:17:39+02:00,-7200,True,False,['test_ast.py'],['1f08a16c765236fb6dcebe3861461473406765f9'],5,37,42,1,1.0,1.0,1.0
272ae1e9d330bf90817b0d1a57d5c3b2e0aaa32f,Add test for .add_children(),Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 21:21:15+02:00,-7200,2013-06-18 21:21:15+02:00,-7200,True,False,['test_ast.py'],['a10eecb3b98f8cfcbdfefd46734703f6b7cc3e42'],0,11,11,1,1.0,1.0,1.0
1833ab171d55650f14ad88d45328b1f4f1887fdc,Add .replace() method,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 21:26:46+02:00,-7200,2013-06-18 21:26:46+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['272ae1e9d330bf90817b0d1a57d5c3b2e0aaa32f'],0,14,14,2,1.0,1.0,0.6666666666666666
7c6cf53c7e743dbd86f71205875495e9426dedb2,Add .replace_in_parent(),Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-18 21:38:05+02:00,-7200,2013-06-18 21:38:05+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['1833ab171d55650f14ad88d45328b1f4f1887fdc'],3,30,33,2,1.0,1.0,1.0
3518e68d23cb0b3185ea9550facb7000d86da3bf,"Use - instead of * for unordered lists

I would like to use * for inline markup but this conflicts with
unordered list syntax.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-19 01:36:55+02:00,-7200,2013-06-19 01:36:55+02:00,-7200,True,False,"['parser.py', 'writers.py', 'test_parser.py', 'test_writers.py']",['7c6cf53c7e743dbd86f71205875495e9426dedb2'],22,22,44,4,,,
63271a5471234b5addf49937eacb4816e3a2e600,Add rudimentary inline markup,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-19 04:12:55+02:00,-7200,2013-06-19 04:12:55+02:00,-7200,True,False,"['ast.py', 'parser.py', 'writers.py', 'test_ast.py', 'test_parser.py', 'test_writers.py']",['3518e68d23cb0b3185ea9550facb7000d86da3bf'],5,231,236,6,0.4406779661016949,0.7288135593220338,1.0
817dd4d9704728ef061e055160b9a65b903db79f,Fix issue with inline parsing,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-20 19:00:25+02:00,-7200,2013-06-20 19:00:25+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['63271a5471234b5addf49937eacb4816e3a2e600'],21,35,56,2,1.0,1.0,1.0
c2b4f8ae57bf3de7f9c7bc68c2c591b510b32514,Test issue with inline markup preceded by text,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-20 19:10:35+02:00,-7200,2013-06-20 19:10:35+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['817dd4d9704728ef061e055160b9a65b903db79f'],2,36,38,2,0.875,0.875,1.0
fd5d75ee905d6d9f4329ac1f65cecd5aeb956c91,Refactor inline markup tests,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-20 19:46:14+02:00,-7200,2013-06-20 19:46:14+02:00,-7200,True,False,['test_parser.py'],['c2b4f8ae57bf3de7f9c7bc68c2c591b510b32514'],56,39,95,1,0.0,0.0,0.0
4f3348920992d089dcbaefee18b2ff2403d20998,Add test for inline markup surrounded by text,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-20 20:16:18+02:00,-7200,2013-06-20 20:16:18+02:00,-7200,True,False,['test_parser.py'],['fd5d75ee905d6d9f4329ac1f65cecd5aeb956c91'],0,23,23,1,0.0,1.0,0.0
1e475eff8c391b929dbc3cc329885ae6bae1a1bc,Add test for text surrounded by markup,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-20 20:34:06+02:00,-7200,2013-06-20 20:34:06+02:00,-7200,True,False,['test_parser.py'],['4f3348920992d089dcbaefee18b2ff2403d20998'],0,27,27,1,0.0,1.0,0.0
a50d7e223a71a9775dca2cb06a6e8227780f5e47,Rewrite inline parser,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-21 15:41:45+02:00,-7200,2013-06-21 15:41:45+02:00,-7200,True,False,['parser.py'],['1e475eff8c391b929dbc3cc329885ae6bae1a1bc'],67,61,128,1,1.0,1.0,0.0
0a241936cb7bc891c02ff293944a3b3cb956004b,Fix issue with markup spanning multiple lines,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-21 16:14:43+02:00,-7200,2013-06-21 16:14:43+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['a50d7e223a71a9775dca2cb06a6e8227780f5e47'],2,22,24,2,0.0,0.0,0.0
f32cfe56436f314f436de5b6b8b4ba42f2c1fae0,Fix an issue with escaping of inline markup,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-21 21:37:01+02:00,-7200,2013-06-21 21:37:01+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['0a241936cb7bc891c02ff293944a3b3cb956004b'],5,25,30,2,0.05555555555555555,1.0,1.0
c375eda1584a9a72a142a072a8588fb248a1fb73,Fix line length,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-21 22:07:48+02:00,-7200,2013-06-21 22:07:48+02:00,-7200,True,False,['parser.py'],['f32cfe56436f314f436de5b6b8b4ba42f2c1fae0'],1,8,9,1,0.0,1.0,1.0
3edd035a7c27d6104f8d63ff5c9eedbc6be073a6,Fix escaping bug with parse_inline,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-21 22:33:46+02:00,-7200,2013-06-21 22:33:46+02:00,-7200,True,False,['parser.py'],['c375eda1584a9a72a142a072a8588fb248a1fb73'],1,1,2,1,,,
7a6985b2f19d743f4400aa844fa8a4e17b1c28dd,Add test for Parser.from_bytes(),Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-21 22:46:34+02:00,-7200,2013-06-21 22:46:34+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['3edd035a7c27d6104f8d63ff5c9eedbc6be073a6'],2,20,22,2,1.0,1.0,1.0
43998710931e55798158c8b3acbf1c1496632cfd,Add coverage targets to Makefile,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-24 05:43:01+02:00,-7200,2013-06-24 05:43:01+02:00,-7200,True,False,"['.gitignore', 'Makefile']",['7a6985b2f19d743f4400aa844fa8a4e17b1c28dd'],6,17,23,2,,,
b60bbd0ea214a348ca59d864e850e2d635fd6b8b,Test dependencies more extensively on travis,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-24 11:09:14+02:00,-7200,2013-06-24 11:09:14+02:00,-7200,True,False,"['.travis-devel-requirements.txt', '.travis-lowest-requirements.txt', '.travis-release-requirements.txt', '.travis.yml']",['43998710931e55798158c8b3acbf1c1496632cfd'],1,10,11,4,,,
a6865dd30d47595ab7fabe13232790b501c49e10,Add PushableIterator,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-06-27 15:10:57+02:00,-7200,2013-06-27 15:10:57+02:00,-7200,True,False,"['parser.py', 'utils.py']",['b60bbd0ea214a348ca59d864e850e2d635fd6b8b'],22,46,68,2,1.0,1.0,1.0
263a438d794cec4937f14adc73494e242e4373f6,"Allow reentrant inline parsing

This should allow parsing nested inline markup by calling
_parse_inline()",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-05 20:18:31+02:00,-7200,2013-07-05 20:18:31+02:00,-7200,True,False,['parser.py'],['a6865dd30d47595ab7fabe13232790b501c49e10'],4,6,10,1,1.0,1.0,1.0
743fe89b3c517a77efcc7b2c76e44408df3ba60b,"Rewrite inline tokenization

This makes the tokenization code significantly more readable and
allows much more powerful tokenization going further.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-05 21:48:02+02:00,-7200,2013-07-05 21:48:02+02:00,-7200,True,False,['parser.py'],['263a438d794cec4937f14adc73494e242e4373f6'],36,56,92,1,1.0,0.0,1.0
5364e77ed20ef6ef6b0f095e2df695062a610234,Add references,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-05 23:08:02+02:00,-7200,2013-07-05 23:08:02+02:00,-7200,True,False,"['_compat.py', 'ast.py', 'parser.py', 'test_parser.py']",['743fe89b3c517a77efcc7b2c76e44408df3ba60b'],10,104,114,4,0.6764705882352942,0.6764705882352942,0.8676470588235294
7dfc94ad267c0311fd4d41ffff2541c9ecd7c824,Add type to reference,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 00:15:53+02:00,-7200,2013-07-06 00:15:53+02:00,-7200,True,False,"['ast.py', 'parser.py', 'test_parser.py']",['5364e77ed20ef6ef6b0f095e2df695062a610234'],6,47,53,3,0.11428571428571428,1.0,0.7428571428571429
4157d1c9eb8120542a285ed16d7cb0aaa00f82f1,Add definitions,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 01:09:09+02:00,-7200,2013-07-06 01:09:09+02:00,-7200,True,False,"['ast.py', 'parser.py', 'test_parser.py']",['7dfc94ad267c0311fd4d41ffff2541c9ecd7c824'],2,72,74,3,0.5531914893617021,0.9574468085106383,0.8936170212765957
52fa6a9e1d4fb9f8397cbd20a7829b74558afeba,Add types to definitions,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 01:29:18+02:00,-7200,2013-07-06 01:29:18+02:00,-7200,True,False,"['ast.py', 'parser.py', 'test_parser.py']",['4157d1c9eb8120542a285ed16d7cb0aaa00f82f1'],3,38,41,3,0.9444444444444444,1.0,0.9444444444444444
efa946b127534985c696d4a82fe153da60e59991,Add transformations for references/definitions,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 01:53:44+02:00,-7200,2013-07-06 01:53:44+02:00,-7200,True,False,"['ast.py', 'transformations.py', 'test_transformations.py']",['52fa6a9e1d4fb9f8397cbd20a7829b74558afeba'],4,68,72,3,1.0,1.0,0.9148936170212766
4e40f02d4c955da0209c7c96a2169cc54571c178,Add inline definitions,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 02:51:20+02:00,-7200,2013-07-06 02:51:20+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['efa946b127534985c696d4a82fe153da60e59991'],5,26,31,2,0.0,1.0,0.7058823529411765
08797c90516dbf23d32e73f8a35129bf7a678559,Fix references with types and inline definitions,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 02:59:16+02:00,-7200,2013-07-06 02:59:16+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['4e40f02d4c955da0209c7c96a2169cc54571c178'],1,17,18,2,0.7333333333333333,1.0,0.7333333333333333
ca64decd1aedcff693b151c8309da71acf8183d0,Refactor parse_reference,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 03:13:57+02:00,-7200,2013-07-06 03:13:57+02:00,-7200,True,False,['parser.py'],['08797c90516dbf23d32e73f8a35129bf7a678559'],5,8,13,1,0.0,1.0,0.0
0e5af9b585aa448e3e41b532937280b6387c9273,"Don't allow escaped pipes everywhere

Escaping pipes is only necessary within references and definitions",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 03:18:57+02:00,-7200,2013-07-06 03:18:57+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['ca64decd1aedcff693b151c8309da71acf8183d0'],10,1,11,2,1.0,0.0,0.0
bad6ca064a0938ee8d93488f4a87ccd88d0ef410,Refactor parse_reference,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 03:55:30+02:00,-7200,2013-07-06 03:55:30+02:00,-7200,True,False,['parser.py'],['0e5af9b585aa448e3e41b532937280b6387c9273'],24,61,85,1,1.0,0.39285714285714285,0.0
758272b7db7fce611a5c6834d1682ed8870b94af,Add text reference syntax,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 04:40:34+02:00,-7200,2013-07-06 04:40:34+02:00,-7200,True,False,"['ast.py', 'parser.py', 'test_parser.py', 'test_transformations.py']",['bad6ca064a0938ee8d93488f4a87ccd88d0ef410'],26,104,130,4,0.7536231884057971,0.7536231884057971,0.6956521739130435
f3f843ed8c115565659d99eb7bcc70fcaa65d95c,Put signature on Reference in transformations,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 04:51:09+02:00,-7200,2013-07-06 04:51:09+02:00,-7200,True,False,"['transformations.py', 'test_transformations.py']",['758272b7db7fce611a5c6834d1682ed8870b94af'],7,5,12,2,0.0,0.0,0.0
4b77415fdfaca37cc44969588957d55f8908622c,Support references in KurrentWriter,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 05:04:07+02:00,-7200,2013-07-06 05:04:07+02:00,-7200,True,False,"['writers.py', 'test_writers.py']",['f3f843ed8c115565659d99eb7bcc70fcaa65d95c'],0,37,37,2,1.0,1.0,1.0
757a935130d3c425a73f90ee4ca79cb032401e73,Support definitions in KurrentWriter,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 05:16:45+02:00,-7200,2013-07-06 05:16:45+02:00,-7200,True,False,"['writers.py', 'test_writers.py']",['4b77415fdfaca37cc44969588957d55f8908622c'],0,33,33,2,0.4074074074074074,1.0,1.0
d3b540057eb9a90609f521768c0abdefcad93853,Support references in HTML5Writer,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 05:27:43+02:00,-7200,2013-07-06 05:27:43+02:00,-7200,True,False,"['writers.py', 'test_writers.py']",['757a935130d3c425a73f90ee4ca79cb032401e73'],0,14,14,2,1.0,1.0,1.0
97e95a80ba5dc758176ea5874bbe4de785f16d7f,Support definitions in HTML5Writer,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 05:29:47+02:00,-7200,2013-07-06 05:29:47+02:00,-7200,True,False,"['writers.py', 'test_writers.py']",['d3b540057eb9a90609f521768c0abdefcad93853'],0,8,8,2,1.0,1.0,1.0
9d5a6fb9d2b5f0dd03e560e6f46da46902bbee84,Add SingleDocumentBuilder,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 15:59:14+02:00,-7200,2013-07-06 15:59:14+02:00,-7200,True,False,"['MANIFEST.in', 'builders.py', 'parser.py', 'transformations.py', 'single_document_test.kr', 'test_builders.py']",['97e95a80ba5dc758176ea5874bbe4de785f16d7f'],1,102,103,6,1.0,1.0,0.6363636363636364
b1efd2fcf5ab7c05f0bd5f7cbb8e97cecf9c5b33,Add cli,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 23:18:42+02:00,-7200,2013-07-06 23:18:42+02:00,-7200,True,False,"['.travis-devel-requirements.txt', '.travis-lowest-requirements.txt', 'cli.py', 'setup.py', 'test_cli.py']",['9d5a6fb9d2b5f0dd03e560e6f46da46902bbee84'],1,204,205,5,0.5916666666666667,0.75,1.0
a4c9cf6ce23f374402d1e121a656cca538ae87cb,Refactor cli tests,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 23:49:08+02:00,-7200,2013-07-06 23:49:08+02:00,-7200,True,False,['test_cli.py'],['b1efd2fcf5ab7c05f0bd5f7cbb8e97cecf9c5b33'],42,32,74,1,0.0,0.0,0.0
059e51c9ea313930532b4c1139fad300db553a9c,Remove unnecessary newline,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-06 23:49:41+02:00,-7200,2013-07-06 23:49:41+02:00,-7200,True,False,['test_cli.py'],['a4c9cf6ce23f374402d1e121a656cca538ae87cb'],1,0,1,1,,,
efdc8ae7e122504d1b68ddb5d8b49179eab2b915,Define __version__ and __version_info__,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-07 00:26:32+02:00,-7200,2013-07-07 00:26:32+02:00,-7200,True,False,"['__init__.py', 'cli.py', 'setup.py', 'test_cli.py']",['059e51c9ea313930532b4c1139fad300db553a9c'],3,24,27,4,1.0,1.0,1.0
ce43f4019484caa4f3656df02e3d365725522316,"Add ManWriter

This can be used to create man pages, although references and
definitions are as of yet unsupported.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-07 17:40:32+02:00,-7200,2013-07-07 17:40:32+02:00,-7200,True,False,"['.travis.yml', 'Makefile', 'cli.py', 'writers.py', 'conftest.py', 'test_builders.py', 'test_writers.py', 'tox.ini']",['efdc8ae7e122504d1b68ddb5d8b49179eab2b915'],18,277,295,8,0.5125628140703518,1.0,0.8492462311557789
21b2087a868365e5583ae56b2a0beea568279fd8,Ignore .DS_STORE files,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-07 17:43:46+02:00,-7200,2013-07-07 17:43:46+02:00,-7200,True,False,['.gitignore'],['ce43f4019484caa4f3656df02e3d365725522316'],0,1,1,1,,,
cba95669e63247e2d8be05c718c23420cac932ce,Add README,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-07 18:00:54+02:00,-7200,2013-07-07 18:00:54+02:00,-7200,True,False,['README'],['21b2087a868365e5583ae56b2a0beea568279fd8'],0,11,11,1,,,
3916e6e69134a6664108e0134c6b7cdae56da336,"s/, understand/and understand in README",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-07 18:01:28+02:00,-7200,2013-07-07 18:01:28+02:00,-7200,True,False,['README'],['cba95669e63247e2d8be05c718c23420cac932ce'],1,1,2,1,,,
b9b232a7bfff84e8d2b4f82aa8a23696af1c4d13,"Add Document.metadata

This removes Document.title, the title is now part of the metadata.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-07 20:18:46+02:00,-7200,2013-07-07 20:18:46+02:00,-7200,True,False,"['ast.py', 'transformations.py', 'writers.py', 'test_ast.py', 'test_transformations.py', 'test_writers.py']",['3916e6e69134a6664108e0134c6b7cdae56da336'],12,12,24,6,,,
e1d8facf177bc6ba749aa6996061befe1c695d76,"Fix missing definition bug during transformations

DefaultReferenceTransformation assumed the existance of a definition
corresponding to each reference. It will not ignore references for which
this is not the case.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-07 22:49:41+02:00,-7200,2013-07-07 22:49:41+02:00,-7200,True,False,"['transformations.py', 'test_transformations.py']",['b9b232a7bfff84e8d2b4f82aa8a23696af1c4d13'],1,9,10,2,0.0,1.0,1.0
b1214a1d82532490c112db353a13cffb77a2eb6a,Add TransactionIterator,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-08 23:19:19+02:00,-7200,2013-07-08 23:19:19+02:00,-7200,True,False,"['utils.py', 'test_utils.py']",['e1d8facf177bc6ba749aa6996061befe1c695d76'],0,134,134,2,1.0,1.0,0.8148148148148148
adc2cfb4650368159dd35416bcce9d46df2001cc,Use TransactionIterator for inline parsing,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-08 23:22:17+02:00,-7200,2013-07-08 23:22:17+02:00,-7200,True,False,['parser.py'],['b1214a1d82532490c112db353a13cffb77a2eb6a'],5,4,9,1,1.0,1.0,1.0
d95b68932a35a0adae1cf03b8e670b542257c77f,Add Transaction objects to TransactionIterator,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-08 23:58:47+02:00,-7200,2013-07-08 23:58:47+02:00,-7200,True,False,"['utils.py', 'test_utils.py']",['adc2cfb4650368159dd35416bcce9d46df2001cc'],10,32,42,2,0.0,1.0,0.7647058823529411
7f0468da8e3303fb60db07faaa2f4a64fdab2883,Add default_failure_exc to TransactionIterator,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 00:06:44+02:00,-7200,2013-07-09 00:06:44+02:00,-7200,True,False,['utils.py'],['d95b68932a35a0adae1cf03b8e670b542257c77f'],2,6,8,1,1.0,1.0,0.0
03b7154d5a4c6a1ebc599e9d779d6a113098ea17,Add Transaction.lookahead(silent=),Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 00:23:48+02:00,-7200,2013-07-09 00:23:48+02:00,-7200,True,False,"['utils.py', 'test_utils.py']",['7f0468da8e3303fb60db07faaa2f4a64fdab2883'],3,16,19,2,1.0,1.0,0.0
bbf362b89782d9c0bb830966e496eb942b3fb0e6,Remove unused TransactionIterator.remaining,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 00:43:14+02:00,-7200,2013-07-09 00:43:14+02:00,-7200,True,False,['utils.py'],['03b7154d5a4c6a1ebc599e9d779d6a113098ea17'],1,0,1,1,0.0,0.0,1.0
6d200ee7b426d9dfdf0611cd01cadff9a1bf811f,Add TransactionIterator.replace,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 00:55:43+02:00,-7200,2013-07-09 00:55:43+02:00,-7200,True,False,"['utils.py', 'test_utils.py']",['bbf362b89782d9c0bb830966e496eb942b3fb0e6'],0,11,11,2,1.0,1.0,1.0
b974c18765585ca3088b34b2872a113eeff7503d,Base LineIterator on TransactionIterator,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 01:00:19+02:00,-7200,2013-07-09 01:00:19+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['6d200ee7b426d9dfdf0611cd01cadff9a1bf811f'],30,32,62,2,0.0,0.0,0.0
44ebf5d1fff57d76c49d766815fef24c53db4e95,Refactor Parser by using transactions,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 01:18:22+02:00,-7200,2013-07-09 01:18:22+02:00,-7200,True,False,['parser.py'],['b974c18765585ca3088b34b2872a113eeff7503d'],20,23,43,1,1.0,1.0,1.0
fd898375206c2244adcf8208dbc836d692eb3547,Replace TransactionIterator.replace() with .push(),Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 05:16:19+02:00,-7200,2013-07-09 05:16:19+02:00,-7200,True,False,"['parser.py', 'utils.py', 'test_utils.py']",['44ebf5d1fff57d76c49d766815fef24c53db4e95'],11,33,44,3,1.0,1.0,0.9473684210526315
d7b722c1ae0d9636044084d74ac85c3099a413b8,Refactor _parse_inline to rely on transactions,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 19:03:40+02:00,-7200,2013-07-09 19:03:40+02:00,-7200,True,False,['parser.py'],['fd898375206c2244adcf8208dbc836d692eb3547'],13,29,42,1,0.0,0.0,1.0
cdaac2d8e3a0762953c0942b46737c58be062528,Rely on transactions in parse_definition,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 20:00:15+02:00,-7200,2013-07-09 20:00:15+02:00,-7200,True,False,"['parser.py', 'utils.py']",['d7b722c1ae0d9636044084d74ac85c3099a413b8'],4,5,9,2,1.0,1.0,0.0
93ce0939546873411668c6da99e74d0f262baa1d,Handle reference without closing bracket as text,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 20:30:20+02:00,-7200,2013-07-09 20:30:20+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['cdaac2d8e3a0762953c0942b46737c58be062528'],14,28,42,2,0.0,0.0,1.0
e3b117b9bf1ca0f5a696eb253c670e562a4061ee,Add another test for missing closing bracket,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 20:32:29+02:00,-7200,2013-07-09 20:32:29+02:00,-7200,True,False,['test_parser.py'],['93ce0939546873411668c6da99e74d0f262baa1d'],0,8,8,1,1.0,1.0,1.0
1c6bb19505999e12bfeadee0b20bbf8fb04a3f21,Remove print left from debugging,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 20:34:26+02:00,-7200,2013-07-09 20:34:26+02:00,-7200,True,False,['parser.py'],['e3b117b9bf1ca0f5a696eb253c670e562a4061ee'],1,0,1,1,1.0,1.0,0.0
5b7507ec752010229f3c204376cbef6283d1e7b0,Handle reference definition without closing paren,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-09 22:19:27+02:00,-7200,2013-07-09 22:19:27+02:00,-7200,True,False,"['parser.py', 'utils.py', 'test_parser.py']",['1c6bb19505999e12bfeadee0b20bbf8fb04a3f21'],9,39,48,3,0.2857142857142857,0.8928571428571429,0.75
78df79f6eeb0dd53d2e4761fc4ef5914059096e0,Turn InlineTokenizer into a TransactionIterator,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 03:18:53+02:00,-7200,2013-07-10 03:18:53+02:00,-7200,True,False,['parser.py'],['5b7507ec752010229f3c204376cbef6283d1e7b0'],15,17,32,1,,,
8f7b07bd1412709fd5addae8dc221effaaa8d8c7,Add InlineTokenizer.expect,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 03:27:13+02:00,-7200,2013-07-10 03:27:13+02:00,-7200,True,False,['parser.py'],['78df79f6eeb0dd53d2e4761fc4ef5914059096e0'],4,9,13,1,1.0,1.0,1.0
79e2a1364587e17564d9405f9c0ef98e482b9356,Refactor parse_reference,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 03:55:19+02:00,-7200,2013-07-10 03:55:19+02:00,-7200,True,False,['parser.py'],['8f7b07bd1412709fd5addae8dc221effaaa8d8c7'],87,67,154,1,0.0,0.0,1.0
a51bc7b00c8a5337987a30a40049bca5f56fdf2c,Add tests for reference parsing edge cases,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 04:05:04+02:00,-7200,2013-07-10 04:05:04+02:00,-7200,True,False,['test_parser.py'],['79e2a1364587e17564d9405f9c0ef98e482b9356'],0,64,64,1,1.0,1.0,1.0
38b6960419f8e56c4872da42e4648e9a5c816104,"Handle an error with reference definitions

Previously a reference with type was completely treated as text if
followd by a syntactically wrong definition.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 04:09:01+02:00,-7200,2013-07-10 04:09:01+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['a51bc7b00c8a5337987a30a40049bca5f56fdf2c'],0,49,49,2,0.8478260869565217,0.8478260869565217,1.0
4b7917e2cce5e42bb5fafe19a9ce77497a2275dd,"Fix error handling of references with text

Previously the entire reference was treated into text, now we treat what
appears to be the target as text and turn the rest into a reference so
that what appears to be the text becomes the target.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 04:16:59+02:00,-7200,2013-07-10 04:16:59+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['38b6960419f8e56c4872da42e4648e9a5c816104'],0,47,47,2,0.8863636363636364,0.8863636363636364,1.0
1e5c37261260f4be4e52b1e00905be0f7af0cc34,Add more tests for reference edge cases,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 04:23:02+02:00,-7200,2013-07-10 04:23:02+02:00,-7200,True,False,['test_parser.py'],['4b7917e2cce5e42bb5fafe19a9ce77497a2275dd'],0,42,42,1,1.0,1.0,1.0
c417c508116d59a5479b86472c487ed0d2bf6622,"Fix error handling of references with text and definitions

Previously if the definition was syntactically wrong the target was
treated as text, this fixes it.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 04:26:20+02:00,-7200,2013-07-10 04:26:20+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['1e5c37261260f4be4e52b1e00905be0f7af0cc34'],0,52,52,2,0.8571428571428571,0.8571428571428571,1.0
236e9e6159115e19d405b3db218a7a9e90ab234e,"Fix error handling with references with text, types and definitions

If the definition was syntactically wrong type and target were ignored,
this fixes it.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 04:33:19+02:00,-7200,2013-07-10 04:33:19+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['c417c508116d59a5479b86472c487ed0d2bf6622'],0,54,54,2,0.8235294117647058,0.8235294117647058,1.0
e6e698d0db7684f247c0c88e74a91b1cbbc59987,Fix handling of missing asterisk in parse_emphasis,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 04:40:44+02:00,-7200,2013-07-10 04:40:44+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['236e9e6159115e19d405b3db218a7a9e90ab234e'],0,20,20,2,0.8888888888888888,0.8888888888888888,1.0
2b23f6e06ed50731bdb4872649497c9673cc5e61,Fix handling of missing asterisks in parse_strong,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 04:43:41+02:00,-7200,2013-07-10 04:43:41+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['e6e698d0db7684f247c0c88e74a91b1cbbc59987'],0,20,20,2,0.8888888888888888,0.8888888888888888,1.0
b8955f44632cf3027e17d861909cfc446c227dd5,"Fix TransactionIterator bug if pushed items

Previously items that were pushed and consumed within a transaction
leaked even if the transaction failed.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 17:28:15+02:00,-7200,2013-07-10 17:28:15+02:00,-7200,True,False,"['utils.py', 'test_utils.py']",['2b23f6e06ed50731bdb4872649497c9673cc5e61'],4,13,17,2,0.0,0.0,1.0
666a08be6f90c2cfd911953505d58ee3e30050a3,Add block quotes,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 17:37:54+02:00,-7200,2013-07-10 17:37:54+02:00,-7200,True,False,"['ast.py', 'parser.py', 'test_parser.py']",['b8955f44632cf3027e17d861909cfc446c227dd5'],0,86,86,3,0.6891891891891891,1.0,1.0
7761e1339edfbbca7e687ed48dcae3586a659062,Add BlockQuote support to HTML5Writer,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 17:42:02+02:00,-7200,2013-07-10 17:42:02+02:00,-7200,True,False,"['writers.py', 'test_writers.py']",['666a08be6f90c2cfd911953505d58ee3e30050a3'],0,14,14,2,1.0,1.0,1.0
df01edd5438d76ac3d40e53a698ebf3f5ebf5573,Redesign Writer,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 19:04:45+02:00,-7200,2013-07-10 19:04:45+02:00,-7200,True,False,"['writers.py', 'test_builders.py', 'test_writers.py']",['7761e1339edfbbca7e687ed48dcae3586a659062'],56,47,103,3,1.0,0.0,0.1111111111111111
24b3b5a45baf9e9a15e603f249d29f6f2aa24eb2,Support BlockQuote in KurrentWriter,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 19:08:48+02:00,-7200,2013-07-10 19:08:48+02:00,-7200,True,False,"['writers.py', 'test_writers.py']",['df01edd5438d76ac3d40e53a698ebf3f5ebf5573'],0,27,27,2,0.18181818181818182,1.0,1.0
2d89cd240271f57ff24435e4b2bec9ce6fb82c59,"Fix handling of emphasis and strong in ManWriter

Previously unintended spaces were inserted.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 20:23:08+02:00,-7200,2013-07-10 20:23:08+02:00,-7200,True,False,"['writers.py', 'test_writers.py']",['24b3b5a45baf9e9a15e603f249d29f6f2aa24eb2'],5,13,18,2,1.0,1.0,0.8333333333333334
64bd56fe532a45ab730f8e9298bfc02209c1a744,Fix nesting of lists in ManWriter output,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 21:26:39+02:00,-7200,2013-07-10 21:26:39+02:00,-7200,True,False,"['writers.py', 'test_writers.py']",['2d89cd240271f57ff24435e4b2bec9ce6fb82c59'],16,70,86,2,0.28,1.0,0.7
bd0553be8ea7f595109e68073bfa9b5c82a487a4,Refactor TestManWriter.test_ordered_list,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-10 21:29:42+02:00,-7200,2013-07-10 21:29:42+02:00,-7200,True,False,['test_writers.py'],['64bd56fe532a45ab730f8e9298bfc02209c1a744'],48,6,54,1,1.0,0.0,0.0
3ad86fe3454d89c1bfa203981179fa5f461c3255,"Add support for block quotes to ManWriter

This does not work entirely but cannot be easily fixed with the current
design.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-11 00:48:54+02:00,-7200,2013-07-11 00:48:54+02:00,-7200,True,False,"['writers.py', 'test_writers.py']",['bd0553be8ea7f595109e68073bfa9b5c82a487a4'],0,29,29,2,1.0,1.0,1.0
a3986e37400b824e2ec58153afa3d23dc8886fd5,Split up kurrent.writers into a package,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-11 01:48:23+02:00,-7200,2013-07-11 01:48:23+02:00,-7200,True,False,"['writers.py', '__init__.py', 'base.py', 'html.py', 'kurrent.py', 'man.py', 'setup.py']",['3ad86fe3454d89c1bfa203981179fa5f461c3255'],358,407,765,7,,,
3229878b809afdcc29e67a807ab2ce32082bf7f0,Use markupsafe.escape directly,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-11 01:54:58+02:00,-7200,2013-07-11 01:54:58+02:00,-7200,True,False,['html.py'],['a3986e37400b824e2ec58153afa3d23dc8886fd5'],4,4,8,1,,,
e4f1ae9c9c8e2a1d61ccb78ce6a21d8f51eda71d,Escape title in HTML5Writer,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-11 01:58:42+02:00,-7200,2013-07-11 01:58:42+02:00,-7200,True,False,"['html.py', 'test_writers.py']",['3229878b809afdcc29e67a807ab2ce32082bf7f0'],3,3,6,2,,,
cd76b534b820bd0132e5062468a4d7e384e61b56,Refactor HTML5Writer,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-11 02:07:33+02:00,-7200,2013-07-11 02:07:33+02:00,-7200,True,False,['html.py'],['e4f1ae9c9c8e2a1d61ccb78ce6a21d8f51eda71d'],35,16,51,1,0.0,0.0,0.0
16a25d7f78081c2357bdd0dc0f27f39bca758a97,Escape properly in KurrentWriter,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-11 03:11:11+02:00,-7200,2013-07-11 03:11:11+02:00,-7200,True,False,"['utils.py', 'kurrent.py', 'test_writers.py']",['cd76b534b820bd0132e5062468a4d7e384e61b56'],1,32,33,3,1.0,1.0,1.0
6fd7a764835cd46efdd9ad0507f54421230b3ffa,"Change HTML5Writer output formatting

Previously no indentation or newlines were emitted which was annoying
for debugging etc. Now block tags are followed by a newline and their
content is indented.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-11 03:27:52+02:00,-7200,2013-07-11 03:27:52+02:00,-7200,True,False,"['html.py', 'test_builders.py', 'test_writers.py']",['16a25d7f78081c2357bdd0dc0f27f39bca758a97'],18,67,85,3,0.2,1.0,0.8222222222222222
6858cd5048f8fa7c1ce6e47638e95d4910c1b54e,"Rewrite ManWriter

roff does not lend itself well to being generated from kurrent ASTs,
which made a couple of rather ugly hacks both in the implementation and
in the emitted roff necessary.

To solve this issue the new ManWriter compiles the kurrent AST into a
roff AST, which the ManWriter then uses to emit roff code.

The ManWriter code is now very straight forward and the ugly hacks used
previously are now replaced with clean modifications of the roff AST.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-11 07:42:31+02:00,-7200,2013-07-11 07:42:31+02:00,-7200,True,False,"['man.py', 'test_writers.py']",['6fd7a764835cd46efdd9ad0507f54421230b3ffa'],99,212,311,2,0.7887323943661971,0.7323943661971831,1.0
0f8be350f25a313ff9ba6c2f549673fd1f90eebe,Rename Compiler to Translator,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-11 16:52:28+02:00,-7200,2013-07-11 16:52:28+02:00,-7200,True,False,['man.py'],['6858cd5048f8fa7c1ce6e47638e95d4910c1b54e'],26,30,56,1,1.0,1.0,1.0
bef9309cb11cf65cddec8815b7d01a304331f500,Perform man AST folding into seperate function,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-11 17:12:52+02:00,-7200,2013-07-11 17:12:52+02:00,-7200,True,False,['man.py'],['0f8be350f25a313ff9ba6c2f549673fd1f90eebe'],19,26,45,1,0.0,0.0,1.0
7febc3e6447e6b0f2c5848ba08bd66334d31f90a,Properly merge HangingIndent,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-11 18:18:11+02:00,-7200,2013-07-11 18:18:11+02:00,-7200,True,False,"['man.py', 'test_writers.py']",['bef9309cb11cf65cddec8815b7d01a304331f500'],4,43,47,2,0.0,0.8181818181818182,0.9090909090909091
3a17ecaccaf026897ebc776242fb487223496ed5,Dynamically create file extensions,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-11 21:02:12+02:00,-7200,2013-07-11 21:02:12+02:00,-7200,True,False,"['builders.py', 'cli.py', 'base.py', 'html.py', 'kurrent.py', 'man.py', 'conftest.py', 'test_builders.py', 'test_writers.py']",['7febc3e6447e6b0f2c5848ba08bd66334d31f90a'],17,78,95,9,1.0,1.0,0.8285714285714286
c3f852cada7f65375babaecd8bc96559e51cede6,"Remove blocks in parser

Previously the input was separated into blocks, this made for a simple
approach initially because we didn't have transactions but has proven to
be very inconvenient in experiments with additional elements.

This is a rewrite of the Parser in which the LineIterator is accessed
directly by all parse_* methods.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-13 23:25:59+02:00,-7200,2013-07-13 23:25:59+02:00,-7200,True,False,"['parser.py', 'test_builders.py', 'test_parser.py']",['3a17ecaccaf026897ebc776242fb487223496ed5'],310,188,498,3,0.9576271186440678,0.847457627118644,0.2033898305084746
ea460059c1a4df50da5609c39627d04966ed57e2,Whitespace cleanup,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-14 00:21:14+02:00,-7200,2013-07-14 00:21:14+02:00,-7200,True,False,"['cli.py', 'base.py', 'man.py', 'conftest.py', 'test_parser.py']",['c3f852cada7f65375babaecd8bc96559e51cede6'],1,4,5,5,,,
e12dab3a6047e875eef2d99efe312fbdcc4a936d,Add asserts for locations to TestReference,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-14 01:52:27+02:00,-7200,2013-07-14 01:52:27+02:00,-7200,True,False,['test_parser.py'],['ea460059c1a4df50da5609c39627d04966ed57e2'],12,166,178,1,0.0,1.0,1.0
dffbe8b15268f757b39c021c293ff2b36cfb12ce,Change lineno on LineIterator.push,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-14 02:01:59+02:00,-7200,2013-07-14 02:01:59+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['e12dab3a6047e875eef2d99efe312fbdcc4a936d'],0,14,14,2,1.0,1.0,1.0
50c7c8b1f53051990f7adc20eac550621c3e6597,Remove unnecessary LineIterator.lineno property,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-14 02:18:21+02:00,-7200,2013-07-14 02:18:21+02:00,-7200,True,False,['parser.py'],['dffbe8b15268f757b39c021c293ff2b36cfb12ce'],8,0,8,1,0.0,0.0,0.0
2847536cf56e463240ec837e082036dd6b14ebe9,Fix locations in unordered lists,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-14 04:58:47+02:00,-7200,2013-07-14 04:58:47+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['50c7c8b1f53051990f7adc20eac550621c3e6597'],4,63,67,2,0.05084745762711865,0.9322033898305084,1.0
b4e2087c691e5db5ed469d8d00b78c13d34f0c6b,Fix locations in ordered lists,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-14 05:18:10+02:00,-7200,2013-07-14 05:18:10+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['2847536cf56e463240ec837e082036dd6b14ebe9'],0,55,55,2,0.0,1.0,1.0
4170c1ad0b3483673785144f0e426fa939f68f7f,Refactor list parsing code,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-14 05:32:10+02:00,-7200,2013-07-14 05:32:10+02:00,-7200,True,False,['parser.py'],['b4e2087c691e5db5ed469d8d00b78c13d34f0c6b'],17,20,37,1,1.0,1.0,0.0
d322592cf0f9b48940f6ca6b6197442092ef2efb,Add LineIterator.skip_empty(),Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-14 05:37:07+02:00,-7200,2013-07-14 05:37:07+02:00,-7200,True,False,['parser.py'],['4170c1ad0b3483673785144f0e426fa939f68f7f'],2,5,7,1,1.0,1.0,1.0
fc590b5785c7fa2c0dbace8ae6d976eab910aba1,Add support for raw blocks,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-14 06:37:48+02:00,-7200,2013-07-14 06:37:48+02:00,-7200,True,False,"['ast.py', 'parser.py', 'test_parser.py']",['d322592cf0f9b48940f6ca6b6197442092ef2efb'],1,28,29,3,1.0,1.0,0.85
83ece20a2ff27914c0cfcd9e24b8f02c7a721919,Add RawBlock support to KurrentWriter,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-14 06:46:00+02:00,-7200,2013-07-14 06:46:00+02:00,-7200,True,False,"['kurrent.py', 'test_writers.py']",['fc590b5785c7fa2c0dbace8ae6d976eab910aba1'],0,17,17,2,1.0,1.0,1.0
119bd2e07b8be41d9e03270af6a07ced67a64905,Add RawBlock support to HTML5Writer,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-14 06:50:49+02:00,-7200,2013-07-14 06:50:49+02:00,-7200,True,False,"['html.py', 'test_writers.py']",['83ece20a2ff27914c0cfcd9e24b8f02c7a721919'],0,21,21,2,1.0,1.0,1.0
10ed87be9070e55a9817b40c36366325a18e14d2,Refactor ast tests,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-15 04:31:22+02:00,-7200,2013-07-15 04:31:22+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['119bd2e07b8be41d9e03270af6a07ced67a64905'],153,85,238,2,1.0,0.0,0.0
5595759428a59fa08a01ea228819ae47df430522,Add test for Reference,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-15 04:38:18+02:00,-7200,2013-07-15 04:38:18+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['10ed87be9070e55a9817b40c36366325a18e14d2'],3,26,29,2,1.0,1.0,1.0
bbb76bfddaf5034476153f984beb2000d43440c8,Add test for Definition,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-15 04:41:37+02:00,-7200,2013-07-15 04:41:37+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['5595759428a59fa08a01ea228819ae47df430522'],3,20,23,2,1.0,1.0,0.9166666666666666
db4349b45f27504e71456ab1fbcec6ec3b2efd31,Add test for BlockQuote,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-15 04:42:34+02:00,-7200,2013-07-15 04:42:34+02:00,-7200,True,False,['test_ast.py'],['bbb76bfddaf5034476153f984beb2000d43440c8'],1,7,8,1,1.0,1.0,1.0
d56430260cf3c1c64f8fa193dd692dbba67f18d9,Add test for RawBlock,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-15 04:45:40+02:00,-7200,2013-07-15 04:45:40+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['db4349b45f27504e71456ab1fbcec6ec3b2efd31'],3,14,17,2,1.0,1.0,1.0
385d12e4bc57f22ddde3965cf5388ce15eb80504,Add __repr__ methods to ast nodes,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-15 05:31:55+02:00,-7200,2013-07-15 05:31:55+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['d56430260cf3c1c64f8fa193dd692dbba67f18d9'],0,62,62,2,1.0,1.0,1.0
fe602299b7c62b5fd5c526df14eb7cdef35314f5,Fix eq cmp of Location with non-Location,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-15 05:55:51+02:00,-7200,2013-07-15 05:55:51+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['385d12e4bc57f22ddde3965cf5388ce15eb80504'],1,5,6,2,1.0,1.0,1.0
c37b0603ef6da68cde4e367d8f0a8254611bc22c,Refactor Location.__lt__,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-15 06:30:44+02:00,-7200,2013-07-15 06:30:44+02:00,-7200,True,False,['ast.py'],['fe602299b7c62b5fd5c526df14eb7cdef35314f5'],6,4,10,1,0.0,0.0,0.0
2552eaabb7e779d7c85ae5b0a6371368c92e10e9,Fix line length in test_ast tests,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-15 07:13:26+02:00,-7200,2013-07-15 07:13:26+02:00,-7200,True,False,['test_ast.py'],['c37b0603ef6da68cde4e367d8f0a8254611bc22c'],7,34,41,1,1.0,1.0,1.0
128f768e54c0eb2146527fb09104a9cb9c3c4a11,"Add Reference.signature

Previously there was only Reference.definition which was either a
definition object or the string of an inline signature. It was not
possible to have both and in order to make use of the attribute a type
check was necessary.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-15 16:33:17+02:00,-7200,2013-07-15 16:33:17+02:00,-7200,True,False,"['ast.py', 'parser.py', 'html.py', 'kurrent.py', 'test_ast.py', 'test_parser.py', 'test_writers.py']",['2552eaabb7e779d7c85ae5b0a6371368c92e10e9'],34,39,73,7,0.0,1.0,0.8
45efde3f42be7ac0e0e33b1ff3e73c4801d3b340,"Redesign syntax extensions

This redesign replaces Reference with InlineExtension and Definition
with Extension.

Previously we had Reference and Definition as ways to extend kurrent
syntax. These names reflected their internal usage perfectly but I don't
think they accurately reflect how they are intended to be used in
general.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 01:57:39+02:00,-7200,2013-07-16 01:57:39+02:00,-7200,True,False,"['ast.py', 'parser.py', 'transformations.py', 'test_ast.py', 'test_parser.py', 'test_transformations.py', 'test_writers.py']",['128f768e54c0eb2146527fb09104a9cb9c3c4a11'],353,294,647,7,0.0,0.0,0.0
9dc87342fb21de57f29df306811ad2c89d9aacd4,Fix whitespace,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 02:03:37+02:00,-7200,2013-07-16 02:03:37+02:00,-7200,True,False,['transformations.py'],['45efde3f42be7ac0e0e33b1ff3e73c4801d3b340'],3,1,4,1,,,
349784fa7e9c099e12e4e7c85dd53819d356bb3e,Adapt KurrentWriter to new ast nodes,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 03:32:12+02:00,-7200,2013-07-16 03:32:37+02:00,-7200,True,False,"['kurrent.py', 'test_writers.py']",['9dc87342fb21de57f29df306811ad2c89d9aacd4'],5,89,94,2,0.19402985074626866,1.0,1.0
7127061158d352b20891ea244afe36f860ea1fff,Kill Reference and Extension code in HTML5Writer,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 03:33:33+02:00,-7200,2013-07-16 03:33:33+02:00,-7200,True,False,['html.py'],['349784fa7e9c099e12e4e7c85dd53819d356bb3e'],12,0,12,1,0.0,0.0,0.0
32a61d99532e1bcebfcbb4125b70492799a14287,Remove Definiton code in KurrentWriter,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 03:49:15+02:00,-7200,2013-07-16 03:49:15+02:00,-7200,True,False,['kurrent.py'],['7127061158d352b20891ea244afe36f860ea1fff'],15,0,15,1,0.0,0.0,0.0
2b2e3d439500e53db685b513e8d3eff755331044,Add definition list markup,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 06:23:44+02:00,-7200,2013-07-16 06:23:44+02:00,-7200,True,False,"['ast.py', 'parser.py', 'test_ast.py', 'test_parser.py']",['32a61d99532e1bcebfcbb4125b70492799a14287'],12,296,308,4,0.09795918367346938,1.0,0.9836734693877551
d4e3e99bc8d0be062d9da374085078bbe63f65eb,Add definition list support to KurrentWriter,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 06:29:19+02:00,-7200,2013-07-16 06:29:19+02:00,-7200,True,False,"['kurrent.py', 'test_writers.py']",['2b2e3d439500e53db685b513e8d3eff755331044'],0,31,31,2,0.2413793103448276,1.0,1.0
9714f8137e0c00cd26c9d8f6c5c37079605a5347,Add definition list support to HTML5Writer,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 06:35:58+02:00,-7200,2013-07-16 06:35:58+02:00,-7200,True,False,"['html.py', 'test_writers.py']",['d4e3e99bc8d0be062d9da374085078bbe63f65eb'],0,50,50,2,0.2553191489361702,1.0,1.0
9a9212922ab2281d6f27a7bb0c9697ebfa2229fc,Fix exception in kurrent.writers.man.fold(),Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 17:28:32+02:00,-7200,2013-07-16 17:28:32+02:00,-7200,True,False,['man.py'],['9714f8137e0c00cd26c9d8f6c5c37079605a5347'],2,2,4,1,,,
fd4e3d3b993b2400f878610380e59974ca84225a,"Allow escaped dashed

This is useful if you use definition lists to document options.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 17:32:06+02:00,-7200,2013-07-16 17:32:06+02:00,-7200,True,False,['parser.py'],['9a9212922ab2281d6f27a7bb0c9697ebfa2229fc'],1,2,3,1,,,
d08c4e8ffaf6db95753a4f73063e6f4310f3e757,Add definition list support to ManWriter,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 17:48:15+02:00,-7200,2013-07-16 17:48:15+02:00,-7200,True,False,"['man.py', 'test_writers.py']",['fd4e3d3b993b2400f878610380e59974ca84225a'],2,46,48,2,0.325,1.0,1.0
afdcf94ffd852e19517d7645479f1422f0c7d3c8,Complete tested document sample in ManWriter,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 17:53:48+02:00,-7200,2013-07-16 17:53:48+02:00,-7200,True,False,['test_writers.py'],['d08c4e8ffaf6db95753a4f73063e6f4310f3e757'],0,18,18,1,0.0,1.0,1.0
fb74ab4fcf06920b916afdccb6ff804aa1ccf699,Add internationalization support,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 20:58:09+02:00,-7200,2013-07-16 20:58:09+02:00,-7200,True,False,"['.travis-devel-requirements.txt', '.travis-lowest-requirements.txt', 'man.py', 'setup.py', 'test_writers.py', 'tox.ini']",['afdcf94ffd852e19517d7645479f1422f0c7d3c8'],4,43,47,6,0.19047619047619047,1.0,0.8571428571428571
11e928a444b828395fd7d24c5f1c3004571e022f,Use dev version of Babel on travis,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 21:14:23+02:00,-7200,2013-07-16 21:14:23+02:00,-7200,True,False,"['.travis-lowest-requirements.txt', '.travis-release-requirements.txt']",['fb74ab4fcf06920b916afdccb6ff804aa1ccf699'],1,2,3,2,,,
79670ab77861b79a60eab7c03f0109f3664e36f9,Download and install cldr on travis,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 21:28:36+02:00,-7200,2013-07-16 21:28:36+02:00,-7200,True,False,['.travis.yml'],['11e928a444b828395fd7d24c5f1c3004571e022f'],0,1,1,1,,,
9398bce4a60aaabe5a3fd792b66322cac95446ea,Specify src directory on travis,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 21:31:36+02:00,-7200,2013-07-16 21:31:36+02:00,-7200,True,False,['.travis.yml'],['79670ab77861b79a60eab7c03f0109f3664e36f9'],1,1,2,1,,,
47d6742161f17d485c8c907ab5ff263e87346166,Fix pip install invocation in travis config,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 21:36:27+02:00,-7200,2013-07-16 21:36:27+02:00,-7200,True,False,['.travis.yml'],['9398bce4a60aaabe5a3fd792b66322cac95446ea'],2,2,4,1,,,
65f495d8c5bb4fc965fd3fe919f07d39afcd6d55,Fix babel install on travis,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 22:17:20+02:00,-7200,2013-07-16 22:17:20+02:00,-7200,True,False,['.travis.yml'],['47d6742161f17d485c8c907ab5ff263e87346166'],2,4,6,1,,,
e8933781fae61b23d5b98c086fe158128ca3978c,Remove bad command from travis config,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-16 22:20:20+02:00,-7200,2013-07-16 22:20:20+02:00,-7200,True,False,['.travis.yml'],['65f495d8c5bb4fc965fd3fe919f07d39afcd6d55'],1,0,1,1,,,
9bc542da589b97985f3524afd4a95caef485bfaa,Fix TestInlineExtension test names,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-17 01:15:58+02:00,-7200,2013-07-17 01:15:58+02:00,-7200,True,False,['test_parser.py'],['e8933781fae61b23d5b98c086fe158128ca3978c'],24,24,48,1,,,
862d15c7834fcf05ef5fd1316f06f6a999704a6d,Add ParentNode.remove(),Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-17 02:37:35+02:00,-7200,2013-07-17 02:37:35+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['9bc542da589b97985f3524afd4a95caef485bfaa'],0,10,10,2,1.0,1.0,1.0
cc4315e4b668bb374a6c5e9e794429861a6021d3,Add ASTNode.remove_from_parent(),Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-17 02:40:27+02:00,-7200,2013-07-17 02:40:27+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['862d15c7834fcf05ef5fd1316f06f6a999704a6d'],0,8,8,2,1.0,1.0,1.0
4746b4f27c0eeff41703519183c2e53ae050aefc,Add Link*Transformation,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-18 20:34:16+02:00,-7200,2013-07-18 20:34:16+02:00,-7200,True,False,"['ast.py', 'transformations.py', 'test_ast.py', 'test_transformations.py']",['cc4315e4b668bb374a6c5e9e794429861a6021d3'],2,110,112,4,1.0,1.0,0.95
6dcb3e50501de2eb7d97865a5b5486c7d81bc964,Allow writer specific transformations,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-18 20:38:26+02:00,-7200,2013-07-18 20:38:26+02:00,-7200,True,False,"['builders.py', 'base.py']",['4746b4f27c0eeff41703519183c2e53ae050aefc'],1,7,8,2,1.0,1.0,1.0
21f7212545128133cadaaefe4cf09c93965f7884,Implement Link support in HTMLWriter,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-18 20:57:39+02:00,-7200,2013-07-18 20:57:39+02:00,-7200,True,False,"['transformations.py', 'html.py', 'single_document_link_test.kr', 'test_builders.py', 'test_writers.py']",['6dcb3e50501de2eb7d97865a5b5486c7d81bc964'],35,75,110,5,0.28,1.0,1.0
bcff6c492b9f9d0d36e8c584d2c29b463314c467,Allow passing LineIterator objects to Parser,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-18 22:25:32+02:00,-7200,2013-07-18 22:25:32+02:00,-7200,True,False,['parser.py'],['21f7212545128133cadaaefe4cf09c93965f7884'],13,24,37,1,1.0,1.0,1.0
430944f5b2e975d88f93a9855dc56c5bee6c37ae,Add location info to Extension in parser,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-18 23:44:14+02:00,-7200,2013-07-18 23:44:14+02:00,-7200,True,False,"['parser.py', 'test_parser.py']",['bcff6c492b9f9d0d36e8c584d2c29b463314c467'],4,40,44,2,0.0,0.1388888888888889,1.0
bd163cd118580762096ba6855bf0a13d91e6eb06,Add location info tests to TestQuote,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-18 23:52:10+02:00,-7200,2013-07-18 23:52:10+02:00,-7200,True,False,['test_parser.py'],['430944f5b2e975d88f93a9855dc56c5bee6c37ae'],0,16,16,1,0.0,1.0,1.0
8f98bc3569db91964e8c3f6ed5af98e4640d3226,Fix line length,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-18 23:59:55+02:00,-7200,2013-07-18 23:59:55+02:00,-7200,True,False,['test_parser.py'],['bd163cd118580762096ba6855bf0a13d91e6eb06'],1,3,4,1,1.0,1.0,1.0
08d984ed7deb951edaa28fd345b198bd0a57ac63,ParentNode.replace() takes multiple new nodes,Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-19 02:50:42+02:00,-7200,2013-07-19 02:50:42+02:00,-7200,True,False,"['ast.py', 'test_ast.py']",['8f98bc3569db91964e8c3f6ed5af98e4640d3226'],2,15,17,2,1.0,1.0,0.6363636363636364
245a5cc0a6ebf08408a66af6d369cdd18c2ab158,"Bump required Babel minimum version to 1.0

Babel 1.0, unlike the previous version, supports Python 3, which Kurrent
targets.",Daniel Neuhäuser,dasdasich@gmail.com,Daniel Neuhäuser,dasdasich@gmail.com,2013-07-26 19:59:12+02:00,-7200,2013-07-26 19:59:12+02:00,-7200,True,False,"['.travis-lowest-requirements.txt', 'setup.py', 'tox.ini']",['08d984ed7deb951edaa28fd345b198bd0a57ac63'],8,2,10,3,,,
