Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
e105c0b4e64a0471f3f5375a86342c33cb942e23,Start of project; it writes a few frames,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-20 22:10:31-08:00,28800,2012-11-20 22:10:31-08:00,28800,True,False,"['TODO.txt', 'ffmpegmodule.c', 'setup.py']",[],0,235,235,3,0.3282442748091603,0.3282442748091603,0.9007633587786259
08727911119f3215aa483a603ab9763ba6a51feb,Converting to Cython; new module does nothing,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-24 13:17:27-08:00,28800,2012-11-24 13:17:27-08:00,28800,True,False,"['.gitignore', 'Makefile', 'TODO.txt', '__init__.py', 'tutorial.pyx', '__init__.py', 'tutorial.py', 'ffmpegmodule.c', 'libav.pxd', 'setup.py']",['e105c0b4e64a0471f3f5375a86342c33cb942e23'],214,94,308,10,0.7333333333333333,0.7333333333333333,0.10833333333333334
5099c72f8c6fbba09c3083625615b3ed05ff09fc,Cythonized tutorial up to dumping info to stderr,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-24 14:01:44-08:00,28800,2012-11-24 14:01:44-08:00,28800,True,False,"['Makefile', 'tutorial.pyx', 'tutorial.py', 'libav.pxd']",['08727911119f3215aa483a603ab9763ba6a51feb'],9,90,99,4,,,
707c61995aea72be5281f7f1138a072646780f9c,Tutorial up to finding decoder; illegal instruction?!,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-24 14:31:44-08:00,28800,2012-11-24 14:31:44-08:00,28800,True,False,"['Makefile', 'tutorial.pyx', 'libav.pxd']",['5099c72f8c6fbba09c3083625615b3ed05ff09fc'],6,62,68,3,,,
fe9edcdcacf9a375eeb36ff3ab202133a12de8f0,"Fixed the segfault, but why?",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-24 15:46:41-08:00,28800,2012-11-24 15:46:41-08:00,28800,True,False,"['.gitignore', 'tutorial.pyx']",['707c61995aea72be5281f7f1138a072646780f9c'],14,14,28,2,,,
c0162f4c2d4aa49bddf73f718fbfe0a0b19b234a,Saving JPEGS via PIL,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-24 16:55:02-08:00,28800,2012-11-24 16:55:02-08:00,28800,True,False,"['tutorial.pyx', 'libav.pxd']",['fe9edcdcacf9a375eeb36ff3ab202133a12de8f0'],20,213,233,2,,,
1013943ee786d91fddf64b978fa16509dce0d482,Create a buffer with the C-API,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-24 17:27:50-08:00,28800,2012-11-24 17:27:50-08:00,28800,True,False,"['.gitignore', 'tutorial.pyx', 'libav.pxd']",['c0162f4c2d4aa49bddf73f718fbfe0a0b19b234a'],11,23,34,3,,,
bfc08067a13b69b98be978f99bcc3ede0fe59ca2,Make a really basic Qt player,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-25 11:23:10-08:00,28800,2012-11-25 11:23:10-08:00,28800,True,False,"['Makefile', 'tutorial.pyx', 'tutorial.py', 'libav.pxd']",['1013943ee786d91fddf64b978fa16509dce0d482'],14,70,84,4,1.0,1.0,1.0
e9fcfec58ab27b5c738954ca95f3f0ddb27158ea,Add project metadata,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-25 11:23:37-08:00,28800,2012-11-25 11:23:37-08:00,28800,True,False,"['AUTHORS.txt', 'LICENSE.txt', 'README.md', 'setup.py']",['bfc08067a13b69b98be978f99bcc3ede0fe59ca2'],1,44,45,4,,,
307777a8159b1ed7246106c22f0459655fca4e3e,"Register ""av"" on the PyPI",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-25 11:26:25-08:00,28800,2012-11-25 11:26:25-08:00,28800,True,False,['setup.py'],['e9fcfec58ab27b5c738954ca95f3f0ddb27158ea'],1,8,9,1,,,
0f581a2717748f4bf15a609bb17735e6a301aaa6,Split into modules,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-25 12:04:07-08:00,28800,2012-11-25 12:04:12-08:00,28800,True,False,"['Makefile', 'codec.pyx', 'format.pyx', 'tutorial.pyx', 'utils.pxd', 'utils.pyx', 'tutorial.py', 'setup.py']",['307777a8159b1ed7246106c22f0459655fca4e3e'],32,73,105,8,,,
9604d9434b8bbcc3667a247626d84810dc034bb2,Start our own classes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-25 13:32:39-08:00,28800,2012-11-25 13:32:39-08:00,28800,True,False,"['Makefile', 'TODO.txt', '__init__.py', 'core.pyx', 'format.pxd', 'format.pyx', 'tutorial.pyx', 'decode.py', 'tutorial.py', 'libav.pxd', 'libavcodec.pxd', 'libavformat.pxd', 'libavutil.pxd', 'libswscale.pxd', 'setup.py']",['0f581a2717748f4bf15a609bb17735e6a301aaa6'],221,265,486,15,1.0,1.0,1.0
5e9210a12382ff30f7dbc99bc1adf0c78d290f1c,Starting on Codec,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-25 17:24:20-08:00,28800,2012-11-25 17:24:20-08:00,28800,True,False,"['codec.pxd', 'codec.pyx', 'format.pxd', 'format.pyx', 'tutorial.pyx', 'decode.py', 'libav.pxd', 'libavcodec.pxd']",['9604d9434b8bbcc3667a247626d84810dc034bb2'],20,115,135,8,,,
5457a007a1dae79b7c8c324a7d0a0d91673a0dfe,Expose some more properties,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-25 22:44:12-08:00,28800,2012-11-25 22:44:12-08:00,28800,True,False,"['codec.pxd', 'codec.pyx', 'format.pxd', 'format.pyx', 'utils.pxd', 'utils.pyx', 'decode.py', 'libavformat.pxd', 'libavutil.pxd']",['5e9210a12382ff30f7dbc99bc1adf0c78d290f1c'],34,165,199,9,,,
4348cdee6766a4c775f697e75afeb67a71569a11,Add FFmpeg version info (from Maxwell),Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2012-11-26 09:40:51-08:00,28800,2012-11-26 09:40:51-08:00,28800,True,False,['README.md'],['5457a007a1dae79b7c8c324a7d0a0d91673a0dfe'],0,19,19,1,,,
8dfcccf94b5001b409d14140be3425221b884bb6,"Markdown headers dont use ""^""...",Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2012-11-26 09:41:47-08:00,28800,2012-11-26 09:41:47-08:00,28800,True,False,['README.md'],['4348cdee6766a4c775f697e75afeb67a71569a11'],6,3,9,1,,,
a056275d5bcf8497feed6795dbc1c40c7d6db95d,Starting on demuxing,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-26 20:13:56-08:00,28800,2012-11-26 20:13:56-08:00,28800,True,False,"['.gitignore', 'codec.pxd', 'codec.pyx', 'format.pxd', 'format.pyx', 'utils.pyx', 'decode.py', 'libavcodec.pxd', 'libavformat.pxd', 'libavutil.pxd']",['8dfcccf94b5001b409d14140be3425221b884bb6'],23,164,187,10,,,
bd916610fe525a502fdfc422086fa9a67c184014,"Can fully decode ""ass"" subtitles",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-26 21:46:12-08:00,28800,2012-11-26 21:46:12-08:00,28800,True,False,"['codec.pxd', 'codec.pyx', 'format.pxd', 'format.pyx', 'decode.py', 'dump_subtitles.py', 'libavcodec.pxd']",['a056275d5bcf8497feed6795dbc1c40c7d6db95d'],12,202,214,7,,,
bec3f0f7b09597357a3a1083092348cf829a5ab2,Attachments don't have their codecs opened,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-26 22:10:12-08:00,28800,2012-11-26 22:10:22-08:00,28800,True,False,"['codec.pxd', 'codec.pyx', 'libavutil.pxd']",['bd916610fe525a502fdfc422086fa9a67c184014'],6,14,20,3,,,
f4a1c953fd8a46b2c1a23d369e28254e964d3a11,Fix some types,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-26 22:10:27-08:00,28800,2012-11-26 22:10:27-08:00,28800,True,False,"['dump_subtitles.py', 'libavcodec.pxd']",['bec3f0f7b09597357a3a1083092348cf829a5ab2'],7,12,19,2,,,
016814b2c5ca8c04d4e04baa2ad84b09644949e8,Saving bitmap subtitles,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-26 22:33:17-08:00,28800,2012-11-26 22:33:17-08:00,28800,True,False,"['.gitignore', 'codec.pyx', 'dump_subtitles.py', 'libavcodec.pxd']",['f4a1c953fd8a46b2c1a23d369e28254e964d3a11'],1,51,52,4,,,
c548b075eed05e14c38e8f6bcfb87e8a94d55141,Calculate filmstrips,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-11-26 23:48:10-08:00,28800,2012-11-26 23:48:10-08:00,28800,True,False,"['codec.pxd', 'codec.pyx', 'format.pxd', 'format.pyx', 'decode.py', 'dump_subtitles.py', 'filmstrip.py', 'libavcodec.pxd', 'libavformat.pxd', 'libswscale.pxd']",['016814b2c5ca8c04d4e04baa2ad84b09644949e8'],31,253,284,10,,,
7ca55533c7d1ce5886ac092f0202c738e07e65be,Add Travis stub,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-12-07 22:11:57-08:00,28800,2012-12-07 22:11:57-08:00,28800,True,False,['.travis.yml'],['c548b075eed05e14c38e8f6bcfb87e8a94d55141'],0,11,11,1,,,
99480eed77e22ea20570d8c063eecdf6db47c36b,Add Sphinx stub,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-12-07 22:14:43-08:00,28800,2012-12-07 22:14:43-08:00,28800,True,False,"['.gitignore', 'Makefile', 'conf.py', 'index.rst']",['7ca55533c7d1ce5886ac092f0202c738e07e65be'],0,422,422,4,,,
bc523f87de25de54f963f1170efaddda0bf9023d,Travis: Install FFmpeg (?),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-12-07 22:21:46-08:00,28800,2012-12-07 22:21:46-08:00,28800,True,False,['.travis.yml'],['99480eed77e22ea20570d8c063eecdf6db47c36b'],0,4,4,1,,,
f29d64b5cfec868eee4f3fcf3e5b0b167ab506ea,Travis: Another try at FFmpeg,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-12-07 22:27:11-08:00,28800,2012-12-07 22:27:11-08:00,28800,True,False,['.travis.yml'],['bc523f87de25de54f963f1170efaddda0bf9023d'],2,1,3,1,,,
14517f8ac5b2412bcd78098886cabd901a8af5c2,Move most of README into docs,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-12-07 22:40:36-08:00,28800,2012-12-07 22:40:36-08:00,28800,True,False,"['README.md', 'index.rst']",['f29d64b5cfec868eee4f3fcf3e5b0b167ab506ea'],43,54,97,2,,,
fb4f7af253a3e4fe620bdd1a97e3368908179575,Travis: Maybe if we name it directly...,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-12-07 22:44:26-08:00,28800,2012-12-07 22:44:26-08:00,28800,True,False,['.travis.yml'],['14517f8ac5b2412bcd78098886cabd901a8af5c2'],1,1,2,1,,,
87ef93bdb84c2c956206067ed5df79f7361ad8e9,"Travis: Individual libraries, perhaps?",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-12-07 22:48:55-08:00,28800,2012-12-07 22:48:55-08:00,28800,True,False,['.travis.yml'],['fb4f7af253a3e4fe620bdd1a97e3368908179575'],1,1,2,1,,,
b69c63b1379e148316df1c7b0032532c4a38b415,Hardcode a constant for Travis/Linux,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-12-07 22:53:22-08:00,28800,2012-12-07 22:53:22-08:00,28800,True,False,['utils.pyx'],['87ef93bdb84c2c956206067ed5df79f7361ad8e9'],2,8,10,1,,,
84b76a0a123be3f813d1328f64ec192296e186de,Autodoc test,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-12-07 23:06:55-08:00,28800,2012-12-07 23:06:55-08:00,28800,True,False,"['format.pyx', 'format.rst', 'conf.py', 'index.rst']",['b69c63b1379e148316df1c7b0032532c4a38b415'],6,19,25,4,,,
eda7edfd3b33dd6d0e3a51f493a8013eeb3ffba7,Frames are direct buffers,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-12-08 00:45:53-08:00,28800,2012-12-08 00:45:53-08:00,28800,True,False,"['codec.pyx', 'dump_frames.py', 'filmstrip.py', 'libavcodec.pxd']",['84b76a0a123be3f813d1328f64ec192296e186de'],9,46,55,4,,,
94bdf04c8d3753a294fb90df4fb19d68b11caa0e,Better filmstrip process,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-12-15 18:08:08-08:00,28800,2012-12-15 18:08:08-08:00,28800,True,False,"['TODO.txt', 'codec.pyx', 'decode.py', 'filmstrip.py', 'libavcodec.pxd']",['eda7edfd3b33dd6d0e3a51f493a8013eeb3ffba7'],31,40,71,5,1.0,1.0,1.0
ab8096c3a1adf7f69b1f9a09ffc27501add5086d,Experiment to extract docstrings from Cython; WIP,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2012-12-15 18:08:20-08:00,28800,2012-12-15 18:08:20-08:00,28800,True,False,['extract_docstring.py'],['94bdf04c8d3753a294fb90df4fb19d68b11caa0e'],0,27,27,1,1.0,1.0,1.0
b6166252a8fa663b5b785b518790eefb7e86b9f6,Updated filmstrip generation and merging,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-02-15 17:49:19-08:00,28800,2013-02-15 17:49:19-08:00,28800,True,False,"['filmstrip.py', 'merge-filmstrip.py']",['ab8096c3a1adf7f69b1f9a09ffc27501add5086d'],17,64,81,2,,,
f9e683ab919552704073844a631f3143907bb85f,Stub of header to even out FFmpeg vs Libav,Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-03-27 15:52:04-07:00,25200,2013-03-27 15:52:04-07:00,25200,True,False,['lib_compat.h'],['b6166252a8fa663b5b785b518790eefb7e86b9f6'],0,8,8,1,,,
5b46b1e47a2390604f30b869c345c438fc210fa4,Docs: Minor changes to FFmpeg vs Libav,Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-03-27 15:52:17-07:00,25200,2013-03-27 15:52:17-07:00,25200,True,False,"['README.md', 'index.rst']",['f9e683ab919552704073844a631f3143907bb85f'],5,8,13,2,,,
cebceb5ba5d87348a16e8a27ecd674e545fa0bec,"Compat: Try to stub in some functions; WIP

This does not work.",Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-03-27 16:20:57-07:00,25200,2013-03-27 16:20:57-07:00,25200,True,False,"['compat.h', 'compat.pxd', 'libav.pxd', 'lib_compat.h', 'setup.py']",['5b46b1e47a2390604f30b869c345c438fc210fa4'],9,36,45,5,,,
975b49fa14f5edc4936b0690559a51bc736d3cc8,Compat: Use autoconf; WIP,Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-03-27 17:06:44-07:00,25200,2013-03-27 17:10:40-07:00,25200,True,False,"['config.py.in', 'configure.ac']",['cebceb5ba5d87348a16e8a27ecd674e545fa0bec'],0,22,22,2,,,
32f3a9c66b2e3d9a8707173cb7a812bfc49f14aa,Config: Use data from autoconf.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-03-27 20:15:51-07:00,25200,2013-03-27 20:15:51-07:00,25200,True,False,"['.gitignore', 'Makefile', 'TODO.txt', 'config.py.in', 'configure.ac', 'compat.h', 'setup.py']",['975b49fa14f5edc4936b0690559a51bc736d3cc8'],39,58,97,7,0.0,0.0,0.0
f1fc81cfe9a2bc4a57da2843a5655e571471be21,Notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-03-27 20:25:23-07:00,25200,2013-03-27 20:25:23-07:00,25200,True,False,['TODO.txt'],['32f3a9c66b2e3d9a8707173cb7a812bfc49f14aa'],3,4,7,1,,,
4683e64340ad32a5780ec1268b42462d670e56c1,"Remove best_effort_timestamp

It is not in both projects.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-03-27 21:45:54-07:00,25200,2013-03-27 21:45:54-07:00,25200,True,False,"['TODO.txt', 'codec.pyx', 'decode.py', 'compat.h', 'libav.pxd', 'libavcodec.pxd', 'project_fork_shim.h', 'project_fork_shim.pxd']",['f1fc81cfe9a2bc4a57da2843a5655e571471be21'],18,11,29,8,,,
da6c594d9b138dad4636248c2a41783808d2352c,Frame.pts will use pkt_pts if pts is invalid,Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-03-28 11:42:20-07:00,25200,2013-03-28 11:42:20-07:00,25200,True,False,"['codec.pyx', 'decode.py', 'libavcodec.pxd']",['4683e64340ad32a5780ec1268b42462d670e56c1'],7,17,24,3,,,
de6f4fd62f79db1fa39f22217c8df87198bd7e5f,Docs: Slightly clarify FFmpeg vs Libav,Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-03-28 11:51:22-07:00,25200,2013-03-28 11:51:22-07:00,25200,True,False,"['Makefile', 'TODO.txt', 'conf.py', 'index.rst', 'extract_docstring.py']",['da6c594d9b138dad4636248c2a41783808d2352c'],45,17,62,5,0.0,0.0,0.0
ef1cce0f9d94d29d9d08234741046fc7d59ec897,Docs: Add av.codec API stub,Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-03-28 12:07:27-07:00,25200,2013-03-28 12:07:27-07:00,25200,True,False,"['Makefile', 'codec.pyx', 'codec.rst', 'format.rst', 'index.rst']",['de6f4fd62f79db1fa39f22217c8df87198bd7e5f'],1,64,65,5,,,
d95aef8bc09581e7b59e636f127d477d2fc48fdd,Shim: Fix avformat_close_input shim,Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-03-28 12:20:46-07:00,25200,2013-03-28 12:20:51-07:00,25200,True,False,"['TODO.txt', 'project_fork_shim.h']",['ef1cce0f9d94d29d9d08234741046fc7d59ec897'],5,5,10,2,,,
ee88871f223c4b1d96282ea3c68f533b2ae839ad,Codec: Decoded data holds reference to packets,Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-03-28 12:48:16-07:00,25200,2013-03-28 12:48:16-07:00,25200,True,False,"['TODO.txt', 'codec.pxd', 'codec.pyx', 'format.pyx', 'codec.rst']",['d95aef8bc09581e7b59e636f127d477d2fc48fdd'],24,33,57,5,,,
c146e369bc1fc1ef73d4aabda177901ca63d277f,Start on audio decoding,Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-04-02 15:43:37-07:00,25200,2013-04-02 15:43:37-07:00,25200,True,False,"['TODO.txt', 'codec.pxd', 'codec.pyx', 'format.pxd', 'format.pyx', 'decode.py', 'libavcodec.pxd']",['ee88871f223c4b1d96282ea3c68f533b2ae839ad'],8,76,84,7,,,
2ca8139b8bfe7faabc6c06c6aa198ce71ae16e2d,Split fork shim into lib specific headers,Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-04-02 16:27:10-07:00,25200,2013-04-02 16:27:10-07:00,25200,True,False,"['TODO.txt', 'libav.pxd', 'libavformat.pxd', 'libavformat_shim.h', 'project_fork_shim.pxd']",['c146e369bc1fc1ef73d4aabda177901ca63d277f'],10,17,27,5,,,
5a46e52a1b6a6a03a8598e36f0eb18ac4143c179,Build anything found in build/cython,Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-04-02 16:36:55-07:00,25200,2013-04-02 16:36:55-07:00,25200,True,False,"['Makefile', 'setup.py']",['2ca8139b8bfe7faabc6c06c6aa198ce71ae16e2d'],11,18,29,2,,,
4fbc455011df211c3ec981aab491a75544f6345a,Notes,Mike Boers,mboers@keypics.com,Mike Boers,mboers@keypics.com,2013-04-02 17:49:36-07:00,25200,2013-04-02 17:49:36-07:00,25200,True,False,['TODO.txt'],['5a46e52a1b6a6a03a8598e36f0eb18ac4143c179'],2,10,12,1,,,
f7130e59f714ce9dedb7bf8d7a8fd0dc48e5bbb7,fix for codecs that can change resolution (DnxHD),Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-07-14 13:56:33-07:00,25200,2013-07-14 13:56:33-07:00,25200,True,False,"['format.pxd', 'format.pyx']",['4fbc455011df211c3ec981aab491a75544f6345a'],18,32,50,2,,,
bf31de0b9d960abd43057e9c22bb905cd7d0f9c1,exposed more libavcodec,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-07-14 17:25:35-07:00,25200,2013-07-14 17:25:35-07:00,25200,True,False,['libavcodec.pxd'],['f7130e59f714ce9dedb7bf8d7a8fd0dc48e5bbb7'],0,3,3,1,,,
93e53a762083f56cea237c98090787ad09ddd902,Packet.decode yields frame and works with codecs with CODEC_CAP_DELAY,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-07-15 14:00:21-07:00,25200,2013-07-15 14:00:21-07:00,25200,True,False,"['codec.pxd', 'codec.pyx', 'format.pyx']",['bf31de0b9d960abd43057e9c22bb905cd7d0f9c1'],15,37,52,3,,,
9750f187985392f9d8d8363f31df3c9edd6e37b9,updated examples use packet.decode as a generator,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-07-15 14:05:08-07:00,25200,2013-07-15 14:05:08-07:00,25200,True,False,"['decode.py', 'dump_frames.py', 'dump_subtitles.py', 'filmstrip.py']",['93e53a762083f56cea237c98090787ad09ddd902'],63,53,116,4,0.0,0.0,0.0
d4f0ea5f2adab320396e8e846d06b467eafba8e7,wrong stream selected,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-07-16 12:41:40-07:00,25200,2013-07-16 12:41:40-07:00,25200,True,False,['format.pyx'],['9750f187985392f9d8d8363f31df3c9edd6e37b9'],0,1,1,1,,,
19aab0ec5c79ba838f5e8b4edf317a6ed83fadf8,Meta,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-07-26 12:34:09-07:00,25200,2013-07-26 12:34:09-07:00,25200,True,False,"['AUTHORS.txt', 'TODO.txt']",['5b9bb581d6f0c61f9c1e7c5b0bc45898583da38d'],0,12,12,2,,,
17c4c045e1a0439f90a7532e8d644a3843f30f9e,AVFMTCTX_NOHEADER fix,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-07-30 12:16:38-07:00,25200,2013-07-30 12:16:38-07:00,25200,True,False,['format.pyx'],['19aab0ec5c79ba838f5e8b4edf317a6ed83fadf8'],2,7,9,1,,,
f6cfb0cfc6fe352d67dd15fbb9bfaa9f36f93672,added header lots of declarations for encoding,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-08-13 17:58:55-07:00,25200,2013-08-13 18:05:02-07:00,25200,True,False,"['libav.pxd', 'libavcodec.pxd', 'libavformat.pxd', 'libavutil.pxd', 'libswresample.pxd', 'libswscale.pxd']",['212f9de8c27a6f24dae6358d92a663b51d97d193'],17,423,440,6,,,
bee95ab32d2dccd3662990e76d254984381618fd,added encoding support,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-08-13 17:59:59-07:00,25200,2013-08-13 18:05:02-07:00,25200,True,False,"['codec.pxd', 'codec.pyx', 'format.pxd', 'format.pyx', 'utils.pxd', 'utils.pyx']",['f6cfb0cfc6fe352d67dd15fbb9bfaa9f36f93672'],122,1109,1231,6,,,
2ca8c131e24299d2cb39c5f53ebb688dc92c341e,added encode.py example,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-08-13 18:11:26-07:00,25200,2013-08-13 18:11:26-07:00,25200,True,False,['encode.py'],['bee95ab32d2dccd3662990e76d254984381618fd'],0,114,114,1,,,
a5f047cd1760e163541fcea2da0fda7b946616ca,updated examples to use new to_rgba method,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-08-13 18:18:10-07:00,25200,2013-08-13 18:18:10-07:00,25200,True,False,"['dump_frames.py', 'filmstrip.py']",['2ca8c131e24299d2cb39c5f53ebb688dc92c341e'],2,2,4,2,,,
de1593d970e650a0f2d68d02dd7f89937d4b918a,tutorial fix,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-08-13 20:12:46-07:00,25200,2013-08-13 20:12:46-07:00,25200,True,False,['tutorial.pyx'],['a5f047cd1760e163541fcea2da0fda7b946616ca'],1,1,2,1,,,
1a0eb23f4d0368c833be9158c02a959a19ea6b10,added libswresample,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-08-13 21:23:53-07:00,25200,2013-08-13 21:23:53-07:00,25200,True,False,['configure.ac'],['de1593d970e650a0f2d68d02dd7f89937d4b918a'],1,1,2,1,,,
ab9ccce5882b92d6777e7c5524810589b116c460,use av_opt_set_int instead of swr_alloc_set_opts,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-08-14 12:57:15-07:00,25200,2013-08-14 16:07:44-07:00,25200,True,False,"['codec.pyx', 'libavutil.pxd']",['9d7bc58d059b3c048e9c2762445894e17130be3d'],12,18,30,2,,,
7b3857d75c36dd6626e45ff3d50a5b89424fb740,added option to use avresample instead of swresample (for libav),Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-08-14 16:05:34-07:00,25200,2013-08-14 16:07:44-07:00,25200,True,False,"['codec.pyx', 'configure.ac', 'libswresample.pxd', 'libswresample_compat.h', 'setup.py']",['ab9ccce5882b92d6777e7c5524810589b116c460'],5,59,64,5,1.0,1.0,1.0
aabc05c318000e6cc4581fea3a44932beee0c854,fixed avresample_convert returning too few samples,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-08-15 13:56:03-07:00,25200,2013-08-15 13:56:03-07:00,25200,True,False,"['codec.pyx', 'libswresample.pxd', 'libswresample_compat.h']",['7b3857d75c36dd6626e45ff3d50a5b89424fb740'],2,13,15,3,,,
3f3e9c15df3c98d20b309804d40abc3d901996dc,removed unused declaration,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-08-16 11:52:31-07:00,25200,2013-08-16 11:52:31-07:00,25200,True,False,"['libavutil.pxd', 'libswresample.pxd']",['aabc05c318000e6cc4581fea3a44932beee0c854'],4,2,6,2,,,
68e6cb8effbce0d33c4a635be00d219d93bc54fd,get travis working again,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2013-08-16 13:03:59-07:00,25200,2013-08-16 13:03:59-07:00,25200,True,False,"['.travis.yml', 'configure.ac']",['3f3e9c15df3c98d20b309804d40abc3d901996dc'],2,11,13,2,,,
9a5c1d7036a4bc1b659b868c90dc8833988d5756,"Install av package as well

Otherwise only the .so files were installed and not __init__.py",Johannes Erdfelt,johannes@erdfelt.com,Johannes Erdfelt,johannes@erdfelt.com,2013-09-30 09:18:48-07:00,25200,2013-09-30 09:18:48-07:00,25200,True,False,['setup.py'],['04fce5bec64000a7daca16bbd30878778a883b4f'],1,3,4,1,,,
060081e20e67ad84d74a8dcfd82f2a68fb179e42,Notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-05 10:30:42-07:00,25200,2013-10-05 10:30:42-07:00,25200,True,False,"['TODO.txt', 'reddit_pipe.py', 'reddit_pyav.py']",['e453c899c2b0d586a1026fbd56cc1218f924bffc'],0,36,36,3,1.0,1.0,1.0
31011e90e4b68adc96c8d484f377f300d34dbcc4,Docs on GitHub pages,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-06 09:37:59-07:00,25200,2013-10-06 09:37:59-07:00,25200,True,False,"['Makefile', 'README.md', 'sphinx-to-github']",['060081e20e67ad84d74a8dcfd82f2a68fb179e42'],4,22,26,3,,,
8a77ad14c2b26cf25efc66e8686b2dd65c1079ab,make samples,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-06 11:04:06-07:00,25200,2013-10-06 11:04:06-07:00,25200,True,False,['Makefile'],['31011e90e4b68adc96c8d484f377f300d34dbcc4'],0,4,4,1,,,
cb4e8ebe1e16184884c49b88ccbe4aa4f2a00c5f,Clean up TODO.txt; start HACKING.txt,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-06 11:04:45-07:00,25200,2013-10-06 11:04:45-07:00,25200,True,False,"['.gitignore', 'HACKING.txt', 'TODO.txt', 'times.py']",['8a77ad14c2b26cf25efc66e8686b2dd65c1079ab'],25,67,92,4,,,
8ff778dc96d055f58260f5c381eb9efa020fb1ca,Add sample_aspect_ratio attribute from AVCodecContext,Johannes Erdfelt,johannes@erdfelt.com,Johannes Erdfelt,johannes@erdfelt.com,2013-10-15 21:28:23-07:00,25200,2013-10-15 21:31:36-07:00,25200,True,False,"['codec.pyx', 'libavcodec.pxd']",['cb4e8ebe1e16184884c49b88ccbe4aa4f2a00c5f'],1,8,9,2,,,
447c59aeed6ba9f32f00c1d43d46805f665d27af,Fix link to docs,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-19 11:57:18-07:00,25200,2013-10-19 11:57:18-07:00,25200,True,False,['README.md'],['40af9b52f830e54d831eec76a9ad50acc4603095'],1,1,2,1,,,
7cfa1bba03b9a339df814a9ef559391af7ae7c6e,"Replace autoconf with ctypes

HAVE_funcname for functions and USE_libname for
libraries.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-24 11:45:41-07:00,25200,2013-10-24 12:07:17-07:00,25200,True,False,"['HACKING.txt', 'Makefile', 'config.py.in', 'configure.ac', 'index.rst', 'libavformat.pxd', 'libavformat_compat.h', 'libswresample.pxd', 'libswresample_compat.h', 'setup.py']",['447c59aeed6ba9f32f00c1d43d46805f665d27af'],108,116,224,10,0.3939393939393939,0.3939393939393939,1.0
94affad47919dcd556469139e65aac7b7926037b,"Test libav on Travis

Really untested.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-24 12:26:18-07:00,25200,2013-10-24 12:39:09-07:00,25200,True,False,"['.gitignore', '.travis-setup', '.travis.yml']",['7cfa1bba03b9a339df814a9ef559391af7ae7c6e'],27,53,80,3,,,
c206ef708db45fce588a90542ffc89bcc65041e1,apt-get update,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-25 15:06:22-07:00,25200,2013-10-25 15:06:22-07:00,25200,True,False,['.travis-setup'],['94affad47919dcd556469139e65aac7b7926037b'],4,3,7,1,,,
b76bc1f1a3a8486886737fda0a9c2361510f1f07,"Manually look for libs on Linux

Also, replace check_output for 2.6.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-25 16:18:38-07:00,25200,2013-10-25 17:04:08-07:00,25200,True,False,['setup.py'],['c206ef708db45fce588a90542ffc89bcc65041e1'],7,26,33,1,0.0,0.0,1.0
6f95b674530c2a3653416296c027ead23f7cbabd,fix libav build,mark,mark@mark-VirtualBox.(none),mark,mark@mark-VirtualBox.(none),2013-10-28 19:25:40-07:00,25200,2013-10-28 19:25:40-07:00,25200,True,False,"['codec.pyx', 'libavcodec.pxd', 'libavcodec_compat.h', 'libavformat_compat.h', 'libavutil.pxd', 'libavutil_compat.h', 'setup.py']",['b76bc1f1a3a8486886737fda0a9c2361510f1f07'],11,98,109,7,0.1724137931034483,0.1724137931034483,0.1724137931034483
20d7b94ec570de5650ea77ecb29dbc30f68c388e,Demonstrate that circular references aren't collected.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 13:17:53-07:00,25200,2013-10-29 14:00:17-07:00,25200,True,False,['dealloc.py'],['6f95b674530c2a3653416296c027ead23f7cbabd'],0,39,39,1,1.0,1.0,1.0
8b3a56f1443b931f4994f4511126453d21f7564c,"Stream and Codec hold onto ContextProxy

This never forms circular references.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 13:23:26-07:00,25200,2013-10-29 14:00:17-07:00,25200,True,False,"['.gitignore', 'codec.pyx', 'format.pxd', 'format.pyx', 'dealloc.py']",['20d7b94ec570de5650ea77ecb29dbc30f68c388e'],5,16,21,5,,,
a9daaa159c863f0e29a9f60b5d18f7b0ec015992,"Starting the great reorganization

Imports were not fixed, or fixed really badly.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 14:32:13-07:00,25200,2013-10-29 14:32:13-07:00,25200,True,False,"['codec.pxd', 'codec.pyx', '__init__', 'base.pxd', 'base.pyx', 'context.pxd', 'context.pyx', 'format.pxd', 'format.pyx', '__init__.py', 'audio.pxd', 'audio.pyx', 'base.pxd', 'base.pyx', 'video.pxd', 'video.pyx', 'packet.pxd', 'packet.pyx', '__init__.py', 'attachment.pxd', 'attachment.pyx', 'audio.pxd', 'audio.pyx', 'base.pxd', 'base.pyx', 'data.pxd', 'data.pyx', 'nb.pxd', 'nb.pyx', 'subtitle.pxd', 'subtitle.pyx', 'video.pxd', 'video.pyx', 'subtitle.pxd', 'subtitle.pyx', 'tutorial.pyx']",['8b3a56f1443b931f4994f4511126453d21f7564c'],1648,2351,3999,36,,,
e0e1171cc579eb008698d97dcf9e4e616ef781a8,The great reorg takes another turn,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 14:55:20-07:00,25200,2013-10-29 14:55:20-07:00,25200,True,False,"['__init__.py', 'frame.pxd', 'frame.pyx', 'stream.pxd', 'stream.pyx', 'swrcontext.pxd', 'swrcontext.pyx', 'codec.pxd', 'codec.pyx', 'base.pyx', 'frame.pxd', 'frame.pyx', 'stream.pxd', 'stream.pyx', 'attachment.pyx', 'data.pxd', 'data.pyx', 'nb.pxd', 'nb.pyx', 'subtitle.pxd', '__init__.py', 'stream.pxd', 'stream.pyx', 'subtitle.pxd', 'subtitle.pyx', '__init__.py', 'frame.pxd', 'frame.pyx', 'stream.pxd', 'stream.pyx']",['a9daaa159c863f0e29a9f60b5d18f7b0ec015992'],860,706,1566,30,,,
b431d5a27cbe229428585bf2112a9a43c63ebb6b,"Fix a lot of imports

Only tested with examples/decode.py",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 15:34:19-07:00,25200,2013-10-29 15:34:19-07:00,25200,True,False,"['__init__.py', 'frame.pxd', 'stream.pyx', 'codec.pxd', 'codec.pyx', 'context.pyx', 'packet.pxd', 'stream.pxd', 'stream.pyx', 'stream.pxd', 'stream.pyx', '__init__.py', 'stream.pxd', 'stream.pyx', 'subtitle.pxd', 'subtitle.pyx', 'frame.pxd', 'stream.pxd', 'stream.pyx', 'swscontext.pxd', 'swscontext.pyx', 'decode.py']",['e0e1171cc579eb008698d97dcf9e4e616ef781a8'],747,117,864,22,,,
b3c03b1e27f6ad5f9b3a287181a09b1d4d9f94a7,Use err_check,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 16:25:23-07:00,25200,2013-10-29 16:25:23-07:00,25200,True,False,['frame.pyx'],['b431d5a27cbe229428585bf2112a9a43c63ebb6b'],13,14,27,1,,,
8517bff84b4903664cf528089e9ad953039cef8b,LibError extends RuntimeError; shuffle imports,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 16:26:08-07:00,25200,2013-10-29 16:26:08-07:00,25200,True,False,"['__init__.py', 'context.pyx', 'core.pyx', 'stream.pyx', 'utils.pyx', 'decode.py']",['b3c03b1e27f6ad5f9b3a287181a09b1d4d9f94a7'],26,10,36,6,,,
8d078e8c00f03d6c0dbc2ff9f8e06519f2944023,"AVError extends EnvironmentError; start testing

This is much more like IOError or OSError.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 16:48:40-07:00,25200,2013-10-29 16:48:40-07:00,25200,True,False,"['Makefile', '__init__.py', '_core.pyx', 'context.pyx', 'utils.pxd', 'utils.pyx', '__init__.py', 'common.py', 'test_errors.py']",['8517bff84b4903664cf528089e9ad953039cef8b'],28,46,74,9,1.0,1.0,1.0
889c258c4bf88ce3a563a2f4dce7834b16fc515e,Setup Travis to run actual tests,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 16:50:07-07:00,25200,2013-10-29 16:50:07-07:00,25200,True,False,"['.travis.yml', 'setup.cfg']",['8d078e8c00f03d6c0dbc2ff9f8e06519f2944023'],4,11,15,2,,,
2a361f361005593f33bbb6121f317abc81a780c0,Fix the docs,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 17:10:27-07:00,25200,2013-10-29 17:10:27-07:00,25200,True,False,"['HACKING.txt', 'frame.pyx', 'context.pyx', 'frame.pxd', 'api.rst', 'codec.rst', 'format.rst', 'index.rst']",['889c258c4bf88ce3a563a2f4dce7834b16fc515e'],57,83,140,8,,,
bd526644f13191599e4bffd2299151d767ec86b6,"The package name is ""nose"", not ""nosetests""",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 17:17:42-07:00,25200,2013-10-29 18:42:23-07:00,25200,True,False,['.travis.yml'],['2a361f361005593f33bbb6121f317abc81a780c0'],1,1,2,1,,,
73b32cc048c1a190aff8c83fb3ec8cd3764ec0d2,Testing with Vagrant,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 21:57:57-07:00,25200,2013-10-29 22:00:26-07:00,25200,True,False,"['.gitignore', '.travis.yml', 'MANIFEST.in', 'Makefile', 'TODO.txt', 'Vagrantfile', 'test-setup', 'vagrant-test', 'setup.py', 'common.py']",['bd526644f13191599e4bffd2299151d767ec86b6'],13,129,142,10,1.0,1.0,1.0
545309fc68692052d5024f809cfce722c0e05d83,Refining Vagrant tests,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 22:21:55-07:00,25200,2013-10-29 22:21:55-07:00,25200,True,False,"['Makefile', 'TODO.txt', 'test-setup', 'setup.py']",['73b32cc048c1a190aff8c83fb3ec8cd3764ec0d2'],47,64,111,4,,,
1086dc8a0b4b995d7625bc3bbd5aa9e9abfd2c1f,Add LD_LIBRARY_PATH to Travis,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-29 22:23:22-07:00,25200,2013-10-29 22:23:22-07:00,25200,True,False,['.travis.yml'],['545309fc68692052d5024f809cfce722c0e05d83'],2,2,4,1,,,
2a08cdc5d1a50b5d41ad24db2dda93f3ba191f54,Slightly more automatic Vagrant setup,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-30 09:48:56-07:00,25200,2013-10-30 09:48:56-07:00,25200,True,False,"['Makefile', 'TODO.txt', 'vagrant-test']",['1086dc8a0b4b995d7625bc3bbd5aa9e9abfd2c1f'],13,10,23,3,,,
f68be4b5321afdc7fb41c8329833e791aee7d4a2,"VideoFrame format tweaks

f.pix_fmt -> f.format
f.to_rgba() -> f.to_rgb()",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-30 11:27:02-07:00,25200,2013-10-30 11:27:02-07:00,25200,True,False,"['frame.pxd', 'frame.pyx', 'filmstrip.py']",['2a08cdc5d1a50b5d41ad24db2dda93f3ba191f54'],34,51,85,3,,,
ce90c4a0f3abf1a86d3528973227a0f46cad2491,Docs should include all members,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-30 11:55:12-07:00,25200,2013-10-30 11:55:12-07:00,25200,True,False,"['frame.pyx', 'api.rst', 'conf.py']",['f68be4b5321afdc7fb41c8329833e791aee7d4a2'],7,23,30,3,,,
5304eedf5b1d2080f14971c9377988510a14f3e4,Notes and test framework,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-30 12:29:44-07:00,25200,2013-10-30 12:29:44-07:00,25200,True,False,"['TODO.txt', 'common.py']",['ce90c4a0f3abf1a86d3528973227a0f46cad2491'],16,23,39,2,1.0,1.0,0.42857142857142855
3d0b7f513c3795d2c4c4b9558dfcbb1bf710a253,added generate_audio script,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2013-10-29 18:58:22-07:00,25200,2013-10-30 13:23:30-07:00,25200,True,False,['generate_audio.py'],['2a08cdc5d1a50b5d41ad24db2dda93f3ba191f54'],0,114,114,1,0.71875,0.8125,0.34375
7be165dad8e857bd30f6d747e58f92acdd321d5e,ignore backup files,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2013-10-30 13:24:25-07:00,25200,2013-10-30 13:24:25-07:00,25200,True,False,['.gitignore'],['3d0b7f513c3795d2c4c4b9558dfcbb1bf710a253'],0,1,1,1,,,
e17dadca8c8b49b60cc53a23ffcf13e329beb3bd,"Add weak ref of Context to Stream

Then it can start encoding. There must be a nicer
way to do this...",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-30 14:22:08-07:00,25200,2013-10-30 14:22:08-07:00,25200,True,False,"['context.pxd', 'stream.pxd', 'stream.pyx', 'stream.pyx', 'encode.py']",['5304eedf5b1d2080f14971c9377988510a14f3e4'],8,14,22,5,,,
6f0231b6a2a947ef9d465713c792dd1c3ba6e7cd,added generate_video script,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2013-10-30 14:45:35-07:00,25200,2013-10-30 14:45:35-07:00,25200,True,False,['generate_video.py'],['7be165dad8e857bd30f6d747e58f92acdd321d5e'],0,86,86,1,0.6,1.0,0.72
92384d38baa13c5bc4a4e92a9e2a292e315004e5,Pipe library logs into Python logging,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-30 15:11:29-07:00,25200,2013-10-30 15:13:58-07:00,25200,True,False,"['__init__.py', '_core.pyx', 'logging.pyx', 'encode.py', 'log.py', 'libavutil.pxd', 'common.py']",['e17dadca8c8b49b60cc53a23ffcf13e329beb3bd'],14,139,153,7,0.0,1.0,1.0
a44f503122e41f67f75d57a6ea09fb946986d699,Fix log segfault: just use av_log_format_line,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-30 16:18:16-07:00,25200,2013-10-30 16:18:16-07:00,25200,True,False,"['logging.pyx', 'encode.py', 'libavutil.pxd']",['92384d38baa13c5bc4a4e92a9e2a292e315004e5'],11,25,36,3,,,
9d76a54161d394e04fc6eaeba7a4757b5231d3cd,nogil all the things!,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-30 16:18:27-07:00,25200,2013-10-30 16:18:27-07:00,25200,True,False,"['codec.pyx', 'stream.pyx', 'libavcodec.pxd', 'libavformat.pxd', 'libavutil.pxd', 'libswresample.pxd', 'libswscale.pxd']",['a44f503122e41f67f75d57a6ea09fb946986d699'],18,14,32,7,,,
1d056f566891c455587208419229e3b26a0b8c60,Remove duplicate Sw[sr]ContextProxy classes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-30 16:41:32-07:00,25200,2013-10-30 16:41:32-07:00,25200,True,False,"['frame.pyx', 'frame.pyx']",['9d76a54161d394e04fc6eaeba7a4757b5231d3cd'],11,0,11,2,,,
bd241bca4ad787169381ea6b9cd69ce2e9cf3ad6,"Fix weakref callback

I thought `0` would be a C int, but it was a
Python int. Ergo, it was called when the weak ref
was broken, and an exception was triggered (and
promptly ignored).",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-30 16:48:34-07:00,25200,2013-10-30 16:48:34-07:00,25200,True,False,['stream.pyx'],['1d056f566891c455587208419229e3b26a0b8c60'],1,1,2,1,,,
48bffff64fe3518452cba64e51a30e697bb9e3d6,"Post log requests back to the main thread

Hopefully this does actually fix the threading
problem.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-30 17:48:43-07:00,25200,2013-10-30 17:48:43-07:00,25200,True,False,"['logging.pyx', 'libavutil.pxd']",['bd241bca4ad787169381ea6b9cd69ce2e9cf3ad6'],25,37,62,2,,,
8b6ca29152bf2729043c3fa82e3ca03e4cb197ae,"Start replacing av_log_format_line

It doesn't exist in Libav...",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-31 12:24:49-07:00,25200,2013-10-31 12:24:49-07:00,25200,True,False,"['logging.pyx', 'encode.py', 'libavutil.pxd']",['48bffff64fe3518452cba64e51a30e697bb9e3d6'],20,71,91,3,,,
c0c0c8a731d90beb6048af0172abb5ebfb790474,"Log AVClass.item_name() instead of .class_name

This is the most reliable so far, and is what
FFmpeg/Libav do.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-31 12:53:33-07:00,25200,2013-10-31 12:53:33-07:00,25200,True,False,"['Makefile', 'logging.pyx', 'libavutil.pxd']",['8b6ca29152bf2729043c3fa82e3ca03e4cb197ae'],7,15,22,3,,,
f3b92bd9485ceec182bf91d8905e9d019730c594,"Fix logging error in which item_name was freed

The AVClass was being freed after the log was
issued, but before Python actually processed it
since it does so async.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-31 17:06:59-07:00,25200,2013-10-31 17:06:59-07:00,25200,True,False,"['logging.pyx', 'libavutil.pxd']",['c0c0c8a731d90beb6048af0172abb5ebfb790474'],34,39,73,2,,,
e744a4cfb4ab490fb46cd54960f24574a0fc1b5a,"Crazy ""fix"" for exception at shutdown",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 11:13:32-07:00,25200,2013-11-01 12:47:57-07:00,25200,True,False,['context.pyx'],['f3b92bd9485ceec182bf91d8905e9d019730c594'],0,12,12,1,,,
3853454bb643a2fb4a5253cf25f2850466d84af1,"Shutdown exception was due to logging threads

The log_callback and async_log_callback functions
were being called after Python started finalizing,
and so some modules had already been cleaned up by
the time we `logging.getLogger(…)`.

Specifically, I believe it was specifically the
threading._get_ident function that was missing.

This detects that Python has started finalizing
and does not schedule the callback, or attempt to
push messages into the logging tree, and warning
is printed to std err.

Fixes #23.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 12:28:58-07:00,25200,2013-11-01 12:48:05-07:00,25200,True,False,"['context.pyx', 'logging.pyx', 'libavutil.pxd']",['e744a4cfb4ab490fb46cd54960f24574a0fc1b5a'],13,29,42,3,,,
7a3f2bba2e411a18b1ba9cdf9510cade89e2cd56,`make` builds without optimization,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 12:43:05-07:00,25200,2013-11-01 12:50:18-07:00,25200,True,False,['Makefile'],['3cd3b63aabce16177b3fe7b6b8156a4bcddc3940'],1,1,2,1,,,
03723e15413aab033d5769cd700094e39348498c,Notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 12:44:56-07:00,25200,2013-11-01 12:51:00-07:00,25200,True,False,['TODO.txt'],['7a3f2bba2e411a18b1ba9cdf9510cade89e2cd56'],0,9,9,1,,,
95e9a92f05581f783f6d8fb8502146177d746f5d,Context.demux() accepts a single stream,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-31 17:27:16-07:00,25200,2013-11-01 12:53:16-07:00,25200,True,False,"['context.pyx', 'dump_frames.py', 'encode.py']",['b7b58f58722bf8b0a89788f0da03817a1d5992c6'],20,16,36,3,,,
d1d833516f1740e570ba4c5a244fec016df17402,Start making VideoFrame stand alone,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-10-31 20:03:10-07:00,25200,2013-11-01 12:53:37-07:00,25200,True,False,"['Makefile', 'frame.pyx', 'frame.pyx', '__init__.py', 'frame.pxd', 'frame.pyx', 'stream.pxd', 'stream.pyx', 'dump_frames.py', 'libavcodec.pxd', 'common.py', 'test_errors.py', 'test_videoframe.py']",['95e9a92f05581f783f6d8fb8502146177d746f5d'],70,162,232,13,1.0,1.0,0.7333333333333333
993760b3a06aa9ade74fe8fd504ecbf801f199f1,Add PEP 3118 buffers,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 01:07:22-07:00,25200,2013-11-01 12:53:37-07:00,25200,True,False,"['frame.pxd', 'frame.pyx', 'common.py', 'test_videoframe.py']",['d1d833516f1740e570ba4c5a244fec016df17402'],6,63,69,4,1.0,1.0,1.0
8cc45ca59c340c18d459ef3f3605df51f3df9a0d,Start video generation example,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 12:45:11-07:00,25200,2013-11-01 12:54:47-07:00,25200,True,False,['gen_rgb_rotate.py'],['993760b3a06aa9ade74fe8fd504ecbf801f199f1'],0,54,54,1,,,
0b277e51ed5e2d89ad6c325aa051d19d0022a2e7,Travis: fix requirements and pull assets,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 09:21:05-07:00,25200,2013-11-01 12:59:02-07:00,25200,True,False,"['.travis.yml', 'test-setup', 'requirements.txt']",['8cc45ca59c340c18d459ef3f3605df51f3df9a0d'],1,16,17,3,,,
896c5042786a0ee0650ebcddc8acf501dffbf962,Skip memoryview test if memoryview doesn't exist,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 11:34:46-07:00,25200,2013-11-01 12:59:10-07:00,25200,True,False,"['common.py', 'test_videoframe.py']",['0b277e51ed5e2d89ad6c325aa051d19d0022a2e7'],1,5,6,2,1.0,1.0,1.0
03bbda2f951f7b3a857c8e524a4e13a0808f01e0,Pull SkipTest from nose,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 12:42:27-07:00,25200,2013-11-01 12:59:17-07:00,25200,True,False,['common.py'],['896c5042786a0ee0650ebcddc8acf501dffbf962'],1,3,4,1,,,
a88c56a58aed1d691f8fe377a851de7e58c8d28c,"Can generate video from PIL

QuickTime thinks it is black.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 15:45:07-07:00,25200,2013-11-01 15:45:07-07:00,25200,True,False,"['gen_rgb_rotate.py', 'common.py']",['4cf446a3c564233d6137ade170800b7244be86be'],7,16,23,2,1.0,1.0,0.5
7ae798c41ea2de220dfff26de54e8e2f09985302,Setup logging for all examples,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 15:46:39-07:00,25200,2013-11-01 15:46:39-07:00,25200,True,False,"['__init__.py', 'encode.py', 'gen_rgb_rotate.py']",['a88c56a58aed1d691f8fe377a851de7e58c8d28c'],13,9,22,3,,,
baf5f8e6ae7b496d86c2f888eba3945ce59c5218,Examples use mpeg4 so that QuickTime works,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 15:56:07-07:00,25200,2013-11-01 15:56:07-07:00,25200,True,False,"['Makefile', 'encode.py', 'gen_rgb_rotate.py']",['7ae798c41ea2de220dfff26de54e8e2f09985302'],4,10,14,3,,,
a7ac7ca0946edf4649d10ac259cde2dfe77769e5,Tweaks errors and reprs,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 16:52:05-07:00,25200,2013-11-01 16:52:05-07:00,25200,True,False,"['stream.pyx', 'utils.pyx']",['baf5f8e6ae7b496d86c2f888eba3945ce59c5218'],3,6,9,2,,,
ddb94f964f222285b173ff4d5507bc9db5d4f3d7,Fix TestCase sandboxing,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 21:08:01-07:00,25200,2013-11-01 21:08:01-07:00,25200,True,False,['common.py'],['5bc9b5c8381d69dd881b34fecec91247fc5ee603'],2,2,4,1,,,
5e58459b1e42023eb48b28820d4ecc45e565725b,"Push in all packets and extract all frames

This makes sure that packets that contain
multiple frames will decode them all, and that we
won't have a memory buildup from waiting until the
end to flush the buffers.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 20:32:41-07:00,25200,2013-11-01 21:08:10-07:00,25200,True,False,"['TODO.txt', 'stream.pyx', 'context.pyx', 'frame.pxd', 'packet.pxd', 'packet.pyx', 'stream.pxd', 'stream.pyx', 'stream.pyx', 'subtitle.pyx', 'frame.pyx', 'stream.pyx', 'libavcodec.pxd']",['ddb94f964f222285b173ff4d5507bc9db5d4f3d7'],68,123,191,13,,,
cdfc9076eb4e810ee85be81875770e466c504735,Use Packet as the NULL packet,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-01 21:12:43-07:00,25200,2013-11-01 21:12:43-07:00,25200,True,False,['stream.pyx'],['5e58459b1e42023eb48b28820d4ecc45e565725b'],6,3,9,1,,,
9ab871efe9a8eab916a612c58c573101cdfb45c1,Notes and headers,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-05 19:41:14-08:00,28800,2013-11-05 19:52:25-08:00,28800,True,False,"['TODO.txt', 'libavutil.pxd']",['ab13183a249f0a1c6646e5b9127e5d9dec2a307b'],0,36,36,2,,,
137a7d3dc20da46ecd964046b03fddbac52e87d9,Implement and test video format Descriptor,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-06 17:16:33-08:00,28800,2013-11-06 17:17:08-08:00,28800,True,False,"['format.pxd', 'format.pyx', 'libavutil.pxd', 'test_videoformat.py']",['9ab871efe9a8eab916a612c58c573101cdfb45c1'],21,144,165,4,1.0,1.0,1.0
cf74367165daa5d4254b685085064e132bcb280d,Component.is_chroma and dimensions,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-06 17:52:31-08:00,28800,2013-11-06 17:52:31-08:00,28800,True,False,"['TODO.txt', 'format.pxd', 'format.pyx', 'test_videoformat.py']",['137a7d3dc20da46ecd964046b03fddbac52e87d9'],14,65,79,4,0.0,1.0,1.0
2c06c3faea206b0f1a5a23511b52a2eda6663652,"Descriptor -> VideoFormat

Seems more approachable.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-06 17:54:14-08:00,28800,2013-11-06 17:54:14-08:00,28800,True,False,"['format.pxd', 'format.pyx', 'test_videoformat.py']",['cf74367165daa5d4254b685085064e132bcb280d'],14,14,28,3,,,
61f82b9a19f8ca0638b6e67f8e07ab9deaf0b41d,More VideoFormat(Component) properties and tests,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-06 18:16:14-08:00,28800,2013-11-06 18:16:14-08:00,28800,True,False,"['format.pxd', 'format.pyx', 'test_videoformat.py']",['2c06c3faea206b0f1a5a23511b52a2eda6663652'],6,65,71,3,0.0,1.0,1.0
c1e75107339ebe30c312f221c5f8b1b563d9239c,Create set of names of VideoFormats,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-06 18:32:06-08:00,28800,2013-11-06 18:32:06-08:00,28800,True,False,"['TODO.txt', 'format.pyx']",['61f82b9a19f8ca0638b6e67f8e07ab9deaf0b41d'],10,7,17,2,,,
7d96cf73b06aadcadbacc0e18a4fa493ef80d6b0,Test a VideoFormat with a palette,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-06 18:32:15-08:00,28800,2013-11-06 18:32:15-08:00,28800,True,False,['test_videoformat.py'],['c1e75107339ebe30c312f221c5f8b1b563d9239c'],0,6,6,1,1.0,1.0,1.0
9a71e5997416c86856b66941ee001bf02d4584c9,Notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-06 18:42:27-08:00,28800,2013-11-06 18:42:27-08:00,28800,True,False,['TODO.txt'],['7d96cf73b06aadcadbacc0e18a4fa493ef80d6b0'],4,8,12,1,,,
59d8fef17e879020c9a807d4c8e5219207632d9b,Notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-07 20:06:53-08:00,28800,2013-11-07 20:06:53-08:00,28800,True,False,['TODO.txt'],['5d708a38395254f881a76b204aa22948942eb8d1'],3,7,10,1,,,
bce5778155da49cdc03ac6acfe18527b151cdde0,VideoFrame starts using VideoFormat,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 11:22:18-08:00,28800,2013-11-08 11:22:18-08:00,28800,True,False,"['format.pxd', 'format.pyx', 'frame.pxd', 'frame.pyx']",['59d8fef17e879020c9a807d4c8e5219207632d9b'],16,66,82,4,,,
bccc097103dcaf9f4a2d7f8aaa95e7d652a984db,Start VideoPlane objects,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 11:22:31-08:00,28800,2013-11-08 11:22:31-08:00,28800,True,False,"['frame.pxd', 'frame.pyx', 'plane.pxd', 'plane.pyx', 'libavcodec.pxd', 'test_videoframe.py']",['bce5778155da49cdc03ac6acfe18527b151cdde0'],91,126,217,6,1.0,1.0,1.0
d2258aa99aa5c6de3a738fe4cb8a8ae917459391,VideoPlane properties,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 11:32:09-08:00,28800,2013-11-08 11:32:09-08:00,28800,True,False,"['plane.pxd', 'plane.pyx', 'test_videoframe.py']",['bccc097103dcaf9f4a2d7f8aaa95e7d652a984db'],6,52,58,3,1.0,1.0,1.0
e7087bbaa6a9aa178625721b5f862a3d70389a53,Restore buffer interfaces on VideoPlane,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 11:36:14-08:00,28800,2013-11-08 11:36:14-08:00,28800,True,False,"['plane.pxd', 'plane.pyx', 'test_videoframe.py']",['d2258aa99aa5c6de3a738fe4cb8a8ae917459391'],46,49,95,3,,,
af11275674a817114f1a58db9fe61ee5838cd6fb,Docs and notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 11:42:45-08:00,28800,2013-11-08 11:42:45-08:00,28800,True,False,"['TODO.txt', 'plane.pyx']",['e7087bbaa6a9aa178625721b5f862a3d70389a53'],44,12,56,2,,,
f1fc3c77e2ddfbb19047eac3642788fd9e0e5528,Split AudioFifo into its own module,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-02 11:13:18-07:00,25200,2013-11-08 11:45:48-08:00,28800,True,False,"['fifo.pxd', 'fifo.pyx', 'frame.pxd', 'frame.pyx', 'stream.pxd', 'encode.py']",['8b1cc5835e8bcf9fd1c851fdf1bd5cf7a7f32d76'],164,176,340,6,,,
a29c012422c9463736997ed8d3f9daae0cd9bcbe,Rename some audio attributes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-02 11:28:46-07:00,25200,2013-11-08 11:45:48-08:00,28800,True,False,"['fifo.pyx', 'frame.pxd', 'frame.pyx']",['f1fc3c77e2ddfbb19047eac3642788fd9e0e5528'],18,24,42,3,,,
73e30aa8f68970a14cee7e99c44ddd334959006b,AudioStream uses AudioFrame as buffer,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-02 11:35:18-07:00,25200,2013-11-08 11:45:48-08:00,28800,True,False,"['stream.pxd', 'stream.pyx']",['a29c012422c9463736997ed8d3f9daae0cd9bcbe'],13,6,19,2,,,
6d3f6a537e4952673ba47b4b3c5cb4b6e973e4fa,Calculate AudioFrame buffer size on decoded frames,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-02 11:42:53-07:00,25200,2013-11-08 11:45:48-08:00,28800,True,False,"['frame.pxd', 'frame.pyx', 'stream.pyx']",['73e30aa8f68970a14cee7e99c44ddd334959006b'],5,16,21,3,,,
65003adc70c68c57d345ed566b1a3aa104e1a941,Start AudioFormat,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 12:29:52-08:00,28800,2013-11-08 12:29:52-08:00,28800,True,False,"['format.pxd', 'format.pyx', 'libavutil.pxd', 'test_audioformat.py']",['6d3f6a537e4952673ba47b4b3c5cb4b6e973e4fa'],2,84,86,4,1.0,1.0,1.0
9b5cb806a5809d905045cedb7df546f2e3b8ce2c,Start AudioLayout,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 15:01:37-08:00,28800,2013-11-08 15:02:37-08:00,28800,True,False,"['layout.pxd', 'layout.pyx', 'libavutil.pxd', 'test_audiolayout.py']",['65003adc70c68c57d345ed566b1a3aa104e1a941'],5,117,122,4,1.0,1.0,1.0
ea225f4a7598a20d8813bf17722070f120b77fc4,Decoded VideoFrames construct a VideoFormat,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 15:43:42-08:00,28800,2013-11-08 15:43:42-08:00,28800,True,False,"['format.pyx', 'frame.pxd', 'frame.pyx', 'stream.pyx']",['9b5cb806a5809d905045cedb7df546f2e3b8ce2c'],32,36,68,4,,,
e6be0cb8ab5d3e6eb2236f8c18ad21f251f8ef97,"WIP adapting AudioFrame to use new format/layout

This breaks audio even more, for now.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 15:44:38-08:00,28800,2013-11-08 15:44:38-08:00,28800,True,False,"['frame.pxd', 'frame.pyx', 'layout.pxd', 'layout.pyx', 'stream.pyx', 'decode.py', 'test_audiolayout.py']",['ea225f4a7598a20d8813bf17722070f120b77fc4'],73,126,199,7,1.0,1.0,1.0
fd7f9c3c7bb375a980891616954c42adb70d641d,Split Codec into VideoCodec and AudioCodec,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 16:20:43-08:00,28800,2013-11-08 16:20:43-08:00,28800,True,False,"['codec.pxd', 'codec.pyx', 'codec.pxd', 'codec.pyx', 'codec.pxd', 'codec.pyx']",['e6be0cb8ab5d3e6eb2236f8c18ad21f251f8ef97'],103,148,251,6,,,
2b419817933e7b6320ddabbb8eb9c979529a0d5e,Remove dummy streams,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 16:20:50-08:00,28800,2013-11-08 16:20:50-08:00,28800,True,False,['stream.pyx'],['fd7f9c3c7bb375a980891616954c42adb70d641d'],16,7,23,1,,,
cf89fbf3833dfd56b4248683923587a5cb59665c,Simplify AudioFrame buffer allocation,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 16:21:34-08:00,28800,2013-11-08 16:21:34-08:00,28800,True,False,"['frame.pxd', 'frame.pyx', 'utils.pxd', 'utils.pyx']",['2b419817933e7b6320ddabbb8eb9c979529a0d5e'],113,51,164,4,,,
94a37fa4f0a1413b49b54e9b4ba633bd535b6e24,Codecs use format and layout objects,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 16:35:54-08:00,28800,2013-11-08 16:35:54-08:00,28800,True,False,"['codec.pxd', 'codec.pyx', 'stream.pyx', 'codec.pxd', 'codec.pyx', 'decode.py']",['cf89fbf3833dfd56b4248683923587a5cb59665c'],93,77,170,6,,,
f7d854f4136f27b3c40f1d3cccc6dcb46c9be150,Abstract Plane from VideoPlane,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 17:05:35-08:00,28800,2013-11-08 17:05:35-08:00,28800,True,False,"['format.pyx', 'frame.pxd', 'frame.pyx', 'frame.pxd', 'frame.pyx', 'plane.pxd', 'plane.pyx', 'frame.pxd', 'frame.pyx', 'plane.pxd', 'plane.pyx']",['94a37fa4f0a1413b49b54e9b4ba633bd535b6e24'],100,121,221,11,,,
02fbc5ede35b00526fd90bca074243103bb794ff,Properly calculate AudioPlane buffer_size,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 17:30:06-08:00,28800,2013-11-08 17:49:15-08:00,28800,True,False,"['frame.pxd', 'frame.pyx', 'plane.pxd', 'plane.pyx', 'plane.pyx']",['f7d854f4136f27b3c40f1d3cccc6dcb46c9be150'],13,36,49,5,,,
7a4c85cb0daf27acd17517f649fc74e606dc2286,Decode example PLAYS AUDIO (assuming s16le),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 17:49:46-08:00,28800,2013-11-08 17:49:46-08:00,28800,True,False,['decode.py'],['02fbc5ede35b00526fd90bca074243103bb794ff'],2,28,30,1,,,
1dd93e31b73f464df3c1b6c65cbae67936216013,"Docs, notes, and disable AudioFifo properties",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 20:39:07-08:00,28800,2013-11-08 20:50:46-08:00,28800,True,False,"['Makefile', 'TODO.txt', 'fifo.pyx', 'plane.pyx']",['7a4c85cb0daf27acd17517f649fc74e606dc2286'],12,69,81,4,,,
6ae540cfb079bf1b1aeb6dc0d4c4c23b15fdeb9a,Adjust __repr__ to show no submodules,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 20:50:09-08:00,28800,2013-11-08 20:53:27-08:00,28800,True,False,"['frame.pyx', 'layout.pyx', 'packet.pyx', 'plane.pyx', 'format.pyx', 'frame.pyx', 'test_audiolayout.py']",['f7be4e60ddd24f1612c62ccd377488a8f116bdc6'],12,12,24,7,,,
74688aa2cc534f013b957885d9f7cf423cbfc2cd,Import many of the things into `av`,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 20:50:21-08:00,28800,2013-11-08 20:53:28-08:00,28800,True,False,['__init__.py'],['6ae540cfb079bf1b1aeb6dc0d4c4c23b15fdeb9a'],3,13,16,1,1.0,1.0,1.0
276deca9e1b1d5f9ccda11d6932c9c8443d34045,Pull in doctests,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 21:25:32-08:00,28800,2013-11-08 21:25:44-08:00,28800,True,False,"['TODO.txt', 'format.pyx', 'frame.pyx', 'test_doctests.py']",['74688aa2cc534f013b957885d9f7cf423cbfc2cd'],6,78,84,4,0.4482758620689655,0.5517241379310345,1.0
20e9a045e8b60c17e7bedf01f73a987b14e9ec18,Clean the Cython-level constructors,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 22:12:02-08:00,28800,2013-11-08 22:18:01-08:00,28800,True,False,"['TODO.txt', 'codec.pyx', 'fifo.pyx', 'format.pxd', 'format.pyx', 'frame.pxd', 'frame.pyx', 'layout.pxd', 'layout.pyx', 'stream.pyx', 'codec.pyx', 'utils.pyx', 'codec.pyx', 'format.pxd', 'format.pyx', 'frame.pxd', 'frame.pyx', 'stream.pyx']",['276deca9e1b1d5f9ccda11d6932c9c8443d34045'],68,68,136,18,,,
4d007a960d8385887193f05936afbc060876f192,Fix AudioLayout and AudioChannel for Libav,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-08 23:16:42-08:00,28800,2013-11-08 23:16:42-08:00,28800,True,False,['layout.pyx'],['20e9a045e8b60c17e7bedf01f73a987b14e9ec18'],4,47,51,1,,,
c5902cfd3858d771625ba09f8f2cad347b590464,Notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 10:36:53-08:00,28800,2013-11-09 10:36:53-08:00,28800,True,False,['TODO.txt'],['4d007a960d8385887193f05936afbc060876f192'],0,24,24,1,,,
119f8af3cb7baf7ec12e7bd4814b840f426e5689,get_video_format(AV_PIX_FMT_NONE) -> None,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 13:34:18-08:00,28800,2013-11-09 13:34:18-08:00,28800,True,False,['format.pyx'],['c5902cfd3858d771625ba09f8f2cad347b590464'],3,3,6,1,,,
89eb371e21db8b9a9b5c097e890bf762df97aa10,Notes and tweaks,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 13:34:26-08:00,28800,2013-11-09 13:34:26-08:00,28800,True,False,"['TODO.txt', 'codec.pyx', 'encode.py', 'libavformat.pxd']",['119f8af3cb7baf7ec12e7bd4814b840f426e5689'],6,31,37,4,,,
c79204203ed07fb9eb73fac5de2c9c701a33db08,Context -> Container,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 15:19:50-08:00,28800,2013-11-09 15:19:50-08:00,28800,True,False,"['__init__.py', 'codec.pxd', 'codec.pyx', 'container.pxd', 'container.pyx', 'stream.pxd', 'stream.pyx']",['89eb371e21db8b9a9b5c097e890bf762df97aa10'],22,22,44,7,,,
9b441c9726209edb639b112b40386ac2e1686d88,ContainerFormat descriptor,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 16:08:46-08:00,28800,2013-11-09 16:08:46-08:00,28800,True,False,"['format.pxd', 'format.pyx', 'libavformat.pxd', 'test_containerformat.py']",['c79204203ed07fb9eb73fac5de2c9c701a33db08'],6,123,129,4,1.0,1.0,1.0
fe8ae599044ae352d7ef2bd2cb3df5609aeee01f,Merge Codec into Stream; lots of edge cases to fix,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 16:58:59-08:00,28800,2013-11-09 16:58:59-08:00,28800,True,False,"['codec.pxd', 'codec.pyx', 'stream.pxd', 'stream.pyx', 'codec.pxd', 'codec.pyx', 'container.pyx', 'stream.pxd', 'stream.pyx', 'stream.pyx', 'codec.pxd', 'codec.pyx', 'stream.pxd', 'stream.pyx', 'decode.py', 'libavformat.pxd']",['9b441c9726209edb639b112b40386ac2e1686d88'],291,212,503,16,,,
171ac03b8b8b2bd0dd421f966349f0f217e38110,Tinkering with time,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 18:02:58-08:00,28800,2013-11-09 18:02:58-08:00,28800,True,False,"['packet.pyx', 'stream.pyx', 'stream.pyx', 'decode.py', 'libavcodec.pxd']",['fe8ae599044ae352d7ef2bd2cb3df5609aeee01f'],40,52,92,5,1.0,1.0,1.0
6bc31b0c3f913acf3deae09097010c14a8fff959,Split Container into input/output varieties,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 18:23:42-08:00,28800,2013-11-09 18:23:42-08:00,28800,True,False,"['__init__.py', 'container.pxd', 'container.pyx', 'utils.pxd', 'utils.pyx', 'decode.py']",['171ac03b8b8b2bd0dd421f966349f0f217e38110'],126,131,257,6,0.0,0.0,0.0
3068841f7ac166048aa4580d525eab1b14d7446b,Add ContainerFormat to Container,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 18:34:49-08:00,28800,2013-11-09 18:34:49-08:00,28800,True,False,"['container.pxd', 'container.pyx', 'format.pxd', 'format.pyx', 'decode.py']",['6bc31b0c3f913acf3deae09097010c14a8fff959'],2,28,30,5,,,
57433822622eb9f709a39a02176b2660d5a04cd2,"Video encoding barely works again; very hacky

There is a very strange segfault in the garbage
collector when there is a shutdown after a
Python exception. It may only be during encoding.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 19:59:06-08:00,28800,2013-11-09 19:59:06-08:00,28800,True,False,"['container.pyx', 'stream.pyx', 'frame.pxd', 'frame.pyx', 'stream.pyx', 'gen_rgb_rotate.py']",['3068841f7ac166048aa4580d525eab1b14d7446b'],83,85,168,6,,,
320fbc09069619ad7262f90e18a0dec3d75276b5,Clean up some of the Stream creation madness,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 21:51:36-08:00,28800,2013-11-09 21:51:36-08:00,28800,True,False,"['container.pyx', 'stream.pxd', 'stream.pyx', 'format.pyx', 'stream.pxd', 'stream.pyx', 'gen_rgb_rotate.py']",['57433822622eb9f709a39a02176b2660d5a04cd2'],61,62,123,7,,,
e0f79d41235943014ed97a6591d91a0aea57fc4c,Stream is fully constructed in C,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 22:13:15-08:00,28800,2013-11-09 22:22:53-08:00,28800,True,False,"['container.pyx', 'stream.pxd', 'stream.pyx']",['320fbc09069619ad7262f90e18a0dec3d75276b5'],58,59,117,3,,,
cffd1bf44d670b102ad498af26461024c9bc24f2,Check AVFormatContext to see if it is input or output,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 22:23:33-08:00,28800,2013-11-09 22:23:50-08:00,28800,True,False,"['container.pxd', 'container.pyx']",['e0f79d41235943014ed97a6591d91a0aea57fc4c'],8,2,10,2,,,
dd63cabd748e9904e120d524c7eb75ac6f8dd1ce,Flags for starting/finishing an encode,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 22:24:03-08:00,28800,2013-11-09 22:24:03-08:00,28800,True,False,"['container.pxd', 'container.pyx']",['cffd1bf44d670b102ad498af26461024c9bc24f2'],6,18,24,2,,,
f66f426f7fada0418cdc3ad0ae5196ea8651f558,Audio/VideoStream use new _init protocol,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-09 22:27:41-08:00,28800,2013-11-09 22:27:41-08:00,28800,True,False,"['stream.pyx', 'stream.pyx']",['dd63cabd748e9904e120d524c7eb75ac6f8dd1ce'],3,7,10,2,,,
57678420dd5acd5d17e87ef5f5d04ed98e1fb9ef,Tweaks and notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 09:04:19-08:00,28800,2013-11-10 09:20:42-08:00,28800,True,False,"['.gitignore', 'TODO.txt', 'stream.pyx', 'stream.pyx', 'decode.py']",['f66f426f7fada0418cdc3ad0ae5196ea8651f558'],56,68,124,5,,,
1e2420e0e892a77c1aecdbf65f3f44aef2bd7be6,Replace lib.av_get_media_type_string for libav,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 09:52:14-08:00,28800,2013-11-10 09:52:14-08:00,28800,True,False,"['stream.pyx', 'libavformat.pxd']",['696be2cb1b83437d8bc1c1c3c203dafcb443e025'],5,12,17,2,,,
292f5b3958870db45d4927ffca3332956176ee48,Fix a typo,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 10:03:49-08:00,28800,2013-11-10 10:03:49-08:00,28800,True,False,['container.pyx'],['1e2420e0e892a77c1aecdbf65f3f44aef2bd7be6'],2,2,4,1,,,
8d217ba46c36cbc4ba3f55db4ccb80323348bd07,Create test from RGB rotate example,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 10:04:59-08:00,28800,2013-11-10 10:04:59-08:00,28800,True,False,"['common.py', 'test_encoding.py']",['292f5b3958870db45d4927ffca3332956176ee48'],0,66,66,2,0.0,1.0,1.0
72281d0b2edbd47f04f350df9b73911b03904d1e,Backport of Python 2.7 unittest.TestCase methods,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 10:27:49-08:00,28800,2013-11-10 10:27:49-08:00,28800,True,False,['common.py'],['8d217ba46c36cbc4ba3f55db4ccb80323348bd07'],0,35,35,1,1.0,1.0,0.0
07ecf5527b572dbb1e9aaf51b859de53825d3fe0,SwrContext -> AudioResampler; steals resample method,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 10:24:23-08:00,28800,2013-11-10 12:03:23-08:00,28800,True,False,"['frame.pxd', 'frame.pyx', 'resampler.pxd', 'resampler.pyx', 'stream.pxd', 'stream.pyx', 'swrcontext.pxd', 'swrcontext.pyx']",['72281d0b2edbd47f04f350df9b73911b03904d1e'],139,136,275,8,,,
6cae02fb71694541066e1a25d4d28bc6a61bee33,Adapt decoding example into base of fifo example,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 10:36:13-08:00,28800,2013-11-10 12:03:23-08:00,28800,True,False,['fifo.py'],['07ecf5527b572dbb1e9aaf51b859de53825d3fe0'],0,57,57,1,,,
c5f2e4e7107819ee58f8afebb93ebbceca8cc947,"Planes pull from extended_data

This is required for higher-channel data. Video
doesn't care.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 11:30:21-08:00,28800,2013-11-10 12:03:23-08:00,28800,True,False,['plane.pyx'],['6cae02fb71694541066e1a25d4d28bc6a61bee33'],5,5,10,1,,,
5e64fb7065f59d4c930174bee4c176dd1e6ae842,Fix manual AudioFrame construction,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 11:33:32-08:00,28800,2013-11-10 12:03:24-08:00,28800,True,False,['frame.pyx'],['c5f2e4e7107819ee58f8afebb93ebbceca8cc947'],5,7,12,1,,,
a347095a3b0a5509a8e7a53da3ec80106baa3eab,The FIFO example works and plays,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 11:33:48-08:00,28800,2013-11-10 12:03:24-08:00,28800,True,False,"['fifo.pxd', 'fifo.pyx', 'fifo.py']",['5e64fb7065f59d4c930174bee4c176dd1e6ae842'],130,124,254,3,1.0,1.0,1.0
cb52f447b3245fa474e97a3239c3cff7e302e498,Deal with missing channel_layout on streams,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 12:02:17-08:00,28800,2013-11-10 12:03:24-08:00,28800,True,False,"['fifo.pyx', 'frame.pyx', 'layout.pxd', 'layout.pyx', 'stream.pyx', 'libavcodec.pxd']",['a347095a3b0a5509a8e7a53da3ec80106baa3eab'],5,34,39,6,,,
b2e6782d292be19b8f70bed4c1e292cc6bf168ae,Test the fifo!,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 12:02:22-08:00,28800,2013-11-10 12:03:24-08:00,28800,True,False,['test_audiofifo.py'],['cb52f447b3245fa474e97a3239c3cff7e302e498'],0,37,37,1,0.0,0.0,1.0
8c8f4dda2842595a6fec31ed6f5be0e02fd2d44f,Notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 12:03:20-08:00,28800,2013-11-10 12:03:24-08:00,28800,True,False,"['HACKING.txt', 'TODO.txt']",['b2e6782d292be19b8f70bed4c1e292cc6bf168ae'],1,2,3,2,,,
1cd5f40cae109fae70b1c1c9a9846489d3a4dccf,Check AudioLayout channel bounds,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 14:42:48-08:00,28800,2013-11-10 14:42:48-08:00,28800,True,False,"['layout.pyx', 'libav-audio-layouts.pxd', 'libav.pxd', 'libavcodec.pxd', 'test_audiolayout.py']",['8c8f4dda2842595a6fec31ed6f5be0e02fd2d44f'],24,23,47,5,1.0,1.0,1.0
24b808d91cc04a22e296ecae2c9457ad6a951e3a,Resampler mostly works,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 15:32:26-08:00,28800,2013-11-10 15:32:26-08:00,28800,True,False,"['__init__.py', 'frame.pxd', 'frame.pyx', 'resampler.pxd', 'resampler.pyx', 'fifo.py']",['1cd5f40cae109fae70b1c1c9a9846489d3a4dccf'],145,192,337,6,,,
f78e701b5d5a2f3b5d3246971f9d632f8f97ae20,AudioFormat.container_name,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 15:57:17-08:00,28800,2013-11-10 15:57:17-08:00,28800,True,False,"['format.pyx', 'libav-audio-formats.pxd', 'libav.pxd', 'test_audioformat.py']",['24b808d91cc04a22e296ecae2c9457ad6a951e3a'],0,64,64,4,1.0,1.0,1.0
c4f2ac28ad0347fdfa4bf4f79db5be144ecd1a6b,Remove some prints; example uses packed format,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 15:57:48-08:00,28800,2013-11-10 15:57:48-08:00,28800,True,False,"['resampler.pyx', 'fifo.py']",['f78e701b5d5a2f3b5d3246971f9d632f8f97ae20'],7,4,11,2,,,
a1171718ea3f2656ed30b93fc40eec7e23f2cd73,Fifo example can play multiple channels,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 16:02:08-08:00,28800,2013-11-10 16:05:13-08:00,28800,True,False,"['TODO.txt', 'fifo.py']",['c4f2ac28ad0347fdfa4bf4f79db5be144ecd1a6b'],4,3,7,2,,,
448772df30da54906f16c1f51433e92388fb09f6,Libav does not have av_get_alt_sample_fmt,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 17:34:40-08:00,28800,2013-11-10 17:34:40-08:00,28800,True,False,"['format.pyx', 'libav-audio-formats.pxd', 'libav.pxd', 'libavutil.pxd', 'samplefmt.pxd']",['4dc3bbfef1f1cbc87f4c042171c33fead1a6e0dd'],51,56,107,5,,,
455b50b32de5c234e0009fa3730e822e65e78df7,"AudioFormat.alt_packed -> packed

I think this is simpler.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 17:35:13-08:00,28800,2013-11-10 17:35:13-08:00,28800,True,False,"['format.pyx', 'fifo.py', 'test_audioformat.py']",['448772df30da54906f16c1f51433e92388fb09f6'],5,5,10,3,,,
9ec4c6e27c3718efa623380b4c1f1c958075223d,AudioFormat docs,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 17:35:26-08:00,28800,2013-11-10 17:35:26-08:00,28800,True,False,"['format.pyx', 'api.rst']",['455b50b32de5c234e0009fa3730e822e65e78df7'],7,98,105,2,,,
ef542be0dc3373817028473973c5568aa7b2166e,Write metadata to container (and maybe streams),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 19:52:06-08:00,28800,2013-11-10 19:52:31-08:00,28800,True,False,"['container.pyx', 'utils.pxd', 'utils.pyx', 'libav.pxd', 'libavutil.pxd', 'dict.pxd', 'test_encoding.py']",['9ec4c6e27c3718efa623380b4c1f1c958075223d'],22,54,76,7,0.0,1.0,1.0
eff65059d728c1c94e0c42ddaf3b655ae9093a48,Frame.index from AVCodecContext on decode,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 19:53:48-08:00,28800,2013-11-10 19:53:48-08:00,28800,True,False,"['frame.pxd', 'frame.pyx', 'frame.pxd', 'frame.pyx', 'stream.pyx', 'frame.pxd', 'frame.pyx', 'libavcodec.pxd']",['ef542be0dc3373817028473973c5568aa7b2166e'],8,19,27,8,,,
76aca97c3c080a5bbda59522de30dd21337ce2a6,Meta,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 19:54:27-08:00,28800,2013-11-10 19:54:27-08:00,28800,True,False,"['TODO.txt', 'fifo.pyx', 'index.rst', 'libav.pxd', 'channel_layout.pxd', 'setup.py']",['eff65059d728c1c94e0c42ddaf3b655ae9093a48'],17,42,59,6,,,
8058b6d2553bd06a26b394d6a51a7ef7b7d82f86,"Quick VideoFrame.from_image and .from_ndarray

They could be MUCH better.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 20:39:57-08:00,28800,2013-11-10 20:39:57-08:00,28800,True,False,"['container.pyx', 'frame.pyx']",['76aca97c3c080a5bbda59522de30dd21337ce2a6'],2,29,31,2,,,
c033d0b35573f21023596a6ce7c8741dd4f4b88f,Example of encoding a frame sequence,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 20:40:10-08:00,28800,2013-11-10 20:40:10-08:00,28800,True,False,['encode_frames.py'],['8058b6d2553bd06a26b394d6a51a7ef7b7d82f86'],0,36,36,1,,,
51be688dfcf7660490f16c6d4c7531b57315d744,Remove old examples,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 22:03:55-08:00,28800,2013-11-10 22:03:55-08:00,28800,True,False,"['TODO.txt', 'dealloc.py', 'log.py', 'reddit_pipe.py', 'reddit_pyav.py', 'times.py', 'tutorial.py']",['c033d0b35573f21023596a6ce7c8741dd4f4b88f'],211,6,217,7,0.0,0.0,0.0
6d118d9c11d9a4ba6e935265eec92d42afccc183,"Restructure for setuptools

I could not get source files in build to get
picked up by the MANIFEST.in, so I moved them.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 22:06:41-08:00,28800,2013-11-10 22:08:50-08:00,28800,True,False,"['.gitignore', 'MANIFEST.in', 'Makefile', 'libav.pxd', 'libavcodec.pxd', 'libavcodec_compat.h', 'libavformat.pxd', 'libavformat_compat.h', 'libavutil.pxd', 'channel_layout.pxd', 'dict.pxd', 'samplefmt.pxd', 'libavutil_compat.h', 'libswresample.pxd', 'libswresample_compat.h', 'libswscale.pxd', 'setup.py']",['51be688dfcf7660490f16c6d4c7531b57315d744'],20,13,33,17,,,
64f43bb098c07fb03959859570fa76b2da946320,Container.add_stream accepts rational frame rate,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 22:39:36-08:00,28800,2013-11-10 22:39:36-08:00,28800,True,False,['container.pyx'],['6d118d9c11d9a4ba6e935265eec92d42afccc183'],7,18,25,1,,,
148f6ffa66b0a179308ddb1150c12c1877b214c9,VideoFrame.from_ndarray allows explicit mode,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 22:40:07-08:00,28800,2013-11-10 22:40:07-08:00,28800,True,False,"['frame.pyx', 'encode_frames.py']",['64f43bb098c07fb03959859570fa76b2da946320'],7,10,17,2,,,
5802fcf3902af74fc99642832b5c7d86d57908e1,Restore basic subtitle decoding,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 23:03:29-08:00,28800,2013-11-10 23:10:31-08:00,28800,True,False,"['stream.pyx', 'stream.pxd', 'stream.pyx', 'stream.pyx', 'stream.pyx']",['148f6ffa66b0a179308ddb1150c12c1877b214c9'],11,12,23,5,,,
1b77471b2e7a89ee5ce5e1a0af6e7077551ae11d,Rename some examples,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 23:09:40-08:00,28800,2013-11-10 23:10:37-08:00,28800,True,False,"['audio.py', 'save_frames.py', 'save_subtitles.py']",['5802fcf3902af74fc99642832b5c7d86d57908e1'],5,7,12,3,,,
cc4d0fa2aa8465ae32b23c54f8a84bcf4d737877,"Release v0.1.0

FIRST PUBLIC RELEASE!",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 22:50:02-08:00,28800,2013-11-10 23:11:28-08:00,28800,True,False,"['CHANGELOG.md', 'README.md', 'TODO.txt']",['1b77471b2e7a89ee5ce5e1a0af6e7077551ae11d'],7,8,15,3,,,
8573ce5b161e8a84da4e20e5ef69697c8fb7b4ac,Add lots of headers to API docs,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 23:30:58-08:00,28800,2013-11-10 23:30:58-08:00,28800,True,False,"['api.rst', 'index.rst']",['cc4d0fa2aa8465ae32b23c54f8a84bcf4d737877'],3,56,59,2,,,
aacc4e56dfa43bd6a7fc3bec4886f3c7a1ac9a92,Notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-11 16:55:45-08:00,28800,2013-11-12 16:55:45-08:00,28800,True,False,['TODO.txt'],['8573ce5b161e8a84da4e20e5ef69697c8fb7b4ac'],0,7,7,1,,,
961ad8585f5771df08de0e6a0e3c080993fe01a0,Rename SwsContextProxy to VideoReformatter,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-12 17:07:58-08:00,28800,2013-11-15 11:05:36-08:00,28800,True,False,"['TODO.txt', 'frame.pxd', 'frame.pyx', 'reformatter.pxd', 'reformatter.pyx', 'stream.pxd', 'stream.pyx']",['aacc4e56dfa43bd6a7fc3bec4886f3c7a1ac9a92'],21,21,42,7,,,
630f05bd7b6de693e9da29b495a36b1312f925ca,Discuss semantic versioning in the CHANGELOG,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-12 17:08:16-08:00,28800,2013-11-15 11:05:36-08:00,28800,True,False,['CHANGELOG.md'],['961ad8585f5771df08de0e6a0e3c080993fe01a0'],0,7,7,1,,,
57aff2adf85c13096af5698d03735668d5f1741d,On the road to getting audio working,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-10 23:30:41-08:00,28800,2013-11-15 15:40:58-08:00,28800,True,False,"['stream.pyx', 'container.pyx', 'encode.py']",['630f05bd7b6de693e9da29b495a36b1312f925ca'],37,12,49,3,,,
54894557bbfce36f25c1b0712531fe209895c9df,AudioResampler can be flushed,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-15 16:31:23-08:00,28800,2013-11-15 16:31:27-08:00,28800,True,False,"['TODO.txt', 'resampler.pyx']",['57aff2adf85c13096af5698d03735668d5f1741d'],17,19,36,2,,,
83aa3ce515050c9c4ab0d7a2d5cf4742854c11ea,Fix attribute name in audio example,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-15 16:31:40-08:00,28800,2013-11-15 16:31:40-08:00,28800,True,False,['audio.py'],['54894557bbfce36f25c1b0712531fe209895c9df'],1,1,2,1,,,
4e8f4c4f1a388dbf0ccdd3499595a1dca84cec79,AudioFifo returns None when empty,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-15 17:17:17-08:00,28800,2013-11-15 17:17:17-08:00,28800,True,False,['fifo.pyx'],['83aa3ce515050c9c4ab0d7a2d5cf4742854c11ea'],0,3,3,1,,,
5f1ccdd548365c20801f6e1a4cff8f4be949c5aa,AudioResampler returns None when empty,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-15 17:17:51-08:00,28800,2013-11-15 17:17:51-08:00,28800,True,False,['resampler.pyx'],['4e8f4c4f1a388dbf0ccdd3499595a1dca84cec79'],0,4,4,1,,,
9ff0426b58bcd4d273701dc85c5d5f507bd5b33a,AudioStream.encode seems to work again,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-15 17:18:10-08:00,28800,2013-11-15 17:18:10-08:00,28800,True,False,"['TODO.txt', 'stream.pxd', 'stream.pyx', 'encode.py']",['5f1ccdd548365c20801f6e1a4cff8f4be949c5aa'],148,134,282,4,,,
fc4476af7a8dee7af6b79c3c9f5b9746017d9bbe,"AudioFrame._recalc_linesize is less drastic

This fixes pops we were having in resampled audio.
We need to recalculate the line size after
resampling, but the function we were using was
also resetting the data pointers based off of the
new line size, despite the data be filled by the
resampler based off the old line size.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-15 23:18:01-08:00,28800,2013-11-15 23:21:42-08:00,28800,True,False,"['fifo.pyx', 'frame.pxd', 'frame.pyx', 'resampler.pyx', 'frame.pyx', 'samplefmt.pxd']",['9ff0426b58bcd4d273701dc85c5d5f507bd5b33a'],22,40,62,6,,,
27329c9bf2512ff2b46a5076286b9338ec57012b,Tiny tweaks to when to flush the AudioStream fifo,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-15 23:36:16-08:00,28800,2013-11-15 23:36:16-08:00,28800,True,False,"['stream.pyx', 'encode.py']",['fc4476af7a8dee7af6b79c3c9f5b9746017d9bbe'],18,14,32,2,,,
59e7b0501d38d5663bef5788e0ad01a63914a179,Notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2013-11-16 14:28:44-08:00,28800,2013-11-16 14:28:44-08:00,28800,True,False,['TODO.txt'],['27329c9bf2512ff2b46a5076286b9338ec57012b'],15,21,36,1,,,
0d7fa0e6efb485f2c31419d1bd2a8dec5405861f,Syntax tweaks,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-04-27 17:29:22-07:00,25200,2014-04-27 17:29:22-07:00,25200,True,False,"['container.pyx', 'logging.pyx']",['daa62f41e945cca820a89ced30b88a0b689d420b'],3,3,6,2,,,
b44d1c2705be4dd950f1bbc8890e4d37be5b3c64,Work with Pillow as well as PIL,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-04-27 17:29:32-07:00,25200,2014-04-27 17:29:32-07:00,25200,True,False,"['frame.pyx', 'common.py']",['0d7fa0e6efb485f2c31419d1bd2a8dec5405861f'],4,4,8,2,,,
86ced24d5b6a04b7c50bf5fe6746ea536296ea38,Fix a typo,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-04-27 17:50:52-07:00,25200,2014-04-27 17:50:52-07:00,25200,True,False,['format.pyx'],['b44d1c2705be4dd950f1bbc8890e4d37be5b3c64'],1,1,2,1,,,
973474d7ae2b36bdd4cc6254332f1153a37d90c0,Write lib/func discovery macros into temp header,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-04-28 16:15:39-07:00,25200,2014-04-28 16:18:16-07:00,25200,True,False,"['HACKING.txt', 'libav.pxd', 'libavcodec_compat.h', 'libavformat_compat.h', 'libavutil_compat.h', 'libswresample_compat.h', 'setup.py']",['86ced24d5b6a04b7c50bf5fe6746ea536296ea38'],56,94,150,7,0.0,1.0,1.0
1302e789249749a4de88037aae56fe254ebda181,Rearrange the includes to mirror the projects,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-04-28 17:15:22-07:00,25200,2014-04-28 17:15:22-07:00,25200,True,False,"['Makefile', 'libav.pxd', 'avcodec.pxd', 'avcodec.pyav.h', 'libavcodec_compat.h', 'avformat.pxd', 'avformat.pyav.h', 'avutil.pxd', 'avutil.pyav.h', 'swresample.pxd', 'swresample.pyav.h', 'swscale.pxd']",['973474d7ae2b36bdd4cc6254332f1153a37d90c0'],30,40,70,12,,,
cd18dadb70ddf0916f482c4a5cd6d5b04947c06f,Be able to search for specific headers,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-04-28 17:15:32-07:00,25200,2014-04-28 17:15:32-07:00,25200,True,False,['setup.py'],['1302e789249749a4de88037aae56fe254ebda181'],2,16,18,1,1.0,1.0,1.0
e418cdc8034dc2dac3379fa28087e739449c1c7d,Test using Pillow instead of PIL,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-04-28 17:27:47-07:00,25200,2014-04-28 17:27:47-07:00,25200,True,False,['requirements.txt'],['cd18dadb70ddf0916f482c4a5cd6d5b04947c06f'],1,1,2,1,,,
8e3c0181d5586da0b685c71c9a8890e606438a0f,"`make` defaults to Cython-izing the sources

This makes the WesternX environment a little saner",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-05-02 16:04:20-07:00,25200,2014-05-02 16:04:20-07:00,25200,True,False,"['Makefile', 'TODO.txt']",['e418cdc8034dc2dac3379fa28087e739449c1c7d'],1,6,7,2,,,
de0a2a13290c0080cb55e9e6d828c01fac969753,Ignore some more non-packages for WesternX,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-05-02 17:37:14-07:00,25200,2014-05-02 17:37:14-07:00,25200,True,False,['setup.py'],['8e3c0181d5586da0b685c71c9a8890e606438a0f'],1,1,2,1,,,
aa9ab25595781644b2df6aeacbd3dcc217fdf0bc,fixed flushing buffered frames from the decoder,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2014-05-11 16:54:52-07:00,25200,2014-05-11 16:54:52-07:00,25200,True,False,"['stream.pyx', 'test_decode.py']",['de0a2a13290c0080cb55e9e6d828c01fac969753'],11,41,52,2,1.0,1.0,1.0
af1411cfa95205e60d66ccd6966854faacf2dc99,fix compiling ffmpeg and avconv,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2014-05-11 18:56:29-07:00,25200,2014-05-11 18:56:29-07:00,25200,True,False,"['generate_video.py', 'test-setup']",['aa9ab25595781644b2df6aeacbd3dcc217fdf0bc'],12,5,17,2,,0.0,
03c88c4b450d65db94221e7a86d01ca38c30b571,added seek method and test,Mark,mindmark@gmail.com,Mark,mindmark@gmail.com,2014-05-11 20:51:08-07:00,25200,2014-05-11 20:51:08-07:00,25200,True,False,"['container.pyx', 'test_seek.py']",['af1411cfa95205e60d66ccd6966854faacf2dc99'],1,144,145,2,0.671875,0.671875,1.0
01d5dcb8f31d57eac36a41015c4209882cd03646,Slight code formatting for new seek method,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-05-13 11:28:01-07:00,25200,2014-05-13 11:28:01-07:00,25200,True,False,['container.pyx'],['03c88c4b450d65db94221e7a86d01ca38c30b571'],6,9,15,1,,,
0d012d5aebcf119548d30c65450a801c11eb85ba,various seeking fixes,Mark,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-05-19 20:12:12-07:00,25200,2014-07-01 09:22:52-07:00,25200,True,False,"['container.pyx', 'frame.pyx', 'stream.pyx', 'stream.pyx', 'avcodec.pxd', 'avformat.pxd']",['01d5dcb8f31d57eac36a41015c4209882cd03646'],16,73,89,6,,,
4b01a14b9e278822b1d8f84a453ca5100e6520d0,fix segfault for image2 formats,Mark,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-05-19 20:46:28-07:00,25200,2014-07-01 09:22:52-07:00,25200,True,False,['stream.pyx'],['0d012d5aebcf119548d30c65450a801c11eb85ba'],2,3,5,1,,,
afbb4f575a0ee42eb877e39953268aa61d5aa5fa,combined stream seek methods,mark reid,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-05-20 12:32:42-07:00,25200,2014-07-01 09:22:52-07:00,25200,True,False,['stream.pyx'],['4b01a14b9e278822b1d8f84a453ca5100e6520d0'],11,22,33,1,,,
b1a6f2eaf5427786cae57bf37d0a829126561059,allow unkown codecs,mark reid,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-05-20 14:58:41-07:00,25200,2014-07-01 09:22:53-07:00,25200,True,False,"['container.pyx', 'stream.pyx']",['afbb4f575a0ee42eb877e39953268aa61d5aa5fa'],12,19,31,2,,,
4289f1b7482489ce7fa93bf20bf5869f0907338f,added LDFLAGS and CFLAGS overrides,mark reid,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-06-11 16:28:11-07:00,25200,2014-07-01 09:22:53-07:00,25200,True,False,['Makefile'],['b1a6f2eaf5427786cae57bf37d0a829126561059'],1,4,5,1,,,
ade00762211420e455280fd597084260ec083cc0,release the gil on potentially blocking operations,mark reid,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-06-17 17:32:01-07:00,25200,2014-07-01 09:22:53-07:00,25200,True,False,"['container.pyx', 'frame.pyx', 'stream.pyx']",['4289f1b7482489ce7fa93bf20bf5869f0907338f'],11,21,32,3,,,
122ccf03c3685f8f55263eeab3bcc76ef46835b7,"exposed sws_getColorspaceDetails, sws_getCoefficients and sws_setColorspaceDetails",mark reid,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-06-24 10:35:04-07:00,25200,2014-07-01 09:22:53-07:00,25200,True,False,['swscale.pxd'],['ade00762211420e455280fd597084260ec083cc0'],1,31,32,1,,,
eceffa13a8ba57bd4ddade98cd9b04c16404a33c,added colorspace conversion options,mark reid,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-06-24 12:42:49-07:00,25200,2014-07-01 09:22:54-07:00,25200,True,False,"['frame.pxd', 'frame.pyx', 'stream.pyx']",['122ccf03c3685f8f55263eeab3bcc76ef46835b7'],5,44,49,3,,,
4bbe79d4c082aee6abf2e6efd98c105e80fd1ae4,don't reformat if format matches,mark reid,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-06-24 13:06:10-07:00,25200,2014-07-01 09:22:54-07:00,25200,True,False,['stream.pyx'],['eceffa13a8ba57bd4ddade98cd9b04c16404a33c'],9,18,27,1,,,
60757e554656acaf7fc715124319a03cd78213d0,simplified __getbuffer__,mark reid,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-07-01 09:20:49-07:00,25200,2014-07-01 09:22:54-07:00,25200,True,False,['plane.pyx'],['4bbe79d4c082aee6abf2e6efd98c105e80fd1ae4'],20,4,24,1,,,
c057c32c3498a7c22fb87511f1e91ba0b1b1c0f8,fix for sws_getColorspaceDetails if pix_fmt conversion not supported,mark reid,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-07-02 12:08:35-07:00,25200,2014-07-02 12:08:35-07:00,25200,True,False,['frame.pyx'],['60757e554656acaf7fc715124319a03cd78213d0'],22,23,45,1,,,
e33a6943a79b92d0737baba61e51147be09aea87,"added more flexible colorspace conversion method.
added method to get numpy array from frame, similar to pil.image from frame",Moritz Kassner,moritzkassner@gmail.com,Moritz Kassner,moritzkassner@gmail.com,2014-07-06 13:26:06+02:00,-7200,2014-07-06 13:26:06+02:00,-7200,True,False,['frame.pyx'],['c057c32c3498a7c22fb87511f1e91ba0b1b1c0f8'],27,49,76,1,,,
7516d11633e7154e1ea7621775ee265d8d5fa531,example show frames using numpy and openCV,Will Patera,willpatera@gmail.com,Will Patera,willpatera@gmail.com,2014-07-06 13:40:06+02:00,-7200,2014-07-06 13:40:06+02:00,-7200,True,False,['show_frames_opencv.py'],['e33a6943a79b92d0737baba61e51147be09aea87'],0,22,22,1,,,
4bad4763c11eb8f7d005676eb8d48ca0d609f048,using first argument as video file path in example - to match other examples.,Will Patera,willpatera@gmail.com,Will Patera,willpatera@gmail.com,2014-07-06 13:58:10+02:00,-7200,2014-07-06 13:58:10+02:00,-7200,True,False,['show_frames_opencv.py'],['7516d11633e7154e1ea7621775ee265d8d5fa531'],3,2,5,1,,,
7b86a986c5b7c78e918d90e23cf2060ef34e068e,fixed typo,Will Patera,willpatera@gmail.com,Will Patera,willpatera@gmail.com,2014-07-07 11:35:38+02:00,-7200,2014-07-07 11:35:38+02:00,-7200,True,False,['show_frames_opencv.py'],['4bad4763c11eb8f7d005676eb8d48ca0d609f048'],1,1,2,1,,,
c237516689fad143174be94c5795d0fc0142a6ab,made frame.time_base accessible to user.,Moritz Kassner,moritzkassner@gmail.com,Moritz Kassner,moritzkassner@gmail.com,2014-07-08 15:15:02+02:00,-7200,2014-07-08 15:15:02+02:00,-7200,True,False,['frame.pyx'],['7b86a986c5b7c78e918d90e23cf2060ef34e068e'],1,10,11,1,,,
a801760866acdc7f2bf0fe0194d2443b1deef8e7,scale packet duration too,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-07-12 15:59:09-07:00,25200,2014-07-13 15:30:12-07:00,25200,True,False,['stream.pyx'],['c057c32c3498a7c22fb87511f1e91ba0b1b1c0f8'],0,6,6,1,,,
bc9d69e3fa1a60cd87fee5e3099d096bdfb2cf06,fixed typo,mark reid,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-07-07 10:43:19-07:00,25200,2014-07-16 09:38:26-07:00,25200,True,False,['frame.pyx'],['a801760866acdc7f2bf0fe0194d2443b1deef8e7'],1,1,2,1,,,
6a3148f8c1f5ecccf0ee3f00791a584f60fe40f5,release gil on open,mark reid,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-07-16 09:29:08-07:00,25200,2014-07-16 09:38:26-07:00,25200,True,False,['container.pyx'],['bc9d69e3fa1a60cd87fee5e3099d096bdfb2cf06'],5,12,17,1,,,
1dea9e92e0f985989cd30a1d66f9b5018bbce20d,added average_rate,mark reid,mindmark@gmail.com,mark reid,mindmark@gmail.com,2014-07-16 09:29:34-07:00,25200,2014-07-16 09:38:26-07:00,25200,True,False,['stream.pyx'],['6a3148f8c1f5ecccf0ee3f00791a584f60fe40f5'],2,9,11,1,,,
10839be46be36948abf5d78a2be71b24ea1233b1,removed av_frame_get_best_effort_timestamp,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-07-20 17:24:56-07:00,25200,2014-07-20 17:24:56-07:00,25200,True,False,"['stream.pxd', 'stream.pyx', 'avcodec.pxd', 'avutil.pxd']",['1dea9e92e0f985989cd30a1d66f9b5018bbce20d'],7,97,104,4,,,
f3b067a438091654ba8fdb0cc136c9d6a58a3859,added _flush_decoder_frames method,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-07-20 17:38:55-07:00,25200,2014-07-20 17:38:55-07:00,25200,True,False,"['stream.pxd', 'stream.pyx']",['10839be46be36948abf5d78a2be71b24ea1233b1'],17,27,44,2,,,
dce44afbe33770a06df793f055bf79a07a618814,"None flushes codec, like encoding",Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-07-20 17:48:35-07:00,25200,2014-07-20 17:48:35-07:00,25200,True,False,"['packet.pyx', 'stream.pxd', 'stream.pyx']",['f3b067a438091654ba8fdb0cc136c9d6a58a3859'],3,8,11,3,,,
01f7d4fb8066172198bebe946a22f50d0216f135,check frame counts,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-07-20 17:48:54-07:00,25200,2014-07-20 17:48:54-07:00,25200,True,False,['test_seek.py'],['dce44afbe33770a06df793f055bf79a07a618814'],1,3,4,1,0.0,0.0,1.0
2ec56c9b53bd73cf9cc7bcdea69b8f87e1304d27,check frame counts against stream.frames,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-07-20 17:51:09-07:00,25200,2014-07-20 17:51:09-07:00,25200,True,False,['test_seek.py'],['01f7d4fb8066172198bebe946a22f50d0216f135'],3,3,6,1,,,
928bb7b8fd5ce38e4eb507426751c541c91b5732,set pts of flushed frames if possible,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-07-20 17:59:58-07:00,25200,2014-07-20 17:59:58-07:00,25200,True,False,['stream.pyx'],['2ec56c9b53bd73cf9cc7bcdea69b8f87e1304d27'],1,10,11,1,,,
0a06f5997df19a8b7572e16731e8f8842ac07cfd,matched dranger method pts closer,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-07-20 18:37:19-07:00,25200,2014-07-20 18:37:19-07:00,25200,True,False,['stream.pyx'],['928bb7b8fd5ce38e4eb507426751c541c91b5732'],2,2,4,1,,,
3508ae59263d0d6f0247a85bdc4bc4ed847de1ed,added frame seek example,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-07-20 19:51:53-07:00,25200,2014-07-20 19:51:53-07:00,25200,True,False,['frame_seek_example.py'],['0a06f5997df19a8b7572e16731e8f8842ac07cfd'],0,287,287,1,0.5838509316770186,0.7267080745341615,0.968944099378882
1a87e38c35cfbc6b12034ef99a7c231de6ef7f72,seeking tests,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-07-27 14:32:56-07:00,25200,2014-07-27 14:32:56-07:00,25200,True,False,"['stream.pxd', 'stream.pyx', 'frame_seek_example.py', 'second_seek_example.py']",['3508ae59263d0d6f0247a85bdc4bc4ed847de1ed'],56,704,760,4,0.3453038674033149,0.46408839779005523,0.9696132596685083
646c4893fc8356ccf98a08bad404170921508bd0,"Initialize global network.

This is recommended, since it avoids the overhead of implicitly doing
the setup for each session.",Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-19 07:41:38+01:00,-3600,2014-08-19 07:41:38+01:00,-3600,True,False,"['_core.pyx', 'avformat.pxd']",['c057c32c3498a7c22fb87511f1e91ba0b1b1c0f8'],0,4,4,2,,,
de13a9cbce6a011c1c1eadc0cd10b3c17c2cd329,"Support PIL or Pillow.

Clean up examples so that Pillow can be used rather than the deprecated
PIL library.",Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-19 09:58:26+01:00,-3600,2014-08-19 09:58:26+01:00,-3600,True,False,"['audio.py', 'decode.py', 'filmstrip.py', 'gen_rgb_rotate.py', 'merge-filmstrip.py', 'save_frames.py', 'save_subtitles.py']",['646c4893fc8356ccf98a08bad404170921508bd0'],7,7,14,7,,,
4df26a273f61263b3936e83cf7f242eb97083fb7,Add file probing tests,Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-19 11:01:15+01:00,-3600,2014-08-19 11:01:15+01:00,-3600,True,False,['test_file_probing.py'],['de13a9cbce6a011c1c1eadc0cd10b3c17c2cd329'],0,62,62,1,1.0,1.0,1.0
db268587130937ed6b81c8f070d9a200d84294d5,"Add size property to InputContainer

Could be argued whether to use python internal libraries, but FFMPEG
already has an API for size which will work for both local and network
files.",Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-19 11:10:08+01:00,-3600,2014-08-19 11:10:08+01:00,-3600,True,False,"['container.pyx', 'avformat.pxd', 'test_file_probing.py']",['4df26a273f61263b3936e83cf7f242eb97083fb7'],0,8,8,3,1.0,1.0,1.0
0ea420ee9a3c4ff775ea363d4abca3f157dbe7d8,"Add max_bit_rate to Stream

FFMPEG does not return a bit-rate for mpeg2 video streams. When this
happens you could fallback to the max_rate.

Libav however does return a bit-rate for mpeg2.

Tests added which handle differences in results between lib and ffmpeg.",Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-19 11:58:44+01:00,-3600,2014-08-19 11:58:44+01:00,-3600,True,False,"['Makefile', 'stream.pyx', 'test_file_probing.py']",['db268587130937ed6b81c8f070d9a200d84294d5'],2,29,31,3,1.0,1.0,1.0
0352b8ea1885992cff5a5b6226dc8a9678ec0004,Add width and height read properties to Stream.,Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-19 12:05:04+01:00,-3600,2014-08-19 12:05:04+01:00,-3600,True,False,"['stream.pyx', 'test_file_probing.py']",['0ea420ee9a3c4ff775ea363d4abca3f157dbe7d8'],2,11,13,2,0.0,1.0,1.0
ca1996319eb287cb6ba88ffe071b2eacca2ac871,Add codec profile to Stream,Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-19 12:16:35+01:00,-3600,2014-08-19 12:16:35+01:00,-3600,True,False,"['stream.pyx', 'avcodec.pxd', 'test_file_probing.py']",['0352b8ea1885992cff5a5b6226dc8a9678ec0004'],0,13,13,3,0.5,1.0,1.0
00f41d7873077fcf08264acd7daec814a0e88429,"Add coded_height and coded_width to VideoStream

Some file specifications specify that the coded height and width needs
to vary from the picture resolution, so these are good parameters to
have available for QA type usage.",Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-19 13:14:59+01:00,-3600,2014-08-19 13:14:59+01:00,-3600,True,False,"['stream.pyx', 'avcodec.pxd', 'test_file_probing.py']",['ca1996319eb287cb6ba88ffe071b2eacca2ac871'],0,15,15,3,0.5,1.0,1.0
fc86cec50e9cfeba1b96a4d058991a36c4103a76,Add display_aspect_ratio to VideoStream,Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-19 13:20:30+01:00,-3600,2014-08-19 13:20:30+01:00,-3600,True,False,"['stream.pyx', 'avutil.pxd', 'test_file_probing.py']",['00f41d7873077fcf08264acd7daec814a0e88429'],0,17,17,3,0.6666666666666666,1.0,1.0
4ac5457111670039cc6e19a7580b213b911836b4,"Add with-audio & language to generate_video

This will be used for tests that require a video & audio file.",Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-19 15:43:51+01:00,-3600,2014-08-19 15:43:51+01:00,-3600,True,False,['generate_video.py'],['fc86cec50e9cfeba1b96a4d058991a36c4103a76'],6,24,30,1,0.0,0.23529411764705882,0.23529411764705882
3993ea3da77bae7217be375276694af23ee6718c,"Add language to Stream.

New language get property for Stream with tests.",Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-19 15:44:36+01:00,-3600,2014-08-19 15:44:36+01:00,-3600,True,False,"['Makefile', 'stream.pyx', 'test_file_probing.py']",['4ac5457111670039cc6e19a7580b213b911836b4'],6,12,18,3,1.0,1.0,1.0
69480feb084bfed44fc45965c023e2247642dc37,Specify bit-rate for video samples.,Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-19 16:22:58+01:00,-3600,2014-08-19 16:22:58+01:00,-3600,True,False,"['Makefile', 'generate_video.py']",['3993ea3da77bae7217be375276694af23ee6718c'],5,5,10,2,,,
8c678a9aecc4e06ef9477401c6860d6a0dabc8fa,FIX: Interpret linesize as absolute value.,danielballan,daniel.b.allan@gmail.com,danielballan,daniel.b.allan@gmail.com,2014-08-19 11:52:19-04:00,14400,2014-08-19 12:00:34-04:00,14400,True,False,['plane.pyx'],['c057c32c3498a7c22fb87511f1e91ba0b1b1c0f8'],1,2,3,1,,,
4abd62fe543b170cf3cf4b0039077ef752e77d0c,Document the motivation for the fix,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-19 20:09:59-07:00,25200,2014-08-19 20:09:59-07:00,25200,True,False,['plane.pyx'],['8c678a9aecc4e06ef9477401c6860d6a0dabc8fa'],2,4,6,1,,,
682d21f65ffbf4a1e6569b313ef91632cf86d7a8,Fix unittests,Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-21 11:36:13+01:00,-3600,2014-08-21 11:36:13+01:00,-3600,True,False,['test_file_probing.py'],['69480feb084bfed44fc45965c023e2247642dc37'],2,2,4,1,,,
528f6fb620734eb7c8a581514c235158c07006e2,"Use FATE samples in unit tests

Using certain FATE samples in probing tests to ensure consistency with
the input.",Billy Shambrook,billy.shambrook@gmail.com,Billy Shambrook,billy.shambrook@gmail.com,2014-08-21 13:58:21+01:00,-3600,2014-08-21 13:58:21+01:00,-3600,True,False,"['.gitignore', 'Makefile', 'test_file_probing.py']",['682d21f65ffbf4a1e6569b313ef91632cf86d7a8'],70,50,120,3,0.0,0.0,0.0
403788b8a30cf5be934b422bea7108c6b5672827,"Sometimes not all data is consumed from a packet, and that is ok",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 10:43:45-07:00,25200,2014-08-21 10:43:45-07:00,25200,True,False,"['stream.pyx', 'save_subtitles.py']",['fecf06c583241727af97c6d3ec86ea2a6f38db1f'],6,14,20,2,,,
5cb945e0d68d42cc9b961cfe12edab32af589f00,Type specific subtitle classes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 11:03:01-07:00,25200,2014-08-21 11:03:01-07:00,25200,True,False,"['stream.pyx', 'subtitle.pxd', 'subtitle.pyx', 'save_subtitles.py']",['403788b8a30cf5be934b422bea7108c6b5672827'],21,89,110,4,,,
c3a460b155068999c34bdc7cd59ea6c11030bedd,FIX: Stream.__repr__ referring to old attribute,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 11:03:23-07:00,25200,2014-08-21 11:03:23-07:00,25200,True,False,['stream.pyx'],['5cb945e0d68d42cc9b961cfe12edab32af589f00'],1,1,2,1,,,
3a228b3aaeca305466367dbc4d76ee73f40bb1e1,Can pull FATE samples in tests themselves,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 11:22:10-07:00,25200,2014-08-21 11:22:10-07:00,25200,True,False,"['Makefile', 'common.py']",['c3a460b155068999c34bdc7cd59ea6c11030bedd'],3,17,20,2,1.0,1.0,1.0
84f43fb78e8e8f434616122bb82f66552131758c,Roughtly testing subtitles,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 11:22:21-07:00,25200,2014-08-21 11:22:21-07:00,25200,True,False,"['subtitle.pyx', 'test_subtitles.py']",['3a228b3aaeca305466367dbc4d76ee73f40bb1e1'],0,56,56,2,0.3448275862068966,1.0,1.0
70788a1767fc4e9e2f76bf0bbec7155d65c80054,Buffer interface for subtitle planes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 11:51:04-07:00,25200,2014-08-21 11:51:04-07:00,25200,True,False,"['plane.pyx', 'subtitle.pxd', 'subtitle.pyx', 'test_subtitles.py']",['84f43fb78e8e8f434616122bb82f66552131758c'],32,79,111,4,1.0,0.0,0.0
5b26dd7ce3084d76ba9758b707f870363d46a0a7,Add new authors!,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 17:38:36-07:00,25200,2014-08-21 17:38:36-07:00,25200,True,False,['AUTHORS.txt'],['1d33634fb39c29c7d2139d612b415f72e6deeef1'],2,4,6,1,,,
aeb9d3e55409c1d1ab929078091a4017643c1de6,Delay importing numpy as late as possible,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 17:53:03-07:00,25200,2014-08-21 17:53:03-07:00,25200,True,False,['frame.pyx'],['c237516689fad143174be94c5795d0fc0142a6ab'],2,1,3,1,,,
0bf7688d9dd3be65466cabb3cd7dbc85f4c1be78,Add more new authors!,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 17:55:10-07:00,25200,2014-08-21 17:55:10-07:00,25200,True,False,['AUTHORS.txt'],['928de6b8935f0309789b2a7cb2eb8263eb14bd34'],0,2,2,1,,,
54d37aa6659582af2227368e0e686f3e4e858a0b,"Fix new PTS method to work with non-audio/video streams

It was assuming everything decoded into a Frame; this is not actually the case.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 18:10:58-07:00,25200,2014-08-21 18:10:58-07:00,25200,True,False,['stream.pyx'],['c838ff78373c6f13be4aeac7f7a3fd3dbb2cc60b'],6,8,14,1,,,
52f0e49df2c15b91b3319f3b90092491a5acff9d,Readability,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 18:21:15-07:00,25200,2014-08-21 18:21:15-07:00,25200,True,False,['stream.pyx'],['54d37aa6659582af2227368e0e686f3e4e858a0b'],31,15,46,1,,,
fe4547ad1a7e6fa219bda68a0a9a9d09b9dca016,Start including liavdevices,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-04-27 17:51:24-07:00,25200,2014-08-21 19:16:39-07:00,25200,True,False,"['_core.pyx', 'container.pyx', 'libav.pxd', 'avdevice.pxd', 'setup.py']",['52f0e49df2c15b91b3319f3b90092491a5acff9d'],19,58,77,5,0.0,0.0,1.0
dfd810a9a1021bd2ed0936b8393f2b457d7f778b,"Properly hook requested formats into InputContainer (OutputContainer untested)

Finally some progress on #29 and #36.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 19:42:49-07:00,25200,2014-08-21 19:42:49-07:00,25200,True,False,"['container.pyx', 'decode.py', 'filmstrip.py']",['fe4547ad1a7e6fa219bda68a0a9a9d09b9dca016'],11,26,37,3,1.0,0.0,1.0
8f157e12f9563a3d7743d91bfb572bcf40c2bf0b,Example that averages frames together,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 20:11:06-07:00,25200,2014-08-21 20:11:06-07:00,25200,True,False,['average.py'],['dfd810a9a1021bd2ed0936b8393f2b457d7f778b'],0,60,60,1,1.0,0.0,1.0
ba8e0e087186ef1988172f8652299f72fe7b92da,Expose options for input containers; libavdevice support complete (#29 and #36),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-30 16:20:23-07:00,25200,2014-08-30 16:21:50-07:00,25200,True,False,"['container.pxd', 'container.pyx', 'decode.py']",['7089b9da3f04cbd177f1af8f577f6903ba4676f3'],7,21,28,3,,,
601112a9dc05f18c75ba3a9ac7298171f7547838,"Planes can update from buffers

Attempt to make frames from Numpy arrays more efficient. (#46)",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-30 16:33:54-07:00,25200,2014-08-30 16:33:54-07:00,25200,True,False,"['plane.pyx', 'utils.pxd', 'utils.pyx', 'frame.pyx']",['ba8e0e087186ef1988172f8652299f72fe7b92da'],14,81,95,4,,,
53afa2a1d421dc18fdf19991a4e256f7343c472e,"Frame.pts always comes from AVFrame.pkt_pts when decoding

Dranger's tutorials appear to be dangerously out of date in this respect.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-31 21:27:12-07:00,25200,2014-09-01 09:57:55-07:00,25200,True,False,"['resampler.pyx', 'container.pyx', 'frame.pyx', 'packet.pyx', 'stream.pxd', 'stream.pyx', 'avcodec.pxd']",['601112a9dc05f18c75ba3a9ac7298171f7547838'],151,41,192,7,,,
0c8b3229d15eba0a01289d93946b60833aabaf48,Centralize copying of frame attributes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-31 21:37:27-07:00,25200,2014-09-01 09:58:04-07:00,25200,True,False,"['resampler.pyx', 'frame.pxd', 'frame.pyx', 'frame.pyx']",['53afa2a1d421dc18fdf19991a4e256f7343c472e'],7,19,26,4,,,
d2ac1c94931ecb048c6a88bcf274d75d7daf4fb7,"Move seek flushes to the container, and fix decode flushes",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-31 22:40:23-07:00,25200,2014-09-01 09:58:14-07:00,25200,True,False,"['container.pxd', 'container.pyx', 'frame.pyx', 'packet.pyx', 'stream.pxd', 'stream.pyx']",['0c8b3229d15eba0a01289d93946b60833aabaf48'],57,64,121,6,,,
ff449762c76eb6c323df5e42ac292b204a417253,Python 2.6 does not have memory views,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-01 08:32:46-07:00,25200,2014-09-01 09:58:21-07:00,25200,True,False,['test_subtitles.py'],['d2ac1c94931ecb048c6a88bcf274d75d7daf4fb7'],1,2,3,1,0.0,1.0,1.0
3bc5eea3b873a18bde738c224c5dbee1799ada9a,Expose all seeking flags,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-01 08:45:14-07:00,25200,2014-09-01 09:58:29-07:00,25200,True,False,"['container.pxd', 'container.pyx', 'stream.pyx']",['ff449762c76eb6c323df5e42ac292b204a417253'],18,25,43,3,,,
5e4d548e8829371ef783fe44464c1adf7c9ccdbb,Make sure we have a codec before decoding,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-01 09:09:11-07:00,25200,2014-09-01 09:58:38-07:00,25200,True,False,['stream.pyx'],['3bc5eea3b873a18bde738c224c5dbee1799ada9a'],1,4,5,1,,,
5a0bd0bdb051b665b8b51fc86b33c67e6096fa7d,"Skip subtitle tests if we don't have the codec

Libav does not have the one for movtext.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-01 09:13:28-07:00,25200,2014-09-01 09:58:47-07:00,25200,True,False,['test_subtitles.py'],['5e4d548e8829371ef783fe44464c1adf7c9ccdbb'],4,8,12,1,0.5,1.0,1.0
ed90a3f9b2cdc0b46eb372c06f521a91a99ef670,Bump to v0.2.0,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-11 15:44:04-07:00,25200,2014-09-11 15:44:04-07:00,25200,True,False,"['CHANGELOG.md', 'setup.py']",['5a0bd0bdb051b665b8b51fc86b33c67e6096fa7d'],1,13,14,2,,,
091b74f90f5bee2e0f801acdc10f0fe83b8159ef,"WIP: Support Python 3.

PyString -> PyBytes

fix prints missed

Accept Python 3 strings in open()

Fix logger name (string issue again)

Fix color format string types.

Fix print function

FIX: Missing arg

No need to specify -3

try unicode_literals

FIX: Use six and __future__ imports.

FIX: Encome VideoFrame format as bytes.

More six and future fixes. Added temp prints in VideoFormat

fixing bytes/str issues",danielballan,daniel.b.allan@gmail.com,danielballan,daniel.b.allan@gmail.com,2014-08-21 09:05:36-04:00,14400,2014-09-12 14:44:40-04:00,14400,True,False,"['format.pyx', 'layout.pyx', 'container.pxd', 'container.pyx', 'format.pyx', 'logging.pyx', 'plane.pyx', 'stream.pyx', 'utils.pyx', 'format.pyx', 'frame.pyx', 'stream.pyx', 'generate_audio.py', 'generate_video.py', 'setup.py', 'common.py', 'test_audiofifo.py', 'test_decode.py', 'test_doctests.py', 'test_encoding.py', 'test_file_probing.py', 'test_subtitles.py', 'test_videoformat.py', 'test_videoframe.py']",['ed90a3f9b2cdc0b46eb372c06f521a91a99ef670'],74,136,210,24,,,
3b1c493b43886f2f58d643f9d9a229b22c907686,Use Cython's automatic string handling; all tests pass,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-12 12:49:48-07:00,25200,2014-09-12 12:53:20-07:00,25200,True,False,"['Makefile', 'format.pyx', 'layout.pyx', 'container.pxd', 'container.pyx', 'format.pxd', 'format.pyx', 'logging.pyx', 'utils.pxd', 'utils.pyx', 'format.pyx', 'frame.pyx', 'stream.pyx', 'common.py', 'test_audiofifo.py', 'test_doctests.py', 'test_encoding.py', 'test_file_probing.py', 'test_seek.py', 'test_subtitles.py', 'test_videoformat.py', 'test_videoframe.py']",['091b74f90f5bee2e0f801acdc10f0fe83b8159ef'],99,74,173,22,0.8,1.0,1.0
d13cfe788d133e013c413812192a2bf5cc44ee3e,"Remove prints, and rework some Py2/3isms in testing",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-12 13:14:11-07:00,25200,2014-09-12 13:14:11-07:00,25200,True,False,"['container.pyx', 'generate_audio.py', 'generate_video.py', 'common.py', 'test_file_probing.py']",['3b1c493b43886f2f58d643f9d9a229b22c907686'],17,27,44,5,,,
181fbe5eab8faf8d05bb87fa03e67acaeeb6bebe,"Revert formatting changes

These aren't Python 3 related.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-12 13:22:07-07:00,25200,2014-09-12 13:22:07-07:00,25200,True,False,"['format.pyx', 'container.pyx', 'format.pyx', 'format.pyx', 'frame.pyx']",['d13cfe788d133e013c413812192a2bf5cc44ee3e'],13,6,19,5,,,
6dd2bf6a3a89879434fb7a904bf98c07f5917fc1,Use Cythonic char* to str conversion,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-12 13:22:31-07:00,25200,2014-09-12 13:22:31-07:00,25200,True,False,['plane.pyx'],['181fbe5eab8faf8d05bb87fa03e67acaeeb6bebe'],4,2,6,1,,,
8686c4e5fbabcdc71ea21a2a564f4bdd23e1873e,Add Python 3 to Travis,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-12 13:23:00-07:00,25200,2014-09-12 13:23:00-07:00,25200,True,False,['.travis.yml'],['6dd2bf6a3a89879434fb7a904bf98c07f5917fc1'],0,3,3,1,,,
109e11eb079f1a6400c19a0c40babbc195cf92e5,Fix seeking test,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-12 13:31:43-07:00,25200,2014-09-12 13:41:14-07:00,25200,True,False,['test_seek.py'],['8686c4e5fbabcdc71ea21a2a564f4bdd23e1873e'],4,6,10,1,,,
cf28ecce4c60679f906a4a0c1e2d6c2446f85051,Pull all FATE via fate_suite,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-12 13:55:14-07:00,25200,2014-09-12 13:55:14-07:00,25200,True,False,"['Makefile', 'test_file_probing.py']",['109e11eb079f1a6400c19a0c40babbc195cf92e5'],8,4,12,2,,,
e9619262cb345fc92e812b646163230414d68efd,Fix generate_audio for Py3,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-12 13:55:23-07:00,25200,2014-09-12 13:55:23-07:00,25200,True,False,['generate_audio.py'],['cf28ecce4c60679f906a4a0c1e2d6c2446f85051'],3,5,8,1,,,
06e1cb2415c29a943276c494de785a1c8a055678,Use pkgutil to register doctests.,danielballan,daniel.b.allan@gmail.com,Mike Boers,github@mikeboers.com,2014-09-13 16:22:25-04:00,14400,2014-09-13 18:28:10-07:00,25200,True,False,['test_doctests.py'],['e9619262cb345fc92e812b646163230414d68efd'],12,6,18,1,,,
34b91e6151e1805bedabe1775faaac45a9354678,"Link against libavdevice, and fail if any libs are missing",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-13 21:01:30-07:00,25200,2014-09-13 21:01:30-07:00,25200,True,False,['setup.py'],['0c2b193a2d54078062f0942270926ef074a5c5fd'],1,9,10,1,,,
b01fd9ea6920712b921f670c0db0c2eac0fc8163,"Clean up setup.py: libraries are required, duplicate code removed, docs, etc.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-13 21:16:01-07:00,25200,2014-09-13 21:16:01-07:00,25200,True,False,['setup.py'],['34b91e6151e1805bedabe1775faaac45a9354678'],67,51,118,1,0.0,0.0,
6a3c0c579fdaf54d1bcd7a0acfdb5c2e2812fdc0,Bump to v0.2.1,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-15 11:01:12-07:00,25200,2014-09-15 11:03:50-07:00,25200,True,False,"['CHANGELOG.md', 'setup.py']",['b01fd9ea6920712b921f670c0db0c2eac0fc8163'],2,36,38,2,,,
f8ad8a82adc56aa287a802c4740155e672e221f0,Docs: Improve index a little,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-07-15 15:30:48-07:00,25200,2014-09-15 11:06:18-07:00,25200,True,False,"['HACKING.md', 'index.rst']",['6a3c0c579fdaf54d1bcd7a0acfdb5c2e2812fdc0'],18,25,43,2,,,
63567bfb657915ebe4cbc67239378f0b290b194d,Docs: Be able to write Sphinx in library headers,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-07-15 15:33:29-07:00,25200,2014-09-15 11:06:18-07:00,25200,True,False,"['.gitignore', 'Makefile', 'conf.py', 'includes.py', 'index.rst', 'avformat.pxd']",['f8ad8a82adc56aa287a802c4740155e672e221f0'],222,72,294,6,,,
376d219210a8ecb6a89e5c253423ea3527cc512b,Docs: Basic overview of time in the libraries,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-07-15 15:45:17-07:00,25200,2014-09-15 11:06:18-07:00,25200,True,False,['HACKING.md'],['63567bfb657915ebe4cbc67239378f0b290b194d'],0,9,9,1,,,
0c05ba1b271b9a4046d5d2558758cdc2054515c1,Docs: Deal with changes to subtitle API,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-15 11:10:38-07:00,25200,2014-09-15 11:10:38-07:00,25200,True,False,['api.rst'],['376d219210a8ecb6a89e5c253423ea3527cc512b'],2,17,19,1,,,
fdcfdf245a5c19b2814d103ef682eca1aa244622,Docs: discuss installation issues; fixes #30 and #44,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-15 11:20:25-07:00,25200,2014-09-15 11:20:25-07:00,25200,True,False,['index.rst'],['0c05ba1b271b9a4046d5d2558758cdc2054515c1'],0,54,54,1,,,
b84e118a553f36d143bedffe70466f657775b763,Docs: Reference @mkassner's script for building dependencies,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-15 11:26:42-07:00,25200,2014-09-15 11:26:42-07:00,25200,True,False,['index.rst'],['fdcfdf245a5c19b2814d103ef682eca1aa244622'],3,4,7,1,,,
f9c9d57401e4cd9256048283d13c0ae36da2a15e,"Fail hard if ctypes cannot find a library for inspection

Inspired by #52.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-17 15:38:28-07:00,25200,2014-09-17 15:38:28-07:00,25200,True,False,['setup.py'],['b84e118a553f36d143bedffe70466f657775b763'],1,3,4,1,0.0,0.0,1.0
36463944a782672c96d5a61c09273f37707781ff,WIP: Start Codec descriptor class(es),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-07-13 18:06:35-07:00,25200,2014-09-17 15:47:46-07:00,25200,True,False,"['codec.pxd', 'codec.pyx', 'stream.pyx', 'utils.pxd', 'utils.pyx', 'format.pyx', 'avcodec.pxd', 'test_codec.py']",['f9c9d57401e4cd9256048283d13c0ae36da2a15e'],15,149,164,8,1.0,1.0,1.0
38c8735b410c18f96f3041fc8c48dbede390b4ea,Packet allows for setting stream,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-11 12:40:13-07:00,25200,2014-09-17 15:48:56-07:00,25200,True,False,"['packet.pxd', 'packet.pyx']",['36463944a782672c96d5a61c09273f37707781ff'],4,12,16,2,,,
291eea0af8e3005c041af3e50f163be74b673a13,Create streams from a template,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-11 12:40:31-07:00,25200,2014-09-17 15:48:56-07:00,25200,True,False,"['container.pxd', 'container.pyx', 'avformat.pxd']",['38c8735b410c18f96f3041fc8c48dbede390b4ea'],14,56,70,3,,,
d6a7a3cdd79e9642a8b54f138729af9402625387,"Start working on remux example

Seems to be something wrong with out of order dts",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-11 12:41:05-07:00,25200,2014-09-17 15:48:56-07:00,25200,True,False,"['stream.pyx', 'stream.pyx', 'remux.py']",['291eea0af8e3005c041af3e50f163be74b673a13'],2,72,74,3,1.0,1.0,1.0
0babb2d7290bc77ac04f693ce450f788827bf258,Set packet stream index when stream is set (so it is slightly more valid),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-11 13:51:30-07:00,25200,2014-09-17 15:48:56-07:00,25200,True,False,"['packet.pxd', 'packet.pyx']",['d6a7a3cdd79e9642a8b54f138729af9402625387'],1,10,11,2,,,
b05d6a99e051578459cc2057f3dc4459197e7812,Notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-11 15:38:32-07:00,25200,2014-09-17 15:48:56-07:00,25200,True,False,['TODO.txt'],['0babb2d7290bc77ac04f693ce450f788827bf258'],7,4,11,1,,,
938153a1b7fccc9bdc8bbc5832c52f3d338c42e7,Very basic player example,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-07-05 11:10:27-07:00,25200,2014-09-17 15:49:22-07:00,25200,True,False,"['frame.pyx', 'player.py']",['b05d6a99e051578459cc2057f3dc4459197e7812'],0,55,55,2,1.0,1.0,1.0
209da50b25479e55ef817fd05cdc4aee2d148681,Very basic audio player example,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-21 16:58:42-07:00,25200,2014-09-17 15:49:22-07:00,25200,True,False,['audio_player.py'],['938153a1b7fccc9bdc8bbc5832c52f3d338c42e7'],0,58,58,1,,,
d3c5a09bbdfe804a7da552eb329a97a8574254c4,Player --format option,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-30 16:05:28-07:00,25200,2014-09-17 15:49:22-07:00,25200,True,False,['player.py'],['209da50b25479e55ef817fd05cdc4aee2d148681'],2,3,5,1,,,
c5ee8a19a367364d2ad8a486c6c40cbcdbe75030,Player outputs to QtOpenGL widget too,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-31 17:05:20-07:00,25200,2014-09-17 15:49:22-07:00,25200,True,False,"['glproxy.py', 'player.py', 'qtproxy.py']",['d3c5a09bbdfe804a7da552eb329a97a8574254c4'],6,168,174,3,1.0,0.8351648351648352,0.6263736263736264
e1e226240ff0b4dc3dea5df7b45696e64f98660a,Player example passes pointer to OpenGL,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-08-31 21:38:08-07:00,25200,2014-09-17 15:49:22-07:00,25200,True,False,"['plane.pyx', 'audio_player.py', 'player.py', 'qtproxy.py']",['c5ee8a19a367364d2ad8a486c6c40cbcdbe75030'],44,85,129,4,1.0,1.0,1.0
c15643d1e31d815492a805f50b818510f530186f,"Cythonize within setup.py

Addresses some of #51.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-17 16:43:51-07:00,25200,2014-09-17 16:43:51-07:00,25200,True,False,"['Makefile', 'setup.py']",['e1e226240ff0b4dc3dea5df7b45696e64f98660a'],30,69,99,2,0.95,1.0,1.0
dad190ef2a628899f01d4e6e06c8335879439de4,"Fix control flow when checking for functions in libs

Addresses part of #52",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-17 16:54:28-07:00,25200,2014-09-17 16:54:28-07:00,25200,True,False,['setup.py'],['c15643d1e31d815492a805f50b818510f530186f'],1,2,3,1,,,
d89747e26371b1986b4cec5a7514ba2c99480487,Allow codec test to have more than just the one format,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-17 18:38:52-07:00,25200,2014-09-17 18:38:52-07:00,25200,True,False,['test_codec.py'],['dad190ef2a628899f01d4e6e06c8335879439de4'],2,2,4,1,,,
f593e16d0c91afd272994c18dbb7129fb9a30ec0,Fix control flow AGAIN when checking for functions in libs,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-18 10:57:33-07:00,25200,2014-09-18 10:57:33-07:00,25200,True,False,['setup.py'],['d89747e26371b1986b4cec5a7514ba2c99480487'],4,1,5,1,1.0,1.0,0.0
9824ada3358650cf0ed14e469eee27f08f5ba14a,Fix bug that kept from warning that Cython is required,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-10-01 11:08:39-07:00,25200,2014-10-01 11:08:39-07:00,25200,True,False,['setup.py'],['f593e16d0c91afd272994c18dbb7129fb9a30ec0'],7,7,14,1,0.0,0.0,0.0
3cc2b7c6c6fd10998cf9a63b43629c4c13afef53,Use proper int size; fix for #54,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-10-04 14:31:14-07:00,25200,2014-10-04 14:31:14-07:00,25200,True,False,['avformat.pxd'],['9824ada3358650cf0ed14e469eee27f08f5ba14a'],1,1,2,1,,,
145bc3a11dd439c83980c100bafd95fe094e9f7c,Bump to 0.2.2,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-10-04 16:34:14-07:00,25200,2014-10-04 16:34:14-07:00,25200,True,False,"['CHANGELOG.md', 'setup.py']",['3cc2b7c6c6fd10998cf9a63b43629c4c13afef53'],1,7,8,2,,,
ed647910def2e0c8b1c7ae0ed899c8174a08ca5e,"Remove AVStream.r_frame_rate

It was deprecated in Libav, and can easily not be compiled in. Their reasons are
seemingly valid, so it is tons easier for us to simply remove it from PyAV.

This hopefully fixes #52.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-17 17:09:47-07:00,25200,2014-10-09 13:40:50-07:00,25200,True,False,"['container.pyx', 'stream.pyx', 'avformat.pxd']",['145bc3a11dd439c83980c100bafd95fe094e9f7c'],15,1,16,3,,,
2379c5a3b72887527a0ab66b0961afea5b6579a6,Remove failing asserts due to missing r_frame_rate,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-09-18 10:59:03-07:00,25200,2014-10-09 14:17:33-07:00,25200,True,False,"['test_encoding.py', 'test_file_probing.py']",['ed647910def2e0c8b1c7ae0ed899c8174a08ca5e'],2,0,2,2,1.0,0.0,0.0
f2aa8d231c7d83480572701fce2b4b695aff9f26,Don't log after shutdown by default,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-10-07 10:25:30-07:00,25200,2014-10-09 14:17:45-07:00,25200,True,False,['logging.pyx'],['2379c5a3b72887527a0ab66b0961afea5b6579a6'],5,12,17,1,,,
81e79e87b77272f4d0b6f63f52193639e1bb3fd8,First attempt at Python IO,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-10-06 16:01:25-07:00,25200,2014-10-09 14:17:56-07:00,25200,True,False,"['TODO.txt', 'container.pxd', 'container.pyx', 'avformat.pxd', 'test_python_io.py']",['f2aa8d231c7d83480572701fce2b4b695aff9f26'],9,167,176,5,1.0,1.0,1.0
21d7199e052436f180ddb8c38f99b64e808ee065,Stop using deprecated flag,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-10-07 09:48:44-07:00,25200,2014-10-09 14:17:56-07:00,25200,True,False,['container.pyx'],['81e79e87b77272f4d0b6f63f52193639e1bb3fd8'],1,3,4,1,,,
33fefbdc4bd85d1001f677fc9996b1a1c7ea275e,Pull file methods off early; writing,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-10-07 10:14:41-07:00,25200,2014-10-09 14:17:56-07:00,25200,True,False,"['container.pxd', 'container.pyx']",['21d7199e052436f180ddb8c38f99b64e808ee065'],28,73,101,2,,,
1714b13d5001009fe3ad011e77587dc89eb1e5d2,Track Python stream position for the user,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-10-07 10:25:42-07:00,25200,2014-10-09 14:17:56-07:00,25200,True,False,"['container.pxd', 'container.pyx']",['33fefbdc4bd85d1001f677fc9996b1a1c7ea275e'],1,20,21,2,,,
fc494c4d560922b1ca1631d027c384df9bcd2e88,"""Fix"" failing probe tests on OS X with FFmpeg

I don't really know what is going on, but `ffprobe` reports the same values, so
it isn't really an issue with our use of the library.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-10-09 10:39:22-07:00,25200,2014-10-09 14:18:44-07:00,25200,True,False,['test_file_probing.py'],['f2aa8d231c7d83480572701fce2b4b695aff9f26'],6,16,22,1,,,
a9cdab75794f7e18406734294e53a733193dc82f,Fix division for Python 3,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-10-10 11:09:43-07:00,25200,2014-10-10 11:09:43-07:00,25200,True,False,['test_file_probing.py'],['fc494c4d560922b1ca1631d027c384df9bcd2e88'],1,3,4,1,,,
3c9cf4c0990d82e50d06d535ddba09254f0e880d,Fix dealloc for Python 3,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-10-10 11:14:06-07:00,25200,2014-10-10 11:14:06-07:00,25200,True,False,['container.pyx'],['1714b13d5001009fe3ad011e77587dc89eb1e5d2'],1,5,6,1,,,
cbdea432f2d00d91775c135baf61f464631606eb,PyIO exceptions from Container methods,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-10-10 11:46:08-07:00,25200,2014-10-10 11:46:08-07:00,25200,True,False,"['container.pxd', 'container.pyx', 'test_python_io.py']",['3c9cf4c0990d82e50d06d535ddba09254f0e880d'],39,40,79,3,,,
d10dd5028459c3bb6d7190260e05414837fefae8,move seek to container proxy,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-10-24 19:04:17-07:00,25200,2014-10-25 11:49:19-07:00,25200,True,False,"['container.pxd', 'container.pyx', 'stream.pyx']",['a9cdab75794f7e18406734294e53a733193dc82f'],44,33,77,3,,,
594307f48e3dd1ab62bc4bfb5fce623fc2730885,"fix matroska test, other valid extensions are 'mks', 'mk3d', 'mka'",Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-10-24 19:14:01-07:00,25200,2014-10-25 11:50:51-07:00,25200,True,False,['test_containerformat.py'],['d10dd5028459c3bb6d7190260e05414837fefae8'],1,1,2,1,,,
bb06ac12053bdd77b8676ef70cd92b55ede9db07,added stream seek test,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-10-25 13:21:24-07:00,25200,2014-10-25 13:21:24-07:00,25200,True,False,['test_seek.py'],['594307f48e3dd1ab62bc4bfb5fce623fc2730885'],0,39,39,1,0.0,0.0,1.0
b86348349906c88b6946f757485cf41f909a9a91,fix subtitle test for newer versions of ffmpeg,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-11-05 13:03:41-08:00,28800,2014-11-05 13:03:41-08:00,28800,True,False,['test_subtitles.py'],['bb06ac12053bdd77b8676ef70cd92b55ede9db07'],1,2,3,1,1.0,1.0,1.0
21c1a6b8a0cd4d5df31bbed475a6a3c556f853d6,agressively release gil,Mark Reid,mindmark@gmail.com,Mark Reid,mindmark@gmail.com,2014-11-06 11:20:21-08:00,28800,2014-11-06 11:20:21-08:00,28800,True,False,"['container.pyx', 'frame.pyx', 'packet.pyx', 'frame.pyx', 'reformatter.pyx']",['b86348349906c88b6946f757485cf41f909a9a91'],55,74,129,5,,,
34267c5edae234f90cbc7f95561548e8b1a3ab31,Scripts for testing #61 (memory leaks) and #71 (experimentals),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-01-09 10:40:19-08:00,28800,2015-01-09 10:47:46-08:00,28800,True,False,"['experimental.py', 'resource_use.py']",['bb06ac12053bdd77b8676ef70cd92b55ede9db07'],0,83,83,2,1.0,1.0,1.0
b9ffb0c4980aeec6dedda1c3f75a24e000e0da85,fix subtitle test for newer versions of ffmpeg,Mark Reid,mindmark@gmail.com,Mike Boers,github@mikeboers.com,2014-11-05 13:03:41-08:00,28800,2015-01-17 09:40:53-08:00,28800,True,False,['test_subtitles.py'],['34267c5edae234f90cbc7f95561548e8b1a3ab31'],1,2,3,1,1.0,1.0,1.0
be03c9bd4c694dacf4d298a3ef2cceb811f4ab91,Decode pkg-config output properly for Python 3 (fixes #58),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-01-17 09:41:45-08:00,28800,2015-01-17 09:41:45-08:00,28800,True,False,['setup.py'],['b9ffb0c4980aeec6dedda1c3f75a24e000e0da85'],1,1,2,1,,,
86706e433725d9cff1220596e7034fa6b2caa006,Add Stream.thread_count property (requested in #73),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-01-17 09:47:39-08:00,28800,2015-01-17 09:47:39-08:00,28800,True,False,"['stream.pyx', 'avcodec.pxd']",['be03c9bd4c694dacf4d298a3ef2cceb811f4ab91'],0,9,9,2,,,
444dd68194252e9bc695f3373087f80caeb78d19,Contrain number of plains by both maximum (as set by video format) and existing data,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-01-30 09:41:19-08:00,28800,2015-01-30 09:41:19-08:00,28800,True,False,"['frame.pxd', 'frame.pyx', 'frame.pyx', 'decode.py']",['86706e433725d9cff1220596e7034fa6b2caa006'],4,16,20,4,,,
b7e0a664d5c6865f757d264c598b23cd21b2498c,WIP expanding codec descriptors,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2014-11-05 09:50:03-08:00,28800,2015-01-31 09:20:25-08:00,28800,True,False,"['__main__.py', 'codec.pxd', 'codec.pyx', 'avcodec.pxd', 'setup.py', 'test_codec.py']",['444dd68194252e9bc695f3373087f80caeb78d19'],54,196,250,6,1.0,1.0,1.0
1aeae0c1d0952c57f4cf1acb279fcbff669a1008,`python -m av --version` dumps PyAV abd FFmpeg/LibAV version info,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-01-31 10:16:50-08:00,28800,2015-01-31 10:16:50-08:00,28800,True,False,"['__init__.py', '__main__.py', '_core.pyx', 'libav.pxd', 'avcodec.pxd', 'avdevice.pxd', 'avformat.pxd', 'avutil.pxd', 'swresample.pxd', 'swresample.pyav.h', 'swscale.pxd', 'setup.py']",['b7e0a664d5c6865f757d264c598b23cd21b2498c'],2,132,134,12,0.0,0.0,1.0
8517c71810ca314b98de196b29a1508dc6fd2323,"Fix codec test, and print codec info legend",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-01-31 10:22:42-08:00,28800,2015-01-31 10:22:42-08:00,28800,True,False,"['codec.pyx', 'test_codec.py']",['1aeae0c1d0952c57f4cf1acb279fcbff669a1008'],13,24,37,2,0.0,0.0,0.0
e8dd68883b6261c1e46d46a3bfe5de1c1e1fab62,Not all capabilities and/or properties exist in all versions of FFMpeg/LibAV,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-01-31 12:54:30-08:00,28800,2015-01-31 12:54:30-08:00,28800,True,False,"['codec.pyx', 'avcodec.pyav.h']",['8517c71810ca314b98de196b29a1508dc6fd2323'],30,112,142,2,,,
6ca0904920bc273c32120ca66b1139d11cb132df,I seem to have missed one of the properties...,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-01-31 13:39:02-08:00,28800,2015-01-31 13:39:02-08:00,28800,True,False,['avcodec.pyav.h'],['1c48d597a7cf98b20b72c1b1dbe20ba0c96f8821'],0,4,4,1,,,
6ff5b786253e98fe9ab48a3b08e8acfd458390bb,Cleanup the convenience methods on VideoFrame,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-01-31 14:29:33-08:00,28800,2015-01-31 14:29:33-08:00,28800,True,False,"['format.pyx', 'frame.pyx', 'index.rst']",['6ca0904920bc273c32120ca66b1139d11cb132df'],88,104,192,3,,,
a0a8c9083701fb1922f507a24c548f46e2101487,"Fix VideoFrame.to_nd_array, and test its basic API",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-02-01 08:50:25-08:00,28800,2015-02-01 08:50:25-08:00,28800,True,False,"['frame.pyx', 'test_videoframe.py']",['6ff5b786253e98fe9ab48a3b08e8acfd458390bb'],2,12,14,2,1.0,1.0,1.0
5e0ad3494b550fa141d9fb35030d306ba31da035,VideoFrame.to_nd_array can deal with gray16le data (#77),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-02-01 08:59:21-08:00,28800,2015-02-01 08:59:21-08:00,28800,True,False,['frame.pyx'],['a0a8c9083701fb1922f507a24c548f46e2101487'],0,3,3,1,,,
40b3cb85f1d1b1823fdb24dd0aaa01c14d005d3c,Python 3 strikes again!,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-02-01 09:16:06-08:00,28800,2015-02-01 09:16:06-08:00,28800,True,False,['__main__.py'],['5e0ad3494b550fa141d9fb35030d306ba31da035'],6,8,14,1,,,
ccc69e16902c25b181345282f4ea1d9e1779d425,"Update _core.pyx

I m running py av in a bundle using pyinstaller. 

With this modification codecs are not found when running PyAV inside an application bundle.",mkassner,moritzkassner@gmail.com,mkassner,moritzkassner@gmail.com,2015-02-24 16:15:30+01:00,-3600,2015-02-24 16:15:30+01:00,-3600,True,False,['_core.pyx'],['40b3cb85f1d1b1823fdb24dd0aaa01c14d005d3c'],0,1,1,1,,,
63ae582d50785261e9732f63b694050315f191a3,Document the last small change,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-02-24 07:23:54-08:00,28800,2015-02-24 07:23:54-08:00,28800,True,False,['_core.pyx'],['ccc69e16902c25b181345282f4ea1d9e1779d425'],1,3,4,1,,,
a707e3c9c13b619ffd020fd23c964c113f78e50a,Add AVPacket.pos and AVStream.id,Brendan Long,self@brendanlong.com,Brendan Long,self@brendanlong.com,2015-02-25 18:44:50-06:00,21600,2015-02-25 18:44:50-06:00,21600,True,False,"['packet.pyx', 'stream.pyx', 'avcodec.pxd']",['63ae582d50785261e9732f63b694050315f191a3'],0,7,7,3,,,
255eaab2a3843317d50b664625ecf14ab32a077e,"Search across pkg-config library paths for the libraries manually

We are trying to address #75, but this may only work on OS X and Linux.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-01-31 15:06:18-08:00,28800,2015-04-22 10:20:36-07:00,25200,True,False,['setup.py'],['63ae582d50785261e9732f63b694050315f191a3'],6,18,24,1,1.0,1.0,1.0
d1cf4fd83d4b928240c75cbfe4bc0d54831f1d8f,Allow OSErrors through when opening libraries,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-04-22 10:39:51-07:00,25200,2015-04-22 10:39:51-07:00,25200,True,False,['setup.py'],['255eaab2a3843317d50b664625ecf14ab32a077e'],5,4,9,1,1.0,1.0,0.0
80adf9e8b9cf3fdab504e4e3dc871a061018f1bb,Fix typo in VideoFrame.from_image (fixes #85),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-04-22 10:42:42-07:00,25200,2015-04-22 10:42:42-07:00,25200,True,False,"['frame.pyx', 'test_videoframe.py']",['d1cf4fd83d4b928240c75cbfe4bc0d54831f1d8f'],3,9,12,2,1.0,1.0,1.0
ada7ebadded688476a6b00a5d2d3d1a56a1803f4,"fix: _codec_context.coded_frame can be None, causing SEGV",Radek Senfeld,rush@logic.cz,Radek Senfeld,rush@logic.cz,2015-04-30 12:34:40+02:00,-7200,2015-04-30 12:34:40+02:00,-7200,True,False,['stream.pyx'],['80adf9e8b9cf3fdab504e4e3dc871a061018f1bb'],2,3,5,1,,,
788051a4ea73e1a4bb31a7e6e6995ec6427a685c,"fixes warning ""Using AVStream.codec.time_base as a timebase hint to the muxer is deprecated. Set AVStream.time_base instead.""",Radek Senfeld,rush@logic.cz,Radek Senfeld,rush@logic.cz,2015-04-30 12:54:28+02:00,-7200,2015-04-30 12:54:28+02:00,-7200,True,False,['container.pyx'],['ada7ebadded688476a6b00a5d2d3d1a56a1803f4'],0,7,7,1,,,
76fb679726566c941e0f8faadb96624722f762b1,BLD : add conda recipe,Thomas A Caswell,tcaswell@bnl.gov,Thomas A Caswell,tcaswell@bnl.gov,2015-05-06 11:45:21-04:00,14400,2015-05-06 11:45:21-04:00,14400,True,False,"['build.sh', 'meta.yaml']",['80adf9e8b9cf3fdab504e4e3dc871a061018f1bb'],0,30,30,2,,,
4054b31e4c40428a61aa8b28179fb87daf19f007,BLD: Remove numpy from build string.,danielballan,daniel.b.allan@gmail.com,danielballan,daniel.b.allan@gmail.com,2015-05-06 14:06:17-04:00,14400,2015-05-06 14:06:17-04:00,14400,True,False,['meta.yaml'],['76fb679726566c941e0f8faadb96624722f762b1'],1,1,2,1,,,
b0e776141423e561a82647bd6563e8f03aca66d2,BLD : more conda patch-up,Thomas A Caswell,tcaswell@bnl.gov,Thomas A Caswell,tcaswell@bnl.gov,2015-05-06 14:38:21-04:00,14400,2015-05-06 14:38:21-04:00,14400,True,False,['meta.yaml'],['e6dd987a11714232f5cbfca3ea42ec0ab43c717b'],0,4,4,1,,,
abbc5ba0c3949f379b515d31c6bee3bb2cf70e64,fix for building on windows using mingw64-32,Jonas Tingeborn,tinjon@gmail.com,Jonas Tingeborn,tinjon@gmail.com,2015-04-11 05:42:49+02:00,-7200,2015-05-07 21:18:24+02:00,-7200,True,False,"['Makefile', '__init__.py', 'generate_video.py', 'setup.py']",['63ae582d50785261e9732f63b694050315f191a3'],9,68,77,4,1.0,1.0,1.0
be0de005a0443b7e6c03347590cc6a0285c3cc25,Include Windows docs,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-08 10:23:12-07:00,25200,2015-05-08 10:23:12-07:00,25200,True,False,['index.rst'],['beef22ec60f8ab86f764d4b0edde291074addf71'],0,46,46,1,,,
447ddea1e52d9afd4cc70a9a8fa56d6078620357,Update basic example to follow current API; for #90,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-17 15:14:39-07:00,25200,2015-05-17 15:14:39-07:00,25200,True,False,['index.rst'],['be0de005a0443b7e6c03347590cc6a0285c3cc25'],3,3,6,1,,,
4131360eaefd3e979c6ce539d4a3d2c0ac24876d,"Remove dead Cython options, and use `python setup.py test`",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-17 15:53:08-07:00,25200,2015-05-17 15:53:08-07:00,25200,True,False,"['.gitignore', 'Makefile', 'setup.py', 'common.py']",['447ddea1e52d9afd4cc70a9a8fa56d6078620357'],3,5,8,4,0.0,0.0,0.0
fc9db5eb000123abd1dc182de269761d35843c2a,Fix rate TypeError for #93,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-21 09:15:09-07:00,25200,2015-05-21 09:15:09-07:00,25200,True,False,"['TODO.txt', 'container.pyx']",['4131360eaefd3e979c6ce539d4a3d2c0ac24876d'],8,15,23,2,,,
af9decdf169193d98b2a9297fc9f0437525c5281,Fix shot_frames_opencv to use new to_nd_frame API; add more to_nd_frame formats; #93,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-21 09:19:28-07:00,25200,2015-05-21 09:19:28-07:00,25200,True,False,"['frame.pyx', 'show_frames_opencv.py']",['fc9db5eb000123abd1dc182de269761d35843c2a'],3,3,6,2,,,
4b13f97982b538d2f609bf59dc1bdec109a9fde3,Encode example does not flush packets after every encode,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-22 10:42:23-07:00,25200,2015-05-22 10:42:23-07:00,25200,True,False,"['stream.pyx', 'encode.py']",['af9decdf169193d98b2a9297fc9f0437525c5281'],20,18,38,2,,,
8dc4be25b890f04224fc42348e7915fdc2e7efeb,Bump to 0.2.3 (before we start with backwards incompatibilities),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-22 11:10:15-07:00,25200,2015-05-22 11:10:15-07:00,25200,True,False,"['AUTHORS.txt', 'CHANGELOG.md', 'setup.py']",['4b13f97982b538d2f609bf59dc1bdec109a9fde3'],7,25,32,3,,,
92b1451d6313f649430417840961bed97f2dd239,Start linking docs against FFmpeg's Doxygen,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-22 15:45:57-07:00,25200,2015-05-22 15:45:57-07:00,25200,True,False,"['TODO.txt', 'container.pyx', 'api.rst', 'conf.py', 'avformat.pxd']",['8dc4be25b890f04224fc42348e7915fdc2e7efeb'],12,70,82,5,,,
184209c9c4047806ae0364cf4b8bcb84000557ad,"Pass options from av.open to avformat_write_header

We weren't using the user's options before this.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-22 15:49:25-07:00,25200,2015-05-22 15:49:25-07:00,25200,True,False,['container.pyx'],['92b1451d6313f649430417840961bed97f2dd239'],1,4,5,1,,,
0224a5427068d145745efa5f906c4a9e931875c4,Reorganize docs; getting ready for doing a lot of documenting,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-23 11:13:19-07:00,25200,2015-05-23 11:13:19-07:00,25200,True,False,"['TODO.txt', 'about.rst', 'api.rst', 'conf.py', 'index.rst', 'installation.rst']",['184209c9c4047806ae0364cf4b8bcb84000557ad'],157,187,344,6,,,
baf807de1b9304e09b230ad43313e0d68c310427,`make docs` clones FFmpeg and builds Doxygen tagfile,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-23 11:47:49-07:00,25200,2015-05-23 11:47:49-07:00,25200,True,False,"['Makefile', 'conf.py']",['0224a5427068d145745efa5f906c4a9e931875c4'],10,35,45,2,,,
4eae43b2a2aec6ca5c06ed07973eec5a2b2e6ef0,Pull a few straglers into the docs,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-23 12:14:23-07:00,25200,2015-05-23 12:14:23-07:00,25200,True,False,"['logging.pyx', 'utils.pyx', 'api.rst']",['baf807de1b9304e09b230ad43313e0d68c310427'],0,25,25,3,,,
4ea6a0f83d4e232c10428020dcb90011f196c874,Pass test_file_probing on OS X (which for unknown reasons is different than Travis),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-23 12:15:03-07:00,25200,2015-05-23 12:15:03-07:00,25200,True,False,['test_file_probing.py'],['4eae43b2a2aec6ca5c06ed07973eec5a2b2e6ef0'],2,7,9,1,,,
52651118ed9d41ce127d7d4c11794d1c393ec4cd,Fix doctest registration,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-23 12:30:29-07:00,25200,2015-05-23 12:30:29-07:00,25200,True,False,"['container.pyx', 'common.py', 'test_doctests.py', 'test_seek.py', 'test_subtitles.py']",['4ea6a0f83d4e232c10428020dcb90011f196c874'],19,21,40,5,0.0,0.25,0.0
ebbd9d55502e6105b7767d047fc061c4d40a7a5f,classmethod is misbehaving; switch to staticmethod on VideoFrame,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-23 12:30:48-07:00,25200,2015-05-23 12:30:48-07:00,25200,True,False,['frame.pyx'],['52651118ed9d41ce127d7d4c11794d1c393ec4cd'],6,6,12,1,,,
bbc07cf21fb5da06884333b34f44f12cbc5465cd,s/in_/iptr/ and s/out/optr/ on ContainerFormat to better match underlying library,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-23 12:49:51-07:00,25200,2015-05-23 12:49:51-07:00,25200,True,False,"['container.pyx', 'format.pxd', 'format.pyx', 'Makefile', 'includes.py']",['ebbd9d55502e6105b7767d047fc061c4d40a7a5f'],33,39,72,5,,,
1d5a96ca895eadb3e9cfe27e0450a0a161d34284,Forgot print_function for Python 3,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-23 12:59:36-07:00,25200,2015-05-23 12:59:36-07:00,25200,True,False,['test_doctests.py'],['bbc07cf21fb5da06884333b34f44f12cbc5465cd'],1,3,4,1,,,
e8118c9eaab7fa22a8cf59e44fb9d88c6f9a7558,Start `python setup.py doctor` for debugging build issues,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-28 09:53:53-07:00,25200,2015-05-28 09:53:53-07:00,25200,True,False,['setup.py'],['1d5a96ca895eadb3e9cfe27e0450a0a161d34284'],1,22,23,1,1.0,1.0,1.0
e67f912d181fa261f63693d055b1712b62df7e6f,"Move remux.py out of examples, as it is just a test. Fixes #96.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-28 09:58:37-07:00,25200,2015-05-28 09:58:37-07:00,25200,True,False,"['README', 'remux.py']",['e8118c9eaab7fa22a8cf59e44fb9d88c6f9a7558'],0,4,4,2,,,
4cd12e28f0432f025f5847b7fb982f7e0bbf9d5a,__import__ fromlist semantics are ever so slightly different on Python 3,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-28 12:07:44-07:00,25200,2015-05-28 12:07:44-07:00,25200,True,False,['test_doctests.py'],['e67f912d181fa261f63693d055b1712b62df7e6f'],1,1,2,1,,,
a6c6690039b5906fba47e41adf22ef26e37e750d,"[build] search through system library_dirs as well as what pkg-config returns

For #97.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-29 09:57:43-07:00,25200,2015-05-29 09:57:43-07:00,25200,True,False,"['TODO.txt', 'setup.py']",['4cd12e28f0432f025f5847b7fb982f7e0bbf9d5a'],4,34,38,2,,,
391f98d92a6744ee4fbdffc616ae9cca8daac5f9,[build] because it would be magic to get cross-Python unicode right the first time,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-05-29 11:17:24-07:00,25200,2015-05-29 11:17:24-07:00,25200,True,False,['setup.py'],['a6c6690039b5906fba47e41adf22ef26e37e750d'],1,2,3,1,,,
9f1f52b42514057aee84f92c44328575316ffc76,[build] explicitly include more of the source files in the distribution,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-06-03 19:13:55-07:00,25200,2015-06-03 19:13:55-07:00,25200,True,False,"['MANIFEST.in', 'TODO.txt']",['391f98d92a6744ee4fbdffc616ae9cca8daac5f9'],11,2,13,2,,,
34d568f924e7dbb49a6f337e7791204c64fd8c52,[release] 0.2.4,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-06-03 19:22:35-07:00,25200,2015-06-03 19:22:35-07:00,25200,True,False,"['CHANGELOG.md', 'setup.py']",['9f1f52b42514057aee84f92c44328575316ffc76'],6,23,29,2,,,
d804b1a580767d9078232e098a601fe7e84cc3b0,Add general dependencies to basic install instructions (for #105),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-07-12 12:40:09-07:00,25200,2015-07-12 12:40:09-07:00,25200,True,False,['installation.rst'],['34d568f924e7dbb49a6f337e7791204c64fd8c52'],1,10,11,1,,,
d7a5bf325270bd8bb12a5442675b840fbdd5987a,Pass all options to both contains and streams for both reading and writing (#102),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-07-12 12:50:27-07:00,25200,2015-07-12 12:50:27-07:00,25200,True,False,['container.pyx'],['d804b1a580767d9078232e098a601fe7e84cc3b0'],4,16,20,1,,,
2c224c355b60e97211abc63031e693e3e812a027,"Use distutils.ccompiler to test for functions and structure members

This breaks our Window's build (for now).",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-07-12 17:29:19-07:00,25200,2015-07-12 17:29:19-07:00,25200,True,False,['setup.py'],['d7a5bf325270bd8bb12a5442675b840fbdd5987a'],134,261,395,1,0.12871287128712872,0.1485148514851485,0.801980198019802
cc844d2cd85eb037739270fd89c207adda1d92be,Fix for Python 3,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-07-12 18:41:12-07:00,25200,2015-07-12 18:41:12-07:00,25200,True,False,['setup.py'],['2c224c355b60e97211abc63031e693e3e812a027'],1,1,2,1,,,
3c863966215cad0a40aec564a4f39095019214bc,"add Packet.decode_one() backing onto Stream.decode(packet, count=1)

This is for situations in which flushing the stream results in an error after
the first frame, and so you never get the frames. E.g. MJPEG webcams in #107",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-07-14 09:52:29-07:00,25200,2015-07-14 09:52:53-07:00,25200,True,False,"['packet.pyx', 'stream.pxd', 'stream.pyx', 'avformat.pyav.h']",['d7a5bf325270bd8bb12a5442675b840fbdd5987a'],5,20,25,4,,,
f94947396679d315ee0d8a45394847a73e6ef826,Improve error information during build,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-07-22 10:37:54-07:00,25200,2015-07-22 10:37:54-07:00,25200,True,False,['setup.py'],['e33c9bb7dd337143c30c3eb5366c916eea7da6e6'],36,77,113,1,0.1875,0.1875,0.5625
c37c88e62420faa2da4e080e21e40e198121e736,Create fewer extraneous macros,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-07-22 10:52:26-07:00,25200,2015-07-22 10:52:26-07:00,25200,True,False,['setup.py'],['f94947396679d315ee0d8a45394847a73e6ef826'],11,18,29,1,0.2,0.2,1.0
97bb2708011908afb88ec44dc03439d8ce4b74fe,Discuss struct member reflection in HACKING.md,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-07-22 10:52:41-07:00,25200,2015-07-22 10:52:41-07:00,25200,True,False,['HACKING.md'],['c37c88e62420faa2da4e080e21e40e198121e736'],2,14,16,1,,,
e56ebf4c7cfb1c3e52a30790652d2a87b6c2d6a3,pyio seek's return type should be int64_t,Xu Xinran,xxr@megvii.com,Xu Xinran,xxr@megvii.com,2015-07-27 11:28:45+08:00,-28800,2015-07-27 11:28:45+08:00,-28800,True,False,['container.pyx'],['97bb2708011908afb88ec44dc03439d8ce4b74fe'],1,1,2,1,,,
850859e8d3de0f9ca565ac4cd9bd88b0b232ba84,add library_dirs,Xu Xinran,xxr@megvii.com,Xu Xinran,xxr@megvii.com,2015-07-29 18:08:39+08:00,-28800,2015-07-29 18:08:39+08:00,-28800,True,False,['setup.py'],['e56ebf4c7cfb1c3e52a30790652d2a87b6c2d6a3'],0,1,1,1,,,
aa277cf92fd43950b56a236cb98da126b8ee1282,[build] extension_extra should include empty lists for all values that are accessed,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-07-31 11:31:28-07:00,25200,2015-07-31 11:31:28-07:00,25200,True,False,['setup.py'],['850859e8d3de0f9ca565ac4cd9bd88b0b232ba84'],0,1,1,1,,,
02c7812f9def1a5f4d5854ee9e566f373fb3523a,Start the 0.2.4-dev CHANGELOG,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-07-31 11:35:43-07:00,25200,2015-07-31 11:35:43-07:00,25200,True,False,['CHANGELOG.md'],['aa277cf92fd43950b56a236cb98da126b8ee1282'],0,8,8,1,,,
ffd4eea8376cfa7461d1c898dfae4059490188a8,Fix small refactoring error in setup.py,Xinran Xu,xxr3376@gmail.com,Mike Boers,github@mikeboers.com,2015-08-04 11:47:59+08:00,-28800,2015-08-07 12:07:06-07:00,25200,True,False,['setup.py'],['02c7812f9def1a5f4d5854ee9e566f373fb3523a'],1,1,2,1,,,
ae9d6bd022eb9a817e83797f3e71480e8b2d9919,Skip tests when PIL is missing,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-10 17:05:58-07:00,25200,2015-08-10 17:05:58-07:00,25200,True,False,"['common.py', 'test_encoding.py', 'test_videoframe.py']",['ffd4eea8376cfa7461d1c898dfae4059490188a8'],3,14,17,3,0.75,0.0,1.0
b3c454c18fb80cdbbed898b30758d13e05ca7018,Python IO can write,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-10 17:06:16-07:00,25200,2015-08-10 17:06:16-07:00,25200,True,False,"['container.pyx', 'test_python_io.py']",['ae9d6bd022eb9a817e83797f3e71480e8b2d9919'],0,75,75,2,0.0,0.0,1.0
bd08a381ac5be7f7153b5fa8520fe83a8d0256a0,Refactor to allocate format context before setting up custom IO,Mike Boers,github@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-11 11:15:16-07:00,25200,2015-08-11 13:03:26-07:00,25200,True,False,"['container.pxd', 'container.pyx', 'common.py', 'test_encoding.py', 'test_python_io.py']",['b3c454c18fb80cdbbed898b30758d13e05ca7018'],177,220,397,5,1.0,1.0,0.0
76a77c58f200d590a1a31d11b328c05ed7923980,"Fix TypeError in pyio_write, and raise exceptions from write_header",Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-11 13:33:38-07:00,25200,2015-08-11 13:33:38-07:00,25200,True,False,"['container.pyx', 'test_python_io.py']",['bd08a381ac5be7f7153b5fa8520fe83a8d0256a0'],16,18,34,2,,,
f093ac30b5cffd01aeb6bf9f044828157c590219,utils.stash_exception for storing an exception to be re-raised by utils.check_err,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-11 14:47:44-07:00,25200,2015-08-11 14:47:44-07:00,25200,True,False,"['container.pxd', 'container.pyx', 'utils.pxd', 'utils.pyx', 'test_python_io.py']",['76a77c58f200d590a1a31d11b328c05ed7923980'],27,67,94,5,1.0,1.0,1.0
2f9d1ca589bcdb24f82016fd8f3ae988d98475b4,Wrap Dictionary class,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-11 15:19:18-07:00,25200,2015-08-11 15:19:18-07:00,25200,True,False,"['container.pyx', 'dictionary.pxd', 'dictionary.pyx', 'utils.pyx', 'dict.pxd']",['f093ac30b5cffd01aeb6bf9f044828157c590219'],1,104,105,5,,,
53f7d3a732667d9c5fb73fa00e63f4d6cfa9926d,Split up container module into core/input/output,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-11 16:01:18-07:00,25200,2015-08-11 16:01:18-07:00,25200,True,False,"['stream.pyx', 'container.pyx', '__init__.py', 'core.pxd', 'core.pyx', 'input.pxd', 'input.pyx', 'output.pxd', 'output.pyx', 'stream.pxd', 'utils.pxd', 'stream.pyx']",['2f9d1ca589bcdb24f82016fd8f3ae988d98475b4'],598,637,1235,12,,,
c6162bda9ec1f4ccdc813aabf2208bfc0c835f08,Move ByteSource out of utils,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-11 16:05:10-07:00,25200,2015-08-11 16:05:10-07:00,25200,True,False,"['bytesource.pxd', 'bytesource.pyx', 'frame.pyx', 'plane.pyx', 'utils.pxd', 'utils.pyx', 'frame.pyx']",['53f7d3a732667d9c5fb73fa00e63f4d6cfa9926d'],65,61,126,7,,,
5a99d7eefaaf1694c70582eb1e2220f9ff2bc3eb,Fix typo in new stash_exception,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-11 16:20:09-07:00,25200,2015-08-11 16:20:09-07:00,25200,True,False,['utils.pyx'],['c6162bda9ec1f4ccdc813aabf2208bfc0c835f08'],3,1,4,1,,,
55ccb65746cc6c4d771d97cb62ec868ae466dc04,"Use Dictionary for options, and copy options before every use (so they are shared among all users)",Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-11 16:20:31-07:00,25200,2015-08-11 16:20:31-07:00,25200,True,False,"['core.pxd', 'core.pyx', 'input.pyx', 'output.pyx']",['5a99d7eefaaf1694c70582eb1e2220f9ff2bc3eb'],12,19,31,4,,,
87d1b58a50c7df3fc84908fbdbbdfecac7cb8436,Start exposing AVClass and AVOption,Mike Boers,github@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-09 12:10:18-07:00,25200,2015-08-11 16:36:46-07:00,25200,True,False,"['class_.pxd', 'class_.pyx', 'codec.pyx', 'option.pxd', 'option.pyx', 'avcodec.pxd', 'avutil.pxd']",['55ccb65746cc6c4d771d97cb62ec868ae466dc04'],0,183,183,7,,,
b383f9f8f7f5a419ea72a07d296128c038a71004,s/Class/Descriptor,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-11 16:53:19-07:00,25200,2015-08-11 16:53:19-07:00,25200,True,False,"['codec.pyx', 'descriptor.pxd', 'descriptor.pyx', 'option.pyx']",['87d1b58a50c7df3fc84908fbdbbdfecac7cb8436'],18,11,29,4,,,
112761f15be2e7f79af6caace03312ca790ef597,Add a descriptor property to ContainerFormat,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-11 16:53:34-07:00,25200,2015-08-11 16:53:34-07:00,25200,True,False,"['format.pyx', 'avformat.pxd']",['b383f9f8f7f5a419ea72a07d296128c038a71004'],8,51,59,2,,,
986f1554d884691965d1b1b09b73a0f4d2056cca,Fixes for Python 3,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-08-11 17:02:01-07:00,25200,2015-08-11 17:02:01-07:00,25200,True,False,"['core.pyx', 'utils.pyx', 'common.py', 'test_python_io.py']",['112761f15be2e7f79af6caace03312ca790ef597'],7,10,17,4,0.0,0.0,1.0
6af9aeb1c3fc34cc20e224f9e4f261f8016077e1,Dictionary uses str instead of bytes (for Python 3),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-08-11 17:06:00-07:00,25200,2015-08-11 17:06:00-07:00,25200,True,False,"['dictionary.pyx', 'test_dictionary.py']",['986f1554d884691965d1b1b09b73a0f4d2056cca'],3,24,27,2,1.0,1.0,1.0
2dbb2a97b2d32da6abea8332bd4157685e0ffd17,"Fix bug, and remove workaround in setup.py

Previously, `mod_name` was improperly esacped. This only became apparent
on windows, where a workaround had been implemented to circumvent the
effects. This commit fixes the bug, and removes the workaround (which
became a bug once the inital one was fixed).",vidartf,vidartf@gmail.com,Mike Boers,westernx@mikeboers.com,2015-08-12 18:39:44+02:00,-7200,2015-08-12 14:04:44-07:00,25200,True,False,['setup.py'],['6af9aeb1c3fc34cc20e224f9e4f261f8016077e1'],10,1,11,1,0.0,0.0,0.0
e814815bd0a16a349417496c1aa087b09732c378,Fixed previous commit to work on non-Windows where os.altsep is None,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-12 14:09:50-07:00,25200,2015-08-12 14:10:25-07:00,25200,True,False,['setup.py'],['2dbb2a97b2d32da6abea8332bd4157685e0ffd17'],1,5,6,1,,,
97545ea017a9c5f5570f777781c166fbaca2b721,"Switch vasprintf to snprintf

MSVC does not support vasprintf. Replaced with all present functions.",vidartf,vidartf@gmail.com,Mike Boers,westernx@mikeboers.com,2015-08-12 19:05:20+02:00,-7200,2015-08-12 14:14:49-07:00,25200,True,False,"['logging.pyx', 'avutil.pxd']",['e814815bd0a16a349417496c1aa087b09732c378'],12,5,17,2,,,
984a661cf9072f4105027299c87a49776ff6452e,"Switch snprintf to av_vbprintf

We need a v* variant of snprintf, but I don't know which are supported by MSVC.
Now we are using something that is provided by the underlying library, and is cross-platform.",Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-12 14:50:10-07:00,25200,2015-08-12 14:53:08-07:00,25200,True,False,"['logging.pyx', 'libav.pxd', 'bprint.pxd']",['97545ea017a9c5f5570f777781c166fbaca2b721'],4,19,23,3,,,
a0aedf4e74627abad1e8fc98729685cee74439a8,"Added `--sources` flag to setup CMD clean

If the flag is supplied, the Cython sources will be cleaned ('src'
directory will be removed). Defaults to off since we normally
want to keep them.",vidartf,vidartf@gmail.com,Mike Boers,westernx@mikeboers.com,2015-08-12 19:17:15+02:00,-7200,2015-08-12 14:55:01-07:00,25200,True,False,['setup.py'],['984a661cf9072f4105027299c87a49776ff6452e'],1,24,25,1,1.0,1.0,1.0
229fa1676725889c1c669a7aa21fafb859f9b3c6,"Added MSVC workaround

Older versions of MSVC (including Visual C++ for Python) does
not fully support C99. This change works around the problems
by preprocessor defines.",vidartf,vidartf@gmail.com,Mike Boers,westernx@mikeboers.com,2015-08-12 19:20:57+02:00,-7200,2015-08-12 14:57:45-07:00,25200,True,False,['setup.py'],['a0aedf4e74627abad1e8fc98729685cee74439a8'],1,14,15,1,0.75,0.75,0.75
7b28db596176d1e7daf221842736de1c2443a392,Fix for MSVC9 not being importable on non-Windows,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-12 15:02:23-07:00,25200,2015-08-12 15:02:23-07:00,25200,True,False,['setup.py'],['229fa1676725889c1c669a7aa21fafb859f9b3c6'],3,11,14,1,,,
e9c63f0dda30d6d625102aac3bba31759ef28b71,"Consistent compiler use in setup.py

These changes make sure that all setup commands that use a compiler
accepts the compiler user option, and that the option is propagated
between commands.",vidartf,vidartf@gmail.com,Mike Boers,westernx@mikeboers.com,2015-08-12 19:29:45+02:00,-7200,2015-08-12 15:02:36-07:00,25200,True,False,['setup.py'],['7b28db596176d1e7daf221842736de1c2443a392'],12,19,31,1,0.4,0.8,1.0
747c881ebd7cc759bd77c9d8fbf0ee340b969835,"Fix a syntax error, and reuse a CC object when able",Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-12 15:08:12-07:00,25200,2015-08-12 15:08:12-07:00,25200,True,False,['setup.py'],['e9c63f0dda30d6d625102aac3bba31759ef28b71'],15,18,33,1,1.0,1.0,1.0
979319b7523c6bdfd7e323929351034bfae03474,"Propagate setup user options for library/include

These changes makes sure that any user options supplied by
`include-dirs`, `library-dirs` and `libraries` to `build_ext`
are propagated to `reflect`, and makes sure that `reflect`
accepts and uses them.",vidartf,vidartf@gmail.com,Mike Boers,westernx@mikeboers.com,2015-08-12 19:34:06+02:00,-7200,2015-08-12 15:11:05-07:00,25200,True,False,['setup.py'],['747c881ebd7cc759bd77c9d8fbf0ee340b969835'],4,34,38,1,0.4,0.0,1.0
1e207ec6040b9f51e333507720805ac629db3380,Formatting,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-12 15:14:49-07:00,25200,2015-08-12 15:15:27-07:00,25200,True,False,['setup.py'],['979319b7523c6bdfd7e323929351034bfae03474'],26,26,52,1,1.0,1.0,1.0
553f98e3c62def30483c802becbd3c1fce3eaa87,Add to the changelog and authors,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-12 15:18:50-07:00,25200,2015-08-12 15:18:50-07:00,25200,True,False,"['AUTHORS.txt', 'CHANGELOG.md']",['439f9ce54a1c060dd739cfc2bb987e9f036be3c2'],1,3,4,2,,,
3a6130cbd122bcf2b62782ffbdee3e89f93a3820,Replaced relative imports,vidartf,vidartf@gmail.com,Vidar Tonaas Fauske,vidartf@gmail.com,2015-08-12 19:06:04+02:00,-7200,2015-08-13 04:08:13+02:00,-7200,True,False,['__init__.py'],['553f98e3c62def30483c802becbd3c1fce3eaa87'],11,11,22,1,,,
896a92949898deb195ded6aa6d79cd440b8a6eb2,"Added `--sources` flag to setup CMD clean

If the flag is supplied, the Cython sources will be cleaned ('src'
directory will be removed). Defaults to off since we normally
want to keep them.",vidartf,vidartf@gmail.com,Vidar Tonaas Fauske,vidartf@gmail.com,2015-08-12 19:17:15+02:00,-7200,2015-08-13 04:08:50+02:00,-7200,True,False,['setup.py'],['3a6130cbd122bcf2b62782ffbdee3e89f93a3820'],0,23,23,1,1.0,1.0,1.0
93a81aa8230b84af46f6193f730da23a57c298f9,"Propagate setup user options for library/include

These changes makes sure that any user options supplied by
`include-dirs`, `library-dirs` and `libraries` to `build_ext`
are propagated to `reflect`, and makes sure that `reflect`
accepts and uses them.",vidartf,vidartf@gmail.com,Vidar Tonaas Fauske,vidartf@gmail.com,2015-08-12 19:34:06+02:00,-7200,2015-08-13 04:12:10+02:00,-7200,True,False,['setup.py'],['896a92949898deb195ded6aa6d79cd440b8a6eb2'],2,3,5,1,,,
4dafb9a9d53237b2d601a6cc0e16ddcf0c60085b,Fix setup without pkg-config,vidartf,vidartf@gmail.com,Vidar Tonaas Fauske,vidartf@gmail.com,2015-08-12 20:45:53+02:00,-7200,2015-08-13 04:34:35+02:00,-7200,True,False,['setup.py'],['93a81aa8230b84af46f6193f730da23a57c298f9'],46,62,108,1,0.39285714285714285,0.39285714285714285,1.0
92c3271535ec40365ddb56938cf9259e2247e709,"Added MSVC /OPT:NOREF linker flag

The libs in the official ffmpeg dev distribution for windows is
typically created with dlltool, so we have to add the /OPT:NOREF
linker flag (http://www.ffmpeg.org/platform.html#Linking-to-FFmpeg-with-Microsoft-Visual-C_002b_002b).",Vidar Tonaas Fauske,vidartf@gmail.com,Vidar Tonaas Fauske,vidartf@gmail.com,2015-08-13 03:17:13+02:00,-7200,2015-08-13 04:42:42+02:00,-7200,True,False,['setup.py'],['4dafb9a9d53237b2d601a6cc0e16ddcf0c60085b'],0,7,7,1,0.0,0.0,1.0
8f5c450719f08b64cda4cd1404c7151ad400f126,"Added 'ffmpeg-dir' option to 'setup.py build_ext' for windows

Without pkg-config, dependencies can be specified with
'--include-dirs' and '--library-dirs', but often the locations of these
in an ffmpeg build on windows is standardized. For this a convenience
option 'ffmpeg-dir' is added, which can either contain the subdirs
'include' and 'lib', or contain the libs and includes directly.",Vidar Tonaas Fauske,vidartf@gmail.com,Vidar Tonaas Fauske,vidartf@gmail.com,2015-08-13 03:21:39+02:00,-7200,2015-08-13 04:42:45+02:00,-7200,True,False,['setup.py'],['92c3271535ec40365ddb56938cf9259e2247e709'],4,26,30,1,1.0,1.0,1.0
2208db5435e11424d2bf28e47399d5ed7e786ae3,My `wget` does not like Wikipedia; ignoring the cert for that is safe...,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-17 09:39:12-07:00,25200,2015-08-17 09:39:12-07:00,25200,True,False,['Makefile'],['553f98e3c62def30483c802becbd3c1fce3eaa87'],1,1,2,1,,,
cf0cc91d455d3a6760ce10005d82411497b5cc53,Fix segfault,Vidar Tonaas Fauske,vidartf@gmail.com,Mike Boers,westernx@mikeboers.com,2015-08-17 16:32:49+02:00,-7200,2015-08-17 09:39:56-07:00,25200,True,False,['logging.pyx'],['2208db5435e11424d2bf28e47399d5ed7e786ae3'],2,2,4,1,,,
9c301a1accc6eaa7b9d5edd9d91bae15a1c3f943,"Python 3 does not have a ""string-escape""",Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-17 09:44:57-07:00,25200,2015-08-17 09:44:57-07:00,25200,True,False,['setup.py'],['cf0cc91d455d3a6760ce10005d82411497b5cc53'],1,4,5,1,,,
d4e5eb1a635623e06ccd449eec089b95874ce1b6,Check return code in log message finalizing,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-17 09:57:34-07:00,25200,2015-08-17 09:57:34-07:00,25200,True,False,['logging.pyx'],['9c301a1accc6eaa7b9d5edd9d91bae15a1c3f943'],5,16,21,1,,,
db6fc6eb31c4f51deab8f689e96d4a97adb276b1,Bulk of AppVeyor setup by @vidartf,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-17 10:17:15-07:00,25200,2015-08-17 10:20:01-07:00,25200,True,False,"['.gitignore', 'appveyor.yml', 'install.ps1', 'install_conda.ps1', 'run_with_compiler.cmd', 'dev-requirements.txt', 'setup.py', 'common.py', 'touch.txt']",['8f5c450719f08b64cda4cd1404c7151ad400f126'],16,403,419,9,0.0,1.0,1.0
e5d5296b721636903bd49d404e1a0d0b07482fb2,MSVC ignores,Vidar Tonaas Fauske,vidartf@gmail.com,Mike Boers,westernx@mikeboers.com,2015-08-17 13:24:33+02:00,-7200,2015-08-17 10:21:06-07:00,25200,True,False,['.gitignore'],['d4e5eb1a635623e06ccd449eec089b95874ce1b6'],0,8,8,1,,,
b491cd329485a81ebf6fa5666709bf6fb87c7025,Fixed symlink for windows,Vidar Tonaas Fauske,vidartf@gmail.com,Mike Boers,westernx@mikeboers.com,2015-08-17 15:39:06+02:00,-7200,2015-08-17 10:21:14-07:00,25200,True,False,['common.py'],['e5d5296b721636903bd49d404e1a0d0b07482fb2'],14,9,23,1,1.0,0.0,0.0
12d985f83cc61acb867f1120129c436d4ee6c9ed,Let `av_bprint_init` use UINT_MAX,Vidar Tonaas Fauske,vidartf@gmail.com,Mike Boers,westernx@mikeboers.com,2015-08-17 15:39:35+02:00,-7200,2015-08-17 10:21:19-07:00,25200,True,False,['logging.pyx'],['b491cd329485a81ebf6fa5666709bf6fb87c7025'],1,1,2,1,,,
55bd1d7733e1179a71cd1ed04d8551b729b3617e,Windows errors are different!,Vidar Tonaas Fauske,vidartf@gmail.com,Mike Boers,westernx@mikeboers.com,2015-08-17 16:33:46+02:00,-7200,2015-08-17 10:21:25-07:00,25200,True,False,['test_errors.py'],['12d985f83cc61acb867f1120129c436d4ee6c9ed'],2,1,3,1,0.0,0.0,0.0
818e88ac588dd5c01dad729ce94ac6822d0d7717,... but we still need not-Windows to work,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-17 10:25:01-07:00,25200,2015-08-17 10:25:01-07:00,25200,True,False,"['common.py', 'test_errors.py']",['55bd1d7733e1179a71cd1ed04d8551b729b3617e'],1,5,6,2,1.0,1.0,1.0
f778745631d54131f8920fb72e2ae22674fdd408,Add AppVeyor badge to README,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-17 10:29:15-07:00,25200,2015-08-17 10:29:15-07:00,25200,True,False,"['CHANGELOG.md', 'README.md']",['869dbfda4a52e29bd5d316bd18692066a0e5cb12'],1,2,3,2,,,
c0826243bb337d0d636c966809a5ad820c544fc4,Remove holdout from testing AppVeyor,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-17 11:44:07-07:00,25200,2015-08-17 11:44:07-07:00,25200,True,False,['touch.txt'],['f778745631d54131f8920fb72e2ae22674fdd408'],1,0,1,1,,,
11f42d698f6d998d2d8c0aba7e87a9e5b3ae75fd,Update library versions for Travis,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-17 14:02:33-07:00,25200,2015-08-17 14:04:34-07:00,25200,True,False,"['.travis.yml', 'test-setup']",['c0826243bb337d0d636c966809a5ad820c544fc4'],11,19,30,2,,,
e94984d79615cb45fb7a764eaddb2fe1f7888453,Use Travis' new container setup (for caching dependencies),Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-17 16:28:04-07:00,25200,2015-08-17 16:35:22-07:00,25200,True,False,"['.travis.yml', 'generate_audio.py', 'generate_video.py', 'test-setup', 'travis-before-install', 'travis-install', 'travis-test', 'requirements.txt']",['11f42d698f6d998d2d8c0aba7e87a9e5b3ae75fd'],92,121,213,8,,,
c15aca33551449d53bfb5844db2f8ccddca503ac,Fix the $PATH on Travis,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-08-17 19:18:59-07:00,25200,2015-08-17 19:19:18-07:00,25200,True,False,"['travis-install', 'travis-test']",['e94984d79615cb45fb7a764eaddb2fe1f7888453'],0,2,2,2,,,
35450505c02fe2442e0b7d4accffe32a55b98538,Abandoning bprint since Libav does not have it; we should be fine with vsnprintf,Mike Boers,westernx@mikeboers.com,Mike Boers,github@mikeboers.com,2015-08-17 16:49:13-07:00,25200,2015-08-17 19:25:31-07:00,25200,True,False,"['logging.pyx', 'libav.pxd', 'bprint.pxd']",['c15aca33551449d53bfb5844db2f8ccddca503ac'],37,10,47,3,,,
681fb7eb29c28cbe2988f511ee49ab7927417761,Leave out a few AV_OPT_TYPE_* which do not always exist,Mike Boers,westernx@mikeboers.com,Mike Boers,github@mikeboers.com,2015-08-17 16:57:46-07:00,25200,2015-08-17 20:21:26-07:00,25200,True,False,"['option.pyx', 'avutil.pxd']",['35450505c02fe2442e0b7d4accffe32a55b98538'],22,16,38,2,,,
8ea034f56952c13b2836581ceb144fbe2ae194cd,Use only assets from the FATE suite,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-18 09:59:31-07:00,25200,2015-08-18 10:50:01-07:00,25200,True,False,"['Makefile', 'appveyor.yml', 'generate_audio.py', 'generate_video.py', 'test_audiofifo.py', 'test_decode.py', 'test_seek.py', 'test_videoframe.py']",['681fb7eb29c28cbe2988f511ee49ab7927417761'],271,10,281,8,0.5267175572519084,0.29770992366412213,0.5267175572519084
9efbe38707443a9db5fc7d5d4b6d1b6e4ccb3cf2,Refactor Travis scripts to be usable for local development,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-18 11:39:24-07:00,25200,2015-08-18 11:53:44-07:00,25200,True,False,"['.gitignore', '.travis.yml', 'Makefile', 'Vagrantfile', 'upload', 'activate.sh', 'build', 'build-deps', 'test', 'travis-before-install', 'travis-install', 'travis-test', 'vagrant-test']",['8ea034f56952c13b2836581ceb144fbe2ae194cd'],182,203,385,13,,,
15fe359e9e68c72386f500450aef453ca088e747,Lets try OS X on Travis,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-18 12:31:50-07:00,25200,2015-08-18 13:02:39-07:00,25200,True,False,"['.travis.yml', 'activate.sh', 'travis-setup']",['9efbe38707443a9db5fc7d5d4b6d1b6e4ccb3cf2'],32,113,145,3,,,
b77bb5d80cab5d238f3dd38e5cff95eb1c076996,Fix wrong variable name in activate.sh,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-18 19:52:12-07:00,25200,2015-08-18 19:52:12-07:00,25200,True,False,['activate.sh'],['15fe359e9e68c72386f500450aef453ca088e747'],2,2,4,1,,,
137d8cec9d4257cf15f70492c58d0239abf03f80,Point docs at new Doxygen tagfile location,Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-18 19:52:30-07:00,25200,2015-08-18 19:52:30-07:00,25200,True,False,['conf.py'],['b77bb5d80cab5d238f3dd38e5cff95eb1c076996'],1,1,2,1,,,
21b87b04784492e9c83155b17c955f596b13bb37,Fix dupilcate clean,vidartf,vidartf@gmail.com,vidartf,vidartf@gmail.com,2015-08-19 14:11:00+02:00,-7200,2015-08-19 14:11:00+02:00,-7200,True,False,['setup.py'],['137d8cec9d4257cf15f70492c58d0239abf03f80'],23,0,23,1,0.0,0.0,0.0
fa2b7a4eb3de8548681f52370211814d2297b535,"Use Cython embedsignatures, and monkey-patch it to not overwrite manual ones",Mike Boers,westernx@mikeboers.com,Mike Boers,westernx@mikeboers.com,2015-08-19 14:41:51-07:00,25200,2015-08-19 14:54:45-07:00,25200,True,False,"['api.rst', 'setup.py']",['21b87b04784492e9c83155b17c955f596b13bb37'],3,27,30,2,0.0,1.0,0.09090909090909091
23f5d2fe8a535cce77554bddc5d8cc05ca8b65f0,Minor updates/tweaks to docs,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-08-20 09:04:16-07:00,25200,2015-08-20 09:04:57-07:00,25200,True,False,"['HACKING.md', 'HACKING.rst', 'TODO.txt', 'Makefile', 'about.rst', 'hacking.rst', 'includes.py', 'index.rst', 'installation.rst']",['fa2b7a4eb3de8548681f52370211814d2297b535'],125,137,262,9,1.0,1.0,1.0
e100f3235fe57203599d098e8290463f54ae36eb,WIP Parsing Cython source to look for automatic cross references,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-08-20 09:04:32-07:00,25200,2015-08-20 09:04:57-07:00,25200,True,False,['parse.py'],['23f5d2fe8a535cce77554bddc5d8cc05ca8b65f0'],0,62,62,1,1.0,1.0,1.0
f3aeb445394d6e87f8eb4ef37b93f8f4c1d8af25,Parse Cython source to build automatic references from lib functions to PyAV,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-08-20 12:50:09-07:00,25200,2015-08-20 12:50:09-07:00,25200,True,False,"['includes.py', 'avformat.pxd', 'parse.py', 'test.pxd']",['e100f3235fe57203599d098e8290463f54ae36eb'],72,333,405,4,1.0,1.0,0.7796610169491526
64e80ee54db91886722da42fff1d9e112846dc3e,"We limit our own logging levels, and start transfer to the logging system at a lower threshold",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-08-28 16:18:31-07:00,25200,2015-08-28 16:18:31-07:00,25200,True,False,"['logging.pyx', 'avutil.pxd']",['f3aeb445394d6e87f8eb4ef37b93f8f4c1d8af25'],18,43,61,2,,,
6561bf6bed7db181ca2ca3057cfa5fb2c98d464d,Favicon and logo for docs,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-08-28 16:18:42-07:00,25200,2015-08-28 16:18:54-07:00,25200,True,False,"['favicon.png', 'logo-250.png', 'conf.py']",['64e80ee54db91886722da42fff1d9e112846dc3e'],2,2,4,3,,,
9f736b5aa4d8731a64d243071e2c10b5854a04b2,av.Buffer class offers abstraction of buffer protocol for other classes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-10-15 12:53:03-07:00,25200,2015-10-15 12:53:03-07:00,25200,True,False,"['plane.pxd', 'plane.pyx', 'buffer.pxd', 'buffer.pyx', 'packet.pxd', 'packet.pyx', 'plane.pxd', 'plane.pyx', 'plane.pxd', 'plane.pyx']",['6561bf6bed7db181ca2ca3057cfa5fb2c98d464d'],61,112,173,10,,,
3b3128dfa8adc53909a0d69ff1919b75fdfe9aad,Use Pillow's Image.tobytes instead of .tostring,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-10-16 12:48:42-07:00,25200,2015-10-16 12:48:42-07:00,25200,True,False,"['frame.pyx', 'test_encoding.py', 'test_videoframe.py']",['9f736b5aa4d8731a64d243071e2c10b5854a04b2'],3,7,10,3,,,
0e8c661fb6a3a6b0c2dc35aba0e1c72fa9ec4e2d,Put deprecated buffer update methods on Plane only,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-10-16 12:49:03-07:00,25200,2015-10-16 12:49:03-07:00,25200,True,False,"['buffer.pyx', 'plane.pyx']",['3b3128dfa8adc53909a0d69ff1919b75fdfe9aad'],9,18,27,2,,,
2f8dc31b93b0223d7136c1b3e43341420ad8dc06,Increase default logging threshold to WARNING,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-10-16 12:49:21-07:00,25200,2015-10-16 12:49:21-07:00,25200,True,False,['logging.pyx'],['0e8c661fb6a3a6b0c2dc35aba0e1c72fa9ec4e2d'],1,5,6,1,,,
cdc955b601c86e77cdab837cfe4b897fc93a1312,"StreamContainer for container.streams.{video,audio}[index]",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-10-16 13:17:34-07:00,25200,2015-10-16 13:17:34-07:00,25200,True,False,"['TODO.txt', 'bytesource.pyx', 'core.pxd', 'input.pyx', 'output.pyx', 'streams.pxd', 'streams.pyx', 'test_decode.py']",['2f8dc31b93b0223d7136c1b3e43341420ad8dc06'],8,66,74,8,1.0,1.0,1.0
b598727be73e5ca6cc1160919a462df942b97b93,"Augment stream selection with typed slices, e.g.: c.demux(video=0, audio=(0, 1))",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-10-16 13:39:51-07:00,25200,2015-10-16 13:39:51-07:00,25200,True,False,"['input.pyx', 'streams.pyx', 'api.rst', 'index.rst', 'save_frames.py', 'test_streams.py']",['cdc955b601c86e77cdab837cfe4b897fc93a1312'],24,79,103,6,1.0,0.4166666666666667,1.0
f465561266e46e999c585cbd0cebae83bcf16273,s/StreamContainer.select/get (as it seems more container-like),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-10-16 16:16:09-07:00,25200,2015-10-16 16:16:09-07:00,25200,True,False,"['input.pyx', 'streams.pyx', 'test_streams.py']",['b598727be73e5ca6cc1160919a462df942b97b93'],5,5,10,3,,,
2ba8cf7162e0c21ff208ca5df8e6b69abe80feff,Work around kwargs segfault; this should be submitted to Cython as a bug,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-11-19 23:31:52-08:00,28800,2015-11-19 23:32:45-08:00,28800,True,False,['input.pyx'],['f465561266e46e999c585cbd0cebae83bcf16273'],0,4,4,1,,,
9b72401f0f2e4c996edf43d7711a15edde73d2ff,"Updated from flags and removed some functions for FFmpeg-3.0

This is likely to break some of the older libraries, and we will need to create
shims.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-03-04 13:53:28-08:00,28800,2016-03-04 13:53:28-08:00,28800,True,False,"['.travis.yml', 'frame.pyx', 'format.pyx', 'libav.pxd', 'avutil.pxd', 'frame.pxd', 'activate.sh']",['2ba8cf7162e0c21ff208ca5df8e6b69abe80feff'],82,103,185,7,,,
c976d2e6ca427ea8b6b695e087e49a62401c80de,Add a few notes re: functions that I investigated,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-03-04 14:48:47-08:00,28800,2016-03-04 14:48:47-08:00,28800,True,False,"['core.pyx', 'input.pyx']",['9b72401f0f2e4c996edf43d7711a15edde73d2ff'],19,24,43,2,,,
c19717d01dd1e91c85f68102ccd54b18a23f0be3,Remove older libraries from Travis (for #151),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-03-04 14:53:27-08:00,28800,2016-03-04 14:53:45-08:00,28800,True,False,['.travis.yml'],['c976d2e6ca427ea8b6b695e087e49a62401c80de'],16,10,26,1,,,
0acfbfd3e7a2295f136c7930c29350ebbd887281,Bump to 0.3.0,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-04-07 09:54:48-04:00,14400,2016-04-07 10:47:11-04:00,14400,True,False,"['CHANGELOG.md', 'setup.py']",['029368830ad6c077a114430dc85a1529fbf1f741'],13,27,40,2,,,
17f447e72633e733ab70c9c0af881edb3a2aa16d,Fix memory leak (#128),Mike Boers,mikeb@markmedia.co,Mike Boers,github@mikeboers.com,2016-04-12 18:02:50-04:00,14400,2016-04-12 18:13:08-04:00,14400,True,False,['logging.pyx'],['0acfbfd3e7a2295f136c7930c29350ebbd887281'],34,43,77,1,,,
8d84077171a431150a732e218a66d15670c4b8a6,Clean up cruft left over in logging from exploration,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-04-12 18:23:05-04:00,14400,2016-04-12 18:23:05-04:00,14400,True,False,['logging.pyx'],['17f447e72633e733ab70c9c0af881edb3a2aa16d'],6,7,13,1,,,
91688616f5624e7687bfe55cd6e3858498349959,Pull in memory leak testing script,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-04-12 18:23:26-04:00,14400,2016-04-12 18:23:26-04:00,14400,True,False,['memleak.py'],['8d84077171a431150a732e218a66d15670c4b8a6'],0,121,121,1,0.6170212765957447,0.6170212765957447,1.0
a2f188040306c5398669ff65127a29616829256e,Environment and build scripts work better on Vagrant,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-04-12 18:23:50-04:00,14400,2016-04-12 18:23:50-04:00,14400,True,False,"['activate.sh', 'build', 'build-deps']",['91688616f5624e7687bfe55cd6e3858498349959'],11,19,30,3,,,
3227de626b0d47cfa03db4745dca784512405385,Use a lock from Python's C API to build a logging queue [#164],Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-04-13 10:35:43-04:00,14400,2016-04-13 10:35:43-04:00,14400,True,False,['logging.pyx'],['a2f188040306c5398669ff65127a29616829256e'],46,87,133,1,,,
33c5b09d4cdbdb2120028820849dca2edad7b3f6,"Add a little debugging to logging to see how many records are in the queue

It seems like it easily hits 120 on my machine during a decoding task!",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-04-13 10:50:40-04:00,14400,2016-04-13 10:50:40-04:00,14400,True,False,['logging.pyx'],['3227de626b0d47cfa03db4745dca784512405385'],18,21,39,1,,,
5af2120a25ef0f22dbe1c89bc27b3778ab23902c,"Skip repeated logs, similarly to have the library's default log handler does [#166]",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-04-13 13:38:14-04:00,14400,2016-04-13 13:38:14-04:00,14400,True,False,"['logging.pyx', 'libav.pxd']",['33c5b09d4cdbdb2120028820849dca2edad7b3f6'],12,52,64,2,,,
7581b216b4ae4086f1368a511e5bf41da847bb36,Bump to 0.3.1,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-04-13 13:49:36-04:00,14400,2016-04-13 13:49:36-04:00,14400,True,False,"['CHANGELOG.md', 'setup.py']",['f29492a539ac017918013a803a0f5df5d3f3ef3b'],1,13,14,2,,,
fc310b5f31740d5e27fa165aafb9f1347272dab2,Make sure we don't eat the new message when skipping logs [#168],Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-04-14 08:39:04-04:00,14400,2016-04-14 08:39:04-04:00,14400,True,False,['logging.pyx'],['7581b216b4ae4086f1368a511e5bf41da847bb36'],36,57,93,1,,,
c7b23cd1ca5a062e80c4316559651198ea565065,Use avcodec_copy_context for creating streams from a template,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2015-12-20 16:07:27-08:00,28800,2016-06-08 16:57:05-04:00,14400,True,False,"['output.pyx', 'avcodec.pxd']",['fc310b5f31740d5e27fa165aafb9f1347272dab2'],30,4,34,2,,,
c22a5ee8ad857c213844fd311df54f52f939de92,Rescale packet times when re-assigning the stream,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-06-08 21:05:48-04:00,14400,2016-06-08 21:05:48-04:00,14400,True,False,"['packet.pyx', 'avutil.pxd']",['c7b23cd1ca5a062e80c4316559651198ea565065'],1,21,22,2,,,
825809cf7e5e010df2f05120da8decd04db56751,"Clear the codec_tag when creating a stream from a template

This is generally expected when re-muxing",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-06-08 21:06:58-04:00,14400,2016-06-08 21:06:58-04:00,14400,True,False,"['output.pyx', 'avcodec.pxd']",['c22a5ee8ad857c213844fd311df54f52f939de92'],0,7,7,2,,,
44a46cc265cf012b2ddfb88aec4f564374241d93,Don't forget to close the output!,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-06-08 21:07:18-04:00,14400,2016-06-08 21:07:18-04:00,14400,True,False,['remux.py'],['825809cf7e5e010df2f05120da8decd04db56751'],2,10,12,1,,,
c1c876e2763252fb29eb6074c1d85a9f8c643a00,"Add a Packet.time_base so that time manipulation when remuximg makes more sense

This does not *use* this new field at all. Just getting ready.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-06-12 11:11:34-04:00,14400,2016-06-12 11:11:34-04:00,14400,True,False,"['TODO.txt', 'stream.pyx', 'input.pyx', 'frame.pxd', 'frame.pyx', 'packet.pxd', 'packet.pyx', 'stream.pyx', 'stream.pyx']",['44a46cc265cf012b2ddfb88aec4f564374241d93'],13,45,58,9,,,
47ae5c88f6cc27493d84317c291e3904106db880,Split encoding from decoding Codec as they have different properties,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-06-12 11:22:18-04:00,14400,2016-06-12 11:27:35-04:00,14400,True,False,"['codec.pxd', 'codec.pyx', 'test_codec.py']",['fc310b5f31740d5e27fa165aafb9f1347272dab2'],52,67,119,3,0.0,1.0,1.0
0a94ef7e3e2788090eb9c296ce3ba0ae65302b32,Very quickly get hardcoded graph to generate frames,Mike Boers,westernx@mikeboers.com,Mike Boers,github@mikeboers.com,2015-08-12 17:04:27-07:00,25200,2016-06-21 22:21:37-04:00,14400,True,False,"['.gitignore', '_core.pyx', '__init__.py', 'graph.pxd', 'graph.pyx', 'libav.pxd', 'avcodec.pxd', 'avfilter.pxd', 'avfiltergraph.pxd', 'buffersink.pxd', 'graph.py']",['fc310b5f31740d5e27fa165aafb9f1347272dab2'],1,249,250,11,,,
d611718a0400a557e7595e09d283cf4a1ce9710a,Expose Filter (descriptors) and FilterPad,Mike Boers,westernx@mikeboers.com,Mike Boers,github@mikeboers.com,2016-02-29 14:25:17-08:00,28800,2016-06-21 22:21:37-04:00,14400,True,False,"['__init__.py', 'filter.pxd', 'filter.pyx', 'avfilter.pxd', 'test_filters.py']",['0a94ef7e3e2788090eb9c296ce3ba0ae65302b32'],0,118,118,5,1.0,1.0,1.0
6d478d82dabe5f14c632f144f4d8b7d8b22a9188,Basic filter linking; missing TONS of error handling,Mike Boers,westernx@mikeboers.com,Mike Boers,github@mikeboers.com,2016-02-29 15:37:47-08:00,28800,2016-06-21 22:21:37-04:00,14400,True,False,"['__init__.py', 'context.pxd', 'context.pyx', 'filter.pxd', 'graph.pyx', 'avfilter.pxd', 'avfiltergraph.pxd', 'test_filters.py']",['d611718a0400a557e7595e09d283cf4a1ce9710a'],27,165,192,8,1.0,1.0,1.0
130950aad51fb6224cdcdc5b93e4b40667288bcd,Use the current buffersink API,Mike Boers,westernx@mikeboers.com,Mike Boers,github@mikeboers.com,2016-02-29 16:22:56-08:00,28800,2016-06-21 22:21:37-04:00,14400,True,False,"['context.pyx', 'graph.pyx', 'buffersink.pxd']",['6d478d82dabe5f14c632f144f4d8b7d8b22a9188'],27,5,32,3,,,
4a6b0f23f49e725c327d449ef8557c5a2d36e4df,Can push images into a filter graph,Mike Boers,westernx@mikeboers.com,Mike Boers,github@mikeboers.com,2016-03-02 14:32:32-08:00,28800,2016-06-21 22:22:34-04:00,14400,True,False,"['TODO.txt', '_core.pyx', 'context.pyx', 'filter.pyx', 'frame.pxd', 'frame.pyx', 'format.pyx', 'libav.pxd', 'avfilter.pxd', 'buffersrc.pxd', 'test_filters.py']",['130950aad51fb6224cdcdc5b93e4b40667288bcd'],10,104,114,11,0.06896551724137931,1.0,1.0
8f6b176da40fb174f66da31c806437197d62c571,Graph.add_buffer(template),Mike Boers,westernx@mikeboers.com,Mike Boers,github@mikeboers.com,2016-03-02 17:33:01-08:00,28800,2016-06-21 22:22:34-04:00,14400,True,False,"['TODO.txt', 'context.pxd', 'context.pyx', 'graph.pxd', 'graph.pyx', 'stream.pyx', 'test_filters.py']",['4a6b0f23f49e725c327d449ef8557c5a2d36e4df'],73,138,211,7,0.875,0.0,0.0
25e81a4c11bb1c687c91ef9ed9c11fec9589901d,Remove use of deprecated AVFilterBuffer,Mike Boers,westernx@mikeboers.com,Mike Boers,github@mikeboers.com,2016-03-03 15:25:20-08:00,28800,2016-06-21 22:22:34-04:00,14400,True,False,"['libav.pxd', 'avcodec.pxd', 'avfilter.pxd']",['8f6b176da40fb174f66da31c806437197d62c571'],41,13,54,3,,,
de64275fce00026dbbcd8a6678e8f3e8e34a2c81,FilterContextPad.linked_to,Mike Boers,westernx@mikeboers.com,Mike Boers,github@mikeboers.com,2016-03-03 16:31:02-08:00,28800,2016-06-21 22:22:34-04:00,14400,True,False,"['TODO.txt', 'context.pxd', 'context.pyx', 'filter.pxd', 'filter.pyx', 'graph.pxd', 'graph.pyx', 'pad.pxd', 'pad.pyx', 'avfilter.pxd', 'test_filters.py']",['25e81a4c11bb1c687c91ef9ed9c11fec9589901d'],97,188,285,11,0.25,1.0,1.0
84fb4cc5cd2acc7ddd49ae7d374b7a476fe882a1,WIP dealing with incomplete AVFilterPad struct,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-06-21 22:36:05-04:00,14400,2016-06-21 22:36:05-04:00,14400,True,False,"['pad.pxd', 'pad.pyx', 'avfilter.pxd']",['de64275fce00026dbbcd8a6678e8f3e8e34a2c81'],12,13,25,3,,,
d0c20e1411d967341d55797310eefbe3fbf23ad1,Add FilterLink,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-06-22 20:28:36-04:00,14400,2016-06-22 20:28:36-04:00,14400,True,False,"['link.pxd', 'link.pyx', 'pad.pxd', 'pad.pyx', 'avfilter.pxd', 'todo.filters.txt', 'test_filters.py']",['84fb4cc5cd2acc7ddd49ae7d374b7a476fe882a1'],29,176,205,7,1.0,1.0,1.0
6433144b896bc1a46c71035b4d92b5340cb88eb9,Slightly safer FilterContext construction,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-06-22 20:36:11-04:00,14400,2016-06-22 20:36:11-04:00,14400,True,False,"['context.pxd', 'context.pyx', 'graph.pyx']",['d0c20e1411d967341d55797310eefbe3fbf23ad1'],15,15,30,3,,,
e13651919ec8f99fd9a2c2d0423dc475e5c6ece8,"Graph and FilterContext delegate push/pull to their source and sink, respectively",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-06-22 21:06:43-04:00,14400,2016-06-22 21:06:43-04:00,14400,True,False,"['context.pyx', 'graph.pxd', 'graph.pyx', 'pad.pxd', 'todo.filters.txt', 'test_filters.py']",['6433144b896bc1a46c71035b4d92b5340cb88eb9'],29,101,130,6,1.0,1.0,1.0
110a813093014ca337b268d2bff13d89873ec988,Notes,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-06-22 21:20:48-04:00,14400,2016-06-22 21:20:48-04:00,14400,True,False,['todo.filters.txt'],['e13651919ec8f99fd9a2c2d0423dc475e5c6ece8'],15,13,28,1,,,
cbdbc1a756af12596ffa71ee95a1dab2e7a35106,Add libavfilter to setup.py,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-06-23 06:53:42-04:00,14400,2016-06-23 06:53:42-04:00,14400,True,False,['setup.py'],['110a813093014ca337b268d2bff13d89873ec988'],1,1,2,1,,,
36aa7072513f0c69018637a8f0cda76fe99b5833,Don't use AV_ROUND_PASS_MINMAX because LibAV doesn't have it,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-07-24 14:10:29-04:00,14400,2016-07-24 14:10:29-04:00,14400,True,False,"['packet.pyx', 'avutil.pxd']",['c1c876e2763252fb29eb6074c1d85a9f8c643a00'],5,6,11,2,,,
179b0539eae8990b5bc7aa1b1d654528969b03f8,AVFilterContext pad arrays are not NULL terminated,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-07-24 15:17:48-04:00,14400,2016-07-24 15:22:48-04:00,14400,True,False,['pad.pyx'],['cbdbc1a756af12596ffa71ee95a1dab2e7a35106'],1,5,6,1,,,
568b9e1a5637231ff3d4056e6be9aef656946194,Don't use avfilter_graph_dump (because LibAV doesn't have it),Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-07-24 15:27:12-04:00,14400,2016-07-24 15:27:12-04:00,14400,True,False,['graph.pyx'],['179b0539eae8990b5bc7aa1b1d654528969b03f8'],8,6,14,1,,,
a29dbf90a89e3a0db1258c1d576d88c2974cee05,Use filters that are in both FFmpeg and Libav,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-07-24 15:40:09-04:00,14400,2016-07-24 15:40:09-04:00,14400,True,False,['test_filters.py'],['568b9e1a5637231ff3d4056e6be9aef656946194'],17,22,39,1,0.0,1.0,1.0
809308394f42f0ed5e5a5d49ab1159821b12ac7d,RuntimeError to diagnose Libav issue,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-07-24 16:42:25-04:00,14400,2016-07-24 16:42:25-04:00,14400,True,False,['link.pyx'],['a29dbf90a89e3a0db1258c1d576d88c2974cee05'],1,4,5,1,,,
88c439d5d5b7b6a0cf352d81650d3ba646cb4fe2,Deal with auto-inserted filters,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-07-24 17:37:23-04:00,14400,2016-07-24 17:37:23-04:00,14400,True,False,"['filter.pxd', 'filter.pyx', 'graph.pxd', 'graph.pyx', 'avfiltergraph.pxd']",['809308394f42f0ed5e5a5d49ab1159821b12ac7d'],8,49,57,5,,,
44767142bb87b12211f59112100227aa98521577,Also need to scan for contexts after graph configure,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-07-24 17:52:36-04:00,14400,2016-07-24 18:24:21-04:00,14400,True,False,['graph.pyx'],['88c439d5d5b7b6a0cf352d81650d3ba646cb4fe2'],2,9,11,1,,,
f6eb5b85eff3bd070cf80f21c7361de6a87b9d61,FIX Use of MSVC14 compiler (Py3.5 on Win),Casper van der Wel,caspervdw@gmail.com,Casper van der Wel,caspervdw@gmail.com,2016-09-11 13:03:50+02:00,-7200,2016-09-11 13:03:50+02:00,-7200,True,False,['setup.py'],['7b62aeb7774c8d8b18b18f19f2a509d999533afb'],3,9,12,1,,,
7a075f777a0ff7a2037dbe27eea9a4cc423fa3f8,Clean temp build folder before each build,Casper van der Wel,caspervdw@gmail.com,Casper van der Wel,caspervdw@gmail.com,2016-09-11 13:10:01+02:00,-7200,2016-09-11 13:10:01+02:00,-7200,True,False,['setup.py'],['f6eb5b85eff3bd070cf80f21c7361de6a87b9d61'],0,3,3,1,0.0,0.0,1.0
a6ca303f0156cb7ae277e3027f6484e9ccf752c1,Add missing library in no_pkg_config mode,Casper van der Wel,caspervdw@gmail.com,Casper van der Wel,caspervdw@gmail.com,2016-09-11 13:10:41+02:00,-7200,2016-09-11 13:10:41+02:00,-7200,True,False,['setup.py'],['7a075f777a0ff7a2037dbe27eea9a4cc423fa3f8'],1,1,2,1,,,
c8fccd93e779b1c6432cf67c014f27816bd83638,FIX Do not monkey-patch ccompiler spawn if msvc,Casper van der Wel,caspervdw@gmail.com,Casper van der Wel,caspervdw@gmail.com,2016-09-11 14:56:47+02:00,-7200,2016-09-11 14:56:47+02:00,-7200,True,False,['setup.py'],['a6ca303f0156cb7ae277e3027f6484e9ccf752c1'],1,3,4,1,,,
255765b325a32614a078166ba373072345526d1c,"Interpret ffmpeg_dir for every setup operation, also from environment variable",Casper van der Wel,caspervdw@gmail.com,Casper van der Wel,caspervdw@gmail.com,2016-09-11 15:33:29+02:00,-7200,2016-09-11 15:58:44+02:00,-7200,True,False,['setup.py'],['c8fccd93e779b1c6432cf67c014f27816bd83638'],25,37,62,1,0.0,0.0,0.0
ac1310b26fcac18354dcdbc1b1b1e5acfc568e2b,Fix tests for Py3 and Win10,Casper van der Wel,caspervdw@gmail.com,Casper van der Wel,caspervdw@gmail.com,2016-09-11 16:10:15+02:00,-7200,2016-09-11 16:10:15+02:00,-7200,True,False,"['test_errors.py', 'test_filters.py']",['255765b325a32614a078166ba373072345526d1c'],2,3,5,2,1.0,1.0,1.0
dd10bbb32a56566c195eef5e7bbfe1c91bb02617,"FIX VC10 Build (Py33, 34)",Wel C. van der,wel@Physics.LeidenUniv.nl,Wel C. van der,wel@Physics.LeidenUniv.nl,2016-09-17 20:48:49+02:00,-7200,2016-09-17 20:48:49+02:00,-7200,True,False,['setup.py'],['ac1310b26fcac18354dcdbc1b1b1e5acfc568e2b'],0,8,8,1,1.0,0.0,1.0
6e0b210c0e262dcd08bd0ede4cbc51103dfe10d2,Fix msinttypes link in appveyor build,Wel C. van der,wel@Physics.LeidenUniv.nl,Wel C. van der,wel@Physics.LeidenUniv.nl,2016-09-17 20:55:26+02:00,-7200,2016-09-17 20:55:26+02:00,-7200,True,False,['appveyor.yml'],['dd10bbb32a56566c195eef5e7bbfe1c91bb02617'],1,1,2,1,,,
8b38cf183768b822e08095c6ad53791eae93ed52,Fix backslash in MANIFEST switch,Casper van der Wel,caspervdw@gmail.com,Casper van der Wel,caspervdw@gmail.com,2016-09-17 21:42:04+02:00,-7200,2016-09-17 21:42:04+02:00,-7200,True,False,['setup.py'],['6e0b210c0e262dcd08bd0ede4cbc51103dfe10d2'],1,1,2,1,,,
2c1a5771b1e368a416222406a0fe934b0fc80a38,BLD Use miniconda already present in Appveyor,Casper van der Wel,caspervdw@gmail.com,Wel C. van der,wel@Physics.LeidenUniv.nl,2016-09-18 21:22:15+02:00,-7200,2016-09-19 09:04:51+02:00,-7200,True,False,"['appveyor.yml', 'vcvars64.bat']",['8b38cf183768b822e08095c6ad53791eae93ed52'],48,38,86,2,,,
2e18da1abf7a527d88aba2ce8b740c857ff3cb1e,Do not clean reflection dir,Wel C. van der,wel@Physics.LeidenUniv.nl,Wel C. van der,wel@Physics.LeidenUniv.nl,2016-09-19 11:26:51+02:00,-7200,2016-09-19 11:26:51+02:00,-7200,True,False,['setup.py'],['2c1a5771b1e368a416222406a0fe934b0fc80a38'],4,3,7,1,1.0,1.0,
d2a5cdcdc1c8b7c4dddf7f63d940fa31f851f32c,CLN And add Py3.3 to Appveyor,caspervdw,caspervdw@gmail.com,caspervdw,caspervdw@gmail.com,2016-09-19 15:42:43+02:00,-7200,2016-09-19 15:42:43+02:00,-7200,True,False,"['.gitignore', 'appveyor.yml', 'install.ps1', 'install_conda.ps1', 'dev-requirements.txt', 'setup.py']",['2e18da1abf7a527d88aba2ce8b740c857ff3cb1e'],204,15,219,6,0.0,0.0,0.0
1bfbc6ae5d5864f5765ae1975d28189a17e0371a,Silence MSVC compilers (excluding MSVC14),Casper van der Wel,caspervdw@gmail.com,Casper van der Wel,caspervdw@gmail.com,2016-09-19 22:13:50+02:00,-7200,2016-09-19 22:13:50+02:00,-7200,True,False,"['appveyor.yml', 'setup.py']",['d2a5cdcdc1c8b7c4dddf7f63d940fa31f851f32c'],8,12,20,2,1.0,0.0,1.0
9721b5857a2110735c9ec6e3d83f8b54bb0d99ac,Fixed typo,Ian Lee,IanLee1521@gmail.com,Mike Boers,mikeb@markmedia.co,2015-10-21 09:56:23-07:00,25200,2016-12-15 13:38:44-05:00,18000,True,False,['installation.rst'],['7b62aeb7774c8d8b18b18f19f2a509d999533afb'],1,1,2,1,,,
cfcd0654ac4fef990e8a5ad16d5373007da95abb,AudioFrame: add to_nd_array method,Tim O'Shea,tim.oshea753@gmail.com,Mike Boers,mikeb@markmedia.co,2015-12-10 23:01:52-05:00,18000,2016-12-15 13:38:44-05:00,18000,True,False,['frame.pyx'],['9721b5857a2110735c9ec6e3d83f8b54bb0d99ac'],3,17,20,1,,,
bfd9e2d35743dbb3a59d561cee4cbeb6b0ee325a,Added simplified entries for channel counts greater than 8,Tim Ahpee,timah@blackmagicdesign.com,Mike Boers,mikeb@markmedia.co,2016-02-17 11:49:14+11:00,-39600,2016-12-15 13:38:44-05:00,18000,True,False,['layout.pyx'],['cfcd0654ac4fef990e8a5ad16d5373007da95abb'],1,9,10,1,,,
da0a9861df550fa76634af8cecf732f5a72689a1,add GENPTS flag for trying best effort to get PTS,Xu Xinran,xxr@megvii.com,Mike Boers,mikeb@markmedia.co,2015-11-27 15:47:52+08:00,-28800,2016-12-15 13:38:44-05:00,18000,True,False,"['core.pyx', 'avformat.pxd']",['bfd9e2d35743dbb3a59d561cee4cbeb6b0ee325a'],1,3,4,2,,,
1ad2930a25fad4110ec75f8ccc530387426cb709,just a ad-hoc fix for max-analyze-limit,Xu Xinran,xxr@megvii.com,Mike Boers,mikeb@markmedia.co,2016-02-29 15:33:09+08:00,-28800,2016-12-15 13:38:44-05:00,18000,True,False,"['core.pyx', 'avformat.pxd']",['da0a9861df550fa76634af8cecf732f5a72689a1'],0,3,3,2,,,
ce9d02be063e935be56ddf13db0b4f554acbefee,"Add an examples of writing a movie from numpy

Start adding simple usage examples to the documentation",David Joy,videan42@gmail.com,Mike Boers,mikeb@markmedia.co,2016-12-09 17:27:46-08:00,28800,2016-12-15 13:39:39-05:00,18000,True,False,"['examples.rst', 'index.rst']",['4151c9d39680a4debf6ac38464dfe447c932f5a3'],0,46,46,2,,,
aac37a151234baf581f6e381799da4a7229e51e0,Bump to v0.3.2,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-01-03 17:31:20-05:00,18000,2017-01-03 17:31:20-05:00,18000,True,False,['setup.py'],['ce9d02be063e935be56ddf13db0b4f554acbefee'],1,1,2,1,,,
6e27b06b0e938a6e057248e4ad6598219f26b4e8,Sandbox filters,Orivej Desh,orivej@gmx.fr,Orivej Desh,orivej@gmx.fr,2017-01-17 05:26:23+00:00,0,2017-01-17 05:32:58+00:00,0,True,False,['test_filters.py'],['aac37a151234baf581f6e381799da4a7229e51e0'],4,4,8,1,,,
8fc5d6c0f7c2a53fe3b40e448f311c3cd6b93b82,Multiprocess the filmstrip,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-01-17 09:36:10-05:00,18000,2017-01-17 09:37:03-05:00,18000,True,False,"['filmstrip.py', 'merge-filmstrip.py']",['6e27b06b0e938a6e057248e4ad6598219f26b4e8'],32,73,105,2,0.0,0.0,1.0
bd8a7aba5d9178784568987997a34eea24e72e97,WIP: Building debug python.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-02-22 07:08:21-05:00,18000,2017-02-22 07:08:21-05:00,18000,True,False,"['HACKING.rst', 'activate.sh', 'build-debug-python']",['8fc5d6c0f7c2a53fe3b40e448f311c3cd6b93b82'],3,49,52,3,,,
66cab39d73d8b304451be35aace3b9f328a9b372,"Fix the options segfault.

We were calling a library function with a bad understanding of one of the
arguments. The library function was messing with our refcounts.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-03-07 11:11:21-05:00,18000,2017-03-07 11:11:21-05:00,18000,True,False,"['input.pyx', 'build-debug-python']",['bd8a7aba5d9178784568987997a34eea24e72e97'],8,24,32,2,,,
c2f5dc7f88f63b0b7514263ce1a00321b6bd3669,Fix #201; avcodec_flush_buffers does not check that the codec is open.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-03-09 09:51:11-05:00,18000,2017-03-09 09:51:11-05:00,18000,True,False,"['core.pyx', 'build-debug-python']",['66cab39d73d8b304451be35aace3b9f328a9b372'],1,2,3,2,,,
58e5b4d09b3efd96da5f456edb2dfc26355473f4,Discuss Conda in the README and docs. For #200.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-03-10 11:22:03-05:00,18000,2017-03-10 11:22:03-05:00,18000,True,False,"['README.md', 'conf.py', 'installation.rst']",['c2f5dc7f88f63b0b7514263ce1a00321b6bd3669'],6,50,56,3,,,
7d5d33192b2530b41497ff6ee196ad3fe8e65a2d,Bump to v0.3.3.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-03-10 13:21:34-05:00,18000,2017-03-10 13:21:34-05:00,18000,True,False,"['CHANGELOG.md', 'conf.py', 'upload', 'setup.py']",['58e5b4d09b3efd96da5f456edb2dfc26355473f4'],4,27,31,4,,,
8ee3c94b248c09ed1186468ad95c5feae4a315fb,Rebase Appveyor build on conda,Casper van der Wel,caspervdw@gmail.com,Casper van der Wel,caspervdw@gmail.com,2017-03-11 13:12:18+01:00,-3600,2017-03-11 13:12:18+01:00,-3600,True,False,['appveyor.yml'],['7d5d33192b2530b41497ff6ee196ad3fe8e65a2d'],13,2,15,1,,,
884c4529983b9127962932107b32973b0ed2e007,Drop include dirs in appveyor build,Casper van der Wel,caspervdw@gmail.com,Casper van der Wel,caspervdw@gmail.com,2017-03-11 13:42:27+01:00,-3600,2017-03-11 13:44:07+01:00,-3600,True,False,['appveyor.yml'],['8ee3c94b248c09ed1186468ad95c5feae4a315fb'],1,1,2,1,,,
0a10558b76ed7dba6ca5987910082f538703785e,Add conda paths to build,Casper van der Wel,caspervdw@gmail.com,Casper van der Wel,caspervdw@gmail.com,2017-03-11 14:57:41+01:00,-3600,2017-03-11 14:57:41+01:00,-3600,True,False,['appveyor.yml'],['884c4529983b9127962932107b32973b0ed2e007'],2,2,4,1,,,
7cdee3f4b737febbbea4b61941b22bd5f8a123dd,We don't need to host the conda-recipe anymore due to conda-forge.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-03-10 13:01:32-05:00,18000,2017-03-11 11:50:51-05:00,18000,True,False,"['build.sh', 'meta.yaml']",['7d5d33192b2530b41497ff6ee196ad3fe8e65a2d'],34,0,34,2,,,
f3d9513eb12bbdae3245f87bf97e1ab3266c915e,Fix missing Ubuntu 14.04 dependancy,Tom Flanagan,theknio@gmail.com,Mike Boers,github@mikeboers.com,2017-02-01 11:59:17-08:00,28800,2017-03-11 11:58:04-05:00,18000,True,False,['installation.rst'],['6a744419b8d0d03fe60fb48e3e85714cbfe43cb0'],1,1,2,1,,,
534565e92fbdcbbf5b7e026675cc286565a3dc21,ability to set pts and streamid,Ömer Sezgin Uğurlu,omer@ugurlu.org,Mike Boers,github@mikeboers.com,2017-03-16 11:35:47+03:00,-10800,2017-03-17 09:21:38-04:00,14400,True,False,"['packet.pyx', 'stream.pyx']",['f3d9513eb12bbdae3245f87bf97e1ab3266c915e'],0,10,10,2,,,
776741d1229af2c6ec3265714f02a6015f818f0c,"Remove copying of keyframe data from AVCodecContext.coded_frame.

The coded_frame has been deprecated, the AV_PKT_FLAG_KEY flag still gets set,
and in some cases (at least #194) breaks seeking.

My guess is that this is a universally good idea.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-03-21 10:43:56-04:00,14400,2017-03-21 10:43:56-04:00,14400,True,False,['stream.pyx'],['534565e92fbdcbbf5b7e026675cc286565a3dc21'],4,0,4,1,,,
75f17a1c6886692b17e41e17e63309c7e7b5b5ed,`make -C docs test` to run sphinx.etx.doctest,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-03-21 11:47:55-04:00,14400,2017-03-21 11:47:55-04:00,14400,True,False,"['Makefile', 'conf.py', 'index.rst', 'common.py', 'test_doctests.py']",['776741d1229af2c6ec3265714f02a6015f818f0c'],9,48,57,5,0.6666666666666666,0.0,1.0
81c14dd83c657ca647db27f1924271a15499bab5,Remove Lenna from our tests; it brings an unwanted context to our project.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-03-21 11:53:12-04:00,14400,2017-03-21 11:53:12-04:00,14400,True,False,"['conf.py', 'test_videoframe.py']",['75f17a1c6886692b17e41e17e63309c7e7b5b5ed'],12,12,24,2,,,
891e5ad1242ebde67e874418cc1f03f9b57a56dd,Bump up primary FFmpeg to 3.2.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-04-04 14:28:59-04:00,14400,2017-04-04 14:28:59-04:00,14400,True,False,"['.travis.yml', 'activate.sh']",['81c14dd83c657ca647db27f1924271a15499bab5'],7,13,20,2,,,
7d4c6b9d7d9d391665e506dd8d75434074f79d3a,Don't assume we can tell when a file is closed; let FFmpeg do that for us.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-04-04 14:29:26-04:00,14400,2017-04-04 14:29:26-04:00,14400,True,False,['output.pyx'],['891e5ad1242ebde67e874418cc1f03f9b57a56dd'],5,8,13,1,,,
41ab2a947df53ad7dea2f1482be6e02520603d65,Warn then options aren't used; only for outputs.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-04-04 14:29:59-04:00,14400,2017-04-04 14:29:59-04:00,14400,True,False,['output.pyx'],['7d4c6b9d7d9d391665e506dd8d75434074f79d3a'],0,21,21,1,,,
1e1e8f09418626f212d0744e3d89cbe3d8ae4556,WIP: Video encoding/transcoding works (with lots of hard-coding).,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-07-24 15:05:45-04:00,14400,2017-05-05 07:17:00-04:00,14400,True,False,"['TODO.txt', 'buffer.pxd', 'buffer.pyx', 'codec.pxd', 'codec.pyx', 'codeccontext.pxd', 'codeccontext.pyx', 'packet.pxd', 'packet.pyx', 'codeccontext.pxd', 'codeccontext.pyx', 'avcodec.pxd', 'cctx_decode.py', 'cctx_encode.py', 'build-deps']",['41ab2a947df53ad7dea2f1482be6e02520603d65'],20,522,542,15,,,
1162b10de422d85cae5089d01516e54d7516762a,Implement basics of AVCodecParserContext,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2016-07-26 12:20:34-04:00,14400,2017-05-05 07:17:01-04:00,14400,True,False,"['format.pyx', '__init__.py', 'codec.pxd', 'codec.pyx', 'context.pxd', 'context.pyx', 'packet.pxd', 'packet.pyx', 'codeccontext.pxd', 'codeccontext.pyx', 'stream.pyx', 'avcodec.pxd', 'todo.__unsorted__.txt', 'todo.codec-ctx.txt', 'todo.filters.txt', 'todo.time.txt', 'cctx_decode.py', 'cctx_encode.py']",['1e1e8f09418626f212d0744e3d89cbe3d8ae4556'],183,458,641,18,,,
fb5fa702765c48f190a0335d53097cb765d50c33,WIP: Fully adapt all existing streams into CodeContext[s].,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-04 21:21:00-04:00,14400,2017-05-05 07:17:33-04:00,14400,True,False,"['codeccontext.pxd', 'codeccontext.pyx', 'context.pxd', 'context.pyx', 'input.pyx', 'output.pyx', 'packet.pyx', 'stream.pxd', 'stream.pyx', 'codeccontext.pxd', 'codeccontext.pyx', 'codeccontext.pyx']",['1162b10de422d85cae5089d01516e54d7516762a'],68,196,264,12,,,
ae9801267c55d719c2cd9d8a9e4877d764766f3f,"Move majority of Stream functionality into CodecContext.

Most tests pass. Nearly there...",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-04 22:07:37-04:00,14400,2017-05-05 07:17:58-04:00,14400,True,False,"['codeccontext.pyx', 'stream.pxd', 'stream.pyx', 'context.pxd', 'context.pyx', 'output.pyx', 'frame.pxd', 'frame.pyx', 'packet.pxd', 'stream.pxd', 'stream.pyx', 'codeccontext.pyx', 'stream.pxd', 'stream.pyx', 'codeccontext.pxd', 'codeccontext.pyx', 'stream.pxd', 'stream.pyx', 'todo.codec-ctx.txt', 'test_encoding.py']",['fb5fa702765c48f190a0335d53097cb765d50c33'],614,312,926,20,,,
e4ac79a1b53221c533b36f498a371a9bc17d3b27,wrap_codec_context must be provided the AVCodec as well.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-05 07:56:32-04:00,14400,2017-05-05 07:56:32-04:00,14400,True,False,"['context.pxd', 'context.pyx', 'stream.pyx', 'codeccontext.pyx', 'avcodec.pxd', 'todo.codec-ctx.txt']",['ae9801267c55d719c2cd9d8a9e4877d764766f3f'],44,39,83,6,,,
99ad7209ba721abdf1bff27ac0bbd999fc7405cb,"Restore copying AVFrame.pts from AVFrame.pkt_pts.

This is for older FFMpeg and all LibAV.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-05 10:45:38-04:00,14400,2017-05-05 10:45:38-04:00,14400,True,False,"['context.pxd', 'context.pyx', 'packet.pxd', 'stream.pxd', 'stream.pyx', 'test_seek.py']",['e4ac79a1b53221c533b36f498a371a9bc17d3b27'],18,22,40,6,,,
d905cfed70b3e01bcff979a9cd53696852339282,fix broken libav url,Mark Reid,mindmark@gmail.com,Mike Boers,github@mikeboers.com,2017-04-27 20:09:33-07:00,25200,2017-05-06 15:53:43-04:00,14400,True,False,['.travis.yml'],['99ad7209ba721abdf1bff27ac0bbd999fc7405cb'],1,1,2,1,,,
9a5385cd9353805f0e7c1ca2155eb5adb56a9ee2,"fix fifo bug
partial option could lead to reading out of bounds memory and segfault",Mark Reid,mindmark@gmail.com,Mike Boers,github@mikeboers.com,2017-04-25 20:37:58-07:00,25200,2017-05-06 15:53:43-04:00,14400,True,False,['fifo.pyx'],['d905cfed70b3e01bcff979a9cd53696852339282'],0,3,3,1,,,
69a02d89877a10f4207c7e377741720f5b2be992,Include last error log in library exceptions.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-05 12:19:58-04:00,14400,2017-05-06 15:53:43-04:00,14400,True,False,"['logging.pxd', 'logging.pyx', 'utils.pyx', 'avutil.pxd']",['9a5385cd9353805f0e7c1ca2155eb5adb56a9ee2'],38,108,146,4,,,
ec0c04313d9cf4dbe1a67dbb1bd8a333efefbbba,Frame does not have dts or duration.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-05 12:20:20-04:00,14400,2017-05-06 15:53:43-04:00,14400,True,False,['frame.pyx'],['69a02d89877a10f4207c7e377741720f5b2be992'],13,3,16,1,,,
6403d587fd5b55a62c0311a6b71a95150472a079,"Expose time_base and writeable format on [Video]CodecContext.

There is also an API test for encoding.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-05 12:21:23-04:00,14400,2017-05-06 15:53:43-04:00,14400,True,False,"['__init__.py', 'codec.pyx', 'context.pyx', 'codeccontext.pxd', 'codeccontext.pyx', 'common.py', 'test_codec_context.py', 'test_videoframe.py']",['ec0c04313d9cf4dbe1a67dbb1bd8a333efefbbba'],29,82,111,8,1.0,1.0,1.0
240c827e75cf09c395c008a6ef0464e00692ea06,Fail a few less tests if we don't have PIL importable.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-05 12:23:36-04:00,14400,2017-05-06 15:53:43-04:00,14400,True,False,['test_filters.py'],['6403d587fd5b55a62c0311a6b71a95150472a079'],3,9,12,1,1.0,1.0,1.0
d5d7adfb3b034765318be2f64bf1d07808a6352f,WIP: Testing CodecContext round trip.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-05 12:45:21-04:00,14400,2017-05-06 15:53:43-04:00,14400,True,False,"['HACKING.rst', 'codeccontext.pyx', 'stream.pxd', 'stream.pyx', 'codec.pyx', 'context.pxd', 'context.pyx', 'output.pyx', 'packet.pxd', 'packet.pyx', 'codeccontext.pyx', 'common.py', 'test_codec_context.py', 'test_coders.py', 'test_encoding.py']",['240c827e75cf09c395c008a6ef0464e00692ea06'],67,495,562,15,0.09022556390977443,0.38721804511278196,0.6842105263157895
70cee545333fb749173227a03652d6fd638f8698,Use lib.av_packet_new instead of DIY.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-05 21:48:56-04:00,14400,2017-05-06 15:53:52-04:00,14400,True,False,"['packet.pxd', 'packet.pyx', 'avcodec.pxd']",['d5d7adfb3b034765318be2f64bf1d07808a6352f'],29,24,53,3,,,
00c512224f1b9522733f345ee81a0a2f63ef4695,"Remove a flag that was causing packets to get delayed.

I'm not sure when we would actually want it. I don't think we do. I think we
should enforce the use of parsers (which I think those few codecs (e.g. mpeg4)
may be using internally).",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-05 21:55:01-04:00,14400,2017-05-06 15:53:52-04:00,14400,True,False,"['context.pyx', 'codeccontext.pyx', 'test_coders.py']",['70cee545333fb749173227a03652d6fd638f8698'],8,9,17,3,,,
aed69d3966b9bfa929f6e6c7cd2c3e5f29fa430f,Working through audio encoding tests.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-05 22:46:34-04:00,14400,2017-05-06 15:53:52-04:00,14400,True,False,"['codeccontext.pyx', 'format.pyx', 'layout.pyx', 'stream.pyx', 'context.pyx', 'output.pyx', 'test_coders.py', 'test_encoding.py']",['00c512224f1b9522733f345ee81a0a2f63ef4695'],55,79,134,8,0.0,0.0,1.0
805ac849a189a845690533e211b4eb07cbed49cd,CodecContext.options works.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-06 09:51:43-04:00,14400,2017-05-06 15:54:04-04:00,14400,True,False,"['context.pxd', 'context.pyx', 'test_coders.py']",['aed69d3966b9bfa929f6e6c7cd2c3e5f29fa430f'],4,16,20,3,0.0,0.0,0.0
8c7df497c02b36f06c2a4488e18938547e40fa8c,Don't forget to open the codec before encoding.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-06 14:28:42-04:00,14400,2017-05-06 15:54:04-04:00,14400,True,False,"['codeccontext.pyx', 'layout.pyx', 'context.pxd', 'context.pyx', 'output.pyx', 'test_encoding.py']",['805ac849a189a845690533e211b4eb07cbed49cd'],57,74,131,6,0.0,1.0,1.0
ac51c07cd7786f002c800d94ddfca47fdddbe6c4,Only --disable-stripping for FFmpeg.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-06 14:58:43-04:00,14400,2017-05-06 15:54:04-04:00,14400,True,False,['build-deps'],['8c7df497c02b36f06c2a4488e18938547e40fa8c'],1,4,5,1,,,
3077d17bfe073860e941573189d09809fc20b4d6,Ignore AV_LOG_TRACE as it is not in very old libraries.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-06 15:00:21-04:00,14400,2017-05-06 15:54:05-04:00,14400,True,False,['logging.pyx'],['ac51c07cd7786f002c800d94ddfca47fdddbe6c4'],2,1,3,1,,,
b550870901371529dfc686b050c64171f083d2c4,Restore option use tracking in OutputContainer.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-06 15:48:24-04:00,14400,2017-05-06 15:54:05-04:00,14400,True,False,"['context.pyx', 'output.pyx', 'todo.codec-ctx.txt']",['3077d17bfe073860e941573189d09809fc20b4d6'],152,23,175,3,,,
17fc95876b162a0e91fe7ff0f27771fa071304a9,"Deprecate older libraries in Travis.

Let's talk about it in #220.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-06 16:11:57-04:00,14400,2017-05-06 16:18:40-04:00,14400,True,False,['.travis.yml'],['b550870901371529dfc686b050c64171f083d2c4'],1,25,26,1,,,
c63139c67df8a023af1f1102a3e060412f5f56b6,"Signal that we want to refcount frames.

There should be no other requirements from us.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-06 16:31:37-04:00,14400,2017-05-06 16:31:56-04:00,14400,True,False,"['context.pyx', 'frame.pyx', 'avcodec.pxd', 'todo.__unsorted__.txt', 'todo.codec-ctx.txt']",['aeca78ddc71a51c5cb55fbc1466c930700515c47'],29,7,36,5,,,
8fbcc077b8217a5d2bbc78796f31c40eb829f73d,Encode methods return lists of packets.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-06 19:58:40-04:00,14400,2017-05-06 19:58:40-04:00,14400,True,False,"['codeccontext.pyx', 'context.pxd', 'context.pyx', 'stream.pyx', 'codeccontext.pyx', 'test_codec_context.py', 'test_coders.py', 'test_encode.py']",['c63139c67df8a023af1f1102a3e060412f5f56b6'],387,346,733,8,0.8666666666666667,0.7555555555555555,0.08888888888888889
d9ab03adc836fc38eaa2f61b3c9c940afb9e64a5,Runtime sanity check for our assumptions that codecs can't be encoders and decoders.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-06 19:59:22-04:00,14400,2017-05-06 19:59:22-04:00,14400,True,False,"['__main__.py', 'codec.pyx', 'context.pyx']",['8fbcc077b8217a5d2bbc78796f31c40eb829f73d'],8,29,37,3,,,
68f0ceb1c054407f4120833021b8d8446fd31857,WIP Trying out send/recv.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-06 21:45:07-04:00,14400,2017-05-06 21:45:07-04:00,14400,True,False,"['codeccontext.pyx', 'context.pxd', 'context.pyx', 'codeccontext.pyx', 'codeccontext.pyx', 'libav.pxd', 'avcodec.pxd', 'avcodec.pyav.h', 'todo.__unsorted__.txt', 'setup.py', 'test_python_io.py']",['d9ab03adc836fc38eaa2f61b3c9c940afb9e64a5'],102,247,349,11,0.8,0.8,1.0
3479c8452baebe78b79e0b39f103574090c3544f,"Notes, and fix for a renamed file.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-06 21:47:52-04:00,14400,2017-05-06 21:47:52-04:00,14400,True,False,"['todo.__unsorted__.txt', 'test_python_io.py']",['d9ab03adc836fc38eaa2f61b3c9c940afb9e64a5'],22,11,33,2,,,
91bfe9afb720e60c0c86fb892eddf2644fe23c9a,We cannot expose send/recv directly to the user!,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-07 23:22:40-04:00,14400,2017-05-07 23:22:40-04:00,14400,True,False,"['codeccontext.pyx', 'context.pxd', 'context.pyx', 'codeccontext.pyx', 'test_codec_context.py']",['68f0ceb1c054407f4120833021b8d8446fd31857'],88,102,190,5,0.0,0.0,0.0
3bacf523678b4cf141ddd1dc1043b2d8e1bb9e64,Update appveyor versions,Casper van der Wel,caspervdw@gmail.com,Casper van der Wel,caspervdw@gmail.com,2017-05-09 20:56:51+02:00,-7200,2017-05-09 20:56:51+02:00,-7200,True,False,['appveyor.yml'],['054db883a17427c6f7598cdf23689e86e27fa675'],23,25,48,1,,,
9ea60db4f545c9f88924a544c3c077c0e347d876,"Revisit manual Windows installation docs.

It has gotten a bit easier since it was last documented. For #199.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-09 22:44:58-04:00,14400,2017-05-09 22:44:58-04:00,14400,True,False,['installation.rst'],['3bacf523678b4cf141ddd1dc1043b2d8e1bb9e64'],43,28,71,1,,,
3c3dc1180766962d518bca18dd5deffc77536a8f,Get Codec[Context] into the API docs.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-09 22:59:49-04:00,14400,2017-05-09 22:59:49-04:00,14400,True,False,"['codec.pyx', 'core.pyx', 'Makefile', 'about.rst', 'api.rst', 'index.rst']",['9ea60db4f545c9f88924a544c3c077c0e347d876'],13,67,80,6,,,
3683d25ac9ce72ab26ade09930200a024811d5cf,Write our new impressions about time_base.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-19 21:33:22-04:00,14400,2017-05-19 21:33:22-04:00,14400,True,False,['HACKING.rst'],['3c3dc1180766962d518bca18dd5deffc77536a8f'],15,11,26,1,,,
c7e602a98cb4d867e9415bc64f89d17947929f0c,Attempt to deal with new understanding of time_base.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-19 22:48:53-04:00,14400,2017-05-19 22:48:53-04:00,14400,True,False,"['codeccontext.pyx', 'codec.pyx', 'context.pxd', 'context.pyx', 'core.pyx', 'output.pyx', 'frame.pxd', 'frame.pyx', 'packet.pxd', 'packet.pyx', 'stream.pyx', 'codeccontext.pyx', 'frame.pyx', 'go.py']",['3683d25ac9ce72ab26ade09930200a024811d5cf'],70,129,199,14,,,
9fb454f49187865ef0398f79d2ead2d2e160c04a,examples: fix for mixed indentation,Christoph Rackwitz,christoph.rackwitz@gmail.com,Mike Boers,github@mikeboers.com,2017-05-24 09:17:12+02:00,-7200,2017-05-24 07:48:44-04:00,14400,True,False,['show_frames_opencv.py'],['c7e602a98cb4d867e9415bc64f89d17947929f0c'],3,4,7,1,,,
e73c92b399d5697d8aca3a21b047f56a1cd5b79e,taking EAGAIN constant from errno module,Christoph Rackwitz,christoph.rackwitz@gmail.com,Mike Boers,github@mikeboers.com,2017-05-24 09:54:31+02:00,-7200,2017-05-24 07:48:44-04:00,14400,True,False,['context.pyx'],['9fb454f49187865ef0398f79d2ead2d2e160c04a'],3,3,6,1,,,
85fbff7f7664c52dbc6a1d5c08eaed10b71371a3,Take EAGAIN from libc instead of Python.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-24 07:48:22-04:00,14400,2017-05-24 07:48:44-04:00,14400,True,False,['context.pyx'],['e73c92b399d5697d8aca3a21b047f56a1cd5b79e'],5,5,10,1,,,
22e11bc3afaca9fc2c52da14fe963fcb50fcc908,"Define PYAV_HAVE macros with zero when we can't find the named object.

This make it easier to expose them to runtime code, as they always exist.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-27 23:34:51-04:00,14400,2017-05-27 23:34:51-04:00,14400,True,False,"['avcodec.pyav.h', 'avformat.pyav.h', 'avutil.pyav.h', 'swresample.pyav.h', 'setup.py']",['85fbff7f7664c52dbc6a1d5c08eaed10b71371a3'],35,29,64,5,1.0,1.0,0.0
cdb706fe07892d75b3bbd8df6cb3172b73fec37e,"Add Packet.is_keyframe and Packet.is_corrupt.

For GitHub issue #226.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-27 23:40:13-04:00,14400,2017-05-27 23:40:13-04:00,14400,True,False,"['packet.pyx', 'avcodec.pxd']",['22e11bc3afaca9fc2c52da14fe963fcb50fcc908'],0,7,7,2,,,
c6c35bfd2f2512249c8dcdd046ecc98f23b57930,OutputContainer.mux(packets) accepts a sequence of packets.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-27 23:43:54-04:00,14400,2017-05-27 23:43:54-04:00,14400,True,False,['output.pyx'],['cdb706fe07892d75b3bbd8df6cb3172b73fec37e'],1,11,12,1,,,
caf04244e62ed514d0dbda8cdf35d7f5136c0305,Remove Libav from TravisCI's list of required builds.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-27 23:47:52-04:00,14400,2017-05-27 23:47:52-04:00,14400,True,False,['.travis.yml'],['c6c35bfd2f2512249c8dcdd046ecc98f23b57930'],0,3,3,1,,,
9433c65c1971f9625727d2312fe3df367aa44cfe,"Don't fail so hard when there is no git installed.

Fixes #184.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-27 23:51:46-04:00,14400,2017-05-27 23:51:46-04:00,14400,True,False,['setup.py'],['caf04244e62ed514d0dbda8cdf35d7f5136c0305'],3,7,10,1,,0.0,
762acf72194d43bd154e10adf4a890ae94dee6da,Add PyPy to TravisCI.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-27 23:57:37-04:00,14400,2017-05-28 00:20:10-04:00,14400,True,False,['.travis.yml'],['9433c65c1971f9625727d2312fe3df367aa44cfe'],1,19,20,1,,,
c96f0fd5f5c4490c37ad7c2ce273b054002ea647,Use av_frame_copy_props when creating derived frames.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-28 13:52:26-04:00,14400,2017-05-28 13:52:26-04:00,14400,True,False,"['Makefile', 'codeccontext.pyx', 'fifo.pyx', 'frame.pxd', 'frame.pyx', 'resampler.pyx', 'context.pyx', 'frame.pxd', 'frame.pyx', 'codeccontext.pyx', 'frame.pxd', 'frame.pyx', 'avcodec.pxd']",['762acf72194d43bd154e10adf4a890ae94dee6da'],39,45,84,13,,,
1eb96f40d70de64fc0b981b872af51468947ca00,Error logs should not make their way into `AVError.strerror`.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-28 14:06:40-04:00,14400,2017-05-28 14:06:40-04:00,14400,True,False,['utils.pyx'],['c96f0fd5f5c4490c37ad7c2ce273b054002ea647'],2,6,8,1,,,
b8d227654c1603ba5236eaab7dc0f8191eb3be3c,"AudioFifo copies attributes from a ""template"" frame.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-28 20:12:09-04:00,14400,2017-05-28 20:12:09-04:00,14400,True,False,"['HACKING.rst', 'codeccontext.pyx', 'fifo.pxd', 'fifo.pyx', 'frame.pyx', 'resampler.pyx', 'conf.py', 'test_audiofifo.py']",['1eb96f40d70de64fc0b981b872af51468947ca00'],35,70,105,8,1.0,1.0,1.0
2e01032ffd02bda55344b274242a421ade7118f0,Split pyio into its own file.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-28 20:19:44-04:00,14400,2017-05-28 20:19:44-04:00,14400,True,False,"['core.pyx', 'pyio.pxd', 'pyio.pyx']",['b8d227654c1603ba5236eaab7dc0f8191eb3be3c'],73,89,162,3,,,
accb94a6ee0c17fd85f394f6a2af48ad98ea8a44,Auto-create C docs for structs and their members; link all to FFmpeg docs.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-29 22:48:35-04:00,14400,2017-05-29 22:48:35-04:00,14400,True,False,"['custom.css', 'conf.py', 'includes.py', 'avcodec.pxd']",['2e01032ffd02bda55344b274242a421ade7118f0'],35,118,153,4,0.42857142857142855,1.0,1.0
2b9716443c4a02d7afbe37d74c9f3ec3b3f17724,Include the changelog and license in the docs.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-29 23:05:53-04:00,14400,2017-05-29 23:05:53-04:00,14400,True,False,"['CHANGELOG.rst', 'about.rst', 'changelog.rst', 'hacking.rst', 'index.rst', 'license.rst']",['accb94a6ee0c17fd85f394f6a2af48ad98ea8a44'],43,78,121,6,,,
c284747b8b7664ecf3148e0dfef3f70abfe0cea6,"The PYAV_HAVE_* macros are always defined, and either 0 or 1.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-29 23:20:33-04:00,14400,2017-05-29 23:20:33-04:00,14400,True,False,"['HACKING.rst', 'setup.py']",['2b9716443c4a02d7afbe37d74c9f3ec3b3f17724'],20,25,45,2,0.0,0.0,1.0
d8fcff0135387b51e320bdb95ba6c5542b8abf52,Disambiguate Packet.stream the C struct from the property.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-29 23:44:46-04:00,14400,2017-05-29 23:44:46-04:00,14400,True,False,"['input.pyx', 'packet.pxd', 'packet.pyx']",['c284747b8b7664ecf3148e0dfef3f70abfe0cea6'],29,19,48,3,,,
3dd212a0cbe0c74f1ff765dbce4b99bdf510abe1,Record the stream on a packet.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-29 23:45:05-04:00,14400,2017-05-29 23:48:14-04:00,14400,True,False,['stream.pyx'],['d8fcff0135387b51e320bdb95ba6c5542b8abf52'],1,6,7,1,,,
35f9f4b777e61cbd295dea9b77f281b9243feec2,Assert Packet.stream and Packet.stream_index while encoding.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-30 00:26:31-04:00,14400,2017-05-30 00:26:31-04:00,14400,True,False,"['__init__.py', 'fifo.pyx', 'frame.pyx', 'packet.pyx', 'common.py', 'test_encode.py']",['3dd212a0cbe0c74f1ff765dbce4b99bdf510abe1'],1,49,50,6,0.0,1.0,1.0
1c350b0a1387b36a19943c3b07fe031b58b76ab9,Assert that timing is not broken during VideoFrame.reformat,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-30 07:51:43-04:00,14400,2017-05-30 07:51:43-04:00,14400,True,False,"['frame.pyx', 'test_videoframe.py']",['35f9f4b777e61cbd295dea9b77f281b9243feec2'],4,12,16,2,1.0,1.0,1.0
229917c00501e731a16cc54faa272671469a45f8,Defer picking a time_base on codec contexts until we need to.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-30 11:57:14-04:00,14400,2017-05-30 11:57:14-04:00,14400,True,False,"['codeccontext.pxd', 'codeccontext.pyx', 'context.pxd', 'context.pyx', 'output.pyx', 'utils.pyx', 'codeccontext.pyx', 'test_encode.py']",['1c350b0a1387b36a19943c3b07fe031b58b76ab9'],12,24,36,8,1.0,0.0,0.0
82a5dda8750d38b4456f604cf0c9be8b15dfacd6,"Allow writing of Stream.time_base, and set it to a default value if not otherwise set.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-30 12:06:36-04:00,14400,2017-05-30 12:06:36-04:00,14400,True,False,"['output.pyx', 'stream.pxd', 'stream.pyx']",['229917c00501e731a16cc54faa272671469a45f8'],8,14,22,3,,,
54322550051e50f78a97d5bf3482422bbdecf2a2,"AudioFifo holds onto a template frame, and asserts everything is similar to it.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-30 16:06:34-04:00,14400,2017-05-30 16:06:34-04:00,14400,True,False,"['fifo.pxd', 'fifo.pyx', 'context.pyx', 'frame.pxd', 'frame.pyx', 'avcodec.pxd', 'todo.__unsorted__.txt']",['82a5dda8750d38b4456f604cf0c9be8b15dfacd6'],108,92,200,7,,,
4cfc95ee40fbf6d7b889411050b6945bb0dd27f2,AudioFifo asserts good pts.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-30 16:34:51-04:00,14400,2017-05-30 16:34:51-04:00,14400,True,False,"['fifo.pxd', 'fifo.pyx', 'test_codec_context.py', 'test_encode.py']",['54322550051e50f78a97d5bf3482422bbdecf2a2'],17,27,44,4,0.0,0.5,1.0
97807d87f9ba9984e18efdb485f7d16329401ffa,"AudioResampler may pass through, and it checks incoming timestamps",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-30 16:59:14-04:00,14400,2017-05-30 16:59:14-04:00,14400,True,False,"['fifo.pxd', 'fifo.pyx', 'resampler.pxd', 'resampler.pyx']",['4cfc95ee40fbf6d7b889411050b6945bb0dd27f2'],29,64,93,4,,,
dd74ca204d552e799d3a8bb174e8e8f11f22880a,Assert AudioFifo time properties.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-30 20:06:40-04:00,14400,2017-05-30 20:06:40-04:00,14400,True,False,"['codeccontext.pyx', 'fifo.pxd', 'fifo.pyx', 'frame.pyx', 'frame.pyx', 'test_audiofifo.py']",['97807d87f9ba9984e18efdb485f7d16329401ffa'],35,128,163,6,0.5714285714285714,1.0,1.0
8a2ee736ee43bf238329a7445c4234bea40f9530,Assert AudioResampler time handling.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-30 20:23:59-04:00,14400,2017-05-30 20:23:59-04:00,14400,True,False,"['resampler.pxd', 'resampler.pyx', 'test_audioresampler.py']",['dd74ca204d552e799d3a8bb174e8e8f11f22880a'],8,129,137,3,0.4603174603174603,1.0,1.0
90f60dd8319b0c55fc42ff75e09cd365ee02e8a9,"A pile of docs, changelog, and bump to 0.4.0.dev0.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-30 21:44:08-04:00,14400,2017-05-30 21:44:08-04:00,14400,True,False,"['CHANGELOG.rst', 'fifo.pyx', 'layout.pyx', 'resampler.pyx', 'api.rst', 'conf.py', 'setup.py']",['8a2ee736ee43bf238329a7445c4234bea40f9530'],18,75,93,7,,,
a0582e6fdc4f48e65774322cc840c7d272be0905,Rate is now either framerate or sample_rate.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-31 07:24:43-04:00,14400,2017-05-31 07:24:43-04:00,14400,True,False,"['CHANGELOG.rst', 'codeccontext.pyx', 'context.pyx', 'codeccontext.pyx', 'test_encode.py', 'test_seek.py']",['90f60dd8319b0c55fc42ff75e09cd365ee02e8a9'],25,32,57,6,,,
45f5005f4f17258e660fefd0df1b679e6e71ff09,Invalid fractions are generally None.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-31 07:24:58-04:00,14400,2017-05-31 07:24:58-04:00,14400,True,False,"['CHANGELOG.rst', 'utils.pyx']",['a0582e6fdc4f48e65774322cc840c7d272be0905'],1,8,9,2,,,
a1c37a685090355f1c8f6ddb7935430e5affef34,Use the codec name instead of Codec repr in a path for testing.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-05-31 08:17:58-04:00,14400,2017-05-31 08:17:58-04:00,14400,True,False,['test_codec_context.py'],['45f5005f4f17258e660fefd0df1b679e6e71ff09'],1,1,2,1,,,
13de0fa85f47b479c25cdfcea432fab9fa78ae5d,"We don't have iteritems in Cython.

Fixes #236. Helps #221.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-06 21:30:15-04:00,14400,2017-06-06 21:30:38-04:00,14400,True,False,['output.pyx'],['a1c37a685090355f1c8f6ddb7935430e5affef34'],1,2,3,1,,,
4ca6dfd3ed934648b10d095b1366b2142449490d,Manage Data stream,Manuel GOACOLOU,mgoacolou@cls.fr,Mike Boers,github@mikeboers.com,2017-06-12 17:47:46+02:00,-7200,2017-06-20 17:04:21-04:00,14400,True,False,"['streams.pxd', 'streams.pyx', '__init__.py', 'stream.pxd', 'stream.pyx', 'stream.pyx']",['13de0fa85f47b479c25cdfcea432fab9fa78ae5d'],2,50,52,6,,,
62a39c8ae2cd200d16f8e9ace6f64363d6f51e18,"Returns None if desc is NULL

avcodec_descriptor_get() returns NULL when no descriptor exists.
https://ffmpeg.org/doxygen/3.2/group__lavc__misc.html#gac09f8ddc2d4b36c5a85c6befba0d0888",Koichi Akabe,vbkaisetsu@gmail.com,Mike Boers,github@mikeboers.com,2017-06-13 11:09:02+09:00,-32400,2017-06-20 17:04:32-04:00,14400,True,False,['stream.pyx'],['4ca6dfd3ed934648b10d095b1366b2142449490d'],0,2,2,1,,,
be01c1e86542c34117d2491467bda506c5a99394,whitespace fixes,Tadas Dailyda,tadas@dailyda.com,Tadas Dailyda,tadas@dailyda.com,2017-06-21 14:55:07+03:00,-10800,2017-06-21 14:55:07+03:00,-10800,True,False,"['filter.pxd', 'filter.pyx', 'option.pyx', 'avfilter.pxd']",['074df2326e922d81558ee43dd5c97a74d9310e50'],31,30,61,4,,,
3557d8a306ce599f454cb50dc4615c4da35e27e7,"add OptionChoice and Option.choices for AV_OPT_TYPE_CONST options, expose filter descriptor and options, add FiltersIter",Tadas Dailyda,tadas@dailyda.com,Tadas Dailyda,tadas@dailyda.com,2017-06-21 14:55:25+03:00,-10800,2017-06-21 14:55:25+03:00,-10800,True,False,"['descriptor.pyx', '__init__.py', 'filter.pxd', 'filter.pyx', 'option.pxd', 'option.pyx', 'avfilter.pxd', 'avutil.pxd']",['be01c1e86542c34117d2491467bda506c5a99394'],14,129,143,8,,,
749c9d9227a1036b7f52e8fc872818a90e62ba1f,Check for AV_OPT_TYPE_BOOL.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-21 09:45:46-04:00,14400,2017-06-21 09:45:46-04:00,14400,True,False,"['avutil.pyav.h', 'setup.py']",['3557d8a306ce599f454cb50dc4615c4da35e27e7'],1,28,29,2,0.0,0.0,1.0
f2474ae34bb1a3ddbf0f8e26a770dbe159e6f347,"Fix typo and unify names of sets of names.

As per discussion in #243.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-21 10:16:10-04:00,14400,2017-06-21 10:16:10-04:00,14400,True,False,"['__init__.py', 'codec.pyx', 'format.pyx', 'test_codec.py', 'test_containerformat.py']",['749c9d9227a1036b7f52e8fc872818a90e62ba1f'],12,17,29,5,1.0,1.0,1.0
fe0572a0ab278312cf2ce5235ba80f98c52405ce,"cleanup option types, filters_available for listing filters",Tadas Dailyda,tadas@dailyda.com,Mike Boers,github@mikeboers.com,2017-06-21 17:46:52+03:00,-10800,2017-06-22 10:05:42-04:00,14400,True,False,"['__init__.py', 'filter.pxd', 'filter.pyx', 'option.pyx', 'avutil.pxd']",['f2474ae34bb1a3ddbf0f8e26a770dbe159e6f347'],38,32,70,5,,,
52bab7f059078848b58868a9f3716ed7d32b0ff8,add Option.offset,Tadas Dailyda,tadas@dailyda.com,Mike Boers,github@mikeboers.com,2017-06-22 16:39:28+03:00,-10800,2017-06-22 10:05:48-04:00,14400,True,False,"['option.pyx', 'avutil.pxd']",['fe0572a0ab278312cf2ce5235ba80f98c52405ce'],1,9,10,2,,,
179e815650181cc4aca131aa6788ad0923ab955f,"Rename a couple properties to be more ""Pythonic"".",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 10:24:56-04:00,14400,2017-06-22 10:24:56-04:00,14400,True,False,['option.pyx'],['52bab7f059078848b58868a9f3716ed7d32b0ff8'],7,5,12,1,,,
64ccf3b4d84c479dc7c97a6f3710cd53108b49fd,Really basic Option API test.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 10:38:25-04:00,14400,2017-06-22 10:38:25-04:00,14400,True,False,"['.editorconfig', '__init__.py', 'option.pyx', 'test_options.py']",['179e815650181cc4aca131aa6788ad0923ab955f'],4,50,54,4,1.0,1.0,1.0
b3cda01d77215729e036b545eca71e4eb8877750,Add a basic .editorconfig,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-21 10:55:21-04:00,14400,2017-06-22 10:39:40-04:00,14400,True,False,['.gitignore'],['783009a28512c5f5fe549221dcc5563101932f4e'],2,4,6,1,,,
9af43468e34c270784a35dfc19eb3c9f20f34abd,WIP on some issues and scratch.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 10:18:17-04:00,14400,2017-06-22 10:40:10-04:00,14400,True,False,"['go.py', 'walkprobe.py']",['b3cda01d77215729e036b545eca71e4eb8877750'],0,69,69,2,0.36666666666666664,0.36666666666666664,1.0
886931511741b6b3df49e098cfe238aeb502d1cd,"Document StreamContainer.get, and refactor to be more flexible.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 14:16:44-04:00,14400,2017-06-22 14:16:44-04:00,14400,True,False,['streams.pyx'],['9af43468e34c270784a35dfc19eb3c9f20f34abd'],20,57,77,1,,,
056565dd8e6df765156e24e65a24b4d1f3da3689,Reject floating time to Container.seek and Stream.seek.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 14:17:32-04:00,14400,2017-06-22 14:17:32-04:00,14400,True,False,"['input.pyx', 'stream.pyx']",['886931511741b6b3df49e098cfe238aeb502d1cd'],8,9,17,2,,,
227596224d02978766a3187d6be07cf50e379cfe,Document stream selection API.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 14:54:52-04:00,14400,2017-06-22 14:55:15-04:00,14400,True,False,"['input.pyx', 'streams.pyx', 'api.rst', 'test_seek.py']",['056565dd8e6df765156e24e65a24b4d1f3da3689'],34,120,154,4,1.0,1.0,1.0
c2c60f7a2df321137903e1aa7ee4743f69d23566,Disable fast_finish in Travis due to too many emails.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 14:56:35-04:00,14400,2017-06-22 14:56:35-04:00,14400,True,False,['.travis.yml'],['227596224d02978766a3187d6be07cf50e379cfe'],5,6,11,1,,,
e497360d3bf8be1318dd23bcd09d2ad152fb0d10,We can't assert the offset of options.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 15:00:06-04:00,14400,2017-06-22 15:00:06-04:00,14400,True,False,['test_options.py'],['c2c60f7a2df321137903e1aa7ee4743f69d23566'],3,2,5,1,0.0,0.0,0.0
5e2b6b25de14617abff37930cf02a7770913e6cd,Point Stream.seek docs at InputContainer.seek docs.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 15:07:56-04:00,14400,2017-06-22 15:07:56-04:00,14400,True,False,['stream.pyx'],['e497360d3bf8be1318dd23bcd09d2ad152fb0d10'],5,7,12,1,,,
e4aa0739407950ad92dfc796c27abe1f042ff32b,Split up the API reference into multiple pages.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 15:24:02-04:00,14400,2017-06-22 15:24:02-04:00,14400,True,False,"['input.pyx', 'api.rst', 'audio.rst', 'codec.rst', 'container.rst', 'frame.rst', 'index.rst', 'packet.rst', 'plane.rst', 'stream.rst', 'subtitles.rst', 'toplevel.rst', 'utils.rst', 'video.rst', 'index.rst']",['5e2b6b25de14617abff37930cf02a7770913e6cd'],255,286,541,15,,,
69602b6d24738d7b1b17976e9adcc4934b6ebf72,Fix the seek streams API.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 16:49:15-04:00,14400,2017-06-22 16:49:15-04:00,14400,True,False,"['core.pxd', 'core.pyx', 'input.pyx']",['e4aa0739407950ad92dfc796c27abe1f042ff32b'],11,13,24,3,,,
57fb8ce6a4e698874da69d9bea332a3150fc4370,Fix the StreamContainer[index] API.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 16:49:33-04:00,14400,2017-06-22 16:49:33-04:00,14400,True,False,['streams.pyx'],['69602b6d24738d7b1b17976e9adcc4934b6ebf72'],1,4,5,1,,,
cf1cd4bfa6e916744949419b43c29e91a6591e3d,First pass at an auto-linter.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 16:49:45-04:00,14400,2017-06-22 16:49:45-04:00,14400,True,False,"['autolint.py', 'requirements.txt']",['57fb8ce6a4e698874da69d9bea332a3150fc4370'],0,196,196,2,0.21978021978021978,0.10989010989010989,1.0
eb9d9fe336a6739178108ccd59c8a55ad2c50d09,Move the autolinter.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 16:59:42-04:00,14400,2017-06-22 17:02:32-04:00,14400,True,False,['autolint'],['cf1cd4bfa6e916744949419b43c29e91a6591e3d'],0,2,2,1,,,
5550a014a46f244e055a88e5f8ed3a3ca4f57fed,First application of `autolint --editorconfig`.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 16:55:18-04:00,14400,2017-06-22 17:04:57-04:00,14400,True,False,"['codeccontext.pxd', 'codeccontext.pyx', 'fifo.pxd', 'fifo.pyx', 'format.pxd', 'format.pyx', 'frame.pxd', 'frame.pyx', 'layout.pxd', 'layout.pyx', 'plane.pyx', 'resampler.pyx', 'stream.pxd', 'buffer.pyx', 'bytesource.pxd', 'bytesource.pyx', 'codec.pxd', 'codec.pyx', 'context.pxd', 'context.pyx', 'core.pxd', 'input.pxd', 'output.pyx', 'pyio.pyx', 'descriptor.pxd', 'dictionary.pxd', 'dictionary.pyx', 'context.pxd', 'context.pyx', 'graph.pxd', 'graph.pyx', 'link.pxd', 'link.pyx', 'pad.pyx', 'format.pxd', 'format.pyx', 'frame.pxd', 'frame.pyx', 'logging.pxd', 'logging.pyx', 'option.pxd', 'packet.pxd', 'packet.pyx', 'plane.pxd', 'plane.pyx', 'stream.pxd', 'stream.pyx', 'codeccontext.pyx', 'subtitle.pxd', 'subtitle.pyx', 'utils.pyx', 'codeccontext.pxd', 'codeccontext.pyx', 'format.pxd', 'format.pyx', 'frame.pxd', 'frame.pyx', 'plane.pxd', 'plane.pyx', 'stream.pxd', 'stream.pyx', 'about.rst', 'audio.rst', 'index.rst', 'stream.rst', 'conf.py', 'examples.rst', 'includes.py', 'index.rst', 'installation.rst', '__init__.py', 'audio.py', 'audio_player.py', 'average.py', 'decode.py', 'encode.py', 'filmstrip.py', 'frame_seek_example.py', 'gen_rgb_rotate.py', 'glproxy.py', 'merge-filmstrip.py', 'resource_use.py', 'save_subtitles.py', 'second_seek_example.py', 'show_frames_opencv.py', 'avcodec.pxd', 'avdevice.pxd', 'avfiltergraph.pxd', 'buffersrc.pxd', 'avformat.pxd', 'dict.pxd', 'samplefmt.pxd', 'swresample.pxd', 'swscale.pxd', 'remux.py', 'test.pxd', 'walkprobe.py', 'common.py', 'test_audiofifo.py', 'test_audiolayout.py', 'test_audioresampler.py', 'test_codec_context.py', 'test_decode.py', 'test_dictionary.py', 'test_encode.py', 'test_errors.py', 'test_file_probing.py', 'test_filters.py', 'test_python_io.py', 'test_seek.py', 'test_subtitles.py', 'test_videoformat.py', 'test_videoframe.py']",['eb9d9fe336a6739178108ccd59c8a55ad2c50d09'],819,711,1530,113,,,
c8ff96c7ee37324e0b6d2bbfd17c121224da08cb,First application of `autolint --pep8`.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 17:00:11-04:00,14400,2017-06-22 17:05:03-04:00,14400,True,False,"['_core.pyx', 'conf.py', 'audio.py', 'decode.py', 'frame_seek_example.py', 'player.py', 'second_seek_example.py', 'avcodec.pxd', 'test_codec_context.py', 'test_doctests.py', 'test_seek.py']",['5550a014a46f244e055a88e5f8ed3a3ca4f57fed'],64,65,129,11,,,
645ed3b22e11b9c3e8e2efc6c0d717ecc1c2766a,First application of `autolint --future`.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 17:01:44-04:00,14400,2017-06-22 17:05:04-04:00,14400,True,False,"['conf.py', 'audio.py', 'audio_player.py', 'average.py', 'decode.py', 'encode.py', 'encode_frames.py', 'experimental.py', 'filmstrip.py', 'frame_seek_example.py', 'merge-filmstrip.py', 'player.py', 'resource_use.py', 'save_subtitles.py', 'second_seek_example.py', 'cctx_decode.py', 'cctx_encode.py', 'graph.py', 'memleak.py', 'parse.py', 'remux.py', 'walkprobe.py', 'test_codec_context.py']",['c8ff96c7ee37324e0b6d2bbfd17c121224da08cb'],150,173,323,23,,,
ab5fc9c663e15c809443e49a6a12f06063d027e3,Fix typo on build-steps,Arthur Barros,arthbarros@gmail.com,Mike Boers,github@mikeboers.com,2017-06-21 14:42:00-03:00,10800,2017-06-22 17:22:44-04:00,14400,True,False,['installation.rst'],['645ed3b22e11b9c3e8e2efc6c0d717ecc1c2766a'],1,1,2,1,,,
5f3ffb486644454d8f89faecc5602da46e3eae05,"A bunch of meta, and a bad fix for a bad test.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-22 18:47:34-04:00,14400,2017-06-22 18:47:34-04:00,14400,True,False,"['CHANGELOG.rst', 'HACKING.rst', 'descriptor.pxd', 'test_options.py']",['ab5fc9c663e15c809443e49a6a12f06063d027e3'],3,20,23,4,0.0,0.0,0.0
6752f13a042c59e3bdfdcb1b20e9f444e45a5ea3,more filter info in API,Tadas Dailyda,tadas@dailyda.com,Tadas Dailyda,tadas@dailyda.com,2017-06-25 21:04:50+03:00,-10800,2017-06-25 21:04:50+03:00,-10800,True,False,"['filter.pyx', 'avfilter.pxd']",['5f3ffb486644454d8f89faecc5602da46e3eae05'],0,15,15,2,,,
18b6427acc14e960b19012e19a1e483a90c52114,fix Graph._get_unique_name,Tadas Dailyda,tadas@dailyda.com,Tadas Dailyda,tadas@dailyda.com,2017-06-26 16:28:28+03:00,-10800,2017-06-26 16:28:28+03:00,-10800,True,False,['graph.pyx'],['6752f13a042c59e3bdfdcb1b20e9f444e45a5ea3'],1,1,2,1,,,
52916bc16c552ba7d791aee07472fc3164c9777f,Option.min/max should be ints for opt types using int values,Tadas Dailyda,tadas@dailyda.com,Tadas Dailyda,tadas@dailyda.com,2017-06-26 18:06:31+03:00,-10800,2017-06-26 18:06:31+03:00,-10800,True,False,['option.pyx'],['18b6427acc14e960b19012e19a1e483a90c52114'],6,19,25,1,,,
e7835a258dfa34b89b3a1ee6852455c80b79387b,add OptionChoice.is_default,Tadas Dailyda,tadas@dailyda.com,Tadas Dailyda,tadas@dailyda.com,2017-06-27 16:54:24+03:00,-10800,2017-06-27 16:54:24+03:00,-10800,True,False,"['descriptor.pyx', 'option.pxd', 'option.pyx']",['52916bc16c552ba7d791aee07472fc3164c9777f'],3,9,12,3,,,
acfcb7f63ef6f39dfaf0a46e442284e40e878059,add descriptor property to access generic AVCodecContext options,Tadas Dailyda,tadas@dailyda.com,Tadas Dailyda,tadas@dailyda.com,2017-07-03 17:47:37+03:00,-10800,2017-07-03 17:47:37+03:00,-10800,True,False,"['context.pxd', 'context.pyx', 'avcodec.pxd']",['e7835a258dfa34b89b3a1ee6852455c80b79387b'],0,12,12,3,,,
265df16e915c10948fcfb2d935d0577455455fa6,"add Option flags, move flag_in_bitfield to utils for better reusability",Tadas Dailyda,tadas@dailyda.com,Tadas Dailyda,tadas@dailyda.com,2017-07-03 21:57:19+03:00,-10800,2017-07-03 21:57:19+03:00,-10800,True,False,"['codec.pyx', 'option.pxd', 'option.pyx', 'utils.pxd', 'utils.pyx', 'avutil.pxd']",['acfcb7f63ef6f39dfaf0a46e442284e40e878059'],31,64,95,6,,,
d05eed3a064b0cac8fb9b8c9a55bb4f1723d6c84,"add generic descriptors (codec_descriptor, filter_descriptor and format_descriptor)",Tadas Dailyda,tadas@dailyda.com,Tadas Dailyda,tadas@dailyda.com,2017-07-03 22:05:18+03:00,-10800,2017-07-03 22:05:18+03:00,-10800,True,False,"['__init__.py', 'codec.pyx', 'context.pxd', 'context.pyx', 'descriptor.pxd', '__init__.py', 'filter.pyx', 'format.pyx', 'avcodec.pxd', 'avfilter.pxd', 'avformat.pxd']",['265df16e915c10948fcfb2d935d0577455455fa6'],15,19,34,11,,,
d7de8c22d6d0481348dd5c4f17a764acef363163,use cpdef'ed enums for flag constants,Tadas Dailyda,tadas@dailyda.com,Tadas Dailyda,tadas@dailyda.com,2017-07-06 19:20:08+03:00,-10800,2017-07-06 19:20:08+03:00,-10800,True,False,"['__init__.py', 'filter.pyx', 'option.pyx', 'avcodec.pxd', 'avfilter.pxd', 'avutil.pxd']",['d05eed3a064b0cac8fb9b8c9a55bb4f1723d6c84'],76,109,185,6,,,
0c4a6bde733ea5effd46b5ea6b4f25add193aa77,"Support specifying metadata character encoding

For writing, and for reading on Python 3, the default codec changes
from ASCII to UTF-8. In Python 2, the default behavior remains to not
perform decoding on reading, but this can be overridden by explicitly
specifying an encoding. This change applies to both container and
stream metadata.",Miles Kaufmann,mkfmnn@gmail.com,Miles Kaufmann,mkfmnn@gmail.com,2017-07-09 12:48:38-07:00,25200,2017-07-09 13:26:21-07:00,25200,True,False,"['core.pxd', 'core.pyx', 'input.pyx', 'output.pyx', 'stream.pyx', 'utils.pxd', 'utils.pyx']",['5f3ffb486644454d8f89faecc5602da46e3eae05'],15,51,66,7,,,
95f5bb72d69fe8096cebb00d5b54cb7c1aca0661,"Fix type of seek offset.

Fixes #251.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-07-10 20:44:44-04:00,14400,2017-07-10 20:44:44-04:00,14400,True,False,"['core.pyx', 'test_seek.py']",['5f3ffb486644454d8f89faecc5602da46e3eae05'],1,7,8,2,1.0,1.0,1.0
1957118a3c7fc13a3771aaf6a0f2355d15c31be2,"[=] fix segfault resulting from incorrect FFMPEG structures deallocation
[=] fix some tests to be runnable under python3
[+] add test for correct (segfault free) opening of file with random data",rutsh,Eugene.Krokhalev@gmail.com,rutsh,Eugene.Krokhalev@gmail.com,2017-07-13 11:06:06+03:00,-10800,2017-07-13 11:06:06+03:00,-10800,True,False,"['core.pxd', 'core.pyx', 'avformat.pxd', 'test_codec_context.py', 'test_encode.py', 'test_options.py', 'test_random_input.py']",['95f5bb72d69fe8096cebb00d5b54cb7c1aca0661'],7,34,41,7,1.0,1.0,1.0
3c69bdd0ccdf820e5c130052cb6992a5544c983d,fix ContainerProxy.seek behaviour for integers more then 2**31 with 32bit CPython,rutsh,Eugene.Krokhalev@gmail.com,rutsh,Eugene.Krokhalev@gmail.com,2017-07-13 12:23:16+03:00,-10800,2017-07-13 12:23:16+03:00,-10800,True,False,['core.pyx'],['1957118a3c7fc13a3771aaf6a0f2355d15c31be2'],1,1,2,1,,,
af35e334562c5222cea7f53a3612a54a9e264ecc,"Expose frame corruption check.

`int AVFrame::flags` is a collection of `AV_FRAME_FLAGS`

Added property `is_corrupt` to class Frame that checks
if `AV_FRAME_FLAG_CORRUPT` is set which would then indicate that:

```
The frame data may be corrupted, e.g.
due to decoding errors.
```",Karl Litterfeldt,kalle.litterfeldt@gmail.com,Karl Litterfeldt,kalle.litterfeldt@gmail.com,2017-08-04 23:35:00+02:00,-7200,2017-08-04 23:35:00+02:00,-7200,True,False,"['frame.pyx', 'avcodec.pxd']",['95f5bb72d69fe8096cebb00d5b54cb7c1aca0661'],1,6,7,2,,,
2c0fabc01ec2ddd9f801d4ff8bc8d36407d06d66,Explicitly name the metadata encoding/errors attributes as being for metadata.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-08-06 10:36:27-04:00,14400,2017-08-06 10:36:27-04:00,14400,True,False,"['core.pxd', 'core.pyx', 'input.pyx', 'output.pyx', 'stream.pyx']",['0c4a6bde733ea5effd46b5ea6b4f25add193aa77'],23,27,50,5,,,
18910b6cfa94a88763d2295c4b4644ed099ef382,Fix the one broken test due to OptionType enum.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-08-07 13:01:56-04:00,14400,2017-08-07 13:01:56-04:00,14400,True,False,['test_options.py'],['d7de8c22d6d0481348dd5c4f17a764acef363163'],3,3,6,1,,,
0b6a15cd4d9bc5939295dc4d087b733e27df759d,s/OptionTypes/OptionType/,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-08-07 13:19:43-04:00,14400,2017-08-07 13:19:43-04:00,14400,True,False,"['option.pxd', 'option.pyx', 'test_options.py']",['18910b6cfa94a88763d2295c4b4644ed099ef382'],5,5,10,3,,,
6ea8c0787601eee849841af70c58ddc3edac2c21,Document container __dealloc__ a bit more.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-08-07 13:55:35-04:00,14400,2017-08-07 13:55:42-04:00,14400,True,False,"['core.pxd', 'core.pyx']",['3c69bdd0ccdf820e5c130052cb6992a5544c983d'],10,21,31,2,,,
0c5a63bb0fe270a088c276ea42fbf3d812100679,"Test ""common"" import should always be relative.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-08-07 13:57:07-04:00,14400,2017-08-07 13:57:07-04:00,14400,True,False,"['test_codec_context.py', 'test_options.py', 'test_random_input.py']",['6ea8c0787601eee849841af70c58ddc3edac2c21'],13,4,17,3,,,
f0a0cc3a86230be9ccab0edcd6bb28e1abb51639,"Fix Container property initialization order

metadata_encoding needs to be set before the ContainerProxy is
instantiated, because it's read in the proxy's initializer.

Fixes mikeboers/PyAV#265",Miles Kaufmann,mkfmnn@gmail.com,Miles Kaufmann,mkfmnn@gmail.com,2017-08-17 21:19:47-07:00,25200,2017-08-17 21:20:03-07:00,25200,True,False,['core.pyx'],['770ded84147217d749c6aa8f6c0747b29fcfdcd4'],1,1,2,1,,,
99db81c9f87ff17e6912890b0a8130f04d89296e,"activate.sh,build-deps,etc. work with Python3 (#248).",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-08-27 13:22:16-04:00,14400,2017-08-27 13:23:02-04:00,14400,True,False,"['Makefile', 'activate.sh', 'build']",['f0a0cc3a86230be9ccab0edcd6bb28e1abb51639'],13,11,24,3,,,
73214b3fb623f56aeeb5d0913e628e7de1a3b4d0,Expose CodecContext.skip_frame (#259).,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-08-27 14:01:54-04:00,14400,2017-08-27 14:01:54-04:00,14400,True,False,"['context.pyx', 'avcodec.pxd', 'test_codec_context.py']",['99db81c9f87ff17e6912890b0a8130f04d89296e'],0,38,38,3,1.0,1.0,1.0
6eb18bd5d042b6ef4a9a60c6ee955457fdae8345,Enums have item access.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-08-27 16:51:58-04:00,14400,2017-08-27 16:51:58-04:00,14400,True,False,['context.pyx'],['73214b3fb623f56aeeb5d0913e628e7de1a3b4d0'],1,1,2,1,,,
61379bf5f789f43cfb46cb5b016ad3eba95219a9,"Update some metadata, and include contributors in docs.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-08-27 17:01:49-04:00,14400,2017-08-27 17:21:13-04:00,14400,True,False,"['AUTHORS.py', 'AUTHORS.txt', 'CHANGELOG.rst', 'contributors.rst', 'index.rst']",['6eb18bd5d042b6ef4a9a60c6ee955457fdae8345'],19,137,156,5,,,
72d473778bf49947b07a435bd230a396b47ae67e,Fix Numpy example to work with new API and Python2.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-08-27 22:25:06-04:00,14400,2017-08-27 22:25:06-04:00,14400,True,False,['examples.rst'],['61379bf5f789f43cfb46cb5b016ad3eba95219a9'],22,20,42,1,,,
7d67c1aa6d3a3876348e4ac8fe6684d0455e9537,"Re-arrange the docs a little, and add a few classes to the reference.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-08-27 22:25:59-04:00,14400,2017-08-27 22:25:59-04:00,14400,True,False,"['CHANGELOG.rst', 'context.pyx', 'api.rst', '_index.rst', 'buffer.rst', 'filter.rst', 'video.rst', 'conf.py', '_index.rst', 'generating_from_numpy.rst', 'index.rst']",['72d473778bf49947b07a435bd230a396b47ae67e'],17,104,121,11,,,
8516a84f17006329e295cebbcc6a5adaad6a8f15,Random sandbox file from months ago.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-03-20 20:29:53-04:00,14400,2018-03-20 20:29:53-04:00,14400,True,False,['seekmany.py'],['7d67c1aa6d3a3876348e4ac8fe6684d0455e9537'],0,50,50,1,1.0,1.0,1.0
83bf75bc801f74763990247e122eec5589ac7785,Release v0.4.0.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-03-20 20:31:41-04:00,14400,2018-03-20 20:31:41-04:00,14400,True,False,"['CHANGELOG.rst', 'setup.py']",['8516a84f17006329e295cebbcc6a5adaad6a8f15'],3,3,6,2,,,
adffd6afa095ad47c7eec3d48e962c7b6d1933db,Bump to development version.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-03-20 20:56:56-04:00,14400,2018-03-20 20:56:56-04:00,14400,True,False,['setup.py'],['83bf75bc801f74763990247e122eec5589ac7785'],1,1,2,1,,,
baed360499908800e54a5d77d968ecbeb28acbef,"Frame: Refined corruption detection.

Found that previous code was incomplete and did not properly [detect frame corruption during decoding](http://lists.ffmpeg.org/pipermail/ffmpeg-user/2017-June/036315.html)

```
> i'm decoding video stream using ffmpeg, what i want to do is to check if
> the picture is broken when a frame is decoded by
> avcodec_decode_video2(). i call av_frame_get_decode_error_flags() on
> decoded frame to get the errflags, but it returned 0 all the time. am i
> calling the right function to get what i want? what's the right way to
> check integrity of a decoded picture?

You need to check

- return value of avcodec_decode_video2 (or avcodec_send_packet/receive_frame)
- if you have a frame, then check
      - frame->decode_error_flags (any nonzero value means error)
      - frame->flags & AV_FRAME_FLAG_CORRUPT (some codecs set this and not the decode_error_flags)

I am afraid not all codecs properly report all failed decodings, but
patches are welcome, if you find a decode error without signalling it in
at least one way of the above three...
```

[int AVFrame::decode_error_flags reference](https://ffmpeg.org/doxygen/2.7/structAVFrame.html#a3dd46fd353a405f6e9b91c11d9c5b736)",Karl Litterfeldt,kalle.litterfeldt@gmail.com,Mike Boers,github@mikeboers.com,2018-03-15 12:47:18+01:00,-3600,2018-03-20 20:57:13-04:00,14400,True,False,"['frame.pyx', 'avcodec.pxd']",['adffd6afa095ad47c7eec3d48e962c7b6d1933db'],1,2,3,2,,,
81ed1f4d58be76d829064a3b9871405e29a90645,Update the changelog due to #291.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-03-20 21:00:09-04:00,14400,2018-03-20 21:00:09-04:00,14400,True,False,"['AUTHORS.py', 'AUTHORS.txt', 'CHANGELOG.rst']",['baed360499908800e54a5d77d968ecbeb28acbef'],3,11,14,3,,,
773e73383ecdc02d32b1d55c83245e93c5e08246,Fix some compile-warnings,Ulrik Mikaelsson,ulrik.mikaelsson@magine.com,Mike Boers,github@mikeboers.com,2018-02-13 09:39:46+01:00,-3600,2018-03-23 10:05:08-04:00,14400,True,False,['swresample.pyav.h'],['cb15f8e591879bb6c4471bea146420b767741ce0'],6,6,12,1,,,
44f4b882610c89f00879891a0e88423d3e4e5daa,Get rid of some const-warnings,Ulrik Mikaelsson,ulrik.mikaelsson@magine.com,Mike Boers,github@mikeboers.com,2018-02-13 10:07:19+01:00,-3600,2018-03-23 10:05:16-04:00,14400,True,False,"['descriptor.pxd', 'descriptor.pyx', 'filter.pxd', 'filter.pyx', 'pad.pxd', 'pad.pyx']",['773e73383ecdc02d32b1d55c83245e93c5e08246'],10,10,20,6,,,
5af2f998fbdb25192d189e2c5ba97da237aa702d,AudioFrame.to_nd_array: add FLTP-support,Ulrik Mikaelsson,ulrik.mikaelsson@magine.com,Mike Boers,github@mikeboers.com,2018-02-26 15:44:01+01:00,-3600,2018-03-23 10:06:32-04:00,14400,True,False,['frame.pyx'],['21cb64f28136fbb7491a6cc1e3b1d0ab4749d82c'],5,6,11,1,,,
14e47795f869ea934917c7cd208c457a3d8422c3,Update the changelog due to #288.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-03-20 21:02:51-04:00,14400,2018-03-23 10:06:40-04:00,14400,True,False,"['AUTHORS.txt', 'CHANGELOG.rst']",['5af2f998fbdb25192d189e2c5ba97da237aa702d'],0,5,5,2,,,
6362555cde4a3ffa30d04fba94c9278a92f4a1dc,"For decoding raw packets without streams some codecs need a few
extradata (like Huffman tables).
In this commit I provided two functions, one for extracting these data
and the other for setting them when we want to decode without stream.",Alireza Davoudi,davoudialireza@gmail.com,Mike Boers,github@mikeboers.com,2018-02-25 13:49:30+03:30,-12600,2018-03-23 10:07:23-04:00,14400,True,False,"['context.pyx', 'avcodec.pxd']",['76c61416815cb90b228ff0d77148ae7b1c76f9c8'],1,26,27,2,,,
6a7a17312fbffbb19c3b92437ed22109ecf4a876,"Update context.pyx

For decoding raw packets without streams some codecs need a few
extradata (like Huffman tables).
In this commit I provided two functions, one for extracting these data
and the other for setting them when we want to decode without stream.",Alireza Davoudi,a.davoudi@aut.ac.ir,Mike Boers,github@mikeboers.com,2018-02-25 14:07:31+03:30,-12600,2018-03-23 10:07:32-04:00,14400,True,False,['context.pyx'],['6362555cde4a3ffa30d04fba94c9278a92f4a1dc'],4,1,5,1,,,
8ff46c346fd92b368807a4bf047e6c49da3b57a5,"Hold onto the source of the extradata so we can use it directly.

Now we don't have to malloc the space, and it won't go away.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-03-20 21:13:05-04:00,14400,2018-03-23 10:07:39-04:00,14400,True,False,"['context.pxd', 'context.pyx']",['6a7a17312fbffbb19c3b92437ed22109ecf4a876'],5,7,12,2,,,
986c7b9ee6c3c12c47e64b1f655d7465e889b8a4,Update changelog due to #287.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-03-20 21:21:54-04:00,14400,2018-03-23 10:07:47-04:00,14400,True,False,"['AUTHORS.py', 'AUTHORS.txt', 'CHANGELOG.rst']",['8ff46c346fd92b368807a4bf047e6c49da3b57a5'],2,11,13,3,,,
42b2b54c27d306704445f44673b83ff8ec47377d,"A script to cleanup remote branches.

This helps when you have a few dozen remotes like I do.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-09 15:52:22-04:00,14400,2018-04-09 15:52:22-04:00,14400,True,False,['clean-remote-branches'],['4b01b63b2f955e01ca00c587d9a4ff3f97ed0046'],0,52,52,1,,,
b5e91d118ea4def0aaa0ec08de049b7fe148b7ec,Use requested Python to make the venv.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-10 14:12:48-04:00,14400,2018-04-10 14:17:14-04:00,14400,True,False,['activate.sh'],['42b2b54c27d306704445f44673b83ff8ec47377d'],1,1,2,1,,,
eb2d3e5aba42a29cf4d73125e5e87809d333366e,"Replace ffmpeg on Travis with its dependencies, since we build our own anyways.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-03-20 21:37:38-04:00,14400,2018-04-10 14:35:04-04:00,14400,True,False,['.travis.yml'],['b5e91d118ea4def0aaa0ec08de049b7fe148b7ec'],3,21,24,1,,,
a1f73eb9942b1d8868c70415906b994930433b20,"Add FFmpeg 3.3 and 3.4, and promote PyPy to expected pass.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-03-21 07:17:07-04:00,14400,2018-04-10 14:35:04-04:00,14400,True,False,['.travis.yml'],['eb2d3e5aba42a29cf4d73125e5e87809d333366e'],8,8,16,1,,,
65df668c076724c4616b803c813ebebadc962019,"Allow latest FFmpeg to fail.

Everything else in here is just re-arranging the file.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-03-23 10:32:37-04:00,14400,2018-04-10 14:35:04-04:00,14400,True,False,['.travis.yml'],['a1f73eb9942b1d8868c70415906b994930433b20'],21,24,45,1,,,
d4a7eb8bce3ae765faf1e1d439ccce13c1bb507d,Maybe Travis is happier on macOS if we don't specify the Python version...,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-03-23 10:39:42-04:00,14400,2018-04-10 14:35:04-04:00,14400,True,False,['.travis.yml'],['65df668c076724c4616b803c813ebebadc962019'],2,1,3,1,,,
ee2b9222b46dbadbb533ffb6addab854149bc418,Work around Cython bug (again).,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-10 14:14:38-04:00,14400,2018-04-10 14:35:59-04:00,14400,True,False,['input.pyx'],['eff3b2e1fbe6241f3e6880ecff6ee3db1f2a1aca'],3,5,8,1,,,
f74b6b696652a17ea35b079b8611767806d1ed71,Example for decoding in multiple threads.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-09 15:54:11-04:00,14400,2018-04-10 14:35:59-04:00,14400,True,False,['decode_threads.py'],['ee2b9222b46dbadbb533ffb6addab854149bc418'],0,25,25,1,1.0,1.0,1.0
c7eefb51a516273363ee1bd4e68381b343c0dbd2,Release the GIL around send/recv packets/frames.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-09 20:59:01-04:00,14400,2018-04-10 14:35:59-04:00,14400,True,False,['context.pyx'],['f74b6b696652a17ea35b079b8611767806d1ed71'],11,21,32,1,,,
c90a99d204d13755b6fc508408a27a444d3c07da,"Don't eagerly open stream's codecs.

Now the user could set threading attributes.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-09 21:14:21-04:00,14400,2018-04-10 14:35:59-04:00,14400,True,False,['stream.pyx'],['c7eefb51a516273363ee1bd4e68381b343c0dbd2'],7,0,7,1,,,
918536c57bd0487f6685b404f7f96e5d690169ac,Expose thread_type.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-09 21:14:33-04:00,14400,2018-04-10 14:35:59-04:00,14400,True,False,"['context.pyx', 'avcodec.pxd']",['c90a99d204d13755b6fc508408a27a444d3c07da'],1,12,13,2,,,
9da166f1455e072c5dd495ce08f395c5dc58b42e,Set reasonable threading defaults.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-09 21:14:41-04:00,14400,2018-04-10 14:36:00-04:00,14400,True,False,['stream.pyx'],['918536c57bd0487f6685b404f7f96e5d690169ac'],0,4,4,1,,,
bb0dfaba8d3b3b1c327dbdde0b316d99be41e397,Set more reasonable threading defaults.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-10 14:25:22-04:00,14400,2018-04-10 14:36:00-04:00,14400,True,False,"['context.pyx', 'stream.pyx', 'decode_threads.py']",['9da166f1455e072c5dd495ce08f395c5dc58b42e'],7,8,15,3,1.0,1.0,1.0
f6fe28b2a6d8ac619ab9803b5dcf2872f2fb8b24,Quickly expose `Container.dump_format()`.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-10 14:14:58-04:00,14400,2018-05-09 08:38:49-04:00,14400,True,False,"['core.pyx', 'logging.pyx', 'dump_format.py']",['99badbda585f06dc827d8b383adf18ded1880c3e'],0,19,19,3,,,
55e1d9e8a93f4f8e6d27ec16ed4140c985029294,Remove lots of C-API from logging.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-11 20:04:10-04:00,14400,2018-05-09 08:38:49-04:00,14400,True,False,"['logging.pyx', 'utils.pyx']",['f6fe28b2a6d8ac619ab9803b5dcf2872f2fb8b24'],180,98,278,2,,,
ad759f8bb0dd4adf180dbba58d7161034be717d1,Log capturing.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-11 22:42:53-04:00,14400,2018-05-09 08:38:49-04:00,14400,True,False,"['core.pyx', 'logging.pyx', 'dump_format.py', 'test_logging.py']",['55e1d9e8a93f4f8e6d27ec16ed4140c985029294'],41,89,130,4,1.0,1.0,1.0
2ee96840d6d187fc07d0591bdfd35dac5ee0b09b,"Test logs, and expose more to the user.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-12 16:14:27-04:00,14400,2018-05-09 08:38:49-04:00,14400,True,False,"['logging.pxd', 'logging.pyx', 'utils.pxd', 'utils.pyx', 'test_logging.py']",['ad759f8bb0dd4adf180dbba58d7161034be717d1'],75,192,267,5,0.6521739130434783,1.0,1.0
42516a5ace0a6aec2177bf6478b205751b11b4a2,python setup.py reflect --force --debug,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-26 15:36:14-04:00,14400,2018-05-09 08:39:30-04:00,14400,True,False,['setup.py'],['7f2d4f9d6c993e5c50b6412720c2cee4d7c9f4cf'],10,22,32,1,0.2,0.2,1.0
2fada05812482168f24babd2a2f9360b47f0ce02,Manually parse CFLAGS and LDFLAGS.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-26 15:36:26-04:00,14400,2018-05-09 08:39:30-04:00,14400,True,False,['setup.py'],['42516a5ace0a6aec2177bf6478b205751b11b4a2'],14,40,54,1,1.0,1.0,1.0
5310cf26a203904c46ff227a4046dd8ee0dfb4ff,Also pull in rpath.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2017-06-26 15:50:47-04:00,14400,2018-05-09 08:39:30-04:00,14400,True,False,['setup.py'],['2fada05812482168f24babd2a2f9360b47f0ce02'],1,2,3,1,,,
f5a8a31389f40cf9fc31982e483dbff314c8a96f,Pass runtime_library_dirs to compile_check.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-04-20 16:40:59-04:00,14400,2018-05-09 08:39:30-04:00,14400,True,False,['setup.py'],['5310cf26a203904c46ff227a4046dd8ee0dfb4ff'],2,4,6,1,0.0,0.0,0.5
31bc3abfd974d4975bc25300f135aff25963cc8b,Default to FFmpeg 4.0.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-06 22:45:10-04:00,14400,2018-05-09 08:39:57-04:00,14400,True,False,['activate.sh'],['faedf9160a0921ab25c9b94c71112e3d190730b7'],1,1,2,1,,,
2031dd99a182ae4a2e68bff10576f65c4a800cc1,Remove AVFrac.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-06 22:44:22-04:00,14400,2018-05-09 08:39:57-04:00,14400,True,False,"['utils.pxd', 'utils.pyx', 'avformat.pxd']",['31bc3abfd974d4975bc25300f135aff25963cc8b'],12,0,12,3,,,
fa221c66213aad0c209f93ac2b8d5391b3c38a17,Deal with renamed flags.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-06 22:44:48-04:00,14400,2018-05-09 08:39:57-04:00,14400,True,False,"['output.pyx', 'avcodec.pxd', 'avcodec.pyav.h']",['2031dd99a182ae4a2e68bff10576f65c4a800cc1'],5,17,22,3,,,
89c9720767bce09ecfce22732b0229fc1233708f,Remove duplicate definitions.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-06 22:45:02-04:00,14400,2018-05-09 08:39:57-04:00,14400,True,False,['avutil.pxd'],['fa221c66213aad0c209f93ac2b8d5391b3c38a17'],7,0,7,1,,,
fdbdf8b97c7abd50ed49b928be96206e8c490a58,"Move decode to the right spot.

... because Python3 won't let us decode `str`.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-09 09:26:28-04:00,14400,2018-05-09 09:26:28-04:00,14400,True,False,['setup.py'],['c375b2071fc2d285aec6ce9b433061fea2038a89'],2,2,4,1,,,
73cf6f6c0d5f27399be4b92f4c271c95d118df5f,Add FFmpeg 4.0 to Travis.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-09 09:26:40-04:00,14400,2018-05-09 09:26:40-04:00,14400,True,False,['.travis.yml'],['fdbdf8b97c7abd50ed49b928be96206e8c490a58'],1,4,5,1,,,
f552ddc508dc5e9c7eff6b81e7df936c1a6c3be4,Fix import for Python2.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-09 15:56:10-04:00,14400,2018-05-09 15:56:30-04:00,14400,True,False,['logging.pyx'],['73cf6f6c0d5f27399be4b92f4c271c95d118df5f'],1,6,7,1,,,
821f2f0c5915d19db0c8f0d98ee8a635b2327db8,Fix typo in test.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-09 16:39:11-04:00,14400,2018-05-09 16:39:25-04:00,14400,True,False,['test_logging.py'],['f552ddc508dc5e9c7eff6b81e7df936c1a6c3be4'],1,1,2,1,,,
de0a7df754417f0f2ed7ff029817cca7bcdb2276,Fix some trivially broken tests.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-09 16:55:44-04:00,14400,2018-05-09 16:55:51-04:00,14400,True,False,"['test_codec.py', 'test_python_io.py']",['821f2f0c5915d19db0c8f0d98ee8a635b2327db8'],3,5,8,2,1.0,1.0,1.0
c4e55eb80bd854779c704e7c3b8595eb5e59ca28,First pass at rolling our own enums.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-09 11:21:06-04:00,14400,2018-05-09 16:55:59-04:00,14400,True,False,"['enums.pyx', 'test_enum.py']",['de0a7df754417f0f2ed7ff029817cca7bcdb2276'],0,254,254,2,1.0,1.0,1.0
92c2e4a1cf7a887363d378d7f4440771aa14ac0b,Add enum flags.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-09 12:10:29-04:00,14400,2018-05-09 16:55:59-04:00,14400,True,False,"['enums.pyx', 'test_enum.py']",['c4e55eb80bd854779c704e7c3b8595eb5e59ca28'],3,132,135,2,0.5,1.0,1.0
92802ac3da251ece40178c4bad58f684e9ca99dd,~ flag,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-09 13:38:04-04:00,14400,2018-05-09 16:55:59-04:00,14400,True,False,"['enums.pyx', 'test_enum.py']",['92c2e4a1cf7a887363d378d7f4440771aa14ac0b'],7,16,23,2,1.0,1.0,1.0
370b6e0acb390b4b6e13f54ff9347494b19a5dd5,Refactor EnumItem creation to add dynamic creation.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-09 15:55:54-04:00,14400,2018-05-09 16:55:59-04:00,14400,True,False,"['enums.pyx', 'test_enum.py']",['92802ac3da251ece40178c4bad58f684e9ca99dd'],45,79,124,2,0.0,1.0,1.0
76ddff755f15b1b3ce2fd72712584f59df4e89a6,Use enums wherever we were using Cython enum.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-09 16:38:57-04:00,14400,2018-05-09 16:55:59-04:00,14400,True,False,"['context.pyx', 'enums.pxd', 'enums.pyx', 'option.pyx', 'avcodec.pxd', 'test_enum.py']",['370b6e0acb390b4b6e13f54ff9347494b19a5dd5'],102,142,244,6,,,
7a93c51e0d1bef3667905172ad71a6f530c2bd8a,"Can only define enums as a list of items.

Dicts are unordered in some implementations.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-10 07:18:54-04:00,14400,2018-05-10 07:18:54-04:00,14400,True,False,"['enums.pyx', 'test_enums.py']",['76ddff755f15b1b3ce2fd72712584f59df4e89a6'],13,8,21,2,,,
76a940871948aaf5f76cff36d11f09d483865a4a,libavfiltergraph.h was finally removed in FFmpeg 4.0.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-10 07:34:46-04:00,14400,2018-05-10 11:47:13-04:00,14400,True,False,['avfiltergraph.pxd'],['56e06f94753db81d86df6f8618971a703b637e97'],1,1,2,1,,,
0544cd2a03b02d9b8e87ff9d07b49e4a5e1c8dcf,`backslashreplace` is for Python >= 3.5.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-10 11:33:05-04:00,14400,2018-05-10 11:47:13-04:00,14400,True,False,['logging.pyx'],['76a940871948aaf5f76cff36d11f09d483865a4a'],1,5,6,1,,,
64e3ae7de84aab77d07567f629c0ee19549951fa,"Remove the random input test, as it is flawed.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-10 11:34:16-04:00,14400,2018-05-10 11:47:13-04:00,14400,True,False,['test_random_input.py'],['0544cd2a03b02d9b8e87ff9d07b49e4a5e1c8dcf'],12,0,12,1,0.0,0.0,0.0
27f99bcaa724c5a71192ec0b92fd1d8477217c0c,Remove Pythons and libraries that are too old/deprecated.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-10 07:25:18-04:00,14400,2018-05-10 11:48:45-04:00,14400,True,False,['.travis.yml'],['64e3ae7de84aab77d07567f629c0ee19549951fa'],39,0,39,1,,,
f0b395d03ac83ea65b33dffdd910070ac8fa857c,"Refactor build for better caching on Travis.

No more virtualenvs as Travis already has them.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-10 09:32:35-04:00,14400,2018-05-10 11:49:01-04:00,14400,True,False,"['.travis.yml', 'activate.sh', 'build-deps', 'test']",['27f99bcaa724c5a71192ec0b92fd1d8477217c0c'],83,72,155,4,,,
19105145449680b97558b3107748b0d10e315d2f,Let PyPy fail on Travis.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-10 11:51:03-04:00,14400,2018-05-10 11:51:03-04:00,14400,True,False,['.travis.yml'],['f0b395d03ac83ea65b33dffdd910070ac8fa857c'],0,8,8,1,,,
9a627a9bf9a5990a5b8b7b1db411ad0b2cda893b,Badges in README point to develop branch.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-10 12:13:20-04:00,14400,2018-05-10 12:13:20-04:00,14400,True,False,['README.md'],['e186578a06b5567c05a74ac3e253159f53cccc7d'],1,1,2,1,,,
54489e6b12d1e70ffcf214f559dc343b922e7623,Add `project_urls` and readme to setup.cfg,Martin Larralde,martin.larralde@ens-cachan.fr,Martin Larralde,martin.larralde@ens-cachan.fr,2018-05-11 11:03:07+02:00,-7200,2018-05-11 11:03:07+02:00,-7200,True,False,['setup.cfg'],['9a627a9bf9a5990a5b8b7b1db411ad0b2cda893b'],0,11,11,1,,,
401e4d917afde191e35340ae119bff88082107e6,Update PyPI link in `README.md`,Martin Larralde,martin.larralde@ens-cachan.fr,Martin Larralde,martin.larralde@ens-cachan.fr,2018-05-11 11:03:54+02:00,-7200,2018-05-11 11:09:05+02:00,-7200,True,False,"['README.md', 'setup.cfg']",['54489e6b12d1e70ffcf214f559dc343b922e7623'],2,1,3,2,,,
651122ebd6079430f0a26155d0c34220c74a7a46,Update PyPI classifiers.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-05-11 07:38:23-04:00,14400,2018-05-11 07:38:23-04:00,14400,True,False,['setup.py'],['401e4d917afde191e35340ae119bff88082107e6'],3,3,6,1,,,
4ab8357157dfef741c43dbe4dc3fdaccca81d5ab,Fix IndentationError(unexpected indent) in activate.sh,Gemfield,gemfield@civilnet.cn,Gemfield,gemfield@civilnet.cn,2018-05-27 10:13:23+08:00,-28800,2018-05-27 10:13:23+08:00,-28800,True,False,['activate.sh'],['651122ebd6079430f0a26155d0c34220c74a7a46'],4,4,8,1,,,
724cfa83d3dd774986d0600ce9c2f74240d9e99b,Clone the packet before av_interleaved_write_frame so packets don't unref.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-09 09:44:10-04:00,14400,2018-06-09 09:44:10-04:00,14400,True,False,"['output.pyx', 'avcodec.pxd']",['4ab8357157dfef741c43dbe4dc3fdaccca81d5ab'],1,6,7,2,,,
f95dc0e1ecfc84c2aac78f623d0d6c2db0c08cfe,Add #334 to changelog.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-09 09:58:35-04:00,14400,2018-06-09 09:58:35-04:00,14400,True,False,['CHANGELOG.rst'],['724cfa83d3dd774986d0600ce9c2f74240d9e99b'],0,1,1,1,,,
5afa8fefd499afbb98e1a371b7975e3f7ee792d8,"a more robust way of finding the right codec

Sometimes the functions `avcodec_find_encoder_by_name` or `avcodec_find_decoder_by_name` can't find the right codec while it exists and the `OutputContainer` class can find it! 
I noticed the way the `OutputContainer` class find the codec and use the same approach for the `Codec` class.",Alireza Davoudi,a.davoudi@aut.ac.ir,Mike Boers,github@mikeboers.com,2018-06-04 15:31:29+04:30,-16200,2018-06-09 10:10:27-04:00,14400,True,False,['codec.pyx'],['4379cb10b29697b8161ccbc6f27f0b447fcd798f'],2,16,18,1,,,
0ed2d625404f371adf470920b9c864b10c012cd8,Use `Codec` to find a codec in `OutputContainer`.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-09 19:02:48-04:00,14400,2018-06-09 19:02:48-04:00,14400,True,False,"['codec.pyx', 'output.pyx']",['5afa8fefd499afbb98e1a371b7975e3f7ee792d8'],27,24,51,2,,,
b669d36891ec20e0876be49bee77eacb03a68040,Can pass `Codec` to `OutputContainer.add_stream`.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-09 19:16:27-04:00,14400,2018-06-09 19:16:27-04:00,14400,True,False,"['codec.pyx', 'output.pyx']",['0ed2d625404f371adf470920b9c864b10c012cd8'],4,2,6,2,,,
6351675179b2ecd50ee348616e31e337bc27ac4a,Add #332 to changelog.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-09 19:17:59-04:00,14400,2018-06-09 19:17:59-04:00,14400,True,False,['CHANGELOG.rst'],['b669d36891ec20e0876be49bee77eacb03a68040'],1,2,3,1,,,
cb9aaccf9df70acc6d287dd8bcb73d0d2ef8ce52,Added information about the frame is it interlaced or progressive.,Vasiliy Kotov,vasiliy.kotov@itechart-group.com,Mike Boers,github@mikeboers.com,2018-05-17 09:56:20+03:00,-10800,2018-06-09 19:27:40-04:00,14400,True,False,"['frame.pyx', 'avcodec.pxd']",['e37e3711882f3664d092b148370681a404d7bc39'],0,6,6,2,,,
16046050c19d05f0ba6f5650a7696416a0ff46da,Add #327 to changelog.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-09 19:28:58-04:00,14400,2018-06-09 19:28:58-04:00,14400,True,False,['CHANGELOG.rst'],['cb9aaccf9df70acc6d287dd8bcb73d0d2ef8ce52'],0,2,2,1,,,
f3d18f54fd6d0948d44681ec306b952b20cdaed6,"Filenames can be unicode.

Fixes #82.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-10 09:43:54-04:00,14400,2018-06-10 09:43:54-04:00,14400,True,False,"['CHANGELOG.rst', 'core.pxd', 'core.pyx', 'utils.pxd', 'utils.pyx', 'test_container.py']",['2a63d3d7c8248fbd358d6f106c5c64e3d25c428f'],7,27,34,6,1.0,1.0,1.0
5d190f8d3b228820d1a537f0ed2b584b8c09fbae,Fix relative import in tests.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-10 10:17:17-04:00,14400,2018-06-10 10:17:17-04:00,14400,True,False,['test_container.py'],['f3d18f54fd6d0948d44681ec306b952b20cdaed6'],1,1,2,1,,,
d45d03ef3912fb96972bb0b0dd0aeccefed959df,Run autolint.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-10 10:26:45-04:00,14400,2018-06-10 10:26:45-04:00,14400,True,False,"['context.pyx', 'enums.pyx', 'buffer.rst', 'video.rst', 'decode_threads.py', 'avcodec.pxd', 'test_container.py', 'test_enums.py', 'test_logging.py']",['5d190f8d3b228820d1a537f0ed2b584b8c09fbae'],21,2,23,9,,,
93b24b33a0938a82c57d092917d74529e64c3773,Deprecate 2 older FFmpeg's due to them not having features we are now using.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-10 10:29:06-04:00,14400,2018-06-10 10:29:06-04:00,14400,True,False,['.travis.yml'],['d45d03ef3912fb96972bb0b0dd0aeccefed959df'],6,0,6,1,,,
39567b3bf9b24b3129110f4fc5a46b111875015e,Release v0.4.1.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-10 10:29:12-04:00,14400,2018-06-10 10:29:12-04:00,14400,True,False,"['CHANGELOG.rst', 'setup.py']",['93b24b33a0938a82c57d092917d74529e64c3773'],3,3,6,2,,,
aef7cc24cbb101f77320464a93a0fb89f7837f73,"Stop using libavresample.

We're officially dropping Libav support starting here. See #110.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-12 09:47:02-04:00,14400,2018-06-12 09:47:02-04:00,14400,True,False,"['_core.pyx', 'swresample.pxd', 'swresample.pyav.h', 'setup.py']",['39567b3bf9b24b3129110f4fc5a46b111875015e'],67,3,70,4,0.631578947368421,0.631578947368421,0.0
4af9b48f01ef231db6fd4b833e16dd67c4576755,Remove Libav support from docs and testing.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-06-12 10:04:31-04:00,14400,2018-06-12 10:04:50-04:00,14400,True,False,"['.travis.yml', 'CHANGELOG.rst', 'HACKING.rst', 'README.md', 'utils.pyx', 'about.rst', 'index.rst', 'installation.rst']",['aef7cc24cbb101f77320464a93a0fb89f7837f73'],42,35,77,8,,,
eedf916322086df730770ab613a4f18256cfd8ae,"Fix overflow error while calculating Enum's hash.

Fixes #339, #341, and #342.

Big thanks to @hgc2002, @Kamekameha, and @tshirtman for their research and PR's that inspired this commit.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-07-05 11:41:40-04:00,14400,2018-07-05 11:45:01-04:00,14400,True,False,['enums.pyx'],['a9ab0c1b046b7ee7a0abec31249eee88420fce58'],8,9,17,1,,,
a030cff0271715c83bccf78b328ad7b5369e6be0,Changelog for enum hash fix.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-07-05 11:50:17-04:00,14400,2018-07-05 11:50:17-04:00,14400,True,False,['CHANGELOG.rst'],['eedf916322086df730770ab613a4f18256cfd8ae'],0,4,4,1,,,
97fc80f9d0c67b8c750cabba3930b73a519fea88,Include pts in Frame.__repr__.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-05 12:19:40-04:00,14400,2018-09-05 12:19:40-04:00,14400,True,False,"['frame.pyx', 'frame.pyx', 'frame.pyx']",['78152dc06ce02e2b1fb7354ade115b4a62cc2577'],3,6,9,3,,,
b50dcc1eaa99e1f13e91ac2d723b9a3402846d0d,"Actually pass container to CodecContext.

Not sure what the fallout from this being `False` was or changing it will be. The tests pass...",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-05 12:20:11-04:00,14400,2018-09-05 12:20:11-04:00,14400,True,False,['stream.pyx'],['97fc80f9d0c67b8c750cabba3930b73a519fea88'],1,1,2,1,,,
5dac6413550dbbae8a0a2c6a32457bcff515b116,Copy time bases to/from packets/frames as we can.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-05 12:24:06-04:00,14400,2018-09-05 12:24:06-04:00,14400,True,False,"['codeccontext.pyx', 'context.pxd', 'context.pyx', 'codeccontext.pyx', 'decode.py', 'test_decode.py']",['b50dcc1eaa99e1f13e91ac2d723b9a3402846d0d'],32,53,85,6,1.0,1.0,1.0
9a6c8f6587ea61f1b064f652cc7fcf02675df08b,Changelog for Frame.time_base.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-05 12:27:21-04:00,14400,2018-09-05 12:27:21-04:00,14400,True,False,['CHANGELOG.rst'],['5dac6413550dbbae8a0a2c6a32457bcff515b116'],0,1,1,1,,,
885dc1fa1dc7101b58982984da3227c4536b221c,Change default Python to `python3`.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-05 12:25:13-04:00,14400,2018-09-05 12:28:07-04:00,14400,True,False,['activate.sh'],['f2425f6b04fe503de9fb3efc0d85695d4b244eb6'],1,1,2,1,,,
1a9fbaa41469770c3a4e5721337f3e8a2d42e8d0,"CodecContext.thread_type accepts more than just ints.

This came up in #360.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-05 14:38:48-04:00,14400,2018-09-05 15:51:10-04:00,14400,True,False,"['context.pyx', 'decode.py']",['885dc1fa1dc7101b58982984da3227c4536b221c'],10,15,25,2,,,
14b590924541e366514cd61e64d4517459db5b50,Deal with a few Python2/3-isms.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-05 15:12:14-04:00,14400,2018-09-05 15:51:25-04:00,14400,True,False,"['__main__.py', 'context.pyx', 'output.pyx', 'streams.pyx', 'utils.pyx', 'setup.py']",['1a9fbaa41469770c3a4e5721337f3e8a2d42e8d0'],8,5,13,6,,,
60be3ac9f0bbc6cbbfbaa5b85ce7a0e51cc3fd91,"Initialize CodecContext.options to an empty dict.

This has been a longstanding bug.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-05 15:48:09-04:00,14400,2018-09-05 15:52:55-04:00,14400,True,False,"['CHANGELOG.rst', 'context.pyx']",['14b590924541e366514cd61e64d4517459db5b50'],0,2,2,2,,,
3b4f1ba5b897995fdb94953da17b4ed6eee85ff7,Try to be smarter about Python IO that does not have all methods.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-05 16:56:46-04:00,14400,2018-09-05 16:56:46-04:00,14400,True,False,"['core.pxd', 'core.pyx']",['60be3ac9f0bbc6cbbfbaa5b85ce7a0e51cc3fd91'],10,12,22,2,,,
651c6a93d5993e9383f3ca05e510399945fada48,First pass at stream options.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-05 16:57:23-04:00,14400,2018-09-05 16:57:23-04:00,14400,True,False,"['core.pxd', 'core.pyx', 'input.pyx', 'output.pyx']",['3b4f1ba5b897995fdb94953da17b4ed6eee85ff7'],17,46,63,4,,,
ed0468261130b10bc5d01d845c45c8963ce59685,Re-org CodecContext initializers.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-05 16:57:40-04:00,14400,2018-09-05 16:57:40-04:00,14400,True,False,['context.pyx'],['651c6a93d5993e9383f3ca05e510399945fada48'],1,3,4,1,,,
82db8b13fbf861f7dda2fd191f58c8bce1c69df7,"OutputContainer.add_stream(..., options and **kwargs).",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-05 17:02:00-04:00,14400,2018-09-05 17:02:00-04:00,14400,True,False,"['core.pyx', 'output.pxd', 'output.pyx']",['ed0468261130b10bc5d01d845c45c8963ce59685'],2,9,11,3,,,
0e1875c1cdba7101433763798172c53ae129c183,"[travis] set PYAV_PYTHON correctly for Python 2.7

The Python 2.7 builds are bombing:

ImportError: No module named 'setuptools'",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-18 22:32:37+02:00,-7200,2018-09-19 08:47:08+02:00,-7200,True,False,['activate.sh'],['82db8b13fbf861f7dda2fd191f58c8bce1c69df7'],0,3,3,1,,,
a32929ce25e3952b226c757d6a1faab1c47b42ea,"[pyio] restore ftell method

This partially reverts 3b4f1ba5b897995fdb94953da17b4ed6eee85ff7
as we still use the ftell method which was removed in that commit.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-19 09:32:02+02:00,-7200,2018-09-19 09:32:02+02:00,-7200,True,False,"['core.pxd', 'core.pyx']",['0e1875c1cdba7101433763798172c53ae129c183'],2,4,6,2,,,
27aad0e3ed95cb43b28eb3c02fa96b3a9b74de5b,"Disable unicode filename test on Windows with Python 3.0 - 3.5

Before PEP 529 landed in Python 3.6, unicode filename handling on
Windows is hit-and-miss, so don't break CI.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-19 11:37:15+02:00,-7200,2018-09-19 11:37:15+02:00,-7200,True,False,['test_container.py'],['a32929ce25e3952b226c757d6a1faab1c47b42ea'],0,15,15,1,,,
f79e2d8f86ee612bce3c953a19b21c536e2fb2a1,"Remove appveyor tests against ffmpeg 2.8.x

ffmpeg 2.8.x doesn't have av_packet_clone which was introduced
in ffmpeg 3.x.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-19 12:39:26+02:00,-7200,2018-09-19 12:39:26+02:00,-7200,True,False,['appveyor.yml'],['27aad0e3ed95cb43b28eb3c02fa96b3a9b74de5b'],9,0,9,1,,,
3844e9b1ab82d3bbec1b78b6325f9fc5b48a6cfb,Notes and scratch.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 11:55:34-04:00,14400,2018-09-19 11:55:34-04:00,14400,True,False,"['todo.__unsorted__.txt', 'email-2018-09-07.py', 'clean-remote-branches']",['533ded75387c6a4fb6af878dc0526ba169230b41'],5,104,109,3,0.47368421052631576,0.47368421052631576,1.0
21d2cbeb626438be063e91974a2ec419b328e56b,Add some docstrings for Frame base class,Jeremy Lainé,jeremy.laine@m4x.org,Mike Boers,github@mikeboers.com,2018-09-18 22:08:19+02:00,-7200,2018-09-19 11:56:10-04:00,14400,True,False,['frame.pyx'],['3844e9b1ab82d3bbec1b78b6325f9fc5b48a6cfb'],2,33,35,1,,,
4edc69b81fb868cdce0cc8dc74bc92723f8e43db,Extend Sphinx theme so we can add a stub for our remote server to add versioning.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 13:01:49-04:00,14400,2018-09-19 13:33:01-04:00,14400,True,False,"['Makefile', 'layout.html', 'theme.conf', 'conf.py', 'includes.py', 'upload']",['21d2cbeb626438be063e91974a2ec419b328e56b'],21,21,42,6,,,
9ef73f85de3b7d32bd652a84f1a528c2cad0c357,Docs pull version from setup.py.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 13:08:21-04:00,14400,2018-09-19 13:33:14-04:00,14400,True,False,['conf.py'],['4edc69b81fb868cdce0cc8dc74bc92723f8e43db'],3,10,13,1,,,
04ae07c70f014e20f8a34a9574188f5e80fd4f4a,Point at our new docs.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 13:16:50-04:00,14400,2018-09-19 13:33:14-04:00,14400,True,False,['README.md'],['9ef73f85de3b7d32bd652a84f1a528c2cad0c357'],1,1,2,1,,,
6a21505d87499a033a58e8e56ef5f57244dd7a7c,"Shout out to new authors.

Also link to GitHub accounts.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 13:25:08-04:00,14400,2018-09-19 13:33:14-04:00,14400,True,False,"['AUTHORS.py', 'AUTHORS.rst', 'AUTHORS.txt', 'contributors.rst']",['04ae07c70f014e20f8a34a9574188f5e80fd4f4a'],45,53,98,4,,,
387a3007dd5d017cd95a920179df84f869a26feb,Release v0.5.0.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 13:38:41-04:00,14400,2018-09-19 13:39:00-04:00,14400,True,False,"['CHANGELOG.rst', 'setup.py']",['db5e8f61707a65bfec86f3a86b2868b8287a727d'],3,9,12,2,,,
f294431c8157b63d16bf67b74a774eed334dc4c9,"Bump to the next dev version.

We forgot to do this for 0.4.2-dev. Whoops!",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 13:53:04-04:00,14400,2018-09-19 14:04:10-04:00,14400,True,False,['setup.py'],['387a3007dd5d017cd95a920179df84f869a26feb'],1,1,2,1,,,
248f2ab9450d9f01e641dc9e3cdf733e60febbb0,Ignore Cythons that are too old.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 14:03:18-04:00,14400,2018-09-19 14:04:16-04:00,14400,True,False,['setup.py'],['7c9ff946bc6a440eb184d714b255ff201ade265c'],0,7,7,1,,,
7c9ff946bc6a440eb184d714b255ff201ade265c,"Note that we support FFmpeg >= 3.0.

Closes #220.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 13:53:32-04:00,14400,2018-09-19 14:04:16-04:00,14400,True,False,['installation.rst'],['f294431c8157b63d16bf67b74a774eed334dc4c9'],1,1,2,1,,,
9be4cb897c511345c2a34fecb79bedb2594ff1bf,Re-org imports in setup.py,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 14:19:19-04:00,14400,2018-09-19 14:19:19-04:00,14400,True,False,['setup.py'],['248f2ab9450d9f01e641dc9e3cdf733e60febbb0'],24,16,40,1,,,
68d231f52d6c1c9a9e90399923c14835659cdc99,PYAV_DEBUG_BUILD and diagnostic messages on any build failure.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 14:31:38-04:00,14400,2018-09-19 14:31:38-04:00,14400,True,False,['setup.py'],['9be4cb897c511345c2a34fecb79bedb2594ff1bf'],10,34,44,1,0.5789473684210527,0.0,1.0
2ee9b3922f36d2076271340579ffb543646062ed,Release v0.5.1,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 16:12:10-04:00,14400,2018-09-19 16:13:06-04:00,14400,True,False,"['CHANGELOG.rst', 'setup.py']",['619ed073cc4b1110da045553d884c8a5a5848759'],1,8,9,2,,,
491987179e16e5a40bd9cd286247225b4174cb6a,Bump to next dev version.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 16:13:59-04:00,14400,2018-09-19 16:13:59-04:00,14400,True,False,['setup.py'],['2ee9b3922f36d2076271340579ffb543646062ed'],1,1,2,1,,,
aef845710d114533244331aeab93efc38f8256a3,"Don't cache compile checks unless PYAV_CACHE_COMPILE_CHECKS is set.

Closes #256.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 22:38:38-04:00,14400,2018-09-19 22:38:38-04:00,14400,True,False,"['CHANGELOG.rst', 'activate.sh', 'setup.py']",['491987179e16e5a40bd9cd286247225b4174cb6a'],6,35,41,3,0.125,0.125,1.0
7824f5a97d56f0979529bafe637db2969a5fc58e,Fix Windows build.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-19 23:13:01-04:00,14400,2018-09-19 23:13:01-04:00,14400,True,False,"['CHANGELOG.rst', 'setup.py']",['aef845710d114533244331aeab93efc38f8256a3'],20,22,42,2,,,
6350a84ed719247e6be5bfd329218f2209e4780a,Rename reflection envvars to be more precise.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-20 07:37:52-04:00,14400,2018-09-20 07:50:33-04:00,14400,True,False,"['CHANGELOG.rst', 'activate.sh', 'setup.py']",['7824f5a97d56f0979529bafe637db2969a5fc58e'],4,7,11,3,,,
805dca8dfbb3dac845c6023182e088f4b1cdf47c,Release v0.5.2,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-20 07:51:07-04:00,14400,2018-09-20 07:51:07-04:00,14400,True,False,"['CHANGELOG.rst', 'setup.py']",['6350a84ed719247e6be5bfd329218f2209e4780a'],4,4,8,2,,,
807ef9399dbdd28d8cd7a108557f77aa25fc5be6,"Move version to a separate tiny file, and bump it to next dev version.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-20 08:20:02-04:00,14400,2018-09-20 08:20:02-04:00,14400,True,False,"['VERSION.txt', 'conf.py', 'setup.py']",['805dca8dfbb3dac845c6023182e088f4b1cdf47c'],7,3,10,3,,,
eddf75d336b65e4d8e8aa75fdb050fd2809f11d7,"Stop referring to step_minus1, offset_plus1 and depth_minus1

The new step, offset and depth were introduced in ffmpeg 3.0

This is a first step towards fixing #379",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-20 19:26:45+02:00,-7200,2018-09-21 08:12:44+02:00,-7200,True,False,"['format.pyx', 'avutil.pxd']",['807ef9399dbdd28d8cd7a108557f77aa25fc5be6'],6,5,11,2,,,
c0117b6ddb8683117027db7f25559f167d7076fa,"Stop using deprecated AVPicture

We use AVFrame's data and linesize directly, and use imgutils.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-21 08:34:05+02:00,-7200,2018-09-21 08:34:05+02:00,-7200,True,False,"['subtitle.pyx', 'frame.pxd', 'frame.pyx', 'avcodec.pxd', 'avutil.pxd']",['eddf75d336b65e4d8e8aa75fdb050fd2809f11d7'],41,36,77,5,,,
5a707a112f7fb594c135aa32823025974fd29e1b,Use av_packet_unref instead of av_free_packet,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-21 08:37:53+02:00,-7200,2018-09-21 08:37:53+02:00,-7200,True,False,"['packet.pyx', 'avcodec.pxd']",['c0117b6ddb8683117027db7f25559f167d7076fa'],2,1,3,2,,,
8d480bbe0d559e5936cfb08ec9292bd28400f7d8,Use const char* for log name,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-21 12:28:31+02:00,-7200,2018-09-21 12:28:31+02:00,-7200,True,False,['logging.pyx'],['5a707a112f7fb594c135aa32823025974fd29e1b'],3,3,6,1,,,
f10cb43ed2b1bb962cb0d9b8aae80a62bf4733e9,"Put each pointer declaration on its own line

This avoids the Cython warning:

Non-trivial type declarators in shared declaration (e.g. mix of pointers and values). Each pointer declaration should be on its own line.

We are still doing some dodgy things mixing const and non-const
pointers which give us compiler warnigns, but that needs discussing.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-21 12:31:11+02:00,-7200,2018-09-21 12:32:15+02:00,-7200,True,False,['frame.pyx'],['8d480bbe0d559e5936cfb08ec9292bd28400f7d8'],1,3,4,1,,,
ae764a4fb168705ae1a859a337d59307543454af,"Fix some codec accessors

The audio_rates and frame_rates properties returned a pointer cast to an
int instead of the actual supported rates.

The audio_formats and video_formats made non-const which caused compiler
warnings.

Notes:

- I have added tests using Opus to test audio_rates and audio_formats.

- I also added a test to check UnknownCodecError being raised for a
  bogus codec.

- I have not found *any* codecs which report frame_rates, so that
  property is untested.",Jeremy Lainé,jeremy.laine@m4x.org,Mike Boers,github@mikeboers.com,2018-09-21 14:40:48+02:00,-7200,2018-09-21 14:42:59-04:00,14400,True,False,"['codec.pxd', 'codec.pyx', 'test_codec.py']",['d9a9e2d723b8cd6a178d24e7ee0800ac2c7ce1b1'],40,148,188,3,1.0,1.0,1.0
16ebfa44094df953f996c442f1bdc627c7e8397c,"Rename avrational_to_faction to avrational_to_fraction

There was an ""r"" missing. Also, make its input a const pointer to avoid
compilation warnings.",Jeremy Lainé,jeremy.laine@m4x.org,Mike Boers,github@mikeboers.com,2018-09-21 19:06:06+02:00,-7200,2018-09-21 14:44:18-04:00,14400,True,False,"['codec.pyx', 'context.pyx', 'frame.pyx', 'packet.pyx', 'stream.pyx', 'utils.pxd', 'utils.pyx', 'codeccontext.pyx', 'stream.pyx']",['ae764a4fb168705ae1a859a337d59307543454af'],20,19,39,9,,,
8a672bba2ba7419bb753dcfc0a9eaf57d60878ce,"Close file descriptors in tests

This fixes a warning due to file descriptors not being closed in two
Python I/O tests.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-22 00:10:39+02:00,-7200,2018-09-22 00:10:39+02:00,-7200,True,False,['test_python_io.py'],['16ebfa44094df953f996c442f1bdc627c7e8397c'],22,22,44,1,,,
dfb654ddace2192dbdafb286677f4f7abd539586,Pass AVCodec pointers as const AVCodec*,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-22 01:51:49+02:00,-7200,2018-09-22 01:52:51+02:00,-7200,True,False,"['codeccontext.pyx', 'context.pxd', 'context.pyx', 'output.pyx', 'stream.pxd', 'codeccontext.pyx']",['16ebfa44094df953f996c442f1bdc627c7e8397c'],8,8,16,6,,,
e8da247271be6d99ad1ef684edf45878d6397912,Add some missing const qualifiers,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-22 02:01:47+02:00,-7200,2018-09-22 02:05:09+02:00,-7200,True,False,"['stream.pyx', 'filter.pyx', 'format.pxd', 'format.pyx']",['dfb654ddace2192dbdafb286677f4f7abd539586'],5,5,10,4,,,
85843a914fa31847048f2afbde3af6920dbf5bce,Cast sws_scale / swr_convert input data to const uint8_t**,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-22 02:58:22+02:00,-7200,2018-09-22 03:05:05+02:00,-7200,True,False,"['resampler.pyx', 'frame.pyx']",['c31c1766d79b96923871fad3340c35e7efab3e42'],3,5,8,2,,,
91e25a67c11427d2b2674f7c3443d3ea71189857,Cast colourspace manipulation arguments,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-22 03:07:39+02:00,-7200,2018-09-22 03:07:39+02:00,-7200,True,False,['frame.pyx'],['85843a914fa31847048f2afbde3af6920dbf5bce'],4,5,9,1,,,
b8954bfa5bf90480dfb5eb16286c680d41afd539,"Defer wrapping output stream into Python object

OutputContainer.add_stream() nicely initialises some default options
both for audio and video streams. Unfortunately, we wrap the low-level
AVCodecContext and AVStream into Python objects before we finish
initialising them.

For video streams this results in the crucial ""pix_fmt"" being cleared
inside VideoCodecContext._init, which leads to a crash during encoding
if the user does not set ""pix_fmt"" (again) themselves:

    Assertion desc failed at libswscale/swscale_internal.h:674

With this PR we finish the CodecContext initialization *before* we start
wrapping the stream into a Python object.

As a result of this fix, all video encoding examples can be simplified
to remove this:

   stream.pix_fmt = 'yuv420p'",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-25 13:05:31+02:00,-7200,2018-09-25 14:12:03+02:00,-7200,True,False,"['output.pyx', 'test_encode.py']",['c31c1766d79b96923871fad3340c35e7efab3e42'],5,29,34,2,1.0,1.0,1.0
1bfaf61f25f470b6f71825e27e2a3d48927c3c88,"Remove 'if self.ptr' checks from VideoCodecContext

We are guaranteed to be handed an AVCodecContext* in the constuctor.

AudioCodecContext doesn't have these kind of checks. This is most likely
a left-over from the refactoring that specialized CodecContext classes.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-25 15:41:46+02:00,-7200,2018-09-25 15:41:46+02:00,-7200,True,False,['codeccontext.pyx'],['c31c1766d79b96923871fad3340c35e7efab3e42'],13,8,21,1,,,
cdee1fd46086e4a8885e34b453f54000590f27bb,Drop a few comments about casts for const-ness.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-25 22:10:29-04:00,14400,2018-09-25 22:10:29-04:00,14400,True,False,"['resampler.pyx', 'frame.pyx']",['91e25a67c11427d2b2674f7c3443d3ea71189857'],2,12,14,2,,,
e5ee38b1c7384843e4f609e16f01756403e1a724,"Fix packet timebase handling during encoding.

We must not use the frame's timebase as frame is None while flushing the
encoder, which gives random results. In any case we know that frames were
rebased into the CodecContext's time_base.

For a lengthier discussion see #397",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-27 18:01:56+02:00,-7200,2018-09-28 01:21:39+02:00,-7200,True,False,"['context.pyx', 'test_encode.py']",['9ccd37824e24022439cf69c5f445b1dc77eca0c9'],9,33,42,2,0.0,1.0,1.0
0d00960eea236c6eeaae3383187ae08dffe43bf2,Enable libx264 in our travis builds,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-28 00:54:19+02:00,-7200,2018-09-28 01:39:05+02:00,-7200,True,False,"['.travis.yml', 'build-deps']",['e5ee38b1c7384843e4f609e16f01756403e1a724'],0,3,3,2,,,
d0f5cc2c75a133f3713d998f7ba78a6bb2d9c54a,"Raise exceptions when we can't change colorspace.

I'm not sure how to test this.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-25 22:27:28-04:00,14400,2018-09-28 16:00:55-04:00,14400,True,False,"['frame.pyx', 'test_videoframe.py']",['9ccd37824e24022439cf69c5f445b1dc77eca0c9'],15,54,69,2,1.0,1.0,1.0
32eeab00126c2805f3c590c09d14faa517a1f972,Remove 	`frame` from `setup_encoded_packet` entirely.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-28 16:20:27-04:00,14400,2018-09-28 16:20:27-04:00,14400,True,False,"['context.pxd', 'context.pyx']",['0d00960eea236c6eeaae3383187ae08dffe43bf2'],5,9,14,2,,,
6ba0670c5b6fa1a6391c62caeaefd362e906fab8,Copy time_base to flushing packets.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-28 16:21:10-04:00,14400,2018-09-28 16:21:10-04:00,14400,True,False,['input.pyx'],['32eeab00126c2805f3c590c09d14faa517a1f972'],0,1,1,1,,,
e7b798da075d1f6f795854b13c547246121d7aa7,Add badges for Gitter and docs.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-28 17:00:30-04:00,14400,2018-09-28 17:42:13-04:00,14400,True,False,['README.md'],['46478f8d58e9e42cf90c65b14b6f7eec350e2665'],4,22,26,1,,,
afd9ebf37bb78eda119ded74f20d2728b31629ee,"Fix Travis build on OSX

The key changes are:

- ensure we use the ""pip"" corresponding to our Python

- Don't assume nosetests is on the PATH, explicitly run python -m nose",Jeremy Lainé,jeremy.laine@m4x.org,Mike Boers,github@mikeboers.com,2018-09-28 10:07:43+02:00,-7200,2018-09-28 17:47:52-04:00,14400,True,False,"['.travis.yml', 'activate.sh', 'build-deps', 'test']",['46478f8d58e9e42cf90c65b14b6f7eec350e2665'],6,12,18,4,,,
2d54fa6ca3057fa22ffc43550832d00d95bb95fa,Don't actually install FFmpeg via Homebrew.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-29 08:46:27-04:00,14400,2018-09-29 16:01:19-04:00,14400,True,False,['travis-setup'],['afd9ebf37bb78eda119ded74f20d2728b31629ee'],3,8,11,1,,,
22f1caec3d4bf8c88553554ecffd629d86841db9,PYAV_PIP default to `$PYAV_PYTHON -m pip` so they stay in line.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-28 17:14:24-04:00,14400,2018-09-29 16:01:22-04:00,14400,True,False,['activate.sh'],['2d54fa6ca3057fa22ffc43550832d00d95bb95fa'],3,7,10,1,,,
f2615eb3b7d66bb8499f1b1f227cb58f85a35330,Travis tests are slightly verbose.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-29 08:43:34-04:00,14400,2018-09-29 16:01:22-04:00,14400,True,False,['test'],['22f1caec3d4bf8c88553554ecffd629d86841db9'],1,1,2,1,,,
a2c1cf17ccaf5d40d05cd91d13e612f8bd86184e,Restructure our Travis matrix for more coverage of primary targets.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-28 17:21:54-04:00,14400,2018-09-29 16:55:53-04:00,14400,True,False,['.travis.yml'],['f2615eb3b7d66bb8499f1b1f227cb58f85a35330'],23,58,81,1,,,
daa28c1c1a1230a8c346c55873817f4d364dfa6c,"Use av_get_media_type_string

Now that we have dropped libav, we can use this function instead of
defining our own.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-01 14:02:10+02:00,-7200,2018-10-01 14:02:10+02:00,-7200,True,False,"['codec.pyx', 'context.pyx', 'pad.pyx', 'stream.pyx', 'utils.pxd', 'utils.pyx', 'avutil.pxd']",['540d94a87b63033164f14354dc06b4a63aa2d462'],29,26,55,7,,,
c1c37dc187a502d2d8e9eca2c35db62a32a37d32,Enums can only have one instance per value (so we can have multiple names).,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-01 11:41:22-04:00,14400,2018-10-01 11:51:01-04:00,14400,True,False,"['enums.pyx', 'test_enums.py']",['daa28c1c1a1230a8c346c55873817f4d364dfa6c'],3,17,20,2,1.0,1.0,1.0
15e2af3a49ae20a9a6cc577e4fd79a960dd03b72,Enums respond equal to all of their names.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-01 11:48:45-04:00,14400,2018-10-01 11:51:09-04:00,14400,True,False,"['enums.pyx', 'test_enums.py']",['c1c37dc187a502d2d8e9eca2c35db62a32a37d32'],4,17,21,2,1.0,1.0,1.0
8f5f4bf3b595949b2863d94747f3871488ec3d2d,"Expose AVFrame.pict_type

This makes it possible to force an encoder to generate full intra
frames, for instance to recover from picture loss in realtime
communications.",Jeremy Lainé,jeremy.laine@m4x.org,Mike Boers,github@mikeboers.com,2018-10-01 12:51:28+02:00,-7200,2018-10-01 11:53:14-04:00,14400,True,False,"['frame.pyx', 'avcodec.pxd', 'avutil.pxd']",['7c00fb5d4528ff38190414fd7f4df49ba5535ab4'],0,19,19,3,,,
58ba670349572e1a2d37ada4dfcd8f796808457c,Use an enum for VideoFrame.pict_type.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-01 11:32:02-04:00,14400,2018-10-01 11:54:16-04:00,14400,True,False,['frame.pyx'],['8f5f4bf3b595949b2863d94747f3871488ec3d2d'],2,32,34,1,,,
188133ae1ee330647326683c7a029c2bc8c364f8,"Drop the long VideoFrame.pict_type names.

Sticking with FFmpeg names for the moment.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-01 14:40:33-04:00,14400,2018-10-01 14:40:33-04:00,14400,True,False,['frame.pyx'],['9931b2d7fcee0ad80a3263a138b625367341eff7'],21,4,25,1,,,
0a8f94f13b1dad011102194010c60d5692ebbaa1,Pull renamed_attr from metatools.deprecate.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-09-29 16:39:24-04:00,14400,2018-10-01 15:51:48-04:00,14400,True,False,['deprecation.py'],['188133ae1ee330647326683c7a029c2bc8c364f8'],0,59,59,1,1.0,1.0,0.45454545454545453
93d381a03fd5ef5e92e085e857c0fa41e42da2da,"Convert deprecation doctests to unittest.

Warnings were really a pain here.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-01 16:34:48-04:00,14400,2018-10-01 16:34:48-04:00,14400,True,False,"['deprecation.py', 'test_deprecation.py']",['0a8f94f13b1dad011102194010c60d5692ebbaa1'],19,36,55,2,1.0,1.0,0.8823529411764706
9c4523a20a10a3d16eeb0df7ea67c76af018df03,Deprecation warning should be DeprecationWarning.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-01 16:35:04-04:00,14400,2018-10-01 16:35:04-04:00,14400,True,False,['deprecation.py'],['93d381a03fd5ef5e92e085e857c0fa41e42da2da'],3,10,13,1,,,
05300a0f3dede98f162d618023c4f115bcaf6b39,Rename Frame.to_nd_array to Frame.to_ndarray,Jeremy Lainé,jeremy.laine@m4x.org,Mike Boers,github@mikeboers.com,2018-10-01 21:13:52+02:00,-7200,2018-10-01 16:36:35-04:00,14400,True,False,"['CHANGELOG.rst', 'frame.pyx', 'frame.pyx', 'average.py', 'show_frames_opencv.py', 'test_audioframe.py', 'test_videoframe.py']",['db1c9feda4fc273326ff3adaec958f41bb718cc5'],8,94,102,7,1.0,1.0,1.0
5f80f0c7621dc5491875baedbe176d04debd8b0d,"Rename Buffer.update_buffer to Buffer.update

We provide the following backwards compatibility aliases

- Packet.update_buffer
- Plane.update_buffer and Plane.update_from_string",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-02 01:12:49+02:00,-7200,2018-10-02 01:17:41+02:00,-7200,True,False,"['CHANGELOG.rst', 'buffer.pyx', 'packet.pyx', 'plane.pyx', 'gen_rgb_rotate.py', 'test_encode.py', 'test_videoframe.py']",['05300a0f3dede98f162d618023c4f115bcaf6b39'],23,16,39,7,,,
0c9689d742dfafad51d0f3d645ed8eca9cc7678b,Clean up merged branches too.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-01 19:56:56-04:00,14400,2018-10-01 19:56:56-04:00,14400,True,False,['clean-branches'],['5f80f0c7621dc5491875baedbe176d04debd8b0d'],0,18,18,1,,,
0c51698510b0134180fa8e9de4331585414db325,Deprecate `Plane.ptr`.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-01 20:10:16-04:00,14400,2018-10-01 20:10:16-04:00,14400,True,False,['plane.pyx'],['0c9689d742dfafad51d0f3d645ed8eca9cc7678b'],3,1,4,1,,,
4ca3c572f97115771d715290a9db6e7b780a28f5,Document the buffer protocol a little.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-01 20:20:36-04:00,14400,2018-10-01 20:20:36-04:00,14400,True,False,"['buffer.pyx', 'buffer.rst']",['0c51698510b0134180fa8e9de4331585414db325'],8,36,44,2,,,
73f83dd78218bc0a8096f8cac0a0f3a0aba5f063,"Add more docstrings, hide deprecated members.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-02 13:25:32+02:00,-7200,2018-10-02 13:59:40+02:00,-7200,True,False,"['codeccontext.pyx', 'frame.pxd', 'frame.pyx', 'layout.pxd', 'frame.pxd', 'packet.pyx', 'plane.pyx', 'codeccontext.pyx', 'audio.rst', 'buffer.rst', 'plane.rst', 'video.rst']",['4ca3c572f97115771d715290a9db6e7b780a28f5'],13,94,107,12,,,
6eccfac0409ca3f5956c1f55eb914b265a18c460,Link to GitHub users and issues.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-02 22:31:50-04:00,14400,2018-10-02 22:31:50-04:00,14400,True,False,"['CHANGELOG.rst', 'conf.py']",['73f83dd78218bc0a8096f8cac0a0f3a0aba5f063'],32,64,96,2,,,
004790fac3e3ce526af461cda91489aac4b5cbab,Update changelog and authors for release.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-02 22:32:16-04:00,14400,2018-10-02 22:32:16-04:00,14400,True,False,"['AUTHORS.rst', 'CHANGELOG.rst']",['6eccfac0409ca3f5956c1f55eb914b265a18c460'],37,74,111,2,,,
62bcb641770f92d8b39046609db360fc457ed74d,Don't pack up random build `*.c` files in src.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-03 10:55:17-04:00,14400,2018-10-03 10:55:17-04:00,14400,True,False,['MANIFEST.in'],['004790fac3e3ce526af461cda91489aac4b5cbab'],1,1,2,1,,,
958027c09852ac1b1c87d719076c63f67fd2b2cb,Release v0.5.3.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-03 10:55:42-04:00,14400,2018-10-03 10:55:42-04:00,14400,True,False,['VERSION.txt'],['62bcb641770f92d8b39046609db360fc457ed74d'],1,1,2,1,,,
03a05bb6a41f44d31685f385f6b4479463f9a34a,"Jump to v6.0.0.dev0 with ""real"" semantic versioning.",Mike Boers,github@mikeboers.com,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-02 22:44:00-04:00,14400,2018-10-03 18:17:12+02:00,-7200,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['958027c09852ac1b1c87d719076c63f67fd2b2cb'],5,25,30,2,,,
2ac7eabd37ad1b05cdd3bfeafdcf8d43a56a6fdc,"Fix AudioFrame docstrings

Fix docstrings for `format` and `layout` so they link correctly.

Remove erroneous comment about `to_ndarray` kwargs.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-03 18:20:45+02:00,-7200,2018-10-03 20:45:13+02:00,-7200,True,False,"['codeccontext.pyx', 'frame.pxd', 'frame.pyx']",['958027c09852ac1b1c87d719076c63f67fd2b2cb'],6,6,12,3,,,
1de99c167e18a2c5f6337fb426ca01f2843ceef1,"Assert that our Sphinx is >= v1.8.

Before that, `:type: Foo` would not link to the Foo class.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-03 14:55:26-04:00,14400,2018-10-03 14:55:26-04:00,14400,True,False,['conf.py'],['2ac7eabd37ad1b05cdd3bfeafdcf8d43a56a6fdc'],0,8,8,1,,,
27055540e26b77ece464f4806f6ea9381c8a6539,"Link to the versioning CSS, and the dropdown is a class so we get them on the top and bottom.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-03 14:39:18-04:00,14400,2018-10-03 14:55:33-04:00,14400,True,False,['layout.html'],['1de99c167e18a2c5f6337fb426ca01f2843ceef1'],1,2,3,1,,,
909a4cd9141baa4386c5c690bf4144e411f156ca,"Stop using deprecated pkt_pts

Only use frame.pts, frame.pkt_pts is obsolete.

Also stop detecting the presence of av_frame_get_best_effort_timestamp,
it's guaranteed to be present now that we require ffmpeg >= 3.0. Not
that we use it anyway..",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-22 01:03:38+02:00,-7200,2018-10-04 00:28:24+02:00,-7200,True,False,"['context.pyx', 'avcodec.pxd', 'avcodec.pyav.h', 'setup.py']",['e3da799f9ac68e606cb98e64fd30bf72b5f6d93a'],23,2,25,4,0.2,0.2,0.0
09492b9e0c991aadf3a84a5a6de91e60b21c51c4,"pts is a signed integer, fix comparison",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-09-22 01:17:15+02:00,-7200,2018-10-04 00:28:24+02:00,-7200,True,False,['fifo.pyx'],['909a4cd9141baa4386c5c690bf4144e411f156ca'],2,2,4,1,,,
e3da799f9ac68e606cb98e64fd30bf72b5f6d93a,Make FFmpeg 3.2 the minimum required version.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-03 18:16:13+02:00,-7200,2018-10-04 00:28:24+02:00,-7200,True,False,"['.travis.yml', 'CHANGELOG.rst', 'installation.rst']",['279e1e67f7eec561b69a4ab108134d2e51d84736'],17,4,21,3,,,
ec510011586abe0832df779202190bd54f815101,"Fix libavformat deprecations

Only use av_iformat_next and av_oformat_next when using FFmpeg < 4.0,
see:

https://github.com/FFmpeg/FFmpeg/blob/ebc3d04b8df4e11b1343090fed1014832d5cf46d/doc/APIchanges#L92

We can also stop detecting and stubbing of these function which have
been present since at least FFmpeg 2.0:

- avformat_alloc_output_context2
- avformat_close_input",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-04 09:21:59+02:00,-7200,2018-10-04 10:33:17+02:00,-7200,True,False,"['format.pyx', 'avformat.pxd', 'avformat.pyav.h', 'setup.py']",['78e2535b7f70460a3a8a5041ec9bb24a85a869c3'],79,47,126,4,1.0,1.0,1.0
3e327923c7642f503e8ce4bda1dc35f61f15e434,"Fix libavcodec deprecations

Only use av_codec_next when using FFmpeg < 4.0, see:

https://github.com/FFmpeg/FFmpeg/blob/ebc3d04b8df4e11b1343090fed1014832d5cf46d/doc/APIchanges#L97

We can also stop renaming AV_CODEC_FLAG_* and AV_CODEC_PROP_*, they have
been around since FFmpeg 2.8.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-04 09:44:40+02:00,-7200,2018-10-04 10:33:23+02:00,-7200,True,False,"['codec.pyx', 'avcodec.pxd', 'avcodec.pyav.h']",['ec510011586abe0832df779202190bd54f815101'],36,21,57,3,1.0,1.0,1.0
f06e3ad7bcc0bef871e012e77a16c1f72bafc369,"Fix libavfilter deprecations

Only use avfilter_next when using FFmpeg < 4.0, see:

https://github.com/FFmpeg/FFmpeg/blob/ebc3d04b8df4e11b1343090fed1014832d5cf46d/doc/APIchanges#L51",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-04 10:43:49+02:00,-7200,2018-10-04 10:44:22+02:00,-7200,True,False,"['filter.pyx', 'avfilter.pxd', 'avfilter.pyav.h']",['3e327923c7642f503e8ce4bda1dc35f61f15e434'],10,25,35,3,1.0,1.0,1.0
58669c12812b71838fcf455f2f7036406876ae6a,"Always use send / receive mechanism for encoding

It has been available since at least FFmpeg 3.1.

Only subtitles require using the legacy APIs, but we don't support
encoding subtitles anyway.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-04 10:54:14+02:00,-7200,2018-10-04 11:10:08+02:00,-7200,True,False,"['codeccontext.pyx', 'context.pxd', 'context.pyx', 'codeccontext.pyx', 'avcodec.pxd']",['78e2535b7f70460a3a8a5041ec9bb24a85a869c3'],93,6,99,5,,,
85b6562c2bb7f640676a0f1b660665af1b4c67a0,"Always use send / recv mechanism for decoding

It has been available since at least FFmpeg 3.1.

For subtitle, we mimick the API.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-04 11:58:50+02:00,-7200,2018-10-04 12:08:20+02:00,-7200,True,False,"['codeccontext.pyx', 'context.pxd', 'context.pyx', 'packet.pyx', 'stream.pyx', 'codeccontext.pyx', 'codeccontext.pyx', 'libav.pxd', 'avcodec.pxd', 'avcodec.pyav.h', 'setup.py', 'test_subtitles.py']",['58669c12812b71838fcf455f2f7036406876ae6a'],168,24,192,12,0.36363636363636365,0.09090909090909091,0.0
99c2bcf66062ef171306e00df5d66014ac559146,"Remove some unused checks

- av_calloc and AV_OPT_TYPE_BOOL are both guaranteed to be present since
  at least FFmpeg 3.0.

- AVFrame.mb_type isn't used anywhere, stop checking for it.

- av_free isn't used anywhere, we always use av_freep",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-04 13:45:23+02:00,-7200,2018-10-04 13:49:34+02:00,-7200,True,False,"['avutil.pxd', 'avutil.pyav.h', 'setup.py']",['f06e3ad7bcc0bef871e012e77a16c1f72bafc369'],69,1,70,3,0.8695652173913043,0.8695652173913043,0.0
c6be18f0d3e8beef023d79facd4f61c82582fbfc,"Wrap av*_register_all in our own function

This allows us to only call the functions which are needed for the
current FFmpeg version.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-04 14:43:07+02:00,-7200,2018-10-04 14:43:07+02:00,-7200,True,False,"['_core.pyx', 'libav.pxd', 'libav.pyav.h', 'avcodec.pxd', 'avdevice.pxd', 'avfilter.pxd', 'avformat.pxd']",['99c2bcf66062ef171306e00df5d66014ac559146'],21,28,49,7,1.0,1.0,1.0
bb9b7af221f4356847be2a03876cd07c570a210a,"Deterministically perform bytes -> unicode decoding

On Python 2, the previous code did not systematically perform the
decoding depending on whether or not an encoding was given.

With this PR we align the Python 2 behaviour on the sane behaviour of
Python 3. This also avoids a compilation warning on Python 3 were we
tested ""unicode is unicode"".",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-04 15:01:20+02:00,-7200,2018-10-04 15:01:20+02:00,-7200,True,False,['utils.pyx'],['78e2535b7f70460a3a8a5041ec9bb24a85a869c3'],7,2,9,1,,,
a0c51ab3c22a46fbb95363b55ce86ee3ed4b3c89,"Remove refcounted_frames

It is only used by the avcodec_decode_(audio4|video2) compatibility wrappers,
which we don't use.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-04 15:17:28+02:00,-7200,2018-10-04 15:17:28+02:00,-7200,True,False,"['context.pyx', 'avcodec.pxd', 'memleak.py']",['85b6562c2bb7f640676a0f1b660665af1b4c67a0'],5,1,6,3,,,
0f0dc124571339d68ebe5c71e5a96596a211cba8,Move pyav_find_output_format into a sidecar file.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-05 14:21:12-04:00,14400,2018-10-05 14:37:21-04:00,14400,True,False,"['.gitignore', 'format-shims.c', 'format.pyx', 'avformat.pxd', 'avformat.pyav.h']",['c6be18f0d3e8beef023d79facd4f61c82582fbfc'],22,29,51,5,,,
f1844eaf3ae47e05a1a80d2f3159bcdd4cbc4ca7,"pyav_(de)muxer_iterate for abstracting (de)muxer iteration.

We want to do as much of the Python manipulation in Cython
as possible, but still keep the abstractions near the modules
they are for.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-06 18:12:20-04:00,14400,2018-10-06 19:15:26-04:00,14400,True,False,"['format-shims.c', 'format.pyx', 'avformat.pxd', 'avformat.pyav.h']",['0f0dc124571339d68ebe5c71e5a96596a211cba8'],48,76,124,4,1.0,1.0,0.0
4f908fdc044a8a9f31b8a3af65411e3319a47e5e,pyav_codec_iterate for abstracting AVCodec iteration.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-06 18:37:35-04:00,14400,2018-10-06 19:17:16-04:00,14400,True,False,"['codec-shims.c', 'codec.pyx', 'avcodec.pyav.h']",['f1844eaf3ae47e05a1a80d2f3159bcdd4cbc4ca7'],19,38,57,3,0.0,0.0,0.0
862173bc3c5ff3d7dcddc03b78350951d6eda478,pyav_filter_iterate to abstract AVFilter iteration.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-06 18:42:19-04:00,14400,2018-10-06 19:18:44-04:00,14400,True,False,"['filter-shims.c', 'filter.pyx', 'avfilter.pxd', 'avfilter.pyav.h']",['4f908fdc044a8a9f31b8a3af65411e3319a47e5e'],22,34,56,4,0.0,0.0,0.0
33737d48accef3d5dac11ed52aa6b0dbeff2489c,Move pyav_register_all into a sidecar file.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-06 18:45:41-04:00,14400,2018-10-06 19:18:46-04:00,14400,True,False,"['_core-shims.c', '_core.pyx', 'libav.pxd', 'libav.pyav.h']",['862173bc3c5ff3d7dcddc03b78350951d6eda478'],28,29,57,4,0.0,0.0,0.0
41a0598a4e7703eff3374d7764d45a56892e5427,Clean up branches and C files less agressively.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-06 19:13:05-04:00,14400,2018-10-06 19:23:12-04:00,14400,True,False,"['Makefile', 'clean-branches']",['5e6976264c8fdeddf65ccc385ad95bc6e8a5f49e'],5,7,12,2,,,
9410b99ec142f09c0580c1543d59d161563f86ac,"Fix const warnings on iterator shims

The current code spews warnings both for old and new FFmpegs. This PR
fixes the warnings by:

- aligning function prototypes on FFmpeg 4.0's (fixes new FFmpegs)
- adding the necessary casts for older FFmpegs",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-07 10:42:09+02:00,-7200,2018-10-07 10:48:54+02:00,-7200,True,False,"['codec-shims.c', 'codec.pyx', 'filter-shims.c', 'filter.pyx', 'format-shims.c', 'format.pyx']",['41a0598a4e7703eff3374d7764d45a56892e5427'],24,24,48,6,,,
350c3f569aaf221bb506d39a7b34ddc5fc4e49d2,"Revisit discussion of PyAV goals, supported versions, and compatibility.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-07 10:31:17-04:00,14400,2018-10-07 10:31:17-04:00,14400,True,False,['HACKING.rst'],['9410b99ec142f09c0580c1543d59d161563f86ac'],43,23,66,1,,,
9185d2c50db88b7052d9971e5b22ce1c7941ba66,"Eliminate ""reflect"" command (fixes: #416)

We no longer perform any kind of ""reflection"", we simply use the FFmpeg
library versions at compile time.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-08 14:48:16+02:00,-7200,2018-10-08 16:57:41+02:00,-7200,True,False,"['activate.sh', 'build', 'setup.py']",['350c3f569aaf221bb506d39a7b34ddc5fc4e49d2'],249,7,256,3,0.8051948051948052,0.8051948051948052,0.18831168831168832
627ae860cab51f42c4afee57cd2e4ba86de6ff95,"Add support for more ndarray <-> VideoFrame conversions

We support round-tripping:

- 24-bit RGB
- 32-bit RGBA (new)
- 8-bit grayscale (new)
- yuv420p (new)
- yuyv422 (new)

We drop the gray16 conversion code as it was not handling byte order
correctly, and could not be triggered anyway due to an impossible test:

  frame.format.name == ('gray16le', 'gray16be')

We also support creating VideoFrame with a user-specified alignment.
This is required in order to test the conversions work correctly for
frames with an alignment other than 1. Such frames are often output by
decoders for optimization reasons.

Merges #415.",Jeremy Lainé,jeremy.laine@m4x.org,Mike Boers,github@mikeboers.com,2018-10-06 13:46:16+02:00,-7200,2018-10-09 07:44:42-04:00,14400,True,False,"['frame.pxd', 'frame.pyx', 'test_videoframe.py']",['350c3f569aaf221bb506d39a7b34ddc5fc4e49d2'],25,165,190,3,1.0,1.0,1.0
8abe3ad490ebf2a1e8d87e2cde3103e7feba840c,"Fix constness warnings for AVOption

All AVOption manipulation should be done on const pointers, including
the AVClass.option definition, see:

https://www.ffmpeg.org/doxygen/4.0/structAVClass.html

Merges #419.",Jeremy Lainé,jeremy.laine@m4x.org,Mike Boers,github@mikeboers.com,2018-10-08 17:11:21+02:00,-7200,2018-10-09 07:45:09-04:00,14400,True,False,"['descriptor.pyx', 'option.pxd', 'option.pyx', 'avutil.pxd']",['627ae860cab51f42c4afee57cd2e4ba86de6ff95'],8,8,16,4,,,
aec02eb7a122cb4777202d9af11db9fc2f247411,"Prune some unreachable code

The AVPacket.copy() method did nothing useful.

Merges #420.",Jeremy Lainé,jeremy.laine@m4x.org,Mike Boers,github@mikeboers.com,2018-10-08 17:16:40+02:00,-7200,2018-10-09 07:45:33-04:00,14400,True,False,"['packet.pyx', 'utils.pyx']",['8abe3ad490ebf2a1e8d87e2cde3103e7feba840c'],11,0,11,2,,,
15fa882f7dd2a7c8739bce5908e4981cf9868dcf,"Fix buffer_size calculations for AudioFrame planes

This PR fixes several misunderstandings concerning AudioFrame buffer
sizes:

- for audio, ""line size"" and ""buffer size"" are equivalent, as there is
only ever a single ""line"".

- only linesizes[0] is ever populated, and it gives you the buffer size
of each plane.

- we do not need to recalculate anything upon putting frames into an
AudioFrame, the buffer size does not change.

- ""align"" is not a boolean, it can be any power of two.

We stop carrying around ""align"", ""nb_channels"" and ""nb_planes"", they are
not needed.

Merges #421.",Jeremy Lainé,jeremy.laine@m4x.org,Mike Boers,github@mikeboers.com,2018-10-09 09:18:09+02:00,-7200,2018-10-09 07:46:39-04:00,14400,True,False,"['frame.pxd', 'frame.pyx', 'plane.pyx', 'resampler.pyx', 'plane.pyx', 'plane.pyx', 'test_audioframe.py']",['aec02eb7a122cb4777202d9af11db9fc2f247411'],51,52,103,7,1.0,1.0,1.0
93e56148b094b10cf3d97b7168958cfe48ef1d06,"Fix incorrect row/column manipulation in useful_array

Commit 627ae860cab51f42c4afee57cd2e4ba86de6ff95 was not quite right,
when extracting the useful part of an array it was dropping an incorrect
part of the picture.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-10 08:52:59+02:00,-7200,2018-10-10 08:58:59+02:00,-7200,True,False,['frame.pyx'],['15fa882f7dd2a7c8739bce5908e4981cf9868dcf'],1,1,2,1,,,
ad15d97ddf194af0a009f78607b92bd22fc763f5,"Use av_image_alloc to allocate image buffer

It enforces alignment constraints on plane pointers, which keeps image
manipulations sane. We also ensure that the output buffer used by
sws_scale is at least 8-byte aligned, or it bombs due to out of bounds
writes.

Ideally, we should enforce a minimum alignment of 8-bytes for all
VideoFrames we create, but we need to fix to_image and from_image first.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-11 01:33:09+02:00,-7200,2018-10-11 01:37:09+02:00,-7200,True,False,"['frame.pyx', 'avutil.pxd', 'test_videoframe.py']",['93e56148b094b10cf3d97b7168958cfe48ef1d06'],33,34,67,3,1.0,1.0,1.0
e4000301b6812fb3ede9df9bc11b7551f50ec9fe,"Fix VideoFrame.to_image / .from_image alignment

The previous implementation of .to_image() only worked if the
VideoFrame's line size matched the image width.

We also ensure VideoFrame we create are always 8-byte aligned.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-11 10:52:44+02:00,-7200,2018-10-11 14:21:40+02:00,-7200,True,False,"['frame.pxd', 'frame.pyx', 'test_videoframe.py']",['ad15d97ddf194af0a009f78607b92bd22fc763f5'],54,102,156,3,0.0,0.0,1.0
304b6f9fcb24156a7ef7c7445dd573fb3f74e949,"Don't store reference to ContainerProxy in CodecContext

CodecContext is able to operate independently from the container, so
don't artificially introduce a reference cycle. All we care about is
""was the AVCodecContext created by us"".",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-12 13:45:08+02:00,-7200,2018-10-12 13:54:09+02:00,-7200,True,False,"['context.pxd', 'context.pyx', 'stream.pyx']",['c9557b00a81fbafafead2fadd57224746f4c4dbd'],9,8,17,3,,,
f51006cbff1032ada279cdadb38b4fa1c0ee8d7e,Remove VideoFrame.to_qimage method (fixes: #424),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-12 18:04:04+02:00,-7200,2018-10-12 18:04:04+02:00,-7200,True,False,"['CHANGELOG.rst', 'frame.pyx']",['304b6f9fcb24156a7ef7c7445dd573fb3f74e949'],17,5,22,2,,,
387c339dc187506f1543eb313401a73317faeeff,Add some missing CHANGELOG entries.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-12 18:16:46+02:00,-7200,2018-10-12 18:24:53+02:00,-7200,True,False,['CHANGELOG.rst'],['f51006cbff1032ada279cdadb38b4fa1c0ee8d7e'],0,10,10,1,,,
3710a9a8fb49ef5b0c130fd4849b59e7dc1c9bba,"Do not call avcodec_get_context_defaults3 ourselves

We never need to call avcodec_get_context_defaults3 ourselves,
calling avcodec_alloc_context3 already takes care of it. If we do call
it ourselves again, we get a memory leak since it malloc's some memory
for private structures.

See discussion in issue #427.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-13 01:42:58+02:00,-7200,2018-10-13 01:46:51+02:00,-7200,True,False,"['context.pyx', 'output.pyx', 'avcodec.pxd']",['387c339dc187506f1543eb313401a73317faeeff'],10,1,11,3,,,
fc36ca47bd7230f6f2b4861a4c598fb9ff66e519,"Ensure OutputContainer.close is called at destruction (fixes #427)

Cython classes use __dealloc__ and not __del__ for their destructors.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-13 01:49:26+02:00,-7200,2018-10-13 10:19:31+02:00,-7200,True,False,"['CHANGELOG.rst', 'output.pyx']",['3710a9a8fb49ef5b0c130fd4849b59e7dc1c9bba'],1,3,4,2,,,
4cf397d4bbfb711fb2967fa2f56ba3bf0940d1ac,"Add more AudioFrame <-> ndarray conversions

We now support round-tripping the following formats:

- dbl (new)
- dblp (new)
- flt (new)
- fltp
- s16 (new)
- s16p
- s32 (new)
- s32p
- u8 (new)
- u8p (new)",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-09 16:07:37+02:00,-7200,2018-10-13 12:25:40+02:00,-7200,True,False,"['CHANGELOG.rst', 'frame.pyx', 'test_audioframe.py']",['fc36ca47bd7230f6f2b4861a4c598fb9ff66e519'],8,141,149,3,0.6,1.0,1.0
b4461ddfd9c429173ea26d7fec287525da871434,"Fix memory leak in OutputContainer.mux_one (fixes: #431)

av_packet_clone both allocates an AVPacket structure and makes a new
reference to the underlying buffer. av_interleaved_write_frame only calls
av_packet_unref when it's done with the packet, it doesn't actually free it.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-13 10:20:43+02:00,-7200,2018-10-13 14:47:36+02:00,-7200,True,False,"['CHANGELOG.rst', 'output.pyx', 'avcodec.pxd']",['4cf397d4bbfb711fb2967fa2f56ba3bf0940d1ac'],5,6,11,3,,,
17b9b113da1498199c44d5efd4db88df3429bc03,"Fix memory leak with Python I/O (fixes: #317)

When using ""custom I/O"", avformat_close_input will not call avio_close
so it is up to us to clean up.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-13 15:30:04+02:00,-7200,2018-10-13 17:34:18+02:00,-7200,True,False,"['CHANGELOG.rst', 'core.pyx']",['b4461ddfd9c429173ea26d7fec287525da871434'],10,6,16,2,,,
992387b8cd067e3c452b7e8b4e6501502b273952,"Add some docstrings for Packet.

We also add a big fat warning about why decode_one is dangerous.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-14 11:12:27+02:00,-7200,2018-10-14 11:15:54+02:00,-7200,True,False,['packet.pyx'],['17b9b113da1498199c44d5efd4db88df3429bc03'],7,43,50,1,,,
8bd77b3bc7c1dc5ba81f12f7aab01be9dd3a1312,"Add docstrings for Stream properties and methods.

For consistency with other APIs we make `start_time` return None if
unknown.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-14 10:40:28+02:00,-7200,2018-10-14 11:17:33+02:00,-7200,True,False,"['streams.pyx', 'stream.pyx', 'stream.rst', 'test_file_probing.py']",['992387b8cd067e3c452b7e8b4e6501502b273952'],21,98,119,4,0.0,1.0,1.0
38fe21f25259a6488eeba99431911ffbdfba42c6,"Add/reformat a pile of the changelog, and update our PyPI classifiers.

Lets call ourselves ""stable""!",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-13 15:08:30-04:00,14400,2018-10-14 12:10:05-04:00,14400,True,False,"['CHANGELOG.rst', 'setup.py']",['8bd77b3bc7c1dc5ba81f12f7aab01be9dd3a1312'],26,46,72,2,,,
e7b51f08c16acbab2a2351f64abcda01cbd5a713,Method deprecation.,Mike Boers,github@mikeboers.com,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-14 12:47:34-04:00,14400,2018-10-14 22:38:40+02:00,-7200,True,False,"['deprecation.py', 'test_deprecation.py']",['38fe21f25259a6488eeba99431911ffbdfba42c6'],5,41,46,2,1.0,1.0,0.6666666666666666
2eb1d618367fb51cc6007aea980898917104507b,Issue a deprecation warning of Packet.decode_one at runtime.,Mike Boers,github@mikeboers.com,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-14 12:50:07-04:00,14400,2018-10-14 22:38:46+02:00,-7200,True,False,['packet.pyx'],['e7b51f08c16acbab2a2351f64abcda01cbd5a713'],0,3,3,1,,,
1164d80d8e3e841f7908665044597451f74f669d,Call av_interleaved_write_frame with the GIL released.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-14 21:50:45+02:00,-7200,2018-10-14 22:38:46+02:00,-7200,True,False,"['CHANGELOG.rst', 'output.pyx']",['2eb1d618367fb51cc6007aea980898917104507b'],1,5,6,2,,,
1e7fd5fdef409e6bce0e0af5d7cd19647561db28,"Remove reference to libavresample from the docs.

We only support libswresample, so don't mention libavresample anymore.

Also fix a minor typo in libswscale's name.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-14 22:46:16+02:00,-7200,2018-10-14 22:46:16+02:00,-7200,True,False,['index.rst'],['1164d80d8e3e841f7908665044597451f74f669d'],2,2,4,1,,,
b39d2f0ae25799f12a725d67caca8eddcbf3d230,Update documentation link in setup.cfg,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-10-17 18:33:19+02:00,-7200,2018-10-17 18:33:19+02:00,-7200,True,False,['setup.cfg'],['1e7fd5fdef409e6bce0e0af5d7cd19647561db28'],1,1,2,1,,,
9c87fd9737bc46faf10d52a0a78b6fec0376073d,Release v6.0.0.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-13 15:08:38-04:00,14400,2018-10-17 14:17:09-04:00,14400,True,False,['VERSION.txt'],['b39d2f0ae25799f12a725d67caca8eddcbf3d230'],1,1,2,1,,,
88dff2cae78e1ce000d9f730dd2a3d9bd4dc9e54,Onto the next dev version.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-10-17 14:18:21-04:00,14400,2018-10-17 14:18:21-04:00,14400,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['9c87fd9737bc46faf10d52a0a78b6fec0376073d'],1,5,6,2,,,
ed836abeaa09c5dfbc71c6e55f6373c7a75cbc7c,"Fix installation docs for Ubuntu

As pointed out in #444 the installation docs contained erroneous
information about the FFmpeg version in Ubuntu.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-11-06 10:12:58+01:00,-3600,2018-11-06 10:12:58+01:00,-3600,True,False,['installation.rst'],['88dff2cae78e1ce000d9f730dd2a3d9bd4dc9e54'],8,8,16,1,,,
74cedc7cc97cb89687dc178d462ab5630e108fe9,"Avoid infinite loop in Stream.__getattr__ (fixes: #450)

For unsupported codecs, querying `stream.type` leads to an infinite loop
as `Stream.__getattr__` will look into `Stream.codec_context` (which
does not exist), in turn calling `Stream.__getattr__` again.

In order to at least be able to retrieve the stream type, we add an
explicit `Stream.type` property which does not rely on there being a
wrapped CodecContext.

NOTE: further work would be to eliminate the __getattr__ magic
completely. It is very hard for users to know what properties exist and
where they are coming from.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-11-07 10:04:23+01:00,-3600,2018-11-07 10:06:58+01:00,-3600,True,False,['stream.pyx'],['ed836abeaa09c5dfbc71c6e55f6373c7a75cbc7c'],0,16,16,1,,,
e25b14a0029489d6dea6049dc846600c634fe830,Correctly handle Python I/O with no 'seek' method,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-11-06 23:48:36+01:00,-3600,2018-11-07 10:30:13+01:00,-3600,True,False,"['core.pyx', 'test_python_io.py']",['74cedc7cc97cb89687dc178d462ab5630e108fe9'],2,35,37,2,1.0,1.0,1.0
ecfd3cdc3e340f991a88b4691fd0aa0fc074da15,"Assert PyAV is built against a compatible FFmpeg (fixes: #401)

We explicitly fail the build as early as possible if a build is
attempted against an unsupported FFmpeg version. This gives users a
clear indication of what is wrong instead of triggering obscure
compiler errors about missing functions or struct members.

We also remove the reference to PYAV_HAVE_FFMPEG which is not defined
anymore.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-11-06 10:02:55+01:00,-3600,2018-11-07 10:31:05+01:00,-3600,True,False,['avcodec.pyav.h'],['e25b14a0029489d6dea6049dc846600c634fe830'],7,2,9,1,,,
5a9951e0b6ac064d83097a7b46a4d34ee0003754,Add a test for probing data + subtitle streams,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-11-07 11:28:00+01:00,-3600,2018-11-07 13:53:47+01:00,-3600,True,False,['test_file_probing.py'],['ecfd3cdc3e340f991a88b4691fd0aa0fc074da15'],7,120,127,1,0.03409090909090909,1.0,1.0
9bf34831379252f42649f0a21cea414e421d245a,"Remove DataStream `codec` and `type` properties

It is no longer necessary to provide a bogus `codec` property, the
infinite loop which it avoided is no longer present.

The base Stream class now provides a `type` property which does not
depend on having a CodecContext wrapper.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-11-07 10:38:21+01:00,-3600,2018-11-07 13:53:47+01:00,-3600,True,False,"['stream.pyx', 'stream.pyx']",['5a9951e0b6ac064d83097a7b46a4d34ee0003754'],12,2,14,2,,,
a04c25cff712e95dc0d4d8a377ce9d9a5310f884,"Remove DataStream.seek override (fixes: #299)

Its signature does not match Stream.seek, leading to the bug mentioned
in #299.

Furthermore, this method does nothing, where as the base Stream.seek
should work for any kind of stream.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-11-07 13:55:37+01:00,-3600,2018-11-07 13:55:37+01:00,-3600,True,False,['stream.pyx'],['9bf34831379252f42649f0a21cea414e421d245a'],3,0,3,1,,,
fecdd07237638a62a43c8836f0063fa9092f9558,"Add a note that PIL/Pillow and Numpy are required for the functions that use them.

Fixes #91.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-07 10:21:01-05:00,18000,2018-11-07 11:49:12-05:00,18000,True,False,"['frame.pyx', 'frame.pyx']",['a04c25cff712e95dc0d4d8a377ce9d9a5310f884'],5,12,17,2,,,
0216b328a2996db9583d2ce99495dd065657aba8,Expand on the point of PyAV.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-07 11:11:38-05:00,18000,2018-11-07 11:49:12-05:00,18000,True,False,"['README.md', 'index.rst']",['fecdd07237638a62a43c8836f0063fa9092f9558'],2,13,15,2,,,
ceb7cec3180878d863468a032456e4f6f2aa0a8f,Fix the setup.py description for the PyPI.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-07 11:16:48-05:00,18000,2018-11-07 11:49:12-05:00,18000,True,False,['setup.py'],['0216b328a2996db9583d2ce99495dd065657aba8'],1,1,2,1,,,
e6dc16eeff59106f968f2cd0f947040bd32fae26,Include the codec context enums in the docs.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-07 10:31:21-05:00,18000,2018-11-07 11:49:12-05:00,18000,True,False,"['context.pyx', 'codec.rst']",['ceb7cec3180878d863468a032456e4f6f2aa0a8f'],0,8,8,2,,,
2b2854489b69e41ee2c8cf0fd3bddc1afd5d6d7f,"Move everything from examples into scratchpad.

We're going to treat `examples` as user-runnable examples that demonstrate
small things. The things that are in there are not quite that.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-07 16:27:52-05:00,18000,2018-11-07 16:27:52-05:00,18000,True,False,"['__init__.py', 'audio.py', 'audio_player.py', 'average.py', 'decode.py', 'decode_threads.py', 'dump_format.py', 'encode.py', 'encode_frames.py', 'experimental.py', 'filmstrip.py', 'frame_seek_example.py', 'gen_rgb_rotate.py', 'glproxy.py', 'memleak.py', 'merge-filmstrip.py', 'player.py', 'qtproxy.py', 'resource_use.py', 'save_frames.py', 'save_subtitles.py', 'second_seek_example.py', 'show_frames_opencv.py']",['6638796a2474d01118cd2f30a5339c09bf4a9a6b'],122,0,122,23,0.3829787234042553,0.3829787234042553,0.0
998e495f399913f57ab1d116bbe5c8b921f6b598,av.datasets to download files from a couple different datasets.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-07 16:28:29-05:00,18000,2018-11-07 16:43:37-05:00,18000,True,False,"['datasets.py', 'conf.py', 'save_frames.py', 'common.py']",['2b2854489b69e41ee2c8cf0fd3bddc1afd5d6d7f'],15,154,169,4,0.0,0.0,1.0
85c174690cadb0b50f5f86c1354db5b27f098b77,Start the docs cookbook.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-07 16:44:02-05:00,18000,2018-11-07 16:48:12-05:00,18000,True,False,"['_index.rst', 'basics.rst', 'numpy.rst', '_index.rst', 'generating_from_numpy.rst', 'index.rst', 'save_keyframes.py', 'generate_video.py', 'save_frames.py']",['998e495f399913f57ab1d116bbe5c8b921f6b598'],93,101,194,9,,,
d95fd27d6943915d3d39315f7f4a3d046480ae26,Remuxing and thread type examples for the cookbook.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-07 17:16:42-05:00,18000,2018-11-07 17:16:42-05:00,18000,True,False,"['basics.rst', 'remux.py', 'save_keyframes.py', 'thread_type.py']",['85c174690cadb0b50f5f86c1354db5b27f098b77'],1,90,91,4,,,
276c1c585648ee18a63db53951081a1c40a97e80,Numpy barcode example.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-07 17:47:12-05:00,18000,2018-11-07 17:47:12-05:00,18000,True,False,"['barcode.jpg', 'numpy.rst', 'barcode.py']",['d95fd27d6943915d3d39315f7f4a3d046480ae26'],0,48,48,3,,,
5b7441e782c4f0335c510f9aa831e29d253a8f4d,Remove old scratchpad.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-07 17:49:31-05:00,18000,2018-11-07 17:49:31-05:00,18000,True,False,"['email-2018-09-07.py', 'gen_rgb_rotate.py', 'parse.py', 'save_frames.py', 'test.pxd', 'walkprobe.py']",['276c1c585648ee18a63db53951081a1c40a97e80'],235,0,235,6,0.29850746268656714,0.29850746268656714,0.08955223880597014
28f3b4d632fa1d98b024be2e908a51d487d63101,"Replace path separators when constructing dataset item path

Our dataset items are referenced using forward slashes, but Windows
expects back slashes for paths.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-11-08 08:20:23+01:00,-3600,2018-11-08 08:42:37+01:00,-3600,True,False,['datasets.py'],['08949352bde5a9b05c95ecc0fd0aad6aa701c25f'],5,4,9,1,1.0,1.0,1.0
b44e377e5fe58118f11df37ee8f107291649bf1a,Lock down Cython language level (fixes: #443),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-11-08 00:31:23+01:00,-3600,2018-11-08 10:42:37+01:00,-3600,True,False,['setup.py'],['28f3b4d632fa1d98b024be2e908a51d487d63101'],0,1,1,1,0.0,1.0,1.0
5122134363a3ed7b51de9c75554b6be716daee6c,"Cleanup tests and examples

- we don't need nose's SkipTest, unittest's is fine since Python 2.7
- remove print statements
- eliminate star imports
- run flake8 and isort on examples and tests",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-11-08 09:01:33+01:00,-3600,2018-11-08 15:17:19+01:00,-3600,True,False,"['HACKING.rst', 'appveyor.yml', '__init__.py', 'remux.py', 'save_keyframes.py', 'thread_type.py', 'barcode.py', 'generate_video.py', 'test', 'setup.cfg', 'common.py', 'requirements.txt', 'test_audiofifo.py', 'test_audioformat.py', 'test_audioframe.py', 'test_audiolayout.py', 'test_audioresampler.py', 'test_codec.py', 'test_codec_context.py', 'test_container.py', 'test_containerformat.py', 'test_decode.py', 'test_deprecation.py', 'test_dictionary.py', 'test_doctests.py', 'test_encode.py', 'test_enums.py', 'test_errors.py', 'test_file_probing.py', 'test_filters.py', 'test_logging.py', 'test_options.py', 'test_python_io.py', 'test_seek.py', 'test_streams.py', 'test_subtitles.py', 'test_videoformat.py', 'test_videoframe.py']",['b44e377e5fe58118f11df37ee8f107291649bf1a'],191,168,359,38,0.16666666666666666,1.0,0.5
3c7d6c7f3d92d60d3f6de6531dae6f34d65ac4f1,"Container.seek(time, stream=foo) for specifying time_base of a stream.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-08 10:32:39-05:00,18000,2018-11-08 11:13:49-05:00,18000,True,False,"['CHANGELOG.rst', 'input.pyx', 'stream.pyx', 'test_seek.py']",['5122134363a3ed7b51de9c75554b6be716daee6c'],6,26,32,4,0.25,0.25,1.0
595000fed6bc41c58dcee23013e370f11e68cd26,Update metadata before release.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-08 11:11:16-05:00,18000,2018-11-08 11:15:22-05:00,18000,True,False,"['AUTHORS.rst', 'CHANGELOG.rst']",['3c7d6c7f3d92d60d3f6de6531dae6f34d65ac4f1'],37,53,90,2,,,
b4a531a3e012fa2c6e9d26758f6cbd1442db107d,Release v6.1.0.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-08 11:16:14-05:00,18000,2018-11-08 11:16:14-05:00,18000,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['595000fed6bc41c58dcee23013e370f11e68cd26'],3,3,6,2,,,
8540b365046b4a74a7cb2a56e49d06a0f50b00c3,Bump to next dev version.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-08 12:48:02-05:00,18000,2018-11-08 12:48:02-05:00,18000,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['8529d72b54a14e462ec01ebd4f0e169c39792200'],1,5,6,2,,,
bf27ef55c939e5f4ca88bc291c2b7f8f9205806b,"Fix error message in Buffer.update

Since we compare `source.length` to `size`, this is what we should
output.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-12-02 16:11:08+01:00,-3600,2018-12-02 16:11:34+01:00,-3600,True,False,['buffer.pyx'],['8540b365046b4a74a7cb2a56e49d06a0f50b00c3'],1,1,2,1,,,
68b5a3530f4994b3b396796823f32d226255fecd,Fix some signedness issues with range iterations,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-12-18 12:52:45+01:00,-3600,2018-12-18 13:02:15+01:00,-3600,True,False,"['core.pyx', 'input.pyx', 'link.pyx']",['bf27ef55c939e5f4ca88bc291c2b7f8f9205806b'],5,5,10,3,,,
e91d938ea1bc11df6c36e209019965c78414629a,Fix some signedness warnings,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-12-18 13:22:55+01:00,-3600,2018-12-18 16:28:59+01:00,-3600,True,False,"['fifo.pxd', 'fifo.pyx', 'resampler.pxd', 'resampler.pyx', 'output.pyx', 'subtitle.pyx', 'frame.pxd', 'frame.pyx']",['68b5a3530f4994b3b396796823f32d226255fecd'],13,13,26,8,,,
ea27a69eace9f83b894cf47b023302d7d170486c,Account for alignment in VideoFrame.from_ndarray (fixes: #478),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-12-18 14:19:45+01:00,-3600,2018-12-18 16:28:59+01:00,-3600,True,False,"['frame.pyx', 'test_videoframe.py']",['e91d938ea1bc11df6c36e209019965c78414629a'],37,56,93,2,1.0,1.0,1.0
de1ab8a09aabb3d5d5ff1434c14942aeba12e0c1,"[travis] use homebrew addon instead of calling homebrew ourselves

This should speed up run times.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-12-20 12:33:38+01:00,-3600,2018-12-20 13:10:22+01:00,-3600,True,False,"['.travis.yml', 'travis-setup']",['ea27a69eace9f83b894cf47b023302d7d170486c'],27,16,43,2,,,
c9b4d29fd64aa6389af1bea371300fb844d81452,Mention requirements for building FFmpeg from source on Ubuntu,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2018-12-30 09:12:14+01:00,-3600,2018-12-30 09:12:14+01:00,-3600,True,False,['installation.rst'],['de1ab8a09aabb3d5d5ff1434c14942aeba12e0c1'],0,17,17,1,,,
7690890fd4f6ad053e032aeb801f43ed2279e0e8,Update changelog with everything in develop.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-01-23 13:54:06-05:00,18000,2019-01-23 13:54:06-05:00,18000,True,False,['CHANGELOG.rst'],['c9b4d29fd64aa6389af1bea371300fb844d81452'],0,9,9,1,,,
97aa33fafa4667990815cdb85e99a8f4e8c97298,Release v6.1.1.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-01-23 13:55:20-05:00,18000,2019-01-23 13:55:20-05:00,18000,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['7690890fd4f6ad053e032aeb801f43ed2279e0e8'],1,4,5,2,,,
ce938b428ec6d0de282e57f5dfe4181cb5033711,Bump to next development version.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-01-23 14:02:36-05:00,18000,2019-01-23 14:02:36-05:00,18000,True,False,['VERSION.txt'],['88ea4a99dd902f60374954e572324c26b5426268'],1,1,2,1,,,
1df181f3c3380bda78a7a12c1aab1097675bff5a,"Fix numpy deprecation warning in AudioFrame.to_ndarray

numpy >= 1.16 no longer accepts iterables for numpy.vstack, so pass a
list instead.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-01-23 21:48:56+01:00,-3600,2019-01-23 21:49:33+01:00,-3600,True,False,"['CHANGELOG.rst', 'frame.pyx']",['ce938b428ec6d0de282e57f5dfe4181cb5033711'],1,9,10,2,,,
dce21c7c8c25a8bc8dfaecd5f59b1e1d56801b74,Release v6.1.2.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-01-23 16:59:59-05:00,18000,2019-01-23 16:59:59-05:00,18000,True,False,['VERSION.txt'],['1df181f3c3380bda78a7a12c1aab1097675bff5a'],1,1,2,1,,,
4b57289cc544652e6e46410334f159af86b2aa63,Bump to next development version.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-01-23 17:03:26-05:00,18000,2019-01-23 17:03:26-05:00,18000,True,False,['VERSION.txt'],['db30136b75e63d97cb8cb1a2e9ea4ef7ff777e2d'],1,1,2,1,,,
cab5649c5c3080d6156be0b5eb9cb1839002f6aa,"Enable flake8/isort in test suite.

They run in their own Travis runs.",Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-04-03 13:58:28-04:00,14400,2019-04-03 14:12:36-04:00,14400,True,False,"['.travis.yml', 'Makefile', 'build', 'build-deps', 'test', 'setup.cfg']",['4b57289cc544652e6e46410334f159af86b2aa63'],5,59,64,6,,,
7621d32329729fdc0186ec77a2122240f2ebdf6e,Enforce consistent style using flake8,Jeremy Lainé,jeremy.laine@m4x.org,Mike Boers,git@mikeboers.com,2019-04-02 08:13:11+02:00,-7200,2019-04-03 14:12:40-04:00,14400,True,False,"['codeccontext.pyx', 'fifo.pyx', 'frame.pyx', 'layout.pyx', 'resampler.pyx', 'stream.pxd', 'buffer.pyx', 'codec.pyx', 'context.pyx', 'core.pyx', 'input.pyx', 'output.pxd', 'output.pyx', 'streams.pyx', 'stream.pxd', 'datasets.py', 'deprecation.py', 'descriptor.pxd', 'enums.pxd', 'enums.pyx', 'context.pxd', 'context.pyx', 'filter.pyx', 'link.pyx', 'format.pxd', 'format.pyx', 'frame.pyx', 'logging.pyx', 'option.pyx', 'packet.pxd', 'packet.pyx', 'plane.pxd', 'plane.pyx', 'stream.pyx', 'subtitle.pyx', 'utils.pxd', 'utils.pyx', 'codeccontext.pyx', 'format.pyx', 'frame.pyx', 'reformatter.pyx']",['cab5649c5c3080d6156be0b5eb9cb1839002f6aa'],144,155,299,41,,,
954ada184a54a2b2918dad6dab8dc13f7e82b895,Enforce consistent style using isort.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-04-03 10:42:26-04:00,14400,2019-04-03 14:12:40-04:00,14400,True,False,"['remux.py', 'save_keyframes.py', 'thread_type.py', 'barcode.py', 'generate_video.py', 'common.py', 'test_audioformat.py', 'test_codec.py', 'test_container.py', 'test_doctests.py', 'test_encode.py', 'test_enums.py', 'test_file_probing.py', 'test_python_io.py']",['7621d32329729fdc0186ec77a2122240f2ebdf6e'],0,14,14,14,,,
e3bf437a65a45f463b239bf485dff14f56c1a372,"Remove ContainerProxy.

This was a layer that was once required for garbage collection due to the
cyclic relationships between containers and streams. Newer Cythons seem to deal
with it better.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-08 08:54:38-05:00,18000,2019-04-04 11:19:07-04:00,14400,True,False,"['core.pxd', 'core.pyx', 'input.pxd', 'input.pyx', 'output.pyx', 'pyio.pyx', 'stream.pxd', 'stream.pyx', 'container-gc.py']",['8db307bf683e97402904ac5d9ca43b7371c5f141'],185,188,373,9,1.0,1.0,1.0
9414187088b9b8dbaa180cfe1db6ceba243184ea,[travis] add ffmpeg 4.1 to build matrix,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-04-13 00:19:30+02:00,-7200,2019-04-13 08:17:13+02:00,-7200,True,False,['.travis.yml'],['fb5c44885c1a9fe169459e8dea92beb36404a6c3'],1,10,11,1,,,
03d9b78a7117e443e39fbff1daeaf9995899e15b,Make it possible to close input container,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-01 16:07:36+02:00,-7200,2019-05-01 16:40:36+02:00,-7200,True,False,"['core.pyx', 'input.pyx', 'output.pyx']",['9414187088b9b8dbaa180cfe1db6ceba243184ea'],8,8,16,3,,,
06b10f24c787d18185aca56de026b688e0447d47,"Stop using nose to run tests

Vanilla ""unittest"" is good enough since Python 2.7 / 3.2.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-04-29 10:42:14+02:00,-7200,2019-05-02 14:05:42+02:00,-7200,True,False,"['appveyor.yml', 'setup.cfg', 'setup.py', 'requirements.txt']",['03d9b78a7117e443e39fbff1daeaf9995899e15b'],7,2,9,4,,,
fe1c3ba61ed743852fdec2ecf50e3f325ceb5244,[appveyor] add Python 3.7 to build matrix,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-04-13 10:28:13+02:00,-7200,2019-05-02 17:53:28+02:00,-7200,True,False,['appveyor.yml'],['06b10f24c787d18185aca56de026b688e0447d47'],0,14,14,1,,,
673f072e6a8552b6c5c8697d9e2d47b65ea9dc34,"Raise video frame alignment to 16-bytes

This eliminates a warning when using swscale on an SSE2 capable CPU:

Warning: data is not aligned! This can lead to a speed loss",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-02 18:40:25+02:00,-7200,2019-05-02 18:40:25+02:00,-7200,True,False,['frame.pyx'],['fe1c3ba61ed743852fdec2ecf50e3f325ceb5244'],6,3,9,1,,,
21388b7a678bd68633cf4d580df8b7295da1722c,"Make input/output buffer size configurable

This is useful when working with file-like objects that go to
Amazon S3, because it makes it possible to reduce the amount of
requests.",mephi42,mephi42@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2019-04-28 20:38:38+02:00,-7200,2019-05-03 21:48:59+02:00,-7200,True,False,"['core.pxd', 'core.pyx']",['673f072e6a8552b6c5c8697d9e2d47b65ea9dc34'],9,15,24,2,,,
bc41dff72a0d7074302d354729553582a26c3915,"Ensure audio output gets flushed when using a FIFO (fixes: #511)

When flushing an AudioCodecContext, if a FIFO is used we need to add a
None frame to the output of AudioFifo.read_many to preserve the flushing
behaviour.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-05 11:10:44+02:00,-7200,2019-05-05 11:15:18+02:00,-7200,True,False,['codeccontext.pyx'],['21388b7a678bd68633cf4d580df8b7295da1722c'],1,2,3,1,,,
9bda7d886fe42afe8cfa03a0a08747e36d7c1e5c,"Allow av.open to be used as a context manager

This allows us to do:

    with av.open('some_file.mp4') as container:
        ...",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-05 14:15:13+02:00,-7200,2019-05-05 16:52:41+02:00,-7200,True,False,"['core.pyx', 'test_container.py']",['bc41dff72a0d7074302d354729553582a26c3915'],1,12,13,2,1.0,1.0,1.0
9053bfee69e52521ba58aa1bb44509e7338254cb,Mention av.open supports file-like objects (fixes: #55),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-06 00:01:38+02:00,-7200,2019-05-06 00:01:38+02:00,-7200,True,False,['core.pyx'],['9bda7d886fe42afe8cfa03a0a08747e36d7c1e5c'],1,1,2,1,,,
b5db59bb39061ac099423425d685336c10c7385e,Add a link to the FFmpeg website about using devices (fixes: #92),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-06 00:07:10+02:00,-7200,2019-05-06 00:07:10+02:00,-7200,True,False,['core.pyx'],['9053bfee69e52521ba58aa1bb44509e7338254cb'],0,2,2,1,,,
f2e255b50cb8f8880f81b85622899f0e3a8d1ac7,"Avoid deadlocking the log handler

Occasionally the logging handler locks up, which can be reproduced by
repeatedly running the test suite. Moving log emission out of the
skip_lock context manager seems to fix the problem.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-06 20:43:31+02:00,-7200,2019-05-07 01:47:22+02:00,-7200,True,False,['logging.pyx'],['b5db59bb39061ac099423425d685336c10c7385e'],6,7,13,1,,,
6babc770bcdb429812c551cb04e24498b1bfd819,"Don't call Python methods when deallocating a container

The Cython documentation indicate that calling Python methods inside
__dealloc__ is not safe. While we seem to get away with it on CPython,
PyPy is not so forgiving.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-07 11:43:41+02:00,-7200,2019-05-07 12:11:03+02:00,-7200,True,False,"['core.pyx', 'input.pyx', 'output.pyx']",['f2e255b50cb8f8880f81b85622899f0e3a8d1ac7'],28,31,59,3,,,
b57e0c4e798d1628a886c655986597e043156af7,"Rework enums to be PyPy-compatible

Using cdef'd metaclasses doesn't seem to be officially supported by
Cython. While we seem to get away with it on Cython, it crashes PyPy.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-07 00:20:27+02:00,-7200,2019-05-07 17:17:59+02:00,-7200,True,False,"['context.pyx', 'enums.pxd', 'enums.pyx', 'option.pyx', 'frame.pyx', 'test_enums.py']",['6babc770bcdb429812c551cb04e24498b1bfd819'],84,47,131,6,1.0,1.0,1.0
8af453bf0da698b524ed3c8dcb5110c2a4f694e8,"[travis] use Xenial for PyPy, don't allow PyPy2 failures

PyPy3 + numpy is currently broken see:

https://github.com/numpy/numpy/issues/13384",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-07 12:51:00+02:00,-7200,2019-05-07 17:17:59+02:00,-7200,True,False,['.travis.yml'],['b57e0c4e798d1628a886c655986597e043156af7'],5,3,8,1,,,
75036f6772a2eb2b93a0f3bd7af3ff6b3138e3ce,"Make audio / video planes property lazy

This avoids reference loops which make it hard for the garbage collector
to free AudioFrame and VideoFrame instances.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-05 17:12:07+02:00,-7200,2019-05-07 18:50:43+02:00,-7200,True,False,"['frame.pyx', 'frame.pxd', 'frame.pyx', 'frame.pyx']",['8af453bf0da698b524ed3c8dcb5110c2a4f694e8'],45,31,76,4,,,
45d95fdcf6128c0992dcaef27b2c788264db1660,[travis] add job to run sdist and upload to PyPI,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-07 20:55:17+02:00,-7200,2019-05-07 22:02:45+02:00,-7200,True,False,"['.travis.yml', 'build', 'build-deps', 'test']",['75036f6772a2eb2b93a0f3bd7af3ff6b3138e3ce'],4,16,20,4,,,
c79dea0496925ed0fcc7a775aed531a69fef052c,"Do not install ""scratchpad"" package",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-07 22:04:21+02:00,-7200,2019-05-07 22:04:21+02:00,-7200,True,False,['setup.py'],['45d95fdcf6128c0992dcaef27b2c788264db1660'],1,1,2,1,,,
db94c912626cf9bbf564860fde950d6ef4710324,Refresh list of authors,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-07 22:12:23+02:00,-7200,2019-05-07 22:12:23+02:00,-7200,True,False,"['AUTHORS.py', 'AUTHORS.rst']",['c79dea0496925ed0fcc7a775aed531a69fef052c'],1,3,4,2,,,
81b0037f4d16a5eade259f1e96a9a21170595981,Release v6.2.0.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-07 22:16:20+02:00,-7200,2019-05-07 22:21:51+02:00,-7200,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['db94c912626cf9bbf564860fde950d6ef4710324'],3,20,23,2,,,
207312698b6d87c262702a8068ffb8703d94221e,Bump to next development version.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-05-07 23:32:01+02:00,-7200,2019-05-07 23:32:01+02:00,-7200,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['81b0037f4d16a5eade259f1e96a9a21170595981'],1,5,6,2,,,
cd458ffe89988b0feca44da6c56ef29f17555962,"Clarify the build from source.

Inspired by #532.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-06-21 09:22:35-04:00,14400,2019-06-21 09:22:35-04:00,14400,True,False,['README.md'],['207312698b6d87c262702a8068ffb8703d94221e'],2,9,11,1,,,
7f81a6bf635cd0b0ced7a005948f1249b30f00ca,Update homebrew on Travis.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-08-27 13:02:48-04:00,14400,2019-08-27 13:02:48-04:00,14400,True,False,['.travis.yml'],['cd458ffe89988b0feca44da6c56ef29f17555962'],0,2,2,1,,,
d50ad6022f23d2bcb1f4224ac39f8ce81b286bfc,"Adjust video frame control flow to not require `with gil`.

This breaks subinterpreters. See #545.",Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-08-27 13:04:31-04:00,14400,2019-08-27 13:43:06-04:00,14400,True,False,['frame.pyx'],['7f81a6bf635cd0b0ced7a005948f1249b30f00ca'],3,7,10,1,,,
8fb5c34de52b1b48d68198df1b00b4bf06f74b17,Users can disable the logging system to avoid lockups in sub-interpreters.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-08-27 13:42:39-04:00,14400,2019-08-27 13:43:06-04:00,14400,True,False,"['CHANGELOG.rst', 'logging.pyx', 'caveats.rst', 'index.rst', 'avutil.pxd']",['d50ad6022f23d2bcb1f4224ac39f8ce81b286bfc'],11,71,82,5,,,
6cc1307beadf2dc94d4710b9f36c65e5a4f9d218,CodecContext.parse uses bytes instead of str,Philipp Krähenbühl,philkr@users.noreply.github.com,Mike Boers,github@mikeboers.com,2019-09-01 02:09:25-05:00,18000,2019-09-02 10:40:22-04:00,14400,True,False,['context.pyx'],['4934da564b4669b899211c2845268bfd12f18657'],1,1,2,1,,,
f1447c211de86145931b6621c176d579c4a335af,"Use correct ByteSource attribute.

Fixes http://mikeboers/PyAV#340",ramoncaldeira,ramoncaldeira_328@hotmail.com,Mike Boers,github@mikeboers.com,2019-07-15 13:12:16-03:00,10800,2019-09-02 11:10:49-04:00,14400,True,False,['context.pyx'],['6cc1307beadf2dc94d4710b9f36c65e5a4f9d218'],1,1,2,1,,,
623ab31ee6a029fcb0222d1ac1949a25320334a5,Fix coding style in new logging changes.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-09-02 15:32:09-04:00,14400,2019-09-02 15:32:09-04:00,14400,True,False,['logging.pyx'],['f1447c211de86145931b6621c176d579c4a335af'],1,1,2,1,,,
a7a4b58dc24c4b4f2f4d7130f3f9040cd95d054d,First issue templates.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-09-02 16:29:28-04:00,14400,2019-09-02 16:44:22-04:00,14400,True,False,"['build-bug-report.md', 'runtime-bug-report.md']",['623ab31ee6a029fcb0222d1ac1949a25320334a5'],0,90,90,2,,,
56d4fa7661a81a6565811fccbd164c8d3e9f89cb,Expose dump_config() in setup.py to ease with GitHub issues.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-09-02 16:53:58-04:00,14400,2019-09-02 16:53:58-04:00,14400,True,False,"['build-bug-report.md', 'runtime-bug-report.md', 'setup.py']",['a7a4b58dc24c4b4f2f4d7130f3f9040cd95d054d'],5,20,25,3,0.0,0.0,1.0
59efd2f59672f43585e0cb98e1dbc00d10fcedaf,Fix build template tag.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-09-02 16:55:07-04:00,14400,2019-09-02 16:55:07-04:00,14400,True,False,['build-bug-report.md'],['56d4fa7661a81a6565811fccbd164c8d3e9f89cb'],1,1,2,1,,,
b672e222bb5a4f24425a734f1f38a4e15ff07c32,"Don't require macOS with FFmpeg < 4.0 to pass.

We don't really care enough to figure this out.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-09-02 11:40:03-04:00,14400,2019-09-02 17:02:38-04:00,14400,True,False,['.travis.yml'],['08e96984cab0a7ade76fa357d80edcd1cf516cf8'],4,12,16,1,,,
613b15c820eda0201d1297221343b8ffa092a76e,Add more issue templates.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-09-02 17:24:46-04:00,14400,2019-09-02 17:24:46-04:00,14400,True,False,"['build-bug-report.md', 'ffmpeg-feature-request.md', 'pyav-feature-request.md', 'runtime-bug-report.md', 'user-help.md']",['b672e222bb5a4f24425a734f1f38a4e15ff07c32'],7,201,208,5,,,
ab17089e5de59f81c6bee92515285646bdde7914,Data streams have same encode/decode API.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-15 11:42:26-04:00,14400,2019-10-15 11:42:26-04:00,14400,True,False,['stream.pyx'],['613b15c820eda0201d1297221343b8ffa092a76e'],2,2,4,1,,,
dee942cd072b749eecdcf07f0ebb991e45595b8b,Decode scratchpad can dump data packets.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-15 11:42:42-04:00,14400,2019-10-15 11:42:42-04:00,14400,True,False,['decode.py'],['ab17089e5de59f81c6bee92515285646bdde7914'],5,12,17,1,,,
6a072145c2a6b4e67d00080f298058a866b10766,"Remove exception about flushing AudioResampler before use.

It doesn't actually serve any purpose.

Fixes #537.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-16 10:37:03-04:00,14400,2019-10-16 10:37:03-04:00,14400,True,False,['resampler.pyx'],['dee942cd072b749eecdcf07f0ebb991e45595b8b'],1,2,3,1,,,
db1406e5e3255fb801aab1627d080bd5035510fe,Drop support for FFmpeg < 4.0,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-17 09:18:15-04:00,14400,2019-10-17 09:18:15-04:00,14400,True,False,"['.travis.yml', 'CHANGELOG.rst', 'VERSION.txt', 'installation.rst']",['6a072145c2a6b4e67d00080f298058a866b10766'],45,8,53,4,,,
76e090dcb8ecb54d1c0c520774a885e8f2cf734c,Add FFmpeg 4.2 support,Mike Boers,github@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-17 09:47:05-04:00,14400,2019-10-17 13:48:24-04:00,14400,True,False,"['.travis.yml', '__init__.py', '__main__.py', '_core.pyx', 'activate.sh', 'test_file_probing.py']",['db1406e5e3255fb801aab1627d080bd5035510fe'],25,50,75,6,0.0,1.0,1.0
7a57c26d6e388362dd641012f5509ddd71292692,Autolinter in Python3.,Mike Boers,github@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-17 10:15:42-04:00,14400,2019-10-17 13:52:55-04:00,14400,True,False,['autolint'],['f08d0aed333f80e97e79fc280971320dd58cf730'],3,3,6,1,,,
78d59a1c6397eddbb6d0fd3d3a81f5ed48707c88,Use GitHub Actions for testing.,Mike Boers,github@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-17 09:59:26-04:00,14400,2019-10-17 13:54:48-04:00,14400,True,False,['test.yml'],['7a57c26d6e388362dd641012f5509ddd71292692'],0,63,63,1,,,
d7cee95e94e405ada9972d05f4467d920cfcd309,Test Windows on GitHub Actions.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-17 15:28:49-04:00,14400,2019-10-17 15:30:07-04:00,14400,True,False,['test.yml'],['78d59a1c6397eddbb6d0fd3d3a81f5ed48707c88'],9,64,73,1,,,
1539209c9829928176bb1cedf40dfe217f1c27d5,Test code formatting on GitHub Actions.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-17 15:36:32-04:00,14400,2019-10-17 17:04:01-04:00,14400,True,False,"['test.yml', '_core.pyx', '__init__.py', 'datasets.py', 'test', 'setup.cfg', 'test_file_probing.py']",['d7cee95e94e405ada9972d05f4467d920cfcd309'],14,58,72,7,,,
553eaabc4b6f084388017042bd17b8fd16cb68e6,Use GA's pip to avoid virtualenv.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-17 15:54:13-04:00,14400,2019-10-17 17:04:04-04:00,14400,True,False,"['test.yml', 'activate.sh', 'test']",['1539209c9829928176bb1cedf40dfe217f1c27d5'],15,25,40,3,,,
275f1231195c68ac92af44db3e655b31c3dd5988,Remove Travis and Appveyor.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-17 16:46:54-04:00,14400,2019-10-17 17:04:11-04:00,14400,True,False,"['.travis.yml', 'Vagrantfile', 'appveyor.yml', 'run_with_compiler.cmd', 'vcvars64.bat']",['553eaabc4b6f084388017042bd17b8fd16cb68e6'],315,0,315,5,,,
98f688caa6ad84b4c60b9f8f7ab2d8e0b743e878,"Include GA badge in README.

Rename GA workflow to ""tests"" for the badge.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-17 20:41:45-04:00,14400,2019-10-17 20:41:45-04:00,14400,True,False,"['tests.yml', 'README.md']",['069b8acead1dfbf11cc9516275e0033c427e710a'],8,6,14,2,,,
de2356d95b1673b665b8000b38d09e0129605995,Test on pull request.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-18 11:26:02-04:00,14400,2019-10-18 11:26:02-04:00,14400,True,False,['tests.yml'],['98f688caa6ad84b4c60b9f8f7ab2d8e0b743e878'],1,1,2,1,,,
3caa94c10a1a6369ee14dc8131f83afdce4aab62,"Make logging test more specific.

This was catching extra logs, e.g.:

	(40, 'AVIOContext', u'Statistics: 66721 bytes read, 2 seeks\n')",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-21 12:17:11-04:00,14400,2019-10-21 12:53:05-04:00,14400,True,False,['test_logging.py'],['de2356d95b1673b665b8000b38d09e0129605995'],7,3,10,1,0.0,0.0,0.0
7e0d4e1f33ddbb1e309bbb3d618d4b7ae8617ebd,Move error handling into its own module.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-21 08:56:12-04:00,14400,2019-10-21 12:53:12-04:00,14400,True,False,"['__init__.py', 'codeccontext.pyx', 'fifo.pyx', 'frame.pyx', 'resampler.pyx', 'context.pyx', 'core.pyx', 'input.pyx', 'output.pyx', 'pyio.pyx', 'dictionary.pyx', 'error.pxd', 'error.pyx', 'context.pyx', 'graph.pyx', 'option.pyx', 'packet.pyx', 'stream.pyx', 'codeccontext.pyx', 'utils.pxd', 'utils.pyx', 'codeccontext.pyx', 'frame.pyx', 'libav.pxd', 'avutil.pxd', 'error.pxd', 'test_logging.py']",['3caa94c10a1a6369ee14dc8131f83afdce4aab62'],143,188,331,27,,,
80d60e9d87287c48023679942fcb540f8f3bae34,"ErrorType enum, set to AVError.type.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-21 10:38:21-04:00,14400,2019-10-21 12:53:12-04:00,14400,True,False,['error.pyx'],['7e0d4e1f33ddbb1e309bbb3d618d4b7ae8617ebd'],20,93,113,1,,,
4a526909bc12841cc7897218293e69effc10532c,Error messages are native strings.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-21 12:52:24-04:00,14400,2019-10-21 12:53:12-04:00,14400,True,False,['error.pyx'],['80d60e9d87287c48023679942fcb540f8f3bae34'],3,7,10,1,,,
ffb786f9a0cf6b8491983a5b9934f85eb64c1a6f,"Create an exception class for each library error type.

This mimicks the setup of the builtin exceptions in Python >= 3.3.
See: https://www.python.org/dev/peps/pep-3151/#new-exception-classes",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-21 14:24:28-04:00,14400,2019-10-21 17:18:21-04:00,14400,True,False,"['tests.yml', '__init__.py', 'error.pxd', 'error.pyx', 'common.py', 'test_errors.py', 'test_logging.py']",['4a526909bc12841cc7897218293e69effc10532c'],27,110,137,7,1.0,1.0,1.0
96340fcf991c36b35a25766c8e452874802728d6,Document errors.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-21 15:39:29-04:00,14400,2019-10-21 17:18:25-04:00,14400,True,False,"['.gitignore', 'error.pyx', 'Makefile', 'error.rst', 'error_table.py']",['ffb786f9a0cf6b8491983a5b9934f85eb64c1a6f'],3,136,139,5,,,
8feb76c5b1fae70f01d724fbd9e4520c2a491049,Redefine all builtin exceptions into our own tree.,Mike Boers,github@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-22 10:35:05-04:00,14400,2019-10-23 08:21:36-04:00,14400,True,False,"['__init__.py', 'resampler.pyx', 'core.pyx', 'input.pyx', 'error.pyx', 'utils.pyx', 'error.rst', 'error_table.py', 'includes.py', 'test_codec_context.py', 'test_errors.py']",['96340fcf991c36b35a25766c8e452874802728d6'],149,299,448,11,0.25,1.0,1.0
7a716bbfd259af2ed987d403cfb3d807227db9fb,FFmpegError __str__ include important parts of log.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-23 09:50:08-04:00,14400,2019-10-23 09:54:02-04:00,14400,True,False,['error.pyx'],['a05af5e6a0dc1c08211f2ec23147b798a05d9179'],1,1,2,1,,,
840c39f428865725e58211874c692b346331d0f1,Remove premature tuple optimizations.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-23 09:52:33-04:00,14400,2019-10-23 09:54:10-04:00,14400,True,False,"['layout.pyx', 'format.pyx']",['7a716bbfd259af2ed987d403cfb3d807227db9fb'],23,5,28,2,,,
c15c1c91d11eeb652baf467434a7d4c031df98e6,"Sort `from` imports before normal ones.

This matches what happens if you grab an import block and sort alphabetically,
which is what I tend to do in my editor.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-23 10:15:01-04:00,14400,2019-10-23 10:16:47-04:00,14400,True,False,"['barcode.py', 'setup.cfg', 'common.py', 'test_codec_context.py', 'test_doctests.py', 'test_encode.py', 'test_seek.py', 'test_subtitles.py', 'test_videoframe.py']",['840c39f428865725e58211874c692b346331d0f1'],11,11,22,9,,,
2f8baa02c2bb286e4c99ffb8d70663a910e72ff4,Add audio buffer support,egao1980,egao1980@gmail.com,Mike Boers,github@mikeboers.com,2018-09-23 17:46:59+01:00,-3600,2019-10-23 10:16:55-04:00,14400,True,False,"['graph.pyx', 'filter_audio.py', 'test_filters.py']",['c15c1c91d11eeb652baf467434a7d4c031df98e6'],4,281,285,3,0.3208955223880597,0.8656716417910447,0.9253731343283582
08e16decbfc00525039e23b586e4dbd8beafb065,AVFrame.channels must be set to match channel_layout for filters.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-23 09:50:41-04:00,14400,2019-10-23 10:16:55-04:00,14400,True,False,['frame.pyx'],['2f8baa02c2bb286e4c99ffb8d70663a910e72ff4'],1,4,5,1,,,
244aafd16febf74edcc918e950ff765f97079248,Graph.add_[a]buffer use dictionary for args instead of string formatting.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-23 09:53:25-04:00,14400,2019-10-23 10:16:55-04:00,14400,True,False,['graph.pyx'],['08e16decbfc00525039e23b586e4dbd8beafb065'],16,16,32,1,,,
9301ea75199bf8851a3347838acd430cfcf8c529,Simplify audio filter test.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-23 09:53:39-04:00,14400,2019-10-23 10:16:55-04:00,14400,True,False,['test_filters.py'],['244aafd16febf74edcc918e950ff765f97079248'],23,19,42,1,1.0,0.0,0.0
ecba4bc13edabc1b64742681f28f041e961a30e7,"Fix the CodecContext.parser memory handling.

There is still far too much copying going on here. That will be dealt with in a moment.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-29 09:46:37-05:00,18000,2019-10-23 10:27:47-04:00,14400,True,False,['context.pyx'],['74aca5c8a3ce32945e04f2c6ef4de81e6301c272'],17,23,40,1,,,
cd9e58d9c9dd18328d6020fbe43a0bbdf91f4883,Simplfy parsing under assumption that buffer is always fully consumed.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-29 10:44:50-05:00,18000,2019-10-23 10:27:47-04:00,14400,True,False,"['context.pxd', 'context.pyx']",['ecba4bc13edabc1b64742681f28f041e961a30e7'],45,45,90,2,,,
083c2645a617bc452e50bd97c2f6847db8e68aff,Fix parse flushing logic.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-29 11:06:49-05:00,18000,2019-10-23 10:27:47-04:00,14400,True,False,['context.pyx'],['cd9e58d9c9dd18328d6020fbe43a0bbdf91f4883'],2,10,12,1,,,
b18df3af1ab45ac18bd2cb0d0be7d014b8ea7a64,Create an example of codec parsing.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2018-11-29 11:11:44-05:00,18000,2019-10-23 10:27:47-04:00,14400,True,False,"['basics.rst', 'parse.py']",['083c2645a617bc452e50bd97c2f6847db8e68aff'],0,51,51,2,,,
50d629973615c88583c617ed813d461d70252d8e,Fix styling for flake8.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-23 10:30:09-04:00,14400,2019-10-23 10:30:09-04:00,14400,True,False,['parse.py'],['b18df3af1ab45ac18bd2cb0d0be7d014b8ea7a64'],3,4,7,1,,,
5d7b15f59027009150c8e3866fbdd38b3e0fb5c9,"Ignore specific commits when cleaning branches.

These are mostly branches that used to exist on GitHub that persist due to
people's forks.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-23 11:20:50-04:00,14400,2019-10-23 11:21:35-04:00,14400,True,False,['clean-branches'],['74aca5c8a3ce32945e04f2c6ef4de81e6301c272'],0,49,49,1,,,
6d3bfb82f04877e97d4ebfd0e38ae552121d33d2,Add a parsing test.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-25 20:41:29-04:00,14400,2019-10-25 21:44:59-04:00,14400,True,False,"['context.pyx', 'test_codec_context.py']",['50d629973615c88583c617ed813d461d70252d8e'],1,32,33,2,0.15789473684210525,0.15789473684210525,0.15789473684210525
3fb3427b088c2946924a698edc2c0df0901c96c5,Add support for open and read timeouts,Jeremy Lainé,jeremy.laine@m4x.org,Mike Boers,git@mikeboers.com,2016-07-20 11:16:30-04:00,14400,2019-10-26 08:57:10-04:00,14400,True,False,"['core.pxd', 'core.pyx', 'input.pyx', 'avformat.pxd', 'test_timeout.py']",['bbc2398bce0128a6dc38da83e4b80cbc9c3ba7f2'],4,137,141,5,1.0,1.0,0.8571428571428571
652f5f720014de0b0d6da7363049454a590c0cd1,Make timeout methods private.,Mike Boers,github@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-18 11:48:01-04:00,14400,2019-10-26 08:57:10-04:00,14400,True,False,"['core.pxd', 'core.pyx']",['3fb3427b088c2946924a698edc2c0df0901c96c5'],2,4,6,2,,,
eeff9724d0e73b41b50492dd4a09f7597762caaf,"Use monotonic time if it is availible, and check if time has been reset backwards if not.

The clock could be reset backwards to a point long before when the timeout was set.
If we don't check for it, we could wait indefinitely.",Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-26 09:13:16-04:00,14400,2019-10-26 09:36:13-04:00,14400,True,False,['core.pyx'],['652f5f720014de0b0d6da7363049454a590c0cd1'],8,21,29,1,,,
d78c7b18b3cd9b863fd94333cd116dab274a3467,Tighten up the timeout test and build it so that it won't wait forever.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-26 09:18:38-04:00,14400,2019-10-26 09:42:05-04:00,14400,True,False,['test_timeout.py'],['eeff9724d0e73b41b50492dd4a09f7597762caaf'],16,25,41,1,1.0,1.0,1.0
c24e90d9b3c568e622c44b883633f1996a478293,Move EnumType init logic into __init__.,Mike Boers,github@mikeboers.com,Mike Boers,git@mikeboers.com,2019-05-07 09:49:34-04:00,14400,2019-10-26 09:56:41-04:00,14400,True,False,['enums.pyx'],['0ea1f5c0ad952385edb50eff9f57f1a783642338'],13,15,28,1,,,
5e90f3370db580c3bccf79449db856eef7b234d4,"Remove notes and issue replication from the repo.

TODOs have been copied into the GitHub wiki.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-28 19:52:22-04:00,14400,2019-10-28 19:52:22-04:00,14400,True,False,"['go.py', 'go.py', 'todo.__unsorted__.txt', 'todo.codec-ctx.txt', 'todo.filters.txt', 'todo.time.txt']",['c24e90d9b3c568e622c44b883633f1996a478293'],395,0,395,6,0.6333333333333333,0.6333333333333333,0.0
c0fd11b5dbdcfd6575432edcd2761fb1a133bf6d,Remove old scratchpad files.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-30 19:47:59-04:00,14400,2019-10-30 19:47:59-04:00,14400,True,False,"['decode_threads.py', 'experimental.py', 'filmstrip.py', 'merge-filmstrip.py']",['5e90f3370db580c3bccf79449db856eef7b234d4'],179,0,179,4,0.6530612244897959,0.8571428571428571,0.0
ac0320d18b8fc1abe62d6946921d49cb341a7c77,"Tidy up some broken links, old versions, odd formatting, etc., in the docs.",Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-30 20:01:08-04:00,14400,2019-10-30 20:01:08-04:00,14400,True,False,"['HACKING.rst', 'about.rst', 'index.rst', 'installation.rst']",['c0fd11b5dbdcfd6575432edcd2761fb1a133bf6d'],22,19,41,4,,,
c14e6ef6425e1ab52e5f28ae4b801a49848e9649,"Declare hardware decoding off-limits in the docs.

See #331.",Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2019-10-30 20:10:44-04:00,14400,2019-10-30 20:10:44-04:00,14400,True,False,"['ffmpeg-feature-request.md', 'about.rst']",['ac0320d18b8fc1abe62d6946921d49cb341a7c77'],1,17,18,2,,,
5b0fe452180821f530ecb97412166830e4a0b176,Move 'Globals' to top of the API docs section.,Mike Boers,git@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-30 21:08:42-04:00,14400,2019-10-30 21:30:11-04:00,14400,True,False,"['core.pyx', '_globals.rst']",['c14e6ef6425e1ab52e5f28ae4b801a49848e9649'],3,1,4,2,,,
745fbf7fe03fa08bf99d8fb91209068c2a307773,Test PyPy on GitHub Actions.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-17 21:08:23-04:00,14400,2019-11-02 10:43:48-04:00,14400,True,False,"['tests.yml', 'activate.sh']",['5b0fe452180821f530ecb97412166830e4a0b176'],0,11,11,2,,,
fee42e147de6cf69f7df2ee69a23203a4b47f017,Update changelog.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-03 10:37:59-05:00,18000,2019-11-03 10:38:05-05:00,18000,True,False,['CHANGELOG.rst'],['745fbf7fe03fa08bf99d8fb91209068c2a307773'],1,14,15,1,,,
34433e3ce20d2373efe41435243011f7694ddc7a,Move more docs into subfolders.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-03 10:56:16-05:00,18000,2019-11-03 10:57:22-05:00,18000,True,False,"['.gitignore', 'Makefile', 'error.rst', 'error_table.py', 'contributors.rst', 'changelog.rst', 'contributors.rst', 'hacking.rst', 'includes.py', 'includes.rst', 'license.rst', 'index.rst', 'about.rst', 'caveats.rst', 'installation.rst']",['fee42e147de6cf69f7df2ee69a23203a4b47f017'],26,20,46,15,,,
939d9cd610773ddc9ccdbf8b1f1bad6ee68ddf48,"Plane repr includes buffer size and ptr.

This has been helpful in figuring out some plane issues on GitHub.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-06 10:20:34-05:00,18000,2019-11-06 10:20:34-05:00,18000,True,False,['plane.pyx'],['34433e3ce20d2373efe41435243011f7694ddc7a'],1,6,7,1,,,
dd697290e4b11a34dafa221b4a3ac02d516f175e,Move more docs into subfolders.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-03 10:56:16-05:00,18000,2019-11-06 10:20:43-05:00,18000,True,False,"['error.rst', 'includes.py']",['939d9cd610773ddc9ccdbf8b1f1bad6ee68ddf48'],2,3,5,2,,,
3a94b9b7074e344e2d259a790032f3123bd9a199,Build the FFmpeg Doxygen tagfile.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-03 15:14:07-05:00,18000,2019-11-06 10:20:43-05:00,18000,True,False,"['Makefile', 'conf.py', 'includes.py', 'generate-tagfile', 'requirements.txt']",['dd697290e4b11a34dafa221b4a3ac02d516f175e'],10,75,85,5,,,
40e27a4966ebc1a96647028cbe717dc0e9f01e9c,Write my own version of doxylink because the caching behaviour is getting annoying.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-03 16:32:54-05:00,18000,2019-11-07 08:46:17-05:00,18000,True,False,"['Makefile', 'conf.py', 'generate-tagfile']",['3a94b9b7074e344e2d259a790032f3123bd9a199'],15,110,125,3,0.5081967213114754,0.5081967213114754,0.26229508196721313
a0433470cbe0b3169eb926005caf37722a7b0b07,Run doctests on GA.,Mike Boers,git@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-06 15:43:07-05:00,18000,2019-11-07 08:46:21-05:00,18000,True,False,"['tests.yml', 'requirements.txt', 'requirements.txt']",['40e27a4966ebc1a96647028cbe717dc0e9f01e9c'],2,23,25,3,,,
84c3dd42eefef8a129c2a26f8a988c3818d4a56c,Run examples on GA.,Mike Boers,git@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-06 16:40:03-05:00,18000,2019-11-07 08:46:21-05:00,18000,True,False,"['tests.yml', 'test']",['a0433470cbe0b3169eb926005caf37722a7b0b07'],27,39,66,2,,,
bb4f87bd18853a9fbe8a6eb6cbf00fc1951891f2,Simplify the doc signature for av.open.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-06 10:05:06-05:00,18000,2019-11-07 08:46:29-05:00,18000,True,False,['core.pyx'],['84c3dd42eefef8a129c2a26f8a988c3818d4a56c'],1,3,4,1,,,
58038073bc8c1f91f5f1e84e214f4ed292f602a9,Discuss that we're only the authority on PyAV.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-06 11:50:32-05:00,18000,2019-11-07 08:46:29-05:00,18000,True,False,['caveats.rst'],['bb4f87bd18853a9fbe8a6eb6cbf00fc1951891f2'],0,14,14,1,,,
00c258b3a5e210193bd469fd78b2eebae78831ea,"Move time discussions into main docs, and expand on it.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-03 16:33:07-05:00,18000,2019-11-07 08:46:29-05:00,18000,True,False,"['HACKING.rst', 'time.rst']",['58038073bc8c1f91f5f1e84e214f4ed292f602a9'],22,92,114,2,,,
e25cdf786315703319c15c705feb580556c4377e,"Increase timeout delay.

This has failed on GA because it wasn't long enough.",Mike Boers,git@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-06 16:03:58-05:00,18000,2019-11-07 08:46:29-05:00,18000,True,False,['test_timeout.py'],['00c258b3a5e210193bd469fd78b2eebae78831ea'],1,1,2,1,,,
276052bcae74faa5bf12b0429f65e07e1c3320b2,Expose Stream.r_frame_rate,Kengo Sawatsu,seattleserv0@gmail.com,Mike Boers,github@mikeboers.com,2018-12-23 17:34:54+09:00,-32400,2019-11-07 08:48:05-05:00,18000,True,False,"['stream.pyx', 'avformat.pxd', 'test_file_probing.py']",['09745d07cceee56c797bd0e23d6880d25ddd0937'],0,12,12,3,0.0,1.0,1.0
a3ee5f9204ad438f4f6fa6cc7d0ebff6cee3ca87,Rename r_rate to base_rate.,Mike Boers,git@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-26 10:32:19-04:00,14400,2019-11-07 08:48:05-05:00,18000,True,False,"['stream.pyx', 'test_file_probing.py']",['276052bcae74faa5bf12b0429f65e07e1c3320b2'],4,4,8,2,,,
f0a285d5ffad45d09fc462ae4b8af55d17471412,Add Stream.guessed_rate to complete the trilogy.,Mike Boers,git@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-26 10:32:45-04:00,14400,2019-11-07 08:48:05-05:00,18000,True,False,"['stream.pyx', 'avformat.pxd', 'test_file_probing.py']",['a3ee5f9204ad438f4f6fa6cc7d0ebff6cee3ca87'],1,19,20,3,0.0,1.0,1.0
7622345b0595259f566d6f675b1d291fad8361f8,Document and test Streams a little more.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-07 09:32:38-05:00,18000,2019-11-07 09:32:38-05:00,18000,True,False,"['CHANGELOG.rst', 'streams.pyx', 'stream.pyx', 'stream.rst', 'time.rst', 'test_doctests.py']",['f0a285d5ffad45d09fc462ae4b8af55d17471412'],59,161,220,6,1.0,0.0,1.0
c4c6f18243cb668c5d1c50b3e6d10c209e0d0ccd,VideoFormat.bits_per_pixel,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-07 20:12:45-05:00,18000,2019-11-07 20:15:40-05:00,18000,True,False,"['format.pyx', 'avutil.pxd']",['9fc468e7e135cb8d3073a826649c7938660393d9'],0,12,12,2,,,
a3ac40324005a0dac15921fe09dec80f1ebd6c27,"Use AVCodecParameters to stop FFmpeg from complaining.

Fixes #222.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-07 20:14:12-05:00,18000,2019-11-07 20:16:53-05:00,18000,True,False,"['CHANGELOG.rst', 'stream.pyx', 'avcodec.pxd', 'avformat.pxd']",['c4c6f18243cb668c5d1c50b3e6d10c209e0d0ccd'],3,22,25,4,,,
4a4cfe67511e97768e50118285bb4a84a6160c2c,Make unsupported seek options harder to use.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-10 18:57:36-05:00,18000,2019-11-11 08:46:47-05:00,18000,True,False,"['CHANGELOG.rst', 'input.pyx', 'stream.pyx']",['4db6a0fe66a2463944590aad74f0a944e2979cd1'],19,37,56,3,,,
2ba3ea08f2a8a894eb006434a6cd3d6005e847d4,Fix changelog wrapping.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-11 08:47:06-05:00,18000,2019-11-11 08:47:06-05:00,18000,True,False,['CHANGELOG.rst'],['4a4cfe67511e97768e50118285bb4a84a6160c2c'],5,2,7,1,,,
0c49ff27972f7178bebc813359d56419e107ff00,Add support for extracting motion vectors,Jonathan Martin,homerunisgood@hotmail.com,Mike Boers,github@mikeboers.com,2019-10-01 20:02:13+02:00,-7200,2019-11-14 16:20:21-05:00,18000,True,False,"['frame.pxd', 'frame.pyx', 'avcodec.pxd', 'frame.pxd', 'test_decode.py']",['2ba3ea08f2a8a894eb006434a6cd3d6005e847d4'],1,108,109,5,1.0,1.0,1.0
2dcb74be42a07f7c87e13dc7405dac59f885960e,Generalize SideData more.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-16 14:43:03-04:00,14400,2019-11-14 16:20:21-05:00,18000,True,False,"['Makefile', 'frame.pxd', 'frame.pyx', '__init__.py', 'motionvectors.pyx', 'sidedata.pxd', 'sidedata.pyx', 'codeccontext.pyx', 'frame.pyx', 'avcodec.pxd', 'sidedata.py']",['0c49ff27972f7178bebc813359d56419e107ff00'],19,229,248,11,,,
f85f68b9df63f37680eb58226c17fe5f5da6d436,Expose MotionVector side_data.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-16 15:33:08-04:00,14400,2019-11-14 16:20:21-05:00,18000,True,False,"['motionvectors.pxd', 'motionvectors.pyx', 'sidedata.pyx', 'frame.pxd', 'frame.pyx', 'libav.pxd', 'avcodec.pxd', 'motion_vector.pxd', 'sidedata.py', 'test_decode.py']",['2dcb74be42a07f7c87e13dc7405dac59f885960e'],50,176,226,10,1.0,1.0,1.0
78d46d7b25606ee7b25ea9cff7c1d9499e78f0df,Fix SideData numpy padding.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-16 19:54:53-04:00,14400,2019-11-14 16:20:21-05:00,18000,True,False,['motionvectors.pyx'],['f85f68b9df63f37680eb58226c17fe5f5da6d436'],4,3,7,1,,,
bbed11d66d821579952b1b1b632d26c935b91f6e,Style fixes.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-16 20:11:08-04:00,14400,2019-11-14 16:20:21-05:00,18000,True,False,"['context.pyx', 'motionvectors.pxd', 'motionvectors.pyx', 'sidedata.pxd', 'sidedata.pyx', 'codeccontext.pyx', 'sidedata.py', 'test_decode.py']",['78d46d7b25606ee7b25ea9cff7c1d9499e78f0df'],13,15,28,8,,,
dac8ababaf757cbeef3436aef94f684ac62dc7e3,Expose SideData.metadata,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-10-16 20:33:02-04:00,14400,2019-11-14 16:20:21-05:00,18000,True,False,"['sidedata.pxd', 'sidedata.pyx']",['bbed11d66d821579952b1b1b632d26c935b91f6e'],1,5,6,2,,,
fa9c220b38444aa2015016d967a614f066156602,"Move flags to generic CodecContext.

Also, fix a typo which had `flags2` returning `flags`.",Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-14 17:02:46-05:00,18000,2019-11-14 17:03:34-05:00,18000,True,False,"['context.pyx', 'codeccontext.pyx', 'sidedata.py', 'test_enums.py']",['dac8ababaf757cbeef3436aef94f684ac62dc7e3'],54,64,118,4,0.0,1.0,1.0
5c4658b21b1bc500354819749985ab9f08fc2e6c,Rename the SideDataType to simpler Type.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-14 17:07:19-05:00,18000,2019-11-14 17:07:19-05:00,18000,True,False,['sidedata.pyx'],['fa9c220b38444aa2015016d967a614f066156602'],3,3,6,1,,,
ae64e1ba52bea3cb72cfec473233f5137d0c1bda,Change the language in the issue templates to try to get people to replace the braces.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-26 08:53:19-05:00,18000,2019-11-26 08:53:19-05:00,18000,True,False,"['build-bug-report.md', 'ffmpeg-feature-request.md', 'pyav-feature-request.md', 'runtime-bug-report.md', 'user-help.md']",['b6a9bb640a425207f15ad88c9b2c5762afd787d9'],5,5,10,5,,,
91dd37ad5b8db594c7fcd5fd48b47ea1c6eeaa3f,Expose swscale flags,Stephen.Y,stepheny@users.noreply.github.com,Stephen.Y,stepheny@users.noreply.github.com,2019-12-10 22:02:10+08:00,-28800,2019-12-10 22:02:10+08:00,-28800,True,False,"['frame.pxd', 'frame.pyx', 'reformatter.pyx', 'swscale.pxd']",['ae64e1ba52bea3cb72cfec473233f5137d0c1bda'],5,28,33,4,,,
05ec0fa285368ca25656c08bed8c675b5c0322d5,Colorspaces and interpolation via enums.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-12-11 09:35:02-05:00,18000,2019-12-11 09:35:02-05:00,18000,True,False,"['codeccontext.pyx', 'frame.pxd', 'frame.pyx', 'reformatter.pyx']",['91dd37ad5b8db594c7fcd5fd48b47ea1c6eeaa3f'],42,46,88,4,,,
a55951d0c697c1c9deba768cd4e753279fbfa3f1,Move VideoFrame.reformat into VideoReformatter.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-12-11 10:23:14-05:00,18000,2019-12-11 10:52:37-05:00,18000,True,False,"['codeccontext.pyx', 'frame.pxd', 'frame.pyx', 'reformatter.pxd', 'reformatter.pyx']",['05ec0fa285368ca25656c08bed8c675b5c0322d5'],177,204,381,5,,,
880426eef959af02a0504451627d1abe318407fe,Rename av.enums to av.enum to match module naming scheme.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-14 17:18:30-05:00,18000,2019-12-11 11:19:56-05:00,18000,True,False,"['context.pyx', 'enum.pxd', 'enum.pyx', 'error.pyx', 'option.pyx', 'sidedata.pyx', 'codeccontext.pyx', 'frame.pyx', 'reformatter.pyx', 'test_enums.py']",['41fd07547c873b5c279854f17f9d3ce30bd6482f'],8,7,15,10,,,
defd3ed26a3c9cbd58e6052311049fc6de9537d6,Enum properties.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-14 18:00:08-05:00,18000,2019-12-11 11:19:59-05:00,18000,True,False,"['context.pyx', 'enum.pyx', 'sidedata.py', 'test_enums.py']",['880426eef959af02a0504451627d1abe318407fe'],18,133,151,4,0.20689655172413793,1.0,1.0
cd8b6611aedad10cd9123ad20ccd6f81cac702a3,Refactor Codec properties and capabilities to new enum properties.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-14 18:24:52-05:00,18000,2019-12-12 12:18:54-05:00,18000,True,False,"['codec.pyx', 'context.pyx', 'enum.pyx', 'test_enums.py']",['defd3ed26a3c9cbd58e6052311049fc6de9537d6'],63,98,161,4,,,
39089c276acce4ed6549d7b93b1a4888e66db4ee,Remove concept of denying user creation or multi-flags.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-14 19:09:31-05:00,18000,2019-12-12 12:18:57-05:00,18000,True,False,"['codec.pyx', 'enum.pxd', 'enum.pyx', 'error.pyx', 'test_enums.py']",['cd8b6611aedad10cd9123ad20ccd6f81cac702a3'],31,23,54,5,1.0,0.0,0.0
25ce9f36087dd013614f3bcc4cb34d44e708e06b,Clean up enum exception messages.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-14 19:19:23-05:00,18000,2019-12-12 12:18:57-05:00,18000,True,False,"['enum.pyx', 'test_enums.py']",['39089c276acce4ed6549d7b93b1a4888e66db4ee'],6,17,23,2,,,
401a2044526e2b10339ed3023251c7127ce2932f,Expose more flags uniformly.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-15 20:12:58-05:00,18000,2019-12-12 12:18:57-05:00,18000,True,False,"['codeccontext.pyx', 'codec.pyx', 'core.pyx', 'enum.pyx', 'format.pyx', 'avcodec.pxd', 'avcodec.pyav.h', 'avformat.pxd', 'test_containerformat.py']",['25ce9f36087dd013614f3bcc4cb34d44e708e06b'],124,236,360,9,1.0,1.0,1.0
ccbd198272432c408f389b743ba64ba7e2ba989a,WIP documenting flags and enums.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-11-15 20:13:09-05:00,18000,2019-12-12 12:18:57-05:00,18000,True,False,"['HACKING.rst', 'core.pyx', 'enum.pyx', 'codec.rst', 'container.rst', 'enum.rst', 'conf.py', 'flags.txt', 'test_containerformat.py', 'test_enums.py']",['401a2044526e2b10339ed3023251c7127ce2932f'],21,356,377,10,0.32894736842105265,0.32894736842105265,0.9736842105263158
c733fe43c1b6f6f16351952f25817e3c66fde9db,Prefer shorter enum class names with modules in repr.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-12-11 11:49:29-05:00,18000,2019-12-12 12:19:08-05:00,18000,True,False,"['codec.pyx', 'context.pyx', 'core.pyx', 'enum.pxd', 'enum.pyx', 'error.pyx', 'format.pyx', 'option.pyx', 'sidedata.pyx', 'frame.pyx', 'reformatter.pyx', 'codec.rst', 'container.rst', 'test_doctests.py', 'test_enums.py']",['ccbd198272432c408f389b743ba64ba7e2ba989a'],42,53,95,15,,,
1100989a5ca3576a3b85e3a5546768ffbefbd571,Get all flags roughly documented.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-12-12 12:16:34-05:00,18000,2019-12-12 14:07:41-05:00,18000,True,False,"['__init__.py', 'codec.pyx', 'context.pyx', '__init__.py', 'core.pyx', 'format.pyx', 'frame.pyx', 'reformatter.pyx', 'codec.rst', 'container.rst', 'sidedata.rst', 'video.rst', 'conf.py', 'avcodec.pxd']",['c733fe43c1b6f6f16351952f25817e3c66fde9db'],202,457,659,14,0.8333333333333334,0.8333333333333334,1.0
23f41fed08dd2d9b312e0777b35a8d1fde0addfd,Clean up flag documentation.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-12-12 14:01:51-05:00,18000,2019-12-12 14:07:45-05:00,18000,True,False,"['codec.pyx', 'context.pyx', 'enum.pyx', 'frame.pyx', 'reformatter.pyx', 'codec.rst', 'container.rst', 'enum.rst', 'video.rst']",['1100989a5ca3576a3b85e3a5546768ffbefbd571'],174,292,466,9,,,
27a5ba900db29a4069495f24aac007cd6a40484a,Update examples; add container.close(),Ihor Liubymov,ihor.liubymov@ring.com,Mike Boers,github@mikeboers.com,2019-12-12 15:40:15+02:00,-7200,2019-12-13 09:28:13-05:00,18000,True,False,"['remux.py', 'save_keyframes.py', 'thread_type.py', 'barcode.py']",['a770bde8e003bde06d136595877db7cd89ed024c'],13,18,31,4,,,
286b96cfc56bb8e894d3892edf3adf95622a45ab,Discuss reference cycles,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2019-12-13 09:33:51-05:00,18000,2019-12-13 09:33:51-05:00,18000,True,False,"['core.pyx', 'caveats.rst']",['27a5ba900db29a4069495f24aac007cd6a40484a'],0,15,15,2,,,
96edfae81f0ec427b2b87db556947dd3d4e38f9e,Release v7.0.0.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2020-01-30 09:16:01-05:00,18000,2020-01-30 09:16:01-05:00,18000,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['5d192a13aabac9ec8eeea4cd9eee34558a3cabc3'],3,5,8,2,,,
63f70a085509d5ec2a246a8cc0216550b41d72b8,Bump to next dev version.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2020-01-30 09:29:12-05:00,18000,2020-01-30 09:29:12-05:00,18000,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['96edfae81f0ec427b2b87db556947dd3d4e38f9e'],1,5,6,2,,,
74f3eaf712925599ee59e5afe252a088e14d47ea,Remove deprecated AV_FRAME_DATA_QP_TABLE_*; see #607.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2020-02-07 10:03:29-05:00,18000,2020-02-07 10:11:41-05:00,18000,True,False,"['CHANGELOG.rst', 'sidedata.pyx']",['63f70a085509d5ec2a246a8cc0216550b41d72b8'],2,9,11,2,,,
f7b504cb2cec4926374d1924a76fcb062b63dd6c,Release v7.0.1.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2020-02-07 10:04:49-05:00,18000,2020-02-07 10:11:45-05:00,18000,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['74f3eaf712925599ee59e5afe252a088e14d47ea'],3,3,6,2,,,
3a9e9d9d544283d6f178f74d89b151b031887005,Bump to next dev version.,Mike Boers,github@mikeboers.com,Mike Boers,github@mikeboers.com,2020-02-07 10:12:24-05:00,18000,2020-02-07 10:12:24-05:00,18000,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['f7b504cb2cec4926374d1924a76fcb062b63dd6c'],1,5,6,2,,,
028b74225ea3b1c20695a7ceeb675c9e0ad586c1,added yuvj420p format for to_ndarray,Ihor Liubymov,ihor.liubymov@ring.com,Jeremy Lainé,jeremy.laine@m4x.org,2019-12-19 12:38:15+02:00,-7200,2020-02-21 23:01:56+01:00,-3600,True,False,"['frame.pyx', 'test_videoframe.py']",['3a9e9d9d544283d6f178f74d89b151b031887005'],2,10,12,2,1.0,1.0,1.0
997f6f204b57298e470d48c51f1de3f31f0805f3,Remove shims for obsolete FFmpeg versions (fixes: #588),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-02-21 23:23:39+01:00,-3600,2020-02-23 02:22:59+01:00,-3600,True,False,"['_core-shims.c', '_core.pyx', 'codec-shims.c', 'codec.pyx', 'filter-shims.c', 'filter.pyx', 'format-shims.c', 'format.pyx', 'avcodec.pxd', 'avdevice.pxd', 'avfilter.pxd', 'avformat.pxd']",['028b74225ea3b1c20695a7ceeb675c9e0ad586c1'],134,29,163,12,0.0,0.2708333333333333,0.0
84b0d6dcba669d0060dd8016edbeb64de5561f26,fix: avoid infinite timeout bug on av.open(),Carlos Ruiz,carlos.ruiz.dominguez@west.cmu.edu,Jeremy Lainé,jeremy.laine@m4x.org,2019-12-28 21:58:29+01:00,-3600,2020-02-29 10:32:51+01:00,-3600,True,False,['input.pyx'],['997f6f204b57298e470d48c51f1de3f31f0805f3'],0,3,3,1,,,
5d3e1adbc1fbd923834c043897535880da3c0a7d,"Support 8-bit color formats, correct plane calculation",Alba Mendez,me@alba.sh,Jeremy Lainé,jeremy.laine@m4x.org,2020-01-23 13:01:18+01:00,-3600,2020-03-01 23:37:29+01:00,-3600,True,False,['frame.pyx'],['84b0d6dcba669d0060dd8016edbeb64de5561f26'],3,7,10,1,,,
0d87990f1d4e5ccf88266cca0653941f456236d1,"Expose palette plane, conversion on pal8",Alba Mendez,me@alba.sh,Jeremy Lainé,jeremy.laine@m4x.org,2020-01-23 14:38:36+01:00,-3600,2020-03-01 23:37:29+01:00,-3600,True,False,"['frame.pyx', 'plane.pxd', 'plane.pyx']",['5d3e1adbc1fbd923834c043897535880da3c0a7d'],13,36,49,3,,,
1ffd0d6040d683c0624dcba42c34838ff798198f,Update plane.pyx,Alba Mendez,me@alba.sh,Jeremy Lainé,jeremy.laine@m4x.org,2020-01-25 15:00:52+01:00,-3600,2020-03-01 23:37:29+01:00,-3600,True,False,['plane.pyx'],['0d87990f1d4e5ccf88266cca0653941f456236d1'],0,1,1,1,,,
9422b611aefa42c0e413b4c53bea6cc6bbcdb2b2,Remove component property,Alba Mendez,me@alba.sh,Jeremy Lainé,jeremy.laine@m4x.org,2020-02-22 17:46:29+01:00,-3600,2020-03-01 23:37:29+01:00,-3600,True,False,['plane.pxd'],['1ffd0d6040d683c0624dcba42c34838ff798198f'],2,0,2,1,,,
36dbc4bc80aecb2e58b77ff9c358a4d816bc5f7b,"Make API consistent, from_ndarray now accepts tuple too",Alba Mendez,me@alba.sh,Jeremy Lainé,jeremy.laine@m4x.org,2020-02-22 17:58:43+01:00,-3600,2020-03-01 23:37:29+01:00,-3600,True,False,['frame.pyx'],['9422b611aefa42c0e413b4c53bea6cc6bbcdb2b2'],5,6,11,1,,,
471dced864995ca383645428e6ac00551f568c61,Tests for new formats,Alba Mendez,me@alba.sh,Jeremy Lainé,jeremy.laine@m4x.org,2020-02-22 22:51:45+01:00,-3600,2020-03-01 23:37:29+01:00,-3600,True,False,['test_videoframe.py'],['36dbc4bc80aecb2e58b77ff9c358a4d816bc5f7b'],0,28,28,1,1.0,1.0,1.0
d9bebbd35b408dd975e8a5faa1401de0b99163c5,"[build] remove PYAV_LIBRARY_NAME

The library name is always ffmpeg nowadays.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-03-14 15:00:13+01:00,-3600,2020-03-15 09:05:47+01:00,-3600,True,False,"['activate.sh', 'build-deps']",['471dced864995ca383645428e6ac00551f568c61'],16,5,21,2,,,
6080482830c9615a03cd9c273005c5b3ce3d939a,Import ABC's from collections.abc (fixes: #616),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-03-30 16:58:55+02:00,-7200,2020-03-30 16:58:55+02:00,-7200,True,False,"['dictionary.pyx', 'motionvectors.pyx', 'sidedata.pyx']",['d9bebbd35b408dd975e8a5faa1401de0b99163c5'],6,15,21,3,,,
099d8ae304d9480df325f387d0a09cda9f1f085a,Strip ICC profile from logos. #622,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2020-04-15 15:47:18-04:00,14400,2020-04-15 15:47:18-04:00,14400,True,False,"['favicon.png', 'logo-250.png']",['6080482830c9615a03cd9c273005c5b3ce3d939a'],0,0,0,2,,,
fb6120ae392f65c0d0d81fbde5995f2703dd60b7,"[build] disable macos tests for now

On OS X, the `ssl` module has an issue which breaks the build.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-23 00:39:18+02:00,-7200,2020-04-25 11:05:04+02:00,-7200,True,False,['tests.yml'],['099d8ae304d9480df325f387d0a09cda9f1f085a'],1,1,2,1,,,
b219c0ad6f2560bb3fd2da3d8ceb7340a2562652,"Bump version to 8.0.0, drop support for Python 2 and 3.4",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-25 17:23:47+02:00,-7200,2020-04-25 18:35:20+02:00,-7200,True,False,"['tests.yml', 'CHANGELOG.rst', 'VERSION.txt', 'error.pyx', 'setup.py', 'common.py', 'test_container.py', 'test_doctests.py', 'test_errors.py', 'test_videoframe.py']",['fb6120ae392f65c0d0d81fbde5995f2703dd60b7'],45,21,66,10,0.0,1.0,0.0
74e74d09482cbf1b6ebfa9566c715050d7450451,[build] use checkout@v2 github action,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-25 18:56:04+02:00,-7200,2020-04-25 19:28:41+02:00,-7200,True,False,['tests.yml'],['b219c0ad6f2560bb3fd2da3d8ceb7340a2562652'],9,3,12,1,,,
7719f8c5380e97148e0c2d476404b21fb7cf482b,[build] produce binary wheels for Linux / Mac / Windows,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-22 21:05:48+02:00,-7200,2020-04-26 09:59:17+02:00,-7200,True,False,"['tests.yml', 'fetch-ffmpeg', 'inject-dll']",['74e74d09482cbf1b6ebfa9566c715050d7450451'],1,127,128,3,,,
5034ac355127356c1b4d556a60dd78e654e7f1a3,[build] produce source distribution tarball,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-25 18:49:37+02:00,-7200,2020-04-26 09:59:17+02:00,-7200,True,False,['tests.yml'],['7719f8c5380e97148e0c2d476404b21fb7cf482b'],0,35,35,1,,,
55ced25695ea5d4528f4cd8863a0ec58d36014dc,Release v8.0.0.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-26 11:38:24+02:00,-7200,2020-04-26 12:17:12+02:00,-7200,True,False,"['CHANGELOG.rst', 'README.md', 'VERSION.txt']",['5034ac355127356c1b4d556a60dd78e654e7f1a3'],9,31,40,3,,,
6480d3970ae30bd62eb02e6e3caf5ba58dc917f8,Bump to next dev version.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-26 12:19:37+02:00,-7200,2020-04-26 12:19:37+02:00,-7200,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['55ced25695ea5d4528f4cd8863a0ec58d36014dc'],1,5,6,2,,,
c4b8237896978b107145bcf6d7edb5752e4f5e76,"Use os.fsencode for both input and output file names (fixes: #600)

It's safe to call os.fsencode() regardless of whether the filename was
passed as `bytes` or `str`. Remove shim for `os.fsencode()`, it has been
available since Python 3.2.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-29 15:45:40+02:00,-7200,2020-04-29 20:50:28+02:00,-7200,True,False,"['core.pyx', 'output.pyx']",['6480d3970ae30bd62eb02e6e3caf5ba58dc917f8'],12,5,17,2,,,
0398726e33061df36f1f39431c017e34475428fc,"[build] update FFmpeg build with additional libraries

The following were added:

- libaom
- libass
- libbluray
- libdav1d
- libwavpack
- libxvid",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-29 23:24:08+02:00,-7200,2020-04-30 00:08:13+02:00,-7200,True,False,['fetch-ffmpeg'],['c4b8237896978b107145bcf6d7edb5752e4f5e76'],16,18,34,1,,,
e50f37d8585502146b648811d2ae9a9081d946ca,"Remove some references to Python 2

Also simplify the `dict_to_avdict` signature as we:

- always pass `clear=True`
- always explicitly pass the `encoding` and `errors` arguments",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-29 23:52:59+02:00,-7200,2020-04-30 07:09:24+02:00,-7200,True,False,"['AUTHORS.py', 'HACKING.rst', '__main__.py', 'layout.pyx', 'context.pyx', 'core.pyx', 'output.pyx', 'enum.pyx', 'error.pyx', 'filter.pyx', 'graph.pyx', 'stream.pyx', 'utils.pxd', 'utils.pyx', 'conf.py', 'includes.py', 'generate-tagfile', 'glproxy.py', 'activate.sh', 'autolint', 'clean-branches', 'setup.py', 'test_container.py', 'test_doctests.py', 'test_timeout.py']",['0398726e33061df36f1f39431c017e34475428fc'],74,33,107,25,,,
06182efef53972cf3634d85db4349bf82b5f6ebc,[docs] Document FFmpeg features for binary wheels (fixes: #641),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-30 09:12:43+02:00,-7200,2020-04-30 09:13:22+02:00,-7200,True,False,['about.rst'],['e50f37d8585502146b648811d2ae9a9081d946ca'],1,33,34,1,,,
01b7b087c7045dbb767cd08ef264627a5d0d8938,Release v8.0.1,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-30 09:16:42+02:00,-7200,2020-04-30 09:16:42+02:00,-7200,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['06182efef53972cf3634d85db4349bf82b5f6ebc'],2,6,8,2,,,
c6f57e3635cdf7938085509669ebaaf017ef1409,Bump to next dev version.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-30 09:30:11+02:00,-7200,2020-04-30 09:30:11+02:00,-7200,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['01b7b087c7045dbb767cd08ef264627a5d0d8938'],1,5,6,2,,,
a5358b1b3731322f53dfb798935c7cf165070e02,Remove support for Python 2 buffer protocol.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-30 09:40:52+02:00,-7200,2020-04-30 16:48:05+02:00,-7200,True,False,"['buffer.pxd', 'buffer.pyx', 'plane.pyx', 'buffer.rst', 'plane.rst']",['c6f57e3635cdf7938085509669ebaaf017ef1409'],48,7,55,5,,,
5a14795dcc63434f335a191b6bce2e32a66d37c5,[build] update URL for FFmpeg binary builds,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-30 23:30:33+02:00,-7200,2020-05-01 00:29:08+02:00,-7200,True,False,['fetch-ffmpeg'],['a5358b1b3731322f53dfb798935c7cf165070e02'],1,1,2,1,,,
b43a7864abed7be9a97a58ed27e66067c7ba5081,[docs] update the location of the github repository,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-04-30 23:35:53+02:00,-7200,2020-05-01 00:29:27+02:00,-7200,True,False,"['build-bug-report.md', 'runtime-bug-report.md', 'user-help.md', 'HACKING.rst', 'README.md', '__main__.py', 'sidedata.pyx', 'conf.py', 'license.rst', 'installation.rst', 'setup.cfg', 'setup.py']",['5a14795dcc63434f335a191b6bce2e32a66d37c5'],16,16,32,12,,,
563fb5d5ba0c986d24c8ac46df0d60403a8dd8f4,[docs] Update a few references to the old GitHub repo.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2020-05-01 11:13:36-04:00,14400,2020-05-01 11:13:36-04:00,14400,True,False,"['README.md', 'about.rst', 'caveats.rst']",['b43a7864abed7be9a97a58ed27e66067c7ba5081'],3,3,6,3,,,
1f3e4dde7814c76b1e08c7b546251469b174be1e,[docs] Update Gitter URL.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2020-05-01 11:14:10-04:00,14400,2020-05-01 11:14:10-04:00,14400,True,False,"['build-bug-report.md', 'runtime-bug-report.md', 'user-help.md', 'README.md', 'about.rst']",['563fb5d5ba0c986d24c8ac46df0d60403a8dd8f4'],5,5,10,5,,,
a11f583f49c69cb7c8b49acbb75841f697481b17,[docs] Everything has moved from docs.mikeboers.com to pyav.org.,Mike Boers,git@mikeboers.com,Mike Boers,git@mikeboers.com,2020-05-01 11:14:25-04:00,14400,2020-05-01 11:14:25-04:00,14400,True,False,"['build-bug-report.md', 'runtime-bug-report.md', 'user-help.md', 'README.md', 'datasets.py', 'Makefile', 'setup.cfg']",['1f3e4dde7814c76b1e08c7b546251469b174be1e'],8,8,16,7,,,
3417b59b33fedbbd3d2958441312849ffe180c6f,[build] rework tarball download script,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-05-02 01:23:27+02:00,-7200,2020-05-02 09:33:14+02:00,-7200,True,False,"['tests.yml', 'fetch-ffmpeg', 'fetch-vendor', 'fetch-vendor.json']",['d2f9f8cda6b15a802870389cd45a54d5f0c11009'],57,67,124,4,,,
a7e39f0243bc7e05989ebc1ae3c718ac58b6202e,[qa] fix flake8 error,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-05-20 12:10:24+02:00,-7200,2020-05-20 13:40:44+02:00,-7200,True,False,['test_logging.py'],['3417b59b33fedbbd3d2958441312849ffe180c6f'],1,1,2,1,,,
e36498704b7c488201d55ae0dff7e8f57918673d,[build] update URL to point to PyAV-org repo,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-05-20 12:14:33+02:00,-7200,2020-05-20 13:40:44+02:00,-7200,True,False,['fetch-vendor.json'],['a7e39f0243bc7e05989ebc1ae3c718ac58b6202e'],1,1,2,1,,,
f8cb3a352015c24b05de01a228d2cde54ae71a64,Ignore more build products,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-05-20 13:41:58+02:00,-7200,2020-05-20 13:41:58+02:00,-7200,True,False,['.gitignore'],['e36498704b7c488201d55ae0dff7e8f57918673d'],0,2,2,1,,,
5497383de044c204a6483f44b45171cfb6aeac9c,[build] update FFmpeg build for OS X 10.9+ compatibility,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-05-20 12:04:52+02:00,-7200,2020-06-02 09:41:54+02:00,-7200,True,False,['fetch-vendor.json'],['f8cb3a352015c24b05de01a228d2cde54ae71a64'],1,1,2,1,,,
5d73160e4af2a94b721d8d9fcb7658a9ade3cde7,[build] don't set DYLD_LIBRARY_PATH when building wheels,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-06-02 08:40:35+02:00,-7200,2020-06-02 09:41:54+02:00,-7200,True,False,['tests.yml'],['5497383de044c204a6483f44b45171cfb6aeac9c'],1,1,2,1,,,
0f36652f91b0a0d5bc3b1c9c6881fdd62cdd14f4,Release v8.0.2,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-06-02 15:31:35+02:00,-7200,2020-06-02 15:35:50+02:00,-7200,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['5d73160e4af2a94b721d8d9fcb7658a9ade3cde7'],2,8,10,2,,,
894a629c63c999c9399f697b22e6b93f6bd3fe59,Bump to next dev version.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-06-02 15:44:55+02:00,-7200,2020-06-02 15:44:55+02:00,-7200,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['0f36652f91b0a0d5bc3b1c9c6881fdd62cdd14f4'],1,4,5,2,,,
545c41db061882e331e490ed753467d336dc378d,"[build] pin cibuildwheel to version 1.4.2

Newer cibuildwheel versions seem to fail on Windows.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-08-27 00:09:45+02:00,-7200,2020-08-27 17:59:00+02:00,-7200,True,False,['tests.yml'],['894a629c63c999c9399f697b22e6b93f6bd3fe59'],1,1,2,1,,,
e6b16375c27e25aff1bca64a54421efb93b348bd,Adjust import formatting for isort 5.x,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-08-27 00:38:36+02:00,-7200,2020-08-27 17:59:00+02:00,-7200,True,False,"['resampler.pyx', 'buffer.pyx', 'bytesource.pyx', '__init__.py', 'context.pyx', 'core.pyx', 'input.pyx', 'output.pyx', 'pyio.pyx', 'enum.pyx', 'error.pyx', 'frame.pyx', 'logging.pyx', 'sidedata.pyx', 'stream.pyx', 'utils.pyx', 'codeccontext.pyx', 'frame.pyx', 'reformatter.pyx', 'stream.pyx', 'test', 'setup.cfg']",['545c41db061882e331e490ed753467d336dc378d'],43,53,96,22,,,
1fa8dd6a95336321feca69b66aebefb4f08d7e85,[build] update FFmpeg to 4.3.1 for binary wheels,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-08-27 17:19:56+02:00,-7200,2020-08-27 17:59:00+02:00,-7200,True,False,"['fetch-vendor', 'fetch-vendor.json']",['e6b16375c27e25aff1bca64a54421efb93b348bd'],5,1,6,2,,,
d1ee9312869e4517fa20e5970f2c24b1787751b8,[build] upgrade cibuildwheel to 1.6.3,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-10-15 09:58:00+02:00,-7200,2020-10-16 16:09:26+02:00,-7200,True,False,['tests.yml'],['1fa8dd6a95336321feca69b66aebefb4f08d7e85'],2,2,4,1,,,
0839954c8358746d829be5d6797a7dcd647ca9e2,Adjust import formatting for isort 5.6.x,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-10-15 10:04:41+02:00,-7200,2020-10-16 16:09:26+02:00,-7200,True,False,"['fifo.pxd', 'frame.pxd', 'resampler.pxd', 'context.pxd', 'pyio.pxd', 'context.pxd', 'frame.pxd', 'packet.pxd', 'motionvectors.pxd', 'sidedata.pxd', 'stream.pxd', 'stream.pxd', 'utils.pxd', 'frame.pxd']",['d1ee9312869e4517fa20e5970f2c24b1787751b8'],16,12,28,14,,,
6f9a1561f43e0cedc10c0ee33cd30bded7d34dc0,[tests] skip unicode filename test when building Windows wheels,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-10-16 09:00:51+02:00,-7200,2020-10-16 16:09:26+02:00,-7200,True,False,"['tests.yml', 'common.py', 'test_container.py']",['0839954c8358746d829be5d6797a7dcd647ca9e2'],3,4,7,3,,,
718eaefdc770d982bd3c3f7a9d11ea18e5006c17,[package] mention Python 3.9 compatibility,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-01-22 16:04:24+01:00,-3600,2021-01-23 10:45:08+01:00,-3600,True,False,['setup.py'],['6f9a1561f43e0cedc10c0ee33cd30bded7d34dc0'],0,1,1,1,,,
b23648467fc5beb634c05690b853ea0bf749a593,Release v8.0.3,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-01-22 17:16:53+01:00,-3600,2021-01-23 10:47:14+01:00,-3600,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['718eaefdc770d982bd3c3f7a9d11ea18e5006c17'],2,5,7,2,,,
2b40d57c88ef5722d366c4041b9f80fac8cacce0,Bump to next dev version.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-01-23 14:18:26+01:00,-3600,2021-01-23 14:18:26+01:00,-3600,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['b23648467fc5beb634c05690b853ea0bf749a593'],1,5,6,2,,,
bf4d90bcc7dd016a129ff2e3d59ea3cba1417691,Fix args order in Frame.__repr__,Семён Марьясин,simeon@maryasin.name,Jeremy Lainé,jeremy.laine@m4x.org,2021-02-25 19:54:25+03:00,-10800,2021-02-26 08:06:08+01:00,-3600,True,False,['frame.pyx'],['2b40d57c88ef5722d366c4041b9f80fac8cacce0'],1,1,2,1,,,
b79705db4e91c4f6596d69326b69f962d68eed77,fix docs: loglevel QUIET isn't available,Philipp Klaus,klaus@physik.uni-frankfurt.de,Jeremy Lainé,jeremy.laine@m4x.org,2020-11-10 15:26:39+01:00,-3600,2021-02-26 08:53:23+01:00,-3600,True,False,['logging.pyx'],['bf4d90bcc7dd016a129ff2e3d59ea3cba1417691'],1,1,2,1,,,
9c427e775fdb33fb89b0aed52c7a090115ca3e50,"[typo] replace ""availible"" by ""available""",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-02-26 08:54:47+01:00,-3600,2021-02-26 08:54:47+01:00,-3600,True,False,"['codec.pyx', 'context.pyx', 'core.pyx', 'error.pyx', 'logging.pyx', 'error.rst', 'setup.py']",['b79705db4e91c4f6596d69326b69f962d68eed77'],10,10,20,7,,,
d50413d410aa5d87ef6f79b0da98fb696f74bdf5,Expose codec_context.codec_tag (fixes: #741),Justin Wong,46082645+uvjustin@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2021-02-25 14:10:37+08:00,-28800,2021-02-26 09:08:50+01:00,-3600,True,False,"['context.pyx', 'test_codec_context.py']",['9c427e775fdb33fb89b0aed52c7a090115ca3e50'],1,34,35,2,0.8666666666666667,0.8666666666666667,0.8666666666666667
81e5cb2e3da2c514d112496b21fa1fb10051f5b6,example: encoding with custom PTS,Christoph Rackwitz,christoph.rackwitz@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2020-12-09 21:32:45+01:00,-3600,2021-02-26 10:38:15+01:00,-3600,True,False,['generate_video_with_pts.py'],['d50413d410aa5d87ef6f79b0da98fb696f74bdf5'],0,88,88,1,,,
359dbbdcd2fe8816d1d2eb3f9b67993da44d33cb,Check codec tag against known FATE sample,Justin Wong,46082645+uvjustin@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2021-02-26 17:28:50+08:00,-28800,2021-02-26 12:43:55+01:00,-3600,True,False,['test_codec_context.py'],['81e5cb2e3da2c514d112496b21fa1fb10051f5b6'],0,3,3,1,1.0,1.0,1.0
0bd186ee8857d7b7bf2fa95ac9a2fed0000e3c98,Use av_packet_rescale_ts in Packet._rebase_time() (fixes: #737),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-02-26 15:47:01+01:00,-3600,2021-02-26 16:37:20+01:00,-3600,True,False,"['packet.pyx', 'avcodec.pxd']",['359dbbdcd2fe8816d1d2eb3f9b67993da44d33cb'],17,2,19,2,,,
116ac733379ff213043ad4d8374a144caaee1c91,"[tests] do not hardcode errno values

Do not assume that 1 == EPERM and 2 == ENOENT (as OSError); rather use
the errno module to get/use their values.",Pino Toscano,toscano.pino@tiscali.it,Jeremy Lainé,jeremy.laine@m4x.org,2020-12-26 15:39:06+01:00,-3600,2021-02-26 16:48:26+01:00,-3600,True,False,"['test_errors.py', 'test_logging.py']",['0bd186ee8857d7b7bf2fa95ac9a2fed0000e3c98'],2,4,6,2,,,
60cbc412b7c9fea7bac624ec06b168b58ff785a1,"Use av_guess_format for output container format (fixes: #691)

Some formats go by multiple names, so checking for equality of the
format name fails. Use the higher-level `av_guess_format` which does
the right thing.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-02-26 16:15:56+01:00,-3600,2021-02-26 17:18:08+01:00,-3600,True,False,"['format.pyx', 'test_containerformat.py']",['116ac733379ff213043ad4d8374a144caaee1c91'],18,21,39,2,1.0,1.0,1.0
9ac05d9ac902d71ecb2fe80f04dcae454008378c,"Fix setting CodecContext.extradata

- this member can only be set for decoders
- we need to allocate and free the memory",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-03-01 22:03:06+01:00,-3600,2021-03-17 22:02:28+01:00,-3600,True,False,"['context.pxd', 'context.pyx', 'avcodec.pxd', 'avutil.pxd', 'test_codec_context.py']",['60cbc412b7c9fea7bac624ec06b168b58ff785a1'],7,47,54,5,1.0,1.0,1.0
1cbd8d1b325d2766cdce02d9e20f4fc5ffd51ad6,Fix an Sphinx/RST code block in the docs,Santiago Castro,sacastro@umich.edu,Jeremy Lainé,jeremy.laine@m4x.org,2021-05-06 22:10:03-04:00,14400,2021-12-29 10:35:32+01:00,-3600,True,False,['about.rst'],['9ac05d9ac902d71ecb2fe80f04dcae454008378c'],3,4,7,1,,,
c34dfce047b9bd34453bec3096840abb3c53780a,Fix the Conda install link in README,Santiago Castro,bryant1410@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2021-05-06 21:07:38-04:00,14400,2021-12-29 10:40:09+01:00,-3600,True,False,['README.md'],['1cbd8d1b325d2766cdce02d9e20f4fc5ffd51ad6'],3,2,5,1,,,
89836a4e038173c1595843a3d4a8ee446708553d,Export AudioStream,Marc Mueller,30130371+cdce8p@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2021-04-12 14:06:33+02:00,-7200,2021-12-29 10:42:10+01:00,-3600,True,False,['__init__.py'],['c34dfce047b9bd34453bec3096840abb3c53780a'],0,1,1,1,,,
73d3ced8499e29104d11f0ba47e00bfa23f3116c,"[build] update FFmpeg to 4.3.2 for binary wheels

Mention Python 3.10 compatibility, drop Python 3.6.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-12-29 09:29:38+01:00,-3600,2021-12-29 10:53:29+01:00,-3600,True,False,"['tests.yml', 'fetch-vendor.json', 'setup.py']",['89836a4e038173c1595843a3d4a8ee446708553d'],3,4,7,3,,,
b1ff8a7f7c2759f943f95dae3c7f74822e8b06e3,"Don't build PyPy 3.8 / Windows wheels

There seems to be some Cython issue with Windows:

  src\av\buffer.c(2928): error C2078: too many initializers",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-12-29 10:31:52+01:00,-3600,2021-12-29 10:53:29+01:00,-3600,True,False,['tests.yml'],['73d3ced8499e29104d11f0ba47e00bfa23f3116c'],1,1,2,1,,,
f20e2c58b57fd3fd19bd83119154dca9b6ef4f51,"Do not set max_analyze_duration at container init (fixes #801)

libavformat seems to set its own default values, see:

https://github.com/FFmpeg/FFmpeg/blob/8ff3fbf6bca0ee897e458fc27e5f967cdcbc16c7/libavformat/demux.c#L2393",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-12-29 19:05:38+01:00,-3600,2021-12-29 19:28:43+01:00,-3600,True,False,['core.pyx'],['b1ff8a7f7c2759f943f95dae3c7f74822e8b06e3'],1,0,1,1,,,
f4a9df04dc08d28d1198af7b5550ad1e37b99aa5,Release v8.1.0,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-12-29 19:28:21+01:00,-3600,2021-12-29 19:29:17+01:00,-3600,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['f20e2c58b57fd3fd19bd83119154dca9b6ef4f51'],2,19,21,2,,,
f1a535a1ae643d8102dc095d6b25c694fcf01410,Bump to next dev version.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-12-29 19:37:34+01:00,-3600,2021-12-30 12:37:21+01:00,-3600,True,False,"['CHANGELOG.rst', 'VERSION.txt']",['f4a9df04dc08d28d1198af7b5550ad1e37b99aa5'],1,5,6,2,,,
f7f5483d71db10ff81fe00b4f5c5bdc0652900c4,"Reflect the updated FFMPEG version in docs

PyAV v8.1.0 ships with FFMPEG 4.3.2, which should be reflected in the documentation.",Julian Schweizer,neuneck@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2021-04-01 13:07:50+02:00,-7200,2021-12-30 12:37:21+01:00,-3600,True,False,['about.rst'],['f1a535a1ae643d8102dc095d6b25c694fcf01410'],1,1,2,1,,,
0728a0853577a7385424730d0eb300f8c2d9fe5f,Add code highlighting in the README,Santiago Castro,bryant1410@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2021-12-30 06:00:05+02:00,-7200,2021-12-30 12:37:21+01:00,-3600,True,False,['README.md'],['f7f5483d71db10ff81fe00b4f5c5bdc0652900c4'],4,4,8,1,,,
a1af07efb064a9cfbb831247e4fcb72cbd7de520,Validate pixel format in VideoCodecContext.pix_fmt setter (fixes #815),Simon-Martin Schröder,martin.schroeder@nerdluecht.de,Jeremy Lainé,jeremy.laine@m4x.org,2021-12-31 08:14:39+01:00,-3600,2021-12-31 12:54:36+01:00,-3600,True,False,"['codeccontext.pyx', 'format.pxd', 'format.pyx', 'frame.pyx', 'test_codec_context.py', 'test_videoformat.py', 'test_videoframe.py']",['0728a0853577a7385424730d0eb300f8c2d9fe5f'],10,43,53,7,1.0,1.0,1.0
9785425285b8c28d0b0af603eb5692de726ba9e0,[build] add pyproject.toml to ensure Cython is present,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-12-30 18:22:00+01:00,-3600,2021-12-31 15:36:42+01:00,-3600,True,False,['pyproject.toml'],['a1af07efb064a9cfbb831247e4fcb72cbd7de520'],0,2,2,1,,,
95475cc19e5e43b56225ae00e253adbaf5d3a35d,"[build] simplify setup.py

- remove `distutils` import, it's deprecated
- remove msvc-specific hacks",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-12-30 10:45:28+01:00,-3600,2021-12-31 15:36:42+01:00,-3600,True,False,['setup.py'],['9785425285b8c28d0b0af603eb5692de726ba9e0'],113,4,117,1,0.5365853658536586,0.4634146341463415,0.0
8707fea24c7163b99a2bac7c2115932d7cf22f69,"Fix VideoFrame.to_image with height & width (fixes #878)

If the user passes height / width to VideoFrame.to_image(), the
output of reformat() may have a different size than the original
frame, so we cannot rely on `self.height` or `self.width`.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-01-24 15:40:43+01:00,-3600,2022-01-24 16:59:46+01:00,-3600,True,False,"['frame.pyx', 'test_videoframe.py']",['95475cc19e5e43b56225ae00e253adbaf5d3a35d'],1,7,8,2,1.0,1.0,1.0
6443f55e7d07948a93cc03f417e3cb66227fd6bf,Replace deprecated av_init_packet with av_packet_alloc,Justin Wong,46082645+uvjustin@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2022-01-05 23:45:34+08:00,-28800,2022-01-24 17:30:57+01:00,-3600,True,False,"['context.pyx', 'input.pyx', 'output.pyx', 'packet.pxd', 'packet.pyx', 'stream.pyx', 'codeccontext.pyx', 'avcodec.pxd']",['8707fea24c7163b99a2bac7c2115932d7cf22f69'],44,41,85,8,,,
8efcb4cd75b0b6e74b547dc64ced81c01a614511,[package] build wheels for arm64 on macos,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-01-25 13:17:09+01:00,-3600,2022-01-25 14:56:14+01:00,-3600,True,False,"['tests.yml', 'fetch-vendor.json', 'fetch-vendor.py']",['6443f55e7d07948a93cc03f417e3cb66227fd6bf'],17,34,51,3,0.0,0.0,1.0
f941e17b1c07295f6a00226f76c0561acc82b4c2,Fix setting Stream time_base (fixes #784),Justin Wong,46082645+uvjustin@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2022-01-04 13:07:26+08:00,-28800,2022-02-10 12:23:13+01:00,-3600,True,False,"['stream.pxd', 'stream.pyx', 'test_encode.py']",['8efcb4cd75b0b6e74b547dc64ced81c01a614511'],7,32,39,3,1.0,1.0,1.0
cd6595aa75159da14adc966e6d781d073481f803,Better time_base support with filters,Felix Vollmer,FelixVollmer@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2021-03-27 15:37:48+01:00,-3600,2022-02-10 13:09:13+01:00,-3600,True,False,"['context.pyx', 'graph.pyx', 'test_filters.py']",['f941e17b1c07295f6a00226f76c0561acc82b4c2'],2,54,56,3,0.2903225806451613,1.0,1.0
95b4f818c0b53c18af8a1ae0d5d9044df1586545,"Implement resampler and fifo with aformat and buffersink

This simplifies the code and matches the behaviour to the ffmpeg tool.",Felix Vollmer,FelixVollmer@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2021-03-28 14:22:21+02:00,-7200,2022-02-10 21:59:17+01:00,-3600,True,False,"['codeccontext.pyx', 'resampler.pxd', 'resampler.pyx', 'avfilter.pxd', 'test_audioresampler.py', 'test_codec_context.py', 'test_encode.py']",['cd6595aa75159da14adc966e6d781d073481f803'],207,102,309,7,1.0,0.13333333333333333,0.0
3ae7fe4c2120f235abcf415a27e6ec86302641b9,"[audio frame] fix ndarray conversion endianness (fixes: #833)

We assumed that sample data is always stored in little-endian order, but
that is not the case according to the FFmpeg documentation:

    The data described by the sample format is always in native-endian order.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-02-25 11:40:00+01:00,-3600,2022-02-25 14:54:42+01:00,-3600,True,False,"['frame.pyx', 'test_audioframe.py']",['95b4f818c0b53c18af8a1ae0d5d9044df1586545'],26,26,52,2,,,
c391e26b0add98462e7a4604679c496c3c2302e2,"[frames] make from_ndarray ValueError instead of AssertionError

When checking an input array's dtype and ndim, raise a ValueError
with a helpful message instead of an AssertionError.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-02-25 14:19:04+01:00,-3600,2022-02-25 14:54:42+01:00,-3600,True,False,"['frame.pyx', 'utils.pxd', 'utils.pyx', 'frame.pyx', 'test_audioframe.py']",['3ae7fe4c2120f235abcf415a27e6ec86302641b9'],26,63,89,5,1.0,1.0,1.0
04d5cdd78b5a7dd6711636660ad7daea243d2713,[qa] reformat code using `black`,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-02-25 14:47:14+01:00,-3600,2022-02-25 15:14:16+01:00,-3600,True,False,"['tests.yml', '__init__.py', '__main__.py', '__init__.py', 'datasets.py', 'deprecation.py', 'parse.py', 'remux.py', 'save_keyframes.py', 'thread_type.py', 'barcode.py', 'generate_video.py', 'generate_video_with_pts.py', 'test', 'setup.cfg', 'common.py', 'test_audiofifo.py', 'test_audioformat.py', 'test_audioframe.py', 'test_audiolayout.py', 'test_audioresampler.py', 'test_codec.py', 'test_codec_context.py', 'test_container.py', 'test_containerformat.py', 'test_decode.py', 'test_deprecation.py', 'test_dictionary.py', 'test_doctests.py', 'test_encode.py', 'test_enums.py', 'test_errors.py', 'test_file_probing.py', 'test_filters.py', 'test_logging.py', 'test_options.py', 'test_python_io.py', 'test_seek.py', 'test_streams.py', 'test_subtitles.py', 'test_timeout.py', 'test_videoformat.py', 'test_videoframe.py']",['c391e26b0add98462e7a4604679c496c3c2302e2'],749,878,1627,43,0.0,0.9733333333333334,0.86
01b89d980fc9202ef23d72cce89a9c4c6a9423b5,[filters] allow flushing by sending `None` (fixes: #886),FirefoxMetzger,sebastian@wallkoetter.net,Jeremy Lainé,jeremy.laine@m4x.org,2022-02-24 21:22:29+01:00,-3600,2022-02-25 17:42:42+01:00,-3600,True,False,"['context.pyx', 'graph.pyx', 'test_filters.py']",['04d5cdd78b5a7dd6711636660ad7daea243d2713'],3,32,35,3,0.0,1.0,1.0
82ac9ac23e5a17eca728edf6a5c011c58bdf291e,"[tests] make ndarray comparisons more explicit

Show the differences between the arrays to make debugging easier.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-02-25 16:22:42+01:00,-3600,2022-02-25 17:44:33+01:00,-3600,True,False,"['common.py', 'test_audioframe.py', 'test_videoframe.py']",['01b89d980fc9202ef23d72cce89a9c4c6a9423b5'],23,39,62,3,1.0,1.0,0.0
f7178e3067c00a8123d4d0f17c09406138493ed6,"[wheels] skip test suite on some platforms

When there are no binary wheels of numpy, the test suite takes ages to
run because numpy needs to be built from source.

There are no binary wheels of numpy:

- for Python 3.7
- for PyPy on some platforms
- for i686",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-02-25 18:44:49+01:00,-3600,2022-02-25 22:39:02+01:00,-3600,True,False,['tests.yml'],['82ac9ac23e5a17eca728edf6a5c011c58bdf291e'],0,2,2,1,,,
34d7f4840bba0f959382288b7d231fb3a32f0328,[wheels] re-enable wheel tests on macos,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-02-25 18:47:04+01:00,-3600,2022-02-25 22:39:02+01:00,-3600,True,False,['tests.yml'],['f7178e3067c00a8123d4d0f17c09406138493ed6'],3,1,4,1,,,
020312667268e322c5caaa33ae35453204a46992,"[package] update ffmpeg to 4.3.3, build wheels for aarch64",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2021-02-14 00:13:02+01:00,-3600,2022-02-26 05:38:52+01:00,-3600,True,False,"['tests.yml', 'about.rst', 'fetch-vendor.json']",['34d7f4840bba0f959382288b7d231fb3a32f0328'],2,9,11,3,,,
8f51049dc11705013c61979ca8a820982e8bd114,"Avoid unnecessary vsnprintf() calls in log_callback()

mov_read_trak() and mov_read_trun() generate a lot of AV_LOG_TRACE
logs, which are ultimately thrown away. However, log_callback() still
formats and processes them. This causes av_log() to - at least in some
cases I observed with perf record - to take 97% of
avformat_open_input() run time. Improve this by returning from
log_callback() early when a log is obviously not needed.",mephi42,mephi42@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2022-01-23 18:41:29+01:00,-3600,2022-03-06 11:18:31+01:00,-3600,True,False,['logging.pyx'],['020312667268e322c5caaa33ae35453204a46992'],0,6,6,1,,,
fb0f7faab4804c8c605fcf3ff4fdb5f8e535a3ad,"[package] move version information to av/about.py (see: #844)

We can also simplify setup.py because Cython is guaranteed to be
present. While we are at it, reformat setup.py using `black`.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-06 23:43:07+01:00,-3600,2022-03-07 13:44:35+01:00,-3600,True,False,"['README.md', 'VERSION.txt', '__init__.py', '__main__.py', '_core.pyx', 'about.py', 'conf.py', 'libav.pxd', 'libav.pyav.h', 'setup.py']",['8f51049dc11705013c61979ca8a820982e8bd114'],238,146,384,10,1.0,1.0,0.0
fc9f927cedbb1637426725db490385ba58e06890,"[docs] restructure documentation

- remove obsolete instructions for old Ubuntu and libav
- move ""Unsupported features"" to the ""caveats"" section
- merge the ""about"" into ""installation""",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-07 10:32:58+01:00,-3600,2022-03-07 13:44:35+01:00,-3600,True,False,"['about.rst', 'caveats.rst', 'installation.rst']",['fb0f7faab4804c8c605fcf3ff4fdb5f8e535a3ad'],129,68,197,3,,,
27a3bff0b6578b4db9c83ceaa9eb32b837e8fd94,[package] update ffmpeg binaries to enable xcb on Linux (fixes: #885),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-07 09:37:14+01:00,-3600,2022-03-07 15:28:46+01:00,-3600,True,False,['fetch-vendor.json'],['fc9f927cedbb1637426725db490385ba58e06890'],1,1,2,1,,,
033a9e8ba5b3af07a07a373409de1e2728ffe2e9,"[audio] make resampler consistently flush buffer

The previous behaviour when passing `None` to AudioResampler.resample() was
not consistent:

- the ""passthrough"" resampler returned `[None]`
- actual resamplers were never flushed, dropping the final frames

Now:
- AudioResampler.resample() never returns `None` frames
- actual resamplers are correctly flushed",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-07 17:20:57+01:00,-3600,2022-03-07 21:15:13+01:00,-3600,True,False,"['resampler.pyx', 'test_audioresampler.py']",['27a3bff0b6578b4db9c83ceaa9eb32b837e8fd94'],20,133,153,2,0.1746031746031746,1.0,1.0
b9eb2683a26e1e0abbcb571b857acd342c09f7a3,[audio] prune some useless imports and members,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-07 18:19:16+01:00,-3600,2022-03-07 21:16:29+01:00,-3600,True,False,"['codeccontext.pxd', 'resampler.pxd', 'resampler.pyx']",['033a9e8ba5b3af07a07a373409de1e2728ffe2e9'],9,0,9,3,,,
9a7b7b0ca643786676c1b87f320509c14dc5d40e,"Remove deprecated methods

The following deprecated methods are removed:

- AudioFrame.to_nd_array
- VideoFrame.to_nd_array
- Stream.seek",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-07 19:50:53+01:00,-3600,2022-03-07 21:16:29+01:00,-3600,True,False,"['frame.pyx', 'stream.pyx', 'frame.pyx', 'test_audioframe.py', 'test_seek.py', 'test_videoframe.py']",['b9eb2683a26e1e0abbcb571b857acd342c09f7a3'],69,2,71,6,0.1935483870967742,0.1935483870967742,0.0
6d2d9aab4893491c7fecdd9923ab0fa014aef72e,Release v9.0.0,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-07 15:44:29+01:00,-3600,2022-03-08 00:46:35+01:00,-3600,True,False,"['CHANGELOG.rst', 'about.py']",['9a7b7b0ca643786676c1b87f320509c14dc5d40e'],2,22,24,2,,,
6bf8b1f486d03c9742e81a97b0e3099597f47b07,Bump to next dev version.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-08 08:25:39+01:00,-3600,2022-03-08 08:25:39+01:00,-3600,True,False,"['CHANGELOG.rst', 'README.md', 'about.py']",['6d2d9aab4893491c7fecdd9923ab0fa014aef72e'],3,7,10,3,,,
0e3ff4cc51f7fdc9ee5184305df948c4da559103,"[tests] test against FFmpeg 4.3, re-enable macOS tests",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-10 07:36:07+01:00,-3600,2022-03-10 11:36:02+01:00,-3600,True,False,['tests.yml'],['6bf8b1f486d03c9742e81a97b0e3099597f47b07'],4,6,10,1,,,
210e61804660c626ea636699ff095fb04de48d33,"[streams] prune some dead code

- the `average_rate` is already defined on the base Stream class, we do
  not need to redefine it in VideoStream
- prune unused imports from AudioStream and VideoStream
- fix a typo in the `guessed_rate` docstring",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-10 11:21:53+01:00,-3600,2022-03-10 12:18:08+01:00,-3600,True,False,"['stream.pyx', 'stream.pyx', 'stream.pxd', 'stream.pyx']",['0e3ff4cc51f7fdc9ee5184305df948c4da559103'],14,1,15,4,,,
4991d8780dae21e19503679a7d87291a650da5c2,"[tests] explicitly run memoryview() tests

We *know* we are using Python 3, so drop the tests using buffer() and
always run those using memoryview().",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-10 12:15:08+01:00,-3600,2022-03-10 15:37:32+01:00,-3600,True,False,"['test_subtitles.py', 'test_videoframe.py']",['210e61804660c626ea636699ff095fb04de48d33'],18,2,20,2,0.23076923076923078,0.0,0.0
7548d7b42f1a34033a6ee4cbe74d16652baefaab,"[package] update FFmpeg binaries for wheels (fixes: #901)

This updates several packages to fix security vulnerabilities.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-11 00:19:38+01:00,-3600,2022-03-11 11:16:51+01:00,-3600,True,False,['fetch-vendor.json'],['4991d8780dae21e19503679a7d87291a650da5c2'],1,1,2,1,,,
7a71cad474dfccd54421395a0f8ebd88f0230297,Release v9.0.1,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-11 11:23:16+01:00,-3600,2022-03-11 11:23:16+01:00,-3600,True,False,"['CHANGELOG.rst', 'about.py']",['7548d7b42f1a34033a6ee4cbe74d16652baefaab'],2,5,7,2,,,
37915a338c7bd8df8e757c3c98231ebb3b3c5eca,Bump to next dev version.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-11 11:30:54+01:00,-3600,2022-03-11 11:30:54+01:00,-3600,True,False,"['CHANGELOG.rst', 'about.py']",['7a71cad474dfccd54421395a0f8ebd88f0230297'],1,5,6,2,,,
25a744c10bd54fabdab84d769a912e9b76e07d13,[package] simplify setup.py down to bare minimum (fixes: #844),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-11 12:18:44+01:00,-3600,2022-03-11 15:08:01+01:00,-3600,True,False,"['tests.yml', 'setup.py']",['37915a338c7bd8df8e757c3c98231ebb3b3c5eca'],240,100,340,2,0.07407407407407407,0.2777777777777778,0.0
831040033b9f03bb0b6d881a248909c8b4b358c8,[tests] test against FFmpeg 4.4,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-01-24 23:25:10+01:00,-3600,2022-03-16 11:56:42+01:00,-3600,True,False,['tests.yml'],['25a744c10bd54fabdab84d769a912e9b76e07d13'],4,7,11,1,,,
17f26d4deb605bfc865f1d9e2c592b5b2a276a75,"[streams] initialise stream avg_frame_rate (fixes: #876)

We need to initialise an output video stream's average frame rate from
the codec context's framerate, otherwise the duration and FPS calculations
are wrong when writing video with FFmpeg >= 4.4.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-16 11:15:42+01:00,-3600,2022-03-16 11:56:42+01:00,-3600,True,False,['output.pyx'],['831040033b9f03bb0b6d881a248909c8b4b358c8'],0,1,1,1,,,
7289675495285ac1f3eb4a0c60c4174197a15d9c,"[tests] get rid of ""long"", it doesn't exist in Python 3",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-16 12:50:57+01:00,-3600,2022-03-16 12:50:57+01:00,-3600,True,False,['test_file_probing.py'],['17f26d4deb605bfc865f1d9e2c592b5b2a276a75'],8,2,10,1,,,
34796664e9b44cb390bab90d41019d1bc3ed98d1,[package] update ffmpeg to 4.4.1,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-21 10:04:34+01:00,-3600,2022-03-21 11:27:13+01:00,-3600,True,False,"['installation.rst', 'fetch-vendor.json']",['7289675495285ac1f3eb4a0c60c4174197a15d9c'],3,2,5,2,,,
507d348e2d0660fbcde06e815f959918693061b3,"Remove useless `from __future__` imports

We only support Python >= 3.6, so we can prune these imports.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-21 14:04:04+01:00,-3600,2022-03-21 15:27:50+01:00,-3600,True,False,"['datasets.py', 'dictionary.pyx', 'enum.pyx', 'logging.pyx', 'motionvectors.pyx', 'sidedata.pyx', 'generate_video.py', 'audio.py', 'audio_player.py', 'average.py', 'cctx_decode.py', 'cctx_encode.py', 'decode.py', 'encode.py', 'encode_frames.py', 'filter_audio.py', 'frame_seek_example.py', 'graph.py', 'player.py', 'remux.py', 'resource_use.py', 'save_subtitles.py', 'second_seek_example.py', 'seekmany.py', 'autolint', 'common.py', 'test_encode.py', 'test_file_probing.py', 'test_logging.py', 'test_python_io.py', 'test_seek.py']",['34796664e9b44cb390bab90d41019d1bc3ed98d1'],274,10,284,31,,,
b65f5a9f93144d2eadbb3e460bb45d869f5ce2fe,"[scripts] remove references to Travis, we use GitHub Actions",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-21 14:14:52+01:00,-3600,2022-03-21 15:27:50+01:00,-3600,True,False,"['activate.sh', 'build', 'build-deps', 'test']",['507d348e2d0660fbcde06e815f959918693061b3'],26,2,28,4,,,
5f067bd69ae249c235271ff980010adc312a6026,Release v9.0.2,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-23 08:26:57+01:00,-3600,2022-03-23 08:26:57+01:00,-3600,True,False,"['CHANGELOG.rst', 'about.py']",['b65f5a9f93144d2eadbb3e460bb45d869f5ce2fe'],2,6,8,2,,,
dc2cd763515b142c848e8eccd8a398dc64503d72,Bump to next dev version.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-24 08:16:01+01:00,-3600,2022-03-24 08:16:10+01:00,-3600,True,False,"['CHANGELOG.rst', 'about.py']",['5f067bd69ae249c235271ff980010adc312a6026'],1,5,6,2,,,
924edd0883c5b8493a905884ea7a50a943118824,[container] remove flags which are gone in FFmpeg 5,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-16 00:13:37+01:00,-3600,2022-03-24 08:16:10+01:00,-3600,True,False,"['core.pyx', 'avformat.pxd']",['dc2cd763515b142c848e8eccd8a398dc64503d72'],8,0,8,2,,,
f69b19daa62f968104746c4e224ec1c8f89d60cb,"[tests] reduce the number of warnings

- flush audio encoders
- reset the picture type for video encoding
- stop gratuitously clearing pts",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-24 09:07:55+01:00,-3600,2022-03-24 09:41:49+01:00,-3600,True,False,"['test_codec_context.py', 'test_encode.py']",['924edd0883c5b8493a905884ea7a50a943118824'],42,10,52,2,1.0,0.9666666666666667,0.43333333333333335
345302fadb1638a499b76fe4079c6d96743e05a6,[tests] refactor Python I/O tests,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-24 10:26:28+01:00,-3600,2022-03-24 18:04:04+01:00,-3600,True,False,['test_python_io.py'],['f69b19daa62f968104746c4e224ec1c8f89d60cb'],58,47,105,1,0.0,0.0,0.0
9a313d8f47ec2214011863b120940b0ee5083fa8,Move Python I/O code to a PyIOFile class,Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2020-05-21 12:32:25+01:00,-3600,2022-03-24 19:56:38+01:00,-3600,True,False,"['core.pxd', 'core.pyx', 'pyio.pxd', 'pyio.pyx']",['345302fadb1638a499b76fe4079c6d96743e05a6'],70,90,160,4,,,
864fa981183f5972ee723af7b81a5ac402a656d4,"[docs] fix build by pinning sphinx < 4.4

Also remove a reference to the obsolete Stream.seek() method.

See: #913",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-25 09:56:32+01:00,-3600,2022-03-25 13:52:36+01:00,-3600,True,False,"['stream.pyx', 'codec.rst', 'stream.rst', 'conf.py', 'requirements.txt']",['9a313d8f47ec2214011863b120940b0ee5083fa8'],9,7,16,5,,,
ed84e8e9251759086af852b0ad16a40df3261005,"[buffer] deprecate Buffer.to_bytes()

This method is no longer needed since with Python 3 we can simply use
bytes(buf).",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-25 10:49:27+01:00,-3600,2022-03-25 15:06:25+01:00,-3600,True,False,"['buffer.pyx', 'audio.py', 'audio_player.py', 'decode.py', 'test_audiofifo.py', 'test_codec_context.py']",['864fa981183f5972ee723af7b81a5ac402a656d4'],9,11,20,6,,,
e9d87b01ee412ca50180416c5cdf3fb996964a4c,"[stream] check self.codec_context is valid before using (fixes: #689)

If self.codec_context is None, we get a segmentation fault when calling
any of its methods.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-25 16:37:22+01:00,-3600,2022-03-25 16:38:08+01:00,-3600,True,False,['stream.pyx'],['ed84e8e9251759086af852b0ad16a40df3261005'],1,10,11,1,,,
4fa70f8073708a56fa816c08ef6fae74611d3df0,Make it possible to read from a pipe (fixes: #738),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-24 18:13:52+01:00,-3600,2022-03-25 16:44:41+01:00,-3600,True,False,"['core.pyx', 'pyio.pyx', 'test_python_io.py']",['e9d87b01ee412ca50180416c5cdf3fb996964a4c'],12,88,100,3,1.0,1.0,1.0
fd9c9cc0e593b7ffd23bfe33778632fcf5e68d35,"Ensure probing a corrupt file does not crash (fixes: #590)

- make get_audio_format() return None for invalid formats
- fix AudioStream.__repr__ to deal with this situation
- make InputContainer.duration and InputContainer.start_time return None
  when ""no value"" is encountered",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-25 17:38:30+01:00,-3600,2022-03-25 22:53:22+01:00,-3600,True,False,"['format.pyx', 'stream.pyx', 'input.pyx', 'test_decode.py', 'test_file_probing.py']",['4fa70f8073708a56fa816c08ef6fae74611d3df0'],3,164,167,5,0.5045045045045045,1.0,1.0
4b56c73c33e84fd0a9105053e201c6913d74377b,"[setup] detect static build, require FFmpeg to clean

Fixes: #120
Fixes: #915",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-26 00:34:12+01:00,-3600,2022-03-26 00:36:34+01:00,-3600,True,False,['setup.py'],['fd9c9cc0e593b7ffd23bfe33778632fcf5e68d35'],1,9,10,1,0.0,0.0,1.0
1c68f225b03cefae2b31acd441f6703468a7fdac,[issues] add an action to flag and close stale issues,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-26 01:09:46+01:00,-3600,2022-03-26 01:09:46+01:00,-3600,True,False,['issues.yml'],['4b56c73c33e84fd0a9105053e201c6913d74377b'],0,17,17,1,,,
1505cd017179124eff4ebb03cd85cc8f3cb96c51,[tests] prefer using `with av.open(...)` context manager when writing,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-26 02:05:00+01:00,-3600,2022-03-26 11:14:51+01:00,-3600,True,False,"['test_container.py', 'test_encode.py', 'test_python_io.py']",['1c68f225b03cefae2b31acd441f6703468a7fdac'],167,140,307,3,1.0,,
4c68897c27e06f072d938434d0d4651f8a4c2817,"Ensure av_write_trailer is only called once (fixes: #613)

We must only ever call av_write_trailer *once*, otherwise we get a
segmentation fault. Therefore no matter whether it succeeds or not
we must absolutely set self._done.

Also we need to be more careful when closing the streams' CodecContext:

- It's too late to iterate over the streams in __dealloc__ as Python
  object destruction may have already started.

- We must not error if there is not CodecContext or if the CodecContext
  has already been closed by the user.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-26 11:15:45+01:00,-3600,2022-03-26 12:00:44+01:00,-3600,True,False,"['output.pyx', 'test_python_io.py']",['1505cd017179124eff4ebb03cd85cc8f3cb96c51'],11,50,61,2,1.0,1.0,1.0
0299577c3335614e835a5c9bbbcf47a8e324aa1e,"Add VideoFrame ndarray operations for rgb48be, rgb48le, rgb64be, rgb64le",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-26 15:18:57+01:00,-3600,2022-03-26 20:58:32+01:00,-3600,True,False,"['frame.pyx', 'test_videoframe.py']",['4c68897c27e06f072d938434d0d4651f8a4c2817'],2,81,83,2,1.0,1.0,1.0
76afdefb119d4adbf356f9330943507f97a7f38d,"Add VideoFrame ndarray operations for gray16be, gray16le (fixes: #674)",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-26 21:32:37+01:00,-3600,2022-03-27 07:28:53+02:00,-7200,True,False,"['frame.pyx', 'test_videoframe.py']",['0299577c3335614e835a5c9bbbcf47a8e324aa1e'],10,53,63,2,1.0,1.0,0.6
3c01e4ee5b8a8d241ed8d92c25a168dc421a6d88,"[scratchpad] update the ""remux"" example",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-27 11:00:10+02:00,-7200,2022-03-27 11:00:10+02:00,-7200,True,False,['remux.py'],['76afdefb119d4adbf356f9330943507f97a7f38d'],38,28,66,1,0.0,0.0,0.0
9cbe441d637be15d5b4b57211a7df3958c3c0a02,"[package] update FFmpeg binaries for wheels (fixes: #921)

This updates several packages to fix security vulnerabilities and adds
support for vpx.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-27 07:30:07+02:00,-7200,2022-03-27 11:06:32+02:00,-7200,True,False,"['installation.rst', 'fetch-vendor.json']",['3c01e4ee5b8a8d241ed8d92c25a168dc421a6d88'],1,2,3,2,,,
841debd91f2735d4b54ec77bef5296e2aab06b15,[filters] release GIL when pushing/pulling frames (fixes: #527),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-27 10:49:33+02:00,-7200,2022-03-27 11:26:15+02:00,-7200,True,False,['context.pyx'],['9cbe441d637be15d5b4b57211a7df3958c3c0a02'],4,13,17,1,,,
485221eb8badd271f9b89bebfa48039edaf8ac5d,[issues] raise number of operations per run,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-27 12:22:48+02:00,-7200,2022-03-27 12:22:48+02:00,-7200,True,False,['issues.yml'],['841debd91f2735d4b54ec77bef5296e2aab06b15'],0,1,1,1,,,
95372bfbfe38e98447982d801749c6acff36181b,[thread type] improve documentation for AUTO (fixes: #365),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-27 12:29:16+02:00,-7200,2022-03-27 12:29:16+02:00,-7200,True,False,['context.pyx'],['485221eb8badd271f9b89bebfa48039edaf8ac5d'],1,1,2,1,,,
f74bcb21e838dadcb75b5dd8ee6abf1cf2a8bf6c,"[tests] uniformize file probing tests

- test all attributes for every media type
- sort tested attributes alphabetically
- move multi-valued tests",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-27 16:07:09+02:00,-7200,2022-03-27 16:53:18+02:00,-7200,True,False,['test_file_probing.py'],['95372bfbfe38e98447982d801749c6acff36181b'],33,20,53,1,0.6666666666666666,0.0,0.0
52536516be2471057216b2c051de850dcace08b9,"[subtitles] remove Python 2 buffer, improve tests",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-27 16:30:59+02:00,-7200,2022-03-27 17:16:53+02:00,-7200,True,False,"['subtitle.pyx', 'test_subtitles.py']",['f74bcb21e838dadcb75b5dd8ee6abf1cf2a8bf6c'],38,25,63,2,0.0,1.0,1.0
0271719b85b3981accca7e7cfaaa13bb1ae31db9,"[subtitles] use the ""ass"" format for subtitles, not ""ass_with_timings""

The default ""ass_with_timings"" format has been deprecated for a long
time, but it remained the default before FFmpeg 5.0. We explicitly opt
into the new format to have consistent behaviour across all versions.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-27 18:47:12+02:00,-7200,2022-03-27 23:25:31+02:00,-7200,True,False,"['context.pyx', 'avcodec.pxd', 'test_subtitles.py']",['52536516be2471057216b2c051de850dcace08b9'],4,8,12,3,1.0,0.0,0.0
6c45f71c4f850ff1610e49ba23b403291aa61f01,[package] update FFmpeg binaries to enable ALSA on Linux (fixes: #941),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-28 00:45:29+02:00,-7200,2022-03-28 15:06:00+02:00,-7200,True,False,"['tests.yml', 'fetch-vendor.json']",['0271719b85b3981accca7e7cfaaa13bb1ae31db9'],1,2,3,2,,,
75b7d9688157a1f2f064f0e72d7898477d28ac36,Release v9.1.0.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-28 08:25:17+02:00,-7200,2022-03-28 15:06:38+02:00,-7200,True,False,"['CHANGELOG.rst', 'about.py']",['6c45f71c4f850ff1610e49ba23b403291aa61f01'],2,17,19,2,,,
fecc0d544a9ce28b3f6c8456fa83e88a71de24e4,"[package] update FFmpeg binaries, use delvewheel

- the Linux build disables ALSA again, it's not working
- the Windows build is now built from source
- use `delvewheel` to delocate Windows wheels",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-30 08:43:11+02:00,-7200,2022-03-30 21:57:18+02:00,-7200,True,False,"['tests.yml', 'fetch-vendor.json', 'inject-dll']",['75b7d9688157a1f2f064f0e72d7898477d28ac36'],40,3,43,3,,,
9638adc183acf9e1f1886990d9642e2f13055c5b,[package] remove Python 3.6 from classifiers,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-30 22:08:36+02:00,-7200,2022-03-30 22:08:36+02:00,-7200,True,False,['setup.py'],['fecc0d544a9ce28b3f6c8456fa83e88a71de24e4'],1,0,1,1,,,
6c3cf721e1a842a1ca04203652a3e25779dbe472,Release v9.1.1.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-31 23:22:00+02:00,-7200,2022-03-31 23:22:00+02:00,-7200,True,False,"['CHANGELOG.rst', 'about.py']",['9638adc183acf9e1f1886990d9642e2f13055c5b'],1,8,9,2,,,
5c31a26105e129aa939e40fff132a750905801b8,Implement custom io_open/io_close support in container,Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2020-05-21 12:32:25+01:00,-3600,2022-03-31 23:29:02+02:00,-7200,True,False,"['core.pxd', 'core.pyx', 'pyio.pxd', 'pyio.pyx', 'avformat.pxd', 'test_python_io.py']",['6c3cf721e1a842a1ca04203652a3e25779dbe472'],4,200,204,6,0.5675675675675675,1.0,0.5405405405405406
cf434f6fdcac067c2ce2b3bb71cec3110fb4eaa4,"Remove redundant custom IO AVIOContext opaque set to NULL

It can result in a segmentation fault if Python garbage collected
the PyIOFile immediately after removing it from the open_files map.",Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-29 10:48:21+00:00,0,2022-03-31 23:29:02+02:00,-7200,True,False,['core.pyx'],['5c31a26105e129aa939e40fff132a750905801b8'],1,0,1,1,,,
f956e3ec10e0ab021f67e358eea16e65f3ddc1bf,"Use AVFMT_FLAG_CUSTOM_IO to stop ffmpeg closing it

avformat_open_input would otherwise call avio_closep when there is an
error opening a custom IO file.",Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-29 11:36:10+00:00,0,2022-03-31 23:29:02+02:00,-7200,True,False,['core.pyx'],['cf434f6fdcac067c2ce2b3bb71cec3110fb4eaa4'],0,1,1,1,,,
b7248f3ee5259214addb61cff2580ca456d888d5,Enable dash demuxer in ffmpeg build,Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-29 13:02:28+00:00,0,2022-03-31 23:29:02+02:00,-7200,True,False,['build-deps'],['f956e3ec10e0ab021f67e358eea16e65f3ddc1bf'],0,1,1,1,,,
3f241d0673df4da405a76ecf4bf8a3b102a3a5f0,Add content check to custom IO test,Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-29 11:38:47+00:00,0,2022-03-31 23:29:02+02:00,-7200,True,False,"['common.py', 'test_encode.py', 'test_python_io.py']",['b7248f3ee5259214addb61cff2580ca456d888d5'],28,56,84,3,0.3333333333333333,1.0,1.0
23547638c97a44350d03c9f918e0fc14f768cdb7,Add add_dash to expose dash only checks in assert_rgb_rotate,Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-29 15:42:33+00:00,0,2022-03-31 23:29:02+02:00,-7200,True,False,"['test_encode.py', 'test_python_io.py']",['3f241d0673df4da405a76ecf4bf8a3b102a3a5f0'],12,11,23,2,1.0,0.0,0.0
d180657b3ce8509501045c20ae84e04fc2ce04ec,Use a decorator to run test in the sandbox directory,Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-29 16:05:30+00:00,0,2022-03-31 23:29:02+02:00,-7200,True,False,"['common.py', 'test_python_io.py']",['23547638c97a44350d03c9f918e0fc14f768cdb7'],39,38,77,2,1.0,1.0,0.0
7e6bbb51b6294168ca72501afe6a387a2e2138d6,Check DASH title metadata for ffmpeg version >= 4.2,Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-29 16:16:32+00:00,0,2022-03-31 23:29:02+02:00,-7200,True,False,['test_encode.py'],['d180657b3ce8509501045c20ae84e04fc2ce04ec'],2,3,5,1,0.0,1.0,0.0
e0ff557a9a346ac8a77f8f47d467b0b7ef18aa9f,"Fix custom io open if when options is NULL

The image muxer set the options to NULL and that resulted in a
segmentation fault when attempting to dereference it.",Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-30 10:08:33+00:00,0,2022-03-31 23:29:02+02:00,-7200,True,False,['core.pyx'],['7e6bbb51b6294168ca72501afe6a387a2e2138d6'],4,9,13,1,,,
e3d5dde8caf407896fbecf313bef5b8a6a4a8387,Add a custom IO test for a image2 PNG sequence,Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-30 10:12:24+00:00,0,2022-03-31 23:29:02+02:00,-7200,True,False,['test_python_io.py'],['e0ff557a9a346ac8a77f8f47d467b0b7ef18aa9f'],7,65,72,1,0.0,1.0,1.0
fd339eef867f7da7ee066eb7b9624b343b2624b9,Add docstring for io_open argument,Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-30 12:38:11+00:00,0,2022-03-31 23:29:02+02:00,-7200,True,False,['core.pyx'],['e3d5dde8caf407896fbecf313bef5b8a6a4a8387'],0,14,14,1,,,
15be68f8b242835adfa77c97dddb408755de8021,"Skip test if Image is None, ie. PIL not available",Philip de Nier,philipn@rd.bbc.co.uk,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-30 14:52:34+00:00,0,2022-03-31 23:29:02+02:00,-7200,True,False,['test_python_io.py'],['fd339eef867f7da7ee066eb7b9624b343b2624b9'],0,4,4,1,0.0,0.0,1.0
d399d6f539b620b3a42decd01dfe4bf82886d692,"[wheels] fix creating temporary directory for dependencies

cibuildwheel seems to have changed the temporary directory on Windows,
so C:\cibw is not guaranteed to exist.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-04-04 09:42:22+02:00,-7200,2022-04-04 13:08:10+02:00,-7200,True,False,['fetch-vendor.py'],['15be68f8b242835adfa77c97dddb408755de8021'],1,1,2,1,,,
4a916dbbb1d205ab82b5a28c075bb16d9ff5a769,"[package] update FFmpeg binaries

- VPX is enabled on all platforms
- the Windows build disable mediafoundation support as it drags in a
  dependency on MFPlat.DLL",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-04-05 12:31:12+02:00,-7200,2022-04-06 13:14:51+02:00,-7200,True,False,['fetch-vendor.json'],['d399d6f539b620b3a42decd01dfe4bf82886d692'],1,1,2,1,,,
792e0fa511693924f25f295bcc25c6e10c95d994,setup.py: Include *.pxd files as package_data,Pablo Prietz,pablo@prietz.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-10-30 16:03:25+01:00,-3600,2022-04-06 17:57:07+02:00,-7200,True,False,['setup.py'],['4a916dbbb1d205ab82b5a28c075bb16d9ff5a769'],0,5,5,1,,,
1b709194a40a0285068260f240d7bf3efc720ea7,Add __init__.pxd files,Pablo Prietz,pablo@prietz.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-10-30 16:04:42+01:00,-3600,2022-04-06 17:57:07+02:00,-7200,True,False,"['__init__.pxd', '__init__.pxd', '__init__.pxd', '__init__.pxd', '__init__.pxd', '__init__.pxd', '__init__.pxd', '__init__.pxd', '__init__.pxd']",['792e0fa511693924f25f295bcc25c6e10c95d994'],0,0,0,9,,,
8196baa5f0cede30a09c6a6e67ef7a8677b862a1,"Support AV_FRAME_DATA_SEI_UNREGISTERED (fixes: #723)

This requires FFmpeg >= 4.4.",Benjamin Chrétien,2742231+bchretien@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-24 16:31:56+01:00,-3600,2022-04-17 18:32:45+02:00,-7200,True,False,"['enum.pyx', 'sidedata.pyx', 'avcodec.pxd']",['1b709194a40a0285068260f240d7bf3efc720ea7'],1,13,14,3,,,
e5ae31d25bdb4bf99593e8c1ce4e2e323431b8ae,"Allocate packet in OutputContainer to use for muxing

Fixes a memory leak introduced in 6443f55 when moving from
av_init_packet to av_packet_alloc.
Updated comment to make clear that av_interleaved_write_frame takes
ownership of the reference inside the packet and not the packet itself.",Justin Wong,46082645+uvjustin@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2022-04-12 13:56:49+10:00,-36000,2022-04-17 18:33:51+02:00,-7200,True,False,"['output.pxd', 'output.pyx']",['8196baa5f0cede30a09c6a6e67ef7a8677b862a1'],4,8,12,2,,,
b1701f5758ef6d057940e0c53d55133e5955277e,"[package] update FFmpeg binaries

Fix vpx flags for macos, see https://github.com/PyAV-Org/pyav-ffmpeg/pull/63",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-04-18 16:47:25+02:00,-7200,2022-04-19 00:02:19+02:00,-7200,True,False,['fetch-vendor.json'],['e5ae31d25bdb4bf99593e8c1ce4e2e323431b8ae'],1,1,2,1,,,
af1493cbad7faef70f39bc7cbaa843141d9fefd1,[package] work around Conda bug which breaks DLL loading (fixes: #952),Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-04-19 21:03:04+02:00,-7200,2022-04-20 08:19:27+02:00,-7200,True,False,['__init__.py'],['b1701f5758ef6d057940e0c53d55133e5955277e'],4,12,16,1,,,
4cf095390d5537f49abe83dcf97f4f8525ecbf1a,Release v9.2.0.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-04-20 08:30:28+02:00,-7200,2022-04-20 08:30:28+02:00,-7200,True,False,"['CHANGELOG.rst', 'about.py']",['af1493cbad7faef70f39bc7cbaa843141d9fefd1'],1,16,17,2,,,
88f286cb874324bb298bf85567f701cf5e3fb424,"[codec context] deprecate CodecContext.time_base for decoders

The FFmpeg API docs state that using AVCodecContext.time_base for
decoders is deprecated and AVCodecContext.framerate should be used
instead.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-28 19:33:15+02:00,-7200,2022-04-20 16:58:02+02:00,-7200,True,False,"['context.pyx', 'time.rst', 'test_codec_context.py', 'test_decode.py']",['4cf095390d5537f49abe83dcf97f4f8525ecbf1a'],8,36,44,4,1.0,1.0,1.0
a3af704c36e78cc341bf19e8408d1cc0913ae476,Fix useful_array when unaligned and dtype > 1 byte,Jonathan Drolet,jonathan.drolet@riedel.net,Jeremy Lainé,jeremy.laine@m4x.org,2022-05-08 20:56:46-04:00,14400,2022-05-18 18:02:09+02:00,-7200,True,False,"['frame.pyx', 'test_videoframe.py']",['88f286cb874324bb298bf85567f701cf5e3fb424'],2,13,15,2,1.0,1.0,1.0
01280b2324e7946905e033677adfb95cd7dd40eb,Add support in VideoFrame ndarray for gbrp formats,Jonathan Drolet,jonathan.drolet@riedel.net,Jeremy Lainé,jeremy.laine@m4x.org,2022-05-19 09:21:05-04:00,14400,2022-06-20 23:01:09+02:00,-7200,True,False,"['frame.pyx', 'test_videoframe.py']",['a3af704c36e78cc341bf19e8408d1cc0913ae476'],0,118,118,2,1.0,1.0,1.0
138eae8bc2ea4891eff36e9053f8f3228554ff45,Add FFmpeg 4.4 to Windows tests,Justin Wong,46082645+uvjustin@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2022-06-19 17:36:15+10:00,-36000,2022-06-25 16:37:11+02:00,-7200,True,False,['tests.yml'],['01280b2324e7946905e033677adfb95cd7dd40eb'],1,9,10,1,,,
972f3ca096ef30c063744bdcd3c3380325408ec3,Use pad count in alloc_filter_pads,Justin Wong,46082645+uvjustin@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2022-06-21 20:46:14+08:00,-28800,2022-06-25 16:38:33+02:00,-7200,True,False,"['pad.pyx', 'avfilter.pxd']",['138eae8bc2ea4891eff36e9053f8f3228554ff45'],3,19,22,2,,,
db3358d834001d76addb3ad806f12da1f1f7f307,"[tests] run tests against FFmpeg 5.0, drop 4.0 - 4.2",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-16 00:17:08+01:00,-3600,2022-07-06 09:35:59+02:00,-7200,True,False,"['tests.yml', 'installation.rst']",['972f3ca096ef30c063744bdcd3c3380325408ec3'],9,4,13,2,,,
18704658487ea25e5202ac18438d836dfe65b9d0,"[streams] stop using deprecated Stream.codec, it's gone in FFmpeg 5

We now allocate and populate an AVCodecContext ourselves.
avcodec_copy_context is also gone, so stop using it.

We relax the Stream.average_rate tests for older FFmpeg, as the videos
output by these older FFmpeg's seem to give a slightly wrong FPS since
the switch to our own AVCodecContext.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-03-11 16:30:43+01:00,-3600,2022-07-06 09:35:59+02:00,-7200,True,False,"['context.pxd', 'context.pyx', 'input.pyx', 'output.pyx', 'streams.pyx', 'stream.pyx', 'packet.pyx', 'stream.pxd', 'stream.pyx', 'stream.pyx', 'avcodec.pxd', 'avformat.pxd', 'common.py', 'test_codec_context.py', 'test_encode.py']",['db3358d834001d76addb3ad806f12da1f1f7f307'],118,143,261,15,0.0,1.0,0.0
bb6d61dca8089cce297061c490c82ce65b958943,[tests] run Windows tests against FFmpeg 5.0 too,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-07-20 15:38:13+02:00,-7200,2022-07-21 12:41:14+02:00,-7200,True,False,['tests.yml'],['18704658487ea25e5202ac18438d836dfe65b9d0'],5,8,13,1,,,
6bf6d29700e4b9e88ebf867a3f6bcea4e93be213,[package] compile wheels against FFmpeg 5.0.1,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-07-21 01:16:47+02:00,-7200,2022-07-21 12:41:23+02:00,-7200,True,False,['fetch-vendor.json'],['bb6d61dca8089cce297061c490c82ce65b958943'],1,1,2,1,,,
1d892a7ba638c5c708da57f72afe204011c8e6e9,Add VideoFrame ndarray operations for nv12,Maxime Desroches,desroches.maxime@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2022-06-18 01:09:26-07:00,25200,2022-07-21 15:05:52+02:00,-7200,True,False,"['frame.pyx', 'test_videoframe.py']",['6bf6d29700e4b9e88ebf867a3f6bcea4e93be213'],0,32,32,2,1.0,1.0,1.0
54ada44d38eeb1b141db92df065000379ce25e1a,Add support in VideoFrame ndarray for gbrpf32 format,Jonathan Drolet,jonathan.drolet@riedel.net,Jeremy Lainé,jeremy.laine@m4x.org,2022-09-13 14:38:29-04:00,14400,2022-10-16 11:43:37+02:00,-7200,True,False,"['frame.pyx', 'test_videoframe.py']",['1d892a7ba638c5c708da57f72afe204011c8e6e9'],0,33,33,2,1.0,1.0,1.0
2a747c7fe9c3b428cffc385e63a10ae2b1c5e989,"[package] advertise Python 3.11 support

cibuildwheel v2.10.0 and later will automatically build wheels for
Python 3.11.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-10-16 11:48:04+02:00,-7200,2022-10-16 18:18:22+02:00,-7200,True,False,['setup.py'],['54ada44d38eeb1b141db92df065000379ce25e1a'],0,1,1,1,,,
c107b33a09b637f6f779468e3156cbd37415dea9,"Do not pull codec_context.codec properties up to the stream

The `Stream` class has a confusing behaviour which proxies:

- both codec context *and* codec properties for read access
- only codec context properties for write access

Start simplifying things by completely removing access to codec
properties.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-10-17 06:59:20+02:00,-7200,2022-10-17 13:04:03+02:00,-7200,True,False,"['stream.pyx', 'test_codec_context.py', 'test_decode.py', 'test_encode.py', 'test_file_probing.py', 'test_python_io.py', 'test_seek.py']",['2a747c7fe9c3b428cffc385e63a10ae2b1c5e989'],55,68,123,7,0.0,0.8571428571428571,1.0
b3bd879c990944d3891bc090a86be466678e256a,"[package] compile wheels against FFmpeg 5.1.2

We also update our test matrix to explicitly test against FFmpeg 5.1.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-10-17 08:54:54+02:00,-7200,2022-10-17 15:31:02+02:00,-7200,True,False,"['tests.yml', 'installation.rst', 'fetch-vendor.json']",['c107b33a09b637f6f779468e3156cbd37415dea9'],5,13,18,3,,,
71afd210ae42b4b13789726d788e8ff2a9ccc996,"Deprecate VideoStream.framerate and VideoStream.rate (fixes: #1005)

These properties are only set for codecs that store the frame rate value
in the bitstream. To obtain an estimated frame rate, it is better to use
`VideoStream.average_rate`.

See: https://ffmpeg.org/doxygen/trunk/structAVCodecContext.html#a4d08b297e97eefd66c714df4fff493c8

Co-authored-by: Jeremy Lainé <jeremy.laine@m4x.org>",Justin Wong,46082645+uvjustin@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2022-10-17 13:12:14+08:00,-28800,2022-10-17 16:51:28+02:00,-7200,True,False,"['stream.pyx', 'test_file_probing.py']",['b3bd879c990944d3891bc090a86be466678e256a'],0,27,27,2,0.0,1.0,1.0
bc4eedd5fc474e0f25b22102b2771fe5a42bb1c7,Release v10.0.0.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-10-17 18:46:55+02:00,-7200,2022-10-17 22:02:46+02:00,-7200,True,False,"['CHANGELOG.rst', 'about.py']",['71afd210ae42b4b13789726d788e8ff2a9ccc996'],1,25,26,2,,,
c0ec6adc8b09ba0c0bb388db6e25d2578f996c71,"[tests] update all github actions to latest version

This should get rid of the warnings related to Node.js 12 actions.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2022-10-17 22:55:55+02:00,-7200,2023-01-23 08:45:07+01:00,-3600,True,False,['tests.yml'],['bc4eedd5fc474e0f25b22102b2771fe5a42bb1c7'],15,15,30,1,,,
218a62bef67d35513646a228b762f51641daad68,[scratchpad] xrange() was removed in Python 3,Christian Clauss,cclauss@me.com,Jeremy Lainé,jeremy.laine@m4x.org,2023-01-21 20:14:42+01:00,-3600,2023-01-23 13:04:10+01:00,-3600,True,False,"['audio.py', 'decode.py', 'resource_use.py', 'seekmany.py']",['c0ec6adc8b09ba0c0bb388db6e25d2578f996c71'],5,5,10,4,,,
ee1d6f62806f8fbb712a7a6103cae85ec445fdf9,[scratchpad] buffer() was removed in Python 3,Christian Clauss,cclauss@me.com,Jeremy Lainé,jeremy.laine@m4x.org,2023-01-23 12:09:30+01:00,-3600,2023-01-23 13:04:10+01:00,-3600,True,False,['cctx_encode.py'],['218a62bef67d35513646a228b762f51641daad68'],9,7,16,1,,,
aad8b1b955b94ccd752be25eebf78fccf7a04308,"Remove unecessary clip in numpy example

By the time you got to that line, the number is already a uint8, and cannot take any values outside of 0, 255.",Mark Harfouche,mark.harfouche@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2022-12-23 20:59:00-05:00,18000,2023-01-23 13:04:51+01:00,-3600,True,False,['generate_video.py'],['ee1d6f62806f8fbb712a7a6103cae85ec445fdf9'],1,0,1,1,,,
7250b2f27d8d38661b492915fb6bf69ec79acdd3,Add the flag ENCODER_FLUSH,Mark Harfouche,mark.harfouche@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2023-01-02 20:43:16+05:30,-19800,2023-01-23 20:50:19+01:00,-3600,True,False,['codec.pyx'],['aad8b1b955b94ccd752be25eebf78fccf7a04308'],0,5,5,1,,,
1ab3bf6bd0bfe60eddd22c8ff90cde4a2dc6d86f,"Add python_requires to help users not install this with python 2

Works toward https://github.com/PyAV-Org/PyAV/issues/1057

You might need to yank the release and release 10.0.1",Mark Harfouche,mark.harfouche@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2022-12-23 22:15:48-05:00,18000,2023-01-24 09:07:59+01:00,-3600,True,False,['setup.py'],['7250b2f27d8d38661b492915fb6bf69ec79acdd3'],0,1,1,1,,,
6982d818080716b39bc3f333cf19daa0a3e0b56a,"[streams] populate added stream with codec param

avformat_new_stream(AVFormatContext *s, const AVCodec *c) does not use its
second parameter [1], so the codec type for the stream is not populated until
avcodec_parameters_from_context() [2] is called.

[1]: https://ffmpeg.org/doxygen/trunk/group__lavf__core.html#gadcb0fd3e507d9b58fe78f61f8ad39827
[2]: https://ffmpeg.org/doxygen/trunk/codec__par_8c_source.html#l00099

Co-authored-by: Jeremy Lainé <jeremy.laine@m4x.org>",Hanz,40712686+HanzCEO@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2022-12-25 13:21:52+00:00,0,2023-01-31 07:12:31+01:00,-3600,True,False,"['output.pyx', 'test_encode.py']",['1ab3bf6bd0bfe60eddd22c8ff90cde4a2dc6d86f'],0,13,13,2,0.42857142857142855,1.0,1.0
00cf38fb0a11823dc171246d2fb115c144056d87,"Update CI/CL, drop Python 3.7 (#1195)

Python 3.7 is EOL, let's at least use 3.8 as the minimum.",WyattBlue,wyattblue@auto-editor.com,GitHub,noreply@github.com,2023-10-28 12:32:56-04:00,14400,2023-10-28 12:32:56-04:00,14400,True,False,"['tests.yml', '__main__.py', 'datasets.py', 'setup.py']",['6982d818080716b39bc3f333cf19daa0a3e0b56a'],37,27,64,4,,,
ad05d90c255bda3f56bbc2a5147c941103acb94a,Small updates to enable Cython 3 (#1145),Mark Harfouche,mark.harfouche@gmail.com,GitHub,noreply@github.com,2023-10-28 13:26:21-04:00,14400,2023-10-28 13:26:21-04:00,14400,True,False,"['core.pyx', 'pyio.pxd', 'pyio.pyx', 'logging.pyx', 'format.pxd', 'includes.py']",['00cf38fb0a11823dc171246d2fb115c144056d87'],21,28,49,6,0.0,1.0,1.0
297ff015da1c7d181967ee01c115219217adcf19,Update to ffmpeg 6.0 (#1110),Mattias Wadman,mattias.wadman@gmail.com,GitHub,noreply@github.com,2023-10-28 19:42:15+02:00,-7200,2023-10-28 13:42:15-04:00,14400,True,False,"['codec.pyx', 'context.pyx', 'core.pyx', 'avcodec.pxd', 'avformat.pxd', 'activate.sh']",['ad05d90c255bda3f56bbc2a5147c941103acb94a'],33,6,39,6,,,
1d41e370b2f046233c0b14bedbf30771e697bd49,"Fix running doctests

We use `av.datasets` so explicitly import it",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-10-29 21:26:20+01:00,-3600,2023-10-29 22:47:01+01:00,-3600,True,False,['test_doctests.py'],['297ff015da1c7d181967ee01c115219217adcf19'],0,1,1,1,,,
4e5d7b71f451ca334e01c1be8cf400b91f861251,"Explicitly drop support for FFmpeg < 5.0

Our code now depends on FFmpeg 5.0 or better, so update the test matrix.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-10-29 21:55:43+01:00,-3600,2023-10-29 22:47:01+01:00,-3600,True,False,"['tests.yml', 'installation.rst']",['1d41e370b2f046233c0b14bedbf30771e697bd49'],19,11,30,2,,,
1f991fa776d2f20b6ce5db9efb700673fb7989dc,Add FFmpeg 6.0 to test matrix,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-10-29 22:54:42+01:00,-3600,2023-10-30 06:50:41+01:00,-3600,True,False,['tests.yml'],['4e5d7b71f451ca334e01c1be8cf400b91f861251'],1,2,3,1,,,
d2e750fb466a49bc638a5e466c827b81a153d65e,"Reformat Python code with black, and enforce it in CI",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-10-30 11:30:47+01:00,-3600,2023-10-30 13:17:55+01:00,-3600,True,False,"['parse.py', 'remux.py', 'save_keyframes.py', 'barcode.py', 'generate_video.py', 'generate_video_with_pts.py', 'test', 'test_audiofifo.py', 'test_audioresampler.py', 'test_codec_context.py', 'test_decode.py', 'test_deprecation.py', 'test_dictionary.py', 'test_doctests.py', 'test_encode.py', 'test_enums.py', 'test_errors.py', 'test_filters.py', 'test_logging.py', 'test_options.py', 'test_python_io.py', 'test_seek.py', 'test_streams.py', 'test_subtitles.py', 'test_videoframe.py']",['1f991fa776d2f20b6ce5db9efb700673fb7989dc'],76,1,77,25,,,
7f3f213c3a4f62da13213e0fc49adc9af3356177,"Add documentation

Closes  #1004",Simon-Martin Schröder,martin.schroeder@nerdluecht.de,Jeremy Lainé,jeremy.laine@m4x.org,2023-03-15 09:36:53+01:00,-3600,2023-10-30 13:31:40+01:00,-3600,True,False,"['core.pyx', 'output.pyx']",['d2e750fb466a49bc638a5e466c827b81a153d65e'],0,4,4,2,,,
29ef1129a5f4fc9572dc0af2144416bab1148287,"Add VideoFrame ndarray operations for yuv444p/yuvj444p formats

Co-authored-by: Jeremy Lainé <jeremy.laine@m4x.org>",Ryan Huang,NPN@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2021-05-21 08:50:05+00:00,0,2023-10-30 16:21:06+01:00,-3600,True,False,"['frame.pyx', 'test_videoframe.py']",['7f3f213c3a4f62da13213e0fc49adc9af3356177'],0,32,32,2,1.0,1.0,1.0
71cda77e56ec18b7880e3fcbec444ef643b8e66a,"Remove inheritance from `object` class, it's not needed",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-10-30 16:36:34+01:00,-3600,2023-10-30 18:34:01+01:00,-3600,True,False,"['format.pxd', 'format.pyx', 'layout.pxd', 'layout.pyx', 'resampler.pxd', 'resampler.pyx', 'buffer.pxd', 'buffer.pyx', 'bytesource.pxd', 'bytesource.pyx', 'codec.pxd', 'codec.pyx', 'context.pxd', 'context.pyx', 'core.pxd', 'core.pyx', 'pyio.pxd', 'pyio.pyx', 'streams.pxd', 'streams.pyx', 'deprecation.py', 'descriptor.pxd', 'descriptor.pyx', 'dictionary.pxd', 'dictionary.pyx', 'enum.pyx', 'context.pxd', 'context.pyx', 'filter.pxd', 'filter.pyx', 'graph.pxd', 'graph.pyx', 'link.pxd', 'link.pyx', 'pad.pxd', 'pad.pyx', 'format.pxd', 'format.pyx', 'frame.pxd', 'frame.pyx', 'logging.pyx', 'option.pxd', 'option.pyx', 'motionvectors.pxd', 'motionvectors.pyx', 'sidedata.pxd', 'sidedata.pyx', 'stream.pxd', 'stream.pyx', 'subtitle.pxd', 'subtitle.pyx', 'format.pxd', 'format.pyx', 'reformatter.pxd', 'reformatter.pyx', 'common.py', 'test_deprecation.py', 'test_enums.py', 'test_python_io.py']",['29ef1129a5f4fc9572dc0af2144416bab1148287'],72,72,144,59,,,
1a8b2a8a524c96875b28577e648ea6fbecd69a2d,Prune some useless imports from Cython code,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-10-30 17:02:42+01:00,-3600,2023-10-30 18:34:01+01:00,-3600,True,False,"['codeccontext.pyx', 'fifo.pyx', 'frame.pyx', 'plane.pyx', 'codec.pyx', 'context.pyx', 'core.pyx', 'input.pyx', 'output.pyx', 'enum.pyx', 'context.pyx', 'frame.pyx', 'logging.pyx', 'stream.pxd', 'stream.pyx', 'codeccontext.pyx', 'utils.pxd', 'utils.pyx', 'codeccontext.pyx', 'frame.pxd', 'frame.pyx', 'avcodec.pxd', 'motion_vector.pxd', 'swresample.pxd']",['71cda77e56ec18b7880e3fcbec444ef643b8e66a'],48,14,62,24,,,
24bcd1fdbbba11f476eb6da3c3fe12ca63ae806f,"Remove backports of `unittest` matchers

This is unnecessary since we only support Python 3.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-10-30 17:28:13+01:00,-3600,2023-10-30 18:34:01+01:00,-3600,True,False,['common.py'],['1a8b2a8a524c96875b28577e648ea6fbecd69a2d'],40,0,40,1,0.0,0.0,1.0
a26cda17c297867e3c75f314bd98071165ef7ee6,"Catching AttributeError when repr(fifo) that hasn't had fifo.write(frame) called yet

Co-authored-by: Jeremy Lainé <jeremy.laine@m4x.org>",Eric Kalosa-Kenyon,ekalosak@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2023-06-06 18:24:30-04:00,14400,2023-10-31 14:01:23+01:00,-3600,True,False,"['fifo.pyx', 'test_audiofifo.py']",['24bcd1fdbbba11f476eb6da3c3fe12ca63ae806f'],8,29,37,2,0.0,1.0,1.0
9b32621446efe301231f89c04cbbf74de0924d03,Update github actions to their latest versions,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-10-31 10:53:29+01:00,-3600,2023-10-31 14:01:36+01:00,-3600,True,False,"['issues.yml', 'tests.yml']",['a26cda17c297867e3c75f314bd98071165ef7ee6'],8,8,16,2,,,
f1b1c0ac8c395ce6737669845e95ab009f4e8991,"Update our binaries for FFmpeg 5.1

In addition to updating FFmpeg to version 5.1.3, this updates libvpx to
fix the CVE-2023-5217 buffer overflow vulnerability.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-11-01 19:01:51+01:00,-3600,2023-11-01 21:59:24+01:00,-3600,True,False,"['tests.yml', 'installation.rst', 'fetch-vendor.json']",['9b32621446efe301231f89c04cbbf74de0924d03'],4,3,7,3,,,
af760ec32a073fb9eaa4c1e4244ab7f775bff331,"Guard input container properties and methods again use after close

Calling `close()` on an input container calls `avformat_close_input`
which will set the `self.ptr` AVFormatContext pointer to NULL. We need
to ensure `self.ptr` is not NULL before using it.

Fixes: #1137",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-11-01 18:42:09+01:00,-3600,2023-11-02 07:27:12+01:00,-3600,True,False,"['core.pxd', 'core.pyx', 'input.pyx', 'test_decode.py']",['f1b1c0ac8c395ce6737669845e95ab009f4e8991'],2,36,38,4,1.0,1.0,1.0
9954397036d48caec74a951459bb40a7fc5c6749,Add __set__ for is_keyframe and is_corrupt,Dave Johansen,davejohansen@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2023-10-17 16:58:24-06:00,21600,2023-11-02 07:42:56+01:00,-3600,True,False,['packet.pyx'],['af760ec32a073fb9eaa4c1e4244ab7f775bff331'],0,12,12,1,,,
f9a5e7e879e6af36d4d1abb439192d90f10c8e28,Add __set__ for dts in AVFrame,Dave Johansen,davejohansen@gmail.com,Jeremy Lainé,jeremy.laine@m4x.org,2023-10-20 14:00:49-06:00,21600,2023-11-02 07:42:56+01:00,-3600,True,False,['frame.pyx'],['9954397036d48caec74a951459bb40a7fc5c6749'],0,6,6,1,,,
30e3ef2c9be03f0966bf3bd61b38010c0439d2fd,Simplify linter tests,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-11-01 23:27:32+01:00,-3600,2023-11-02 10:17:44+01:00,-3600,True,False,"['tests.yml', 'Makefile', 'test', 'requirements.txt']",['f9a5e7e879e6af36d4d1abb439192d90f10c8e28'],42,11,53,4,,,
0236c52f621a7f1b3cc7571a504e0811810bca8c,"Prune Makefile targets, drop unused scripts

Remove some unused Makefile targets, as well as scripts:

- build-debug-python
- clean-branches
- vagrant-test

We can also remove the `sdist` step as this is exercised by the
`package-source` job.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-11-02 00:03:54+01:00,-3600,2023-11-02 10:17:44+01:00,-3600,True,False,"['tests.yml', '.gitignore', 'Makefile', 'build-debug-python', 'clean-branches', 'test', 'vagrant-test']",['30e3ef2c9be03f0966bf3bd61b38010c0439d2fd'],220,8,228,7,,,
4a72a8b40cb2bd15fbb9b5291c3f6a2fa83afa39,"Simplify documentation generation

Do not depend on how FFmpeg was built, just fetch a fresh clone of the
FFmpeg repository to generate doxygen tags.",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-11-02 09:18:28+01:00,-3600,2023-11-02 10:17:44+01:00,-3600,True,False,"['tests.yml', 'Makefile', 'Makefile', 'generate-tagfile', 'test']",['0236c52f621a7f1b3cc7571a504e0811810bca8c'],58,16,74,5,,,
d892dcf1c80a3c597d8cdf894ef431dead3967f8,"Remove `flags.txt`

This doc file is outdated, hasn't been touched in years, and is
not needed for anything. Just remove it.",WyattBlue,wyattblue@auto-editor.com,Jeremy Lainé,jeremy.laine@m4x.org,2023-11-03 02:13:53-04:00,14400,2023-11-03 07:59:31+01:00,-3600,True,False,['flags.txt'],['4a72a8b40cb2bd15fbb9b5291c3f6a2fa83afa39'],53,0,53,1,,,
ca1e7f9d824aceeea2c11f74b54b1019b77dec88,Build our wheels against FFmpeg 6.0,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-11-02 07:40:31+01:00,-3600,2023-11-03 10:26:44+01:00,-3600,True,False,"['tests.yml', 'fetch-vendor.py', 'ffmpeg-5.0.json', 'ffmpeg-5.1.json', 'ffmpeg-6.0.json']",['d892dcf1c80a3c597d8cdf894ef431dead3967f8'],16,15,31,5,,,
de5a3b365fe6e0f5dd7398f1c34a4bfb736d5f4b,Release v11.0.0.,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2023-11-03 17:01:38+01:00,-3600,2023-11-03 17:23:00+01:00,-3600,True,False,"['CHANGELOG.rst', 'about.py']",['ca1e7f9d824aceeea2c11f74b54b1019b77dec88'],1,25,26,2,,,
2454816fd9e52d0253f57c4d564fe1cafb335aa2,"Remove obsolete comments

We only support ffmpeg 5 or greater.",WyattBlue,wyattblue@auto-editor.com,WyattBlue,wyattblue@auto-editor.com,2023-11-05 12:55:21-05:00,18000,2023-11-05 14:16:37-05:00,18000,True,False,['sidedata.pyx'],['de5a3b365fe6e0f5dd7398f1c34a4bfb736d5f4b'],6,0,6,1,,,
a4bde60c714eeef9cc4b67f1d50b789a3d442978,Change gitter url,WyattBlue,wyattblue@auto-editor.com,WyattBlue,wyattblue@auto-editor.com,2023-11-05 22:08:36-05:00,18000,2023-11-05 22:09:45-05:00,18000,True,False,"['build-bug-report.md', 'runtime-bug-report.md', 'user-help.md', 'README.md', 'caveats.rst']",['2454816fd9e52d0253f57c4d564fe1cafb335aa2'],5,5,10,5,,,
040cb505525cfa6b499e149f195fb2bda7ff41f3,Fix issues identified by cython-lint and import AVError directly,Dave Johansen,davejohansen@gmail.com,GitHub,noreply@github.com,2023-11-12 22:29:06-07:00,25200,2023-11-13 00:29:06-05:00,18000,True,False,"['resampler.pyx', 'error.pyx', 'avcodec.pxd', 'avfilter.pxd', 'avfiltergraph.pxd', 'avformat.pxd', 'avutil.pxd', 'error.pxd', 'samplefmt.pxd', 'swresample.pxd', 'test_filters.py']",['a4bde60c714eeef9cc4b67f1d50b789a3d442978'],59,42,101,11,,,
8bfb5f6d6d9de874c1dd9ad5e3acdc0cbfb8247a,"Add max_b_frames property to codec context

Allows an application to control the maximum number of B frames,
irrespective of what other settings or preset is used. A test is
also added, to check that it works as intended.",David Plowman,david.plowman@raspberrypi.com,WyattBlue,wyattblue@auto-editor.com,2023-04-12 16:13:26+01:00,-3600,2023-11-13 15:31:01-05:00,18000,True,False,"['codeccontext.pyx', 'test_encode.py']",['040cb505525cfa6b499e149f195fb2bda7ff41f3'],0,96,96,2,0.5,1.0,1.0
cf8a5c39c0a03ef9c99ed3da1ab1121eb5633996,Prevent duplicate test runs on new PRs,WyattBlue,wyattblue@auto-editor.com,WyattBlue,wyattblue@auto-editor.com,2023-11-16 05:11:25-05:00,18000,2023-11-16 05:47:47-05:00,18000,True,False,['tests.yml'],['8bfb5f6d6d9de874c1dd9ad5e3acdc0cbfb8247a'],0,2,2,1,,,
39832c4f9eacc0319eb3dea8c48814cf678f53a6,Allow using pathlib.Path for av.open,WyattBlue,wyattblue@auto-editor.com,WyattBlue,wyattblue@auto-editor.com,2023-11-20 02:00:37-05:00,18000,2023-11-22 12:50:08-05:00,18000,True,False,"['core.pyx', 'test_open.py']",['cf8a5c39c0a03ef9c99ed3da1ab1121eb5633996'],26,76,102,2,1.0,1.0,1.0
895630bcae7c25a083c584ef0c08460e6d934fb4,"fix the doc of `time` page and `av.frame.Frame.dts` according to
https://ffmpeg.org/doxygen/5.1/structAVFrame.html#aa52951f35ec9e303d3dfeb4b3e44248a",zzjjbb,31069326+zzjjbb@users.noreply.github.com,WyattBlue,wyattblue@auto-editor.com,2023-03-21 00:23:48-04:00,14400,2023-11-23 04:00:54-05:00,18000,True,False,"['frame.pyx', 'time.rst']",['39832c4f9eacc0319eb3dea8c48814cf678f53a6'],2,4,6,2,,,
cfd46bb5a1324c3ee53b7aee84fa63b7f7a188d9,"Remove .editorconfig

Random config files should not be in the project root. No one uses
this anyware.",WyattBlue,wyattblue@auto-editor.com,WyattBlue,wyattblue@auto-editor.com,2023-11-23 21:05:29-05:00,18000,2023-11-24 01:43:34-05:00,18000,True,False,['.editorconfig'],['895630bcae7c25a083c584ef0c08460e6d934fb4'],16,0,16,1,,,
ad3f6965bdf9ab4720d64d315bfc2dce5beb7ad4,Move isort config to pyproject.toml,WyattBlue,wyattblue@auto-editor.com,WyattBlue,wyattblue@auto-editor.com,2023-11-23 20:54:26-05:00,18000,2023-11-24 18:07:32-05:00,18000,True,False,"['pyproject.toml', 'setup.cfg']",['cfd46bb5a1324c3ee53b7aee84fa63b7f7a188d9'],10,10,20,2,,,
bdacaac87902eeb4401e0fe5ed4f822e435071d4,"Add encode_lazy method to CodecContext

Some codecs (VP9) can both buffer _many_ frames, and take a long time
encoding each frame. Accumulated, the last `encode(None)`-flush can end
taking a long time >30s, without detectable progress.

FFmpeg and many encoders themselves output one frame at a time, but PyAV
currently buffer them all up into lists returned.

This change adds a `encode_lazy` yielding frames as they are made ready.

The change was benchmarked to also yield a net performance improvement. For
both `encode()` and `encode_lazy` encoding really small (24x18) frames
using the `mpeg4` encoder seem to take ~11% less time.",Ulrik Mikaelsson,ulrikm@spotify.com,GitHub,noreply@github.com,2023-11-25 10:26:10+01:00,-3600,2023-11-25 04:26:10-05:00,18000,True,False,"['context.pxd', 'context.pyx', 'test_encode.py']",['ad3f6965bdf9ab4720d64d315bfc2dce5beb7ad4'],15,19,34,3,,,
1de6a50ee2fa6a79e4b4ee55390ffe453d1b2209,Remove references to Libav,WyattBlue,wyattblue@auto-editor.com,WyattBlue,wyattblue@auto-editor.com,2023-11-27 11:44:55-05:00,18000,2023-11-27 22:14:14-05:00,18000,True,False,['layout.pyx'],['bdacaac87902eeb4401e0fe5ed4f822e435071d4'],3,1,4,1,,,
8aa5fe74d5a581980dd6fde8167adfc75222495e,Add color_range to CodecContext/Frame,Johan Jeppsson Karlin,johjep@gmail.com,GitHub,noreply@github.com,2023-11-28 10:35:58+01:00,-3600,2023-11-28 04:35:58-05:00,18000,True,False,"['codeccontext.pyx', 'frame.pyx', 'reformatter.pxd', 'reformatter.pyx', 'avcodec.pxd', 'avutil.pxd', 'test_colorspace.py']",['1de6a50ee2fa6a79e4b4ee55390ffe453d1b2209'],19,121,140,7,1.0,1.0,1.0
298b3b47c8ba169865229715181df0832e3e2e79,Set time_base for AudioResampler,Dave Johansen,davejohansen@gmail.com,GitHub,noreply@github.com,2023-12-02 01:09:32-07:00,25200,2023-12-02 03:09:32-05:00,18000,True,False,"['resampler.pyx', 'test_audioresampler.py', 'test_codec_context.py', 'test_encode.py']",['8aa5fe74d5a581980dd6fde8167adfc75222495e'],4,239,243,4,0.0,0.472636815920398,1.0
c8b535a5fdd893944b3545c490b8964fe16d375c,Update authors,WyattBlue,wyattblue@auto-editor.com,WyattBlue,wyattblue@auto-editor.com,2023-12-14 02:15:45-05:00,18000,2023-12-14 23:15:44-05:00,18000,True,False,['AUTHORS.rst'],['298b3b47c8ba169865229715181df0832e3e2e79'],34,72,106,1,,,
11142a40de23921f26302c43d24cc67a2893d412,"Expose DISPLAYMATRIX side data

Co-authored-by: Sebastien Ehrhardt <sebastien.ehrhardt@onfido.com>
Co-authored-by: WyattBlue <wyattblue@auto-editor.com>",hyenal,sebastien.ehrhardt@gmail.com,GitHub,noreply@github.com,2023-12-20 03:45:37+00:00,0,2023-12-19 22:45:37-05:00,18000,True,False,"['stream.pxd', 'stream.pyx', 'avcodec.pxd', 'avformat.pxd', 'avutil.pxd', 'test_streams.py']",['c8b535a5fdd893944b3545c490b8964fe16d375c'],1,93,94,6,1.0,1.0,1.0
16e2710e9daac54fec60d44f9071908d37f51e06,"Acknowledge recent changes in docs

Update documentation to what we do now. Point to active url",WyattBlue,wyattblue@auto-editor.com,GitHub,noreply@github.com,2023-12-22 18:21:47-05:00,18000,2023-12-22 18:21:47-05:00,18000,True,False,"['README.md', 'Makefile', 'conf.py', 'installation.rst']",['11142a40de23921f26302c43d24cc67a2893d412'],14,11,25,4,,,
0afc238a59ab7f7d966c3d0be6d63ed0af702a52,"Create a path toward sharing memory from a numpy buffer

This avoids the use of hstack, which inevitably copies the data to a
new memory location.

The speed up is small, but measurable. I can go from 185 fps to 200 fps 
when decoding a ~3000x2000 video",Mark Harfouche,mark.harfouche@gmail.com,GitHub,noreply@github.com,2023-12-25 01:43:37-05:00,18000,2023-12-25 01:43:37-05:00,18000,True,False,"['frame.pxd', 'frame.pyx', 'plane.pxd', 'plane.pyx', 'avutil.pxd', 'test_videoframe.py']",['16e2710e9daac54fec60d44f9071908d37f51e06'],11,232,243,6,1.0,1.0,1.0
bf87dc2f60aadb0f703ae78fd695dce00ad20325,"Use double quotes

Prefer double quotes like black does using black's rules.
Single quotes in docstrings are left untouched.",WyattBlue,wyattblue@auto-editor.com,WyattBlue,wyattblue@auto-editor.com,2023-12-25 20:23:41-05:00,18000,2023-12-26 16:20:12-05:00,18000,True,False,"['_core.pyx', 'fifo.pyx', 'format.pyx', 'frame.pyx', 'layout.pyx', 'resampler.pyx', 'stream.pyx', 'buffer.pyx', 'bytesource.pyx', 'codec.pyx', 'context.pyx', 'core.pyx', 'input.pyx', 'output.pyx', 'pyio.pyx', 'streams.pyx', 'stream.pyx', 'descriptor.pyx', 'dictionary.pyx', 'enum.pyx', 'error.pyx', 'context.pyx', 'filter.pyx', 'graph.pyx', 'link.pyx', 'pad.pyx', 'format.pyx', 'frame.pyx', 'logging.pyx', 'option.pyx', 'packet.pyx', 'plane.pyx', 'motionvectors.pyx', 'sidedata.pyx', 'subtitle.pyx', 'format.pyx', 'frame.pyx', 'reformatter.pyx', 'stream.pyx']",['0afc238a59ab7f7d966c3d0be6d63ed0af702a52'],678,663,1341,39,,,
1962443425d9f63c80d220546ac5f3dfb0799f6f,Deprecate VideoCodecContext.gop_size for decoders (fixes: #1254),JoeUgly,41972063+JoeUgly@users.noreply.github.com,Jeremy Lainé,jeremy.laine@m4x.org,2024-01-09 18:01:09-05:00,18000,2024-01-10 08:09:38+01:00,-3600,True,False,"['codeccontext.pyx', 'test_codec_context.py', 'test_file_probing.py']",['bf87dc2f60aadb0f703ae78fd695dce00ad20325'],2,25,27,3,1.0,1.0,1.0
5f730da7fe2ebe9d81010f7d86aec9fec0e411be,"Stop using `wheel` as an unconditional build dep

It used to be an incorrect recommendation in some of the upstream docs. `setuptools` auto-injects it when building wheels and it's unnecessary when building sdist.",Sviatoslav Sydorenko (Святослав Сидоренко),webknjaz@redhat.com,WyattBlue,wyattblue@auto-editor.com,2024-01-21 20:29:14+01:00,-3600,2024-01-25 23:14:42-05:00,18000,True,False,['pyproject.toml'],['1962443425d9f63c80d220546ac5f3dfb0799f6f'],1,1,2,1,,,
