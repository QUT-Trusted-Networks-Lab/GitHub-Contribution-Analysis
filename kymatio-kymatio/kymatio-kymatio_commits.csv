Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
1719d64882fba1a64cf7c0cde4c183a606398490,initial commit,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 14:24:52+02:00,-7200,2018-11-21 22:29:56-05:00,18000,True,False,"['README.md', 'requirements.txt', '__init__.py', 'filters_bank.py', 'scattering.py', 'utils.py', 'setup.py', 'test_data.pt', 'test_scattering.py']",[],0,771,771,9,0.33195020746887965,0.7012448132780082,0.5601659751037344
48371bcc02886a900fb85367c5caefee99746deb,update readme,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 15:25:50+02:00,-7200,2018-11-21 22:30:00-05:00,18000,True,False,['README.md'],['1719d64882fba1a64cf7c0cde4c183a606398490'],0,30,30,1,,,
ada94ee93bd0be485ae5d3f9551c840fbb1e5bc2,prev version,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 15:29:34+02:00,-7200,2018-11-21 22:30:00-05:00,18000,True,False,['README.md'],['48371bcc02886a900fb85367c5caefee99746deb'],0,1,1,1,,,
62a1a4cd9e70d57825c7c0090d3cc036fd1f9946,readme fix,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 15:32:39+02:00,-7200,2018-11-21 22:30:01-05:00,18000,True,False,['README.md'],['ada94ee93bd0be485ae5d3f9551c840fbb1e5bc2'],3,3,6,1,,,
5806f79a7dab3dd5062f3937e74f5e3e30300ec0,readme fix,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 15:33:18+02:00,-7200,2018-11-21 22:30:01-05:00,18000,True,False,['README.md'],['62a1a4cd9e70d57825c7c0090d3cc036fd1f9946'],3,3,6,1,,,
8a3fa3805c279740f42e700d5271c0dd8fa04b87,add example,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 15:38:05+02:00,-7200,2018-11-21 22:30:01-05:00,18000,True,False,['README.md'],['5806f79a7dab3dd5062f3937e74f5e3e30300ec0'],0,15,15,1,,,
cf49678b0b8dcfc550f25e02c76d82d358d9f812,small cleanup,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 15:47:17+02:00,-7200,2018-11-21 22:30:02-05:00,18000,True,False,['scattering.py'],['8a3fa3805c279740f42e700d5271c0dd8fa04b87'],9,3,12,1,1.0,0.0,0.8
2ee41a43dfba960ec1a1cb7bbf89ca24b0b9a738,Update README.md,Edouard Oyallon,edouardoyallon@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 15:47:58+02:00,-7200,2018-11-21 22:30:02-05:00,18000,True,False,['README.md'],['cf49678b0b8dcfc550f25e02c76d82d358d9f812'],0,2,2,1,,,
78f5ede78e9fc24c86c946e5889bd497c1287278,Update scattering.py,Edouard Oyallon,edouardoyallon@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 15:55:50+02:00,-7200,2018-11-21 22:30:02-05:00,18000,True,False,['scattering.py'],['2ee41a43dfba960ec1a1cb7bbf89ca24b0b9a738'],3,2,5,1,,,
7d6bfc4758a8633a3c0daecf857c91522fa2303a,Update filters_bank.py,Edouard Oyallon,edouardoyallon@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 15:56:08+02:00,-7200,2018-11-21 22:30:03-05:00,18000,True,False,['filters_bank.py'],['78f5ede78e9fc24c86c946e5889bd497c1287278'],3,2,5,1,,,
4255703c2b622512930dcafe801ff607aefb0f74,Update utils.py,Edouard Oyallon,edouardoyallon@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 15:56:23+02:00,-7200,2018-11-21 22:30:03-05:00,18000,True,False,['utils.py'],['7d6bfc4758a8633a3c0daecf857c91522fa2303a'],3,2,5,1,,,
f589da68780fcc4d4e40c478cc03357a18dabd49,Update __init__.py,Edouard Oyallon,edouardoyallon@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 15:57:00+02:00,-7200,2018-11-21 22:30:03-05:00,18000,True,False,['__init__.py'],['4255703c2b622512930dcafe801ff607aefb0f74'],3,2,5,1,,,
1ec50f435107ece22639b3dcdc81c3f39ece0bec,add MNIST example,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 16:42:15+02:00,-7200,2018-11-21 22:30:04-05:00,18000,True,False,['mnist.py'],['5ca8d0a4a94ea6080cb8ef5d33a15ff92d2c2ad0'],0,114,114,1,0.5316455696202531,1.0,0.8227848101265823
5ca8d0a4a94ea6080cb8ef5d33a15ff92d2c2ad0,Create licence.txt,Edouard Oyallon,edouardoyallon@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 15:59:43+02:00,-7200,2018-11-21 22:30:04-05:00,18000,True,False,['licence.txt'],['f589da68780fcc4d4e40c478cc03357a18dabd49'],0,24,24,1,,,
005165325e8d5aefd3ae216f78a0ff2f6f3086b9,Update licence.txt,Edouard Oyallon,edouardoyallon@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2017-03-28 17:56:29+02:00,-7200,2018-11-21 22:30:05-05:00,18000,True,False,['licence.txt'],['3d4ec738862af74396282fa1b2bc57ce4e316885'],1,1,2,1,,,
33fa013cf7b86214b858cb05ae18d93d57595777,Update README.md,Eugene Belilovsky,eugenium@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-29 16:10:09+02:00,-7200,2018-11-21 22:30:05-05:00,18000,True,False,['README.md'],['005165325e8d5aefd3ae216f78a0ff2f6f3086b9'],1,1,2,1,,,
327733e6fd56dbd22fd8726c4d1419cac9d233b2,Update README.md,Eugene Belilovsky,eugenium@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-29 16:14:39+02:00,-7200,2018-11-21 22:30:06-05:00,18000,True,False,['README.md'],['33fa013cf7b86214b858cb05ae18d93d57595777'],0,7,7,1,,,
373fd20685cdaff66928531ab8cbad8ed6fe2977,Update README.md,Eugene Belilovsky,eugenium@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-29 16:17:35+02:00,-7200,2018-11-21 22:30:06-05:00,18000,True,False,['README.md'],['327733e6fd56dbd22fd8726c4d1419cac9d233b2'],1,2,3,1,,,
e3b2b54f05d39a4f7e6ba439953854ea6106b072,Update README.md,Eugene Belilovsky,eugenium@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-29 16:23:24+02:00,-7200,2018-11-21 22:30:06-05:00,18000,True,False,['README.md'],['373fd20685cdaff66928531ab8cbad8ed6fe2977'],0,6,6,1,,,
072bbbcc5e026d461f68272d9a3419375fe3f6f9,Update README.md,Eugene Belilovsky,eugenium@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-29 16:25:28+02:00,-7200,2018-11-21 22:30:07-05:00,18000,True,False,['README.md'],['e3b2b54f05d39a4f7e6ba439953854ea6106b072'],0,1,1,1,,,
b38efbe2c41bffb86253e36f7fc35a85a68ac7bc,Update README.md,Eugene Belilovsky,eugenium@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-29 16:26:17+02:00,-7200,2018-11-21 22:30:07-05:00,18000,True,False,['README.md'],['072bbbcc5e026d461f68272d9a3419375fe3f6f9'],1,1,2,1,,,
e421ce3968b69898ab30accd8d058c4110a9013e,Update README.md,Eugene Belilovsky,eugenium@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-29 16:29:40+02:00,-7200,2018-11-21 22:30:08-05:00,18000,True,False,['README.md'],['b38efbe2c41bffb86253e36f7fc35a85a68ac7bc'],4,4,8,1,,,
ba3f6e8000303cd84d86ff0ae98a10f86ff0d49c,Update README.md,Eugene Belilovsky,eugenium@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-29 16:32:37+02:00,-7200,2018-11-21 22:30:08-05:00,18000,True,False,['README.md'],['e421ce3968b69898ab30accd8d058c4110a9013e'],4,3,7,1,,,
50bbcaec42091d6be4ea4d72359c2f120a954477,remove ctypes THC hack,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-29 17:17:10+02:00,-7200,2018-11-21 22:30:08-05:00,18000,True,False,"['requirements.txt', 'utils.py']",['ba3f6e8000303cd84d86ff0ae98a10f86ff0d49c'],6,2,8,2,,,
e85afb81eb0296f3a98090138285af486d16cb72,fix a bug in cpu mod,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-04-17 11:05:28+02:00,-7200,2018-11-21 22:30:09-05:00,18000,True,False,"['utils.py', 'test_scattering.py']",['bf067281f3827be1f24aecba191716429575cf4b'],2,3,5,2,0.0,1.0,1.0
bf067281f3827be1f24aecba191716429575cf4b,remove redundant function,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-03-29 23:24:12+02:00,-7200,2018-11-21 22:30:09-05:00,18000,True,False,['utils.py'],['50bbcaec42091d6be4ea4d72359c2f120a954477'],9,3,12,1,0.0,0.0,0.0
e0fe03d36bb135861734739fa45a4bc5c7145914,add differentiable scattering,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-04-19 17:29:35+02:00,-7200,2018-11-21 22:30:10-05:00,18000,True,False,"['FFT.py', '__init__.py', 'differentiable.py', 'scattering.py']",['b9367edecd9e71472435555fefa7362f2fdb2320'],2,243,245,4,0.7426470588235294,1.0,0.5
a17703ec8f7314a6a3edc95706c4c1c9e2bd7607,updates to newer torch,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-06-02 18:04:55+02:00,-7200,2018-11-21 22:30:10-05:00,18000,True,False,['utils.py'],['e0fe03d36bb135861734739fa45a4bc5c7145914'],4,4,8,1,,,
91dba89691a2af343932e8c0cb4a98a18b9d7017,Add 2 neglected libraries to requirements.txt,Ilya Kavalerov,ilyak@ramawks69.umiacs.umd.edu,Joakim Andén,janden@flatironinstitute.org,2017-09-27 17:11:36-04:00,14400,2018-11-21 22:30:11-05:00,18000,True,False,['requirements.txt'],['b9367edecd9e71472435555fefa7362f2fdb2320'],0,2,2,1,,,
a45212d59ff1b9d111a490733b1f332cbad1f2c4,fix differentiable,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-06-02 18:30:48+02:00,-7200,2018-11-21 22:30:11-05:00,18000,True,False,['FFT.py'],['a17703ec8f7314a6a3edc95706c4c1c9e2bd7607'],1,1,2,1,,,
9646eaf9256575ba455fb93d2b616ca5bcb721a8,add differentiable scattering,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-04-19 17:29:35+02:00,-7200,2018-11-21 22:30:12-05:00,18000,True,False,"['FFT.py', '__init__.py', 'differentiable.py', 'scattering.py']",['301239f75ccfa45b13c0deb2cbf4e32af4cdba1a'],2,243,245,4,0.7426470588235294,1.0,0.5
59b2cc4721f9b87530b08f298c921b203bab81a0,updates to newer torch,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-06-02 18:04:55+02:00,-7200,2018-11-21 22:30:12-05:00,18000,True,False,['utils.py'],['9646eaf9256575ba455fb93d2b616ca5bcb721a8'],4,4,8,1,,,
91b4a239eb6002a6289cc59c251d2f30e22fc1c2,fix differentiable,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-06-02 18:30:48+02:00,-7200,2018-11-21 22:30:13-05:00,18000,True,False,['FFT.py'],['59b2cc4721f9b87530b08f298c921b203bab81a0'],1,1,2,1,,,
b0e86329cb62c7a864e2fab77aa512682545be0a,add Edouard's fix to modulus,Gabriel Huang,gbxhuang@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-09-07 14:25:51-04:00,14400,2018-11-21 22:30:14-05:00,18000,True,False,['differentiable.py'],['a45212d59ff1b9d111a490733b1f332cbad1f2c4'],1,1,2,1,,,
746ce3e153af39b784691b7c2f3a5a642f435d3c,cache filter banks,Gabriel Huang,gbxhuang@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-09-07 15:22:58-04:00,14400,2018-11-21 22:30:14-05:00,18000,True,False,['filters_bank.py'],['b0e86329cb62c7a864e2fab77aa512682545be0a'],1,36,37,1,0.0,1.0,0.0
3c1c87462228385b08385b24fc48c7476c508de3,oops forgot to commit a,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2017-10-18 11:42:41+02:00,-7200,2018-11-21 22:30:15-05:00,18000,True,False,"['FFT.py', 'differentiable.py', 'scattering.py', 'utils.py']",['1d5b0a9f8963a3b1b31ff404f8347318222a8a32'],73,57,130,4,1.0,0.0,0.3125
806ba595e4de0c5bf725f18bce83b5c3dd6c8651,projections working,TMAnglesL,*M1nk0wsk1?,Joakim Andén,janden@flatironinstitute.org,2017-10-27 00:03:44+02:00,-7200,2018-11-21 22:30:16-05:00,18000,True,False,"['compute_scattering.py', 'reconstruction_path.py', 'test_reconstruction.py']",['78291bee84be52b2b522b879a5ee67264cf88fe9'],0,289,289,3,0.4492753623188406,1.0,0.4492753623188406
a8f092fe2a2bb3d1fd0d83d759073a4fc10d7f79,Delete compute_scattering.py,Tomás Angles,tomas-angles@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2017-11-08 19:52:52+01:00,-3600,2018-11-21 22:30:16-05:00,18000,True,False,['compute_scattering.py'],['806ba595e4de0c5bf725f18bce83b5c3dd6c8651'],97,0,97,1,0.8837209302325582,0.0,0.8837209302325582
6c863e768cabc17be8cc4eda01dd9580c30fe684,Delete test_reconstruction.py,Tomás Angles,tomas-angles@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2017-11-08 19:53:04+01:00,-3600,2018-11-21 22:30:17-05:00,18000,True,False,['test_reconstruction.py'],['a8f092fe2a2bb3d1fd0d83d759073a4fc10d7f79'],87,0,87,1,0.0,0.0,0.0
1ebcabae7ffc71f24e26ee2f9d816abf1e97bdf5,Delete reconstruction_path.py,Tomás Angles,tomas-angles@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2017-11-08 19:53:16+01:00,-3600,2018-11-21 22:30:17-05:00,18000,True,False,['reconstruction_path.py'],['6c863e768cabc17be8cc4eda01dd9580c30fe684'],105,0,105,1,0.0,0.0,0.0
8b4b411e0c5e8b4c9f26e62a794e058f0fe2d80e,more python 3.6 friendly...,edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2018-01-16 14:44:56+01:00,-3600,2018-11-21 22:30:17-05:00,18000,True,False,['filters_bank.py'],['1ebcabae7ffc71f24e26ee2f9d816abf1e97bdf5'],7,7,14,1,,,
2d48a7e9c394bd00c9732ca4f1d42748866c7d14,fix broadcasting bug,Sergey Zagoruyko,zagoruyko2@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-01-20 00:40:10+01:00,-3600,2018-11-21 22:30:18-05:00,18000,True,False,['differentiable.py'],['8b4b411e0c5e8b4c9f26e62a794e058f0fe2d80e'],2,2,4,1,,,
0cce1eccac3adb62cbb265b369b717a82785eb0e,"[REF] Refactor code to admit 1D and 3D versions into codebase (#8)

* REF move all scattering code to a scattering2D folder and rename things
to *2d and *2D

* REF renamed all things Scattering to Scattering2D and adjusted imports, deprecated import of Scattering, which shall import Scattering2D for two releases and then be removed

* REF make differentiable run again after rearranging

* REF moved tests to 2D package folder

* ENH add .gitignore

* REF updated test file",eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-05-30 21:22:21-07:00,25200,2018-11-21 22:34:27-05:00,18000,True,False,"['.gitignore', '__init__.py', 'scattering.py', 'FFT.py', '__init__.py', 'differentiable.py', 'filters_bank.py', 'scattering2d.py', 'test_data.pt', 'test_differentiable.py', 'test_scattering.py', 'utils.py']",['2d48a7e9c394bd00c9732ca4f1d42748866c7d14'],198,246,444,12,1.0,1.0,0.7894736842105263
934008cf100989969ad5172b0a21a1780c46ef19,REF refactored tests with pytest. Look like they are running (#9),eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-05-30 21:48:35-07:00,25200,2018-11-21 22:37:54-05:00,18000,True,False,['test_scattering.py'],['0cce1eccac3adb62cbb265b369b717a82785eb0e'],109,102,211,1,0.0,0.0,0.0
c67c52fd5e70b5d0a4cccbed98112db0b0d63311,"[ENH] Scattering 1D (#15)

This commit adds 1D scattering, examples and tests. Below are the commit messages of the squashed commits:

* added initial files, demo.py is running

* added Morlet1D with periodization. Still need to take into account

* automatic choice of the value of P depending on sigma

* added docstrings + cleanup

* added docstrings + modified the choice of the maximal subsampling, to make sure that all cases are taken into account

* added docstrings for most functions

* added one comment

* changed the API to support .cuda() and .cpu()

* replaced some np. by math. for functions taking float arguments

* replaced sum by mean to make sure that there is an exact subsampling (even though all filters are renormalized at this end, so this does not play any role)

* added initial tests on the filters

* added some comments

* added dimension checker

* completed docstrings and changed one variable name

* added docstrings for modulus

* removed spurious int()

* removed return psi

* added several tests for the filters

* corrected a buggy behaviour when sigma_max is already lower than sigma_low

* aded tests

* added more checks, corrected some tests, corrected the way the padding surface is computed to make it simpler

* added synthetic example

* added an example on a real signal

* added working classification examples (on precomputed scattering features)

* corrected the classification example

* corrected minor errors, removed the **kwargs in init

* added a caching function to download automatically the dataset, and also process it in a transparent fashion for the user

* added fetch_dataset for real signal and corrected the parameters of the classif",AndreuxMath,AndreuxMath@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-07-04 19:22:40+02:00,-7200,2018-11-21 22:38:26-05:00,18000,True,False,"['__init__.py', 'caching.py', 'datasets.py', '__init__.py', 'classif.py', 'real_signal.py', 'synthetic.py', 'fft_wrapper.py', 'filter_bank.py', 'scattering1d.py', 'demo.py', 'test_fft.py', 'test_filters.py', 'test_scattering.py', 'test_utils.py', 'utils.py']",['934008cf100989969ad5172b0a21a1780c46ef19'],1,3316,3317,16,0.37719298245614036,0.7,0.437719298245614
d7fc22fcab1585b7868d68f3d857354fe1eb1205,"[REF] Refactor dataset download and examples (#22)

* REF separate dataset dir from cache dir

* REF fix real_signal 1d example after dataset downloader modification

* REF reorganize examples

* REF fixed synthetic.py

* REF fixed classif.py

* REF made mnist example work for python 3

* REF remove fetchers from __init__

* REF change import in example",eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-09-10 22:15:50-07:00,25200,2018-11-21 22:38:26-05:00,18000,True,False,"['classif.py', 'real_signal.py', 'synthetic.py', 'mnist.py', '__init__.py', 'datasets.py']",['c67c52fd5e70b5d0a4cccbed98112db0b0d63311'],32,93,125,6,1.0,1.0,1.0
ea9f32dac0244dc91973404b639c39b19a3abd7b,"support for double FFT in 1D, with tests passing",AndreuxMath,mathieu.andreux@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-09-11 12:23:07+02:00,-7200,2018-11-21 22:38:27-05:00,18000,True,False,"['fft_wrapper.py', 'test_fft.py']",['d7fc22fcab1585b7868d68f3d857354fe1eb1205'],4,32,36,2,0.0,0.8888888888888888,0.8888888888888888
b255a446041cf951ae2172e1522f892fd6cf7d10,"added double support for FFT 2D, with tests passing",AndreuxMath,mathieu.andreux@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-09-11 16:41:55+02:00,-7200,2018-11-21 22:38:27-05:00,18000,True,False,"['FFT.py', 'test_fft.py']",['ea9f32dac0244dc91973404b639c39b19a3abd7b'],7,169,176,2,0.10679611650485436,1.0,0.9514563106796117
7293878a5933b5bcffe2d84c13bc85192f74ebb8,made cleaner tests for the type of the input tensor,AndreuxMath,mathieu.andreux@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-09-12 14:30:07+02:00,-7200,2018-11-21 22:38:28-05:00,18000,True,False,['FFT.py'],['b255a446041cf951ae2172e1522f892fd6cf7d10'],2,6,8,1,0.0,1.0,0.5
866c092e2e9d3b372b3cf71e51e363f74738ab6a,"[REF] Rename package (#26)

Rename the package to `scattering`

* REF name change

* REF change all imports with the magic command: git grep -l ""from scatwave"" | xargs -i@  sed -i 's/from scatwave/from scattering/g' @

* REF modified setup.py

* REF update setup.py",eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-09-13 18:20:04-07:00,25200,2018-11-21 22:38:29-05:00,18000,True,False,"['README.md', 'classif.py', 'real_signal.py', 'synthetic.py', 'mnist.py', '__init__.py', 'caching.py', 'datasets.py', 'scattering.py', '__init__.py', 'fft_wrapper.py', 'filter_bank.py', 'scattering1d.py', 'demo.py', 'test_fft.py', 'test_filters.py', 'test_scattering.py', 'test_utils.py', 'utils.py', 'FFT.py', '__init__.py', 'differentiable.py', 'filters_bank.py', 'scattering2d.py', 'test_data.pt', 'test_differentiable.py', 'test_fft.py', 'test_scattering.py', 'utils.py', 'setup.py']",['c6e0bdb0bf5e8615e0e0d4d3d75651adac47010e'],35,40,75,30,,,
4a4ae0963552c9cc9ae92e7cdf1cd0a170349bad,"[BUG] Fix crash in scattering3d_qm7.py

Fixes #8.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-03 13:02:00-04:00,14400,2018-11-21 22:38:30-05:00,18000,True,False,['scattering3d_qm7.py'],['ce83b5525a4fce5e054b34f5d3227896be20677f'],0,1,1,1,,,
ce83b5525a4fce5e054b34f5d3227896be20677f,"ENH Scattering3D (#21)

Introduces 3D scattering to the codebase.

Work by Louis Thiry, Georgios Exarchakis, Michael Eickenberg.

There remains work, notably on tests, and getting the code example to yield reasonable prediction output.

* first commit for pyscatwave3d

* updates test

* removes print statetment

* first commit for pyscatwave3d

* updates test

* removes print statetment

* removes bilinear regression

* removes CheML dependency

* changes test

* first commit for pyscatwave3d

* updates test

* removes print statetment

* first commit for pyscatwave3d

* removes print statetment

* removes bilinear regression

* removes CheML dependency

* changes test

* refactors filter_bank

* PR related edits

* adds comments to the example for 3D scattering

* Refactors scattering3D

* refactoring example

* fixes data partition bug in 3D example

* removes debug statement from FFT3D of scattering3d

* small refactoring

* changes evaluaion function return

* adds docstrings to 3D scattering

* changes a docstring in utils

* changes formatting to comply with pep8 using autopep8

* adds a docstring

* FIX apply renaming to scattering3d

* WIP making a dataset downloader for qm7

* ENH finished qm7 data loader

* REF remove shipped qm7 file

* REF 3d example now running with data loader

* reduces the size of the 3D experiment

* reduces the size of the 3D experiment

* REF save output of 3d scattering example to cache folder

* REF towards PEP8 and some minor rephrasings of code

* REF changed some parameters in 3d scattering function

* REF mostly PEP8, some rephrasing of old torch-style code

* REF mostly PEP8",gexarcha,1958208+gexarcha@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-10-02 03:42:07+02:00,-7200,2018-11-21 22:38:30-05:00,18000,True,False,"['scattering3d_qm7.py', '__init__.py', 'datasets.py', 'scattering.py', '__init__.py', 'filter_bank.py', 'scattering3d.py', 'utils.py', 'test_scattering3d.py']",['866c092e2e9d3b372b3cf71e51e363f74738ab6a'],6,1157,1163,9,0.4888475836431227,0.5687732342007435,0.37174721189591076
4f51bcc6fae8a2314ba861657ce5721b179cda27,"[BUG] Fix requirements

Add pyfftw, scikit-learn, and matplotlib to requirements.txt.
Fixes #5.

remove tqdm library from requirements.txt",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-03 14:50:02-04:00,14400,2018-11-21 22:38:31-05:00,18000,True,False,['requirements.txt'],['b89a39fc68faf262ac7e9a801784318fdff6b6e5'],1,3,4,1,,,
40c36588afa4e7d6981fcfad9f78dc1f78f6593f,"fixing typos

fixing typos

fixing typos

fixing typos

fixing typos

fixing typos",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-13 22:40:25+02:00,-7200,2018-11-21 22:41:54-05:00,18000,True,False,['test_scattering.py'],['4f51bcc6fae8a2314ba861657ce5721b179cda27'],5,12,17,1,0.0,1.0,1.0
5684da707f150927a89ff7148c4f2e8ff74b59a6,"ENH the number of angles is by now not hardcoded (#17)

We can now choose the number of 2D orientations with the `L` parameter

* the number of angles is by now not hardcoded

* fixing typos

* slant fix

* spaces after commas",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-14 02:54:05+02:00,-7200,2018-11-21 22:41:57-05:00,18000,True,False,"['filters_bank.py', 'scattering2d.py']",['40c36588afa4e7d6981fcfad9f78dc1f78f6593f'],4,5,9,2,1.0,1.0,0.0
8398fe54a4943e9d9592e07b162e61c85f18707e,"DOC Skeleton for documentation (#7)

* DOC initial doc config

* DOC added some stubs

* DOC rudimentary doc documents

* COSM modified gitignore to ignore doc build",eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-10-13 20:34:58-07:00,25200,2018-11-21 22:41:58-05:00,18000,True,False,"['.gitignore', 'Makefile', 'conf.py', 'developerguide.rst', 'index.rst', 'installation.rst', 'quickstart.rst', 'userguide.rst']",['5684da707f150927a89ff7148c4f2e8ff74b59a6'],0,246,246,8,,,
d51512dcf397a6b6a70fe46885f1b5acd45205b3,"[REF] Switching to torch.fft + unit tests (#18)

Switched from skcuda cufft to torch fft
Made unit tests run

* in place operation might not be possible

* Removing unecessary files.

* fixing typos

* fixing typos

* mod

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* fixing typos

* Fixing fft test typo

* i put back the code of mathieu - but i'm a noob, i'm not sure how to remove this commit..

* removing ""in place"" tag for operations which are actually not

* removing useless lines in unit tests

* fixing comma+unit test to be belo< 1e-6

* space+scat=scattering

* fixing typos

fixing typos

fixing typos

fixing typos

fixing typos

fixing typos

* s/jit/backend

* s/jit/backend

* s/jit/backend

* fixing a type and tensor definition

* removing copy from scattering

* removing again copy_

* removing again copy_

* TST fix test so that it reads check file in properly

* FIX the rebase removed the L=8 in the function signature",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-20 22:15:10+02:00,-7200,2018-11-21 22:45:07-05:00,18000,True,False,"['FFT.py', 'differentiable.py', 'scattering2d.py', 'test_differentiable.py', 'test_fft.py', 'test_scattering.py', 'utils.py']",['8398fe54a4943e9d9592e07b162e61c85f18707e'],605,82,687,7,0.5059171597633136,0.08284023668639054,0.34023668639053256
3ac05061a07bed2d0a42f922166381641f4fbc23,COSM gitignore update to remove clutter,Michael Eickenberg,michael.eickenberg@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-10-20 13:25:53-07:00,25200,2018-11-21 22:45:09-05:00,18000,True,False,['.gitignore'],['d51512dcf397a6b6a70fe46885f1b5acd45205b3'],0,2,2,1,,,
2f7d2406729b0c75021de9b34a8264054ead6786,"ENH Example of inverting scattering with a ConvNet for MNIST.

ENH Example inversion scattering with ConvNet - Implemented Michael's remarks (#40)

* Using the dir functions from the package, avoid using Variable when no needed, renaming and added a visualization of the path.

* Added a parser to load model, avoided the mkdir potential error, change name of dir to store generated images.

* Added a parser to load model, avoided the mkdir potential error, change name of dir to store generated images.",TMAnglesL,*M1nk0wsk1?,Joakim Andén,janden@flatironinstitute.org,2018-10-23 16:56:41+02:00,-7200,2018-11-21 22:45:09-05:00,18000,True,False,['regularized_inverse_scattering_MNIST.py'],['3ac05061a07bed2d0a42f922166381641f4fbc23'],0,165,165,1,0.09278350515463918,0.27835051546391754,0.9278350515463918
aef2b07ba427b87f3c392928f789eef88448cd4b,"DOC Fixing 1D doc (#38)

* [DOC] Fix typo in Scattering1D.__init__ docstring

* [DOC] Update docstring of Scattering1D.forward

Input is of type Tensor, not Variable.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-25 23:51:33-04:00,14400,2018-11-21 22:45:10-05:00,18000,True,False,['scattering1d.py'],['2f7d2406729b0c75021de9b34a8264054ead6786'],2,2,4,1,,,
10c82997e7d2252ef5d87667e67bc13fde5b1768,"REF Refactored 2D so that it uses backends such that imports of backend-specific packages are shielded and not used when other backend imported

REF factored skcuda and torch backends into two files

FIX skcuda tests weren't passing

ENH add a scattering_2d config option, so that 3d and 2d backends can be different

FIX write only 2d backend to config file, just in case other-D doesn't have that backend

loading coeffs on CPU and not GPU...

REF update requirements

improving tests",Michael Eickenberg,michael.eickenberg@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-10-25 19:41:15-07:00,25200,2018-11-21 22:47:13-05:00,18000,True,False,"['requirements.txt', '__init__.py', '__init__.py', 'backend_skcuda.py', 'backend_torch.py', 'scattering2d.py', 'test_scattering.py']",['aef2b07ba427b87f3c392928f789eef88448cd4b'],91,244,335,7,0.9655172413793104,0.0,0.1724137931034483
851684ec5fc5fbd488a9276762582ea1549b7011,"REF refactoring for backend separation in 3D

ENH start backend separation for 3d

FIX import errors after refactoring

FIX only write to scattering_3d backend config, not general",Michael Eickenberg,michael.eickenberg@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-10-25 20:32:26-07:00,25200,2018-11-21 22:47:15-05:00,18000,True,False,"['__init__.py', 'backend_skcuda.py', 'scattering3d.py', 'utils.py']",['10c82997e7d2252ef5d87667e67bc13fde5b1768'],136,233,369,4,0.0,0.0,0.0
0a1968392d88d77b0cea6d9224ee1210656d8a12,"REF refactoring in 2D for homogenizing API (#43)

* moving functions for clarity

* adding utils, changing names

* build fixed

* fft is not a class anymore

* subsample fourier

* subsample fourier

* filter bank looks like the 2D

* fixing unit test

* putting back gabor_2d or morlet_2d names

* filter_bank insread of filters_bank

* adding a line break

* backend is removed from init

* bug with the backend!

* putting stuffs in build

* putting stuffs in build

* removing back",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-26 20:00:08+02:00,-7200,2018-11-21 22:47:15-05:00,18000,True,False,"['backend_skcuda.py', 'backend_torch.py', 'filter_bank.py', 'scattering2d.py', 'test_scattering.py', 'utils.py']",['851684ec5fc5fbd488a9276762582ea1549b7011'],97,95,192,6,1.0,1.0,1.0
558081bea3889a1d9759f8f3cfb5c7eab05caeec,"TST Verify scattering on sample signal (#49)

Calculates the scattering transform on a sample signal and
compares it to a stored scattering transform output.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-26 18:27:48-04:00,14400,2018-11-21 22:47:16-05:00,18000,True,False,"['test_data_1d.pt', 'test_scattering.py']",['0a1968392d88d77b0cea6d9224ee1210656d8a12'],0,21,21,2,1.0,1.0,1.0
3f7ae034e0b3b2616a9d42ab125fa12fb1db7a87,"ENH Adding plot filters for 2D (#45)

* starting to edit the general doc..

* filterbank!

* pyplot

* removing back

* plt done

* done

* done

* Solving michael's comments",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-27 00:29:32+02:00,-7200,2018-11-21 22:47:16-05:00,18000,True,False,['plot_filters.py'],['558081bea3889a1d9759f8f3cfb5c7eab05caeec'],0,84,84,1,1.0,1.0,1.0
6b59be5f17e1d33f9a7967b5cedaa9da6dae6345,"TST Fix test_simple_scatterings test

When calling `torch.arange`, need to specify that we want a
float32 Tensor, not an int64 one.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-27 00:38:58-04:00,14400,2018-11-21 22:47:16-05:00,18000,True,False,['test_scattering.py'],['3f7ae034e0b3b2616a9d42ab125fa12fb1db7a87'],1,1,2,1,,,
8a243d9075fcd2aed7fb8c5f6d5c0344f708497e,BUG Fix typo when importing filter_bank in 2D code,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-26 23:26:10-04:00,14400,2018-11-21 22:47:17-05:00,18000,True,False,['scattering2d.py'],['6b59be5f17e1d33f9a7967b5cedaa9da6dae6345'],1,1,2,1,,,
95e1bf6ea4abfcd20326158972a73f6f012c304a,"BUG Fix other filter_bank typos

Replacing old `filters_bank` with `filter_bank`.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-26 23:33:36-04:00,14400,2018-11-21 22:47:17-05:00,18000,True,False,['filter_bank.py'],['8a243d9075fcd2aed7fb8c5f6d5c0344f708497e'],3,3,6,1,,,
506ef2148848560360f8e516bc25ad753574d5e1,"DOC 2D scattering documentation (#46)

Adding doc string and solving minor bugs(nomenclature) related to the doc.",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-27 10:01:45+02:00,-7200,2018-11-21 22:47:18-05:00,18000,True,False,"['backend_skcuda.py', 'backend_torch.py', 'filter_bank.py', 'scattering2d.py', 'test_scattering.py', 'utils.py']",['95e1bf6ea4abfcd20326158972a73f6f012c304a'],52,437,489,6,,,0.0
a61e37b813dd0f0af3c209d749e4adea99755bc2,"FIX Fix remaining 1D tests (#63)

* TST Fix differentiability 1D test

When sending an autograd variable to the FFT wrappers, we need to
make sure to call `detach()` before `numpy()`.

* ENH Remove warnings from ModulusStable.forward()

Specifically, replace the deprecated `ctx.saved_variables` with
`ctx.saved_tensors`.

* BUG Fix 1D transform for batch size more than one

Assignment dimensions are not compatible when batch size is greater
than one. Need to apply `squeeze(dim=1)` before assigning to the
output Tensor.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-28 00:19:15-04:00,14400,2018-11-21 22:47:18-05:00,18000,True,False,"['fft_wrapper.py', 'scattering1d.py', 'utils.py']",['506ef2148848560360f8e516bc25ad753574d5e1'],5,5,10,3,,,
a3abe0190f97352b4ff892fac558723ac3205c54,REF tests for 3d software go in 3d folder,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-28 05:20:46+01:00,-3600,2018-11-21 22:47:19-05:00,18000,True,False,['test_scattering3d.py'],['a61e37b813dd0f0af3c209d749e4adea99755bc2'],0,0,0,1,,,
f671a6425679af5ee37a38964f04c481314933c3,"FIX Fix escape sequences in docstrings (#64)

Removes warnings about invalid escape sequences. Fixes #56.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-28 00:40:18-04:00,14400,2018-11-21 22:47:19-05:00,18000,True,False,"['filter_bank.py', 'scattering1d.py', 'scattering3d.py', 'utils.py']",['a3abe0190f97352b4ff892fac558723ac3205c54'],17,17,34,4,,,
5af5d4fa4dd0aaea47f1c4bf8ecdcb82ed7e54e1,COSM Update .gitignore to include .cache directory (#51),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-28 00:44:33-04:00,14400,2018-11-21 22:47:19-05:00,18000,True,False,['.gitignore'],['f671a6425679af5ee37a38964f04c481314933c3'],0,1,1,1,,,
e672c3433490ee611fa9efa210178c3c1ea7c7c4,"REF Remove dependence on sklearn in 1D code (#52)

Used `check_random_state`, which was not necessary. Replaced with
numpy call. Fixes #48.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-28 00:45:38-04:00,14400,2018-11-21 22:47:20-05:00,18000,True,False,"['synthetic.py', 'test_filters.py', 'test_scattering.py', 'test_utils.py']",['5af5d4fa4dd0aaea47f1c4bf8ecdcb82ed7e54e1'],10,6,16,4,,,
b59195b6c6d8a2ab77a3259de6a0e3aaf96d6224,ENH Add example for plotting 1D filters (#54),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-28 00:46:52-04:00,14400,2018-11-21 22:47:20-05:00,18000,True,False,['plot_filters.py'],['e672c3433490ee611fa9efa210178c3c1ea7c7c4'],0,46,46,1,,,
03b37448e0a82c82f80f5fedfd7bf263852ec87b,"FIX Various fixes for 1D scattering (#39)

* corrected a bad behaviour for the generation of the subsampled filters

* corrected behavior for U1

* added warning for small support size

* removing an unnecessary fft transform for U

* fix scattering tests (numpy import)",AndreuxMath,AndreuxMath@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-10-28 17:06:21+01:00,-3600,2018-11-21 22:47:20-05:00,18000,True,False,"['filter_bank.py', 'scattering1d.py', 'test_filters.py', 'test_scattering.py']",['b59195b6c6d8a2ab77a3259de6a0e3aaf96d6224'],23,74,97,4,0.27586206896551724,0.9655172413793104,0.7241379310344828
4b2439f0bca72bf284ed5f3d51229be3193085bd,REF removing deprecation warning and some import inconsistency (#66),Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-28 17:42:07+01:00,-3600,2018-11-21 22:47:21-05:00,18000,True,False,"['scattering3d_qm7.py', '__init__.py', 'scattering.py']",['03b37448e0a82c82f80f5fedfd7bf263852ec87b'],15,2,17,3,0.0,0.0,1.0
d86cd378699f033edd501d75dba74a509450e500,"REF replace skcuda fft by pytorch and then move it to utils
I would call this a nice fix

It passes the unit test!

deleting useless files

removing a file, cleaning scat1d, adding doc strings so that it goes straight in the module!",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-27 11:09:48+02:00,-7200,2018-11-21 22:47:21-05:00,18000,True,False,"['fft_wrapper.py', 'scattering1d.py', 'test_fft.py', 'utils.py']",['4b2439f0bca72bf284ed5f3d51229be3193085bd'],380,36,416,4,0.5757575757575758,0.1590909090909091,0.5
ac653dfd729faf67fdbf41d702f6438500be6f24,"REF Removing skcuda from 3D (#61)

* switching from fft::skcuda to fft::torch

* removing the 3d fft",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-28 23:10:29+01:00,-3600,2018-11-21 22:47:22-05:00,18000,True,False,"['__init__.py', 'backend_skcuda.py', 'backend_torch.py', 'scattering3d.py']",['d86cd378699f033edd501d75dba74a509450e500'],167,111,278,4,0.5862068965517241,0.5862068965517241,0.8793103448275862
8de1e6f2a67fc10aa9cbaacaca211d4eb6ab2097,"TST Update sample test data for 1D (#67)

Now that the filter definitions have changed, we need to update
the sample scattering transform for the tests to pass.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-29 00:00:56-04:00,14400,2018-11-21 22:47:22-05:00,18000,True,False,['test_data_1d.pt'],['ac653dfd729faf67fdbf41d702f6438500be6f24'],0,0,0,1,,,
5b1794fa9aa18ccba5779bdf421b8eeae1f293e7,"[FIX] bisous++ cufft

cufft is no longer needed, and the import was breaking the global
import of scattering_transform when skuda was not installed.",rleonarduzzi,roberto.fabio.leonarduzzi@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-10-29 19:00:50+01:00,-3600,2018-11-21 22:47:22-05:00,18000,True,False,['backend_torch.py'],['8de1e6f2a67fc10aa9cbaacaca211d4eb6ab2097'],1,0,1,1,,,
111393779d6adb9aca5ff5f6189f18f5348337d5,FIX :scream: xyz file was loaded wrongly for qm7git add datasets.py !,Michael Eickenberg,michael.eickenberg@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-10-29 17:10:28-07:00,25200,2018-11-21 22:47:23-05:00,18000,True,False,['datasets.py'],['18b6122d6a8739b97bf490805d2cf6b6df1eef35'],3,5,8,1,0.0,0.0,1.0
18b6122d6a8739b97bf490805d2cf6b6df1eef35,"FIX Prevent nans in 1D classification example for CPU (#72)

For certain signals, we get scattering coefficients that are
exactly zero, which means that when we take the logarithm, we
get inf values, which later turn into nans. We solve this by
adding a small constant (`1e-6`) to the coefficients before
computing the logarithm.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-29 18:26:03-04:00,14400,2018-11-21 22:47:23-05:00,18000,True,False,['classif.py'],['5b1794fa9aa18ccba5779bdf421b8eeae1f293e7'],5,10,15,1,1.0,1.0,0.0
c001225c3c6fe105dda068e509fbbe3d0ffdbbf0,"REF+FIX+ENH remove legacy padding, fix 2D tests, add cache dir to filters

I successfully rebased B-)",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 11:32:02+01:00,-3600,2018-11-21 22:47:24-05:00,18000,True,False,"['backend_skcuda.py', 'backend_torch.py', 'filter_bank.py', 'scattering2d.py', 'test_scattering.py']",['aa1db92e86cc19d624207776c5a272c479d43f55'],85,95,180,5,0.4666666666666667,0.7333333333333333,0.3333333333333333
1436bf4849fdca617160cf756ea9a9b6784c0e03,"[homogenization] deployment of 1D backend

Remove variable use, add the 1D backend support, remove unnecessary import, correct minor bugs, apsses all the unit tests",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 11:40:42+01:00,-3600,2018-11-21 22:47:25-05:00,18000,True,False,"['__init__.py', '__init__.py', 'backend_torch.py', 'scattering1d.py', 'test_utils.py', 'utils.py']",['c001225c3c6fe105dda068e509fbbe3d0ffdbbf0'],319,381,700,6,0.0,0.0,0.0
95b28861832ed37bbfa1d3533115b6dd66dda3e4,"[feature added] speed timer

one file to test the backends in various setting and report the speed!",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 16:48:01+01:00,-3600,2018-11-21 22:47:25-05:00,18000,True,False,['compute_speed.py'],['1436bf4849fdca617160cf756ea9a9b6784c0e03'],0,71,71,1,,,
fa72f9b6c4dffc170bb2d4c02d72c114229276d0,[feature add] compute time for 3D,louity,louis.thiry@outlook.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 17:25:51+01:00,-3600,2018-11-21 22:47:26-05:00,18000,True,False,['compute_speed.py'],['95b28861832ed37bbfa1d3533115b6dd66dda3e4'],0,37,37,1,,,
50a3d0c9407a3bc01763a4b88c8d4c3b0d7df935,"[doc string] filter bank

+ minor bugs",louity,louis.thiry@outlook.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 17:26:38+01:00,-3600,2018-11-21 22:47:26-05:00,18000,True,False,['filter_bank.py'],['fa72f9b6c4dffc170bb2d4c02d72c114229276d0'],24,101,125,1,0.0,0.5,0.0
5ffa9dc9bf2ab11f9c4ff8c8097a9a03f0d6a7b0,[Fix] FFT normalization,louity,louis.thiry@outlook.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 17:30:17+01:00,-3600,2018-11-21 22:47:26-05:00,18000,True,False,"['backend_torch.py', 'scattering3d.py']",['50a3d0c9407a3bc01763a4b88c8d4c3b0d7df935'],12,5,17,2,0.0,0.0,1.0
1bae41eee4e6ef4b7860011023cf871a22695bd5,FIX backend was still a kwarg in 2d modulus (#81),Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 18:13:04+01:00,-3600,2018-11-21 22:47:27-05:00,18000,True,False,['backend_skcuda.py'],['5ffa9dc9bf2ab11f9c4ff8c8097a9a03f0d6a7b0'],7,4,11,1,0.0,0.0,0.0
958fe4a2132d3c2016a9410f8c510faef854dae3,"REF removing demo.py, not necessary and makes test failes when loading all files in the folder (#87)",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 18:18:10+01:00,-3600,2018-11-21 22:47:27-05:00,18000,True,False,['demo.py'],['1bae41eee4e6ef4b7860011023cf871a22695bd5'],42,0,42,1,1.0,0.0,1.0
82a406eadd22dcc78338d8989e23af126094f77f,Improving 3D doscstrings,louity,louis.thiry@outlook.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 18:34:12+01:00,-3600,2018-11-21 22:47:28-05:00,18000,True,False,['utils.py'],['958fe4a2132d3c2016a9410f8c510faef854dae3'],75,61,136,1,0.6875,0.0,1.0
348816b211dc38628f90f2f0b8c6276aba378460,"REF Fixing unit tests for CPU, GPU and backends on 1-2D",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 18:35:21+01:00,-3600,2018-11-21 22:49:06-05:00,18000,True,False,"['backend_torch.py', 'test_scattering.py', 'backend_torch.py']",['82a406eadd22dcc78338d8989e23af126094f77f'],77,140,217,3,0.0,0.24074074074074073,1.0
b46b8c2469c2d04d4cb18a084f13dac8cfc23991,"DOC lot's of new documentation by Edouard (#44)

* amazing documenter done by a great native speaker

* good doc, rly

* good doc, rly

* good doc, rly

* good doc, rly

* good doc, rly

* good doc, rly

* good doc, rly

* Installation(developer??)

* improving doc

* improving doc

* une figure, une!

* doc

* doc

* doc

* doc

* snoop dog y dog

* adding compute time

* adding compute time

* voilà voilà

* more doc

* sphynx gallery

* adding",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 18:38:11+01:00,-3600,2018-11-21 22:49:09-05:00,18000,True,False,"['algorithm.png', 'bibtex.bib', 'conf.py', 'developerguide.rst', 'index.rst', 'installation.rst', 'quickstart.rst', 'userguide.rst', 'README.txt', 'README.txt', 'README.txt', 'README.txt']",['348816b211dc38628f90f2f0b8c6276aba378460'],21,356,377,12,,,
b488b9e506988a79003da758bb7e72971f82176d,REF adding unit tests for 3D,louity,louis.thiry@outlook.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 19:43:41+01:00,-3600,2018-11-21 22:49:09-05:00,18000,True,False,"['ref_pyscatharm.pt', 'test_scattering3d.py']",['b46b8c2469c2d04d4cb18a084f13dac8cfc23991'],48,71,119,2,0.0,1.0,1.0
4dc0a0bb2517a3863eb9e70128fe6a01dfbfb3cc,REF pytest support,rleonarduzzi,roberto.fabio.leonarduzzi@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-10-30 19:49:25+01:00,-3600,2018-11-21 22:49:10-05:00,18000,True,False,"['developerguide.rst', 'test_scattering1d.py', 'test_scattering2d.py', 'test_scattering3d.py']",['b488b9e506988a79003da758bb7e72971f82176d'],14,48,62,4,0.5142857142857142,1.0,1.0
c7e2f2510e7c5ac0a953f2a28a6752b534133c85,"BUG appdir requirements

Needed for the backend config files.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-30 15:45:01-04:00,14400,2018-11-21 22:49:10-05:00,18000,True,False,['requirements.txt'],['4dc0a0bb2517a3863eb9e70128fe6a01dfbfb3cc'],0,1,1,1,,,
2eee218abfac6c45be0a9d34af19de4533048b0a,DOC Add V100 timings (#98),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-30 17:08:39-04:00,14400,2018-11-21 22:49:11-05:00,18000,True,False,['userguide.rst'],['c7e2f2510e7c5ac0a953f2a28a6752b534133c85'],3,5,8,1,,,
33047354d4bf55e37cc7ed658dd4a3131d9b5d9f,"ENH Add speed test script for 1D (#93)

Speed test for 1d!",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-30 17:19:50-04:00,14400,2018-11-21 22:49:11-05:00,18000,True,False,['compute_speed.py'],['2eee218abfac6c45be0a9d34af19de4533048b0a'],0,70,70,1,,,
ad98af79683b74b84a4575f36852f646e879eeff,ENH pytorch requirements,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 22:21:11+01:00,-3600,2018-11-21 22:49:11-05:00,18000,True,False,['requirements.txt'],['33047354d4bf55e37cc7ed658dd4a3131d9b5d9f'],1,1,2,1,,,
daf0b645d048bd43f32c8089344b369b054f2d59,REF Harmonization of the unit test (#91),Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-30 23:56:26+01:00,-3600,2018-11-21 22:50:37-05:00,18000,True,False,"['test_data_2d.pt', 'test_scattering2d.py', 'scattering3d.py', 'test_data_3d.pt', 'test_scattering3d.py']",['ad98af79683b74b84a4575f36852f646e879eeff'],68,60,128,5,0.9,0.0,0.0
af54d9f723832c38852c5026cbf7a08a7dbc9eea,MAINT Remove Variables from 1D code (#99),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-10-30 23:48:56-04:00,14400,2018-11-21 22:50:39-05:00,18000,True,False,"['classif.py', 'real_signal.py', 'synthetic.py', 'scattering1d.py', 'test_scattering1d.py', 'test_utils.py']",['daf0b645d048bd43f32c8089344b369b054f2d59'],52,45,97,6,1.0,1.0,1.0
8093574d83e97c982ddc1baac137c18ab73b1c3c,ENH Prog qm7 (almost) working,louity,louis.thiry@outlook.fr,Joakim Andén,janden@flatironinstitute.org,2018-10-31 11:33:27+01:00,-3600,2018-11-21 22:50:39-05:00,18000,True,False,"['scattering3d_qm7.py', 'datasets.py']",['af54d9f723832c38852c5026cbf7a08a7dbc9eea'],185,210,395,2,0.0,1.0,0.07352941176470588
6d781d6720bcaeb5aa75874180e5d636e9f4248f,ENH Optimize torch backend for 1D (#112),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-01 12:58:32-04:00,14400,2018-11-21 22:50:40-05:00,18000,True,False,"['backend_torch.py', 'filter_bank.py']",['8093574d83e97c982ddc1baac137c18ab73b1c3c'],31,19,50,2,0.0,0.0,1.0
9bf303e941860ec66b7de5446057beb595140ae5,"ENH doc, sphynx gallery without warning, code doc without warning, cleaner",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-11-01 19:42:08+01:00,-3600,2018-11-21 22:50:40-05:00,18000,True,False,"['Makefile', 'codereference.rst', 'conf.py', 'index.rst', 'userguide.rst', 'classif.py', 'plot_filters.py', 'compute_speed.py', 'plot_filters.py', 'regularized_inverse_scattering_MNIST.py', 'compute_speed.py', 'scattering1d.py', '__init__.py', 'scattering2d.py', 'scattering3d.py']",['6d781d6720bcaeb5aa75874180e5d636e9f4248f'],376,444,820,15,,,
c8e970f9a066f5f069c3bce91111d381043096a1,"ENH skcuda backend for 1D (#80)

* ENH Add 1D skcuda backend

* ENH Add skcuda backend to speedtest

* BUG Fix grid calc in skcuda 1D subsample_fourier

This needed to be properly adapted for the 1D case. As a result,
we now get performance on par with GPU torch on my desktop:
```
==> Testing Float32 with Skcuda backend, on GPU, forward
Elapsed time: 9.157821 [s / 10 evals], avg: 0.92 (s/batch)
```

* TST Replace `test_modulus` in 1D

Should be testing `modulus_complex`, since that's the function
that is exported from the backend.

* TST Update 1D tests to deal with skcuda backend

* MAINT Reorganize skcuda 1D backend for readability",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-11-02 21:50:04+01:00,-3600,2018-11-21 22:50:41-05:00,18000,True,False,"['compute_speed.py', '__init__.py', 'backend_skcuda.py', 'test_scattering1d.py', 'test_utils.py']",['9bf303e941860ec66b7de5446057beb595140ae5'],7,460,467,5,0.011560693641618497,0.5664739884393064,0.6242774566473989
ec4cff73c4828ad6ab7e09eb8695b99fc3156fc0,[FIX] add compute_speed.py to doc ignore list,Michael Eickenberg,michael.eickenberg@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-10-30 17:13:05-07:00,25200,2018-11-21 22:50:41-05:00,18000,True,False,['conf.py'],['c8e970f9a066f5f069c3bce91111d381043096a1'],3,3,6,1,,,
62ec14bc77f13865e4a34a955c210b5673307cc8,"DOC modify README

start of updates  to readme

Update README.md

Update README.md

DOC slight readme modification

DOC another slight readme modification

DOC another another slight readme modification",Eugene Belilovsky,eugenium@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-10-06 19:54:47-04:00,14400,2018-11-21 22:50:42-05:00,18000,True,False,['README.md'],['ec4cff73c4828ad6ab7e09eb8695b99fc3156fc0'],22,32,54,1,,,
0bd554a380d3eda372b555370f63673ba40d05d8,"ENH add good cifar and mnist examples

first version .. need to improve slightly accuracy

fixed

1st order

cifar

updating based on mikes comments

updating directory storing path

more comments resolved

deleted something

minor

FIX order2 setting was in build, moved to init

FIX resnet example minor stuff

COSM add 88% acc for cifar experiments",eugenium,eugenium@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-10-06 22:55:49-04:00,14400,2018-11-21 22:50:42-05:00,18000,True,False,"['cifar.py', 'cifar_resnet.py', 'mnist.py', 'requirements.txt', 'scattering2d.py']",['62ec14bc77f13865e4a34a955c210b5673307cc8'],112,563,675,5,0.3806228373702422,0.314878892733564,0.5882352941176471
8c36e5bcdd8c0d0456be05fc2b3a0a1a5915cb72,COSM update gitignore to disregard built examples,Michael Eickenberg,michael.eickenberg@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-11-03 17:13:25-07:00,25200,2018-11-21 22:50:43-05:00,18000,True,False,['.gitignore'],['0bd554a380d3eda372b555370f63673ba40d05d8'],0,4,4,1,,,
b782a69f34f7f859da0c6183085b58a6f19edcbe,"COSM add some tentative author names, to be refined",Michael Eickenberg,michael.eickenberg@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-11-03 17:39:50-07:00,25200,2018-11-21 22:50:43-05:00,18000,True,False,"['backend_skcuda.py', 'backend_torch.py', 'scattering1d.py', 'backend_skcuda.py', 'backend_torch.py', 'scattering2d.py', 'scattering3d.py']",['8c36e5bcdd8c0d0456be05fc2b3a0a1a5915cb72'],5,16,21,7,,,
3d0a02ef2494ad025187537d6c9482016f7c4a0d,ENH Add narrative to 1D synthetic example,Michael Eickenberg,michael.eickenberg@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-11-03 19:42:44-07:00,25200,2018-11-21 22:50:44-05:00,18000,True,False,"['conf.py', 'plot_synthetic.py', 'synthetic.py']",['b782a69f34f7f859da0c6183085b58a6f19edcbe'],69,104,173,3,0.0,0.0,1.0
0e5aa55f497885d8408c05ba7cc8dd0a98c58173,"MAINT+DOC Refactor and document `real_signal.py`

The 1D example has been refactored to make a linear narrative
easier to follow. Comments have also been added to make
`sphinx-gallery` produce a reasonable documentation page.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-03 22:44:16-04:00,14400,2018-11-21 22:50:44-05:00,18000,True,False,['real_signal.py'],['3d0a02ef2494ad025187537d6c9482016f7c4a0d'],58,136,194,1,0.0,0.0,0.55
7d21d5ba708aaab181fe54db0b6bebbd4b08b07e,"DOC Update `conf.py` to include `real_signal.py`

Lets us use the 1D example `real_signal.py` in the gallery.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-03 22:45:26-04:00,14400,2018-11-21 22:50:45-05:00,18000,True,False,['conf.py'],['0e5aa55f497885d8408c05ba7cc8dd0a98c58173'],1,1,2,1,,,
f1ab375c3a80c52fd9ff032972685333a61672fc,DOC+FIX make plots display in sphinx-gallery,Michael Eickenberg,michael.eickenberg@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-11-03 20:07:13-07:00,25200,2018-11-21 22:50:45-05:00,18000,True,False,['plot_real_signal.py'],['7d21d5ba708aaab181fe54db0b6bebbd4b08b07e'],12,12,24,1,,,
ef4e48a1c3240c87338e5dc70a429b6e181098ac,DOC rename package in installation instructions (#115),Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-03 23:11:01-04:00,14400,2018-11-21 22:50:46-05:00,18000,True,False,['installation.rst'],['f1ab375c3a80c52fd9ff032972685333a61672fc'],6,9,15,1,,,
1db4255e8b19a322434fa2fce398b73b5757f764,"MAINT+DOC Refactor and doc 1D `compute_speed.py`

Refactored to make script more linear and commented to provide
ok sphinx-gallery rendering.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-03 23:50:00-04:00,14400,2018-11-21 22:50:46-05:00,18000,True,False,['compute_speed.py'],['ef4e48a1c3240c87338e5dc70a429b6e181098ac'],58,84,142,1,,,
70853189314829666318d212c8490337129d1c5c,"ENH Add warm-up to 1D `compute_speed`

An extra call to `forward()` before the benchmark ensures that
we don't count first-time overhead associated with memory
allocation and kernel compilation.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-03 23:54:21-04:00,14400,2018-11-21 22:50:46-05:00,18000,True,False,['compute_speed.py'],['1db4255e8b19a322434fa2fce398b73b5757f764'],3,8,11,1,,,
e100e565359bae3163a4011ca407c5dd79be5045,DOC Add `compute_speed` to gallery,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-03 23:55:32-04:00,14400,2018-11-21 22:50:47-05:00,18000,True,False,['conf.py'],['70853189314829666318d212c8490337129d1c5c'],1,1,2,1,,,
7d06886b999d1cc1758941ccd3220d0b6d21b85b,"FIX 3D QM7 example reproduces paper results (#113)

Finally the 3D example working thanks to Louis!

* QM7 example reproducing paper results

* fix default value of sigma

* FIX list to tuple in default args

avoids side effects",louity,louis.thiry@outlook.fr,Joakim Andén,janden@flatironinstitute.org,2018-11-06 07:11:57+01:00,-3600,2018-11-21 22:50:47-05:00,18000,True,False,['scattering3d_qm7.py'],['e100e565359bae3163a4011ca407c5dd79be5045'],15,18,33,1,0.0,1.0,0.0
aae646006b14ae06e6af817c3820fb74b7c282e2,DOC FIX fix input_array size in docstrings (#114),louity,louis.thiry@outlook.fr,Joakim Andén,janden@flatironinstitute.org,2018-11-06 07:12:57+01:00,-3600,2018-11-21 22:50:48-05:00,18000,True,False,['scattering3d.py'],['7d06886b999d1cc1758941ccd3220d0b6d21b85b'],9,9,18,1,,,
f13c36650a7a80cf986fef1671ecd440cad6b483,DOC Adapt 2D `compute_speed.py` for gallery,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-04 00:33:12-04:00,14400,2018-11-21 22:50:48-05:00,18000,True,False,['compute_speed.py'],['aae646006b14ae06e6af817c3820fb74b7c282e2'],44,98,142,1,,,
8ecf0b64dca3bbb532b76689045beb5dcadba245,"DOC Edit narrative in 2D `compute_speed.py`

Remove inaccurate comment about larger batch sizes not being more
efficient.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-06 11:45:56-05:00,18000,2018-11-21 22:50:49-05:00,18000,True,False,['compute_speed.py'],['f13c36650a7a80cf986fef1671ecd440cad6b483'],2,1,3,1,,,
05adcb9b45015c144eeea3406cf4ff5744509b67,"TST Update sample scattering 1D test

Set batch size to greater than one and reduce the time dimension
to get an overall smaller test size. Fixes #102.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-06 12:11:40-05:00,18000,2018-11-21 22:50:49-05:00,18000,True,False,"['test_data_1d.pt', 'test_scattering1d.py']",['8ecf0b64dca3bbb532b76689045beb5dcadba245'],1,1,2,2,,,
9f9d365932b61c82d7e8e61a58935a4d1c1081c2,DOC+COSM Document 1D backends and fix style issues,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-06 15:25:03-05:00,18000,2018-11-21 22:50:50-05:00,18000,True,False,"['backend_skcuda.py', 'backend_torch.py']",['05adcb9b45015c144eeea3406cf4ff5744509b67'],271,350,621,2,0.0,0.0,0.0
094c57ce94fc70c11032c08ae7322532b02e616b,"MAINT Make padding function in 1D more readable

Per @eickenberg's suggestion.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-06 15:26:20-05:00,18000,2018-11-21 22:50:50-05:00,18000,True,False,"['backend_skcuda.py', 'backend_torch.py']",['9f9d365932b61c82d7e8e61a58935a4d1c1081c2'],12,4,16,2,0.0,0.0,1.0
6be5cb2da783f0433e816a90452343038a849b1f,"MAINT Fix style issued in 1D skcuda backend

Mostly function and variable names with non-standard formatting.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-06 16:25:06-05:00,18000,2018-11-21 22:50:50-05:00,18000,True,False,['backend_skcuda.py'],['094c57ce94fc70c11032c08ae7322532b02e616b'],16,16,32,1,,,
cdac7b27b0b36987226fb6e6c95d146c6d0e8499,"MAINT Rename `pad1D` to `pad_1d` in 1D backends

Again, more consistent with overall style.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-06 16:33:36-05:00,18000,2018-11-21 22:50:51-05:00,18000,True,False,"['backend_skcuda.py', 'backend_torch.py', 'test_utils.py']",['6be5cb2da783f0433e816a90452343038a849b1f'],10,10,20,3,,,
33fc70b130e0dbe08a937cd0b4df2caf75e3d143,COSM Clean up 1D backend `__init__.py`,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-06 16:35:29-05:00,18000,2018-11-21 22:50:51-05:00,18000,True,False,['__init__.py'],['cdac7b27b0b36987226fb6e6c95d146c6d0e8499'],11,2,13,1,,,
40deaf3d482a079d4c6225b0911ae955b54919c4,"MAINT Redefine `ifft1d_c2c_normed` as `ifft1d_c2c`

There was an `ifft1d_c2c`, but it was never used, so to simplify,
we remove the unnormalized function and replace it with the
normalized one.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-06 20:01:07-05:00,18000,2018-11-21 22:50:52-05:00,18000,True,False,"['backend_skcuda.py', 'backend_torch.py', 'scattering1d.py']",['33fc70b130e0dbe08a937cd0b4df2caf75e3d143'],46,6,52,3,0.0,0.0,0.0
4f7547a37b4785d2c18423bfc081a28402a47201,"DOC rewrite first sentences of README (#130)

striving towards a more user-friendly introduction
structure adapted from the scikit-learn and keras README files",Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-08 10:49:40-05:00,18000,2018-11-21 22:50:52-05:00,18000,True,False,['README.md'],['40deaf3d482a079d4c6225b0911ae955b54919c4'],22,20,42,1,,,
17cacb9a521345bc5c0ac34954dd39b0f111b7dd,DOC add Vincent to README,eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-11-08 07:51:04-08:00,28800,2018-11-21 22:50:53-05:00,18000,True,False,['README.md'],['4f7547a37b4785d2c18423bfc081a28402a47201'],1,1,2,1,,,
e572038780385642f21a08d998f35d4138dddccf,"ENH Suppress warnings related to scipy.fftpack

Specifically, a FutureWarning is emitted during each `fft2` call,
so we wrap it with a `warnings.simplefilter` to suppress the
warning.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-05 16:38:51-05:00,18000,2018-11-21 22:50:53-05:00,18000,True,False,"['plot_filters.py', 'filter_bank.py', 'utils.py']",['17cacb9a521345bc5c0ac34954dd39b0f111b7dd'],8,14,22,3,1.0,1.0,1.0
03790afdd7a1a58f06094565ffcbadecb2aa5643,"MAINT start AUTHORS.md (#131)

12 authors as of Nov 9, 2018",Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-11 15:16:21-05:00,18000,2018-11-21 22:50:54-05:00,18000,True,False,['AUTHORS.md'],['e572038780385642f21a08d998f35d4138dddccf'],0,15,15,1,,,
ca3648fdf29cefa82664594666a3e37bde106e0d,"COSM [1D] rename adaptative -> adaptive (#132)

* rename adaptative_choice_P in filter_bank.py

adaptive is preferred over adaptative

* rename adaptative -> adaptive in tests

FIX adaptative -> adaptive",Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-11 15:17:26-05:00,18000,2018-11-21 22:50:54-05:00,18000,True,False,"['filter_bank.py', 'test_filters.py']",['03790afdd7a1a58f06094565ffcbadecb2aa5643'],7,7,14,2,,,
380bb190a79721fdd7908a8352910b36e7749daf,MAINT add license badge to README (#134),Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-12 22:28:27-05:00,18000,2018-11-21 22:50:54-05:00,18000,True,False,['README.md'],['ca3648fdf29cefa82664594666a3e37bde106e0d'],3,4,7,1,,,
d442793af0d0babc682fa9c10a187fdde7923e03,"DOC change example code in Readme

change example code to Scattering2D in Readme, use python3 to test",sixin at pku,sixin.zhang@pku.edu.cn,Joakim Andén,janden@flatironinstitute.org,2018-11-14 09:22:49+08:00,-28800,2018-11-21 22:50:55-05:00,18000,True,False,['README.md'],['380bb190a79721fdd7908a8352910b36e7749daf'],4,4,8,1,,,
61f9c41642308f7b042d55447f8639cc1c360a10,"DOC enhance narrative in 1D classification example (#120)

* DOC enhance narrative in 1D classification example

* MAINT+DOC Simplify and comment `plot_classif.py`

To make it easier to follow, the caching functionality has been
removed. All helper functions have been eliminated as well to
create a linear narrative. Comments have been added to allow
for a reasonable sphinx-gallery document.",eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-11-17 13:15:29-08:00,28800,2018-11-21 22:50:55-05:00,18000,True,False,"['classif.py', 'plot_classif.py']",['d442793af0d0babc682fa9c10a187fdde7923e03'],459,313,772,2,0.75,0.75,0.9391891891891891
28095b1abdccd3f9dff4d61e79d0e975d7e9693f,"MAINT Fix naming style in 1D `filter_bank.py`

Specifically, `morlet1D` and `gauss1D` become `morlet_1d` and
`gauss_1d`.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-07 12:15:25-05:00,18000,2018-11-21 22:50:56-05:00,18000,True,False,"['filter_bank.py', 'test_filters.py']",['61f9c41642308f7b042d55447f8639cc1c360a10'],12,12,24,2,,,
7b2a8e8de6298dacaec63065c71e7e43ea961034,"MAINT Replace FFT with Fourier transform in 1D

We should avoid calling the Fourier transform of a signal its
""FFT"". The FFT is just the algorithm. Plus `_f` is shorter than
`_fft`.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-07 12:27:26-05:00,18000,2018-11-21 22:50:56-05:00,18000,True,False,"['plot_filters.py', 'filter_bank.py', 'scattering1d.py', 'test_filters.py', 'test_scattering1d.py', 'test_utils.py', 'utils.py']",['28095b1abdccd3f9dff4d61e79d0e975d7e9693f'],142,143,285,7,,,
297b7775f6d6214c9242599264449aba551da245,"MAINT Simplify `Scattering1D.build()`

Cast all filters at once using `_type()` method.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-07 12:32:52-05:00,18000,2018-11-21 22:50:57-05:00,18000,True,False,['scattering1d.py'],['7b2a8e8de6298dacaec63065c71e7e43ea961034'],3,1,4,1,1.0,0.0,0.0
83cd239880d245c6e4eb4178839cb93385a97014,"ENH Index filters by scalars in 1D scattering

Previously, filters (and consequently scattering coefficients)
were indexed using pairs `(j, n)`, where `j` is the subsampling
power (i.e., dyadic scale) and `n` is a linear index running from
`0` to the number of filters minus one. Scattering coefficients
(in the unvectorized output) were similarly indexed, with second-
order coefficients indexed by a four-tuple `(j1, n1, j2, n2)`.

This scheme complicates accessing the filters, since the caller
needs to know in advance what dyadic scale a particular filter
is located in to access it. Indexing the scattering coefficients
poses a similar difficulty.

Instead, filters are now indexed by a single number `n`, with the
dyadic scale stored as an entry in that filter's dictionary (just
like the parameters `xi`, and `sigma`). So the `j` of a previous
`psi1_f[(j, n)]` is now accessed as `psi1_f[n]['j']`. This implies
that `j` is a function of `n`, which makes sense.

Scattering coefficients are indexed similarly, with the previous
index `(j1, n1)`, now becoming `(n1,)` and `(j1, n1, j2, n2)`
becoming `(n1, n2)`. The zeroth-order coefficient is accessed by
`()` (this was previously `0`) to conform with the above pattern.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-07 18:38:33-05:00,18000,2018-11-21 22:50:57-05:00,18000,True,False,"['plot_filters.py', 'filter_bank.py', 'scattering1d.py', 'test_filters.py', 'test_scattering1d.py', 'utils.py']",['297b7775f6d6214c9242599264449aba551da245'],112,117,229,6,1.0,1.0,0.0
a521091d429094d8b7667fa5dc388e11f5ac6667,"ENH Replace meta dictionaries with arrays in 1D

Instead of the `compute_meta_scattering()` function returning
a dictionary with keys corresponding to tuples indexing the
unvectorized scattering transform output, we replace this with
a dictionary containing fields `'order`', `'j'`, and so on, each
of which is a Tensor. Missing values are filled in with NaNs.

The advantage of this is that it makes indexing easier, since we
don't have to do list comprehensions to extract relevant data, such
as orders.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-07 23:40:07-05:00,18000,2018-11-21 22:50:58-05:00,18000,True,False,"['plot_real_signal.py', 'plot_synthetic.py', 'scattering1d.py', 'test_scattering1d.py']",['83cd239880d245c6e4eb4178839cb93385a97014'],45,66,111,4,0.0,0.0,0.0
c733e324325ef9bfcdbaff1472b868c7f886e259,"ENH Make `order2` default to True everywhere in 1D

Previously, some functions (like `forward()`) would default to
`True`, while others (like `compute_meta_scattering()`) would
default to False.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-08 09:39:01-05:00,18000,2018-11-21 22:50:58-05:00,18000,True,False,"['plot_real_signal.py', 'plot_synthetic.py', 'scattering1d.py', 'test_scattering1d.py']",['a521091d429094d8b7667fa5dc388e11f5ac6667'],7,7,14,4,,,
9d8ae02f68e539f3443830868a4e48ca4884103e,"ENH Add `meta()` method to `Scattering1D` class

This lets us get the meta information compatible with the object
itself, as opposed to having to call a static method with the
same arguments.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-08 09:47:36-05:00,18000,2018-11-21 22:50:59-05:00,18000,True,False,"['scattering1d.py', 'test_scattering1d.py']",['c733e324325ef9bfcdbaff1472b868c7f886e259'],3,7,10,2,1.0,1.0,1.0
0abd50294c321aa6094db6182e75e4bccc3e8de0,"ENH Add `output_size()` method to Scattering1D

Like `meta()`, this calls the corresponding static method (in this
case `precompute_size_scattering()` with the values currently
in use by the transform to make things easier.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-08 10:04:51-05:00,18000,2018-11-21 22:50:59-05:00,18000,True,False,"['scattering1d.py', 'test_scattering1d.py']",['9d8ae02f68e539f3443830868a4e48ca4884103e'],3,8,11,2,0.75,0.75,1.0
2a1f63d8ad57a33b8029aa18ed6b086738305865,"ENH Replace `order2` with `max_order` in 1D

This is more general, allowing the user to specify which order
they want (1 or 2) and enables possible extensions down the road
(only zeroth-order coefficients or higher-order coeffients).",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-08 09:55:01-05:00,18000,2018-11-21 22:50:59-05:00,18000,True,False,"['scattering1d.py', 'test_scattering1d.py']",['0abd50294c321aa6094db6182e75e4bccc3e8de0'],27,25,52,2,1.0,1.0,1.0
390215926b0292b6c07f8ca7f35c05f3c6492010,"ENH Replace `average_U1` with `average` in 1D

Instead of just averaging the first-order coefficients, this flag
now controls whether all coefficients are averaged. This makes
the behavior more general.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-08 10:21:30-05:00,18000,2018-11-21 22:51:00-05:00,18000,True,False,"['scattering1d.py', 'test_scattering1d.py']",['2a1f63d8ad57a33b8029aa18ed6b086738305865'],31,38,69,2,0.0,0.0,0.0
7167619d5e1332cb4cef476e5a39f97081315d92,"BUG Fix 1D bug for unaveraged second order

When `average` is `False`, the Fourier transform of `U1` is not
properly calculated so the result is not correct. This is now
fixed.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-08 10:28:29-05:00,18000,2018-11-21 22:51:00-05:00,18000,True,False,['scattering1d.py'],['390215926b0292b6c07f8ca7f35c05f3c6492010'],1,2,3,1,0.0,0.0,0.0
e1b5ee7dda38526a2282199fb0a5b9bc054181a0,"ENH Remove extra arguments from 1D `forward()`

Instead of two ways to specify the scattering arguments
(`max_order`, `vectorize`, and so on), either through arguments to
`forward` or `set_default_args`, we now only have one,
`set_default_args`. This makes things simpler, more predictable,
and easier to maintain.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-08 10:35:31-05:00,18000,2018-11-21 22:51:01-05:00,18000,True,False,"['scattering1d.py', 'test_scattering1d.py']",['7167619d5e1332cb4cef476e5a39f97081315d92'],5,6,11,2,0.0,0.0,1.0
be46765d703b0fe530d68e158234f191edeb49b1,"MAINT Remove `_get_arguments` in 1D

Due to c98063, this method is no longer necessary.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-08 10:38:26-05:00,18000,2018-11-21 22:51:01-05:00,18000,True,False,['scattering1d.py'],['e1b5ee7dda38526a2282199fb0a5b9bc054181a0'],12,4,16,1,0.0,0.0,1.0
02f53d727e31c24f08f6b682f00d8d73e022de58,"ENH Replace `set_default_args` with setters in 1D

This lets us control the various arguments (`max_order`,
`average`, and so on) invidually, without setting the others.
These functions also double as getters, so we can query the values
easily.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-08 10:47:01-05:00,18000,2018-11-21 22:51:02-05:00,18000,True,False,"['scattering1d.py', 'test_scattering1d.py']",['be46765d703b0fe530d68e158234f191edeb49b1'],41,31,72,2,1.0,1.0,1.0
9bef2c030b42b582b059ca610e9a4bc832953e05,"MAINT Rename `default_args` to `args` in 1D

Since these are no longer ""default"" arguments to `forward()`
(due to c98063), a more appropriate name is simply `args`.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-08 10:49:00-05:00,18000,2018-11-21 22:51:02-05:00,18000,True,False,['scattering1d.py'],['02f53d727e31c24f08f6b682f00d8d73e022de58'],11,11,22,1,,,
4f4bcb7ba9f1c97d1406aff88bfda7385951d18c,DOC Document `Scattering1D` class,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-10 01:28:15-05:00,18000,2018-11-21 22:51:02-05:00,18000,True,False,['scattering1d.py'],['9bef2c030b42b582b059ca610e9a4bc832953e05'],155,316,471,1,,,
f8b15203a2e9ded86c57cae62cb3bb1537415e5f,"ENH Replace setters in 1D code with attributes

Instead of calling a method to set parameters such as `max_order`,
`vectorize`, and so on, these are now set directly in the object
as attributes.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-16 16:44:09-05:00,18000,2018-11-21 22:51:03-05:00,18000,True,False,"['scattering1d.py', 'test_scattering1d.py']",['4f4bcb7ba9f1c97d1406aff88bfda7385951d18c'],109,29,138,2,0.2,0.0,0.0
6a52c578d780810232813d30f37877230d85e77a,DOC Escape backslashes in 1D docstrings,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-17 17:29:23-05:00,18000,2018-11-21 22:51:03-05:00,18000,True,False,['scattering1d.py'],['f8b15203a2e9ded86c57cae62cb3bb1537415e5f'],3,3,6,1,,,
b978ce63c77fa10fe422a59f47f2ae8bd3cb5ef4,"DOC, ENH explaining how to build the doc in the README.md + adding the corresponding dependencies (#136)

* fix?

* compute_speed

* adding requiremenets_optional.txt

* adding requiremenets_optional.txt

* improving README.md

* improving README.md

* improving README.md

* improving README.md",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2018-11-18 00:38:01+01:00,-3600,2018-11-21 22:51:04-05:00,18000,True,False,"['README.md', 'requirements.txt', 'requirements_optional.txt', 'requirements_optional_cuda.txt']",['6a52c578d780810232813d30f37877230d85e77a'],4,33,37,4,,,
4f91cb1bfab978c05a30de8a70e36426aaa19df5,DOC Adapt 3D `compute_speed.py` for gallery,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-05 17:09:48-05:00,18000,2018-11-21 22:51:04-05:00,18000,True,False,['compute_speed.py'],['b978ce63c77fa10fe422a59f47f2ae8bd3cb5ef4'],42,98,140,1,,,
937fb1761200ce64c8d5ec0566a45e17251af824,"ENH Fix escaped backslashes in 3D code

Suppresses warnings due to invalid escape sequences.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-17 22:52:00-05:00,18000,2018-11-21 22:51:05-05:00,18000,True,False,['scattering3d.py'],['4f91cb1bfab978c05a30de8a70e36426aaa19df5'],4,4,8,1,,,
d51dc3dc83dc78867e245a7fccca1a715ee5c47c,"DOC a little cleaning and rearrangement of the docs (#138)

put text into the landing page, shortens the TOC tree depth, and makes the autodoc ignore a bunch of API things",eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-11-17 20:19:58-08:00,28800,2018-11-21 22:51:05-05:00,18000,True,False,"['codereference.rst', 'conf.py', 'index.rst', 'quickstart.rst', 'userguide.rst']",['937fb1761200ce64c8d5ec0566a45e17251af824'],32,56,88,5,,,
323c48ce78c00bc01c7d7b44d5c8a958e32fda8f,"REF Migrate name from `scattering` to `kymatio` (#140)

* REF rename code folder from scattering to kymatio

* REF found and replaced all instances of 'from scattering' with 'from kymatio'

* REF replaced all occurences of 'import scattering' with 'import kymatio'

* REF changed all import kymatio that didn't start at the beginning of the line

* REF change to documentation specs",eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-11-17 20:31:31-08:00,28800,2018-11-21 22:51:06-05:00,18000,True,False,"['README.md', 'codereference.rst', 'conf.py', 'quickstart.rst', 'userguide.rst', 'compute_speed.py', 'plot_classif.py', 'plot_filters.py', 'plot_real_signal.py', 'plot_synthetic.py', 'cifar.py', 'cifar_resnet.py', 'compute_speed.py', 'mnist.py', 'plot_filters.py', 'regularized_inverse_scattering_MNIST.py', 'compute_speed.py', 'scattering3d_qm7.py', '__init__.py', 'caching.py', 'datasets.py', '__init__.py', '__init__.py', 'backend_skcuda.py', 'backend_torch.py', 'filter_bank.py', 'scattering1d.py', 'test_data_1d.pt', 'test_filters.py', 'test_scattering1d.py', 'test_utils.py', 'utils.py', '__init__.py', '__init__.py', 'backend_skcuda.py', 'backend_torch.py', 'filter_bank.py', 'scattering2d.py', 'test_data_2d.pt', 'test_scattering2d.py', 'utils.py', '__init__.py', '__init__.py', 'backend_torch.py', 'filter_bank.py', 'scattering3d.py', 'test_data_3d.pt', 'test_scattering3d.py', 'utils.py']",['d51dc3dc83dc78867e245a7fccca1a715ee5c47c'],65,65,130,49,,,
3512ee70444a6183c617cabc3aa51db3ffce03df,"DOC Remove `examples/README.txt`

Not needed for gallery generation (only the subfolders need this
file).",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-18 00:07:47-05:00,18000,2018-11-21 22:51:07-05:00,18000,True,False,['README.txt'],['323c48ce78c00bc01c7d7b44d5c8a958e32fda8f'],4,0,4,1,,,
ffa20537439884f068f17e3cfeeb21a7b27915b9,DOC Fix titles and intros to galleries,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-18 00:08:33-05:00,18000,2018-11-21 22:51:07-05:00,18000,True,False,"['README.txt', 'README.txt', 'README.txt']",['3512ee70444a6183c617cabc3aa51db3ffce03df'],9,12,21,3,,,
31b194d7ff38029ef177de8344ba8e84bc0a2d8a,DOC Fix titles for individual gallery scripts,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-18 00:08:48-05:00,18000,2018-11-21 22:51:08-05:00,18000,True,False,"['plot_classif.py', 'plot_filters.py', 'plot_real_signal.py', 'plot_synthetic.py', 'cifar.py', 'cifar_resnet.py', 'compute_speed.py', 'mnist.py', 'plot_filters.py', 'regularized_inverse_scattering_MNIST.py']",['ffa20537439884f068f17e3cfeeb21a7b27915b9'],15,18,33,10,,,
847f2db1ca2f5b71f2ef55f9fd4d3fcef251d591,"FIX name change in setup.py (#143)

Is necessary for the package to install to the right name

* FIX name change in setup.py

* FIX authors

* FIX authors 2",eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-11-17 21:40:51-08:00,28800,2018-11-21 22:51:08-05:00,18000,True,False,['setup.py'],['31b194d7ff38029ef177de8344ba8e84bc0a2d8a'],5,6,11,1,,,
b750245a7f054994bf487edd202d4087b7af5435,"MAINT add travis badge to README (#148)

NB: this is the travis CI of kymatio/kymatio, not eickenberg/kymatio",Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-18 01:44:10-05:00,18000,2018-11-21 22:51:09-05:00,18000,True,False,['README.md'],['847f2db1ca2f5b71f2ef55f9fd4d3fcef251d591'],0,2,2,1,,,
be8962eb2ab9acec0aedb93c49e87b61e72d5724,vincent.lostanlen@ens.fr -> @nyu.edu [ci skip],Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-18 02:04:33-05:00,18000,2018-11-21 22:51:09-05:00,18000,True,False,['setup.py'],['b750245a7f054994bf487edd202d4087b7af5435'],1,1,2,1,,,
97df6e7c6a4abeb34f09b4596e80924fd61ec64b,remove authors from README.md,Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-18 01:33:25-05:00,18000,2018-11-21 22:51:10-05:00,18000,True,False,['README.md'],['be8962eb2ab9acec0aedb93c49e87b61e72d5724'],4,0,4,1,,,
bd51d84b5860314d18996451dd16693398c34e14,start version.py with 0.1.0-alpha,Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-18 01:30:09-05:00,18000,2018-11-21 22:51:10-05:00,18000,True,False,['version.py'],['97df6e7c6a4abeb34f09b4596e80924fd61ec64b'],0,2,2,1,,,
7943cec6c83511d29cfdc6300cc01df24cee18c6,"MAINT add python 3.6 badge to README (#149)

this will eventually be a link to PyPI",Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-18 09:52:34-05:00,18000,2018-11-21 22:51:10-05:00,18000,True,False,['README.md'],['bd51d84b5860314d18996451dd16693398c34e14'],0,1,1,1,,,
0ae8c9287ef855b8ba37dbda1f132a7aa3b52db4,"DOC General fixing-up of docs (#144)

* DOC Formatting and style for landing page

* DOC Update installation doc",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-18 12:00:25-05:00,18000,2018-11-21 22:51:11-05:00,18000,True,False,"['index.rst', 'installation.rst', 'quickstart.rst']",['7943cec6c83511d29cfdc6300cc01df24cee18c6'],26,30,56,3,,,
f4ece96d21ec73c12f77b3a816d343eedf4bf1d9,"MAINT write on CPU dependencies

and installation instructions",Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-18 12:50:27-05:00,18000,2018-11-21 22:51:11-05:00,18000,True,False,['README.md'],['0ae8c9287ef855b8ba37dbda1f132a7aa3b52db4'],7,23,30,1,,,
3e40a16767d5973120ff93d917563a8b8d0c10bf,MAINT link to website in readme,Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-18 12:53:25-05:00,18000,2018-11-21 22:51:12-05:00,18000,True,False,['README.md'],['f4ece96d21ec73c12f77b3a816d343eedf4bf1d9'],0,2,2,1,,,
39f9362b14938e5d25fd6973133029ffc3486196,https:// in README [ci skip],Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-18 12:53:54-05:00,18000,2018-11-21 22:51:12-05:00,18000,True,False,['README.md'],['3e40a16767d5973120ff93d917563a8b8d0c10bf'],1,1,2,1,,,
6be39a04fedaf1695e49a8f48af57e2005b0206f,MAINT remove benchmark and usage in readme,Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-18 12:55:47-05:00,18000,2018-11-21 22:51:12-05:00,18000,True,False,['README.md'],['39f9362b14938e5d25fd6973133029ffc3486196'],22,0,22,1,,,
e89a7e6d88186cff904b9a821bb4f9c10c87f0c8,ENH Ignore all .egg-info directories,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-18 17:09:05-05:00,18000,2018-11-21 22:51:13-05:00,18000,True,False,['.gitignore'],['6be39a04fedaf1695e49a8f48af57e2005b0206f'],2,1,3,1,,,
ac9312d0aa88cea84d35842548d486fefcb11000,"ENH Fix `requirements_optional_cuda.txt` file

The package name for `skcuda` is `scikit-cuda`, so we need to have
that here.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-18 23:11:30-05:00,18000,2018-11-21 22:51:13-05:00,18000,True,False,['requirements_optional_cuda.txt'],['e89a7e6d88186cff904b9a821bb4f9c10c87f0c8'],2,2,4,1,,,
4f1e7f2f936bf5f3e6d1da8d8be843dc3273fe67,DOC Add narrative comments to 1d `plot_filters.py`,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-18 16:24:42-05:00,18000,2018-11-21 22:51:14-05:00,18000,True,False,['plot_filters.py'],['ac9312d0aa88cea84d35842548d486fefcb11000'],25,92,117,1,,,
a62a3ba7b570dfcb788f602610bf600f48cd31cf,DOC Address comments by @lostanlen,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-19 09:52:29-05:00,18000,2018-11-21 22:51:14-05:00,18000,True,False,['plot_filters.py'],['4f1e7f2f936bf5f3e6d1da8d8be843dc3273fe67'],11,11,22,1,,,
d95b5dea3298e11efce45432d910ec609990b362,"MAINT Add travis yml (#165)

* ENH add .travis.yml for continuous integration

* dep1 dep2 -> actual dependency names

* Update .travis.yml

* Update .travis.yml

* Update .travis.yml

* Update .travis.yml

* Update .travis.yml

* Update .travis.yml",eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-11-19 14:10:38-08:00,28800,2018-11-21 22:51:14-05:00,18000,True,False,['.travis.yml'],['a62a3ba7b570dfcb788f602610bf600f48cd31cf'],0,36,36,1,,,
d70a101cfa46f93b50cbba70efe780fba957e3e9,"FIX Fix error when calling `unique` on CUDA tensor (#163)

To get the number of classes in `plot_classif.py`, we need to
transfer the Tensor to CPU memory before calling `unique`, since
it is not implemented for CUDA Tensors.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-19 21:48:34-05:00,18000,2018-11-21 22:51:15-05:00,18000,True,False,['plot_classif.py'],['d95b5dea3298e11efce45432d910ec609990b362'],1,1,2,1,,,
cc7a66b06cfa2d84c768ad0a1fedfeaf9e0f0ff3,"MAINT Replace some environment variables and config file names (#164)

* ENH Update backend env vars and config files

These are now `KYMATIO_BACKEND_*` and the config file is in
`~/kymatio/kymatio.cfg`.

* ENH Propagate Kymatio to caching env var and directory

* ENH Propagate Kymatio to datasets env var and directory",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-19 21:50:30-05:00,18000,2018-11-21 22:51:15-05:00,18000,True,False,"['caching.py', 'datasets.py', '__init__.py', '__init__.py', 'test_scattering2d.py', '__init__.py']",['d70a101cfa46f93b50cbba70efe780fba957e3e9'],27,27,54,6,,,
e6dcaf3ba63d53af821212f442a679cd7b60f9be,"ENH Include CUDA check in 1D `compute_speed.py`

If we don't have a GPU, don't try to use a CUDA implementation.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-18 17:02:09-05:00,18000,2018-11-21 22:51:16-05:00,18000,True,False,['compute_speed.py'],['cc7a66b06cfa2d84c768ad0a1fedfeaf9e0f0ff3'],3,6,9,1,,,
e6c5536d7dd77c11b31a27feb8e1406c11f6c167,"DOC+MAINT Update the user guide

Edit the user guide narrative. Update benchmarks.",eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-11-18 09:02:39-08:00,28800,2018-11-21 22:51:16-05:00,18000,True,False,"['bibtex.bib', 'developerguide.rst', 'userguide.rst']",['e6dcaf3ba63d53af821212f442a679cd7b60f9be'],95,197,292,3,,,
7a3b645f6b99766cac759ffc25e8832ae9b68a1a,"DOC Edit README

Small style changes, formatting.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-18 23:30:04-05:00,18000,2018-11-21 22:51:17-05:00,18000,True,False,['README.md'],['e6c5536d7dd77c11b31a27feb8e1406c11f6c167'],16,18,34,1,,,
b683216173a6b715fa88b49989d05b37293d78c4,DOC Remove contributions section from README,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-19 11:30:01-05:00,18000,2018-11-21 22:51:17-05:00,18000,True,False,['README.md'],['7a3b645f6b99766cac759ffc25e8832ae9b68a1a'],7,0,7,1,,,
1de6fa3df7a469b241fa9718ab9011734f42d180,DOC Fix intro sentence in README,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-19 11:49:04-05:00,18000,2018-11-21 22:51:17-05:00,18000,True,False,['README.md'],['b683216173a6b715fa88b49989d05b37293d78c4'],1,1,2,1,,,
e16e699a21e51d8e2d70975156f53561411846c2,"DOC Fix capitalization of ""Kymatio"" in README",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-19 11:49:41-05:00,18000,2018-11-21 22:51:18-05:00,18000,True,False,['README.md'],['1de6fa3df7a469b241fa9718ab9011734f42d180'],5,5,10,1,,,
395055ff608f87da85d81e79f4618b54cd4f37e9,"DOC Remove Anaconda requirement in README

Instead, add strong recommendation to use it.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-19 22:11:20-05:00,18000,2018-11-21 22:51:18-05:00,18000,True,False,['README.md'],['e16e699a21e51d8e2d70975156f53561411846c2'],2,2,4,1,,,
ee8980d2837d90c816c75f7336bffa15d2239908,"DOC+MAINT Add `CODE_OF_CONDUCT`

Adapted from Contributor Covenant v1.4 with @eickenberg as the
point of contact.",Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-19 18:41:17-05:00,18000,2018-11-21 22:51:19-05:00,18000,True,False,['CODE_OF_CONDUCT.md'],['395055ff608f87da85d81e79f4618b54cd4f37e9'],0,76,76,1,,,
b85f3baed0a2c9f65f1aab687d483348f64e53ce,"MAINT update setup_info in setup.py (#171)

* MAINT Update `setup_info` in `setup.py`

A few changes:

* New URL and description
* Parse version from `version.py`
* Unicode author names
* Set `download_url` to the GitHub repo
* Add `classifiers`
* `long_description` poured from `README.md`
* `install_requires` parsed from `requirements.txt`
* SPDX short identifier for the license

* MAINT Update e-mails in `setup.py`

* ENH define REQUIREMENTS in setup.py

use f.read().split('\n') rather than a CSV reader
thanks to @eickenberg for the advice

* MAINT define DISTNAME constant setup.py

this mirrors scikit-learn
NB: Kymatio is capitalized in the DISTNAME

* ENH parse version.py with importlib

the imp module is deprecated in Python 3
we use importlib instead
this recipe is adapted from
https://docs.python.org/3/library/importlib.html#importing-a-source-file-directly

* MAINT strip out gh badges from LONG_DESCRIPTION",Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2018-11-20 13:28:31-05:00,18000,2018-11-21 22:51:19-05:00,18000,True,False,['setup.py'],['ee8980d2837d90c816c75f7336bffa15d2239908'],22,60,82,1,,,
8f86844fc84c762afbf87146499626349418231e,"BUG Avoid spurious newlines in PyPI README

In #171, I wrote a parser that strips out the badges of the PyPI
README, but I forgot to split by line before that. This commit
fixes the previous PR in that it correctly strips out the badges
and avoids the unwanted newlines after every word.",Vincent Lostanlen,vincent.lostanlen@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-11-20 15:47:20-05:00,18000,2018-11-21 22:51:20-05:00,18000,True,False,['setup.py'],['b85f3baed0a2c9f65f1aab687d483348f64e53ce'],1,1,2,1,,,
75cb942fe32937178f5a790f256401d5c3f0dbc2,"MAINT bumping micro version because test.pypi.org

is making problems",eickenberg,eickenberg@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2018-11-20 18:24:35-08:00,28800,2018-11-21 22:51:20-05:00,18000,True,False,['version.py'],['8f86844fc84c762afbf87146499626349418231e'],2,2,4,1,,,
d7ada95510060d53865c0c468c11a03cb9b20bb3,"MAINT Fix `scattering` in code (#181)

Should have `scattering`, not `scat`.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-21 10:59:19-05:00,18000,2018-11-21 22:51:21-05:00,18000,True,False,"['mnist.py', 'scattering1d.py', 'test_scattering3d.py']",['75cb942fe32937178f5a790f256401d5c3f0dbc2'],14,14,28,3,,,
9d9d3b90d889ce9f1c77ed01ca4d5750fc7030f2,"MAINT define __version__

Closes #182
from .version import version as __version__ in __init__.py allows kymatio.__version__ to be equal to kymatio.version.version
This is compliant with PEP 396
I'm taking the opportunity of this PR to reorder 1D, 2D, and 3D imports",Vincent Lostanlen,vincent.lostanlen@gmail.com,eickenberg,eickenberg@users.noreply.github.com,2018-11-21 23:37:52-05:00,18000,2018-11-22 15:31:10-08:00,28800,True,False,['__init__.py'],['d7ada95510060d53865c0c468c11a03cb9b20bb3'],10,10,20,1,,,
8c429bb6a2661b881d9024e29e5d04cc62f310ad,ENH Removing the warning (#184),Edouard Oyallon,edouard.oyallon@centralesupelec.fr,GitHub,noreply@github.com,2018-11-23 18:58:25+01:00,-3600,2018-11-23 18:58:25+01:00,-3600,True,False,['mnist.py'],['9d9d3b90d889ce9f1c77ed01ca4d5750fc7030f2'],1,1,2,1,,,
084e9f23a563590baedbf6d2b9b50f10f7e15a41,"ENH fix imports of warnings library across 1d, 2d, and 3d (#187)

closes #177

* ENH removing unused library imports in scattering1d and scattering2d
* ENH adding a library import in scatterin3d, removing 2 unused",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Vincent Lostanlen,vincent.lostanlen@nyu.edu,2018-11-23 19:02:27+01:00,-3600,2018-11-23 13:02:27-05:00,18000,True,False,"['scattering1d.py', 'scattering2d.py', 'backend_torch.py']",['8c429bb6a2661b881d9024e29e5d04cc62f310ad'],4,1,5,3,,,
cbb76a7fa0c3c5ddaeadc01b66e8b0e3e4f523a5,FIX __all__ is correct both for 1D and 2D,edouardoyallon,edouard.oyallon@ens.fr,Vincent Lostanlen,vincent.lostanlen@nyu.edu,2018-11-23 18:48:27+01:00,-3600,2018-11-23 13:14:34-05:00,18000,True,False,"['scattering1d.py', 'scattering2d.py']",['084e9f23a563590baedbf6d2b9b50f10f7e15a41'],1,3,4,2,,,
f4d97fe16265d7d17d44a6e1048d7d9d00d4a0dd,DOC modifying website url+adding a note for imagenet (#191),Edouard Oyallon,edouard.oyallon@centralesupelec.fr,eickenberg,eickenberg@users.noreply.github.com,2018-11-24 21:39:30+01:00,-3600,2018-11-24 12:39:30-08:00,28800,True,False,['README.md'],['cbb76a7fa0c3c5ddaeadc01b66e8b0e3e4f523a5'],1,7,8,1,,,
63c7ae4259aec904ff0df342982b2b51c2cbe435,"DOC update readme, rephrase Imagenet comment",eickenberg,eickenberg@users.noreply.github.com,GitHub,noreply@github.com,2018-11-24 13:21:10-08:00,28800,2018-11-24 13:21:10-08:00,28800,True,False,['README.md'],['f4d97fe16265d7d17d44a6e1048d7d9d00d4a0dd'],3,1,4,1,,,
4fb5218014f9ccafa675fff6661bf42ad9a1be12,DOC fixing phrasing,Eugene Belilovsky,eugenium@gmail.com,Michael Eickenberg,michael.eickenberg@gmail.com,2018-11-24 16:29:59-05:00,18000,2018-11-24 13:36:35-08:00,28800,True,False,['README.md'],['63c7ae4259aec904ff0df342982b2b51c2cbe435'],2,2,4,1,,,
e22b89f8f67e26200bdec9ea1c3c5e3c1f611b38,"FIX removing ignore-pattern files from sphinx' conf.py (#189)

* small edit of qm7.py + removing the ignore patterns from the sphinx config file

* typo

* Update scattering3d_qm7.py",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,eickenberg,eickenberg@users.noreply.github.com,2018-11-26 02:30:27+01:00,-3600,2018-11-25 17:30:27-08:00,28800,True,False,"['conf.py', 'scattering3d_qm7.py']",['4fb5218014f9ccafa675fff6661bf42ad9a1be12'],1,7,8,2,,,
44e510ee7d49fe9e9126b2e1ecbd916a18450e84,"FIX fixing the 2d filters displaying from the sphinx gallery (#185)

* FIX fixing the 2d filters displaying from the sphinx gallery

* adding a library, removing 2 unused

* little fix

* minor modif",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,eickenberg,eickenberg@users.noreply.github.com,2018-11-26 02:32:19+01:00,-3600,2018-11-25 17:32:19-08:00,28800,True,False,['plot_filters.py'],['e22b89f8f67e26200bdec9ea1c3c5e3c1f611b38'],26,27,53,1,,,
7c8e098fbd8deda1e42bcfca567a096d850abe0a,"MAINT set DISTNAME to lowercase kymatio

The name of the library is Kymatio while the name of the module is kymatio
That said, virtually all other libraries which have fancy capitalization in their names use the lowercase capitalization in their PyPI and conda distributions.

ex: SciPy is `scipy`, NumPy is `numpy`, TensorFlow is `tensorflow`, PyTorch is `torch`, Pandas is `pandas`, BLAS is `blas`, IPython is `ipython`, etc. The list goes on.
The only exceptions I'm aware of are Keras (`Keras`), Theano (`Theano`), PySoundFile (`PySoundFile`), and Sphinx (`Sphinx`).
The reason why I'm proposing this change is that otherwise it might lead to users trying to do `import Kymatio` whereas the correct capitalization is `import kymatio`. So it's good to hint at the correct capitalization in the PyPI distribution.",Vincent Lostanlen,vincent.lostanlen@nyu.edu,eickenberg,eickenberg@users.noreply.github.com,2018-11-25 20:27:30-05:00,18000,2018-11-25 17:37:04-08:00,28800,True,False,['setup.py'],['44e510ee7d49fe9e9126b2e1ecbd916a18450e84'],1,1,2,1,,,
08c1ef3abb4d74b2c9305c53636bf6404d66e310,"MAINT set version to 0.1.0-dev [ci skip]

Semver 2.0.0 compliant
https://semver.org/spec/v2.0.0.html

PEP 0440 compliant
https://www.python.org/dev/peps/pep-0440/",Vincent Lostanlen,vincent.lostanlen@gmail.com,eickenberg,eickenberg@users.noreply.github.com,2018-11-24 23:22:01-05:00,18000,2018-11-25 17:43:32-08:00,28800,True,False,['version.py'],['7c8e098fbd8deda1e42bcfca567a096d850abe0a'],2,2,4,1,,,
92f4aef6cadd205d6e546f5156627de86227c324,"ENH Add stub skcuda backend for 3D

Allows us to import the 3D backend when `KYMATIO_BACKEND` is equal to
`skcuda` without throwing an error. However, if anyone tries to use
the backend, it raises a `NotImplementedError`. The `Scattering3D` class
has also been updated to provide a more informative error if the user
tries to create an object when this backend is enabled.

For now, the tests will simply issue a warning under these
circumstances.",Vincent Lostanlen,vincent.lostanlen@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-11-24 22:57:53-05:00,18000,2018-11-26 21:57:38-05:00,18000,True,False,"['__init__.py', 'backend_skcuda.py', 'scattering3d.py', 'test_scattering3d.py']",['08c1ef3abb4d74b2c9305c53636bf6404d66e310'],1,76,77,4,0.6,1.0,0.92
1e513b471a903d84f83ed80bca6f9498614a50f7,ENH Remove old license file,Joakim Andén,janden@flatironinstitute.org,GitHub,noreply@github.com,2018-11-26 22:04:17-05:00,18000,2018-11-26 22:04:17-05:00,18000,True,False,['licence.txt'],['92f4aef6cadd205d6e546f5156627de86227c324'],24,0,24,1,,,
feb4a0bf708234fc7120110739b63713f73f19aa,"ENH Add new license

This one should hopefully be automatically recognized by GitHub.

In addition, the authors are now ""the Kymatio developers.""",Joakim Andén,janden@flatironinstitute.org,GitHub,noreply@github.com,2018-11-26 22:06:18-05:00,18000,2018-11-26 22:06:18-05:00,18000,True,False,['LICENSE.md'],['1e513b471a903d84f83ed80bca6f9498614a50f7'],0,29,29,1,,,
a20b50b6adbcaf3806e4432372ad4fbc8fdd8aa3,"API Make `J` first positional argument

This change is API-breaking and irreversible insofar as it cannot be
deprecated. It is a step in the direction of making the input shape
optional and also improves consistency across modules.

Fixes #194.",Vincent Lostanlen,vincent.lostanlen@gmail.com,eickenberg,eickenberg@users.noreply.github.com,2018-11-24 19:07:17-05:00,18000,2018-11-26 20:58:40-08:00,28800,True,False,"['quickstart.rst', 'userguide.rst', 'compute_speed.py', 'plot_classif.py', 'plot_real_signal.py', 'plot_synthetic.py', 'cifar.py', 'cifar_resnet.py', 'compute_speed.py', 'mnist.py', 'compute_speed.py', 'scattering3d_qm7.py', 'scattering1d.py', 'test_scattering1d.py', 'scattering2d.py', 'test_scattering2d.py', 'scattering3d.py', 'test_scattering3d.py']",['feb4a0bf708234fc7120110739b63713f73f19aa'],45,45,90,18,,,
2dc32a6b36e77c9897a155ecdc3b24187f5e913c,"REF Make `Scattering*D` take `shape` argument

Instead of having multiple arguments (`T`, `M, N`, or `M, N, O`), all
`Scattering*D` classes are now instantiated with a `shape` argument,
which is a tuple (although can be a scalar integer in 1D) that
specifies the shape of (last dimensions of) the input.",Michael Eickenberg,michael.eickenberg@gmail.com,eickenberg,eickenberg@users.noreply.github.com,2018-11-25 19:15:49-08:00,28800,2018-11-26 20:58:40-08:00,28800,True,False,"['cifar.py', 'cifar_resnet.py', 'compute_speed.py', 'mnist.py', 'regularized_inverse_scattering_MNIST.py', 'compute_speed.py', 'scattering3d_qm7.py', 'scattering1d.py', 'test_scattering1d.py', 'scattering2d.py', 'test_scattering2d.py', 'scattering3d.py', 'test_scattering3d.py']",['a20b50b6adbcaf3806e4432372ad4fbc8fdd8aa3'],35,69,104,13,0.6086956521739131,1.0,1.0
69ba40952cf397ca364adc02712e721ad683d197,DOC+FIX quickstart scattering shape,eickenberg,eickenberg@users.noreply.github.com,Vincent Lostanlen,vincent.lostanlen@nyu.edu,2018-11-26 21:00:02-08:00,28800,2018-11-27 00:08:54-05:00,18000,True,False,['quickstart.rst'],['2dc32a6b36e77c9897a155ecdc3b24187f5e913c'],1,1,2,1,,,
e6ef9a2e741d3427421bf159964972a7810a859d,DOC+FIX userguide scattering shape,eickenberg,eickenberg@users.noreply.github.com,Vincent Lostanlen,vincent.lostanlen@nyu.edu,2018-11-26 21:01:45-08:00,28800,2018-11-27 00:10:41-05:00,18000,True,False,['userguide.rst'],['69ba40952cf397ca364adc02712e721ad683d197'],1,1,2,1,,,
afe9bf9590028d4c5124a0101e1cbcd1d4d3ca8c,"FIX disable caching of 2-d filter banks (#203)

closes #175
the function filter_bank_real no longer exists
filter_bank does what filter_bank_real used to do and does not cache the filters
+ some docstring and PEP8 improvements",Vincent Lostanlen,vincent.lostanlen@nyu.edu,GitHub,noreply@github.com,2018-11-28 12:03:33-05:00,18000,2018-11-28 12:03:33-05:00,18000,True,False,['filter_bank.py'],['e6ef9a2e741d3427421bf159964972a7810a859d'],68,14,82,1,1.0,0.0,1.0
8733a4bb612616c9df7225380af2abacbb23dd19,"COSM Fix style issues in `scattering1d.py`

Specifically, address `pycodestyle` and `pyflakes` comments, alphabetize
imports, put `Scattering1D` class at the top of the file, fix maths in
docstrings, make ""Andén"" Unicode.",Vincent Lostanlen,vincent.lostanlen@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-11-27 23:13:16-05:00,18000,2018-11-28 23:32:02-05:00,18000,True,False,['scattering1d.py'],['afe9bf9590028d4c5124a0101e1cbcd1d4d3ca8c'],111,121,232,1,0.0,0.5,0.5
36bfb11f29c0e7a3cddfc1eedc23ba84e9c17ea8,"REF `Scattering3D` now returns tensor, not tuple (#210)

This harmonizes the output of `Scattering3D` with that of `Scattering1D`
and `Scattering2D`.

Fixes #158.",Vincent Lostanlen,vincent.lostanlen@nyu.edu,eickenberg,eickenberg@users.noreply.github.com,2018-11-29 14:22:15-05:00,18000,2018-11-29 11:22:15-08:00,28800,True,False,"['scattering3d_qm7.py', 'scattering3d.py', 'test_scattering3d.py']",['8733a4bb612616c9df7225380af2abacbb23dd19'],40,31,71,3,1.0,0.0,0.3333333333333333
5dba4671afd3c1b6e1a43339d8ba0126a1b4203f,"REF bool order2 -> int max_order in Scattering2D (#212)

* REF bool order2 -> int max_order in Scattering2D

a contribution to #196
enabling the development of third-order scattering in the future
reviewed by @janden and @eickenberg 

the kwarg `orders` (list) can be added later.
here we do not have one because we only officially support `orders=range(0, 1+max_order)`
in the future, `max_order` will be stored as `_max_order` (pseudo-immutable) in the object
but `orders` would be stored as `orders` because it is mutable, as any subset of `range(0, 1+max_order)`",Vincent Lostanlen,vincent.lostanlen@nyu.edu,GitHub,noreply@github.com,2018-11-29 17:50:05-05:00,18000,2018-11-29 17:50:05-05:00,18000,True,False,"['cifar.py', 'cifar_resnet.py', 'mnist.py', 'scattering1d.py', 'scattering2d.py']",['36bfb11f29c0e7a3cddfc1eedc23ba84e9c17ea8'],10,15,25,5,,,
cd70f04b464672bb583dea9003877aaf52e69d5b,"REF Make 1D input shapes `(B, T)`, not `(B, 1, T)` (#215)

Previously, inputs to the scattering transform had to have a
channel axis that was always of dimension one. This is no longer
the case. An input of shape `(B, T)` is converted to a scattering
output of shape `(B, C, T1)`, where `C` is the number of scattering
coefficients and `T1` is the subsampled length of the signal.",Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2018-11-29 19:45:12-05:00,18000,2018-11-29 16:45:12-08:00,28800,True,False,"['compute_speed.py', 'plot_classif.py', 'plot_real_signal.py', 'plot_synthetic.py', 'scattering1d.py', 'test_scattering1d.py']",['5dba4671afd3c1b6e1a43339d8ba0126a1b4203f'],23,24,47,6,1.0,0.0,0.0
0cce62d44a0199af5e79fca7e7583ad1793d852e,"FIX Make `Scattering3D` work for `J != 2`

Fixes #216 by concatenating orders along scale axis instead of spatial
axis. Also adds a test to catch these larger scales (J) in 3D and fixes
the sample scattering test to account for this new layout. This is
because the ordering new ordering doesn't correspond to the reference
output stored in the `test_data_3d.pt` file, so we need to rearrange the
output of `Scattering3D` to correspond and make the test pass.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-11-29 22:18:12-05:00,18000,2018-11-30 14:12:19-05:00,18000,True,False,"['scattering3d.py', 'test_scattering3d.py']",['cd70f04b464672bb583dea9003877aaf52e69d5b'],1,31,32,2,0.65,1.0,1.0
0797b27d9a7f2d700b48591f732783e55e2d3051,"FIX Prevent 3D from crashing on CPU-only systems

If CUDA is not available, we have to use `x.is_cuda` instead of
`isinstance(x, torch.cuda.FloatTensor)`, since the latter crashes
on CPU-only systems. Also add tests for non-integral,
non-covariant 3D scattering. Previous tests all used 
`method='integral'` and `rotation_covariant=True`, which misses
some potential bugs (including this one).

Fixes #122.",Joakim Andén,janden@flatironinstitute.org,GitHub,noreply@github.com,2018-11-30 14:51:35-05:00,18000,2018-11-30 14:51:35-05:00,18000,True,False,"['scattering3d.py', 'test_scattering3d.py']",['0cce62d44a0199af5e79fca7e7583ad1793d852e'],2,25,27,2,0.0,1.0,1.0
c12b8e20eac8b804673f21ee5f1c23661c566e02,"ENH , 1D - Make transforms batch shape agnostic

* ENH Make 1D batch shape agnostic

That is, allow any shape in the non-scattering dimensions (that is, all
up until the last one) and preserve that shape in the output Tensor.

* TST Add test for batch shape agnosticism in 1D

* REF Address @eickenberg's comments",Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2018-12-11 08:34:29-05:00,18000,2018-12-11 14:34:29+01:00,-3600,True,False,"['scattering1d.py', 'test_scattering1d.py']",['0797b27d9a7f2d700b48591f732783e55e2d3051'],3,59,62,2,0.0,0.1794871794871795,1.0
8f7d1d3cf2ca60650cf49d6f415acf458b7cc963,"FIX Prevent `np.sqrt` from issuing erroneous warnings (#225)

* FIX Suppress erroneous warnings for `np.sqrt`

When using the MKL NumPy implementation, the `sqrt` function sometimes
triggers a RuntimeWarning when large arrays are given as input. To work
around this, we introduce a wrapper `sqrt` function that suppresses the
warning but also checks for negative values and raises a warning in this
case.

Fixes #223.

* TST Add test for new `sqrt` function in 3D `utils.py`",Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2018-12-11 13:38:30-05:00,18000,2018-12-11 19:38:30+01:00,-3600,True,False,"['filter_bank.py', 'test_scattering3d.py', 'utils.py']",['c12b8e20eac8b804673f21ee5f1c23661c566e02'],4,61,65,3,1.0,1.0,1.0
e495161e037f04116019fd331e3f3dd37ccffbb7,"ENH Make transforms batch shape agnostic

* ENH Make 2D batch shape agnostic

Allow any shape in the non-scattering dimensions and preserve that shape
in the output.

* TST Add test for batch shape agosticism in 2D",Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2018-12-13 05:45:13-05:00,18000,2018-12-13 11:45:13+01:00,-3600,True,False,"['scattering2d.py', 'test_scattering2d.py']",['8f7d1d3cf2ca60650cf49d6f415acf458b7cc963'],2,50,52,2,0.0,0.8125,1.0
081616eaa546601d2eebfa2052e54ad0578613f4,"API Enable CPU/CUDA ""switch"" in `Scattering3D`

In other words, give the class the same `cpu()` and `cuda()` methods as
for the 1D and 2D classes. The difference here is that no filters are
actually transferred, it just changes an internal flag. This harmonizes
the interfaces, however, and allow us to potentially optimize things
down the road by moving certain filters onto the GPU when possible.",Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2018-12-11 16:56:34-05:00,18000,2018-12-13 14:23:06+00:00,0,True,False,"['scattering3d.py', 'test_scattering3d.py']",['e495161e037f04116019fd331e3f3dd37ccffbb7'],0,18,18,2,0.0,0.5384615384615384,0.9230769230769231
e2de76d1692023b950d4953c4b12c6c135949155,TST Add test for new CUDA/CPU functions in 3D,Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2018-12-11 16:58:18-05:00,18000,2018-12-13 14:23:06+00:00,0,True,False,['test_scattering3d.py'],['081616eaa546601d2eebfa2052e54ad0578613f4'],0,42,42,1,0.0,1.0,1.0
7c284733d41086278b1a42d5b4985d42666760cb,DOC Add documentation for 3D `cuda` and `cpu`,Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2018-12-12 12:01:06-05:00,18000,2018-12-13 14:23:06+00:00,0,True,False,['scattering3d.py'],['e2de76d1692023b950d4953c4b12c6c135949155'],0,8,8,1,,,
f1e599165e3ea97eef002eb42d53e32f6f39d706,"ENH Sphinx website (#190)

Lot's of improvements to the sphinx website

* trying several config

* minor modif

* Update index.rst

* on the fly

* adding logo+texext

* textexet will be installed

* adding dollars

* buttons

* adding analytics

* adding analytics

* pretty logo

* fonts + name

* mike fixes

* mike fixes

* mike fixes

* space before comma

* DOC fix latex in 3d docstring",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,eickenberg,eickenberg@users.noreply.github.com,2018-12-13 16:00:41+01:00,-3600,2018-12-13 15:00:41+00:00,0,True,False,"['kymatio.ico', 'kymatio.jpg', 'codereference.rst', 'conf.py', 'index.rst', 'quickstart.rst', 'scattering1d.py', 'scattering3d.py', 'requirements_optional.txt']",['7c284733d41086278b1a42d5b4985d42666760cb'],32,75,107,9,,,
408a074b950fcf0eb6f754329d1f641d3338e5a0,"API Change 3D flag from `order_2` to `max_order` (#229)

* API Change 3D flag from `order_2` to `max_order`

This makes the interface consistent with the 1D and 2D transforms,
which both have `max_order`.

* FIX docstring scattering3d",Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2018-12-13 10:05:45-05:00,18000,2018-12-13 15:05:45+00:00,0,True,False,"['scattering3d_qm7.py', 'scattering3d.py', 'test_scattering3d.py']",['f1e599165e3ea97eef002eb42d53e32f6f39d706'],16,16,32,3,,,
7d7b9eaa27aa15fd4adb9cffa0df5fb481e35d73,"ENH more comprehensive README

* init edit of the README

* strikeout paper

* adding a contributing file

* pre-update

* update installation instructions in README

+ add a spiel about the etymology and pronunciation of Kymatio

* update contriburing.md",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,GitHub,noreply@github.com,2018-12-14 10:04:29+01:00,-3600,2018-12-14 10:04:29+01:00,-3600,True,False,"['CONTRIBUTING.md', 'README.md']",['408a074b950fcf0eb6f754329d1f641d3338e5a0'],30,179,209,2,,,
278bc3b0dfa36226d8818809e54f80edf14643a1,"ENH implement skcuda backend for 3D

replace ! by . error messages to prevent user's frustration

check if input is complex before turning it to complex

remove skcuda_not_implemented error message

remove TODO comments

remove WIP comment",Louis Thiry,biboundai@homail.fr,eickenberg,eickenberg@users.noreply.github.com,2018-11-27 14:16:36+01:00,-3600,2018-12-14 15:27:54+00:00,0,True,False,"['compute_speed.py', 'backend_skcuda.py', 'scattering3d.py']",['7d7b9eaa27aa15fd4adb9cffa0df5fb481e35d73'],16,48,64,3,0.26666666666666666,0.26666666666666666,0.3333333333333333
6b25adbd3c250146213db3b962b1179e87d9332d,"TST Make all 3D tests loop over devices

In other words, if we have both CPU and GPU available, test both
instead of just CPU.",Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2018-11-28 22:42:02-05:00,18000,2018-12-14 15:27:54+00:00,0,True,False,['test_scattering3d.py'],['278bc3b0dfa36226d8818809e54f80edf14643a1'],8,17,25,1,0.0,0.0,1.0
45bc77266ba893c3ec65cc8661a1b66abe354671,"TST Enable skcuda backend in 3D tests

Instead of emitting a warning, we now detect the skcuda backend
and test its correctness, just like the torch backend.",Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2018-11-28 22:43:12-05:00,18000,2018-12-14 15:27:54+00:00,0,True,False,['test_scattering3d.py'],['6b25adbd3c250146213db3b962b1179e87d9332d'],41,17,58,1,0.6956521739130435,1.0,0.0
365a78517d0f9170746cf713a71088ac975477da,"ENH Make skcuda compatible with torch backend

In particular, `to_complex` should behave the same way, not taking into
account whether the input array ""looks"" complex already.",Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2018-12-12 17:02:37-05:00,18000,2018-12-14 15:27:54+00:00,0,True,False,['backend_skcuda.py'],['45bc77266ba893c3ec65cc8661a1b66abe354671'],2,0,2,1,0.0,0.0,0.0
152772ad894436d3ac05565ced460776cee924a2,TST Add tests for 3D backend,Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2018-12-12 17:04:23-05:00,18000,2018-12-14 15:27:54+00:00,0,True,False,['test_scattering3d.py'],['365a78517d0f9170746cf713a71088ac975477da'],0,98,98,1,0.1891891891891892,0.1891891891891892,1.0
f10bbed588f727ac22c287c27357df213ffd015a,"DOC reorganize README

* break down ""What makes Kymatio different"" into subsections

* rename ""important links"" to ""online resources"" and include in a documentation section.

* integrate the ""important note about large images"" into ""GPU acceleration""",Vincent Lostanlen,vincent.lostanlen@nyu.edu,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2018-12-14 11:17:32-05:00,18000,2018-12-14 17:17:32+01:00,-3600,True,False,['README.md'],['152772ad894436d3ac05565ced460776cee924a2'],26,35,61,1,,,
32fea9ef5f57a0b084b8bf763591aeb3b4ea6b2e,"API Simplify 1D constructor

Remove some of the fine-tuning parameters for the filters.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-12-14 01:40:13-05:00,18000,2018-12-14 15:46:26-05:00,18000,True,False,"['scattering1d.py', 'test_scattering1d.py']",['f10bbed588f727ac22c287c27357df213ffd015a'],39,17,56,2,0.5,1.0,0.5
f92fc713815324194fad641044dfc2200e380e55,FIX Address invalid escape warnings,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-12-15 00:11:03-05:00,18000,2018-12-15 00:19:08-05:00,18000,True,False,"['scattering1d.py', 'scattering3d.py']",['32fea9ef5f57a0b084b8bf763591aeb3b4ea6b2e'],10,10,20,2,,,
9991d432372b304f84b67cc60027e92f4ce2273a,"API Homogenize 3d output (#238)

* REF modify subsampling

make subsampling contiguous

* API 3d standard output reshaped to reflect input dimensions instead of
raveling

* FIX Make order 1 indices correspond to order 2 (3D)

* TST Fix tests for new 3D output format",eickenberg,eickenberg@users.noreply.github.com,GitHub,noreply@github.com,2018-12-16 08:04:05+00:00,0,2018-12-16 08:04:05+00:00,0,True,False,"['scattering3d.py', 'test_scattering3d.py', 'utils.py']",['f92fc713815324194fad641044dfc2200e380e55'],14,16,30,3,0.0,0.0,0.0
5ef856fdf7adc60a36a57ca97dc0c6285a229372,"API Default values and remove kwargs (3D) (#234)

* ENH Add default values for `L`, `sigma_0` (3D)

* API Remove kwargs from 3D `forward`

Instead, make these parameters attributes of the object (that can,
optionally, be initialized during init).

FIX rebase missed one self.max_order",Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2018-12-16 03:38:10-05:00,18000,2018-12-16 08:38:10+00:00,0,True,False,"['compute_speed.py', 'scattering3d_qm7.py', 'scattering3d.py', 'test_scattering3d.py']",['9991d432372b304f84b67cc60027e92f4ce2273a'],56,76,132,4,1.0,1.0,1.0
0a988fd493a71da001eb153fd02b0012914d4527,"MAINT improved installation instructions

Small modifications of the readme to make it more coherent with pip + improving the setup.py with more attributes to setup_tools (e.g. python_requires) and removing the support of ""Windows"" and python<3.6

Closes #242",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Vincent Lostanlen,vincent.lostanlen@nyu.edu,2018-12-16 21:04:10+01:00,-3600,2018-12-16 15:04:10-05:00,18000,True,False,"['README.md', 'requirements_optional_cuda.txt', 'setup.py']",['5ef856fdf7adc60a36a57ca97dc0c6285a229372'],18,20,38,3,,,
d85f2b043dec8bcf522040148da752835bc36db9,REF change name of Scattering3D to HarmonicScattering3D everywhere,Michael Eickenberg,michael.eickenberg@gmail.com,eickenberg,eickenberg@users.noreply.github.com,2018-12-16 21:50:58+00:00,0,2018-12-16 22:25:29+00:00,0,True,False,"['README.txt', 'compute_speed.py', 'scattering3d_qm7.py', '__init__.py', '__init__.py', 'scattering3d.py', 'test_scattering3d.py']",['0a988fd493a71da001eb153fd02b0012914d4527'],22,20,42,7,,,
af727fc33f0255979e42ff9aee363316b9f67216,REF give names to sizes for different scattering orders,Michael Eickenberg,michael.eickenberg@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-12-16 19:14:18+00:00,0,2018-12-16 20:50:01-05:00,18000,True,False,['scattering2d.py'],['d85f2b043dec8bcf522040148da752835bc36db9'],2,6,8,1,0.0,0.0,1.0
994d047d3feaaad6f0f4e16bb87e9eb6073ba74e,"API+TST changed 2D output order

TST reordered coefficients in the scattering2D test",Michael Eickenberg,michael.eickenberg@gmail.com,Joakim Andén,janden@flatironinstitute.org,2018-12-16 19:16:50+00:00,0,2018-12-16 20:50:01-05:00,18000,True,False,"['scattering2d.py', 'test_scattering2d.py']",['af727fc33f0255979e42ff9aee363316b9f67216'],7,37,44,2,0.0,1.0,1.0
5b7fa2b5a6ea11b79991976a85adb91e6427a306,"ENH Make `Q = 1` the default in 1D

This way, the only required parameters are `J` and `shape`, just like in
2D and 3D.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-12-16 20:42:49-05:00,18000,2018-12-16 20:52:01-05:00,18000,True,False,['scattering1d.py'],['994d047d3feaaad6f0f4e16bb87e9eb6073ba74e'],2,2,4,1,,,
dba948ba69e2fdeab11ac7c34149930f48ec7efa,"TST Fix tests for skcuda backend

Since it only supports CUDA tensors, we need to cast the tensors and
transform objects before calling `forward`.

Fixes #253.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-12-16 21:03:20-05:00,18000,2018-12-16 21:10:35-05:00,18000,True,False,"['test_scattering1d.py', 'test_scattering2d.py']",['5b7fa2b5a6ea11b79991976a85adb91e6427a306'],0,16,16,2,0.0,1.0,1.0
7770277630ea2c31bb69bd785123541d544be3e8,API+TST Change 1D coefficient order and fix test (#247),Joakim Andén,janden@flatironinstitute.org,Vincent Lostanlen,vincent.lostanlen@nyu.edu,2018-12-17 01:13:38-05:00,18000,2018-12-17 01:13:38-05:00,18000,True,False,"['scattering1d.py', 'test_scattering1d.py']",['dba948ba69e2fdeab11ac7c34149930f48ec7efa'],38,72,110,2,0.0,0.0,0.2328767123287671
d14d43e4e5b65f9cba55353673a14c9f6cd5b1a1,"FIX Remove `KYMATIO_BACKEND_2D`

Replace with `KYMATIO_BACKEND`.",Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2018-12-17 08:10:40-05:00,18000,2018-12-17 14:10:40+01:00,-3600,True,False,['README.md'],['7770277630ea2c31bb69bd785123541d544be3e8'],2,2,4,1,,,
e0de97e7b92aacd279e27539fbce850c908b9b31,TST Make Travis CI run for py37,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-12-17 07:51:50-05:00,18000,2018-12-17 20:29:40-05:00,18000,True,False,['.travis.yml'],['d14d43e4e5b65f9cba55353673a14c9f6cd5b1a1'],3,6,9,1,,,
b2926b713a2747b641dccda88c55c2560224bdf9,"DOC Add Python version badges

Per @lostanlen's suggestion.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2018-12-17 11:19:49-05:00,18000,2018-12-17 20:29:40-05:00,18000,True,False,['README.md'],['e0de97e7b92aacd279e27539fbce850c908b9b31'],1,1,2,1,,,
0af318ce2b1b08826089f6ff31870286839d3245,"DOC readme fixes

small aesthetic/cosmetic changes to readme",eickenberg,eickenberg@users.noreply.github.com,eickenberg,eickenberg@users.noreply.github.com,2018-12-18 13:58:38+01:00,-3600,2018-12-18 23:38:40+01:00,-3600,True,False,['README.md'],['b2926b713a2747b641dccda88c55c2560224bdf9'],5,1,6,1,,,
7c4d88cee424c6122cb79f6fac5e0b3432098e94,ENH Update README.md (#274),eickenberg,eickenberg@users.noreply.github.com,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2018-12-20 13:59:05+01:00,-3600,2018-12-20 13:59:05+01:00,-3600,True,False,['README.md'],['0af318ce2b1b08826089f6ff31870286839d3245'],1,1,2,1,,,
1caf3ec522ddf1dcb574e87de44bb865be632261,ENH index.rst (website),Eugene Belilovsky,eugenium@gmail.com,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2018-12-20 15:00:13+01:00,-3600,2018-12-20 15:00:13+01:00,-3600,True,False,['index.rst'],['7c4d88cee424c6122cb79f6fac5e0b3432098e94'],1,2,3,1,,,
05b93d50b3e8255a8bafffd631854b35afcf2729,"[ENH] Add code coverage. (#275)

* Add code coverage.",Johan Mathe,johmathe@users.noreply.github.com,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2018-12-20 15:05:56+01:00,-3600,2018-12-20 15:05:56+01:00,-3600,True,False,['.travis.yml'],['1caf3ec522ddf1dcb574e87de44bb865be632261'],7,4,11,1,,,
7734011cdd41cae863b1beb21ae2ef9cf4fec367,FIX Appropriate code coverage syntax for pytest.,Johan Mathe,johmathe@users.noreply.github.com,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2018-12-26 12:02:55+01:00,-3600,2018-12-26 12:02:55+01:00,-3600,True,False,['.travis.yml'],['05b93d50b3e8255a8bafffd631854b35afcf2729'],1,1,2,1,,,
2029301292b237c6afef40e1aa041cc6e5c47e24,"FIX Make 3D benchmark run again

Fixes #287.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-14 11:40:28-05:00,18000,2019-01-14 11:47:37-05:00,18000,True,False,['compute_speed.py'],['7734011cdd41cae863b1beb21ae2ef9cf4fec367'],0,2,2,1,,,
36eb56014807a5c7c1be69135e5f4e8d371aad64,"TST Fix coverage reporting

Fixes #290.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-14 14:21:05-05:00,18000,2019-01-14 22:40:41-05:00,18000,True,False,['.travis.yml'],['2029301292b237c6afef40e1aa041cc6e5c47e24'],1,1,2,1,,,
97ef869e1b6505f5745f8b0836c1cf8757c11700,"FIX Make `max_order = 1` work properly for 1D

Specifically, don't allocate a tensor of the same size as for
`max_order = 2`.

Fixes #292.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-14 23:25:54-05:00,18000,2019-01-15 10:02:23-05:00,18000,True,False,['scattering1d.py'],['36eb56014807a5c7c1be69135e5f4e8d371aad64'],2,6,8,1,0.0,0.0,0.0
f348619203aefaa37ae2980c602e0a3bac7dffd5,ENH Add .coverage to .gitignore (#295),Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2019-01-16 14:11:16-05:00,18000,2019-01-16 20:11:16+01:00,-3600,True,False,['.gitignore'],['97ef869e1b6505f5745f8b0836c1cf8757c11700'],1,1,2,1,,,
964fa29cabb05eaa3a6e79302542e1821fdcc140,"FIX Make skcuda error on non-complex (1D)

Specifically, the `subsample_fourier` function incorrectly allocated the output
tensor based on the input array size without checking whether it was of correct
dimension (i.e., complex-valued).

Fixes #296.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-15 11:36:44-05:00,18000,2019-01-17 10:18:55-05:00,18000,True,False,['backend_skcuda.py'],['f348619203aefaa37ae2980c602e0a3bac7dffd5'],2,2,4,1,,,
662a58d899f7ba57da06c50849060856a9b75936,"ENH Make torch backend error on non-complex (1D)

Just like the skcuda backend does.

Fixes #297.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-15 11:38:06-05:00,18000,2019-01-17 10:18:55-05:00,18000,True,False,['backend_torch.py'],['964fa29cabb05eaa3a6e79302542e1821fdcc140'],0,9,9,1,1.0,1.0,1.0
ee9ce1678fdbee61bf7cf64dd7fb24b865d9c40d,"FIX Make sure encoding is explicit

In other words, if it's not specified, encoding is ASCII. Otherwise, we must
specify the encoding according to PEP 263.

Fixes #294.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-17 10:16:52-05:00,18000,2019-01-17 10:28:52-05:00,18000,True,False,"['scattering1d.py', 'setup.py']",['662a58d899f7ba57da06c50849060856a9b75936'],2,4,6,2,,,
76c6a9358f049d1614c8a9d247d3f063877ef351,"FIX Put transform in CUDA mode for 3D example

Fixes #307.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-16 15:25:13-05:00,18000,2019-01-17 10:29:08-05:00,18000,True,False,['scattering3d_qm7.py'],['ee9ce1678fdbee61bf7cf64dd7fb24b865d9c40d'],5,6,11,1,0.0,1.0,0.0
c85098e092330938845e261ee1d4c7d70f624a0c,"DOC Clean up, clarify, and extend README

Including new ""How to cite"" section, source install instructions, correct backend information, etc.

Partially addresses #281. Fixes #283.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-14 10:58:22-05:00,18000,2019-01-17 10:55:18-05:00,18000,True,False,['README.md'],['76c6a9358f049d1614c8a9d247d3f063877ef351'],14,33,47,1,,,
3c168fbe8cda979ecdb06243cce4f440f88e28d7,"DOC Clean up, clarify, and extend docs

Including new ""How to cite"" section and 3D benchmarks.

Partially addresses #281. Fixes #273, #279.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-14 11:37:55-05:00,18000,2019-01-17 10:55:18-05:00,18000,True,False,"['installation.rst', 'userguide.rst', 'scattering2d.py']",['c85098e092330938845e261ee1d4c7d70f624a0c'],41,49,90,3,,,
d1a79037618dfc79729f64643e78208cf4a8ec72,DOC Add CONTRIBUTORS file,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-17 10:35:30-05:00,18000,2019-01-17 13:23:20-05:00,18000,True,False,['CONTRIBUTORS.md'],['3c168fbe8cda979ecdb06243cce4f440f88e28d7'],0,12,12,1,,,
42775245e95a12f3dcce2b590cbddf208796214f,ENH Remove unused `ceiling_strict`,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-14 15:01:20-05:00,18000,2019-01-17 13:34:10-05:00,18000,True,False,['utils.py'],['d1a79037618dfc79729f64643e78208cf4a8ec72'],13,0,13,1,0.0,0.0,0.0
ba085ae1d67c5d8d4ac4638ee017253e8a4fd669,"REF Remove unused else clauses (1D)

For example, when defining Morlets/Gabors, we always have `P >= 1`, so the else
clause dealing with `P < 1` is never executed. Also other unused else clauses
in utils and filter tests.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-15 11:04:09-05:00,18000,2019-01-17 13:34:10-05:00,18000,True,False,"['filter_bank.py', 'test_filters.py', 'utils.py']",['42775245e95a12f3dcce2b590cbddf208796214f'],14,5,19,3,1.0,0.0,0.25
57b6da6d4f23ff58099521a4edf0b4e3e40d510e,TST Add test for `compute_padding` (1D),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-14 23:07:16-05:00,18000,2019-01-17 13:34:10-05:00,18000,True,False,['test_utils.py'],['ba085ae1d67c5d8d4ac4638ee017253e8a4fd669'],1,17,18,1,1.0,1.0,1.0
b89207a5cf43fd9f7f7e054892c22a42c819b48d,TST Make sure `cpu()` method is tested (1D),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-14 23:10:28-05:00,18000,2019-01-17 13:34:10-05:00,18000,True,False,['test_scattering1d.py'],['57b6da6d4f23ff58099521a4edf0b4e3e40d510e'],0,2,2,1,0.0,0.0,1.0
f719827e7b2431253428d6826de886064187545c,TST Test meta calc in for different `max_order` (1D),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-14 23:25:09-05:00,18000,2019-01-17 13:34:10-05:00,18000,True,False,['test_scattering1d.py'],['b89207a5cf43fd9f7f7e054892c22a42c819b48d'],14,17,31,1,0.0,0.0,1.0
1fb0d3ff19782c72c8b22e9d7a44d4cb5b5003c2,TST Check 1D filters for multiple values of P,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-15 10:48:23-05:00,18000,2019-01-17 13:34:10-05:00,18000,True,False,['test_filters.py'],['f719827e7b2431253428d6826de886064187545c'],22,26,48,1,0.5,1.0,1.0
db61d6c7622c3090f5568190c9796feae6103653,TST Test `average = False` for 2nd order (1D),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-14 23:35:22-05:00,18000,2019-01-17 13:34:10-05:00,18000,True,False,['test_scattering1d.py'],['1fb0d3ff19782c72c8b22e9d7a44d4cb5b5003c2'],0,20,20,1,0.0,0.0,1.0
bd5bc8e98af4f027e371f4918c43ab1aa5a6614b,TST Add tests for errors/warnings (1D),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-15 11:25:39-05:00,18000,2019-01-17 13:34:10-05:00,18000,True,False,"['test_filters.py', 'test_utils.py']",['db61d6c7622c3090f5568190c9796feae6103653'],0,77,77,2,0.0,0.1111111111111111,1.0
b450dc2079f6304311fc944ce6d18b10df9016f3,"FIX Typo in `scattering3d_qm7.py`

Fixes #303.",nshervt,30446938+nshervt@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2019-01-16 14:05:41-05:00,18000,2019-01-17 13:39:01-05:00,18000,True,False,['scattering3d_qm7.py'],['bd5bc8e98af4f027e371f4918c43ab1aa5a6614b'],1,1,2,1,,,
f7a6efa994bf2d92bfc1efbe5fde2a50ebe71d17,DOC Typo in `scattering3d_qm7.py`,nshervt,30446938+nshervt@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2019-01-16 18:27:47-05:00,18000,2019-01-17 13:39:01-05:00,18000,True,False,['scattering3d_qm7.py'],['b450dc2079f6304311fc944ce6d18b10df9016f3'],1,1,2,1,,,
619b8a54c3651d6558c9f1cf798f330c0e820243,DOC Add @nshervt to CONTRIBUTORS,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-17 13:30:08-05:00,18000,2019-01-17 13:39:01-05:00,18000,True,False,['CONTRIBUTORS.md'],['f7a6efa994bf2d92bfc1efbe5fde2a50ebe71d17'],0,1,1,1,,,
6d5dfd2ad00775e0f3cfdaf80bceba9445b90a26,MAINT bump dev version,Michael Eickenberg,michael.eickenberg@gmail.com,Michael Eickenberg,michael.eickenberg@gmail.com,2019-01-17 20:03:15+00:00,0,2019-01-17 20:03:15+00:00,0,True,False,['version.py'],['619b8a54c3651d6558c9f1cf798f330c0e820243'],2,3,5,1,,,
bceb778abc12a5833fce12eff7ec47b695cb707a,DOC Minor proofreading of user guide,Jan Schlüter,github@jan-schlueter.de,Jan Schlüter,github@jan-schlueter.de,2019-01-18 12:30:53+01:00,-3600,2019-01-18 18:08:58+01:00,-3600,True,False,['userguide.rst'],['6d5dfd2ad00775e0f3cfdaf80bceba9445b90a26'],4,7,11,1,,,
241a0fe69a0c68812721401d35457c2ccf9dea3a,FIX Remove unused import,Jan Schlüter,github@jan-schlueter.de,Joakim Andén,janden@flatironinstitute.org,2019-01-18 18:07:06+01:00,-3600,2019-01-18 16:15:39-05:00,18000,True,False,['filter_bank.py'],['bceb778abc12a5833fce12eff7ec47b695cb707a'],1,0,1,1,,,
e9cf5a67416ec75b4db9666669271c1905413487,DOC Add @f0k to CONTRIBUTORS,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-18 16:08:33-05:00,18000,2019-01-18 16:15:39-05:00,18000,True,False,['CONTRIBUTORS.md'],['241a0fe69a0c68812721401d35457c2ccf9dea3a'],0,1,1,1,,,
02f31a7824011ef7c7c1145342473d32a1133b51,REF Avoid creating unneeded 2D filters,Jan Schlüter,github@jan-schlueter.de,Joakim Andén,janden@flatironinstitute.org,2019-01-18 18:33:00+01:00,-3600,2019-01-21 16:37:35-05:00,18000,True,False,['filter_bank.py'],['e9cf5a67416ec75b4db9666669271c1905413487'],1,1,2,1,,,
86a7dd68b1d9b7b524334e93d2e13af43da671cf,MAINT Mark support for Python 3.5,Jan Schlüter,github@jan-schlueter.de,Joakim Andén,janden@flatironinstitute.org,2019-01-21 18:32:41+01:00,-3600,2019-01-23 00:02:07+01:00,-3600,True,False,"['README.md', 'setup.py']",['02f31a7824011ef7c7c1145342473d32a1133b51'],2,3,5,2,,,
7326cb63245fbe0f841ef3417af1d60feb2930b3,DOC Fix benchmarks link in README,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-01-30 10:07:57-05:00,18000,2019-01-30 10:16:53-05:00,18000,True,False,['README.md'],['86a7dd68b1d9b7b524334e93d2e13af43da671cf'],1,1,2,1,,,
93d8ff2c06a7d059964530dbfbf2bf2f8ba6cde3,DOC Fix backslash escapes in 3D docstring,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-02-01 16:25:51-05:00,18000,2019-02-01 16:43:59-05:00,18000,True,False,['scattering3d.py'],['7326cb63245fbe0f841ef3417af1d60feb2930b3'],2,2,4,1,,,
82f21ed11e9152cd234e63af96d48300210429a9,ENH Add number of downloads to README,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2019-02-11 11:04:03+01:00,-3600,2019-02-13 17:03:24-05:00,18000,True,False,['README.md'],['93d8ff2c06a7d059964530dbfbf2bf2f8ba6cde3'],0,1,1,1,,,
6e5c430d71a1562a93931eee0f568a9aba489220,"DOC Add codecov badge to README

Fixes #265.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-02-11 21:03:47-05:00,18000,2019-02-16 16:50:01-05:00,18000,True,False,['README.md'],['82f21ed11e9152cd234e63af96d48300210429a9'],0,1,1,1,,,
35add04f9c4e084648c26bb1a97308f29ac7ccec,"ENH Remove unused functions in 3D tests

Specifically, `linfnorm` and `rerror`.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-02-16 17:39:02-05:00,18000,2019-02-17 18:40:47-05:00,18000,True,False,['test_scattering3d.py'],['6e5c430d71a1562a93931eee0f568a9aba489220'],10,0,10,1,0.0,0.0,0.0
19fef795f40162fc526d0e09b2b68420558a8256,ENH Remove unused `getDtype` in `backend_torch` (3D),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-02-16 17:16:32-05:00,18000,2019-02-17 18:41:35-05:00,18000,True,False,['backend_torch.py'],['35add04f9c4e084648c26bb1a97308f29ac7ccec'],8,0,8,1,0.0,0.0,0.0
1dc9cc1d46acfdbaa02fa2849b4cc81c0dd898e1,"ENH Fix logos (#343)

Add correct logo for GitHub and some new logos. Remove a dead URL.",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2019-02-22 21:54:33+01:00,-3600,2019-02-22 15:54:33-05:00,18000,True,False,"['README.md', 'index.rst']",['19fef795f40162fc526d0e09b2b68420558a8256'],4,8,12,2,,,
6c404deb0c191b2f9f15e2f8dbfd33da8989c668,"ENH Remove unused `fft_shift` option (#344)

In the `gabor_2d` function.",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2019-02-22 21:56:03+01:00,-3600,2019-02-22 15:56:03-05:00,18000,True,False,['filter_bank.py'],['1dc9cc1d46acfdbaa02fa2849b4cc81c0dd898e1'],11,4,15,1,1.0,0.0,1.0
ffdbf7106fd85d16aefffdae15cd16ba41e75e95,"TST Make Travis test a bare `pip` environment

Fixes #319.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-02-01 16:53:30-05:00,18000,2019-02-22 16:20:24-05:00,18000,True,False,"['.travis.yml', 'travis_install.sh']",['6c404deb0c191b2f9f15e2f8dbfd33da8989c668'],27,36,63,2,,,
64c0a9103cfa6643d92e02924608eaf5628be0dd,"DOC Fix link formatting in user's guide

Text nodes of the form `[text]` apparently get treated like BibTeX references,
so if it can't find that reference in the bibliography, it yells at you.
Documented here:

https://github.com/mcmtroffaes/sphinxcontrib-bibtex/issues/141

Fixes #347.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-02-25 10:26:40-05:00,18000,2019-02-25 14:15:39-05:00,18000,True,False,['userguide.rst'],['ffdbf7106fd85d16aefffdae15cd16ba41e75e95'],1,1,2,1,,,
b2548bec4a1682c57f00ce3292b436b4ae3123d5,"DOC Clean up paper reference

Make consistent between README and user's guide; fix initial in author list.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-02-25 10:53:03-05:00,18000,2019-02-25 14:15:39-05:00,18000,True,False,"['README.md', 'userguide.rst']",['64c0a9103cfa6643d92e02924608eaf5628be0dd'],2,2,4,2,,,
889976deef2a5cf1a8e10b64776f7811a52f203f,FIX Read README.md in proper encoding,Dylan Simon,dylan@dylex.net,Joakim Andén,janden@flatironinstitute.org,2019-02-26 14:32:55-05:00,18000,2019-02-27 12:29:59-05:00,18000,True,False,['setup.py'],['b2548bec4a1682c57f00ce3292b436b4ae3123d5'],1,1,2,1,,,
316db778fb928f82dc39e3b72374aa9fd2b7f409,"TST Set up Jenkins CI at Flatiron

This enables the Jenkins server at Flatiron to run the test suite on a GPU,
which will help us make sure that the GPU-only code (i.e., skcuda) runs
smoothly.",Dylan Simon,dylan@dylex.net,Joakim Andén,janden@flatironinstitute.org,2019-02-26 14:28:31-05:00,18000,2019-02-28 14:30:08-05:00,18000,True,False,"['Jenkinsfile', 'Dockerfile']",['889976deef2a5cf1a8e10b64776f7811a52f203f'],0,90,90,2,,,
d00fefea76123d19c8de1b8008a0c118c4a2e41f,DOC Add @dylex to CONTRIBUTORS,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-02-27 12:20:25-05:00,18000,2019-02-28 14:30:09-05:00,18000,True,False,['CONTRIBUTORS.md'],['316db778fb928f82dc39e3b72374aa9fd2b7f409'],0,1,1,1,,,
09a848a2edbe81521113c11f99758a63d887ae3c,TST Add codecov to Jenkins,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-02-27 21:14:46-05:00,18000,2019-02-28 14:30:09-05:00,18000,True,False,"['Jenkinsfile', 'Dockerfile']",['d00fefea76123d19c8de1b8008a0c118c4a2e41f'],4,8,12,2,,,
ee75961dd310b0928e511ba9f30d6b14e07ae52b,TST Separate out Travis codecov report,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-02-27 21:56:01-05:00,18000,2019-02-28 14:30:10-05:00,18000,True,False,['.travis.yml'],['09a848a2edbe81521113c11f99758a63d887ae3c'],1,1,2,1,,,
6e20bb9b2a860f0cc28370b211b4e7cf20dfcc0f,TST Increase the log size for Jenkins emails,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-03-01 14:24:21-05:00,18000,2019-03-01 14:37:37-05:00,18000,True,False,['Jenkinsfile'],['ee75961dd310b0928e511ba9f30d6b14e07ae52b'],1,1,2,1,,,
429aedac5ac01f4c1f57f5366a2e929eb6cad972,"ENH Optimize 2D torch modulus

Speed up the modulus by combining elementary operations.",Joakim Andén,janden@flatironinstitute.org,GitHub,noreply@github.com,2019-03-01 14:55:49-05:00,18000,2019-03-01 14:55:49-05:00,18000,True,False,['backend_torch.py'],['6e20bb9b2a860f0cc28370b211b4e7cf20dfcc0f'],3,5,8,1,1.0,1.0,1.0
6e1ff004c06889dcee0f750314922b1f06c84b2e,"ENH Add benchmark of 2D backend

Benchmark the 2D backend kernels (modulus, subsample, cdgmm) in terms of
throughput (GB/s).",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-02-16 22:47:13-05:00,18000,2019-03-01 17:01:52-05:00,18000,True,False,['bench_backend_2d.py'],['429aedac5ac01f4c1f57f5366a2e929eb6cad972'],0,65,65,1,,,
bd1ff93659eade1d0708a94cf4b4f48c1e363104,"TST Test raised errors in `Scattering2D.forward`

Fixes #333.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-03-01 21:45:28-05:00,18000,2019-03-02 14:30:29-05:00,18000,True,False,['test_scattering2d.py'],['6e1ff004c06889dcee0f750314922b1f06c84b2e'],0,31,31,1,0.0,1.0,1.0
5f0a67ce3c2d01a2da19b18f2f0834bb31c35182,"FIX Bug on input sizes (#346)

Make sure `Scattering2D` works for all input sizes.

Fixes #306, #284, #335.",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,Joakim Andén,janden@flatironinstitute.org,2019-03-03 03:03:10+01:00,-3600,2019-03-02 21:03:10-05:00,18000,True,False,"['backend_skcuda.py', 'backend_torch.py', 'scattering2d.py', 'test_scattering2d.py']",['bd1ff93659eade1d0708a94cf4b4f48c1e363104'],23,49,72,4,1.0,1.0,0.8666666666666667
b37fdf43bd950c4872d8ea39975d98a1b5d75866,"ENH Implement and deploy real filtering

* REF Stick to single precision in 2D filterbank

* ENH Exploit that 2D filterbank is real

* REF Remove unused local variable

* REF Use np.view instead of np.stack

* ENH Replace meaningless type check in cdgmm

* TST Complete cdgmm tests

* ENH Avoid unneeded contiguous copying

* ENH Improved cdgmm error messages",Jan Schlüter,github@jan-schlueter.de,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2019-03-03 07:41:25+01:00,-3600,2019-03-03 07:41:25+01:00,-3600,True,False,"['backend_skcuda.py', 'backend_torch.py', 'filter_bank.py', 'test_scattering2d.py']",['5f0a67ce3c2d01a2da19b18f2f0834bb31c35182'],89,145,234,4,0.6363636363636364,0.7954545454545454,0.18181818181818182
9ec51b207165d135d34bedfc69049909861bd4be,"TST Improve test coverage in 1D

* MNT Clean up `ModulusStable.backward` (1D)

It only needs to return the gradient tensor. Also, we only care about `p = 2`,
so remove code for the other cases.

* TST Manually test `ModulusStable.backward` (1D)

Although this function is already tested through PyTorch's autograd
functionality, it doesn't count towards code coverage since the call goes
through the PyTorch C extensions. Instead, we call `backward` manually to
ensure that it works properly and is included in the code coverage.

Fixes #300.

* TST Remove unneeded `cuda()` calls (1D)

Since the skcuda backend doesn't have differentiability (yet), we don't need to
force GPU computation in these tests.",Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2019-03-03 17:36:04-05:00,18000,2019-03-03 23:36:04+01:00,-3600,True,False,"['backend_torch.py', 'test_scattering1d.py', 'test_utils.py']",['b37fdf43bd950c4872d8ea39975d98a1b5d75866'],13,15,28,3,1.0,0.0,0.0
ef52a8b44bf06fd95cf92370915a5031ba0c2edd,"ENH adding ens & fi logos

* adding logos

* Fix Flatiron support statement

* Make sure FI and ENS logos have the same size",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,GitHub,noreply@github.com,2019-03-11 10:06:27+01:00,-3600,2019-03-11 10:06:27+01:00,-3600,True,False,"['README.md', 'FL_Full_Logo_Mark_Small.png', 'index.rst']",['9ec51b207165d135d34bedfc69049909861bd4be'],0,26,26,3,,,
6bc4bbf4e8117db4ed07205bfc8c73f76b4528f1,"ENH Torch isn't necessary for creating filters

* removing torch from filter creations

* backend now convert filters from numpy in a good type for itself

* fixing small bug during the conversion

* FIX Ensure numpy is imported

* fix np checks",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,GitHub,noreply@github.com,2019-03-17 08:27:37+01:00,-3600,2019-03-17 08:27:37+01:00,-3600,True,False,"['backend_skcuda.py', 'backend_torch.py', 'filter_bank.py', 'scattering2d.py']",['ef52a8b44bf06fd95cf92370915a5031ba0c2edd'],8,31,39,4,1.0,1.0,1.0
cbad186833633a22239cc6fa548a474c580e710b,"fix 2D example: plot_filters.py

* 2d plot_filters.py: filters are now numpy arrays

* 2d plot_filters.py: filters are now real

* pep8

* add plt.show()",Gregory R. Lee,grlee77@gmail.com,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2019-03-26 17:31:28-04:00,14400,2019-03-26 22:31:28+01:00,-3600,True,False,['plot_filters.py'],['6bc4bbf4e8117db4ed07205bfc8c73f76b4528f1'],15,18,33,1,,,
d81e6cc5e978aa062bd7d1ce84d04542e0d3bc16,DOC scipy -> numpy in contributing guidelines,Vincent Lostanlen,vincent.lostanlen@nyu.edu,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,2019-03-29 04:21:47-04:00,14400,2019-03-29 09:21:47+01:00,-3600,True,False,['CONTRIBUTING.md'],['cbad186833633a22239cc6fa548a474c580e710b'],3,2,5,1,,,
fb1bd82929007c60336935ee11401b7fa7ef2a87,"FIX  Updates for new jenkins server 

* TST Jenkins updates, switch to nvidia cuda docker image

* TST Fix codecov uploader for Jenkins

Make it look in the correct directory for the coverage reports.",Dylan Simon,dylan@dylex.net,Edouard Oyallon,edouard.oyallon@ens.fr,2019-05-22 03:50:56-04:00,14400,2019-05-22 09:50:56+02:00,-7200,True,False,"['Jenkinsfile', 'Dockerfile']",['d81e6cc5e978aa062bd7d1ce84d04542e0d3bc16'],17,18,35,2,,,
d1e46266e62bd145c9097f4049f9131d14e7013f,FIX different devices issue,Edouard Oyallon,edouard.oyallon@centralesupelec.fr,GitHub,noreply@github.com,2019-05-29 13:09:11+02:00,-7200,2019-05-29 13:09:11+02:00,-7200,True,False,"['backend_skcuda.py', 'backend_torch.py']",['fb1bd82929007c60336935ee11401b7fa7ef2a87'],4,12,16,2,0.0,0.0,0.0
080b259c8a84c56e417be91b65848183826ba715,"ENH support of J=1 for 2D

* adding test for J=1
* adding a special case for J=1",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,GitHub,noreply@github.com,2019-05-29 13:19:23+02:00,-7200,2019-05-29 13:19:23+02:00,-7200,True,False,"['filter_bank.py', 'test_scattering2d.py']",['d1e46266e62bd145c9097f4049f9131d14e7013f'],3,4,7,2,,,
c81b83c5b229547203527c183b4ad16f2f5f7f72,"ENH adding more test for code coveraging purposes

* adding more test for backend
* bad except
* removing else in the test as codecov already check the code si running
* the default backend should always be loaded
* add an error for devices
* resovling michael's issues",Edouard Oyallon,edouard.oyallon@centralesupelec.fr,GitHub,noreply@github.com,2019-05-29 13:20:25+02:00,-7200,2019-05-29 13:20:25+02:00,-7200,True,False,['test_scattering2d.py'],['080b259c8a84c56e417be91b65848183826ba715'],13,31,44,1,1.0,1.0,1.0
41f75694f7cb9a54e41eda369404566f6330baf6,"ENH Code for inverting scattering via mse

* Add base script

* Update base script

Remove cv2 dependency
Ajust hyperparams
Add plots

* Update script

Add comments
Remove unnecessary copies

* examples that will not be that slow on CPU and could work o GPU + adding the image",Jonas1312,Jonas1312@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2019-05-29 15:20:09+02:00,-7200,2020-01-23 11:15:00-05:00,18000,True,False,['plot_invert_scattering.py'],['c81b83c5b229547203527c183b4ad16f2f5f7f72'],0,85,85,1,,,
b9bcbed992f987a4cb30c2840875ade7117d8ee7,"ENH adding function .to() for 2D (#382)

* to function for 2D

* adding to, _apply, cuda, cpu in module style

* better test

* addign more unit test

* gpu -> cuda for consistency with torch

* addign more unit test

* doc string

* removing error with the backend and type

* removing error with the backend and type

* mimics<-mimicates",Edouard Oyallon,edouard.oyallon@gmail.com,Joakim Andén,janden@flatironinstitute.org,2019-06-12 15:01:21-07:00,25200,2020-01-23 11:15:00-05:00,18000,True,False,"['scattering2d.py', 'test_scattering2d.py']",['41f75694f7cb9a54e41eda369404566f6330baf6'],23,44,67,2,0.5294117647058824,1.0,0.5882352941176471
0e62d00fd832c443c720a1aed12036bccc22dbc1,"ENH adding to() and _apply to the 1D code (#384)

* adding the cuda,cpu and to functions

* building it

* adding the support of to()

* mmicates > mmics

* mini bug

* fix bug",Edouard Oyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2019-06-12 15:40:34-07:00,25200,2020-01-23 11:15:00-05:00,18000,True,False,"['scattering1d.py', 'utils.py']",['b9bcbed992f987a4cb30c2840875ade7117d8ee7'],28,34,62,2,1.0,1.0,0.2
2e1ab5e73f41956ed0bccb0d1e769467f509296e,"Mnist fix (#392)

* fixed mnist

* fixed mnist",Eugene Belilovsky,eugenium@gmail.com,Joakim Andén,janden@flatironinstitute.org,2019-06-12 16:27:38-07:00,25200,2020-01-23 11:15:00-05:00,18000,True,False,"['mnist.py', 'plot_mnist_classify.py']",['0e62d00fd832c443c720a1aed12036bccc22dbc1'],169,130,299,2,0.8941176470588236,0.8941176470588236,0.10588235294117647
e1d650eb5de32117fbc16dc76a552eac6739508b,REF removing torch from filter banks generation (#394),Edouard Oyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2019-06-13 15:45:31-07:00,25200,2020-01-23 11:15:00-05:00,18000,True,False,"['filter_bank.py', 'scattering1d.py']",['2e1ab5e73f41956ed0bccb0d1e769467f509296e'],28,23,51,2,0.0,0.0,1.0
f6ceb97a6199dd781fb88d04de556df5dbd79b8e,"FIX BUG J=ceil(log(N)/log(2)) (#364)

* adding a test for the setting where J=ceil(log(N)/log(2))

* adding a test to specify that 2¨**J>M,N shouldn't occur

* adding an exception when 2**J=M or N

* typo

* Implementing a symmetric padding without any redundant pixels..

* Adding a new test if ever the width and height of the image are distinct.

* fixing skcuda + doc",Edouard Oyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2019-06-13 16:53:15-07:00,25200,2020-01-23 11:15:00-05:00,18000,True,False,"['backend_skcuda.py', 'backend_torch.py', 'scattering2d.py', 'test_scattering2d.py', 'utils.py']",['e1d650eb5de32117fbc16dc76a552eac6739508b'],9,76,85,5,0.3617021276595745,0.3617021276595745,0.7872340425531915
75442b72b2de363832dd31563c164266f4d9e6a9,"ENH adding display code by jonas (#361)

* adding code by jonas

* adding jonas to the contributors

* scat plot

* finalizing",Edouard Oyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2019-06-13 16:55:50-07:00,25200,2020-01-23 11:15:00-05:00,18000,True,False,"['CONTRIBUTORS.md', 'digit.png', 'plot_scattering_disk.py']",['f6ceb97a6199dd781fb88d04de556df5dbd79b8e'],0,108,108,3,,,
144ae25e9c05cab8180b143e0af4e9e7f068e595,"ENH adding to() and _apply to the 3D code 

* adding functions __apply
* setting the filter type to the default tensor type",Edouard Oyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2019-06-16 12:44:55-07:00,25200,2020-01-23 11:15:00-05:00,18000,True,False,"['filter_bank.py', 'scattering3d.py', 'test_scattering3d.py', 'utils.py']",['75442b72b2de363832dd31563c164266f4d9e6a9'],69,55,124,4,1.0,0.3157894736842105,0.10526315789473684
9acb23ea1a73922659a38bf3867fd05512c4a87c,"FIX The codecov bash uploader

The codecov uploader looks for a `coverage.xml` file in the main
directory (the $WORKSPACE environment variable in the Jenkinsfile). If
it can't find one, it tries to call `coverage xml` which converts the
Python coverage file `.coverage` into `coverage.xml`. For some reason,
the uploader was able to do this conversion automatically before, but
now (probably because `coverage` is only accessible through `python3 -m
coverage` now) it fails. The fix is therefore to manually call `python3
-m coverage xml` after running the tests.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-07-09 12:32:48-04:00,14400,2020-01-23 11:15:00-05:00,18000,True,False,['Jenkinsfile'],['144ae25e9c05cab8180b143e0af4e9e7f068e595'],2,4,6,1,,,
9f17c5b8ce683ca20fa1f801f8ce8ea5ca671ac5,"DOC Fix capitalization of `User guide`

Fixes #406.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-07-09 16:36:23-04:00,14400,2020-01-23 11:15:00-05:00,18000,True,False,['userguide.rst'],['9acb23ea1a73922659a38bf3867fd05512c4a87c'],1,1,2,1,,,
3522064e5f8fc095e92432b90cf337372b910171,DOC Clean up developer's guide,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-07-09 21:29:19-04:00,14400,2020-01-23 11:15:00-05:00,18000,True,False,['developerguide.rst'],['9f17c5b8ce683ca20fa1f801f8ce8ea5ca671ac5'],17,13,30,1,,,
3c66201aa935b9977c426726d57fe412e97c65c2,"FIX Make 3D skcuda backend warn about non-contigs

In `cdgmm`, the torch backend warns about converting non-contiguous
arrays to contiguous ones, but the skcuda backend does not. This commit
fixes the skcuda behavior.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-07-09 21:10:20-04:00,14400,2020-01-23 11:15:00-05:00,18000,True,False,['backend_skcuda.py'],['3522064e5f8fc095e92432b90cf337372b910171'],1,8,9,1,0.0,0.0,0.0
cbdb28d321637860bec4ab53f6470329c9720164,"TST Add test for non-complex 3D FFTs

Should error if we pass a non-complex array as input.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-07-09 16:17:05-04:00,14400,2020-01-23 11:15:00-05:00,18000,True,False,['test_scattering3d.py'],['3c66201aa935b9977c426726d57fe412e97c65c2'],0,6,6,1,1.0,1.0,1.0
b3ce32facb52b942749974e8afbb3a81c03dc31f,"TST Test for warnings in 3D cdgmm

Specifically, if we send in non-contiguous arrays, we should get a
warning.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-07-09 16:29:39-04:00,14400,2020-01-23 11:15:00-05:00,18000,True,False,['test_scattering3d.py'],['cbdb28d321637860bec4ab53f6470329c9720164'],0,14,14,1,0.0,0.0,1.0
91eebd86ce4bfda11329cc3666cba69063d6d7ed,"TST Test for CPU tensor error in 3D skcuda cdgmm

If we feed it a CPU tensor, it needs to raise the error.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-07-09 21:58:37-04:00,14400,2020-01-23 11:15:00-05:00,18000,True,False,['test_scattering3d.py'],['b3ce32facb52b942749974e8afbb3a81c03dc31f'],0,6,6,1,0.0,0.0,1.0
199ef3ae711ff9b70def17889aece544f004c428,"FIX two bugs for the max scale case 

* Fix #412 

* Fix two bugs for the max scale case (final output size of 1).

* Axis-ordering of padding sizes.",Florentin Guth,kegnarok.rm@gmail.com,Joakim Andén,janden@flatironinstitute.org,2019-07-22 17:11:05+02:00,-7200,2020-01-23 11:15:00-05:00,18000,True,False,"['backend_skcuda.py', 'backend_torch.py', 'scattering2d.py', 'test_scattering2d.py', 'utils.py']",['91eebd86ce4bfda11329cc3666cba69063d6d7ed'],25,26,51,5,0.0,0.0,1.0
fa7fc329ce30b1bca2ec6202fdfa2a6c1cce4c2e,"DOC Update README, announce v0.2.a0 [ci skip]

Closes #473.",Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2019-12-12 00:57:51-05:00,18000,2020-01-23 11:52:08-05:00,18000,True,False,['README.md'],['199ef3ae711ff9b70def17889aece544f004c428'],13,29,42,1,,,
e683c326dd8aa6914de8c29de8c919ed93851339,"TST Update Jenkins for TF-2.0 compatibility

This includes updating the Dockerfile (upgrading the base Docker image,
installing TF-2.0 for GPU, etc.), adding a check for TF accessing the
GPU in the Jenkinsfile, and setting `TF_FORCE_GPU_ALLOW_GROWTH` to
prevent TF from allocating all the GPU memory for itself.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-05 12:03:35-05:00,18000,2020-01-24 12:39:21-05:00,18000,True,False,"['Jenkinsfile', 'Dockerfile']",['fa7fc329ce30b1bca2ec6202fdfa2a6c1cce4c2e'],5,9,14,2,,,
90d247ba0a0e5baa456df4fa11a4077d744618f7,"TST Add Circle CI for DOC builds

Co-authored-by: michael.eickenberg@gmail.com",eugenium,eugenium@github.com,Joakim Andén,janden@flatironinstitute.org,2020-01-23 12:24:44-05:00,18000,2020-01-24 16:53:06-05:00,18000,True,False,"['config.yml', '.travis.yml', 'conf.py', 'long_mnist_classify.py', 'push_doc.sh']",['e683c326dd8aa6914de8c29de8c919ed93851339'],2,128,130,5,,,
c79a3b36b31158067445c1a753f496529795d3c4,TST Make Circle CI run on master only,Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2020-01-25 13:55:47-05:00,18000,2020-01-25 15:02:22-05:00,18000,True,False,['config.yml'],['90d247ba0a0e5baa456df4fa11a4077d744618f7'],1,1,2,1,,,
8a1c80cd582b441a778f88fc918fe4c310b2c249,"TST Add `set -e` to Travis script

This way, it'll fail the test early if there are errors installing.",Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2020-01-25 13:52:13-05:00,18000,2020-01-25 15:03:22-05:00,18000,True,False,['travis_install.sh'],['c79a3b36b31158067445c1a753f496529795d3c4'],0,1,1,1,,,
05e18f56b8b0a3a18333fedcb70947fc50fe86bb,"ADD small examples

Co-authored-by: Edouard Oyallon <edouard.oyallon@lip6.fr>",Eugene Belilovsky,eugenium@gmail.com,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-01-26 21:46:19-05:00,18000,2020-01-26 21:46:19-05:00,18000,True,False,"['cifar.py', 'cifar_resnet.py', 'cifar_small_sample.py', 'regularized_inverse_scattering_MNIST.py']",['8a1c80cd582b441a778f88fc918fe4c310b2c249'],14,251,265,4,1.0,1.0,0.0
ea78b22ccc3ccd47d0e078abb24763bec37148ab,"TST Update PyTorch install commands in Travis

Following https://pytorch.org/get-started/locally/.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-05 12:09:55-05:00,18000,2020-02-18 18:24:33-05:00,18000,True,False,['travis_install.sh'],['05e18f56b8b0a3a18333fedcb70947fc50fe86bb'],8,2,10,1,,,
c4b6076b955613822730dab87b900e02625293a1,"TST Add TF-2.0 install to Travis

Following https://www.tensorflow.org/install/pip?lang=python3.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-05 12:15:43-05:00,18000,2020-02-18 18:24:33-05:00,18000,True,False,['travis_install.sh'],['ea78b22ccc3ccd47d0e078abb24763bec37148ab'],0,2,2,1,,,
8ad1e407b32e6cff627868f07e078079cec04675,DOC Update README with new frontend information,chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-11-06 22:29:50-05:00,18000,2020-02-18 18:24:33-05:00,18000,True,False,['README.md'],['c4b6076b955613822730dab87b900e02625293a1'],46,66,112,1,,,
ee7e842bff01e036dea09a0109e4bde49b01e49c,DOC Update Sphinx settings,chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-11-06 22:30:40-05:00,18000,2020-02-18 18:24:34-05:00,18000,True,False,"['Makefile', 'codereference.rst', 'conf.py']",['8ad1e407b32e6cff627868f07e078079cec04675'],10,8,18,3,,,
7afee38f284780031af3ef0e0084d8ccc60f1f10,DOC Update narrative doc with frontend info,chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-11-06 22:33:27-05:00,18000,2020-02-18 18:24:34-05:00,18000,True,False,"['developerguide.rst', 'index.rst', 'installation.rst', 'quickstart.rst', 'userguide.rst']",['ee7e842bff01e036dea09a0109e4bde49b01e49c'],95,128,223,5,,,
cfda5e6ba98833aecd690da48a8cd50b8c469a14,MNT Add `packaging` dependency,chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-11-07 00:30:37-05:00,18000,2020-02-18 18:24:35-05:00,18000,True,False,['requirements.txt'],['7afee38f284780031af3ef0e0084d8ccc60f1f10'],1,2,3,1,,,
030b227adbcdb6e744d1c96c7038b15a5d5391b9,"ENH Add parent frontend classes

These are:
- `ScatteringBase`, the parent class for all frontends,
- `ScatteringNumPy`, the parent class for the NumPy frontends,
- `ScatteringTensorFlow`, the parent class for the TF frontends, and,
- 'ScatteringTorch', the parent class for the Torch frontends.

Right now, these provide some minimal shared functionality related to
calling conventions in the different frameworks. More generally, they
provide a location for frontend-specific code that is independent of the
dimension of the transform.",chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-11-07 00:31:25-05:00,18000,2020-02-18 18:24:35-05:00,18000,True,False,"['base_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['cfda5e6ba98833aecd690da48a8cd50b8c469a14'],0,87,87,4,1.0,1.0,1.0
27ff416049adb9b49904d235136018ed50217764,MNT Remove unused import in Torch frontend,edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2019-11-25 22:54:40-05:00,18000,2020-02-18 18:24:36-05:00,18000,True,False,['torch_frontend.py'],['030b227adbcdb6e744d1c96c7038b15a5d5391b9'],1,0,1,1,,,
9b67dff70dcce29402df95ab7313d3ba01cd81bd,"ENH Import Scattering classes from sub-packages

Instead of importing the Scattering classes directly from the modules that
define then (such as `kymatio.scattering2d.scattering2d`), import them from
their corresponding sub-packages (such as `kymatio.scattering2d`). This is
because the former only works pre-frontends, while the latter allows for a more
flexible definition through `kymatio.scattering2d.__init__`).",chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-10-20 17:57:50-07:00,25200,2020-02-18 18:24:36-05:00,18000,True,False,['__init__.py'],['27ff416049adb9b49904d235136018ed50217764'],3,4,7,1,,,
9c883226cf98c9a0bc75529a9291d8eb6752b3e7,"ENH Error messages in 2D torch backend loading

Make these more specific (and, it is hoped, more useful).",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2019-11-25 22:49:52-05:00,18000,2020-02-18 18:24:37-05:00,18000,True,False,['base_frontend.py'],['9b67dff70dcce29402df95ab7313d3ba01cd81bd'],4,15,19,1,1.0,1.0,1.0
e6fccabc56a63beb91207d6dffb2c3fb5a9b7659,"API Introduce 2D frontend (torch)

So far, only for PyTorch. Note that this commit doesn't change any of the unit
tests to keep things simple. As a result, this breaks the 2D tests that rely on
the old backend framework being present.

We also remove backend-specific 2D tests. This will make the 2D tests
run for the new frontend, since the Scattering2D interface hasn't
changed. We keep these for now just to make sure we're backwards
compatible (since the default frontend is still the PyTorch one), but
once we're comfortable that the new, frontend-specific tests cover this,
we should remove these since they are redundant.",chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-11-25 23:00:52-05:00,18000,2020-02-18 18:24:37-05:00,18000,True,False,"['torch_frontend.py', '__init__.py', '__init__.py', 'backend_skcuda.py', 'backend_torch.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'scattering2d.py', 'filter_bank.py', '__init__.py', 'base_frontend.py', 'torch_frontend.py', 'scattering2d.py', 'test_scattering2d.py']",['9c883226cf98c9a0bc75529a9291d8eb6752b3e7'],1156,950,2106,14,0.6578947368421053,0.6710526315789473,0.0
99394b7d25cdcd217c62359f25b60fe8f7e2e22c,"TST Add new 2D frontend tests

This tests the torch frontend (with its various backends) and also tests the
standard Scattering2D interface.",chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-11-25 23:02:15-05:00,18000,2020-02-18 18:24:38-05:00,18000,True,False,"['test_torch_scattering2d.py', 'test_utils_scattering2d.py']",['e6fccabc56a63beb91207d6dffb2c3fb5a9b7659'],0,439,439,2,0.20557491289198607,0.7282229965156795,0.4529616724738676
3e4d2c9e16696269470f91e18c083c8562cd9c3e,DOC Add @MuawizChaudhary to author lists,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-26 12:03:26-05:00,18000,2020-02-18 18:24:38-05:00,18000,True,False,"['AUTHORS.md', 'torch_skcuda_backend.py', 'scattering2d.py']",['99394b7d25cdcd217c62359f25b60fe8f7e2e22c'],2,3,5,3,,,
e36f644e119b8c63feffb7add9426bf2339ea420,"TST Clean up new 2D torch tests

Cosmetic changes (whitespace, parentheses), removing print calls,
removing unneeded `else` clausees, and making error tests more specific.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-26 12:29:23-05:00,18000,2020-02-18 18:24:39-05:00,18000,True,False,['test_torch_scattering2d.py'],['3e4d2c9e16696269470f91e18c083c8562cd9c3e'],53,50,103,1,1.0,1.0,1.0
5eacb5df572cbc43dc3ece4fdbf3bd13c6da98c0,"API Change 2D frontend naming convention

Instead of `Scattering2DBase`, we have `ScatteringBase2D`, and so on.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-26 13:03:40-05:00,18000,2020-02-18 18:24:39-05:00,18000,True,False,"['__init__.py', 'base_frontend.py', 'torch_frontend.py', 'test_torch_scattering2d.py', 'test_utils_scattering2d.py']",['e36f644e119b8c63feffb7add9426bf2339ea420'],13,20,33,5,0.0,1.0,0.0
182588027e532fecc3c8a9136d684bfc823d0c6c,"REF `finalize` → `concatenate` (2D backend)

The latter is more specific and describes what the function is doing.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-26 13:09:35-05:00,18000,2020-02-18 18:24:40-05:00,18000,True,False,"['torch_backend.py', 'torch_skcuda_backend.py', 'scattering2d.py']",['5eacb5df572cbc43dc3ece4fdbf3bd13c6da98c0'],8,8,16,3,,,
a565830a18697d3024aa0c4edfa83ad89e1f2af3,REF Prefix private backend functions with _ (2D),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 16:48:24-05:00,18000,2020-02-18 18:24:40-05:00,18000,True,False,"['torch_backend.py', 'torch_skcuda_backend.py']",['182588027e532fecc3c8a9136d684bfc823d0c6c'],17,17,34,2,,,
4926608d6f88365c726fe50e87a3115fa010fea3,TST Rename test module for 2D frontend,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 16:53:51-05:00,18000,2020-02-18 18:24:41-05:00,18000,True,False,['test_frontend_scattering2d.py'],['a565830a18697d3024aa0c4edfa83ad89e1f2af3'],0,0,0,1,,,
69bb6d7b2ee2dc6fa1e1155783ef3b8a2e63ef93,DOC Add comment about torch padding bug (2D),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 16:56:51-05:00,18000,2020-02-18 18:24:41-05:00,18000,True,False,['torch_backend.py'],['4926608d6f88365c726fe50e87a3115fa010fea3'],0,3,3,1,,,
97fd0bcb035d980586b0b38e34b71278e432e4e8,DOC Remove sentence in 2D FourierSubsample doc,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 16:58:05-05:00,18000,2020-02-18 18:24:42-05:00,18000,True,False,['torch_backend.py'],['69bb6d7b2ee2dc6fa1e1155783ef3b8a2e63ef93'],2,1,3,1,,,
1b2ce3dc2df240358466b50c12b7bc58a7b8b1e4,"ENH Remove refs to A and B in backend errors (2D)

Also fix capitalization of CUDA and update the corresponding tests.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 17:01:36-05:00,18000,2020-02-18 18:24:42-05:00,18000,True,False,"['torch_backend.py', 'torch_skcuda_backend.py', 'test_torch_scattering2d.py']",['97fd0bcb035d980586b0b38e34b71278e432e4e8'],11,11,22,3,,,
4af002c59918486a46961515c9d8f8aadaf5d3b3,"REF Move __all__ declarations to the end (2D)

This way, the sequence is clearer: first define the functions, then
“export” them using the `__all__` list.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 17:06:34-05:00,18000,2020-02-18 18:24:43-05:00,18000,True,False,"['__init__.py', 'scattering2d.py', 'filter_bank.py', '__init__.py', 'base_frontend.py', 'torch_frontend.py']",['1b2ce3dc2df240358466b50c12b7bc58a7b8b1e4'],10,17,27,6,,,
9116a24853ecefaaa1ee9503944cb56cfae7bbeb,REF Remove loginfo() call in 2D frontend switcher,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 17:11:21-05:00,18000,2020-02-18 18:24:43-05:00,18000,True,False,"['__init__.py', 'torch_frontend.py']",['4af002c59918486a46961515c9d8f8aadaf5d3b3'],4,1,5,2,0.0,0.0,0.0
42ab366e1775a4cbddda5ee99b9f502f31a94574,DOC Clean up doc for ScatteringBase2D slightly,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 17:13:41-05:00,18000,2020-02-18 18:24:44-05:00,18000,True,False,['base_frontend.py'],['9116a24853ecefaaa1ee9503944cb56cfae7bbeb'],5,5,10,1,,,
a949c0d2f45350a56c1bb9ec7f41e5b6bdb85e34,"REF Avoid in-place filter register and load (2D)

Instead of having the methods modify the inputs, we now return the
filters and pass them to the core `scattering2d()` function.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 17:36:07-05:00,18000,2020-02-18 18:24:44-05:00,18000,True,False,['torch_frontend.py'],['42ab366e1775a4cbddda5ee99b9f502f31a94574'],21,40,61,1,0.0,0.0,1.0
26b1ee9edf41b235911a82fb7955cd2af880d7ba,"ENH Avoid copying in core 2D scattering code

The old behavior (pre-frontend) was to allocate an output array and fill
it up gradually with scattering coefficients as these were calculated.
With the frontend interface, this was replaced by construction of lists
of arrays that were concatenated at the end, resulting in an extra copy
operation that was not present before. As a result, performance dropped
by about 10%. This commit restores the old (pre-allocating) behavior.

Without the concatenation, we also need to explicitly code for batch
agnosticism by detecting the batch shape and reshaping the arrays. Since
this is a frontend-specific operation (and can be performed
independently of the core scattering code), it is done in the torch
frontend.

The `concatenate` backend primitive is no longer necessary and is
therefore removed.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 18:28:02-05:00,18000,2020-02-18 18:24:45-05:00,18000,True,False,"['torch_backend.py', 'torch_skcuda_backend.py', 'scattering2d.py', 'torch_frontend.py']",['a949c0d2f45350a56c1bb9ec7f41e5b6bdb85e34'],36,35,71,4,0.0,0.0,1.0
e2a7bad6c08e0e6cfb24e8457c1bb656624f611a,TST Remove redundant tests for 2D torch,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 22:04:20-05:00,18000,2020-02-18 18:24:45-05:00,18000,True,False,['test_torch_scattering2d.py'],['26b1ee9edf41b235911a82fb7955cd2af880d7ba'],20,3,23,1,1.0,0.5625,1.0
d4102be9821888dfbabc6b9c27e2cbc78944c5f3,"ENH Add contiguity checks for 2D torch backend

Want to have the same interface with respect to errors as the
torch_skcuda backend. Also make sure that the filter in the cdgmm test
is contigious.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 22:16:03-05:00,18000,2020-02-18 18:24:45-05:00,18000,True,False,"['torch_backend.py', 'test_torch_scattering2d.py']",['e2a7bad6c08e0e6cfb24e8457c1bb656624f611a'],5,11,16,2,0.5,0.5,0.5
0e8289191a4abb9f9a15d486cdccb0251be865e6,TST Extend contiguity test for 2D torch modulus,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-27 22:16:35-05:00,18000,2020-02-18 18:24:46-05:00,18000,True,False,['test_torch_scattering2d.py'],['d4102be9821888dfbabc6b9c27e2cbc78944c5f3'],4,3,7,1,1.0,0.0,1.0
f64366dace01e49afe835a2e236bf3927bd03222,"REF `_getDtype` → `_get_dtype` in 2D backend

Follows naming convention.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-28 11:21:42-05:00,18000,2020-02-18 18:24:46-05:00,18000,True,False,['torch_skcuda_backend.py'],['0e8289191a4abb9f9a15d486cdccb0251be865e6'],3,3,6,1,,,
014963415d1cbc895f8c6f9e7f161950e37dc42e,"REF Simplify `_get_dtype` in 2D backend

Instead of an `if`-`else` construction, we use a dictionary.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-11-28 11:23:36-05:00,18000,2020-02-18 18:24:47-05:00,18000,True,False,['torch_skcuda_backend.py'],['f64366dace01e49afe835a2e236bf3927bd03222'],4,4,8,1,0.0,0.0,0.0
47ec8477be7c1f9c003e5a72cd30e2693c54e79a,TST Set up `backends_devices` list for 2D torch,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-02 10:01:57-05:00,18000,2020-02-18 18:24:47-05:00,18000,True,False,['test_torch_scattering2d.py'],['014963415d1cbc895f8c6f9e7f161950e37dc42e'],5,13,18,1,,,
4eb7f60c15bed4e41feacbbc2561d468370bc2dd,"TST Parametrize 2D torch tests

In other words, we test all *compatible* combinations of backends and
devices (i.e., not 'torch_skcuda' with 'cpu') using the
`backends_devices` list, which contains compatible backend–device
tuples. This simplifies a lot of the testing code, avoiding `if`
statements to deal with special cases.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-02 10:06:31-05:00,18000,2020-02-18 18:24:48-05:00,18000,True,False,['test_torch_scattering2d.py'],['47ec8477be7c1f9c003e5a72cd30e2693c54e79a'],74,100,174,1,1.0,1.0,1.0
cfa28f4d07e7f89b7386ac825949110ad76d5563,"TST Add first-order scattering tests in 2D torch

Check that we can compute just the first-order scattering coefficients
and that these will agree with the first-order coefficients obtained
normally (when `max_order = 2`).",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-02 10:26:09-05:00,18000,2020-02-18 18:24:48-05:00,18000,True,False,['test_torch_scattering2d.py'],['4eb7f60c15bed4e41feacbbc2561d468370bc2dd'],0,8,8,1,0.0,1.0,1.0
5501721fdd87a86a07feb5ce3063367b87c2fc5c,TST Add test for Pad in 2D torch,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-02 11:41:46-05:00,18000,2020-02-18 18:24:48-05:00,18000,True,False,['test_torch_scattering2d.py'],['cfa28f4d07e7f89b7386ac825949110ad76d5563'],0,44,44,1,0.2962962962962963,1.0,1.0
4464e68d65174de154d92663c8d43589f834b2f9,"TST Extend FFT tests in 2D torch

Check that the FFT is correctly computed for a 2×2 image and check that
the correct errors are raised.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-03 10:54:26-05:00,18000,2020-02-18 18:24:49-05:00,18000,True,False,['test_torch_scattering2d.py'],['5501721fdd87a86a07feb5ce3063367b87c2fc5c'],1,29,30,1,0.05555555555555555,1.0,1.0
b6c26ed4f7df3fb16f8bd3c00cc63168413f29ac,"TST Extend CDGMM error tests in 2D torch

Make sure the correct errors are raised.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-03 11:14:01-05:00,18000,2020-02-18 18:24:49-05:00,18000,True,False,['test_torch_scattering2d.py'],['4464e68d65174de154d92663c8d43589f834b2f9'],0,20,20,1,0.7692307692307693,1.0,1.0
1feacd35b127f0c11250472a405fa6972730bcad,"TST Test device mismatch error CDGMM in 2D torch

If we have multiple GPUs, we have to make sure that both arrays are on
the same device when performing our CDGMM.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-03 11:23:41-05:00,18000,2020-02-18 18:24:50-05:00,18000,True,False,['test_torch_scattering2d.py'],['b6c26ed4f7df3fb16f8bd3c00cc63168413f29ac'],0,17,17,1,1.0,1.0,1.0
32729ed87d2bfcae861dbcf23b27729e8993b4e6,"FIX Add complex checks in 2D torch backend

Specifically, for the SubsampleFourier and Modulus primitives. These are
present in the torch_skcuda backend, but not in the vanilla torch
backend. For compatibility reasons, they should have the same errors.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-03 11:25:56-05:00,18000,2020-02-18 18:24:50-05:00,18000,True,False,['torch_backend.py'],['1feacd35b127f0c11250472a405fa6972730bcad'],0,6,6,1,1.0,1.0,0.5
0260da4a0b8b5cd2c5591d00c108c8e85da68978,"TST Test for complex check errors in 2D torch

SubsampleFourier and Modulus require complex inputs, so we make sure
that this is properly checked and errors are raised.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-03 11:28:35-05:00,18000,2020-02-18 18:24:50-05:00,18000,True,False,['test_torch_scattering2d.py'],['32729ed87d2bfcae861dbcf23b27729e8993b4e6'],0,10,10,1,0.0,1.0,1.0
3aeaabcd82bca0b580ef34e0b7149f5221e2f663,"STY Fix formatting of 2D torch tests

Replace double quotes with single quotes, remove extraneous comments,
blank lines, line widths, and so on.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-03 11:48:02-05:00,18000,2020-02-18 18:24:51-05:00,18000,True,False,['test_torch_scattering2d.py'],['0260da4a0b8b5cd2c5591d00c108c8e85da68978'],50,71,121,1,0.2857142857142857,1.0,1.0
a852f08fcf6679826771992fcf162c3691dff187,"TST Refactor device fetch to increase coverage

Always include CPU device, then add CUDA if available.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-03 11:56:15-05:00,18000,2020-02-18 18:24:51-05:00,18000,True,False,"['test_scattering2d.py', 'test_torch_scattering2d.py']",['3aeaabcd82bca0b580ef34e0b7149f5221e2f663'],7,5,12,2,,,
0eeb3b155924a46c151ede7402c7104e83b75746,"TST Add warning if skcuda backend is not available

Instead of silently passing.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-03 12:04:28-05:00,18000,2020-02-18 18:24:52-05:00,18000,True,False,['test_torch_scattering2d.py'],['a852f08fcf6679826771992fcf162c3691dff187'],1,1,2,1,,,
e65e9362f6cb26a2303113730712ebc051d1a9e8,ENH Use dictionary to get 2D frontend class name,chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-12-01 20:11:04-08:00,28800,2020-02-18 18:24:52-05:00,18000,True,False,['__init__.py'],['0eeb3b155924a46c151ede7402c7104e83b75746'],3,6,9,1,0.0,1.0,0.0
7ad5314d72d4817c4aab19186a18af7a81d7685d,ENH Don't call super constructor in ScatteringNumPy,chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-11-28 10:30:28-08:00,28800,2020-02-18 18:24:53-05:00,18000,True,False,['numpy_frontend.py'],['e65e9362f6cb26a2303113730712ebc051d1a9e8'],1,0,1,1,0.0,0.0,0.0
af6a53e0bcd8d5487716728dc2d17be8a8faf612,"ENH Add 2D NP frontend, backend and tests",chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-11-28 10:09:23-08:00,28800,2020-02-18 18:24:53-05:00,18000,True,False,"['numpy_backend.py', 'numpy_frontend.py', 'test_numpy_scattering2d.py']",['7ad5314d72d4817c4aab19186a18af7a81d7685d'],0,309,309,3,0.5431034482758621,0.7586206896551724,0.5431034482758621
c434f82cf3d0f77e723137790114713ca77a6851,ENH Remove print statement in 2D core,chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-12-05 16:50:22-05:00,18000,2020-02-18 18:24:53-05:00,18000,True,False,['scattering2d.py'],['af6a53e0bcd8d5487716728dc2d17be8a8faf612'],1,0,1,1,1.0,1.0,1.0
a223df52155dad06171c7f6699717657b2e3e427,REF Remove unneeded base class for ScatteringNumPy,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-01 11:06:23-05:00,18000,2020-02-18 18:24:54-05:00,18000,True,False,['numpy_frontend.py'],['c434f82cf3d0f77e723137790114713ca77a6851'],1,1,2,1,,,
a945401bd91c3fe976f4ab5973f8173d8fabbfe3,"STY Clean up 2D NP frontend, backend, and tests

Fix spacing and remove commented code.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-01 11:07:38-05:00,18000,2020-02-18 18:24:54-05:00,18000,True,False,"['numpy_backend.py', 'numpy_frontend.py', 'test_numpy_scattering2d.py']",['a223df52155dad06171c7f6699717657b2e3e427'],9,10,19,3,,,
acde64d830b4995c04c4f34288b8a69d2b963741,DOC Add @MuawizChaudhary to NP backend authors,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-01 11:08:17-05:00,18000,2020-02-18 18:24:55-05:00,18000,True,False,['numpy_backend.py'],['a945401bd91c3fe976f4ab5973f8173d8fabbfe3'],1,1,2,1,,,
8f45ae915d518dd6934315a3b5c624fe730b82ea,DOC Remove refs to torch in 2D NP tests,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-01 11:09:27-05:00,18000,2020-02-18 18:24:55-05:00,18000,True,False,['test_numpy_scattering2d.py'],['acde64d830b4995c04c4f34288b8a69d2b963741'],1,0,1,1,,,
6fe4cdffedd6941d99452cdcb0c2b7669bbe9d9e,DOC Fix doc for 2D NP SubsampleFourier,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-01 11:11:50-05:00,18000,2020-02-18 18:24:56-05:00,18000,True,False,['numpy_backend.py'],['8f45ae915d518dd6934315a3b5c624fe730b82ea'],5,3,8,1,,,
7ea909c9b2fd73c977e283cf6ae1b4295d9466d6,"FIX Simplify 2D NP SubsampleFourier

The batch agnosticism wasn't working, but isn't needed, so we remove it.
We also remove the definition of `out`, which is not needed.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-01 11:54:28-05:00,18000,2020-02-18 18:24:56-05:00,18000,True,False,['numpy_backend.py'],['6fe4cdffedd6941d99452cdcb0c2b7669bbe9d9e'],5,0,5,1,0.0,0.0,1.0
03b624571bf52bd2f434408a3d995740bf266270,TST Add tests for 2D NP frontend errors,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-01 11:25:50-05:00,18000,2020-02-18 18:24:56-05:00,18000,True,False,['test_numpy_scattering2d.py'],['7ea909c9b2fd73c977e283cf6ae1b4295d9466d6'],0,26,26,1,0.0,1.0,1.0
30bde79f6d24bd753fcbdce1bc4d5eb0a9a99d19,"TST Add backend list in 2D NP tests

Right now, there's only one backend, but this will simplify extending
tests to new backends in the future.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-01 11:30:13-05:00,18000,2020-02-18 18:24:57-05:00,18000,True,False,['test_numpy_scattering2d.py'],['03b624571bf52bd2f434408a3d995740bf266270'],5,15,20,1,0.0,1.0,1.0
009ad04b95f8d623925db6ec30da4eb4e33d026c,"TST Extend 2D NP tests

Add tests for `Modulus`, `SubsampleFourier`, `CDGMM`, `FFT`,
`empty_like`, `Pad`, and `unpad`. Also test first-order scattering.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-01 11:38:46-05:00,18000,2020-02-18 18:24:57-05:00,18000,True,False,['test_numpy_scattering2d.py'],['30bde79f6d24bd753fcbdce1bc4d5eb0a9a99d19'],0,152,152,1,0.9425287356321839,1.0,0.9540229885057471
e22767b6ed8bc890a45b7c157827b97cc6618b3c,REF Remove batch agnosticism in 2D NP Pad,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-01 22:39:25-05:00,18000,2020-02-18 18:24:58-05:00,18000,True,False,"['numpy_backend.py', 'test_numpy_scattering2d.py']",['009ad04b95f8d623925db6ec30da4eb4e33d026c'],11,8,19,2,0.0,0.0,0.0
91d5e2d56c92180415247023fa535f69914a3587,TST Add test for batch shape agnosticism in 2D NP,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-01 22:51:10-05:00,18000,2020-02-18 18:24:58-05:00,18000,True,False,['test_numpy_scattering2d.py'],['e22767b6ed8bc890a45b7c157827b97cc6618b3c'],0,31,31,1,0.0,1.0,1.0
ce4e130597534842ef09ab4e537706616cdba538,"ENH Add error checks for 2D NP cdgmm

The errors are now compatible with those of the torch backend (excluding
issues relating to CUDA tensors and checks on precision).",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-03 12:17:46-05:00,18000,2020-02-18 18:24:59-05:00,18000,True,False,['numpy_backend.py'],['91d5e2d56c92180415247023fa535f69914a3587'],0,18,18,1,1.0,0.0,0.36363636363636365
ff2203cc277a29f82c16c75fb5481118224b12ec,"TST Make sure we use complex arrays in 2D NP tests

Need to make sure that `empty` arrays have a complex dtype to pass the
test.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-03 12:35:21-05:00,18000,2020-02-18 18:24:59-05:00,18000,True,False,['test_numpy_scattering2d.py'],['ce4e130597534842ef09ab4e537706616cdba538'],1,2,3,1,1.0,1.0,1.0
16b5747e0936d432c3c3c6806218dcddaea2c2f5,TST Add tests for new 2D NP CDGMM errors,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-03 12:40:33-05:00,18000,2020-02-18 18:24:59-05:00,18000,True,False,['test_numpy_scattering2d.py'],['ff2203cc277a29f82c16c75fb5481118224b12ec'],0,15,15,1,0.0,1.0,1.0
c653518309f77382acae9d250921398d6053d74d,"ENH Make complex dtype more flexible in 2D NP test

Instead of checking for a specific datatype, we verify whether the array
is complex or not.",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2019-12-03 19:50:29+01:00,-3600,2020-02-18 18:25:03-05:00,18000,True,False,['test_numpy_scattering2d.py'],['16b5747e0936d432c3c3c6806218dcddaea2c2f5'],1,1,2,1,,,
87189ab7f73b1e43d7ff7b599100e740955469aa,REF Remove unused imports in 2D NP frontend,edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2019-12-03 19:32:50+01:00,-3600,2020-02-18 18:25:04-05:00,18000,True,False,['numpy_frontend.py'],['c653518309f77382acae9d250921398d6053d74d'],2,0,2,1,,,
c4c513a25c46dae17a8c463581bc12f52f1c6f62,"REF Don't insert unneeded axis in 2D unpad

Specifically, we remove the calls to `unsqueeze` (in the torch backends)
and `expand_dims` (in the NP backend), which means we don't have to call
`squeeze` in the core to fit our outputs into the array. Fixes #463.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-06 14:47:57-05:00,18000,2020-02-18 18:25:04-05:00,18000,True,False,"['numpy_backend.py', 'torch_backend.py', 'scattering2d.py', 'test_numpy_scattering2d.py', 'test_torch_scattering2d.py']",['87189ab7f73b1e43d7ff7b599100e740955469aa'],11,11,22,5,,,
bc0a97e62a0340b4e440c054fedc0ea98fd4eb73,"REF Construct lists of coefficients in 2D core

This is instead of indexing the output array directly. This is slightly
less efficient in NP and Torch, but seems to be more efficient in TF,
since item assignment is not permitted there.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-06 15:57:35-05:00,18000,2020-02-18 18:25:05-05:00,18000,True,False,"['numpy_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'scattering2d.py']",['c4c513a25c46dae17a8c463581bc12f52f1c6f62'],16,29,45,4,1.0,1.0,1.0
2b45f84d90409940c03782fc14dd312405ed9539,"REF Remove empty_like from 2D backend

No longer needed now that we have `concatenate` (again).",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-06 16:04:10-05:00,18000,2020-02-18 18:25:05-05:00,18000,True,False,"['numpy_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'test_numpy_scattering2d.py']",['bc0a97e62a0340b4e440c054fedc0ea98fd4eb73'],24,4,28,4,0.0,0.0,0.0
7f73362859c8a249745786372e99e62c6712f455,TST Test new concatenate in 2D backends,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-06 16:07:57-05:00,18000,2020-02-18 18:25:05-05:00,18000,True,False,"['test_numpy_scattering2d.py', 'test_torch_scattering2d.py']",['2b45f84d90409940c03782fc14dd312405ed9539'],1,28,29,2,1.0,1.0,1.0
35ff6982fcb3fecb25a574bd6706dc26b20fac03,"MAINT fft

Removing the FFT normalization",Edouard Oyallon,edouard.oyallon@lip6.fr,Joakim Andén,janden@flatironinstitute.org,2019-12-10 00:04:06+01:00,-3600,2020-02-18 18:25:06-05:00,18000,True,False,"['numpy_backend.py', 'torch_backend.py', 'filter_bank.py', 'test_numpy_scattering2d.py', 'test_torch_scattering2d.py']",['7f73362859c8a249745786372e99e62c6712f455'],9,12,21,5,0.0,1.0,1.0
317c8eb244dd703b99bc100cf77ee22b7423b67b,"ENH Add 2D TF frontend, backend, and tests",chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-12-03 15:43:41-08:00,28800,2020-02-18 18:25:07-05:00,18000,True,False,"['tensorflow_backend.py', 'tensorflow_frontend.py', 'test_tensorflow_scattering2d.py']",['35ff6982fcb3fecb25a574bd6706dc26b20fac03'],0,538,538,3,0.5,0.837037037037037,0.7888888888888889
45f94cec5ef005e04246f34406833ca0228eb35f,REF Remove version check in TF frontend,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-11 11:37:38-05:00,18000,2020-02-18 18:25:07-05:00,18000,True,False,['tensorflow_frontend.py'],['317c8eb244dd703b99bc100cf77ee22b7423b67b'],5,0,5,1,,,
80872282017150e821ecdd7249f20bae6259d956,DOC Add @MuawizChaudhary to authors of 2D TF,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2019-12-11 12:08:49-05:00,18000,2020-02-18 18:25:07-05:00,18000,True,False,['tensorflow_backend.py'],['45f94cec5ef005e04246f34406833ca0228eb35f'],1,1,2,1,,,
d081b892b0d86922a591fe98d7353d61e95d66d4,"MAINT follow PEP 440 formatting

follows PEP 440 formatting",Vincent Lostanlen,vincent.lostanlen@nyu.edu,Joakim Andén,janden@flatironinstitute.org,2019-12-11 19:34:02-05:00,18000,2020-02-18 18:25:08-05:00,18000,True,False,['version.py'],['80872282017150e821ecdd7249f20bae6259d956'],1,1,2,1,,,
5904b2c10f097ac68e1bb0365dc5415a7f13963f,"DOC Docstring of subsamplefourier

Fix and homogenize subsampling description of `SubsampleFourier`
docstrings within `scattering2d` backend modules (change `2**k` to `k`).",anakin-datawalker,36677060+anakin-datawalker@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2020-01-16 23:15:09+01:00,-3600,2020-02-18 18:25:08-05:00,18000,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py']",['d081b892b0d86922a591fe98d7353d61e95d66d4'],10,10,20,4,,,
a6624214ebc37b1e5b84660d12e030f2883af15b,MAINT no longer pass unknown globals and locals (#485),MuawizChaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2020-01-23 10:07:02-08:00,28800,2020-02-18 18:25:09-05:00,18000,True,False,['__init__.py'],['5904b2c10f097ac68e1bb0365dc5415a7f13963f'],1,1,2,1,,,
0e316123e2bbd016a74918daf708bc65a6102e2f,FIX Add missing __init__ files (2D) (#495),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-23 16:35:38-05:00,18000,2020-02-18 18:25:09-05:00,18000,True,False,"['__init__.py', '__init__.py', '__init__.py']",['a6624214ebc37b1e5b84660d12e030f2883af15b'],0,0,0,3,,,
b30590248ac341f2beabeda96c9da75a804cb12e,"API Introduce 1D frontend (torch)

So far, only for PyTorch.",chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2019-12-16 13:52:22-08:00,28800,2020-02-18 18:25:10-05:00,18000,True,False,"['__init__.py', '__init__.py', 'backend_skcuda.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'scattering1d.py', '__init__.py', 'base_frontend.py', 'torch_frontend.py', 'scattering1d.py', 'test_filters_scattering1d.py', 'test_scattering1d.py', 'test_torch_scattering1d.py', 'test_utils.py', 'test_utils_scattering1d.py', 'utils.py']",['0e316123e2bbd016a74918daf708bc65a6102e2f'],1844,1725,3569,16,0.0,1.0,0.0
46e98aa801b7a66a025dc771b865b2f97fc630ae,"FIX Add missing __init__.py files

These are needed for Python to recognize the folders as packages (at
least during `setup.py install`). Specifically, we use `find_packages`
(from `setuptools`) in `setup.py` instead of `find_namespace_packages`,
so any folders that do not contain an `__init__.py` file are ignored.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-23 16:18:38-05:00,18000,2020-02-18 18:25:11-05:00,18000,True,False,"['__init__.py', '__init__.py']",['b30590248ac341f2beabeda96c9da75a804cb12e'],0,0,0,2,,,
eddb4e3a445ee41c7a7a3bbf9f9ad6d9e21677a7,TST Remove unneeded imports from 2D and 3D tests,edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-23 21:23:08-05:00,18000,2020-02-18 18:25:11-05:00,18000,True,False,"['test_scattering2d.py', 'test_tensorflow_scattering2d.py', 'test_scattering3d.py']",['46e98aa801b7a66a025dc771b865b2f97fc630ae'],3,0,3,3,,,
1527c8c1e4b5cfa59703d7fd6c91d89310db9a15,"TST No torch dependency for non-torch frontends

Previously, the sample test data was stored in PyTorch data files. By
moving these to NumPy `.npz` files, we are no longer dependent on torch
to run the tests (except for the torch-specific tests, of course).",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-23 14:34:25-05:00,18000,2020-02-18 18:25:12-05:00,18000,True,False,"['test_data_1d.npz', 'test_data_1d.pt', 'test_torch_scattering1d.py', 'test_data_2d.npz', 'test_numpy_scattering2d.py', 'test_scattering2d.py', 'test_tensorflow_scattering2d.py', 'test_torch_scattering2d.py', 'test_data_3d.npz', 'test_scattering3d.py']",['eddb4e3a445ee41c7a7a3bbf9f9ad6d9e21677a7'],189,41,230,10,1.0,0.35353535353535354,0.5151515151515151
a1fa057d5ad9fd232ba4c48683efc323b27ced92,FIX Make sure PendingDeprecationWarning is shown,edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-23 16:26:13-05:00,18000,2020-02-18 18:25:12-05:00,18000,True,False,['__init__.py'],['1527c8c1e4b5cfa59703d7fd6c91d89310db9a15'],0,2,2,1,,,
9a4109ddfdf6b1c371ca32384063f42f8c662e53,"FIX Make plot_filters example run again

Specifically, the filters are stored as NP arrays now, so no need to
take the real part manually.",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-23 14:59:08-05:00,18000,2020-02-18 18:25:13-05:00,18000,True,False,['plot_filters.py'],['a1fa057d5ad9fd232ba4c48683efc323b27ced92'],2,2,4,1,,,
e8d72d49b428b8812e6831c14c933d3dc8ca7ab0,"ENH Rename torch-specific examples

To signify that examples run with the `torch` frontend, they are
suffixed with `_torch`.",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-23 15:42:25-05:00,18000,2020-02-18 18:25:13-05:00,18000,True,False,"['cifar_resnet_torch.py', 'cifar_torch.py', 'compute_speed_torch.py', 'long_mnist_classify_torch.py', 'plot_invert_scattering_torch.py', 'regularized_inverse_scattering_MNIST_torch.py']",['9a4109ddfdf6b1c371ca32384063f42f8c662e53'],5,2,7,6,,,
93410d532114c2e4a6d829977e4050f1ff541291,"ENH Make plot_invert_scattering_disk work on NP

Instead of relying on PyTorch. Also do some minor cleanup.",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-23 21:53:39-05:00,18000,2020-02-18 18:25:14-05:00,18000,True,False,['plot_scattering_disk.py'],['e8d72d49b428b8812e6831c14c933d3dc8ca7ab0'],12,7,19,1,,,
f85b1b9b81228b332ad7ea17355effe1aaf4236e,API Add 1D NumPy frontend,edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-23 17:22:40-05:00,18000,2020-02-18 18:25:14-05:00,18000,True,False,"['numpy_backend.py', 'torch_backend.py', 'scattering1d.py', 'numpy_frontend.py', 'test_numpy_scattering1d.py']",['93410d532114c2e4a6d829977e4050f1ff541291'],2,320,322,5,0.6081081081081081,0.6081081081081081,0.7702702702702703
0fb8251ef314b2e1207ce29ec92b2ead4e5e7111,API Add 1D TF backend,edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-23 23:49:24-05:00,18000,2020-02-18 18:25:15-05:00,18000,True,False,"['tensorflow_backend.py', 'tensorflow_frontend.py', 'test_tensorflow_scattering1d.py']",['f85b1b9b81228b332ad7ea17355effe1aaf4236e'],0,326,326,3,0.6282051282051282,0.6282051282051282,0.7564102564102564
88d31218bf83e75905dff11f1d704b7f9c2afd52,"ENH Simplify wrapper classes

Move the basic wrapping code from `Scattering1D` and `Scattering2D` into
the (new) `Scattering` class. Also enable new syntactic sugar imports
like

```
from kymatio.tensorflow import Scattering2D
S = Scattering2D(J=J, shape=shape)
```

which doesn't require us to specify the `frontend` kwarg.",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-24 06:49:52-05:00,18000,2020-02-18 18:25:15-05:00,18000,True,False,"['__init__.py', 'numpy.py', '__init__.py', '__init__.py', 'tensorflow.py', 'torch.py']",['0fb8251ef314b2e1207ce29ec92b2ead4e5e7111'],62,59,121,6,1.0,0.0,1.0
d05d5dd46bc836d7daec1efec1fd0a5a3adf3f32,"TST Benchmark with asv

To run the benchmarks, run `asv run` from the `benchmarks` folder.",Vincent Lostanlen,vincent.lostanlen@gmail.com,Joakim Andén,janden@flatironinstitute.org,2020-01-23 17:12:28-05:00,18000,2020-02-18 18:25:16-05:00,18000,True,False,"['.gitignore', 'asv.conf.json', 'bench_backend_2d.py', '__init__.py', 'common.py', 'scattering1d.py', 'scattering2d.py', 'scattering3d.py']",['88d31218bf83e75905dff11f1d704b7f9c2afd52'],65,304,369,8,1.0,1.0,0.0
04b23df38e5bd0a77dab4bfa5798421b741929db,"FFT SciPy (#509)

ENH Use SciPy FFTs and IFFTs",MuawizChaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2020-01-24 14:17:40-08:00,28800,2020-02-18 18:25:16-05:00,18000,True,False,"['numpy_backend.py', 'filter_bank.py', 'numpy_backend.py', 'filter_bank.py']",['d05d5dd46bc836d7daec1efec1fd0a5a3adf3f32'],11,13,24,4,,,
82c6a31ddcd1ced474c5d6620b2053f9db600e5e,ENH Make 1D examples work in new framework,edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-24 00:33:15-05:00,18000,2020-02-18 18:25:17-05:00,18000,True,False,"['compute_speed_torch.py', 'plot_classif_torch.py', 'plot_real_signal.py', 'plot_synthetic.py']",['04b23df38e5bd0a77dab4bfa5798421b741929db'],37,32,69,4,,,
0a8619ecf57eb68021e6aef48aefdc8cfa0795ed,"ENH Clean up 1D examples

Remove a lot of the old code needed for PyTorch and batch shape
compatibility.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-25 18:01:41-05:00,18000,2020-02-18 18:25:17-05:00,18000,True,False,"['plot_real_signal.py', 'plot_synthetic.py']",['82c6a31ddcd1ced474c5d6620b2053f9db600e5e'],48,34,82,2,1.0,0.0,1.0
bdd662cd5b2bab08b6807f53659dd54df6c13d69,ENH Use new syntactic sugar in 1D examples,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-25 18:02:09-05:00,18000,2020-02-18 18:25:18-05:00,18000,True,False,"['plot_real_signal.py', 'plot_synthetic.py']",['0a8619ecf57eb68021e6aef48aefdc8cfa0795ed'],4,4,8,2,,,
267b544936dcf6e0e5cdee50487bcc8f8bc47282,"ENH Simplify display in 1D real signal

Put the scattering coefficients in one big figure.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-25 18:04:02-05:00,18000,2020-02-18 18:25:18-05:00,18000,True,False,['plot_real_signal.py'],['bdd662cd5b2bab08b6807f53659dd54df6c13d69'],3,4,7,1,,,
0ad0300ca8121f9719546dd24877c881da4c9b39,ENH Regression of synthetic signal demo,lylyhan,30601012+lylyhan@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2020-01-24 12:20:18-05:00,18000,2020-02-18 18:25:19-05:00,18000,True,False,['plot_and_regress_synthetic.py'],['267b544936dcf6e0e5cdee50487bcc8f8bc47282'],0,220,220,1,0.05,1.0,0.05
1ee74e2308af6b2c3e475bd3a2cf3ed8ce5cb32f,"REF Clean up 1D reconstruction example

Fix some imports, whitespace, showing plots, rename to “reconstruct”
instead of “regress.” Also, only do MSE loss (no KL divergence).",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-25 18:18:20-05:00,18000,2020-02-18 18:25:19-05:00,18000,True,False,"['plot_and_regress_synthetic.py', 'plot_reconstruct_torch.py']",['0ad0300ca8121f9719546dd24877c881da4c9b39'],220,141,361,2,0.926829268292683,0.0,0.926829268292683
0ee8c00c8e4759edeeaebea99a4a10a4be9680db,"ENH Pytorch 3D Back/Frontend

* initial commit for the 3D backendfrontend in torch

* 3D is here

* MAINT changed all instaces of size to shape

* STY changed and added puncutation to error messages

* MAINT changed all instances of size to shape

* STY removed backslash

* MAINT removed import method using unknown globals and locals, use import module now

* STY removed and added blank space

* STY removed and added blank lines. changed imports

* MAINT changed all instances of size to shape

* MAINT removed useless backend instaniation

* MAINT remove use of locals

* STY added and removed blank lines

* TST Fix 3D standard test

* ENH Do proper batch reshaping in 3D

* ENH Use concatenate backend primitive in 3D torch

This way, we do one big concatenate at the end and therefore do not need
the intermediate calls to `aggregate` and `finalize`.

* TST Remove old 3D tests

* FIX Make new concatenate work for skcuda

* TST Fix 3D torch test for GPU

* REF Remove remnants of finalize and aggregate

* STY Fix backend tuple creation

* FIX Make torch_skcuda backend work again

* STY Clean up core 3D code

* ENH Remove to_complex from skcuda backend

* REF Import identical backend functions from torch

* DOC Capitalize CPU in error messages

* REF Remove unneeded calls in 3D torch init

* STY+REF Address minor comments from PR

* REF Use Scattering for boilerplate

* DOC No rights reserved

* DOC Change 3D doc back to actual 3D doc

Was 2D doc for some reason.

* REF+STY Addressing some of Michael's comments

And others.

Co-authored-by: MuawizChaudhary <39755015+MuawizChaudhary@users.noreply.github.com>
Co-authored-by: Joakim Andén <janden@flatironinstitute.org>",Edouard Oyallon,edouard.oyallon@lip6.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-25 21:24:10-05:00,18000,2020-02-18 18:25:20-05:00,18000,True,False,"['__init__.py', '__init__.py', 'backend_skcuda.py', 'backend_torch.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'scattering3d.py', 'filter_bank.py', '__init__.py', 'base_frontend.py', 'torch_frontend.py', 'scattering3d.py', 'test_scattering3d.py', 'test_torch_scattering3d.py', 'test_utils_scattering3d.py', 'utils.py']",['1ee74e2308af6b2c3e475bd3a2cf3ed8ce5cb32f'],1009,1040,2049,16,0.0,1.0,0.0
e1996e7e68f4d24805aa387b0e49a47136ff6b6d,"TST Remove skcuda stage in Jenkins

Since we no longer depend on the KYMATIO_BACKEND environment variable,
all the tests are performed in the torch stage, so we remove the skcuda
stage and rename the torch stage to main.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-25 21:40:07-05:00,18000,2020-02-18 18:25:20-05:00,18000,True,False,['Jenkinsfile'],['0ee8c00c8e4759edeeaebea99a4a10a4be9680db'],22,2,24,1,,,
a3828e365eeab788ea5299eccbf5fe1b17ee3d34,ENH Make 3D torch frontend batch shape agnostic,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-26 11:01:39-05:00,18000,2020-02-18 18:25:21-05:00,18000,True,False,['torch_frontend.py'],['e1996e7e68f4d24805aa387b0e49a47136ff6b6d'],3,6,9,1,0.0,0.0,1.0
17847c080307780920590f1de49a240c30841288,TST Test for batch shape agnosticism in 3D torch,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-26 11:01:57-05:00,18000,2020-02-18 18:25:21-05:00,18000,True,False,['test_torch_scattering3d.py'],['a3828e365eeab788ea5299eccbf5fe1b17ee3d34'],0,45,45,1,0.0,1.0,1.0
5c6c50274c11ecbf9be54052394922fabde80923,"ENH adding the support of vectorize for 2D

* adding the support of vectorize

* ENH Always form dictionary in 2D core

Then, if needed, vectorize (concatenate) it.

Co-authored-by: Joakim Andén <janden@flatironinstitute.org>",Edouard Oyallon,edouard.oyallon@lip6.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-26 12:32:54-05:00,18000,2020-02-18 18:25:22-05:00,18000,True,False,"['scattering2d.py', 'base_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['17847c080307780920590f1de49a240c30841288'],24,22,46,5,1.0,1.0,1.0
fbf9312103bdcb73a8d9b25e1f47752c4d09e42a,"TST Normalize benchmarks

Make sure they have the same number of samples and therefore give
comparable running times. Fixes #359.",Vincent Lostanlen,vincent.lostanlen@gmail.com,Joakim Andén,janden@flatironinstitute.org,2020-01-25 22:11:51-05:00,18000,2020-02-18 18:25:22-05:00,18000,True,False,"['bench_scattering1d.py', 'bench_scattering2d.py', 'bench_scattering3d.py', 'common.py']",['5c6c50274c11ecbf9be54052394922fabde80923'],26,39,65,4,1.0,1.0,1.0
0e4db9450cb81133daa8559bca675f7e80f35466,"ENH Removal of torch averaging functions

* MAINT removed agregate functions without a paper

* MAINT Removed subsample function

* MAINT fixed output sizes being incorrect

* MAINT made local the default averaging

* MAINT fixed removed averaging being the default. integral is now the default averaging

* MAINT base_frontend now has integral as default averaging

* MAINT removed imports in skcuda backend

* TST fixed batch agnosticism test

* ENH removed redundant FFT operations",MuawizChaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Joakim Andén,janden@flatironinstitute.org,2020-01-26 11:46:37-08:00,28800,2020-02-18 18:25:23-05:00,18000,True,False,"['torch_backend.py', 'torch_skcuda_backend.py', 'scattering3d.py', 'base_frontend.py', 'torch_frontend.py', 'test_torch_scattering3d.py']",['fbf9312103bdcb73a8d9b25e1f47752c4d09e42a'],152,18,170,6,0.8846153846153846,0.4230769230769231,0.3269230769230769
37b7f33f2cad17c9e43f3248121bfdb703f529f3,"TST Don't import skcuda backend inside try (#533)

This way, we don't silently fail when the skcuda backend module has
errors in it. Fixes #518.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-26 15:10:39-05:00,18000,2020-02-18 18:25:23-05:00,18000,True,False,"['test_torch_scattering1d.py', 'test_torch_scattering2d.py', 'test_torch_scattering3d.py']",['0e4db9450cb81133daa8559bca675f7e80f35466'],10,22,32,3,,,
fa3249ff4e9776bb90e5adbb1d61f44da242cc34,STY Clean up MNIST classification example,Edouard Oyallon,edouard.oyallon@lip6.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-26 19:45:25-05:00,18000,2020-02-18 18:25:24-05:00,18000,True,False,['long_mnist_classify_torch.py'],['37b7f33f2cad17c9e43f3248121bfdb703f529f3'],3,3,6,1,,,
bc053f32e98c7399807949484768358a7042a1c4,"REF Import SciPy FFTs directly in filter banks

This way, the filter bank modules are independent of the backend
framework.",Edouard Oyallon,edouard.oyallon@lip6.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-26 19:47:00-05:00,18000,2020-02-18 18:25:24-05:00,18000,True,False,"['filter_bank.py', 'filter_bank.py']",['fa3249ff4e9776bb90e5adbb1d61f44da242cc34'],3,2,5,2,,,
69f132af14b1108ba70ae3ac9c945e4b0bb913b0,"REF Grand unification of the backends

For 1D and 2D.",Edouard Oyallon,edouard.oyallon@lip6.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-26 19:48:10-05:00,18000,2020-02-18 18:25:25-05:00,18000,True,False,"['__init.py', 'base_backend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'scattering1d.py', 'torch_frontend.py', 'test_torch_scattering1d.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'test_numpy_scattering2d.py', 'test_tensorflow_scattering2d.py', 'test_torch_scattering2d.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'test_torch_backend.py']",['bc053f32e98c7399807949484768358a7042a1c4'],858,671,1529,23,1.0,0.782608695652174,0.6666666666666666
f56e7a4141b5b67a1cd9f0ed45608e7a788a9c4a,"ENH Add 3D NP frontend

Co-authored-by: MuawizChaudhary <39755015+MuawizChaudhary@users.noreply.github.com>",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-25 21:50:52-05:00,18000,2020-02-18 18:25:26-05:00,18000,True,False,"['numpy_backend.py', 'numpy_frontend.py', 'test_numpy_scattering3d.py']",['69f132af14b1108ba70ae3ac9c945e4b0bb913b0'],0,399,399,3,0.46206896551724136,0.7034482758620689,0.7793103448275862
a75200b19728f4777ddcfefceefbc9e0c0058ec0,"API Add 3D TensorFlow frontend

Co-authored-by: Edouard Oyallon <edouard.oyallon@lip6.fr>
Co-authored-by: Joakim Andén <janden@flatironinstitute.org>",chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2020-01-26 15:09:15-08:00,28800,2020-02-18 18:25:26-05:00,18000,True,False,"['tensorflow_backend.py', 'tensorflow_frontend.py', 'test_tensorflow_scattering3d.py']",['f56e7a4141b5b67a1cd9f0ed45608e7a788a9c4a'],0,357,357,3,0.4888888888888889,0.8,0.8
d2567326ddf73402c641e8d98020b5ccf0f37a39,TST Upgrade Travis to 18.04 (bionic),Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-27 16:13:47-05:00,18000,2020-02-18 18:25:27-05:00,18000,True,False,['.travis.yml'],['a75200b19728f4777ddcfefceefbc9e0c0058ec0'],1,1,2,1,,,
c38147af419a7d7c06ffa6866e5124030e172617,ENH Absolute path name (#540),Edouard Oyallon,edouard.oyallon@lip6.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-27 17:13:15-05:00,18000,2020-02-18 18:25:27-05:00,18000,True,False,['plot_scattering_disk.py'],['d2567326ddf73402c641e8d98020b5ccf0f37a39'],3,3,6,1,,,
3d19004674262d52e7bf9468c8bce454d56bbde5,ENH Make 3D frontends aliases available,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-27 22:12:05-05:00,18000,2020-02-18 18:25:28-05:00,18000,True,False,"['numpy.py', 'tensorflow.py', 'torch.py']",['c38147af419a7d7c06ffa6866e5124030e172617'],3,9,12,3,,,
35eb7716420d9b3f7046e6a14029b36a0b9eb1a9,REF Remove redundant __call__ functions in TF,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-29 14:27:02-05:00,18000,2020-02-18 18:25:28-05:00,18000,True,False,"['tensorflow_frontend.py', 'tensorflow_frontend.py']",['3d19004674262d52e7bf9468c8bce454d56bbde5'],8,0,8,2,0.0,0.0,0.0
1fc072ffc6aa17fa4b2efcd126148713faf388e4,DOC Template the frontend documentation,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-27 15:28:04-05:00,18000,2020-02-18 18:25:29-05:00,18000,True,False,"['numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'base_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'base_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'base_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['35eb7716420d9b3f7046e6a14029b36a0b9eb1a9'],248,464,712,15,1.0,1.0,1.0
d89b7cf5ad014899f739e71f52c2d49354fb1c38,ENH Improve 3D example,edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-27 09:10:45-05:00,18000,2020-02-18 18:25:29-05:00,18000,True,False,['scattering3d_qm7_torch.py'],['1fc072ffc6aa17fa4b2efcd126148713faf388e4'],23,16,39,1,0.75,0.0,0.75
b5b5ae55755e6f2276984c5d42282f810d8bb1db,REF Add m2r to optional requirements,edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-27 08:59:08-05:00,18000,2020-02-18 18:25:30-05:00,18000,True,False,['requirements_optional.txt'],['d89b7cf5ad014899f739e71f52c2d49354fb1c38'],1,2,3,1,,,
0b7b9badb95d00ae18253023537afe362547bb9c,"DOC Update the documentation

Rewrite narrative and include the new templated docs in the API
reference.",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-26 21:41:51-05:00,18000,2020-02-18 18:25:30-05:00,18000,True,False,"['README.md', 'codereference.rst', 'conf.py', 'developerguide.rst', 'index.rst', 'installation.rst', 'quickstart.rst', 'numpy.py', 'base_frontend.py', 'base_frontend.py', 'base_frontend.py', 'tensorflow.py', 'torch.py', 'setup.py']",['b5b5ae55755e6f2276984c5d42282f810d8bb1db'],229,145,374,14,,,
60c2e01bfc93bc01da21b79ebe9f222e601e1931,"API Make `vectorize = False` output a list in 2D

Instead of a dictionary. Then make sure it's properly reshaped by the
frontend.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-28 16:19:45-05:00,18000,2020-02-18 18:25:31-05:00,18000,True,False,"['scattering2d.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['0b7b9badb95d00ae18253023537afe362547bb9c'],19,41,60,4,0.0,0.0,0.8947368421052632
82c7dbed39a2aa1e1f980cda78cc31a823dbe349,"API Change list output to list of dicts in 2D

Instead of list of arrays.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-28 16:27:33-05:00,18000,2020-02-18 18:25:31-05:00,18000,True,False,"['scattering2d.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['60c2e01bfc93bc01da21b79ebe9f222e601e1931'],10,24,34,4,0.0,0.0,0.2727272727272727
b8fa8998b1a5b0f14cde7b626b35f2ad5fc7f935,API Add out_type in 2D frontends,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-28 16:50:05-05:00,18000,2020-02-18 18:25:32-05:00,18000,True,False,"['scattering2d.py', 'base_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['82c7dbed39a2aa1e1f980cda78cc31a823dbe349'],16,32,48,5,0.46153846153846156,0.46153846153846156,0.46153846153846156
127aacac0e9cd09b1e1f894956fe8370c76b81f6,"REF Construct a list of dictionaries in 1D core

This will make it easier to create the new `'list'` output type.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-29 11:58:58-05:00,18000,2020-02-18 18:25:33-05:00,18000,True,False,['scattering1d.py'],['b8fa8998b1a5b0f14cde7b626b35f2ad5fc7f935'],25,22,47,1,1.0,1.0,1.0
dce008fdb854987bf596f084024df3117a4c06ec,API Add out_type for 1D,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-29 12:47:12-05:00,18000,2020-02-18 18:25:33-05:00,18000,True,False,"['scattering1d.py', 'base_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['127aacac0e9cd09b1e1f894956fe8370c76b81f6'],27,92,119,5,1.0,1.0,1.0
90ad24cca02aea7108a864b1e5a5f1198478e1ed,"FIX Improve options check in 1D frontends

Specifically, if `average` is `False`, we just need `vectorize` to be
`False` or `out_type` to be `'list'`, which makes more sense given the
new `out_type` option.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-29 12:52:23-05:00,18000,2020-02-18 18:25:34-05:00,18000,True,False,"['numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['dce008fdb854987bf596f084024df3117a4c06ec'],12,18,30,3,0.0,0.0,1.0
a90c573a8c86e095afa64835f814cf58f82b200c,API Deprecate vectorize in 1D frontends,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-29 12:58:28-05:00,18000,2020-02-18 18:25:34-05:00,18000,True,False,"['numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['90ad24cca02aea7108a864b1e5a5f1198478e1ed'],0,21,21,3,0.0,0.0,1.0
73eef439f0bdb5d86d3550ef6ad8e110bea9684a,TST Update for new nvidia docker with 2 GPUs,Dylan Simon,dylan@dylex.net,Joakim Andén,janden@flatironinstitute.org,2020-01-29 15:59:00-05:00,18000,2020-02-18 18:25:35-05:00,18000,True,False,['Jenkinsfile'],['a90c573a8c86e095afa64835f814cf58f82b200c'],0,1,1,1,,,
c7ba23686991522c4b34c3fac318129b615c6c5a,TST Pin torch < 1.3 to support K40,Dylan Simon,dylan@dylex.net,Joakim Andén,janden@flatironinstitute.org,2020-01-29 16:57:14-05:00,18000,2020-02-18 18:25:35-05:00,18000,True,False,['Dockerfile'],['73eef439f0bdb5d86d3550ef6ad8e110bea9684a'],0,1,1,1,,,
fce1e7750d3bb109acb224f50e815d85748ca82a,FIX Typo in TF backend FFT lambda functions,epnev,epnevmatikakis@gmail.com,Joakim Andén,janden@flatironinstitute.org,2020-01-28 12:46:31-05:00,18000,2020-02-18 18:25:36-05:00,18000,True,False,"['tensorflow_backend.py', 'tensorflow_backend.py']",['c7ba23686991522c4b34c3fac318129b615c6c5a'],2,2,4,2,,,
e8c781eef256d2f598ee0eb08c788731c727cef7,FIX Typo in 1D TF frontend,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-31 15:40:26-05:00,18000,2020-02-18 18:25:36-05:00,18000,True,False,['tensorflow_frontend.py'],['fce1e7750d3bb109acb224f50e815d85748ca82a'],1,1,2,1,,,
094d40234092f583f55b1d025b9424d2a1b20b43,FIX Reshaping issue in 2D TF frontend,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-28 21:58:46-05:00,18000,2020-02-18 18:25:37-05:00,18000,True,False,['tensorflow_frontend.py'],['e8c781eef256d2f598ee0eb08c788731c727cef7'],7,11,18,1,,,
b5453ae0c6700e0d9e12de02876f6a07c58b45ec,FIX Reshaping issue in 1D TF frontend,epnev,epnevmatikakis@gmail.com,Joakim Andén,janden@flatironinstitute.org,2020-01-31 14:56:35-05:00,18000,2020-02-18 18:25:37-05:00,18000,True,False,['tensorflow_frontend.py'],['094d40234092f583f55b1d025b9424d2a1b20b43'],9,9,18,1,,,
13520b9d90947e4052e1075b767ac44c9043ae90,ENH Add Keras layers for 1D and 2D,epnev,epnevmatikakis@gmail.com,Joakim Andén,janden@flatironinstitute.org,2020-01-28 12:47:25-05:00,18000,2020-02-18 18:25:38-05:00,18000,True,False,['keras.py'],['b5453ae0c6700e0d9e12de02876f6a07c58b45ec'],0,59,59,1,1.0,1.0,0.7142857142857143
83718a7ff7fe8ea1d5546027969d98230e7ca75a,ENH Add Keras examples for MNIST and FSDD,epnev,epnevmatikakis@gmail.com,Joakim Andén,janden@flatironinstitute.org,2020-01-28 17:05:01-05:00,18000,2020-02-18 18:25:38-05:00,18000,True,False,"['classif_keras.py', 'mnist_keras.py']",['13520b9d90947e4052e1075b767ac44c9043ae90'],0,115,115,2,,,
986bc73d0d92ef39a20eb83f7bc55947a72b4878,TST Add unit tests for 2D Keras,edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-29 15:14:13-05:00,18000,2020-02-18 18:25:39-05:00,18000,True,False,['test_keras_scattering2d.py'],['83718a7ff7fe8ea1d5546027969d98230e7ca75a'],0,34,34,1,0.0,1.0,1.0
6b9e34f605e6e2fb3c0988568b4d72d388814715,ENH Clean up and document Keras examples,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-31 15:47:49-05:00,18000,2020-02-18 18:25:40-05:00,18000,True,False,"['classif_keras.py', 'plot_classif_keras.py', 'mnist_keras.py']",['986bc73d0d92ef39a20eb83f7bc55947a72b4878'],93,248,341,3,,,
6bb4e40eff7fff4e462012e19957143ab1869cc2,DOC Add @epnev to contributors,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-04 09:51:04-05:00,18000,2020-02-18 18:25:40-05:00,18000,True,False,['CONTRIBUTORS.md'],['6b9e34f605e6e2fb3c0988568b4d72d388814715'],1,2,3,1,,,
d28c9eec0e75ef8026dcfaca0cac062e237ce032,"TST Remove old 2D test

This was here to ensure backwards compatibility, but is no longer needed
(the same functionality is tested by `test_torch_scattering2d`).",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-04 10:28:14-05:00,18000,2020-02-18 18:25:40-05:00,18000,True,False,['test_scattering2d.py'],['6bb4e40eff7fff4e462012e19957143ab1869cc2'],156,0,156,1,1.0,0.0,0.0
005245e924ba18619741cbf829db380907108fd6,"ENH Move input checks into backend (NP, Torch)

Call these checks in the high-level (dimension-independent) frontends.",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-01-27 02:09:20-05:00,18000,2020-02-18 18:25:41-05:00,18000,True,False,"['__init__.py', 'numpy_backend.py', 'torch_backend.py', 'numpy_frontend.py', 'torch_frontend.py']",['d28c9eec0e75ef8026dcfaca0cac062e237ce032'],0,20,20,5,1.0,1.0,1.0
dce8184acbde4194847e01b0aa24a4ba42bf834f,"REF Make 3D frontends compute in `scattering`

Instead of defining `__call__` and `forward` separately, frontends
should define `scattering` and let the top-level (dimension-independent)
frontend take care of these frontend-specific methods.",edouardoyallon,edouard.oyallon@ens.fr,Joakim Andén,janden@flatironinstitute.org,2020-02-04 11:02:54-05:00,18000,2020-02-18 18:25:42-05:00,18000,True,False,"['numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['005245e924ba18619741cbf829db380907108fd6'],102,73,175,3,0.0,0.0,0.0
0a3be9613457da5efeaa88fc198c8f01666425df,"FIX Reshaping but in 3D TF frontend

Need to use `tf.shape` and `tf.concat` to get reshaping to work in
non-eager mode.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-04 11:06:22-05:00,18000,2020-02-18 18:25:42-05:00,18000,True,False,['tensorflow_frontend.py'],['dce8184acbde4194847e01b0aa24a4ba42bf834f'],5,5,10,1,,,
ba62e67eea8323b1a1b2e2a56f15e5fbfc361861,"REF Remove compute_speed examples

These are now handled by the ASV benchmarks in the `benchmarks` folder.",chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2020-01-27 07:45:49-08:00,28800,2020-02-18 18:25:43-05:00,18000,True,False,"['compute_speed_torch.py', 'compute_speed_torch.py', 'compute_speed.py']",['0a3be9613457da5efeaa88fc198c8f01666425df'],394,0,394,3,,,
13deaa9b2bbe1334b53dc21587a0d9f822b92871,ENH Update 1D and 2D examples for the new version,chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@flatironinstitute.org,2020-01-27 11:16:20-08:00,28800,2020-02-18 18:25:43-05:00,18000,True,False,"['plot_classif_torch.py', 'cifar_resnet_torch.py', 'cifar_torch.py', 'long_mnist_classify_torch.py', 'plot_invert_scattering_torch.py', 'regularized_inverse_scattering_MNIST_torch.py']",['ba62e67eea8323b1a1b2e2a56f15e5fbfc361861'],20,18,38,6,,,
f4878bb4a86ae0f217912206500fbd6197aa9349,ENH Minor cleanup of 1D Torch FSDD example,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-31 15:48:27-05:00,18000,2020-02-18 18:25:44-05:00,18000,True,False,['plot_classif_torch.py'],['13deaa9b2bbe1334b53dc21587a0d9f822b92871'],5,30,35,1,,,
2454f575657f635402b8d8d8dad8d1379a10b3b1,TST Install sklearn in Jenkins and Travis,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-04 12:13:51-05:00,18000,2020-02-18 18:25:44-05:00,18000,True,False,"['Dockerfile', 'travis_install.sh']",['f4878bb4a86ae0f217912206500fbd6197aa9349'],2,4,6,2,,,
6fa6594f51eccf692feac824615e4dd374b75ef2,ENH addressing documentation issues (#559),Edouard Oyallon,edouard.oyallon@lip6.fr,Joakim Andén,janden@flatironinstitute.org,2020-02-12 22:47:57+02:00,-7200,2020-02-18 18:25:45-05:00,18000,True,False,"['userguide.rst', 'base_frontend.py']",['2454f575657f635402b8d8d8dad8d1379a10b3b1'],10,11,21,2,,,
56d708d1ae72bfe23ea9f16d524a758308d7b29f,TST Fix tests to use external API,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-04 10:14:57-05:00,18000,2020-02-18 18:25:45-05:00,18000,True,False,"['test_numpy_scattering2d.py', 'test_tensorflow_scattering2d.py', 'test_torch_scattering2d.py']",['6fa6594f51eccf692feac824615e4dd374b75ef2'],3,3,6,3,,,
ec0c627672adff1843dab862a30bf56ba0950249,"REF Rename bare Scattering to ScatteringEntry

This way, there's less confusing between the “aliased” `Scattering*D`
classes (that are actually frontends) and the `ScatteringEntry*D`
classes (which just provide an entry point and morphs into one of those
frontends when instantiated). With this commit, *all* references to
`Scattering*D` refer to aliases, which should make development more
straightforward.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-04 10:02:25-05:00,18000,2020-02-18 18:25:46-05:00,18000,True,False,"['__init__.py', '__init__.py', '__init__.py', '__init__.py', '__init__.py', '__init__.py', '__init__.py', '__init__.py']",['56d708d1ae72bfe23ea9f16d524a758308d7b29f'],21,25,46,8,0.0,1.0,0.0
615f9eba330ac3c2ecd3b599e8b08e50032b5e5b,"REF Remove ScatteringEntry out of __init__

To maintain consistency, we should reserve `__init__` modules for just
importing from other packages instead of defining actual classes and
methods in there. The entry point classes (`ScatteringEntry*D`) are
therefore moved to `entry` modules that are then imported directly.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-04 10:22:59-05:00,18000,2020-02-18 18:25:46-05:00,18000,True,False,"['__init__.py', 'entry.py', '__init__.py', '__init__.py', 'entry.py', '__init__.py', '__init__.py', 'entry.py', '__init__.py', '__init__.py', 'entry.py']",['ec0c627672adff1843dab862a30bf56ba0950249'],75,75,150,11,,,
d88e24dc2cfad4a403eb61afcdfa5497c2fa9c46,"API Add sklearn transformer, example, and test

Co-authored-by: Joakim Andén <janden@flatironinstitute.org>",eugenium,eugenium@github.com,Joakim Andén,janden@flatironinstitute.org,2020-01-26 18:59:47-05:00,18000,2020-02-18 18:25:47-05:00,18000,True,False,"['plot_sklearn.py', 'sklearn.py', 'test_sklearn.py']",['615f9eba330ac3c2ecd3b599e8b08e50032b5e5b'],0,114,114,3,1.0,1.0,0.9130434782608695
cdba3a9492567cc3a0c1a81b319401343cf909f1,Add more narrative to sklearn example,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-18 10:41:54-05:00,18000,2020-02-18 18:25:48-05:00,18000,True,False,['plot_sklearn.py'],['d88e24dc2cfad4a403eb61afcdfa5497c2fa9c46'],11,48,59,1,,,
843171d7f7c44487ed5d1f8e54b0d9d9540948b1,TST Speed up 1D Torch tests,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-01-27 21:44:18-05:00,18000,2020-02-18 18:25:48-05:00,18000,True,False,['test_torch_scattering1d.py'],['cdba3a9492567cc3a0c1a81b319401343cf909f1'],12,13,25,1,0.0,0.0,0.0
92d83bb323ef9813787d1a45348bfce13762483c,"REF Move Keras frontends out of root module

Instead, place these in the respective frontend directories of 1D and
2D.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-18 11:40:09-05:00,18000,2020-02-18 18:25:49-05:00,18000,True,False,"['keras.py', 'keras_frontend.py', 'keras_frontend.py']",['843171d7f7c44487ed5d1f8e54b0d9d9540948b1'],56,71,127,3,,,
4ca07a26954515b0ea005ab5013ccfb2ac7716fe,"API Add Keras to ScatteringEntry

Lets us call (for example) `Scattering2D(J=3, frontend='keras')`.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-18 11:46:00-05:00,18000,2020-02-18 18:25:49-05:00,18000,True,False,['entry.py'],['92d83bb323ef9813787d1a45348bfce13762483c'],1,1,2,1,,,
628b51694fe048bb1c3af1f27d0a131d6e61d989,"REF Add Keras frontend superclass

This will hold various common utilities and documentation.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-18 12:01:18-05:00,18000,2020-02-18 18:25:50-05:00,18000,True,False,['keras_frontend.py'],['4ca07a26954515b0ea005ab5013ccfb2ac7716fe'],0,32,32,1,1.0,1.0,1.0
828661eca9ac39bb7e2452bdb1485934c27f01a9,"REF+DOC Make Keras frontends inherit from base

In addition to the Keras frontend superclass, we also inherit from the
1D and 2D bases to get access to their documentation template. Note that
we do not use their filter-creation functionality (since this is done by
the wrapped `ScatteringTensorFlow*D` objects).",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-18 12:07:26-05:00,18000,2020-02-18 18:25:50-05:00,18000,True,False,"['keras_frontend.py', 'keras_frontend.py']",['628b51694fe048bb1c3af1f27d0a131d6e61d989'],22,24,46,2,0.0,0.0,0.5
212fbf6eb1af6f1542356cde1a26db11f2cf1417,"DOC Update 1D/2D doc templates for Keras

Specifically, we don't want the docs to mention shape and output types
if these are not present in the frontend, which is the case for Keras.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-18 12:52:58-05:00,18000,2020-02-18 18:25:51-05:00,18000,True,False,"['keras_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'base_frontend.py', 'base_frontend.py']",['828661eca9ac39bb7e2452bdb1485934c27f01a9'],68,133,201,6,0.0,0.0,1.0
4f145d2cc5a73cb0a65fd7367595d8be3152faf3,DOC Fix spacing in 2D doc template,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-18 12:54:28-05:00,18000,2020-02-18 18:25:51-05:00,18000,True,False,['base_frontend.py'],['212fbf6eb1af6f1542356cde1a26db11f2cf1417'],2,0,2,1,,,
7e7c96e822cf108430f82736eaff348b62e06b41,"REF+DOC Move sklearn frontends out of root module

Instead, place these in the respective frontend directories of 1D, 2D
and 3D. We also hook these frontends into the documentation template
framework.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-18 14:56:27-05:00,18000,2020-02-18 18:25:52-05:00,18000,True,False,"['sklearn_frontend.py', 'sklearn_frontend.py', 'sklearn_frontend.py', 'sklearn_frontend.py', 'sklearn.py']",['4f145d2cc5a73cb0a65fd7367595d8be3152faf3'],40,99,139,5,,,
46b76bcaa98b5cb0bbc7c029b3c709ddcadf2afd,API Add 'sklearn' as frontend in ScatteringEntry,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-18 14:57:35-05:00,18000,2020-02-18 18:25:52-05:00,18000,True,False,"['entry.py', 'sklearn_frontend.py', 'sklearn_frontend.py', 'sklearn_frontend.py', 'sklearn_frontend.py']",['7e7c96e822cf108430f82736eaff348b62e06b41'],7,1,8,5,,,
f11d367d56b03020510300aa43eb9d080cff3ce0,STY Cleanup ScatteringEntry class,Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-18 14:58:59-05:00,18000,2020-02-18 18:25:53-05:00,18000,True,False,['entry.py'],['46b76bcaa98b5cb0bbc7c029b3c709ddcadf2afd'],2,6,8,1,0.0,1.0,0.0
6c460d1f270b5930648a21788c10e93f545c24df,"DOC Better error message for invalid frontend

Closes #561.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-18 15:03:42-05:00,18000,2020-02-18 18:25:53-05:00,18000,True,False,"['entry.py', 'test_utils_scattering1d.py', 'test_frontend_scattering2d.py']",['f11d367d56b03020510300aa43eb9d080cff3ce0'],4,12,16,3,0.0,1.0,0.0
8f27116cfe0d748e17f6262a2226057dbd668552,"TST Move tests into separate subdirectory of root

Instead of having tests nestled in with the actual code, move them out
to the root.",Joakim Andén,janden@flatironinstitute.org,Joakim Andén,janden@flatironinstitute.org,2020-02-18 18:04:24-05:00,18000,2020-02-18 18:25:54-05:00,18000,True,False,"['test_torch_backend.py', 'test_data_1d.npz', 'test_filters_scattering1d.py', 'test_numpy_scattering1d.py', 'test_tensorflow_scattering1d.py', 'test_torch_scattering1d.py', 'test_utils_scattering1d.py', 'test_data_2d.npz', 'test_frontend_scattering2d.py', 'test_keras_scattering2d.py', 'test_numpy_scattering2d.py', 'test_sklearn_2d.py', 'test_tensorflow_scattering2d.py', 'test_torch_scattering2d.py', 'test_data_3d.npz', 'test_numpy_scattering3d.py', 'test_tensorflow_scattering3d.py', 'test_torch_scattering3d.py', 'test_utils_scattering3d.py']",['6c460d1f270b5930648a21788c10e93f545c24df'],2,1,3,19,0.0,0.0,0.0
b37c38d5451c8eb979ce0ed8b64225b7900ffe75,"BUG website (#574)

* adding TF to circlci

* test by removing keras

* adding the init file in the folder core of scattering3d

* fixing 2 warnings",Edouard Oyallon,edouard.oyallon@lip6.fr,GitHub,noreply@github.com,2020-02-19 18:21:55+01:00,-3600,2020-02-19 18:21:55+01:00,-3600,True,False,"['config.yml', 'plot_real_signal.py', '__init__.py']",['8f27116cfe0d748e17f6262a2226057dbd668552'],0,2,2,3,,,
5ce48662d0aa7cd52d3a138e80308e187f1d8f61,"ENH FI logo appears correctly 

.. and with the good size!",Edouard Oyallon,edouard.oyallon@lip6.fr,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-02-19 18:07:15+01:00,-3600,2020-03-03 16:35:47-05:00,18000,True,False,['README.md'],['b37c38d5451c8eb979ce0ed8b64225b7900ffe75'],1,1,2,1,,,
430d8dc5eed84c7f81998595751c6a1f278c1258,"ENH basic narrative of 3d/scattering3d_qm7

* very basic narrative

* DOC Clean up intro

* FIX Import of HarmonicScattering3D

* FIX Mismatch of dtypes

Need to cast inputs to single precision before computing the scattering
transform.

* STY Clean up

* REF Flatten structure

* REF More cleanup

* DOC Add narrative

Co-authored-by: Joakim Andén <janden@flatironinstitute.org>",Edouard Oyallon,edouard.oyallon@lip6.fr,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-02-21 23:27:43+01:00,-3600,2020-03-03 16:35:47-05:00,18000,True,False,['scattering3d_qm7_torch.py'],['5ce48662d0aa7cd52d3a138e80308e187f1d8f61'],234,302,536,1,0.8278688524590164,0.0,0.8278688524590164
5dfb1038b501c881e8efb9a7c56fae5adaa82dbb,"DOC incorporating sklearn and transformers docs in README.md

* fixing sklearn doc and transformers
* Update README.md",Edouard Oyallon,edouard.oyallon@lip6.fr,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-02-22 14:12:31+01:00,-3600,2020-03-03 16:35:47-05:00,18000,True,False,['README.md'],['430d8dc5eed84c7f81998595751c6a1f278c1258'],0,19,19,1,,,
5209850c5312ff8bb643e078105a62b21ac4dff8,"BUG in regularized inverse 2D (#576)

* run smoothly when device is CUDA or CPU
* Update regularized_inverse_scattering_MNIST_torch.py for torchvision and modify an unecessary comment",Edouard Oyallon,edouard.oyallon@lip6.fr,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-02-22 14:15:12+01:00,-3600,2020-03-03 16:35:47-05:00,18000,True,False,['regularized_inverse_scattering_MNIST_torch.py'],['5dfb1038b501c881e8efb9a7c56fae5adaa82dbb'],8,8,16,1,,,
a1e8e597e14be86c8cd42677f1cc07791b6853a1,DOC removing unused documentation thanks to the new doc mechanism,edouardoyallon,edouard.oyallon@ens.fr,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-02-22 14:35:05+01:00,-3600,2020-03-03 16:35:47-05:00,18000,True,False,"['numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'torch_frontend.py', 'numpy_frontend.py', 'torch_frontend.py']",['5209850c5312ff8bb643e078105a62b21ac4dff8'],211,0,211,6,,,
c423f1f99d5c30e8c27e6d15a8a50c3d07c70cf6,"ENH odcumentation of out_type (#580)

* odcumentation of out_type

* DOC Put out_type doc in _doc_*_vectorize

So that it'll only be included if the frontend supports non-array outputs.

* DOC Add out_type to Scattering1D.scattering doc

* DOC Add note on out_type for average param

* DOC Deprecate Scattering1D.vectorize

* DOC Make out_type optional in 2D

We don't want to talk about `out_type` for frontends, such as Keras and
sklearn, that don't allow non-array outputs.

* DOC Add out_type to Scattering2D.scattering doc

Co-authored-by: Joakim Andén <janden@flatironinstitute.org>",Edouard Oyallon,edouard.oyallon@lip6.fr,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-02-26 00:34:14+01:00,-3600,2020-03-03 16:35:47-05:00,18000,True,False,"['base_frontend.py', 'base_frontend.py']",['a1e8e597e14be86c8cd42677f1cc07791b6853a1'],22,81,103,2,0.0,1.0,1.0
d9aa26cc47073ac4d81542e41ff71591a5803e56,"MAINT+FIX circle-ci doc build now runs on /dev branch and 3d import is fixed

MAINT make circleci also run for dev branch part 1

DEBUG disabled circleci cache

DEBUG check absolute import

DEBUG adding __init__ to scattering3d module to check whether circleci finds it better

DEBUG reenable circleci cache

because now runtimes were exceeded

DEBUG disable cache *restoring*

so hopefully it saves the right thing. in a later step re-enable

DEBUG disable save cache because it still doesnt work

DEBUG remove installing kymatio from cached part

but not yet re-enabling cache

DEBUG re-enable cache saving, but with another cache key

DEBUG reinstate cache reloading

DEBUG empty commit to trigger circleci again

DEBUG add tensorflow install

DEBUG add /usr to cache in the hope that texlive gets cached as well

DEBUG rename cache key to ensure fresh start

DEBUG rename keras example to inhibit its execution for docs

DEBUG add line to retrigger circleci

DEBUG comment /usr caching

DEBUG rename reconstruct 1d example to not get rendered

DEBUG update cache key

DEBUG recache and remove tf

running out of ideas here

ENH make DOC_REPO take argument 2 in push_doc but default to kymatio.github.io

ENH make pushdoc push to kymatio-dev-docs

ENH add deploy key for private doc repo

DEBUG comment one ssh key to see if it is the problem

DEBUG uncomment master deployment fingerprint

DEBUG trying two add_ssh_keys commands

DEBUG commenting dev deploy key to attempt another solution",Michael Eickenberg,michael.eickenberg@gmail.com,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-02-25 11:31:00-05:00,18000,2020-03-03 16:35:47-05:00,18000,True,False,"['config.yml', 'classif_keras.py', 'reconstruct_torch.py', 'numpy_frontend.py', 'push_doc.sh']",['c423f1f99d5c30e8c27e6d15a8a50c3d07c70cf6'],8,30,38,5,,,
df200c55616a58d49c2e829ea35b8571962126ab,"MAINT absolute import to relative import

This commit initially also contained an unused imports removal. Those
imports were added back in the squashed commit

COS add unused imports back

and are re-removed in the next commit",edouardoyallon,edouard.oyallon@ens.fr,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-02-21 11:14:35+01:00,-3600,2020-03-03 16:35:47-05:00,18000,True,False,"['tensorflow_frontend.py', 'keras.py', 'keras_frontend.py', 'sklearn_frontend.py', 'utils.py', 'keras_frontend.py', 'numpy_frontend.py', 'sklearn_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'numpy_backend.py', 'sklearn_frontend.py', 'sklearn.py']",['d9aa26cc47073ac4d81542e41ff71591a5803e56'],22,20,42,13,,,
9fe37009496c2fa102f1b72a588cf3cd6447ad4c,"MAINT remove unused commits

This is a revert commit. To split an existing commit in 2, I undid part
of its modifications. Using this revert commit I put them back. This
ensures that after squashing the initial commit and my undoing commit,
the two remaining commits add back up to the same thing.

Suggested message:

Revert ""COS add unused imports back""

This reverts commit f705a99413cbc42e53c5701bffed52f2f2bf5ba8.",Michael Eickenberg,michael.eickenberg@gmail.com,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-03 11:27:04-05:00,18000,2020-03-03 16:35:47-05:00,18000,True,False,"['tensorflow_frontend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_skcuda_backend.py', 'numpy_backend.py']",['df200c55616a58d49c2e829ea35b8571962126ab'],5,0,5,5,,,
bb39bc8a9bb7a63b5a3257eee152b4c06bf891de,"DOC Add Keras, sklearn to code reference

Also add subheadings to make it more readable.",Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-03 17:53:16+01:00,-3600,2020-03-03 16:35:47-05:00,18000,True,False,['codereference.rst'],['9fe37009496c2fa102f1b72a588cf3cd6447ad4c'],1,22,23,1,,,
3a869285d6435ff9c1bedeea6c94969efdfb37e3,DOC Add short intro to code ref,Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-03 17:53:39+01:00,-3600,2020-03-03 16:35:47-05:00,18000,True,False,['codereference.rst'],['bb39bc8a9bb7a63b5a3257eee152b4c06bf891de'],0,20,20,1,,,
7a461f78b87f4cecce158ba02804977eb74e681d,DOC Add blurbs to each of the frontend code refs,Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-03 18:15:10+01:00,-3600,2020-03-03 16:35:47-05:00,18000,True,False,['codereference.rst'],['3a869285d6435ff9c1bedeea6c94969efdfb37e3'],0,36,36,1,,,
95543f62fe325e29b5adf9c7f5af3511a84e03c0,FIX Bug keeping data on GPU,Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-02-25 13:32:53-05:00,18000,2020-03-03 16:35:47-05:00,18000,True,False,['scattering3d_qm7_torch.py'],['7a461f78b87f4cecce158ba02804977eb74e681d'],2,2,4,1,,,
2ee5e71567924c014efa392ef827e05973d3c285,ENH Reduce range of alpha for 3D example,Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-02-25 14:42:28-05:00,18000,2020-03-03 16:35:47-05:00,18000,True,False,['scattering3d_qm7_torch.py'],['95543f62fe325e29b5adf9c7f5af3511a84e03c0'],1,1,2,1,,,
9577d0f3f212b45d171377d264cbe9de4ed31cf2,"Revert ""TST Normalize benchmarks""

This reverts commit fbf9312103bdcb73a8d9b25e1f47752c4d09e42a.

The goal is to change the benchmarks back to the ones represented in our
documentation. This commit will be re-activated for version 3, where asv
will be used in a systematic way",Michael Eickenberg,michael.eickenberg@gmail.com,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-03 15:53:43-05:00,18000,2020-03-03 16:35:47-05:00,18000,True,False,"['common.py', 'scattering1d.py', 'scattering2d.py', 'scattering3d.py']",['2ee5e71567924c014efa392ef827e05973d3c285'],39,26,65,4,0.0,0.0,0.0
4d25c04f29f5d48aa9fad9a229de9d87c93429e4,"DOC Fix FI logo

For some reason, wrapping a raw HTML image in an MD hyperlink doesn't
play well with M2R. Need to do the whole thing in HTML.",Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-04 10:59:52+01:00,-3600,2020-03-09 19:04:38-04:00,14400,True,False,['README.md'],['9577d0f3f212b45d171377d264cbe9de4ed31cf2'],1,1,2,1,,,
9098eacaf1d41ac83c26e49d2b1c228067d9eec2,"DOC Clean up discussion of frontends, GPU speedup

Make sure new frontends are covered, make examples more consistent,
discuss GPU acceleration in a more straightforward way, add example of
skcuda backend selection.",Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-04 11:11:59+01:00,-3600,2020-03-09 19:04:38-04:00,14400,True,False,['README.md'],['4d25c04f29f5d48aa9fad9a229de9d87c93429e4'],19,27,46,1,,,
5dc7ce21eb105030cdf676df0afc2ecb0e6afff4,DOC Extend discussion of frontends in user guide,Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-04 11:27:08+01:00,-3600,2020-03-09 19:04:38-04:00,14400,True,False,['userguide.rst'],['9098eacaf1d41ac83c26e49d2b1c228067d9eec2'],9,32,41,1,,,
99e3bbeafc7193544b78060e062bc93be3fbd40b,"DOC Move frontend discussion to user guide

Instead of in the code reference. Also clean it up a bit.",Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-04 17:01:46+01:00,-3600,2020-03-09 19:04:38-04:00,14400,True,False,"['codereference.rst', 'userguide.rst']",['5dc7ce21eb105030cdf676df0afc2ecb0e6afff4'],73,42,115,2,,,
fc9a0f72fd2d78535ca2e0921580779ffe64b84f,DOC Improve backend discussion in user guide,Joakim Andén,janden@flatironinstitute.org,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-04 17:07:07+01:00,-3600,2020-03-09 19:04:38-04:00,14400,True,False,['userguide.rst'],['99e3bbeafc7193544b78060e062bc93be3fbd40b'],2,6,8,1,,,
84e2657377499f19dc21c56e4ce6007c61a27b37,FIX naming in example,eickenberg,eickenberg@users.noreply.github.com,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-04 12:42:30-05:00,18000,2020-03-09 19:04:38-04:00,14400,True,False,['README.md'],['fc9a0f72fd2d78535ca2e0921580779ffe64b84f'],1,1,2,1,,,
5fbffe075d7a6e44214c4ec6087447e37a9f8aed,FIX CPU acronym,eickenberg,eickenberg@users.noreply.github.com,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-04 12:43:10-05:00,18000,2020-03-09 19:04:38-04:00,14400,True,False,['README.md'],['84e2657377499f19dc21c56e4ce6007c61a27b37'],1,1,2,1,,,
9dfb26eebeb22e94ceafd8ab80ac9da3a5d0ccbc,DOC add userguide description of 3d scattering,eickenberg,eickenberg@users.noreply.github.com,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-09 12:30:22-04:00,14400,2020-03-09 19:04:38-04:00,14400,True,False,['userguide.rst'],['5fbffe075d7a6e44214c4ec6087447e37a9f8aed'],1,9,10,1,,,
9df4b37e49e78e174cdacf436ee8e78315fcbd19,"DOC add 3D output shape description (#592)

* DOC 3D output shape

* DOC change capitalization of scattering terms

* DOC revert to sphinx math notation, add non-breaking space",eickenberg,eickenberg@users.noreply.github.com,Edouard Oyallon,edouard.oyallon@lip6.fr,2020-03-09 18:35:53-04:00,14400,2020-03-09 19:04:38-04:00,14400,True,False,['userguide.rst'],['9dfb26eebeb22e94ceafd8ab80ac9da3a5d0ccbc'],2,10,12,1,,,
72b6579431a0d6bacf88192b2d1d4700d211cd4c,DOC Fix missing blank line in 3D doc example,Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2020-03-10 19:45:39+01:00,-3600,2020-03-12 21:24:14-04:00,14400,True,False,['base_frontend.py'],['9df4b37e49e78e174cdacf436ee8e78315fcbd19'],0,1,1,1,,,
d55e6912190a3eec3e421dd5d717d65e36bff8a5,"TST Install TF in Circle CI config

Co-authored-by: edouardoyallon <edouard.oyallon@lip6.fr>",Joakim Andén,janden@flatironinstitute.org,eickenberg,eickenberg@users.noreply.github.com,2020-03-10 19:53:06+01:00,-3600,2020-03-12 21:24:14-04:00,14400,True,False,"['config.yml', 'tensorflow_backend.py', 'tensorflow_backend.py', 'tensorflow_frontend.py']",['72b6579431a0d6bacf88192b2d1d4700d211cd4c'],6,9,15,4,,,
e0fc10057f5f8bb947068bc40afff8d3d3729052,MAINT bump version (#607),eickenberg,eickenberg@users.noreply.github.com,GitHub,noreply@github.com,2020-03-27 12:56:57-04:00,14400,2020-03-27 12:56:57-04:00,14400,True,False,['version.py'],['d55e6912190a3eec3e421dd5d717d65e36bff8a5'],2,2,4,1,,,
2a22ce4a2bb2c1dee31a778480123cdc703aa752,"TST Temporarily set number of GPUs to one

While SCC is investigating the feasability of upgrading the GPUs, we
only have access to the one.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-02-10 09:49:16+01:00,-3600,2021-02-11 17:56:02+01:00,-3600,True,False,['Jenkinsfile'],['e0fc10057f5f8bb947068bc40afff8d3d3729052'],1,1,2,1,,,
b56114f449ce4baff8f039fc353bd07b000e06f4,TST Try GH actions for pip tests,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-02-10 13:57:05+01:00,-3600,2021-02-11 17:56:02+01:00,-3600,True,False,['pip.yml'],['2a22ce4a2bb2c1dee31a778480123cdc703aa752'],0,34,34,1,,,
3defb745d3be74e943a07e7d728f9e46dd8f62a2,TST Add workflow for Conda,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-02-10 14:25:19+01:00,-3600,2021-02-11 17:56:02+01:00,-3600,True,False,['conda.yml'],['b56114f449ce4baff8f039fc353bd07b000e06f4'],0,43,43,1,,,
7b378c8cb6c12251cf6d155dbed2215ffbb4dcc5,TST Explicitly set GH Actions system to focal,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-02-10 15:14:01+01:00,-3600,2021-02-11 17:56:02+01:00,-3600,True,False,"['conda.yml', 'pip.yml']",['3defb745d3be74e943a07e7d728f9e46dd8f62a2'],2,2,4,2,,,
2a3094e79d8e654cc0258c4c70346e51f3d21682,TST Remove Travis CI,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-02-10 20:59:49+01:00,-3600,2021-02-11 17:56:02+01:00,-3600,True,False,"['.travis.yml', 'travis_install.sh']",['7b378c8cb6c12251cf6d155dbed2215ffbb4dcc5'],44,0,44,2,,,
e9f848a0c194642d6eb4c1da9ecd98667e195de5,"BUG Ensure compatibility with cupy-8.0

Need to access utils with `cupy._util` instead of `cupy.util`.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-01-13 12:41:21+01:00,-3600,2021-02-11 17:56:02+01:00,-3600,True,False,"['torch_skcuda_backend.py', 'torch_skcuda_backend.py']",['2a3094e79d8e654cc0258c4c70346e51f3d21682'],2,14,16,2,,,
16556af4b30ef92ec2920d630b4b10141d938cc9,"FIX specifies the test on pytorch to version 1.7

Add a gh-action and constraints the tests on torch=1.7",Edouard Oyallon,edouard.oyallon@lip6.fr,GitHub,noreply@github.com,2021-03-14 01:25:32+01:00,-3600,2021-03-14 01:25:32+01:00,-3600,True,False,"['config.yml', 'conda.yml', 'cuda.yml', 'pip.yml', 'Dockerfile']",['e9f848a0c194642d6eb4c1da9ecd98667e195de5'],7,49,56,5,,,
91eda80f9a542ce027ae77e861c9107182070b2d,"FIX support of PyTorch 1.8 + added a backend torch17 for supporting PyTorch 1.7

Note: pip doesn't pass yet it's pretty much linked to an issue with GHA",Edouard Oyallon,edouard.oyallon@lip6.fr,GitHub,noreply@github.com,2021-03-14 03:10:41+01:00,-3600,2021-03-14 03:10:41+01:00,-3600,True,False,"['conda.yml', 'cuda.yml', 'README.md', 'userguide.rst', 'torch17_backend.py', 'torch17_skcuda_backend.py', 'torch_backend.py', 'torch17_backend.py', 'torch17_skcuda_backend.py', 'torch_backend.py', 'torch17_backend.py', 'torch17_skcuda_backend.py', 'torch_backend.py', 'test_torch_scattering1d.py', 'test_torch_scattering2d.py', 'test_torch_scattering3d.py']",['16556af4b30ef92ec2920d630b4b10141d938cc9'],44,198,242,16,1.0,1.0,1.0
8b4d6af72e9cc144f2fab5876b82222eb58acf7b,TST Restore torch<1.3 for jenkins,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-15 21:01:05+01:00,-3600,2021-03-15 22:00:18+01:00,-3600,True,False,['Dockerfile'],['91eda80f9a542ce027ae77e861c9107182070b2d'],1,1,2,1,,,
476d77f3de01e07fdeea2e29139f223febd6969b,TST Don't test Torch for Jenkins,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-15 21:43:10+01:00,-3600,2021-03-15 22:00:18+01:00,-3600,True,False,['Jenkinsfile'],['8b4d6af72e9cc144f2fab5876b82222eb58acf7b'],1,7,8,1,,,
ae377595f539c5b0116bc59ef2e11f2e04ec1cfd,"ENH 2nd-order coefficient visualization

* Add second-order coefficients visualisation

* Format fixes",anakin-datawalker,36677060+anakin-datawalker@users.noreply.github.com,GitHub,noreply@github.com,2021-03-18 08:38:29+01:00,-3600,2021-03-18 08:38:29+01:00,-3600,True,False,['plot_scattering_disk.py'],['476d77f3de01e07fdeea2e29139f223febd6969b'],49,138,187,1,,,
a7d082901e1cfb84e7fd1ad45d45492bd8e542c8,"TST Remove bundled conda from GHA

We're not using it anyhow.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-16 11:19:52+01:00,-3600,2021-03-18 19:24:15+01:00,-3600,True,False,"['conda.yml', 'cuda.yml']",['ae377595f539c5b0116bc59ef2e11f2e04ec1cfd'],4,0,4,2,,,
6efcec2b97b1240cff0b90ad6e21b1d0bf7b17b4,"TST Fix torch version comparison

Since `version.parse('1.7.1') > version.parse('1.7')`, we need to
compare with `version.parse('1.8')` for things to work properly.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-15 22:37:47+01:00,-3600,2021-03-18 19:24:15+01:00,-3600,True,False,"['test_torch_scattering1d.py', 'test_torch_scattering2d.py', 'test_torch_scattering3d.py']",['a7d082901e1cfb84e7fd1ad45d45492bd8e542c8'],3,3,6,3,,,
9bb5551a86ea4e752513ccedd8cfe6087d1b4e12,DOC Fix typo in README,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-15 22:44:58+01:00,-3600,2021-03-18 19:24:15+01:00,-3600,True,False,['README.md'],['6efcec2b97b1240cff0b90ad6e21b1d0bf7b17b4'],1,1,2,1,,,
972c11eb8ca083546ea3fef273f645c0da62207d,"TST Let Jenkins test torch again

Since the issue related to 1.7.1 is resolved, we can revert the previous
change excluding torch since it should run on <1.3 again.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-16 09:19:49+01:00,-3600,2021-03-18 19:24:15+01:00,-3600,True,False,['Jenkinsfile'],['9bb5551a86ea4e752513ccedd8cfe6087d1b4e12'],7,1,8,1,,,
fcd7e821cccb2d0ebc530e59263b791cd069d59c,"TST Check for '_skcuda' not 'torch_skcuda'

Since there are now *two* `'torch_skcuda'` backends, we can no longer
just check for `backend.name == 'torch_skcuda'` but must replace these
with `backend.name.endswith('_skcuda')`.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-16 09:35:23+01:00,-3600,2021-03-18 19:24:15+01:00,-3600,True,False,"['test_torch_scattering1d.py', 'test_torch_scattering2d.py', 'test_torch_scattering3d.py']",['972c11eb8ca083546ea3fef273f645c0da62207d'],29,29,58,3,,,
d35292adbba68d78eb44a5dc7089a51bf413bd86,"TST Relax tolerance in 2D TF FFT unit test

The implementation used by TF to calculate the FFT is not very
accurate, so we need to relax the tolerance a little to eliminate
spurious test failures.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-16 10:08:56+01:00,-3600,2021-03-18 19:24:15+01:00,-3600,True,False,['test_tensorflow_scattering2d.py'],['fcd7e821cccb2d0ebc530e59263b791cd069d59c'],3,7,10,1,0.0,1.0,1.0
2c54b34dd566bf7fddc3ecee81071161f179e756,"TST Simplfiy GHA conda workflows

By introducing an environment variable for the conda environment name.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-16 10:24:36+01:00,-3600,2021-03-18 19:24:15+01:00,-3600,True,False,"['conda.yml', 'cuda.yml']",['d35292adbba68d78eb44a5dc7089a51bf413bd86'],20,26,46,2,,,
5535f036cf2d741febbb401e632278d736a1d2ae,TST Relax version specs for conda GHA,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-16 11:10:32+01:00,-3600,2021-03-18 19:24:15+01:00,-3600,True,False,"['conda.yml', 'cuda.yml']",['2c54b34dd566bf7fddc3ecee81071161f179e756'],2,2,4,2,,,
08429ee8aa5d50aeb651ea6451fe4e817c60cf24,TST Extend pip GHA to torch 1.8,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-16 11:10:58+01:00,-3600,2021-03-18 19:24:15+01:00,-3600,True,False,['pip.yml'],['5535f036cf2d741febbb401e632278d736a1d2ae'],1,13,14,1,,,
2ffeecee4ff81f0987299c94e5fcb0a76b11f85f,"DOC Remove sys.path modification for Sphinx

We expect the package to be pip installed before running Sphinx.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-16 14:27:14+01:00,-3600,2021-03-18 22:20:24+01:00,-3600,True,False,['conf.py'],['08429ee8aa5d50aeb651ea6451fe4e817c60cf24'],3,0,3,1,,,
2e6bcf34ea1012d342dd3590cb53e94c763624dc,DOC Mock soft dependencies in Sphinx autodoc,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-16 14:28:07+01:00,-3600,2021-03-18 22:20:24+01:00,-3600,True,False,['conf.py'],['2ffeecee4ff81f0987299c94e5fcb0a76b11f85f'],0,1,1,1,,,
da7bbdb76aa938122ea816610832d82664c36278,"DOC Upgrade m2r to m2r2

Since `m2r` seems to be no longer maintained, we update to `m2r2`.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-16 14:28:47+01:00,-3600,2021-03-18 22:20:24+01:00,-3600,True,False,"['conf.py', 'requirements_optional.txt']",['2e6bcf34ea1012d342dd3590cb53e94c763624dc'],2,2,4,2,,,
bbb656143f3833dc80d71aa9a22414d37c21bc69,"DOC Add missing parameter for Sphinx

Now we need `bibtex_bibfiles`.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-16 14:29:18+01:00,-3600,2021-03-18 22:20:24+01:00,-3600,True,False,['conf.py'],['da7bbdb76aa938122ea816610832d82664c36278'],0,2,2,1,,,
d9850ae2f95d5099806d6063694523881da8bfd7,"TST Add GHA workflow to compiling docs and uploading

This will run `make html` in the `doc` directory and upload the result
to GitHub pages, which will then auto-deploy to https://www.kymat.io.
For now, this only happens on pushes to `master`.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-16 14:31:47+01:00,-3600,2021-03-18 22:20:24+01:00,-3600,True,False,"['docs.yml', 'push_doc.sh']",['bbb656143f3833dc80d71aa9a22414d37c21bc69'],34,62,96,2,,,
2b30bc5e64ba8b238618e5e7cd2a83624ca65f47,TST Fix typo in docs GHA workflow,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-18 22:23:41+01:00,-3600,2021-03-19 09:19:13+01:00,-3600,True,False,['docs.yml'],['d9850ae2f95d5099806d6063694523881da8bfd7'],1,1,2,1,,,
7efb1493d81fce8124e863020c961321395da4e4,"FIX Implement get_config in 1d and 2d (#670)

Fixes #637.",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2021-03-19 09:20:10+01:00,-3600,2021-03-19 09:20:10+01:00,-3600,True,False,"['keras_frontend.py', 'keras_frontend.py', 'test_keras_scattering2d.py']",['2b30bc5e64ba8b238618e5e7cd2a83624ca65f47'],2,13,15,3,0.6,1.0,1.0
ba6e890b3634e86bb54bd7b3e25af5612b8fdfea,TST Add CNAME file to docs workflow,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-19 09:24:01+01:00,-3600,2021-03-19 10:14:37+01:00,-3600,True,False,['push_doc.sh'],['7efb1493d81fce8124e863020c961321395da4e4'],0,1,1,1,,,
f42064ff22476864117e6b766856536d2a9d3118,"TST Push to master, not gh-pages",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-19 10:11:36+01:00,-3600,2021-03-19 10:14:37+01:00,-3600,True,False,['push_doc.sh'],['ba6e890b3634e86bb54bd7b3e25af5612b8fdfea'],2,1,3,1,,,
f098532eb0bb1dfc4190992aeda73e1d5fba5f4d,"TST So long, Circle CI",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-19 10:23:28+01:00,-3600,2021-03-19 14:37:25+01:00,-3600,True,False,['config.yml'],['f42064ff22476864117e6b766856536d2a9d3118'],101,0,101,1,,,
b3016cb2c21e245a1effe35a21dfec0b5eb2ff3f,ENH mergning torch backend 17 and torch backend,Edouard Oyallon,edouard.oyallon@lip6.fr,GitHub,noreply@github.com,2021-03-19 14:38:53+01:00,-3600,2021-03-19 14:38:53+01:00,-3600,True,False,"['torch17_backend.py', 'torch17_skcuda_backend.py', 'torch_backend.py', 'torch17_backend.py', 'torch17_skcuda_backend.py', 'torch_backend.py', 'torch17_backend.py', 'torch17_skcuda_backend.py', 'torch_backend.py', 'test_torch_scattering1d.py', 'test_torch_scattering2d.py', 'test_torch_scattering3d.py']",['f098532eb0bb1dfc4190992aeda73e1d5fba5f4d'],204,99,303,12,,,
b19381d18c214bec234bedc978fdd62410c97f8c,TST Add py35 to GHA pip workflow,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-19 14:53:10+01:00,-3600,2021-03-19 15:19:58+01:00,-3600,True,False,['pip.yml'],['b3016cb2c21e245a1effe35a21dfec0b5eb2ff3f'],1,8,9,1,,,
776ad5988728117dba73a9a8c7a6cbef0f88593a,DOC Update year (2020 → 2021) in docs (#697),Joakim Andén,janden@flatironinstitute.org,GitHub,noreply@github.com,2021-03-23 18:07:58+01:00,-3600,2021-03-23 18:07:58+01:00,-3600,True,False,['conf.py'],['b19381d18c214bec234bedc978fdd62410c97f8c'],1,1,2,1,,,
820c56f6466265fa373b762f1046a5b4a1151c9b,TST add torch 1.7.1 build for jenkins,Dylan Simon,dylan@dylex.net,Joakim Andén,janden@kth.se,2021-04-14 11:39:06-04:00,14400,2021-05-17 13:58:27-06:00,21600,True,False,['Dockerfile'],['776ad5988728117dba73a9a8c7a6cbef0f88593a'],4,20,24,1,,,
488f5111db9208c79edb4d7434069b7e562e7ccf,TST Fix torch and torchvision versions,Dylan Simon,dylan@dylex.net,Joakim Andén,janden@kth.se,2021-04-14 14:45:53-04:00,14400,2021-05-17 13:58:27-06:00,21600,True,False,['Dockerfile'],['820c56f6466265fa373b762f1046a5b4a1151c9b'],2,2,4,1,,,
7a76249b4ad1ea66d4ed8c5fe010ef2f6b11ae6b,"API removed pre_pad argument from Pad class, refactored to enable casting to complex.

STY rename to_real to to_complex

MAINT enable option to pad or not

MAINT removed to_complex

MAINT have padding follow the number of axes before the last two",chaudhm,chaudhm@wwu.edu,Joakim Andén,janden@kth.se,2020-07-03 10:51:06-07:00,25200,2021-05-25 07:56:40-06:00,21600,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'scattering2d.py', 'base_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'test_numpy_scattering2d.py', 'test_tensorflow_scattering2d.py', 'test_torch_scattering2d.py']",['488f5111db9208c79edb4d7434069b7e562e7ccf'],70,37,107,11,1.0,0.0,0.05555555555555555
9f0bed404eb00cb440256a3437f17dd59b9a60bb,MNT Remove pre_pad option to scattering2d,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-20 08:10:21+01:00,-3600,2021-05-25 07:56:40-06:00,21600,True,False,"['scattering2d.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['7a76249b4ad1ea66d4ed8c5fe010ef2f6b11ae6b'],6,5,11,4,,,
73751ab7702051d4a42ba382e8e51eefb3ad35f1,DOC Add comment about pre_pad in 2D Torch frontend,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-20 08:10:42+01:00,-3600,2021-05-25 07:56:40-06:00,21600,True,False,['torch_frontend.py'],['9f0bed404eb00cb440256a3437f17dd59b9a60bb'],0,2,2,1,,,
5f5a05eabc68afc8763edd3996d78e3510febeac,FIX Make sure TF has complex input to FFT,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2021-03-20 10:06:12+01:00,-3600,2021-05-25 07:56:40-06:00,21600,True,False,"['tensorflow_backend.py', 'tensorflow_frontend.py']",['73751ab7702051d4a42ba382e8e51eefb3ad35f1'],1,6,7,2,1.0,1.0,0.0
12992fe086e0cbf84d162b545cad967e88560cd3,"TST Remove custom torch build

no longer necessary with new jenkins v100 gpus",Dylan Simon,dylan@dylex.net,Joakim Andén,janden@kth.se,2021-06-03 12:03:32-04:00,14400,2021-06-08 17:38:31-05:00,18000,True,False,['Dockerfile'],['5f5a05eabc68afc8763edd3996d78e3510febeac'],18,1,19,1,,,
a39f5b8a483b9e1f8021bab12ff2012da676959e,TST re-add libcudnn8 to image,Dylan Simon,dylan@dylex.net,Joakim Andén,janden@kth.se,2021-06-03 13:00:03-04:00,14400,2021-06-08 17:38:31-05:00,18000,True,False,['Dockerfile'],['12992fe086e0cbf84d162b545cad967e88560cd3'],0,1,1,1,,,
38cead012d1b134843a1dd0d5ea160042037c7da,MAINT bump version (#756),eickenberg,eickenberg@users.noreply.github.com,GitHub,noreply@github.com,2021-07-22 22:43:25-04:00,14400,2021-07-23 04:43:25+02:00,-7200,True,False,['version.py'],['a39f5b8a483b9e1f8021bab12ff2012da676959e'],2,2,4,1,,,
859905ca0e0c5a49f11cb18da4761e6bdf60bfc4,Adding details of workshop to README.md (#805),MuawizChaudhary,39755015+MuawizChaudhary@users.noreply.github.com,GitHub,noreply@github.com,2022-04-26 13:53:18-04:00,14400,2022-04-26 13:53:18-04:00,14400,True,False,['README.md'],['38cead012d1b134843a1dd0d5ea160042037c7da'],0,9,9,1,,,
c06545cbbd93a0fd2ba31114d7bedf602ef3e3fa,Removed mention of the 2022 conference from the README.md. Thanks to all who attended and/or organized the event <3,Muawiz Chaudhary,muawizc@gmail.com,Joakim Andén,janden@kth.se,2022-05-24 12:10:10-04:00,14400,2022-05-27 09:43:38+02:00,-7200,True,False,['README.md'],['859905ca0e0c5a49f11cb18da4761e6bdf60bfc4'],9,0,9,1,,,
a86206508b725e57d7ded74fc635bf42764e043a,"MAINT update readme with paper

 (#614)

* MAINT updated readme with paper

* Update for citation bibtex to appear

* MAINT Cite paper correctly

* Updated with bibtex

* DOC removed repetition",MuawizChaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2020-06-29 01:11:31-07:00,25200,2022-07-03 16:03:49-04:00,14400,True,False,['README.md'],['c06545cbbd93a0fd2ba31114d7bedf602ef3e3fa'],2,3,5,1,,,
ffbc7980cd54182186cb8e2a76c5afe34e0d2766,"API Refactor code to take advantage of rfft (#573)

Make tensors real

So padding and modulus returns real tensors, FFTs accept real inputs and IFFTs return real outputs. Upgrade NumPy FFT to SciPy FFT. Remove FFT class and replace with functions. General refactoring of padding, modulus, and FFT backend functions.

* ENH addition of real to complex

* ENH removal of pad_1d, removal of casting to complex, complex modolus renamed to modolus

* ENH added rfft to fft call

* API refactored 1d scattering in torch to take advantage of rfft

* API refactored numpy backendAto take advantage of rfft

* API refactored tensorflow backend to take advantage of rfft

* MAINT removed print statements

* MAINT removed real backend primative

* API refactor torch 2d to use rfft

* TST changes to fix tests

* API refactor numpy 2d backend to take advantage of rfft

* API refactor tensorflow 2d backend to take advantage of rfft

* API refactor torch harmonic3d to take advantage of backend unification

* API refactor numpy harmonic3d to take advantage of backend unification

* API refactor tensorflow harmonic3d to take advantage of backend unification

* STY changed modulus_complex to modulus

* MAINT remove padding defaults

* STY removed white space

* MAINT fixed frontend stuffs

* MAINT removed _iscomplex from 3d backend

* MAINT removed complex_modulus function

* MAINT call type_check instead of repeating code

* TST test changes

* MAINT use scipy fft instead of numpy

* ENH add checks for complex

* MAINT add real and complex check in tensorflow backend

* MAINT added numpy real and complex check

* TEST check dtype rather than check type

* MAINT revmoed useless fft2

* MAINT rename

* MAINT remove unused sanity_check function

* MAINT pad header refactor

* MAINT replace scipy.fft with scipy.fftpack

* MAINT replaced torch.zeros_like with torch.zeros

* DOC removed unneeded docstrings

* MAINT renamed x to input_array

* TST added assert test, added spaces

* TST remove .squeeze

* TST changed tests to mimic numpy fft

* MAINT removed mode, value

* MAINT removed check for mode

* DOC docstring changes

* MAINT import fftpack, change modulus calculation

* TST removing unused code and line

* TST closed form for calculating fourier coefficents

* MAINT added contigouous check

* MAINT changed dtype of array

* MAINT changed way of initalizing modulus array

* API real tensors are now denoted with a final dim of 1.

* API 2d now marks tensors as real

* MAINT removed fft Complex to Complex

* API refactor each fft into its own function across all backends in scattering1d

* API removed base_backend, refactored FFT into seperate specific FFT functions.

* MAINT cdgmm now only takes in real tensors as input

* MAINT skcuda stuff runs

* MAINT modified kernels to output real arrays, added 3d modulus kernel.

* MAINT refactored numpy backend pad function

* MAINT revert addition of 3d modulus kernel

* MAINT removed usages of squeeze and unsqueeze introduced in the PR

* TST simplfication of complex coefficent calculation

* MAINT removed unused functions

* TST replace all instances of squeeze and unsqueeze

* MAINT specify axes in numpy FFTs

* MAINT use keepdims argument

* MAINT removed uneeded paren

* MAINT removed _is_real_ from 1d torch backend

* MAINT import _is_complex, cotiguous_check, complex_check

* MAINT replace checks with functions from general torch backend.

* MAINT replace all uses of new

* MAINT replaced new with empty_like

* TST readded tests

* TST readded test

* MAINT use empty or empty_like

* MAINT define n dimentional concatenate for 1d and 2d

* MAINT code changes

* TST remove squeeze

* MAINT added casting to complex in torch rfft backend primitives

* MAINT remove unused function

* MAINT use torch.empty

* MIANT replace np.real with .real

* MAINT we don't add a dimention and remove when padding

* MAINT added comments, changed modulus function return

* MAINT removed commas

* TST removed reshape operation

* TST added rfft test

* MAINT replace squeeze operation with reshape operation

* TST removed unused array, use meshgrid to generate indices now

* TST added FFT tests

* TST added fft tests

* MAINT removed paren

* MAINT remove unused import

* MAINT fft comments

* MAINT remove unused import

* TST removed indentation

* TST spaces

* MAINT changed  skcuda tensor initalization function

* TST changed fft tests

* MAINT spaces

* MAINT blank space

* MAINT removed empty line

* TST better FFT tests

* TST better fft test

* TST removed un-needed lines, whitespace

Co-authored-by: chaudhm <chaudhm@wwu.edu>",Joakim Andén,janden@flatironinstitute.org,Michael Eickenberg,michael.eickenberg@gmail.com,2020-06-29 20:18:59+02:00,-7200,2022-07-03 16:03:49-04:00,14400,True,False,"['base_backend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'scattering1d.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'scattering2d.py', 'utils.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'scattering3d.py', 'torch_frontend.py', 'test_torch_scattering1d.py', 'test_numpy_scattering2d.py', 'test_tensorflow_scattering2d.py', 'test_torch_scattering2d.py', 'test_torch_scattering3d.py']",['a86206508b725e57d7ded74fc635bf42764e043a'],850,522,1372,27,0.0,1.0,1.0
f92b507738c80d44463d1960723e6be4a40b53ac,"DOC Downgrade Sphinx version

Right now, m2r is not compatible with Sphinx v3.",Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2020-06-29 20:36:17+02:00,-7200,2022-07-03 16:03:49-04:00,14400,True,False,['requirements_optional.txt'],['ffbc7980cd54182186cb8e2a76c5afe34e0d2766'],1,1,2,1,,,
80491bd655fd3439367b3fc964968426506fa1f3,FIX Make plot_filters use SciPy FFT,Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2020-06-29 20:50:25+02:00,-7200,2022-07-03 16:03:49-04:00,14400,True,False,['plot_filters.py'],['f92b507738c80d44463d1960723e6be4a40b53ac'],1,1,2,1,,,
5cb66965ac8ae464c7d4641a3ace84e14742f6da,STY Remove unused imports from setup.py,Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2020-06-24 18:21:41+02:00,-7200,2022-07-03 16:03:49-04:00,14400,True,False,['setup.py'],['80491bd655fd3439367b3fc964968426506fa1f3'],4,0,4,1,,,
d1790589ffa96bcac712ec486e58e86c6573228c,STY Fix whitespace in setup.py,Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2020-06-24 18:22:02+02:00,-7200,2022-07-03 16:03:49-04:00,14400,True,False,['setup.py'],['5cb66965ac8ae464c7d4641a3ace84e14742f6da'],1,1,2,1,,,
07c5e78a443addc87823ff99ffd533995fa2bfc5,MAINT remove unused inplace argument,chaudhm,chaudhm@wwu.edu,Michael Eickenberg,michael.eickenberg@gmail.com,2020-06-27 11:38:48-07:00,25200,2022-07-03 16:03:49-04:00,14400,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'tensorflow_backend.py', 'torch_skcuda_backend.py', 'test_numpy_scattering2d.py', 'test_tensorflow_scattering2d.py', 'test_torch_scattering2d.py', 'test_torch_scattering3d.py']",['d1790589ffa96bcac712ec486e58e86c6573228c'],51,20,71,10,0.7272727272727273,1.0,1.0
80d660552ab6fd8ca580acd3e06dc1b9f8163af3,STY removed all author headings,MuawizChaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2020-07-19 02:42:55-07:00,25200,2022-07-03 16:03:49-04:00,14400,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'scattering1d.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'scattering2d.py', 'filter_bank.py', 'scattering3d.py', 'filter_bank.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'utils.py']",['07c5e78a443addc87823ff99ffd533995fa2bfc5'],49,0,49,19,,,
c68fe2bf55b7e078df7cb260d4e64a5522b729d8,TST Refactor 1D tests,chaudhm,chaudhm@wwu.edu,Michael Eickenberg,michael.eickenberg@gmail.com,2020-06-27 13:49:46-07:00,25200,2022-07-03 16:03:49-04:00,14400,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'test_numpy_backend_1d.py', 'test_tensorflow_backend_1d.py', 'test_torch_backend_1d.py', 'test_torch_scattering1d.py']",['80d660552ab6fd8ca580acd3e06dc1b9f8163af3'],142,480,622,6,0.7741935483870968,0.7634408602150538,0.989247311827957
de2af1d1e75f4fd940648314768eac24eccd5420,TST Update pip3 prior to installing packages,Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2021-01-13 11:38:46+01:00,-3600,2022-07-03 16:10:52-04:00,14400,True,False,['Dockerfile'],['c68fe2bf55b7e078df7cb260d4e64a5522b729d8'],0,15,15,1,,,
54f32b43596a79126f0915897c9e10f44619a019,"TST Fix pip3 invocation

Safe way of doing this is with `python3 -m pip` instead of `pip3` since
this ensures that we're using the version of `pip` consistent with our
`python3` binary.",Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2021-01-13 12:12:20+01:00,-3600,2022-07-03 16:10:52-04:00,14400,True,False,['Dockerfile'],['de2af1d1e75f4fd940648314768eac24eccd5420'],2,3,5,1,,,
4661a2518ee04ad00dd8c7ecd63a0fd20d03374b,"TST Make `pip` output version information

First, we output the current version of `pip`, then call `pip freeze` to
list the installed pacakges in a requirements-style format.",Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2021-01-13 12:25:17+01:00,-3600,2022-07-03 16:10:52-04:00,14400,True,False,['Jenkinsfile'],['54f32b43596a79126f0915897c9e10f44619a019'],0,2,2,1,,,
b6c05a404b51a5b3d8ba26ced23d5930052046f6,TST split numpy tests into two files. added fft type tests,chaudhm,chaudhm@wwu.edu,Michael Eickenberg,michael.eickenberg@gmail.com,2020-07-01 16:12:11-07:00,25200,2022-07-03 16:10:52-04:00,14400,True,False,"['test_numpy_backend_2d.py', 'test_numpy_scattering2d.py']",['4661a2518ee04ad00dd8c7ecd63a0fd20d03374b'],143,170,313,2,1.0,1.0,1.0
05ccef26c9c183f36b56daea8a3880a26ed9fdbc,TST added subsample fourier type checkng test,chaudhm,chaudhm@wwu.edu,Michael Eickenberg,michael.eickenberg@gmail.com,2020-07-01 16:32:21-07:00,25200,2022-07-03 16:10:52-04:00,14400,True,False,"['numpy_backend.py', 'test_numpy_backend_2d.py']",['b6c05a404b51a5b3d8ba26ced23d5930052046f6'],0,9,9,2,1.0,1.0,0.8333333333333334
48bd3b36e5e2b0339f023dd78bc53707377cae6c,TST Split tensorflow 2d tests into backend and scattering. added fft type tests,chaudhm,chaudhm@wwu.edu,Michael Eickenberg,michael.eickenberg@gmail.com,2020-07-01 16:53:08-07:00,25200,2022-07-03 16:10:52-04:00,14400,True,False,"['test_tensorflow_backend_2d.py', 'test_tensorflow_scattering2d.py']",['05ccef26c9c183f36b56daea8a3880a26ed9fdbc'],152,171,323,2,1.0,1.0,1.0
568a2a33e0d380a10d0251295acbf8ed241a7f89,TST added Subsampling Fourier type checking and test,chaudhm,chaudhm@wwu.edu,Michael Eickenberg,michael.eickenberg@gmail.com,2020-07-01 16:56:20-07:00,25200,2022-07-03 16:10:52-04:00,14400,True,False,"['tensorflow_backend.py', 'test_tensorflow_backend_2d.py']",['48bd3b36e5e2b0339f023dd78bc53707377cae6c'],0,9,9,2,1.0,1.0,0.8333333333333334
763ee0e2c8ae9b5c9814cc6a7f79993d24c09ca7,TST split torch tests into scattering and backend tests,chaudhm,chaudhm@wwu.edu,Michael Eickenberg,michael.eickenberg@gmail.com,2020-07-01 17:26:54-07:00,25200,2022-07-03 16:10:52-04:00,14400,True,False,"['test_torch_backend_2d.py', 'test_torch_scattering2d.py']",['568a2a33e0d380a10d0251295acbf8ed241a7f89'],349,387,736,2,,,
46ddedb10618738dfb2422071ac2ea7e2c4e6a56,STY spaces,chaudhm,chaudhm@wwu.edu,Michael Eickenberg,michael.eickenberg@gmail.com,2020-07-01 17:32:26-07:00,25200,2022-07-03 16:10:52-04:00,14400,True,False,['test_torch_backend_2d.py'],['763ee0e2c8ae9b5c9814cc6a7f79993d24c09ca7'],2,2,4,1,,,
b5f68db354738e16f6e979afecc5fe78ada7d184,"TST refactor dimention addition, remove squeeze",chaudhm,chaudhm@wwu.edu,Michael Eickenberg,michael.eickenberg@gmail.com,2020-07-02 20:27:03-07:00,25200,2022-07-03 16:10:52-04:00,14400,True,False,"['test_numpy_backend_2d.py', 'test_tensorflow_backend_2d.py', 'test_torch_backend_2d.py']",['46ddedb10618738dfb2422071ac2ea7e2c4e6a56'],9,6,15,3,0.0,0.0,0.0
33b9c10e8e64f6aff8f569e2eb76960c1dc94587,STY Removed trailing lines,chaudhm,chaudhm@wwu.edu,Michael Eickenberg,michael.eickenberg@gmail.com,2020-07-17 01:45:14-07:00,25200,2022-07-03 16:10:52-04:00,14400,True,False,"['test_numpy_backend_2d.py', 'test_tensorflow_backend_2d.py', 'test_torch_backend_2d.py']",['b5f68db354738e16f6e979afecc5fe78ada7d184'],6,0,6,3,,,
75ea26eddb8ef0158106998143d0ee9d65504b59,MAINT removed inpalce tests,chaudhm,chaudhm@wwu.edu,Michael Eickenberg,michael.eickenberg@gmail.com,2020-07-17 01:52:20-07:00,25200,2022-07-03 16:10:52-04:00,14400,True,False,"['test_numpy_backend_2d.py', 'test_tensorflow_backend_2d.py', 'test_torch_backend_2d.py']",['33b9c10e8e64f6aff8f569e2eb76960c1dc94587'],9,6,15,3,,,
abd6583af0a628ce84dc22283c6d416d1decdffb,"FIX color in the jupyer notebook (scattering disk and racoon)

Originally by @edouardoyallon but lost in the rebase. Hopefully restored
now.",Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2021-05-25 17:23:42-05:00,18000,2022-07-03 16:10:52-04:00,14400,True,False,"['plot_invert_scattering_torch.py', 'plot_scattering_disk.py']",['75ea26eddb8ef0158106998143d0ee9d65504b59'],2,3,5,2,,,
a2929ff1622fdd9ccb1ab095fccd0dc9d0578426,"MAINT Rename T → N in 1D (#657)

Currently, the signal length is denoted by T in 1D, which is easily
confused with the averaging scale 2 ** J and inconsistent with the
notation for 2D, where the shape is given by M, N. As a result, we
change the notation to N.",Joakim Andén,janden@flatironinstitute.org,Michael Eickenberg,michael.eickenberg@gmail.com,2021-02-10 23:06:54+01:00,-3600,2022-07-03 16:10:52-04:00,14400,True,False,"['scattering1d.py', 'filter_bank.py', 'base_frontend.py']",['abd6583af0a628ce84dc22283c6d416d1decdffb'],37,37,74,3,,,
7e7b3847f2c8554dbd0503e6c0c23ea13d8bc467,TST Rename jobs in GH Actions,Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2021-02-11 15:17:02+01:00,-3600,2022-07-03 16:10:52-04:00,14400,True,False,"['conda.yml', 'pip.yml']",['a2929ff1622fdd9ccb1ab095fccd0dc9d0578426'],2,2,4,2,,,
19d2678ce88ed90b2020d1d5fe4c346212dbe285,"FIX multi-GPU scattering (#640)

Filters are registered as buffers in Torch, which means that they get
copied to different GPUs in the multi-GPU setting. However, during
`load_filters`, we assign these filters to the dictionaries `self.phi`
and `self.psi`, which is shared between GPUs. By separating these
dictionaries, we avoid using the wrong filters when computing the
scattering transforms.",anakin-datawalker,36677060+anakin-datawalker@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2021-02-11 21:06:00+01:00,-3600,2022-07-03 16:10:52-04:00,14400,True,False,['torch_frontend.py'],['7e7b3847f2c8554dbd0503e6c0c23ea13d8bc467'],13,15,28,1,0.0,0.0,1.0
49c486b4cc2713d6806b8e5fd95a97ced45d2320,"MAINT Refactor backends to use classes

This is a squash of many commits.
Muawiz had started this project as part of his summer internship.
In order to finish it and to make sure the commits in the git history pass tests we aggregate them here because taken separately they would not pass tests because the commits contain partial reorganization.

API adding refactor backends

MAINT include backend initalization at the end of each file. renamed each backend class

MAINT skcuda backend refactored

MAINT removed pass in torch backend

MAINT removal of jax backend

MAINT removed redundant line

STY white space added and removed

STY white space changes

MAINT removed BACKEND_NAME variable

MAINT added checks back into numpy backend

MAINT refactored checks back into torch backends

MAINT checks added back into tensorflow backend

STY removed parenthesis

MAINT fixed incorrect modulus call

MAINT add option to specify name for numpy backend

MAINT removed inplace operation, fixed torck_skcuda calling torch
backend functions

STY removed parenthesis

STY remove parenthesis

MAINT move modulus inside torch class

MAINT remove initalization of checks

MAINT define concatenate function in general backend

MAINT define concatenate function in general backend tensorflow

MAINT define concatenate function in general backend numpy

MAINT do numpy imports in backends

MAINT tensorflow now inheriates from numpy backend

TST changed error message we check for to appropriate one.

MAINT moved checks to top, moved concatenate above.

TST general backend test

TST remove print statement

FIX make tests pass for numpy backend 2D

MAINT make tests pass for all backends. Next step is probably to create subclasses for the different-dimensional backends

Co-authored-by: chaudhm <chaudhm@wwu.edu>
Co-authored-by: Joakim Andén <janden@kth.se>",chaudhm,chaudhm@wwu.edu,Michael Eickenberg,michael.eickenberg@gmail.com,2020-07-16 09:47:45-07:00,25200,2022-07-03 16:10:52-04:00,14400,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'numpy_frontend.py', 'torch_frontend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'test_torch_backend.py', 'test_numpy_backend_1d.py', 'test_tensorflow_backend_1d.py', 'test_torch_backend_1d.py', 'test_torch_scattering1d.py']",['19d2678ce88ed90b2020d1d5fe4c346212dbe285'],831,808,1639,22,0.2777777777777778,1.0,0.0
9b865ec93ec29d4df9a2ec009592d9e02ed02cc3,"MAINT Finish backend refactor during kymatio sprint 2021

MAINT Fix spelling of Skcuda backend class

TST Fix bug in 2D torch subsample tests

MAINT Update 2D Torch backend to use inheritance

MAINT Make torch_skcuda backend in 2D use inheritance

MAINT Make 3D torch backend use inheritance

MAINT Make 3D torch_skcuda backend use inheritance

FIX remove backend name as class init argument

ENH numpy 2d backend class

COSM remove commented code

ENH tensorflow 2d backend class

ENH numpy 3d backend class

ENH tensorflow 3d backend class

MAINT Update NP backends with class methods

MAINT Update TF backends with class methods

MAINT Update Torch backends to use class methods

MAINT remove cdgmm from tf backend because inherited from numpy backend

COSM remove commented code

MAINT make tf 3d backend use static and class methods

MAINT remove instantiation from torch backend test

MAINT remove tf import from tf 1d backend test

Co-authored-by: Joakim Andén <janden@kth.se>",Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2021-02-10 15:48:01+01:00,-3600,2022-07-03 16:10:52-04:00,14400,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'torch_skcuda_backend.py', 'test_torch_backend.py', 'test_tensorflow_backend_1d.py', 'test_torch_backend_1d.py', 'test_torch_backend_2d.py']",['49c486b4cc2713d6806b8e5fd95a97ced45d2320'],893,768,1661,20,0.10526315789473684,0.0,0.0
c029adfb674b59622e3d9fdaea98f5e83db66938,"MAINT Update Python requirements

We no longer support 3.5, so minimum version is 3.6.",Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2021-02-11 23:45:05+01:00,-3600,2022-07-03 16:10:52-04:00,14400,True,False,['setup.py'],['9b865ec93ec29d4df9a2ec009592d9e02ed02cc3'],2,1,3,1,,,
5c7c0048dbe3c2827e7f182e411961adf951ab66,DOC Update @janden's e-mail address,Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2021-02-11 23:56:35+01:00,-3600,2022-07-03 16:10:52-04:00,14400,True,False,['setup.py'],['c029adfb674b59622e3d9fdaea98f5e83db66938'],1,1,2,1,,,
8d4189a181ff2b86d840e17bdb1a5796b4d85f0a,DOC Update @eickenberg's e-mail address,eickenberg,eickenberg@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2021-02-12 11:53:44-05:00,18000,2022-07-03 16:10:52-04:00,14400,True,False,['setup.py'],['5c7c0048dbe3c2827e7f182e411961adf951ab66'],1,1,2,1,,,
70eadc427c4edd5dc8f311d021dcfd48411f0913,"TST Relax tolerance in 2D TF FFT unit test

The implementaiton used by TF to calculate the FFT is not very
accurate, so we need to relax the tolerance a little to eliminate
spurious test failures.",Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2021-02-15 09:34:24+01:00,-3600,2022-07-03 16:10:52-04:00,14400,True,False,['test_tensorflow_backend_2d.py'],['8d4189a181ff2b86d840e17bdb1a5796b4d85f0a'],3,7,10,1,1.0,1.0,1.0
d9bd180cdf0e0badeffddcaf476ccb60e570f45b,FIX png diagram,Edouard Oyallon,edouard.oyallon@lip6.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2021-03-18 08:37:28+01:00,-3600,2022-07-03 16:10:52-04:00,14400,True,False,['algorithm.png'],['70eadc427c4edd5dc8f311d021dcfd48411f0913'],0,0,0,1,,,
9223eb9529827e74dc4940c75d981941263c3e6d,"ENH asv benchmarks for Kymatio v0.2+ (#658)

* MAINT bump version (#607)

* fix-653 (with CPU numpy only)

* splitting test into numpy torch

* fixing bugs

* adding CUDA support

* adding cupy..

* woof

* woof

* woof

* pytorch doesnt like multi processing

* figure out a solution

* figure out a solution

* figure out a solution

* figure out a solution

* ctg check

* adding more time

* improving tests of 1d 2d 3d

* imrpoving 123D test

* minor bug

* restructuring the tests

* refactor

* adding files

* modif

* minor fix

* minor fix

* doc

* doc

* micro bug with the backend

* micro bug with the backend

* addressing joakims comments and rebasing on dev

* random seeds

* removing some file

Co-authored-by: eickenberg <eickenberg@users.noreply.github.com>
Co-authored-by: edouardoyallon <edouard.oyallon@ens.fr>",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2021-03-18 10:03:10+01:00,-3600,2022-07-03 16:10:52-04:00,14400,True,False,"['.gitignore', 'asv.conf.json', 'asv_numpy.conf.json', 'asv_torch.conf.json', 'asv_torch_cuda.conf.json', '__init__.py', 'common.py', '__init__.py', 'scattering1d.py', 'scattering2d.py', 'scattering3d.py', 'scattering1d.py', 'scattering2d.py', 'scattering3d.py', '__init__.py', 'scattering1d.py', 'scattering2d.py', 'scattering3d.py', 'developerguide.rst']",['d9bd180cdf0e0badeffddcaf476ccb60e570f45b'],303,667,970,19,1.0,1.0,0.6338028169014085
fb2627ecbd15504dbd09efcdf4170c0f483a7faf,ENH `scipy.fftpack` -> `scipy.fft` (#703),OverLordGoldDragon,16495490+OverLordGoldDragon@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2021-04-01 22:55:05+04:00,-14400,2022-07-03 16:10:52-04:00,14400,True,False,"['plot_filters.py', 'numpy_backend.py', 'filter_bank.py', 'filter_bank.py', 'utils.py', 'test_numpy_backend_1d.py']",['9223eb9529827e74dc4940c75d981941263c3e6d'],7,7,14,6,,,
54772cc7cb6c14c542f4bab6fe13c3378e2ecfb7,MathJax support (#743),OverLordGoldDragon,16495490+OverLordGoldDragon@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2021-07-22 17:51:40+04:00,-14400,2022-07-03 16:10:52-04:00,14400,True,False,['conf.py'],['fb2627ecbd15504dbd09efcdf4170c0f483a7faf'],1,1,2,1,,,
5f37d04fb205c7228c39db9ca2e1007594d0662c,"Stride (#673)

Co-authored-by: Philip Warrick <philip.warrick@gmail.com>

Reviewed-by: Joakim Andén, Michael Eickenberg, Vincent Lostanlen, John Muradeli, Cyrus Vahidi

* DOC Fix missing blank line in 3D doc example

* TST Install TF in Circle CI config

Co-authored-by: edouardoyallon <edouard.oyallon@lip6.fr>

* MAINT update readme with paper

 (#614)

* MAINT updated readme with paper

* Update for citation bibtex to appear

* MAINT Cite paper correctly

* Updated with bibtex

* DOC removed repetition

* API Refactor code to take advantage of rfft (#573)

Make tensors real

So padding and modulus returns real tensors, FFTs accept real inputs and IFFTs return real outputs. Upgrade NumPy FFT to SciPy FFT. Remove FFT class and replace with functions. General refactoring of padding, modulus, and FFT backend functions.

* ENH addition of real to complex

* ENH removal of pad_1d, removal of casting to complex, complex modolus renamed to modolus

* ENH added rfft to fft call

* API refactored 1d scattering in torch to take advantage of rfft

* API refactored numpy backendAto take advantage of rfft

* API refactored tensorflow backend to take advantage of rfft

* MAINT removed print statements

* MAINT removed real backend primative

* API refactor torch 2d to use rfft

* TST changes to fix tests

* API refactor numpy 2d backend to take advantage of rfft

* API refactor tensorflow 2d backend to take advantage of rfft

* API refactor torch harmonic3d to take advantage of backend unification

* API refactor numpy harmonic3d to take advantage of backend unification

* API refactor tensorflow harmonic3d to take advantage of backend unification

* STY changed modulus_complex to modulus

* MAINT remove padding defaults

* STY removed white space

* MAINT fixed frontend stuffs

* MAINT removed _iscomplex from 3d backend

* MAINT removed complex_modulus function

* MAINT call type_check instead of repeating code

* TST test changes

* MAINT use scipy fft instead of numpy

* ENH add checks for complex

* MAINT add real and complex check in tensorflow backend

* MAINT added numpy real and complex check

* TEST check dtype rather than check type

* MAINT revmoed useless fft2

* MAINT rename

* MAINT remove unused sanity_check function

* MAINT pad header refactor

* MAINT replace scipy.fft with scipy.fftpack

* MAINT replaced torch.zeros_like with torch.zeros

* DOC removed unneeded docstrings

* MAINT renamed x to input_array

* TST added assert test, added spaces

* TST remove .squeeze

* TST changed tests to mimic numpy fft

* MAINT removed mode, value

* MAINT removed check for mode

* DOC docstring changes

* MAINT import fftpack, change modulus calculation

* TST removing unused code and line

* TST closed form for calculating fourier coefficents

* MAINT added contigouous check

* MAINT changed dtype of array

* MAINT changed way of initalizing modulus array

* API real tensors are now denoted with a final dim of 1.

* API 2d now marks tensors as real

* MAINT removed fft Complex to Complex

* API refactor each fft into its own function across all backends in scattering1d

* API removed base_backend, refactored FFT into seperate specific FFT functions.

* MAINT cdgmm now only takes in real tensors as input

* MAINT skcuda stuff runs

* MAINT modified kernels to output real arrays, added 3d modulus kernel.

* MAINT refactored numpy backend pad function

* MAINT revert addition of 3d modulus kernel

* MAINT removed usages of squeeze and unsqueeze introduced in the PR

* TST simplfication of complex coefficent calculation

* MAINT removed unused functions

* TST replace all instances of squeeze and unsqueeze

* MAINT specify axes in numpy FFTs

* MAINT use keepdims argument

* MAINT removed uneeded paren

* MAINT removed _is_real_ from 1d torch backend

* MAINT import _is_complex, cotiguous_check, complex_check

* MAINT replace checks with functions from general torch backend.

* MAINT replace all uses of new

* MAINT replaced new with empty_like

* TST readded tests

* TST readded test

* MAINT use empty or empty_like

* MAINT define n dimentional concatenate for 1d and 2d

* MAINT code changes

* TST remove squeeze

* MAINT added casting to complex in torch rfft backend primitives

* MAINT remove unused function

* MAINT use torch.empty

* MIANT replace np.real with .real

* MAINT we don't add a dimention and remove when padding

* MAINT added comments, changed modulus function return

* MAINT removed commas

* TST removed reshape operation

* TST added rfft test

* MAINT replace squeeze operation with reshape operation

* TST removed unused array, use meshgrid to generate indices now

* TST added FFT tests

* TST added fft tests

* MAINT removed paren

* MAINT remove unused import

* MAINT fft comments

* MAINT remove unused import

* TST removed indentation

* TST spaces

* MAINT changed  skcuda tensor initalization function

* TST changed fft tests

* MAINT spaces

* MAINT blank space

* MAINT removed empty line

* TST better FFT tests

* TST better fft test

* TST removed un-needed lines, whitespace

Co-authored-by: chaudhm <chaudhm@wwu.edu>

* DOC Downgrade Sphinx version

Right now, m2r is not compatible with Sphinx v3.

* FIX Make plot_filters use SciPy FFT

* TST Rename kymatio-dev-docs to just dev-docs

* STY Remove unused imports from setup.py

* STY Fix whitespace in setup.py

* MAINT remove unused inplace argument

* STY removed all author headings

* TST Refactor 1D tests

* TST Update pip3 prior to installing packages

* TST Fix pip3 invocation

Safe way of doing this is with `python3 -m pip` instead of `pip3` since
this ensures that we're using the version of `pip` consistent with our
`python3` binary.

* TST Make `pip` output version information

First, we output the current version of `pip`, then call `pip freeze` to
list the installed pacakges in a requirements-style format.

* BUG Ensure compatibility with cupy-8.0

Need to access utils with `cupy._util` instead of `cupy.util`.

* TST split numpy tests into two files. added fft type tests

* TST added subsample fourier type checkng test

* TST Split tensorflow 2d tests into backend and scattering. added fft type tests

* TST added Subsampling Fourier type checking and test

* TST split torch tests into scattering and backend tests

* STY spaces

* TST refactor dimention addition, remove squeeze

* STY Removed trailing lines

* MAINT removed inpalce tests

* TST Temporarily set number of GPUs to one

While SCC is investigating the feasability of upgrading the GPUs, we
only have access to the one.

* FIX color in the jupyer notebook (scattering disk and racoon)

* TST Try GH actions for pip tests

* TST Add workflow for Conda

* TST Explicitly set GH Actions system to focal

* MAINT Rename T → N in 1D (#657)

Currently, the signal length is denoted by T in 1D, which is easily
confused with the averaging scale 2 ** J and inconsistent with the
notation for 2D, where the shape is given by M, N. As a result, we
change the notation to N.

* TST Remove Travis CI

* Support for low-pass filter temporal support parameter T

* clean up test_Scattering1D_filter_factory_T

* Distinguished sigma_low and sigma_min

* Moved test plotting of filters into an example

* Logic fixes, docs

* correctness test; small cleanup

* Add parameter T support to Keras and Tensorflow frontends

* Add stride support to Tensorflow and Keras frontends

* add self.log2_T

* fix border idx computation, change `T` constraint

* requested changes

* fix `max_sub_phi`

* style

* `T` should have no effect on subsampling with `average=False`

* docs; move `T` to earlier arg position

it belongs alongside `J, Q`

* Add torch test

* `phi_f['j']` meta fix

* `lower-bound` -> `lower bound`

* ensure log2_T defined in scattering_filter_factory()

* fix previous commit

* remove project files

* tentative new test adjusting T

* removed unused imports

* class to functions

* Removed extraneous

* class to function

* drop J from `scattering()`; undo pad args

* `kJ` -> `klog2_T` & for `k2_J`; `specifies` -> `limits`

* Support for low-pass filter temporal support parameter T

* clean up test_Scattering1D_filter_factory_T

* Distinguished sigma_low and sigma_min

* Moved test plotting of filters into an example

* Logic fixes, docs

* Add parameter T support to Keras and Tensorflow frontends

* Add stride support to Tensorflow and Keras frontends

* correctness test; small cleanup

* add self.log2_T

* fix border idx computation, change `T` constraint

* requested changes

* fix `max_sub_phi`

* style

* `T` should have no effect on subsampling with `average=False`

* docs; move `T` to earlier arg position

it belongs alongside `J, Q`

* Add torch test

* `phi_f['j']` meta fix

* `lower-bound` -> `lower bound`

* ensure log2_T defined in scattering_filter_factory()

* fix previous commit

* remove project files

* tentative new test adjusting T

* removed unused imports

* class to functions

* Removed extraneous

* class to function

* drop J from `scattering()`; undo pad args

* `kJ` -> `klog2_T` & for `k2_J`; `specifies` -> `limits`

* add adjust J test

* clean up merge

* remove main

* remove project files

* Merged plot_filter_T and updated references to T and N

* Revert ""Merge branch 'stride' of https://github.com/pawarrick/kymatio into pr/673""

This reverts commit cb065e15be10337b0bb4441e92a98e0b2f920c3f, reversing
changes made to 5afd1b83b7a3c41d7e99359f1d1677b649ab15cc.

* Revert ""Revert ""Merge branch 'stride' of https://github.com/pawarrick/kymatio into pr/673""""

This reverts commit 68e8242e784f88fb8d4249ef9f0e118181074658.

* Support for low-pass filter temporal support parameter T

* clean up test_Scattering1D_filter_factory_T

* Distinguished sigma_low and sigma_min

* Moved test plotting of filters into an example

* Logic fixes, docs

* Add parameter T support to Keras and Tensorflow frontends

* Add stride support to Tensorflow and Keras frontends

* correctness test; small cleanup

* add self.log2_T

* fix border idx computation, change `T` constraint

* requested changes

* fix `max_sub_phi`

* style

* `T` should have no effect on subsampling with `average=False`

* docs; move `T` to earlier arg position

it belongs alongside `J, Q`

* Add torch test

* `phi_f['j']` meta fix

* `lower-bound` -> `lower bound`

* ensure log2_T defined in scattering_filter_factory()

* fix previous commit

* remove project files

* tentative new test adjusting T

* removed unused imports

* class to functions

* Removed extraneous

* class to function

* drop J from `scattering()`; undo pad args

* `kJ` -> `klog2_T` & for `k2_J`; `specifies` -> `limits`

* TST Don't test Torch for Jenkins

* TST Let Jenkins test torch again

Since the issue related to 1.7.1 is resolved, we can revert the previous
change excluding torch since it should run on <1.3 again.

* TST Simplfiy GHA conda workflows

By introducing an environment variable for the conda environment name.

* FIX Make sure TF has complex input to FFT

* fix `max_sub_phi`

* style

* ensure log2_T defined in scattering_filter_factory()

* fix previous commit

* remove project files

* tentative new test adjusting T

* add adjust J test

* clean up merge

* remove main

* remove project files

* Merged plot_filter_T and updated references to T and N

* undo misc rebase artifacts

* `compute_border_indices` logic fix

* improve docs

* Restore overwritten plot_filters.py

* slightly relax tolerance for assert

* remove main

* remove 'self': now a function

* fixed backend fixture problem

* adding missing mandatory T argument

* T->N notation and default T value as 2**J

* add mandatory T

* add new log2_T=J_signal argument

* removed unnecessary complex cast in pad

* remove `pytest.main()` code

Co-authored-by: Joakim Andén <janden@flatironinstitute.org>
Co-authored-by: edouardoyallon <edouard.oyallon@lip6.fr>
Co-authored-by: MuawizChaudhary <39755015+MuawizChaudhary@users.noreply.github.com>
Co-authored-by: chaudhm <chaudhm@wwu.edu>
Co-authored-by: Joakim Andén <janden@kth.se>
Co-authored-by: Philip Warrick <philip.warrick@perigen.com>
Co-authored-by: Philip Warrick <philip.warrick>
Co-authored-by: OverLordGoldDragon <16495490+OverLordGoldDragon@users.noreply.github.com>",Philip Warrick,philip.warrick@gmail.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-04-19 12:22:21-07:00,25200,2022-07-03 16:10:52-04:00,14400,True,False,"['plot_filters.py', 'scattering1d.py', 'filter_bank.py', 'base_frontend.py', 'keras_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'utils.py', 'test_correctness.py', 'test_filters_scattering1d.py', 'test_keras_scattering1d.py', 'test_numpy_scattering1d.py', 'test_torch_scattering1d.py', 'test_utils_scattering1d.py']",['54772cc7cb6c14c542f4bab6fe13c3378e2ecfb7'],176,483,659,15,0.15384615384615385,0.8205128205128205,0.9538461538461539
326333f3ddea8a8f7880848d1e7e193b19822dd3,"Get Jenkins working again (#810)

* TST Fetch new Nvidia repo keys

* TST Remove self-hosted GHA for now

* TST Get pip torch instead of compiling our own

Since we have new GPUs, the compute capability problem should no longer
be an issue.

* TST Fix broken test_T",Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2022-05-22 14:22:54+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['cuda.yml', 'test_torch_scattering1d.py', 'Dockerfile']",['5f37d04fb205c7228c39db9ca2e1007594d0662c'],65,9,74,3,,,
a409c6462a3743f457fba75223657d20b1456f9f,"[DOC] Remove warning from sklearn example.  (#828)

* DOC scaling scattering features improves performance from 95.88 to 97.55

* DOC increasing number of max_iter removes warning",Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-02 12:48:04+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,['plot_sklearn.py'],['326333f3ddea8a8f7880848d1e7e193b19822dd3'],3,4,7,1,,,
a816cfe9be9ad5856d2c56faf22abe99b7d79b3d,"Removed redundant default value for alpha (#814)

Co-authored-by: Marcus <haggbo@kth.se>",MarcusHaggbom,marcus.haeggbom@gmail.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-02 18:05:48+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['filter_bank.py', 'utils.py', 'test_filters_scattering1d.py']",['a409c6462a3743f457fba75223657d20b1456f9f'],27,24,51,3,0.0,1.0,0.0
1397609f45f7b82c2ca21278f464e3e5886468c5,"MAINT remove `size_scattering` kwarg from `scattering1d` (#837)

* remove `size_scattering` kwarg from `scattering1d`

Fixes #836

* dictionaries over several lines

as requested by @MuawizChaudhary",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-06 01:19:56+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['scattering1d.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['a816cfe9be9ad5856d2c56faf22abe99b7d79b3d'],52,5,57,4,0.0,0.0,0.0
94fff4a4421ebc64818cd84d26f550486358bc0f,"DOC updated contributing guidelines (#813)

* update contributing guidelines

* update email in code of conduct",Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-07 13:41:45+01:00,-3600,2022-07-03 16:12:03-04:00,14400,True,False,"['CODE_OF_CONDUCT.md', 'CONTRIBUTING.md']",['1397609f45f7b82c2ca21278f464e3e5886468c5'],43,52,95,2,,,
f8a3f2a4cc9411f4de42e406a32ac9484c36cd1a,"MAINT decouple `scattering_filter_factory` from `ScatteringBase1D.build` (#842)

* remove call to compute_minimum_support_to_pad

* remove criterion_amplitude from scattering_filter_factory

* remove compute_minimum_support_to_pad
* bugfix previous commit
(E       IndexError: tuple index out of range) due to bad phi_f shape
* update examples/1d/plot_filters
* remove criterion_amplitude from self

* update test_Scattering1D_filter_factory_T

remove fourth output argument (t_max_phi)

* remove 4th output argument from scattering_filter_factory

* remove an empty line

requested by muawiz",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-08 18:51:41+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['plot_filters.py', 'filter_bank.py', 'base_frontend.py', 'utils.py', 'test_numpy_scattering1d.py']",['94fff4a4421ebc64818cd84d26f550486358bc0f'],97,14,111,5,0.3333333333333333,0.3333333333333333,0.5
185f8337286198ab0023bd47db2229688d8aab78,"MAINT simplify `compute_params_filterbank`, remove `_move_one_dyadic_step` (#848)

* simplify compute_params_filterbank

and remove _move_one_dyadic_step
(WIP, off-by-one error)

* bugfix previous commit

* the elbow_xi - q/Q * elbow_xi formula was wrong
* remove multiple assignments
* define js at the end of the function by means of a map on get_max_dyadic_subsampling (this third output will be removed from the prototype later)

* replace list-map by list comprehension

by request from Muawiz",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-09 15:12:43+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,['filter_bank.py'],['f8a3f2a4cc9411f4de42e406a32ac9484c36cd1a'],87,28,115,1,0.65,0.0,1.0
4f02cfdfa20dc7a3325c6a41afe0b72b8984d255,"MAINT remove `calibrate_scattering_filters` (#850)

* move Q check to ScatteringBase1D.build

* remove one call to calibrate_scattering_filters

* write test_Q

* sigma_min = sigma0 / math.pow(2, J_scattering)

* update compute_meta_scattering prototype

* update precompute_size_scattering prototype

* remove calibrate_scattering_filters",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-09 15:15:19+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['filter_bank.py', 'base_frontend.py', 'utils.py', 'test_filters_scattering1d.py', 'test_torch_scattering1d.py']",['185f8337286198ab0023bd47db2229688d8aab78'],121,67,188,5,1.0,0.2153846153846154,0.8769230769230769
b71957984268ebe38574993d89c3e1971fe2fa82,"MAINT Simplify `filter_bank.py` (#833)

* simplify filter_bank.py

closes #825
* remove P_max=5, eps=1e-7, and normalize=""l1"" from Scattering1D object
* this lightens the kwarg lists of scattering_filter_factory, calibrate_scattering_filters,
* unify morlet_1d and gauss_1d algorithms
* delete get_normalizing factors

* update gauss_1d call to have min_to_pad

* finish rebasing. tests pass locally",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-09 16:22:05+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['filter_bank.py', 'base_frontend.py', 'test_correctness.py', 'test_filters_scattering1d.py']",['4f02cfdfa20dc7a3325c6a41afe0b72b8984d255'],228,55,283,4,0.7894736842105263,0.3157894736842105,0.25
c6652ad0d22100a762feba6a6d9f649a940adc9e,"MAINT avoid passing log2_T, pad, unpad to 1D core (#860)",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-09 20:45:19+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['scattering1d.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['b71957984268ebe38574993d89c3e1971fe2fa82'],17,13,30,4,,,
c6f3ec706abf676a2c95882e9e24760c9285ac01,"MAINT Remove vectorize + write frontend-agnostic runtime checks (#861)

* avoid passing log2_T, pad, unpad to 1D core

* remove vectorize from Scattering1D

use out_array='dict' instead !

* finish removing vectorize

Co-authored-by: Muawiz Sajjad Chaudhary <39755015+MuawizChaudhary@users.noreply.github.com>",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-10 01:27:41+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['scattering1d.py', 'base_frontend.py', 'keras_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'test_torch_scattering1d.py']",['c6652ad0d22100a762feba6a6d9f649a940adc9e'],97,52,149,7,1.0,1.0,0.03125
c30a52c1f91395c4a0738cdcf71c2e266c65eb40,"MAINT Remove `out_type` from 1D core, perform formatting in the frontends (#862)

* avoid passing log2_T, pad, unpad to 1D core

* remove vectorize from Scattering1D

use out_array='dict' instead !

* finish removing vectorize

* remove out_type from scattering1d core",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-12 07:19:24+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['scattering1d.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py']",['c6f3ec706abf676a2c95882e9e24760c9285ac01'],20,13,33,4,0.0,0.0,1.0
367a9c7782a9b1290d8d1e335a40c5bd8ef36c47,"DOC fixing example, now import TorchBackend3D to utilize compute_integrals (#829)

by @MuawizChaudhary 
CR by @edouardoyallon and @janden",Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-12 02:31:44-04:00,14400,2022-07-03 16:12:03-04:00,14400,True,False,['scattering3d_qm7_torch.py'],['c30a52c1f91395c4a0738cdcf71c2e266c65eb40'],4,4,8,1,,,
0339f515d4a33fa5636c6dc18ca696d0986a0676,MAINT removed useless apply function (#830),Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-13 11:23:40-04:00,14400,2022-07-03 16:12:03-04:00,14400,True,False,['utils.py'],['367a9c7782a9b1290d8d1e335a40c5bd8ef36c47'],14,0,14,1,0.0,0.0,0.0
12123550dee9449a93a65f5e7cb9f9735d2e8aeb,"DOC Use tight_layout to prevent plot axes from overlapping one another (#827)

* DOC use tight_layout to prevent plot axes from overlapping one another

* STY moved plt.tight_layout() just above plt.show()",Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-13 20:26:02-04:00,14400,2022-07-03 16:12:03-04:00,14400,True,False,"['plot_real_signal.py', 'plot_synthetic.py']",['0339f515d4a33fa5636c6dc18ca696d0986a0676'],3,2,5,2,,,
69dd04ad360a5a869361500cb5f81e69dacd7094,DOC fix reconstruct_torch.py example by calling detach (#826),Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-13 20:26:45-04:00,14400,2022-07-03 16:12:03-04:00,14400,True,False,['reconstruct_torch.py'],['12123550dee9449a93a65f5e7cb9f9735d2e8aeb'],1,1,2,1,,,
ae7a01cab6441ccec231dea1f4f553b5089c9029,"MAINT Make `Scattering1D` compatible with TF>=2.5 (#882)

* update plot_filters

* update core

* update filter_bank.py 1D

* update torch_frontend.py 1D

* simplify test_torch_scattering1d, circumvent a warning",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-15 19:44:00+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['plot_filters.py', 'scattering1d.py', 'filter_bank.py', 'torch_frontend.py', 'test_torch_scattering1d.py']",['69dd04ad360a5a869361500cb5f81e69dacd7094'],75,52,127,5,1.0,1.0,0.25
daad5404698502f6fa63065f21df018e504a0050,"precompute_size_scattering now returns a tuple (#878)

no more `detail` kwarg
fixes #838",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-15 23:01:35+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['base_frontend.py', 'utils.py']",['ae7a01cab6441ccec231dea1f4f553b5089c9029'],23,15,38,2,1.0,1.0,1.0
f6d6c327b4522b39a3280b5abf90662d40637409,"MAINT HarmonicScattering3D now outputs real coefficients in Numpy.  (#889)

* TST added tests confirming that #811 is an issue + some cleanup of print statements

* MAINT change dtype of array defined in compute_integrals from np.complex64 to np.float32

* TST add type check tests for tensorflow suite of tests

* TST added type checking for the torch suite of tests of 3d",Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-16 08:57:20-04:00,14400,2022-07-03 16:12:03-04:00,14400,True,False,"['numpy_backend.py', 'test_numpy_scattering3d.py', 'test_tensorflow_scattering3d.py', 'test_torch_scattering3d.py']",['daad5404698502f6fa63065f21df018e504a0050'],3,9,12,4,0.0,1.0,1.0
f7f290bf12f1803c0c259687a690a777282e30f7,"MAINT make NumPy the default frontend (#890)

* MAINT make Numpy the default frontend

* TST fixed up tests and various imports

* DOC documentation changes

* STY Numpy to NumPy",Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-16 17:54:26-04:00,14400,2022-07-03 16:12:03-04:00,14400,True,False,"['entry.py', 'test_utils_scattering1d.py', 'test_frontend_scattering2d.py', 'test_torch_scattering3d.py']",['f6d6c327b4522b39a3280b5abf90662d40637409'],15,13,28,4,1.0,0.0,1.0
d4e0211afaccf41586e58102814e21f9864359bf,"MAINT, STY Various ASV maintenance, style changes.  (#845)

* MAINT no need for cuda synchronization during filter generation

* STY equal sign spacing

* STY renaming devices to device on table to match with scattering2d

* STY spacing

* STY spacing

* MAINT added torch.no_grad function decorators in order to make comparison between torch and torch_skcuda backends more fairer",Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-17 00:51:24-04:00,14400,2022-07-03 16:12:03-04:00,14400,True,False,"['scattering1d.py', 'scattering2d.py', 'scattering1d.py', 'scattering2d.py', 'scattering3d.py']",['f7f290bf12f1803c0c259687a690a777282e30f7'],20,12,32,5,0.0,0.0,1.0
a4a87f55172bfbff19c899f4d5f39e260f5b343e,"Make `Q2` customizable (#854)

* move Q check to ScatteringBase1D.build

* Tuneable Q2

* test on GPU

* Update base_frontend.py

* Update base_frontend.py

* Update test_torch_scattering1d.py

* skip `_skcuda`

* Update test_torch_scattering1d.py

Co-authored-by: Vincent Lostanlen <vincent.lostanlen@ls2n.fr>",Changhong Wang,changhong.wang@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-17 15:23:52+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['filter_bank.py', 'base_frontend.py', 'utils.py', 'test_keras_scattering1d.py', 'test_numpy_scattering1d.py', 'test_tensorflow_scattering1d.py', 'test_torch_scattering1d.py']",['d4e0211afaccf41586e58102814e21f9864359bf'],34,176,210,7,0.0,0.875,0.9791666666666666
bc152f4728c1da525b8a04cc276ab009e79bd7fa,"MAINT deprecate `self.N` and `self.J_pad` in 1D (#863)

* redefine self.N, deprecate self.J_pad

* deprecationwarning

* restore self.vectorize (temporarily)

* bugfix _get_input_length

* J_pad = int(np.log2(self.N))

* bugfix _check_input

* revert to _check_input, write _get_shapes

* update _get_shapes

* try calling self._get_shapes in frontends

* shape_fn in _get_shapes

* write tensorflow shape_fn

* move _check_input into _get_shapes

* remove self._check_input

* bugfix tensorflow shape check

* reduce PR size

_get_shapes was not a good idea

* reduce PR size (bis)

* reduce PR size (ter)

* (quater)

* convert self.shape to tuple for type stability

* deprecate N, store _N_padded

* call scattering_filter_factory with 2**self._N_padded

* documentation

* bugfix `N(self)` property

* bugfix call to create_filters

* update scattering_filter_factory prototype

* update the numpy test

* bugfix input length check test

* clarify DeprecationWarning

* bugfix

* review by rastegah

* remove unnecessary import

* update DeprecationWarning

* update documentation

* rebase from PR 854",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-18 12:21:57+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['filter_bank.py', 'base_frontend.py', 'utils.py', 'test_numpy_scattering1d.py', 'test_utils_scattering1d.py']",['a4a87f55172bfbff19c899f4d5f39e260f5b343e'],50,52,102,5,0.9,0.9,1.0
762c3771b666ad16ae3b2373952a83f0c0678ba0,"MAINT make `Scattering2D` compatible with TF>=2.5 (#883)

* make Scattering2D compatible with TF>=2.5

* update 2d filter_bank loops

* bugfix",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-18 12:22:30+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['scattering2d.py', 'filter_bank.py', 'torch_frontend.py']",['bc152f4728c1da525b8a04cc276ab009e79bd7fa'],45,29,74,3,0.6666666666666666,1.0,0.4166666666666667
1fe52b83521d9c802f1cbc2a0bb0c23f668676eb,"MAINT move core 1D asserts to `_check_filterbanks` in `ScatteringBase` (#876)

* write _check_filterbanks in ScatteringBase1D

* Document _check_filterbanks better",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-18 16:18:57+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['base_frontend.py', 'scattering1d.py', 'base_frontend.py']",['762c3771b666ad16ae3b2373952a83f0c0678ba0'],3,17,20,3,1.0,1.0,1.0
537b266fdeab71d56786facca43813de5dc422e1,"MAINT check `oversampling` in 1D (#887)

* check oversampling in 1D

+ test_check_runtime_args

* check that oversampling is integer

whitespace around operator

* remove auto indentation",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-18 16:19:10+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['base_frontend.py', 'test_torch_scattering1d.py']",['1fe52b83521d9c802f1cbc2a0bb0c23f668676eb'],2,37,39,2,0.25925925925925924,0.5185185185185185,1.0
135158ab492cc92bf26fc7af022bf49b25675629,"Deprecate `self.N` in 2D (#886)

* update 2D base frontend

* deprecate N in 2D

* bugfix

* set M and N as @property in Sc2D",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-18 16:20:44+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['base_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'test_torch_scattering2d.py']",['537b266fdeab71d56786facca43813de5dc422e1'],19,32,51,5,1.0,1.0,1.0
28a1975b00535cbc10e91f868455933e98ef8bcb,"FIX examples/plot_filters.py (#815)

by Daniel Haider and Vincent Lostanlen
approved by Muawiz Chaudhary and Joakim Andén

* Update plot_filters.py

* Update plot_filters.py

* Update plot_filters.py

Edits as required:
- original formatting
- line width reduction
- psi <- psi_i

* Update plot_filters.py

* update examples/1d/plot_filters

in light of #854 and #882
enable TeX rendering

Co-authored-by: Vincent Lostanlen <vincent.lostanlen@ls2n.fr>",Daniel Haider,55834940+danedane-haider@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-20 15:06:14+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,['plot_filters.py'],['135158ab492cc92bf26fc7af022bf49b25675629'],139,111,250,1,0.8076923076923077,0.0,0.19230769230769232
b41d213a912fd005aac187f8433d5361815ef597,"TST add summary call to keras 1d and 2d tests.  (#888)

* TST adding model.summary() to keras 1d tests. Fails without rebasing to dev.

* TST adding model.summary() to keras 2d tests. Fails without rebasing to #883

* STY add space

* STY indentation

* TST now assert

* TST now assert

* fix Keras tests

Co-authored-by: Vincent Lostanlen <vincent.lostanlen@ls2n.fr>",Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-20 09:56:46-05:00,18000,2022-07-03 16:12:03-04:00,14400,True,False,"['test_keras_scattering1d.py', 'test_keras_scattering2d.py']",['28a1975b00535cbc10e91f868455933e98ef8bcb'],36,52,88,2,0.0,1.0,1.0
23b10ba2d07376768fb137b01b949adb25a4990d,"DOC Enable `.to(device)` semantics for pytorch examples (#874)

* DOC enabled .to(device) semantics instead of .cuda()

* DOC enable .to(device) semantics where there were none before in reconstruct_torch.py

* DOC make cifar set of examples use to(device) semantics, make them use num_worker=4

* DOC enable .to(device) semantics in mnist torch example

* DOC use torch.device in scattering3d example

* DOC move .to(device) call",Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-20 10:54:33-05:00,18000,2022-07-03 16:12:03-04:00,14400,True,False,"['plot_classif_torch.py', 'reconstruct_torch.py', 'cifar_resnet_torch.py', 'cifar_small_sample.py', 'cifar_torch.py', 'long_mnist_classify_torch.py', 'scattering3d_qm7_torch.py']",['b41d213a912fd005aac187f8433d5361815ef597'],52,30,82,7,1.0,1.0,0.0
fc21310e5c132fa293d2b6b2700de14040de3020,"MAINT redefine cdgmm3d to call cdgmm in torch skcuda backend (#865)

* MAINT redefine cdgmm3d to call cdgmm in torch skcuda backend

* STY make more like torch_backend.py cdgmm3d implementation",Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-20 10:59:46-05:00,18000,2022-07-03 16:12:03-04:00,14400,True,False,"['torch_skcuda_backend.py', 'test_torch_scattering3d.py']",['23b10ba2d07376768fb137b01b949adb25a4990d'],74,3,77,2,1.0,1.0,1.0
3df17b1bb08b4fbdebf072e879589199c4516a8f,[DOC] changes to documentation of output shapes (#820),Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-20 11:04:41-05:00,18000,2022-07-03 16:12:03-04:00,14400,True,False,['userguide.rst'],['fc21310e5c132fa293d2b6b2700de14040de3020'],3,3,6,1,,,
a572b3b45217b0ce25488afa15e7be79ed01085a,"TST Add seed to 2D FFT test in TF (#896)

authored by Joakim Andén",Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-20 20:59:33+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,['test_tensorflow_backend_2d.py'],['3df17b1bb08b4fbdebf072e879589199c4516a8f'],0,1,1,1,1.0,1.0,1.0
5ce1fef13ccda1ca0a9cd85dbe2609fbb419a9f5,"MAINT update GitHub workflows (#892)

* update github workflows

python-version = [3.6, 3.10]
pytorch-version = [1.7, 1.9, 1.11]

* python-version: ['3.6', '3.10']

* Invalid requirement: 'torchaudio-0.11.0+cpu'

* lower to py39

* bump to py37

* update supported versions on README

* update python and torch matrix in GH workflow

* elif [ ${{ matrix.pytorch-version }} == '1.10' ]

* remove torchaudio dependency from worfklows

* bugfix

* bugfix pip.yml, update README

* include py310 torch111 in pip.yml`",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-21 14:35:56+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['conda.yml', 'docs.yml', 'pip.yml', 'README.md', 'asv_torch.conf.json', 'asv_torch_cuda.conf.json']",['a572b3b45217b0ce25488afa15e7be79ed01085a'],25,16,41,6,,,
1654f7eb248b6d4a8c7a4c0a0338448d9ffe7f9c,"ENH Jax backend (#757)

* ENH jax base backend and frontend

* ENH jax backend and frontend for 1D

* TST general jax.numpy - numpy correspondence tests

* TST test for jax 1d backend

* WIP address Joakim's comments

* WIP jax 2d

* WIP typo in jax 2d

* ENH add 2D jax backend

* ENH jax backend 3d

* ENH jax entry point

* MAINT fix 3d numpy frontend test

* MAINT remove uneeded inheritances

* STY change script names to be more inline with current script naming convention

* TST edited workflows to account for jax and jaxlib

* TST adding jax to jenkins

* MAINT fix jaxbackend not complying with numpy backend after mergeal

* MAINT cast to float32

* update JAX tests (tuple Q)

* TST Fix seed for 2D FFT test (Jax)

* MAINT removed lonely jax import

* TST just have one test

* TST removed unneeded test

* MAINT make sure that we check for numpy ndarrays in addition to numpy-like ndarrays

Co-authored-by: Muawiz Chaudhary <muawizc@gmail.com>
Co-authored-by: Vincent Lostanlen <vincent.lostanlen@ls2n.fr>
Co-authored-by: Joakim Andén <janden@kth.se>",eickenberg,eickenberg@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-23 11:54:05-04:00,14400,2022-07-03 16:12:03-04:00,14400,True,False,"['conda.yml', 'pip.yml', 'jax_backend.py', 'numpy_backend.py', 'entry.py', 'jax_frontend.py', 'numpy_frontend.py', 'jax.py', 'jax_backend.py', 'jax_frontend.py', 'jax_backend.py', 'jax_frontend.py', 'numpy_frontend.py', 'jax_backend.py', 'numpy_backend.py', 'jax_frontend.py', 'numpy_frontend.py', 'test_jnp_vs_np.py', 'test_jax_scattering1d.py', 'test_jax_scattering2d.py', 'test_jax_scattering3d.py', 'Dockerfile']",['5ce1fef13ccda1ca0a9cd85dbe2609fbb419a9f5'],9,526,535,22,0.7541666666666667,1.0,0.875
6e55d772a9276a78f670960e2142ffea0444aa9b,"FIX Update examples/1d/plot_filters.py (#899)

* FIX Update examples/1d/plot_filters.py

As a consequence of #863.

* FIX Update examples/2d/plot_filters

Add new levels key.",Joakim Andén,janden@kth.se,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-23 18:20:25+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['plot_filters.py', 'plot_filters.py']",['1654f7eb248b6d4a8c7a4c0a0338448d9ffe7f9c'],3,3,6,2,,,
6040108dd48d8b0c796478c001cd2ac0418c0b80,"FIX include 'n' field in 1D/2D list + remove singleton dimension in 1D dict (#900)

* include 'n' field in list output (1D, 2D)

fix #875

* remove singleton dim (-2) in out_type='dict'

fix #895",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-24 23:39:48+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,"['numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'scattering2d.py', 'test_torch_scattering1d.py']",['6e55d772a9276a78f670960e2142ffea0444aa9b'],8,7,15,5,1.0,0.0,0.0
54c02e1aaa1f9ec8baa0aaa57ac3fbf5b26cb961,"MAINT deprecate `average` in `Scattering1D` (#897)

author: Cyrus Vahidi
reviewers : Muawiz Chaudhary, Vincent Lostanlen

* scat1d frontend: add deprecated average property

* deprecate average documentation

* new semantics for T and remove average kwargs

* average default None kwargs

* fix test Ux

* fix scattering1d Ux tests

* reinstate 1d average attribute

* check T is integer

* update deprecation warning msg

* default average to None

* deprecation message:

* remove empty line

* raise value error if average is False and T is not None or 0

* change valueerror message when average=False and T>=1

* update deprecation warning message

* update deprecation warning message

* update deprecation warning message

* update value error message",Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-27 19:30:53+01:00,-3600,2022-07-03 16:12:03-04:00,14400,True,False,"['base_frontend.py', 'test_keras_scattering1d.py', 'test_numpy_scattering1d.py', 'test_torch_scattering1d.py']",['6040108dd48d8b0c796478c001cd2ac0418c0b80'],14,45,59,4,0.0,0.24,0.72
a2ea2029e99cc9a95ac952f9b14673bfcbbfe9d7,document N and J in scattering_filter_factory (#901),Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Michael Eickenberg,michael.eickenberg@gmail.com,2022-06-27 22:49:08+02:00,-7200,2022-07-03 16:12:03-04:00,14400,True,False,['filter_bank.py'],['54c02e1aaa1f9ec8baa0aaa57ac3fbf5b26cb961'],0,6,6,1,,,
06f716a7559011170081a369ca4b0fcaff1a3cde,ENH+DOC start a change log,Michael Eickenberg,michael.eickenberg@gmail.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-07-03 23:56:29-04:00,14400,2022-07-03 23:59:34-04:00,14400,True,False,"['index.rst', 'whats_new.rst', 'v0.3.rst']",['a2ea2029e99cc9a95ac952f9b14673bfcbbfe9d7'],3,102,105,3,,,
f1989eb8855fb02be91550954d99fbed6ebc4081,MAINT bump version to start development on 0.4.0-dev,Michael Eickenberg,michael.eickenberg@gmail.com,Michael Eickenberg,michael.eickenberg@gmail.com,2022-07-04 00:04:14-04:00,14400,2022-07-04 00:04:14-04:00,14400,True,False,['version.py'],['06f716a7559011170081a369ca4b0fcaff1a3cde'],2,2,4,1,,,
5632257e61abd7b59c8010003873eb9b6fdaa508,"`reshape_input`, `reshape_output` (#871) (#906)

* backend shape methods

* reshape_input, reshape_output in backends

* try to call reshape_output only once [ci skip]

* simplify PR, figure out ""dict"" as special case

* spaces around operator [ci skip]

* bugfix prev commit (concatenate dim in NP backend)

* manage multiple inheritance

move the NotImplementedError's of scattering to 2D and 3D 's base frontends

* implement scattering(self, x) in 1D base frontend

* shape(x, signal_dim) in backends

* bugfix previous commit

* Revert ""bugfix previous commit""

This reverts commit de46c9efeab7ca01c2f8a74cbf8f3202148ab1b1.

* Revert ""shape(x, signal_dim) in backends""

This reverts commit 937b87cf1e5287ec6b83df0eccd8b5b58d3d3728.

* add empty line in base_frontend 1D scattering

after review by Muawiz

* bugfix out_type==""list""

* remove pad from core scattering1d

compute padding in base frontend instead

* spaces around operator

* simplify reshape_input

* fix 895

* rename dim to axis

for compatibility with NumPy Array API

* update concatenate callsites

* Revert ""update concatenate callsites""

This reverts commit 4222d10d7e15189e3fd52c45562daa30f84b9634.

* Revert ""rename dim to axis""

This reverts commit f8cccf99118d02d4b0721c19ced144e27ba05769.

* unit test reshape in torch backend

* unit test reshape in NP backend

* unit test reshape in TF backend

* Revert ""Merge branch 'pad-before-core-scattering' into backend-agnostic-reshape""

This reverts commit c31ef30d6250ce9107224bdbf69cdc12a6623ac1, reversing
changes made to a7a8f75e43bae49cc4cf3785b447bb1bb06c4a19.

Co-authored-by: Vincent Lostanlen <vincent.lostanlen@ls2n.fr>",Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,GitHub,noreply@github.com,2022-08-08 21:50:11+01:00,-3600,2022-08-08 22:50:11+02:00,-7200,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'test_numpy_backend.py', 'test_tensorflow_backend.py', 'test_torch_backend.py']",['f1989eb8855fb02be91550954d99fbed6ebc4081'],71,162,233,9,0.3898305084745763,1.0,0.7966101694915254
87c05a200a424deedf161378c4f13351d4df442e,"Frontend-agnostic 1D scattering (#877)

* backend shape methods

* reshape_input, reshape_output in backends

* try to call reshape_output only once [ci skip]

* simplify PR, figure out ""dict"" as special case

* spaces around operator [ci skip]

* bugfix prev commit (concatenate dim in NP backend)

* manage multiple inheritance

move the NotImplementedError's of scattering to 2D and 3D 's base frontends

* implement scattering(self, x) in 1D base frontend

* shape(x, signal_dim) in backends

* bugfix previous commit

* Revert ""bugfix previous commit""

This reverts commit de46c9efeab7ca01c2f8a74cbf8f3202148ab1b1.

* Revert ""shape(x, signal_dim) in backends""

This reverts commit 937b87cf1e5287ec6b83df0eccd8b5b58d3d3728.

* add empty line in base_frontend 1D scattering

after review by Muawiz

* bugfix out_type==""list""

* remove pad from core scattering1d

compute padding in base frontend instead

* bugfix reshape_input call

* n_kept_dims=1

* remove unused imports

* Revert ""Merge branch 'pad-before-core-scattering' into unified-scattering1d-frontend""

This reverts commit c73a7c8eeff697a64874385bb0a63d9ece1e0f13, reversing
changes made to a86f06f1a2401a5c9aa0178f764ef4a0087d2799.",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Vincent Lostanlen,vincent.lostanlen@ls2n.fr,2022-08-11 04:59:57+02:00,-7200,2022-08-11 22:18:30+02:00,-7200,True,False,"['tensorflow_backend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'base_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'base_frontend.py', 'base_frontend.py']",['5632257e61abd7b59c8010003873eb9b6fdaa508'],82,35,117,10,1.0,1.0,0.0
a8c3c881ddf91e61f2e3c1e011870b5233c3a429,"MAINT remove pad from core scattering1d (#912)

* add empty line in base_frontend 1D scattering

after review by Muawiz

* bugfix out_type==""list""

* remove pad from core scattering1d

compute padding in base frontend instead

* Merge branch 'dev' into pad-before-core-scattering

* Merge branch 'dev' into pad-before-core-scattering

* remove n_inserted_dims from reshape_input call",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-11 22:45:49+02:00,-7200,2022-08-11 16:45:49-04:00,14400,True,False,"['scattering1d.py', 'base_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py']",['87c05a200a424deedf161378c4f13351d4df442e'],17,9,26,4,1.0,1.0,1.0
4d9ebd4c14868385947474c83bccc6944b2cdb29,"ENH `core/scattering1d` now returns a generator (#913)

* yield scattering1d paths

* move unpad fro core to 1D base frontend

* update scattering1d prototype and docstring

* improve documentation, set average=True in prototype

* update scattering1d callsite

* resolve conflicts, update scattering1d callsite",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-12 03:31:30+02:00,-7200,2022-08-11 21:31:30-04:00,14400,True,False,"['scattering1d.py', 'base_frontend.py', 'test_numpy_scattering1d.py', 'test_torch_scattering1d.py']",['a8c3c881ddf91e61f2e3c1e011870b5233c3a429'],71,62,133,4,1.0,1.0,1.0
64c38f4d6b148e9b1d6c91639f1f165347823fac,"ENH automatic self.meta() and output_size in 1D (#914)

* update core scattering1d documentation

* Merge branch 'automatic-meta' into yield-scattering1d

* remove _extract_n

* bugfix previous commit

* document self.meta()

* test backwards compatibility

* bis

* automatic output_size()

and simplify compute_params_filterbank

* Merge branch 'dev' into automatic-meta",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-12 19:30:10+02:00,-7200,2022-08-12 18:30:10+01:00,-3600,True,False,"['scattering1d.py', 'filter_bank.py', 'base_frontend.py', 'utils.py', 'test_torch_scattering1d.py', 'test_utils_scattering1d.py']",['4d9ebd4c14868385947474c83bccc6944b2cdb29'],228,160,388,6,0.0,0.0,1.0
bb2b9506d8679a33706fd9d8e426b4d9e1fade99,"ENH `anden_generator` and `self.filterbank` property (#915)

* write scatnet_generator

* try calling scatnet_generator

* update utils

* remove compute_params_filterbank

* lowpass_kwargs, wavelet_kwargs

* remove max_subsampling

* simplify scattering_filter_factory logic

* no more j1s and j2s list comprehensions!

* no need to initialize phi_f={} anymore

* remove periodize_filter_fourier

* update plot_filters example (T vs N)

* bis

* remove lowpass_fn and wavelet_fn for this PR

* spaces around operator

* filterbank property

* filterbank property bis

* legacy_compute_params_filterbank in tests

* the great jump

* bugfix test_numpy_scattering1d

* update examples/1d/plot_filters.py

* support arbitrary number of layers in factory 1d

* update sc filter factory documentation

* try splicing tuple?

* return phi_f, psis_f[0], psis_f[1]

* return tuple([phi_f] + psis_f)

* rename to anden_generator

as proposed by muawiz

* rename to anden_generator, bis",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-13 15:57:08+02:00,-7200,2022-08-13 09:57:08-04:00,14400,True,False,"['plot_filters.py', 'filter_bank.py', 'base_frontend.py', 'test_filters_scattering1d.py', 'test_numpy_scattering1d.py', 'test_utils_scattering1d.py']",['64c38f4d6b148e9b1d6c91639f1f165347823fac'],234,174,408,6,0.0,0.0,0.0
f2f6100a4de164348cf9f517318169de6abeed49,"set average=None in Scattering1D frontends (#918)

closes #917",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-14 14:57:25+02:00,-7200,2022-08-14 13:57:25+01:00,-3600,True,False,"['base_frontend.py', 'jax_frontend.py', 'keras_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'test_correctness.py']",['bb2b9506d8679a33706fd9d8e426b4d9e1fade99'],8,8,16,7,,,
c9f4b2888e069536dbfd4b215279b26afd97d76f,"MAINT simpler 1d prototype (#921)

* remove kymatio primitive aliases from 1d core

* remove max_order from core scattering1d",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-14 15:45:57+02:00,-7200,2022-08-14 14:45:57+01:00,-3600,True,False,"['scattering1d.py', 'base_frontend.py']",['f2f6100a4de164348cf9f517318169de6abeed49'],34,31,65,2,1.0,1.0,1.0
4d4ff3bc08a141b67db1aee35cce8294ba6fe4c8,"ENH Spinned wavelets (#922)

* def spin(filterbank)

* test_spin",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-14 15:49:24+02:00,-7200,2022-08-14 14:49:24+01:00,-3600,True,False,"['filter_bank.py', 'test_filters_scattering1d.py']",['c9f4b2888e069536dbfd4b215279b26afd97d76f'],2,24,26,2,1.0,1.0,0.7894736842105263
b5ad3e17eaf21f0458e77d6fe1f85cf773a80ad8,"ENH `T='global'`: global average pooling in `Scattering1D` (#919)

* self.T == 'global' case in base frontend 1d

* remove average from frontends, core average_local

* self.T interpreter precedence

* new kymatio primitive: sum

* test global averaging in numpy

* average_global 1d primitive, new tests

* average_local in core sc1d

bugfix conflict resolution",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-14 16:38:49+02:00,-7200,2022-08-14 15:38:49+01:00,-3600,True,False,"['tensorflow_backend.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'scattering1d.py', 'base_frontend.py', 'jax_frontend.py', 'keras_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'utils.py', 'test_numpy_scattering1d.py', 'test_tensorflow_scattering1d.py', 'test_torch_scattering1d.py']",['4d4ff3bc08a141b67db1aee35cce8294ba6fe4c8'],65,113,178,15,1.0,1.0,1.0
5c6c65178253be3ed12d8e9711c2f2c9a779bda2,"ENH 1d zero padding and complex FFT (#926)

* new kymatio primitive: cfft

* custom padding modes in 1d pad

* test numpy cfft

* test tensorflow cfft

* test pytorch cfft

* coefficent --> coefficient",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-14 23:25:57+02:00,-7200,2022-08-14 22:25:57+01:00,-3600,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'test_numpy_backend_1d.py', 'test_tensorflow_backend_1d.py', 'test_torch_backend_1d.py']",['b5ad3e17eaf21f0458e77d6fe1f85cf773a80ad8'],14,50,64,6,0.875,1.0,1.0
88ab8e317bc67da750dc7835f5140149a9db6fb5,"ENH core width-first 1d scattering for JTFS (#923)

* write scattering1d_depthfirst algorithm

* yield freq-concatenated coeffs

* width-first, not depth-first!

* scattering1d_widthfirst(U_0 ...

* kymatio primitives in width-first

+ some control flow bugfixes
and whitespace around ** operator

* bugfix concatenate in widthfirst

* test_scattering1d_widthfirst

* test average_local in widthfirst

* x = x.to(device)

* simplify test_timefrequency_scattering

remove skcuda
remove print statement

* typo in comment

thanks to cyrus for catching it

* update test_scattering1d_widthfirst

* update test_scattering1d_widthfirst

* test_scattering1d_widthfirst passes

* developer notes for scattering1d_widthfirst

* broadcasted --> broadcast

* update dev docs

* update dev docs bis

* document oversampling and average_local",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-15 11:37:05+02:00,-7200,2022-08-15 10:37:05+01:00,-3600,True,False,"['scattering1d.py', 'timefrequency_scattering.py', 'test_timefrequency_scattering.py']",['5c6c65178253be3ed12d8e9711c2f2c9a779bda2'],4,202,206,3,0.0,0.0,0.45454545454545453
a7b3af0189c1b95d3348033f3a9a0b87b52e5048,"ENH `swap_time_frequency` (#925)

new Kymatio primitive: swap_time_frequency

Co-authored-by: Muawiz Chaudhary <muawiz.chaudhary@mila.quebec>
Co-authored-by: Cyrus Vahidi <c.vahidi@qmul.ac.uk>

Co-authored-by: Muawiz Chaudhary <muawiz.chaudhary@mila.quebec>
Co-authored-by: Cyrus Vahidi <c.vahidi@qmul.ac.uk>
Co-authored-by: Cyrus Vahidi <10761938+cyrusvahidi@users.noreply.github.com>",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-15 22:58:57+02:00,-7200,2022-08-15 21:58:57+01:00,-3600,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'test_numpy_backend_1d.py', 'test_tensorflow_backend_1d.py', 'test_torch_backend_1d.py']",['88ab8e317bc67da750dc7835f5140149a9db6fb5'],1,91,92,6,1.0,1.0,0.7254901960784313
5a89ff3240dcb9d72d4bae1020cc9725d0141b3f,MAINT `parse_T` in 1d utils (#927),Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-15 23:05:11+02:00,-7200,2022-08-15 22:05:11+01:00,-3600,True,False,"['base_frontend.py', 'utils.py', 'test_utils_scattering1d.py']",['a7b3af0189c1b95d3348033f3a9a0b87b52e5048'],20,61,81,3,1.0,1.0,0.0
84220f69c3692156f0a8e7dc967377eae0e84a24,"ENH JTFS `__init__` and `build` (#928)

* MAINT `parse_T` in 1d utils

* ENH JTFS build

* parse Q_fr

* test Q_fr

* Q should --> Q must",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-15 23:05:29+02:00,-7200,2022-08-15 22:05:29+01:00,-3600,True,False,"['base_frontend.py', 'test_keras_scattering1d.py', 'test_numpy_scattering1d.py', 'test_tensorflow_scattering1d.py', 'test_timefrequency_scattering.py', 'test_torch_scattering1d.py']",['5a89ff3240dcb9d72d4bae1020cc9725d0141b3f'],7,99,106,6,0.5636363636363636,1.0,0.8363636363636363
644b3165fee9156590ba0229f882c3a287befba5,TST lower atol in NP cfft (#933),Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-16 15:01:14+02:00,-7200,2022-08-16 15:01:14+02:00,-7200,True,False,['test_numpy_backend_1d.py'],['84220f69c3692156f0a8e7dc967377eae0e84a24'],1,1,2,1,,,
5cb870679c3de5c1e4629eb723a0134c02f4cc66,"ENH JTFS `create_filters` (#931)

* MAINT `parse_T` in 1d utils

* ENH JTFS build

* filterbank_fr property

* TimeFrequencyScatteringBase.create_filters

* parse Q_fr

* test Q_fr

* Q should --> Q must

* add 'N' field to phi in scattering_filter_factory

useful for JTFS

* prepend phi1 to psis

* spin takes two inputs, not one tuple

* small bugfixes in create_filters",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-16 18:15:43+02:00,-7200,2022-08-16 17:15:43+01:00,-3600,True,False,"['filter_bank.py', 'base_frontend.py', 'test_filters_scattering1d.py', 'test_timefrequency_scattering.py']",['644b3165fee9156590ba0229f882c3a287befba5'],5,30,35,4,0.9444444444444444,1.0,0.9444444444444444
a94de8f1427ff7208e61838e0225a9f670f4824a,"FIX JTFS `average_local=False` in `scattering1d_widthfirst` (#932)

* remove average_local from scattering1d_widthfirst

* update test_scattering1d_widthfirst

* average_local=True returns S0

* check order 0 under average_local=False

* update docstring",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-18 11:31:22+02:00,-7200,2022-08-18 10:31:22+01:00,-3600,True,False,"['timefrequency_scattering.py', 'test_timefrequency_scattering.py']",['5cb870679c3de5c1e4629eb723a0134c02f4cc66'],75,48,123,2,1.0,1.0,0.4
b1ffccbafc3803ac253d49fdbeba3449a0b31277,"ENH JTFS `frequency_scattering` (#935)

* group psis by same spin

* write frequency_scattering

* more unit tests for create_filters

* accommodate real-input swap

* allow padding>N for mode=='constant'

* update imports in test JTFS

* write test_frequency_scattering

* make padding_fr = 8*max(F, J_fr)

* new swap tests

* simplify swap_time_frequency

* swap back fr and time

* test freq scattering under spinned=False

* pass 'n': (X['n'][1:] + (n_fr,))

* test Y_fr['n']

* typo in frequency_scattering docstring [ci skip]

* better test for frequential padding

* remove print statement ;)",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-22 10:40:19+02:00,-7200,2022-08-22 09:40:19+01:00,-3600,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'timefrequency_scattering.py', 'filter_bank.py', 'base_frontend.py', 'test_filters_scattering1d.py', 'test_numpy_backend_1d.py', 'test_tensorflow_backend_1d.py', 'test_timefrequency_scattering.py', 'test_torch_backend_1d.py']",['a94de8f1427ff7208e61838e0225a9f670f4824a'],76,199,275,11,0.0,0.6333333333333333,0.48333333333333334
b5cd07f33d56fe10379333a92f8f760b0a51ace9,"FIX `oversampling>0` in `ScatteringBase1D.scattering` (#938)

* trigger bug

* trigger bug (bis)

* bugfix

res = max(self.log2_T - self.oversampling, 0)",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-22 11:22:59+02:00,-7200,2022-08-22 10:22:59+01:00,-3600,True,False,"['base_frontend.py', 'test_torch_scattering1d.py']",['b1ffccbafc3803ac253d49fdbeba3449a0b31277'],2,11,13,2,0.0,1.0,1.0
4f86610499a600c14bee37c57a18a20ff78eb8cc,"ENH JTFS `joint_timefrequency_scattering` (#939)

* group psis by same spin

* write frequency_scattering

* more unit tests for create_filters

* accommodate real-input swap

* allow padding>N for mode=='constant'

* update imports in test JTFS

* write test_frequency_scattering

* make padding_fr = 8*max(F, J_fr)

* new swap tests

* simplify swap_time_frequency

* swap back fr and time

* test freq scattering under spinned=False

* pass 'n': (X['n'][1:] + (n_fr,))

* test Y_fr['n']

* typo in frequency_scattering docstring [ci skip]

* better test for frequential padding

* remove print statement ;)

* rename scattering1d_widthfirst

to time_scattering_widthfirst

for consistency with ""frequency_scattering""

* def joint_timefrequency_scattering

:)

* bugfix time_scattering_widthfirst

S_1_list must be initialized whatever be the value of average_local

* pass average_local_fr to jtfs core

* test_joint_timefrequency_scattering

* check that padding is sufficient

* document core JTFS

* feedback from Lily Han",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-23 10:29:07+02:00,-7200,2022-08-23 09:29:07+01:00,-3600,True,False,"['timefrequency_scattering.py', 'test_timefrequency_scattering.py']",['b5cd07f33d56fe10379333a92f8f760b0a51ace9'],7,190,197,2,0.14864864864864866,0.14864864864864866,0.8513513513513513
c3bf7a2df96586a5ecbd379cb2aa55415655f611,write time_averaging,Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Vincent Lostanlen,vincent.lostanlen@ls2n.fr,2022-08-23 12:36:39+02:00,-7200,2022-08-23 12:36:39+02:00,-7200,True,False,['timefrequency_scattering.py'],['4f86610499a600c14bee37c57a18a20ff78eb8cc'],0,59,59,1,0.0,1.0,0.0
66d7534ba92bfdfdfbb9e085ece6cadec98d4362,update docs in core jtfs module,Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Vincent Lostanlen,vincent.lostanlen@ls2n.fr,2022-08-23 12:36:51+02:00,-7200,2022-08-23 12:36:51+02:00,-7200,True,False,['timefrequency_scattering.py'],['c3bf7a2df96586a5ecbd379cb2aa55415655f611'],5,13,18,1,,,
41b900ca6b691690c0ed93e68c613d83ba2c6b3d,"Revert ""write time_averaging""

This reverts commit c3bf7a2df96586a5ecbd379cb2aa55415655f611.",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,Vincent Lostanlen,vincent.lostanlen@ls2n.fr,2022-08-23 12:40:20+02:00,-7200,2022-08-23 12:40:20+02:00,-7200,True,False,['timefrequency_scattering.py'],['66d7534ba92bfdfdfbb9e085ece6cadec98d4362'],59,0,59,1,1.0,0.0,1.0
5b83ab1eab75d0d569b16b1bece58e46b9dca7d2,"ENH JTFS `pad_frequency` (#944)

* write pad_frequency in torch

* test pad_frequency in torch

* write pad_frequency in numpy

* pad_frequency in tensorflow

* more doc for pad_frequency

* bis

* test tensorflow pad_frequency

* bugfix pad_frequency numpy

* test pad_frequency numpy",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-24 00:24:19+02:00,-7200,2022-08-24 00:24:19+02:00,-7200,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'test_numpy_backend_1d.py', 'test_tensorflow_backend_1d.py', 'test_torch_backend_1d.py']",['41b900ca6b691690c0ed93e68c613d83ba2c6b3d'],0,66,66,6,1.0,1.0,0.41379310344827586
0b93871caca94cb4fbc30c1f00fcf1116519b78c,"ENH JTFS `time_averaging` (#945)

* write time_averaging

* update docs in core jtfs module

* bugfix

* simpler time_averaging

* test time averaging

* better docs for core 1d

* changhong feedback

Co-authored-by: Han Han <30601012+lylyhan@users.noreply.github.com>",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-24 18:10:00+02:00,-7200,2022-08-24 12:10:00-04:00,14400,True,False,"['scattering1d.py', 'timefrequency_scattering.py', 'test_timefrequency_scattering.py']",['5b83ab1eab75d0d569b16b1bece58e46b9dca7d2'],23,77,100,3,0.6428571428571429,0.6428571428571429,0.35714285714285715
7d8c68a473f514090756f233b1d208437b481a49,"ENH JTFS `self.format` and `_check_runtime_args` (#941)

* introduce format='joint'

* standardize _check_runtime_args

* _check_runtime_args jtfs

* self.format = format

* forgotten test in 1d runtime args

* test_check_runtime_args jtfs

* avoid warning

* changhong feedback

* cyrus feedback",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-24 18:17:21+02:00,-7200,2022-08-24 17:17:21+01:00,-3600,True,False,"['base_frontend.py', 'test_timefrequency_scattering.py', 'test_torch_scattering1d.py']",['0b93871caca94cb4fbc30c1f00fcf1116519b78c'],3,89,92,3,0.028985507246376812,0.7681159420289855,0.9710144927536232
66ddafef82c47e8fb1433c3619e306a105fd3fb2,"ENH JTFS `frequency_averaging` (#946)

* write frequency_averaging

* bugfix previous commit

* freq scattering returns j_fr as 1-tuple

* update tests

* test frequential averaging

* implement average_fr 'global' and False

* update test

* bugfix average_fr == False

* finish testing freq sc

* pass average_fr to frequency_averaging

* changhong feedback",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-24 18:29:51+02:00,-7200,2022-08-24 17:29:51+01:00,-3600,True,False,"['timefrequency_scattering.py', 'test_timefrequency_scattering.py']",['7d8c68a473f514090756f233b1d208437b481a49'],6,91,97,2,0.0,0.5263157894736842,0.47368421052631576
f2e474334321238b638054fbca6d21f93e28a90f,"ENH JTFS `TimeFrequencyScatteringBase.scattering` (#947)

* class TimeFrequencyScatteringNumpy

* start test jtfs_numpy

* start base scattering JTFS

* bugfix frequency_scattering callsite!

* write base frontend

* start testing numpy jtfs

* simplify tests

* finish base frontend

* test global averaging

* lylyhan feedback",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-25 18:02:32+02:00,-7200,2022-08-25 12:02:32-04:00,14400,True,False,"['timefrequency_scattering.py', 'base_frontend.py', 'numpy_frontend.py', 'test_timefrequency_scattering.py']",['66ddafef82c47e8fb1433c3619e306a105fd3fb2'],5,152,157,4,0.11764705882352941,0.3176470588235294,0.8823529411764706
8b5c093c98a2c2699b15678a5efe6d8962c7b561,"ENH JTFS PyTorch frontend (#943)

* group psis by same spin

* write frequency_scattering

* more unit tests for create_filters

* accommodate real-input swap

* allow padding>N for mode=='constant'

* update imports in test JTFS

* write test_frequency_scattering

* make padding_fr = 8*max(F, J_fr)

* new swap tests

* simplify swap_time_frequency

* swap back fr and time

* test freq scattering under spinned=False

* pass 'n': (X['n'][1:] + (n_fr,))

* test Y_fr['n']

* typo in frequency_scattering docstring [ci skip]

* better test for frequential padding

* remove print statement ;)

* rename scattering1d_widthfirst

to time_scattering_widthfirst

for consistency with ""frequency_scattering""

* def joint_timefrequency_scattering

:)

* bugfix time_scattering_widthfirst

S_1_list must be initialized whatever be the value of average_local

* pass average_local_fr to jtfs core

* test_joint_timefrequency_scattering

* check that padding is sufficient

* new kymatio primitive: pad_frequency

in torch it ends up being very different from pad, because of the extra trailing singleton dimension. also, pad_frequency does not assume contiguity nor a real input

* start torch frontend

* call pad_frequency in JTFS core

* start test_differentiability_jtfs

* try a simple x.grad

it doesn't work

* fix gradient accumulation test

* fix gradient accumulation test

* Revert ""fix gradient accumulation test""

This reverts commit bbb7d44aeab3dba4b2f6ea0d203edd1f24c3b263.

* fix gradient test

* rebase and bugfix

* gradient check assertions

* rename U_0 to S_0 in differentiability test

* test differentiability of S1

* test differentiability of all JTFS paths

Co-authored-by: Cyrus Vahidi <cyrus.vahidi@bytedance.com>
Co-authored-by: Cyrus Vahidi <10761938+cyrusvahidi@users.noreply.github.com>
Co-authored-by: Cyrus Vahidi <cyrusvahidi@gmail.com>",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-28 10:05:41+02:00,-7200,2022-08-28 10:05:41+02:00,-7200,True,False,"['timefrequency_scattering.py', 'torch_frontend.py', 'test_timefrequency_scattering.py']",['f2e474334321238b638054fbca6d21f93e28a90f'],31,118,149,3,0.5,0.9722222222222222,0.8472222222222222
e52decdd3fbd636974ba9c876c4e0de0a9709522,"ENH JTFS `meta()`, `out_type='dict'`, `out_type='list'` (#955)

* write jtfs_average_and_format

* reorder base scattering(x) jtfs

* move DryBackend to ScatteringBase

* __getattr__ = lambda self, attr: (lambda *args, **kwargs: None)

* start jtfs meta

* add n1_stride to path keys

* finish meta

* clean up

* unpad_frequency numpy_backend

* frequential unpadding

* write jtfs_average_and_format

* reorder base scattering(x) jtfs

* move DryBackend to ScatteringBase

* __getattr__ = lambda self, attr: (lambda *args, **kwargs: None)

* start jtfs meta

* add n1_stride to path keys

* finish meta

* clean up

* unpad_frequency numpy_backend

* frequential unpadding

* out_type 'dict' and 'list'

* test dict and list output

* cyrus feedback

* changhong feedback

* remove print statement from previous PR

* cast meta['n'] as np array of object

* test meta

* format

* remove duplicate meta in JTFS base frontend

Co-authored-by: Cyrus <cyrusvahidi@gmail.com>",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-30 15:36:27+02:00,-7200,2022-08-30 15:36:27+02:00,-7200,True,False,"['base_frontend.py', 'numpy_backend.py', 'timefrequency_scattering.py', 'base_frontend.py', 'test_timefrequency_scattering.py']",['8b5c093c98a2c2699b15678a5efe6d8962c7b561'],182,306,488,5,0.031578947368421054,0.25263157894736843,0.7157894736842105
7acbff142e09dd93710ac41c3e0ff9f8d265d4af,"ENH JTFS `unpad_frequency` in PyTorch and TensorFlow (#956)

* write unpad_frequency in torch

* NB. Unpadding is one-sided

* write unpad_frequency in TF

* test_unpad_frequency pytorch

* test_unpad_frequency in TF

* test unpad frequency

* fix changhong comments

* fix changhong comments

Co-authored-by: Cyrus Vahidi <cyrusvahidi@gmail.com>",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-08-31 13:33:55+02:00,-7200,2022-08-31 13:33:55+02:00,-7200,True,False,"['tensorflow_backend.py', 'torch_backend.py', 'test_numpy_backend_1d.py', 'test_tensorflow_backend_1d.py', 'test_torch_backend_1d.py']",['e52decdd3fbd636974ba9c876c4e0de0a9709522'],7,58,65,5,1.0,1.0,0.7692307692307693
ebc627e8258217901be9c88aa54391dd1988d92c,"MAINT Update docs workflow

Make it manual dispatch and remove branch constraint. Also rename.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2022-09-05 09:26:54+02:00,-7200,2022-09-05 09:28:46+02:00,-7200,True,False,['docs.yml'],['7acbff142e09dd93710ac41c3e0ff9f8d265d4af'],4,2,6,1,,,
2659411f0193b915f29684835388e376edf3b129,MAINT Fix bug in docs workflow,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2022-09-05 09:40:23+02:00,-7200,2022-09-05 09:43:25+02:00,-7200,True,False,['docs.yml'],['ebc627e8258217901be9c88aa54391dd1988d92c'],1,1,2,1,,,
f8bcd0e8b135ba4d082632fa99a7e8fd8ad111fa,"MAINT Unpin sphinx

There was an issue a while back with sphinx-3.0 being incompatible with
the latest version of m2r (see f92b5077), but this now seems to have
been remedied.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2022-09-05 10:04:15+02:00,-7200,2022-09-05 12:47:15+02:00,-7200,True,False,['requirements_optional.txt'],['2659411f0193b915f29684835388e376edf3b129'],1,1,2,1,,,
157ba89f3274254ed6e673f664c771cc169013b6,"ENH JTFS `format=""time""` (#957)

* split_frequency_axis in numpy

* split_frequency_axis in torch

* split_frequency_axis in TF

* test NP split_frequency_axis

* test split in Torch

+ bugfix

* test TF split frequency axis

+ bugfix

* whitespace

* write time_formatting

* prepend n1 to split_path[""n""]

* add format to np frontend

* reshape_output

* concatenate under format==""time""

* test format='time'

* time_formatting meta

* format='time' meta

* test meta() under format='time'

* Update timefrequency_scattering.py

just fix 3 few typos

Co-authored-by: Changhong Wang <changhong.wang@ls2n.fr>",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-09-09 12:04:38+02:00,-7200,2022-09-09 11:04:38+01:00,-3600,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'timefrequency_scattering.py', 'base_frontend.py', 'numpy_frontend.py', 'test_numpy_backend_1d.py', 'test_tensorflow_backend_1d.py', 'test_timefrequency_scattering.py', 'test_torch_backend_1d.py']",['f8bcd0e8b135ba4d082632fa99a7e8fd8ad111fa'],22,117,139,10,0.8214285714285714,0.9464285714285714,0.9642857142857143
58e37688330fbd3387e9eb33d748d7d6176c0426,"ENH JTFS `sklearn` frontend (#963)

* test

* sklearn frontend for jtfs

* sklearn jtfs frontend

* simplify entry mechanism

* define TimeFrequencyScatteringEntry

* export TimeFrequencyScatteringEntry

* export TimeFrequencyScattering

!!!!!!

* test sklearn JTFS

from kymatio import TimeFrequencyScattering

:)

* test JTFS frontend dispatch

Co-authored-by: Vincent Lostanlen <vincent.lostanlen@ls2n.fr>",Changhong Wang,changhong.wang@qmul.ac.uk,GitHub,noreply@github.com,2022-09-19 14:30:26+02:00,-7200,2022-09-19 13:30:26+01:00,-3600,True,False,"['__init__.py', 'entry.py', 'numpy.py', '__init__.py', 'entry.py', 'sklearn_frontend.py', 'test_timefrequency_scattering.py']",['157ba89f3274254ed6e673f664c771cc169013b6'],20,36,56,7,0.6,1.0,0.8
2cbb8efd8fb9de2c52b42ddfb5287b3339d310f4,"ENH JTFS tensorflow frontend (#965)

* test

* tffrontend test

* fixed differentiability test

* change back

* revert change

* vincent's feedback

* remove numpy test

* remove numpy test

* cyrus formatting feedback

* formatting

* formatting and remove unused imports

* refactor tests

* remove unreferenced variables

* fix import in test

* fix import in test

* fix tf test

* fix tf test backend import

Co-authored-by: Cyrus <cyrusvahidi@gmail.com>",Han Han,30601012+lylyhan@users.noreply.github.com,GitHub,noreply@github.com,2022-09-28 19:35:47+02:00,-7200,2022-09-28 18:35:47+01:00,-3600,True,False,"['tensorflow_frontend.py', 'test_tensorflow_scattering1d.py', 'test_tensorflow_timefrequency_scattering.py', 'test_timefrequency_scattering.py']",['58e37688330fbd3387e9eb33d748d7d6176c0426'],28,277,305,4,0.39490445859872614,0.9235668789808917,0.3184713375796178
312831fbf0d4fce0078eb5d78045dd2668084124,"MAINT Change current version to 0.4.0.dev0 (#962)

Per @lostanlen's suggestion, we should be following PEP 440 here.",Joakim Andén,janden@kth.se,GitHub,noreply@github.com,2022-09-30 23:03:51+02:00,-7200,2022-09-30 23:03:51+02:00,-7200,True,False,['version.py'],['2cbb8efd8fb9de2c52b42ddfb5287b3339d310f4'],1,1,2,1,,,
9ebf84d28306571e82d51e1ef24bb3ed5f089c66,tensorflow differentiability test fix (#968),Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,GitHub,noreply@github.com,2022-10-01 15:55:01+02:00,-7200,2022-10-01 15:55:01+02:00,-7200,True,False,['test_tensorflow_scattering1d.py'],['312831fbf0d4fce0078eb5d78045dd2668084124'],19,4,23,1,0.0,0.0,1.0
4a29834235e696d7d020b9fafa3222ec5971246a,"MAINT export `TimeFrequencyScattering` in all frontends (#967)

* add TimeFrequencyScattering to torch frontend

* bis

* add TimeFrequencyScattering to TF frontend

* add TimeFrequencyScattering to sklearn

* add TimeFrequencyScattering to numpy

* add TimeFrequencyScattering to keras

* add TimeFrequencyScattering to jax

* import TimeFrequencyScatteringTransformer in sklearn.py

* bis",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2022-10-05 10:49:00+02:00,-7200,2022-10-05 09:49:00+01:00,-3600,True,False,"['jax.py', 'keras.py', 'numpy.py', 'sklearn.py', 'tensorflow.py', 'torch.py']",['9ebf84d28306571e82d51e1ef24bb3ed5f089c66'],63,113,176,6,,,
45b2cc5a021b766adf7387e8315a0e2dc6eaf0c6,remove jtfs jax export until frontend is implemented (#970),Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,GitHub,noreply@github.com,2022-10-31 13:27:15+00:00,0,2022-10-31 14:27:15+01:00,-3600,True,False,['jax.py'],['4a29834235e696d7d020b9fafa3222ec5971246a'],6,0,6,1,,,
f21db381e16603a56055c50881d58498a9ebaf1d,make swap_time_frequency output contiguous (#972),Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,GitHub,noreply@github.com,2022-11-02 12:59:31+00:00,0,2022-11-02 08:59:31-04:00,14400,True,False,"['torch_backend.py', 'test_torch_backend_1d.py']",['45b2cc5a021b766adf7387e8315a0e2dc6eaf0c6'],1,3,4,2,0.0,1.0,0.0
b5d8045a192d359b2c1905b1bf8dfc587b82ec7c,"JTFS remove broken JAX import and refactor tests (#973)

* remove jtfs jax export until frontend is implemented

* make swap_time_frequency output contiguous and refactor JTFS tests

* refactor jtfs tests and add tf frontend test

* refactor test jtfs torch and tf frontends",Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,GitHub,noreply@github.com,2022-11-02 12:59:54+00:00,0,2022-11-02 08:59:54-04:00,14400,True,False,"['timefrequency_scattering.py', 'test_tensorflow_timefrequency_scattering.py', 'test_timefrequency_scattering.py']",['f21db381e16603a56055c50881d58498a9ebaf1d'],219,101,320,3,0.8117647058823529,0.27058823529411763,0.0
a175292e5cc8d8194f5fea86ed36116b66f72c31,[MAINT] add format kwarg to TimeFrequencyScattering torch and tf frontends (#975),Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,GitHub,noreply@github.com,2022-11-21 16:57:31+00:00,0,2022-11-21 11:57:31-05:00,18000,True,False,"['tensorflow_frontend.py', 'torch_frontend.py', 'test_timefrequency_scattering.py']",['b5d8045a192d359b2c1905b1bf8dfc587b82ec7c'],69,159,228,3,0.0,0.9662921348314607,0.16853932584269662
3f7d02518f111e7c127da8d97e65de5f1a492a81,"FIX JTFS subsampling when `F < 2**J_fr` (#977)

* FIX #976 subsampling when frequency averaging. Test non-default F less than 2**J_fr.

* remove unused import

* add comments to tests",Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,GitHub,noreply@github.com,2022-12-08 12:21:11+00:00,0,2022-12-08 13:21:11+01:00,-3600,True,False,"['timefrequency_scattering.py', 'test_timefrequency_scattering.py']",['a175292e5cc8d8194f5fea86ed36116b66f72c31'],2,31,33,2,0.0,1.0,1.0
954c44990ca2edcd9b4cc12c20321dd20d27cce6,"FIX JTFS omit order0 from meta when `format=""joint""` (#979)",Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,GitHub,noreply@github.com,2022-12-08 23:32:17+00:00,0,2022-12-09 00:32:17+01:00,-3600,True,False,"['base_frontend.py', 'test_timefrequency_scattering.py']",['3f7d02518f111e7c127da8d97e65de5f1a492a81'],4,10,14,2,0.0,0.6666666666666666,1.0
763365be8ca2caf82780f83d0ee75c3c16e3fe64,"FIX include level k2=log2_T of psi2_f (#982)

fixes #981
tests included",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-01-08 22:32:50+01:00,-3600,2023-01-08 21:32:50+00:00,0,True,False,"['filter_bank.py', 'test_numpy_scattering1d.py']",['954c44990ca2edcd9b4cc12c20321dd20d27cce6'],2,12,14,2,1.0,1.0,1.0
dca2fa906c30379d39cf85ef886e05caf044c750,"FIX `_reduction=np.sum` (vs default `np.mean`) in JTFS sc filter factory (#983)

* _reduction=np.mean in sc filter factory

* move self._reduction from build to __init__",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-01-08 23:13:20+01:00,-3600,2023-01-08 23:13:20+01:00,-3600,True,False,"['filter_bank.py', 'base_frontend.py']",['763365be8ca2caf82780f83d0ee75c3c16e3fe64'],6,13,19,2,0.6,1.0,0.2
dd460662f0a80d28d0c90ef2d186b38c5bde8c49,MAINT move datasets.py to examples/ (#930),Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-01-09 09:26:13+01:00,-3600,2023-01-09 09:26:13+01:00,-3600,True,False,"['classif_keras.py', 'plot_classif_torch.py', 'plot_real_signal.py', 'regularized_inverse_scattering_MNIST_torch.py', 'scattering3d_qm7_torch.py', 'datasets.py']",['dca2fa906c30379d39cf85ef886e05caf044c750'],5,5,10,6,,,
8791ed7e5d16fa5f6e24424bf941c23f8f833abc,"renew badges on README (#985)

(master -> main)",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-01-09 10:04:06+01:00,-3600,2023-01-09 10:04:06+01:00,-3600,True,False,['README.md'],['dd460662f0a80d28d0c90ef2d186b38c5bde8c49'],2,2,4,1,,,
382685b60156473ae790f13acb6a2853523fc9d5,"FIX `get_max_dyadic_subsampling` for negative `xi` in JTFS frequency filterbank construction (#987)

* FIX absolute value of xi in get_max_dyadic_subsampling

* update max_dyadic_subsampling docstring

* update unit test",Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,GitHub,noreply@github.com,2023-01-10 12:01:55+00:00,0,2023-01-10 13:01:55+01:00,-3600,True,False,"['filter_bank.py', 'test_timefrequency_scattering.py']",['8791ed7e5d16fa5f6e24424bf941c23f8f833abc'],4,25,29,2,0.0,0.0,1.0
81ae56781e3ee6e0ec879514d468a04e8d027522,"MAINT remove J_pad and N from ScatteringBase1D (#989)

after v0.3 deprecation cycle",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-01-13 21:22:08+01:00,-3600,2023-01-13 21:22:08+01:00,-3600,True,False,['base_frontend.py'],['382685b60156473ae790f13acb6a2853523fc9d5'],14,0,14,1,0.0,0.0,0.0
196e02a8ac7a1736c9c442f11bab9ba2c7b1e1a2,"MAINT Bring in updates from 0.3.X into main (#961)

* DOC Update README (#948)

Add version number, mentions of Jax, fix minor formatting.

* DOC Fix jax autodoc (#951)

* DOC Make Jax frontends self-document

Otherwise they won't have the __doc__ attribute (presumably it
gets overwritten by the inheritance).

* DOC Add Jax to autodoc

* DOC Fix Flatiron logo in README (#952)

* DOC Remove README ref to CPU hardware

* DOC Fix README py version badges

* DOC Update build status badge

* DOC More README fixes

Looks like no one has read this thing in years…

* DOC Add html-noplot target

Lets us generate the HTML docs without running all the gallery examples.

* DOC Add `sphinx_issues` to sphinx config

* DOC Minor cleanup to v0.3.0 changelog

* DOC Add new roles for changelog

* DOC Import bootstrap badge styles for changelog

* DOC Make sure that FI logo appears in sphinx

Since the README is relative to the root of the project, sphinx isn't
able to get the correct path for the image. Instead of trying to do some
sort of clever path rewriting, we serve the image from https://kymat.io
instead.

* DOC Fix formatting in what's new v0.3.0

* DOC Restore title

Per @lostanlen's suggestion.",Joakim Andén,janden@kth.se,GitHub,noreply@github.com,2023-01-17 10:26:44+01:00,-3600,2023-01-17 10:26:44+01:00,-3600,True,False,"['README.md', 'Makefile', 'custom.css', 'codereference.rst', 'conf.py', 'sphinx_issues.py', 'whats_new.rst', '_preamble.rst', 'v0.3.rst', 'jax_frontend.py', 'jax_frontend.py', 'jax_frontend.py']",['81ae56781e3ee6e0ec879514d468a04e8d027522'],63,468,531,12,0.33962264150943394,0.5094339622641509,0.18867924528301888
42e48afdf298ac1988e637ea2f0161d00066744f,MAINT remove version number from main README,Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-01-17 10:28:11+01:00,-3600,2023-01-17 10:28:11+01:00,-3600,True,False,['README.md'],['196e02a8ac7a1736c9c442f11bab9ba2c7b1e1a2'],2,2,4,1,,,
c3284b4df75afb7b80277f19da6ca3a200767586,MAINT concatenate --> stack (#991),Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-01-25 13:58:24+01:00,-3600,2023-01-25 13:58:24+01:00,-3600,True,False,"['numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'timefrequency_scattering.py', 'base_frontend.py', 'numpy_backend.py', 'torch_backend.py', 'scattering2d.py', 'numpy_backend.py', 'tensorflow_backend.py', 'torch_backend.py', 'scattering3d.py', 'test_timefrequency_scattering.py', 'test_numpy_backend_2d.py', 'test_tensorflow_backend_2d.py', 'test_torch_backend_2d.py']",['42e48afdf298ac1988e637ea2f0161d00066744f'],32,32,64,16,,,
de6fbfac732367a99f7ee2fea0342e64098bf0ab,TST Fix Tensorflow pip package in Jenkins (#992),Joakim Andén,janden@kth.se,GitHub,noreply@github.com,2023-01-31 16:56:32+01:00,-3600,2023-01-31 16:56:32+01:00,-3600,True,False,['Dockerfile'],['c3284b4df75afb7b80277f19da6ca3a200767586'],1,1,2,1,,,
f2042c5d5e7b7c244d4562c21ee93f70585597f7,"MAINT `oversampling` --> `stride`, immutable `Q` and `T` (#988)

* MAINT deprecate oversampling, introduce stride

write ispow2
minor update in tests
oversampling = self.log2_T - int(math.floor(math.log2(stride)))
pass stride to check runtime args

* remove ispow2, shorten PR

* self._oversampling. stride at construction time

* rewrite sc1d and jtfs in terms of log2_stride

* unit test oversampling and N

will be removed in 0.4

* MAINT remove J_pad and N from ScatteringBase1D (#989)

after v0.3 deprecation cycle

* MAINT deprecate oversampling, introduce stride

write ispow2
minor update in tests
oversampling = self.log2_T - int(math.floor(math.log2(stride)))
pass stride to check runtime args

* remove ispow2, shorten PR

* self._oversampling. stride at construction time

* rewrite sc1d and jtfs in terms of log2_stride

* unit test oversampling and N

will be removed in 0.4

* remove N property

* JTFS test coverage

* keras, Q, oversampling, average test coverage

* assert, not print

* test NotImplementedError

* TST Fix Tensorflow pip package in Jenkins (#992)

---------

Co-authored-by: Joakim Andén <janden@kth.se>",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-02-06 18:46:38+01:00,-3600,2023-02-06 17:46:38+00:00,0,True,False,"['scattering1d.py', 'timefrequency_scattering.py', 'base_frontend.py', 'jax_frontend.py', 'keras_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'test_keras_scattering1d.py', 'test_numpy_scattering1d.py', 'test_tensorflow_scattering1d.py', 'test_timefrequency_scattering.py', 'test_torch_scattering1d.py']",['de6fbfac732367a99f7ee2fea0342e64098bf0ab'],189,290,479,13,0.29896907216494845,1.0,0.4742268041237113
5d47356885a444236fc50099fda208cf9a298c6f,"MAINT new authors. Han, Schlüter, Simon, Vahidi, Wang, Warrick (#999)",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-02-19 14:12:00+01:00,-3600,2023-02-19 14:12:00+01:00,-3600,True,False,['AUTHORS.md'],['f2042c5d5e7b7c244d4562c21ee93f70585597f7'],0,6,6,1,,,
f6d17cc352feaf8f36113dd13cd4eb1af7dc4193,"TST `generate_test_data` (#998)

* write generate_test_data_1d

* overwrite test_data_1d.npz

i had to reduce keras atol down to 1e-6 (it was 1e-7 before). not sure why

1e-7 is below float32 precision so i'm not sure how that was possible",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-03-02 14:15:47+01:00,-3600,2023-03-02 14:15:47+01:00,-3600,True,False,"['generate_test_data_1d.py', 'test_data_1d.npz', 'test_keras_scattering1d.py']",['5d47356885a444236fc50099fda208cf9a298c6f'],1,23,24,3,,,
3bccbe22d9b4b58b6c35741d6ae7b18abfc5bd03,"MAINT JTFS `oversampling_fr` --> `stride_fr` (#994)

* remove oversampling kwarg from jtfs tests

* remove oversampling_fr tests

* stride_fr in frontends

* JTFS properties

average_fr, F, log2_F, log2_stride_fr, stride_fr
tests included

* log2_stride_fr in core",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-03-02 14:16:35+01:00,-3600,2023-03-02 14:16:35+01:00,-3600,True,False,"['timefrequency_scattering.py', 'base_frontend.py', 'numpy_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'test_timefrequency_scattering.py']",['f6d17cc352feaf8f36113dd13cd4eb1af7dc4193'],92,91,183,6,1.0,0.0,1.0
de5f4aec95c6ab73e4a78433292cb49d038a7f7d,"ENH JTFS JAX frontend (#1001)

* test jax frontend scattering widthfirst

* jtfs jax frontend test",Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,GitHub,noreply@github.com,2023-03-03 07:57:30+00:00,0,2023-03-03 08:57:30+01:00,-3600,True,False,"['jax_frontend.py', 'test_timefrequency_scattering.py']",['3bccbe22d9b4b58b6c35741d6ae7b18abfc5bd03'],13,95,108,2,0.03571428571428571,1.0,0.17857142857142858
8b097c1074c7d10bf5e1ebd7a43574f63e2925a2,"ENH JTFS jax module export  (#1004)

* test jax frontend scattering widthfirst

* jtfs jax frontend test

* export JTFS from jax and sklearn modules

* test jax frontend scattering widthfirst

* jtfs jax frontend test

* fix jax export

* jax code coverage

* fix jax frontend test",Cyrus Vahidi,10761938+cyrusvahidi@users.noreply.github.com,GitHub,noreply@github.com,2023-03-03 21:39:37+00:00,0,2023-03-03 22:39:37+01:00,-3600,True,False,"['jax.py', 'sklearn.py', 'test_timefrequency_scattering.py']",['de5f4aec95c6ab73e4a78433292cb49d038a7f7d'],7,10,17,3,,,
e5499f4bd61f1f120e692792f77027eb8ac7aa4b,"FIX (breaking change!) `_reduction=np.sum` (#1005)

* switch to self._reduction = np.sum

this commit breaks compatibility and thus breaks some unit tests

* default _reduction=np.mean in sc_filter_factory

* Delete test_correctness.py

* re-generate test data 1d (_reduction=mean)

post-984

Co-authored-by: Cyrus Vahidi <cyrusvahidi@gmail.com>",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-03-04 21:03:45+01:00,-3600,2023-03-04 20:03:45+00:00,0,True,False,"['filter_bank.py', 'base_frontend.py', 'test_correctness.py', 'test_data_1d.npz']",['8b097c1074c7d10bf5e1ebd7a43574f63e2925a2'],53,8,61,4,0.8666666666666667,0.0,0.0
8718b6bf6b289d65b4461c8e056d6795564cb899,"MAINT remove `_reduction` from JTFS self (#1006)

* remove _reduction from JTFS self

* np.mean --> np.sum

thanks to Cyrus",Vincent Lostanlen,vincent.lostanlen@ls2n.fr,GitHub,noreply@github.com,2023-03-08 12:07:28+01:00,-3600,2023-03-08 11:07:28+00:00,0,True,False,['base_frontend.py'],['e5499f4bd61f1f120e692792f77027eb8ac7aa4b'],3,2,5,1,0.0,0.0,1.0
2e86ba03a2563607a4155d0e644b78ab57801f0c,"DOC Fix 1d dataset examples (#1007)

* DOC Use librosa instead for sample 1D signal

* DOC Fix 1D classification examples

Since the datasets module is no longer part of the Kymatio package, we
can't access it when running the scripts as part of a Sphinx Gallery.
To solve this, we instead use the `deeplake` package, which provides a
dataloader for FSDD. Since `fetch_fsdd` is no longer used, we remove
this from `datasets`.",Joakim Andén,janden@kth.se,GitHub,noreply@github.com,2023-03-13 22:47:43+01:00,-3600,2023-03-13 22:47:43+01:00,-3600,True,False,"['classif_keras.py', 'plot_classif_torch.py', 'plot_real_signal.py', 'datasets.py', 'requirements_optional.txt']",['8718b6bf6b289d65b4461c8e056d6795564cb899'],150,78,228,5,1.0,1.0,0.0
574d9a5fe72a53da56fb797d16aa1b0473f4886c,"MAINT Tensorflow 2d padding fix (#822)

* tensorflow 2d scattering padding test

* Fix to pad by importing code over from pytorch backend's implementation of pad

* Small cosmetic changes

---------

Co-authored-by: Joakim Andén <janden@kth.se>",Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,GitHub,noreply@github.com,2023-06-13 08:51:55-04:00,14400,2023-06-13 08:51:55-04:00,14400,True,False,"['tensorflow_backend.py', 'test_tensorflow_scattering2d.py']",['2e86ba03a2563607a4155d0e644b78ab57801f0c'],2,32,34,2,0.05555555555555555,1.0,0.9444444444444444
45226d7c69a358ea5957dfa0afbc3a6e2b745c57,"DOC correction (#823)

This pull request corrects an incorrect docstring in the sklearn documentation.

This solves issue #760
---------

Co-authored-by: Joakim Andén <janden@kth.se>",Muawiz Sajjad Chaudhary,39755015+MuawizChaudhary@users.noreply.github.com,GitHub,noreply@github.com,2023-06-13 08:54:02-04:00,14400,2023-06-13 08:54:02-04:00,14400,True,False,"['keras_frontend.py', 'numpy_frontend.py', 'sklearn_frontend.py', 'torch_frontend.py', 'base_frontend.py', 'base_frontend.py', 'base_frontend.py']",['574d9a5fe72a53da56fb797d16aa1b0473f4886c'],13,13,26,7,,,
468b67deade68486b800ca69253cb73ebf2c98bc,"DOC Speed up scattering inversion example

Remove J = 4 case.",Muawiz Chaudhary,muawizc@gmail.com,Joakim Andén,janden@kth.se,2022-06-03 22:07:31-04:00,14400,2023-06-13 08:56:57-04:00,14400,True,False,['plot_invert_scattering_torch.py'],['45226d7c69a358ea5957dfa0afbc3a6e2b745c57'],1,1,2,1,,,
ea7e5f143ad1581c8da24238920d4df3e8d8881a,"DOC Fix quality in scattering inversion example

By increasing the number of gradient descent iterations.",Muawiz Chaudhary,muawizc@gmail.com,Joakim Andén,janden@kth.se,2022-06-03 22:13:54-04:00,14400,2023-06-13 08:56:57-04:00,14400,True,False,['plot_invert_scattering_torch.py'],['468b67deade68486b800ca69253cb73ebf2c98bc'],1,1,2,1,,,
17f77f1e0361f1334e4ebe1e8292fcf20279cb36,DOC Clean up scattering inversion example,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-03-10 10:48:47+01:00,-3600,2023-06-13 08:56:57-04:00,14400,True,False,['plot_invert_scattering_torch.py'],['ea7e5f143ad1581c8da24238920d4df3e8d8881a'],48,51,99,1,,,
7dbe6f5e6bac8fa37a7533f5fb8b1f7d47acced1,DOC Rename plot_filters_2d,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-03-13 15:02:05+01:00,-3600,2023-06-13 08:59:23-04:00,14400,True,False,['plot_filters_2d.py'],['17f77f1e0361f1334e4ebe1e8292fcf20279cb36'],0,0,0,1,,,
a554a2a527ce0a235b18be4a1f0e135e8dc5dc70,DOC Clean up plot_filters_2d,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-03-13 15:51:11+01:00,-3600,2023-06-13 08:59:23-04:00,14400,True,False,['plot_filters_2d.py'],['7dbe6f5e6bac8fa37a7533f5fb8b1f7d47acced1'],51,55,106,1,0.0,0.0,0.0
0cef0fa032b5f601193db2fc1a7fae19a5d987aa,"TST Modify docs workflow to upload artifact

Also fix install command.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-06-13 09:35:39-04:00,14400,2023-06-13 09:38:20-04:00,14400,True,False,['docs.yml'],['a554a2a527ce0a235b18be4a1f0e135e8dc5dc70'],3,14,17,1,,,
5d4414d53ed0f894188d5b5bc505a018931a9b88,TST Update action for docs workflow,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-06-13 09:52:35-04:00,14400,2023-06-13 17:08:06-04:00,14400,True,False,['docs.yml'],['0cef0fa032b5f601193db2fc1a7fae19a5d987aa'],1,1,2,1,,,
05ae680bbc80b96bffc1473d9ee681ddcf62dd09,TST Actually upload docs when asked,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-06-13 09:54:44-04:00,14400,2023-06-13 17:08:06-04:00,14400,True,False,['docs.yml'],['5d4414d53ed0f894188d5b5bc505a018931a9b88'],2,1,3,1,,,
a0b0c88842784dc327baf5dbc3b0affdd514a509,TST Upgrade Torch versions for pip/conda CIs,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-06-28 16:15:18-04:00,14400,2023-06-29 07:57:00-04:00,14400,True,False,"['conda.yml', 'pip.yml']",['05ae680bbc80b96bffc1473d9ee681ddcf62dd09'],14,17,31,2,,,
e18a0bb5ede73773d4e9adf7b6b07036f1e65ab0,"TST Update Jenkins versions

Bring CUDA to 11.7 and loosen torchvision version (which in turn enables
newer torch versions).",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-06-28 16:47:22-04:00,14400,2023-06-29 07:57:00-04:00,14400,True,False,['Dockerfile'],['a0b0c88842784dc327baf5dbc3b0affdd514a509'],2,2,4,1,,,
f297f4004c9dbf09d7209194a9a8d352ce6996a1,"TST Add py311 for pip/conda CIs

Due to a version incompatibility with torch v1.13, only torch v2.0 is
tested for Python 3.11.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-06-28 17:02:43-04:00,14400,2023-06-29 07:57:00-04:00,14400,True,False,"['conda.yml', 'pip.yml']",['e18a0bb5ede73773d4e9adf7b6b07036f1e65ab0'],1,4,5,2,,,
b1ed674ac9db92033d16689af2a0736482a7eb15,"TST Skip downloading key for Jenkins CI

Should be included in the latest Nvidia images.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-06-28 17:48:31-04:00,14400,2023-06-29 07:57:00-04:00,14400,True,False,['Dockerfile'],['f297f4004c9dbf09d7209194a9a8d352ce6996a1'],2,0,2,1,,,
7e4099539c5c59eea8a76edcd5c940489e8d6cee,MAINT enable fast_mode of gradcheck,Muawiz Chaudhary,muawizc@gmail.com,Joakim Andén,janden@kth.se,2022-06-11 22:03:25-04:00,14400,2023-07-04 21:21:41-04:00,14400,True,False,['test_torch_scattering2d.py'],['b1ed674ac9db92033d16689af2a0736482a7eb15'],1,1,2,1,,,
8f2bbdfdbe974de82caf52b07826859c02d3bd24,"MAINT use lr_scheduler instead of resetting optimizer (#1022)

refactors examples to using `torch.optim.lr_scheduler` and the use is agnostic to pytorch version, until atleast version `0.4.0`.",vivianwhite,66977221+vivianwhite@users.noreply.github.com,GitHub,noreply@github.com,2023-09-15 16:06:14-04:00,14400,2023-09-15 16:06:14-04:00,14400,True,False,"['cifar_resnet_torch.py', 'cifar_small_sample.py', 'cifar_torch.py']",['7e4099539c5c59eea8a76edcd5c940489e8d6cee'],13,13,26,3,,,
ca43df55be70deb11e0ab166c1195b8e614ab04d,TST Pin torch to 2.0,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-10-30 20:46:28+01:00,-3600,2023-11-01 10:57:48+01:00,-3600,True,False,['Dockerfile'],['8f2bbdfdbe974de82caf52b07826859c02d3bd24'],1,1,2,1,,,
f996cb8fe49a6938df42a5c3f27f879fdb470c7d,"TST Pin Jax to 0.4.19

Otherwise won't run for py37.",Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-11-03 16:00:17+01:00,-3600,2023-11-03 16:01:34+01:00,-3600,True,False,['pip.yml'],['ca43df55be70deb11e0ab166c1195b8e614ab04d'],1,2,3,1,,,
5d9ae8299cae4dd5bd9b627adce10a2e558aa338,TST Drop py37 from CI,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-11-03 16:44:03+01:00,-3600,2023-11-06 11:49:30+01:00,-3600,True,False,"['conda.yml', 'pip.yml']",['f996cb8fe49a6938df42a5c3f27f879fdb470c7d'],6,1,7,2,,,
ca3fb011f0fd2b5f065bf4414a1ec2f8af947b21,DOC Remove py37 from README,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-11-06 11:32:52+01:00,-3600,2023-11-06 11:49:30+01:00,-3600,True,False,['README.md'],['5d9ae8299cae4dd5bd9b627adce10a2e558aa338'],1,1,2,1,,,
2e190d92a19ce274988590c834e978063cb0c490,MAINT Require py38 in setup.py,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-11-06 11:33:09+01:00,-3600,2023-11-06 11:49:30+01:00,-3600,True,False,['setup.py'],['ca3fb011f0fd2b5f065bf4414a1ec2f8af947b21'],1,1,2,1,,,
c925e2eda3afa36451205ac0f93fea0dcb8afaef,"DOC Fix docstrings (#1036)

* DOC Set sphinx toctree max depth

Looks like the default changed between the last few Sphinx versions.
Should match what we had previously.

* DOC Add docstring for `stride` in 1D

Also add deprecation warning to `oversampling`

* DOC Fix indentation, whitespace in docstrings

* DOC Purge documentation for old arguments

I.e., `vectorize` and `average`.

* DOC Make sure `scattering` docstrings are included

Since these are sometimes inherited from the base frontend, they are not
always included on the codereference page with their docstrings. There
are two ways around this. The first is to use `:inherited-members:`, but
this will force us to include a lot of methods from `torch.nn.Module`
and so on that are not relevant to the package. The second approach
(adopted here) is to automatically define a `scattering` method if one
is not present that simply calls the super method.",Joakim Andén,janden@kth.se,GitHub,noreply@github.com,2023-11-18 20:24:56+01:00,-3600,2023-11-18 20:24:56+01:00,-3600,True,False,"['index.rst', 'sklearn_frontend.py', 'tensorflow_frontend.py', 'torch_frontend.py', 'base_frontend.py', 'base_frontend.py', 'base_frontend.py']",['2e190d92a19ce274988590c834e978063cb0c490'],142,106,248,7,0.8181818181818182,0.0,1.0
c088ec424cc5cb269848a5872f0bb49e6020c2c0,TST Add Torch 1.10 to CI,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-11-01 21:09:21+01:00,-3600,2023-11-20 15:18:11+01:00,-3600,True,False,"['conda.yml', 'pip.yml']",['c925e2eda3afa36451205ac0f93fea0dcb8afaef'],3,13,16,2,,,
184453dcbfe343d2fbf61f058ec7ab756f14e486,TST Update GHA Python setup,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-11-01 21:12:03+01:00,-3600,2023-11-20 15:18:11+01:00,-3600,True,False,['pip.yml'],['c088ec424cc5cb269848a5872f0bb49e6020c2c0'],1,1,2,1,,,
07eb1364da0ebfbb15411e352d282622dbfb2824,DOC Add py311 to README badges,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-11-01 21:13:11+01:00,-3600,2023-11-20 15:18:11+01:00,-3600,True,False,['README.md'],['184453dcbfe343d2fbf61f058ec7ab756f14e486'],1,1,2,1,,,
5aae226d09eb9894c0219bf4b59515d59392bdb2,TST Update torch from 2.0.0 to 2.0.1,Joakim Andén,janden@kth.se,Joakim Andén,janden@kth.se,2023-11-01 22:30:46+01:00,-3600,2023-11-20 15:18:11+01:00,-3600,True,False,['pip.yml'],['07eb1364da0ebfbb15411e352d282622dbfb2824'],2,2,4,1,,,
