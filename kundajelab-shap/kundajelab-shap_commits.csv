Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
7673c7d0e147c1f9d3942b32ca2c0ba93fd37875,Create README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2016-11-22 13:44:11-08:00,28800,2016-11-22 13:44:11-08:00,28800,True,False,['README.md'],[],0,5,5,1,,,
bcaaeda6ef051696562cb83e7a1a11c539b2c71b,Move esvalues name to shap,Scott Lundberg,scottmlundberg@gmail.com,Scott Lundberg,scottmlundberg@gmail.com,2016-12-01 12:01:00-08:00,28800,2016-12-01 12:01:00-08:00,28800,True,False,"['README.md', 'Iris classification.ipynb', 'setup.py', '__init__.py', 'setup.cfg', 'shap.py']",['7673c7d0e147c1f9d3942b32ca2c0ba93fd37875'],3,907,910,6,0.1782178217821782,0.25742574257425743,0.42574257425742573
588a20c83729907b7dbb600047ec591a3c7c4b08,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2016-12-01 12:11:45-08:00,28800,2016-12-01 12:11:45-08:00,28800,True,False,['README.md'],['bcaaeda6ef051696562cb83e7a1a11c539b2c71b'],3,17,20,1,,,
addcc820c4fedae292244d3890b2039fd2045e26,Upload new example for README,Scott Lundberg,scottmlundberg@gmail.com,Scott Lundberg,scottmlundberg@gmail.com,2016-12-01 15:22:02-08:00,28800,2016-12-01 15:22:02-08:00,28800,True,False,"['.gitignore', 'simple_iris_dataset.png', 'simple_iris_explanation.png', 'Front page example.ipynb']",['588a20c83729907b7dbb600047ec591a3c7c4b08'],0,177,177,4,,,
3f95e1dd8f91dcddafc22a62b1943bcecfac63ac,Update README example,Scott Lundberg,scottmlundberg@gmail.com,Scott Lundberg,scottmlundberg@gmail.com,2016-12-01 15:29:10-08:00,28800,2016-12-01 15:29:10-08:00,28800,True,False,"['simple_iris_explanation.png', 'Front page example.ipynb']",['addcc820c4fedae292244d3890b2039fd2045e26'],6,6,12,2,,,
71011d19e43ec5e7e9c27f8c7902a9dbdfe6cc9b,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2016-12-01 15:35:57-08:00,28800,2016-12-01 15:35:57-08:00,28800,True,False,['README.md'],['3f95e1dd8f91dcddafc22a62b1943bcecfac63ac'],17,29,46,1,,,
7f0bfb57c3a7a0623bcd8f7d0578ffa1645c3fa0,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2016-12-01 15:41:43-08:00,28800,2016-12-01 15:41:43-08:00,28800,True,False,['README.md'],['71011d19e43ec5e7e9c27f8c7902a9dbdfe6cc9b'],2,2,4,1,,,
fa29908e6fbbf2d5ed521ef8e700886cfa0b9d82,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2016-12-01 15:49:11-08:00,28800,2016-12-01 15:49:11-08:00,28800,True,False,['README.md'],['7f0bfb57c3a7a0623bcd8f7d0578ffa1645c3fa0'],0,4,4,1,,,
6f8856f6278666418abdf17bd2db7f5ddf12be7a,A header image,Scott Lundberg,scottmlundberg@gmail.com,Scott Lundberg,scottmlundberg@gmail.com,2016-12-01 16:03:41-08:00,28800,2016-12-01 16:03:41-08:00,28800,True,False,"['logo.ai', 'logo.png', 'simple_iris_dataset.png', 'simple_iris_explanation.png']",['3f95e1dd8f91dcddafc22a62b1943bcecfac63ac'],0,1555,1555,4,,,
a6249db94dd61d0f72e227852026c033ded73a5c,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2016-12-01 16:07:48-08:00,28800,2016-12-01 16:07:48-08:00,28800,True,False,['README.md'],['6d9fc245777352db0f960774aac0829ee8d2890e'],2,6,8,1,,,
bd59728e04ffe4620b1701eec4d1fe2116b937f6,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2016-12-01 17:14:31-08:00,28800,2016-12-01 17:14:31-08:00,28800,True,False,['README.md'],['a6249db94dd61d0f72e227852026c033ded73a5c'],2,2,4,1,,,
a550d1dca7c647905c0df90a8672b1135593806e,Add Iris notebook as html,Scott Lundberg,scottmlundberg@gmail.com,Scott Lundberg,scottmlundberg@gmail.com,2016-12-01 17:15:35-08:00,28800,2016-12-01 17:15:35-08:00,28800,True,False,"['Iris classification.html', 'Iris classification.ipynb']",['6d9fc245777352db0f960774aac0829ee8d2890e'],17,12357,12374,2,,,
fe2f096fa9af02df4abb2e01e0e2bdf3d4a07879,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2016-12-01 17:32:11-08:00,28800,2016-12-01 17:32:11-08:00,28800,True,False,['README.md'],['7c5e7c3e8611fc6f1714f01b466dac267994be9a'],1,7,8,1,,,
693ba68fe92941a9b87da153583dbafd169b889d,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2016-12-01 17:35:39-08:00,28800,2016-12-01 17:35:39-08:00,28800,True,False,['README.md'],['fe2f096fa9af02df4abb2e01e0e2bdf3d4a07879'],1,1,2,1,,,
9d76c71bb44ae0b9ab7b33ca8271ac5dd03187b2,Added census example and Shapley kernel validation,Scott Lundberg,scottmlundberg@gmail.com,Scott Lundberg,scottmlundberg@gmail.com,2016-12-09 07:34:52+01:00,-3600,2016-12-09 07:34:52+01:00,-3600,True,False,"['Census income classification.html', 'Census income classification.ipynb', 'Iris classification.ipynb', 'Shapley kernel validation.ipynb']",['693ba68fe92941a9b87da153583dbafd169b889d'],6,13169,13175,4,,,
15285481ebed09db294d20d39986891f01fe1aea,Name KernelExplainer,Scott Lundberg,scottmlundberg@gmail.com,Scott Lundberg,scottmlundberg@gmail.com,2016-12-09 07:38:52+01:00,-3600,2016-12-09 07:38:52+01:00,-3600,True,False,"['__init__.py', 'shap.py']",['9d76c71bb44ae0b9ab7b33ca8271ac5dd03187b2'],10,12,22,2,1.0,0.0,1.0
82acddb9918fb36a39a15ce356f47c7c8c4779e9,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2016-12-09 07:51:55+01:00,-3600,2016-12-09 07:51:55+01:00,-3600,True,False,['README.md'],['15285481ebed09db294d20d39986891f01fe1aea'],0,1,1,1,,,
f64f2e61f97676b1e3f0f7318d79b75e3a802b40,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2016-12-09 07:54:17+01:00,-3600,2016-12-09 07:54:17+01:00,-3600,True,False,['README.md'],['82acddb9918fb36a39a15ce356f47c7c8c4779e9'],1,1,2,1,,,
150d18dd9aa14ba9fc2b2d70ba5f487b59e2158b,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-01-06 09:17:01-08:00,28800,2017-01-06 09:17:01-08:00,28800,True,False,['README.md'],['f64f2e61f97676b1e3f0f7318d79b75e3a802b40'],1,1,2,1,,,
d5302ccb80264bbbc650b514cfcbeaeadc52dcef,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-01-06 14:19:37-08:00,28800,2017-01-06 14:19:37-08:00,28800,True,False,['README.md'],['150d18dd9aa14ba9fc2b2d70ba5f487b59e2158b'],3,4,7,1,,,
2781f6fb620396d928f6065afa8ec2851a9307af,Fix issues with small number of features,Scott Lundberg,slund1@D-10-157-60-122.dhcp4.washington.edu,Scott Lundberg,slund1@D-10-157-60-122.dhcp4.washington.edu,2017-02-15 09:24:53-08:00,28800,2017-02-15 09:24:53-08:00,28800,True,False,"['setup.py', 'shap.py']",['d5302ccb80264bbbc650b514cfcbeaeadc52dcef'],12,16,28,2,0.0,0.0,0.0
8de2cda43535afc1c1379d94c788d13889440b26,Don't do future selection when we have most of the sample space enumerated.,Scott Lundberg,slund1@D-10-157-60-122.dhcp4.washington.edu,Scott Lundberg,slund1@D-10-157-60-122.dhcp4.washington.edu,2017-02-17 09:52:08-08:00,28800,2017-02-17 09:52:08-08:00,28800,True,False,['shap.py'],['2781f6fb620396d928f6065afa8ec2851a9307af'],32,41,73,1,0.0,0.0,0.7142857142857143
10480d24db2e8d3fa793173b1f7cb633fa898cca,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-04-13 17:07:33-07:00,25200,2017-04-13 17:07:33-07:00,25200,True,False,['README.md'],['8de2cda43535afc1c1379d94c788d13889440b26'],1,1,2,1,,,
54e92b5cd93a48caebebd301fcfb8e27a8352f91,Fix integer division issues in Python 2,Scott Lundberg,slund1@D-173-250-146-19.dhcp4.washington.edu,Scott Lundberg,slund1@D-173-250-146-19.dhcp4.washington.edu,2017-04-13 17:43:14-07:00,25200,2017-04-13 17:43:14-07:00,25200,True,False,['shap.py'],['8de2cda43535afc1c1379d94c788d13889440b26'],45,45,90,1,1.0,1.0,0.0
108b0e98208f0a832e3e3477d33feab48d6d3f47,Fixed link matching issue with iML,Scott Lundberg,slund1@D-173-250-200-50.dhcp4.washington.edu,Scott Lundberg,slund1@D-173-250-200-50.dhcp4.washington.edu,2017-04-18 14:43:24-07:00,25200,2017-04-18 14:43:24-07:00,25200,True,False,"['pypi_upload.sh', 'setup.py', 'shap.py']",['54e92b5cd93a48caebebd301fcfb8e27a8352f91'],2,6,8,3,,,
8a017bebd896b8dc02324155dced8cddf670fe23,Create README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-06-12 22:06:23-07:00,25200,2017-06-12 22:06:23-07:00,25200,True,False,['README.md'],['10480d24db2e8d3fa793173b1f7cb633fa898cca'],2,41,43,1,,,
46711fda38dfb6680bf990f60d9095c86bfa3e78,Added Cubic Tree SHAP notebook,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-07-28 22:53:04-07:00,25200,2017-07-28 22:53:04-07:00,25200,True,False,['Cubic Tree SHAP.ipynb'],['108b0e98208f0a832e3e3477d33feab48d6d3f47'],0,725,725,1,,,
31c3705e0adf7df68008c1746a88bfa3ef7d7079,Rename Cubic SHAP notebook,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-07-28 22:59:41-07:00,25200,2017-07-28 22:59:41-07:00,25200,True,False,['CubicTreeSHAP.ipynb'],['e9acf0ce686422e8eb5f5f35a4a6e45f4c02fcd3'],157,32,189,1,,,
a77350dfc4cced1d26c8d86096c201edbe40dad5,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-09-18 20:02:29-07:00,25200,2017-09-18 20:02:29-07:00,25200,True,False,['README.md'],['31c3705e0adf7df68008c1746a88bfa3ef7d7079'],13,14,27,1,,,
dce644ea6660d95f38f4b430349b94cb42940c45,Updated to support direct visualization of a matrix of SHAP values,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-09-21 14:03:47-07:00,25200,2017-09-21 14:03:47-07:00,25200,True,False,"['setup.py', '__init__.py', 'shap.py', '__init__.py']",['a77350dfc4cced1d26c8d86096c201edbe40dad5'],5,165,170,4,0.25806451612903225,0.0,0.18548387096774194
02e9bf4cc519ecc0484eb44493be91c36ca78829,Added example images,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-09-21 14:10:14-07:00,25200,2017-09-21 14:10:14-07:00,25200,True,False,"['boston_dataset.png', 'boston_instance.png', 'pypi_upload.sh']",['dce644ea6660d95f38f4b430349b94cb42940c45'],1,1,2,3,,,
d9629155b6634342000a9c005e91afd89e947203,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-09-21 14:16:35-07:00,25200,2017-09-21 14:16:35-07:00,25200,True,False,['README.md'],['02e9bf4cc519ecc0484eb44493be91c36ca78829'],2,2,4,1,,,
b354280a7c704fc58c27a3c9b98639b8e0b088ee,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-09-23 11:26:40-07:00,25200,2017-09-23 11:26:40-07:00,25200,True,False,['README.md'],['d9629155b6634342000a9c005e91afd89e947203'],1,1,2,1,,,
af03addda645fcf3a233d90991de77575c0f14b5,Fix visualize bug,Scott Lundberg,slund1@D-173-250-135-11.dhcp4.washington.edu,Scott Lundberg,slund1@D-173-250-135-11.dhcp4.washington.edu,2017-09-26 16:12:55-07:00,25200,2017-09-26 16:12:55-07:00,25200,True,False,"['iris_dataset.png', 'iris_instance.png', 'shap.py']",['02e9bf4cc519ecc0484eb44493be91c36ca78829'],0,4,4,3,0.0,0.0,0.0
bf8fdd4da677463e758274e75ea2eb8b180d7827,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-09-26 16:19:23-07:00,25200,2017-09-26 16:19:23-07:00,25200,True,False,['README.md'],['b7d2969b9e001e3e877ef6c07efea0159d271c5f'],2,2,4,1,,,
7b488a0dd31c82af751815596acb6af054df30aa,Added diagram image,Scott Lundberg,slund1@D-173-250-135-11.dhcp4.washington.edu,Scott Lundberg,slund1@D-173-250-135-11.dhcp4.washington.edu,2017-09-26 16:24:05-07:00,25200,2017-09-26 16:24:05-07:00,25200,True,False,"['shap_diagram.png', 'setup.py']",['b7d2969b9e001e3e877ef6c07efea0159d271c5f'],1,1,2,2,,,
e1c2ad9b3fd1b8d634a5c4da6c759ef64c26d314,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-09-26 16:25:48-07:00,25200,2017-09-26 16:25:48-07:00,25200,True,False,['README.md'],['471d2468a4ee42b2aaf21047cfdc8b078061c7aa'],1,1,2,1,,,
a19d2e0dca716e2cbb3d1c79382f4d87de9fe7a5,Fix iris examples,Scott Lundberg,slund1@D-173-250-135-11.dhcp4.washington.edu,Scott Lundberg,slund1@D-173-250-135-11.dhcp4.washington.edu,2017-09-26 16:37:47-07:00,25200,2017-09-26 16:37:47-07:00,25200,True,False,"['Shapley kernel validation.ipynb', 'Iris classification.html', 'Iris classification.ipynb']",['e1c2ad9b3fd1b8d634a5c4da6c759ef64c26d314'],109,112939,113048,3,,,
3f0617f12bec731e293493d63cebc6b6685180c3,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-09-26 16:41:24-07:00,25200,2017-09-26 16:41:24-07:00,25200,True,False,['README.md'],['a19d2e0dca716e2cbb3d1c79382f4d87de9fe7a5'],1,1,2,1,,,
86f60ca4cde698eed5557d8e9c4cdb293467a90a,Short cut code for SHAP plots,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-10-03 09:22:07-07:00,25200,2017-10-03 09:22:07-07:00,25200,True,False,"['boston_shap_plot.png', 'Census income classification (Keras).ipynb', 'Census income classification (LightGBM).ipynb', 'Front page example (LightGBM).ipynb', 'Front page example (model agnostic).ipynb', '__init__.py', 'shap.py']",['a19d2e0dca716e2cbb3d1c79382f4d87de9fe7a5'],1,204080,204081,7,0.0,0.0,0.0
2a3cdc50d22f432d3dc67cee9aa156398a4efe59,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-03 09:35:01-07:00,25200,2017-10-03 09:35:01-07:00,25200,True,False,['README.md'],['83f0fbfb7e7d94a3d91357938ee79ec5ffae01ca'],0,12,12,1,,,
c8613812c5e83879988dea46bf6199cc043a739b,Add overview plot,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-10-03 11:47:01-07:00,25200,2017-10-03 11:47:01-07:00,25200,True,False,"['boston_overview.png', '__init__.py', 'shap.py']",['83f0fbfb7e7d94a3d91357938ee79ec5ffae01ca'],1,22,23,3,0.0,1.0,0.0
c6d19079cd622a8e18862bea1f8edeeffe39e5a8,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-03 15:11:13-07:00,25200,2017-10-03 15:11:13-07:00,25200,True,False,['README.md'],['f820e515ff04e2105aac11c929486376448dfe79'],0,12,12,1,,,
cc776aba79fdcbfb5a83d401244be25a6034c2ad,New LightGBM notebook example,Scott Lundberg,slund1@D-173-250-159-26.dhcp4.washington.edu,Scott Lundberg,slund1@D-173-250-159-26.dhcp4.washington.edu,2017-10-03 15:17:01-07:00,25200,2017-10-03 15:17:01-07:00,25200,True,False,"['Census_income_classification_LightGBM.html', 'Census income classification (LightGBM).ipynb', '__init__.py', 'shap.py']",['c6d19079cd622a8e18862bea1f8edeeffe39e5a8'],1011,74382,75393,4,0.0,0.0,0.0
872b7186b880a64c47734beebf91689630e66af2,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-03 15:20:22-07:00,25200,2017-10-03 15:20:22-07:00,25200,True,False,['README.md'],['cc776aba79fdcbfb5a83d401244be25a6034c2ad'],2,5,7,1,,,
ba1b3dee47b9480d014dbd64ba523dfbdd853f73,Added basic tests,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-10-04 10:43:50-07:00,25200,2017-10-04 10:43:50-07:00,25200,True,False,"['.travis.yml', 'setup.py', 'shap.py', 'test.py']",['872b7186b880a64c47734beebf91689630e66af2'],82,44,126,4,0.9090909090909091,0.9090909090909091,1.0
37bc1fea7eca1e943e4561506aedcc3e30074bcc,One more test,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-10-04 10:47:27-07:00,25200,2017-10-04 10:47:27-07:00,25200,True,False,['test.py'],['ba1b3dee47b9480d014dbd64ba523dfbdd853f73'],0,5,5,1,1.0,1.0,1.0
56d7292f1d439bfa1cafa34fd2b34b8351d3b491,Focus this package on python,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-10-04 12:06:00-07:00,25200,2017-10-04 12:06:00-07:00,25200,True,False,"['.gitignore', 'LICENSE', 'Census income classification with LightGBM.html', 'Census income classification.html', 'Iris classification.html', 'Census income classification with Keras.ipynb', 'Census income classification with LightGBM.ipynb', 'Census income classification with scikit-learn.ipynb', 'setup.py', '__init__.py', 'setup.cfg', 'shap.py', 'pypi_upload.sh', '__init__.py', 'test_basic.py']",['37bc1fea7eca1e943e4561506aedcc3e30074bcc'],45,4792,4837,15,,,
bca42151cb3c951947f8c4e733484870534721ab,Update travis file,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-10-04 12:08:37-07:00,25200,2017-10-04 12:08:37-07:00,25200,True,False,"['.travis.yml', 'logo.ai', 'logo.pdf', 'Diabetes regression.ipynb', 'Front page example (LightGBM).ipynb', 'Front page example (model agnostic).ipynb', 'Gain calculations and user study for AAAI TreeSHAP paper.ipynb', 'Iris classification.ipynb', 'Lending agent game data generator.ipynb', 'Method efficiency comparison.ipynb', 'Simple test.ipynb', 'Sparse simple non-linear.ipynb', 'The monotonicity axiom implies the symmetry axiom for Shapley values.ipynb', 'adult.data', 'adult.names', 'adult.test', 'age_bst1.pdf', 'age_bst2.pdf', 'age_bst6.pdf', 'CubicTreeSHAP.ipynb', 'Shapley kernel validation.ipynb', 'Iris classification.html']",['56d7292f1d439bfa1cafa34fd2b34b8351d3b491'],65351,151621,216972,22,,,
2f6ca88bd4b0cd0ee01c6fc08e56b8460f38bbe2,Remove old tests,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-10-04 12:27:00-07:00,25200,2017-10-04 12:27:00-07:00,25200,True,False,['__init__.py'],['bca42151cb3c951947f8c4e733484870534721ab'],35,0,35,1,0.0,0.0,0.0
fe6ff7ff10890a264f91c74a79fa1ee1eb4c44bf,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-04 12:48:50-07:00,25200,2017-10-04 12:48:50-07:00,25200,True,False,['README.md'],['2f6ca88bd4b0cd0ee01c6fc08e56b8460f38bbe2'],0,5,5,1,,,
a237775db5b9280e40be2f64486b20186553918d,New notebook examples,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-10-04 14:19:14-07:00,25200,2017-10-04 14:19:14-07:00,25200,True,False,"['Census+income+classification+with+Keras.html', 'Census+income+classification+with+LightGBM.html', 'Iris classification.html', 'Iris+classification+with+scikit-learn.html', 'Census income classification with Keras.ipynb', 'Iris classification with scikit-learn.ipynb']",['fe6ff7ff10890a264f91c74a79fa1ee1eb4c44bf'],12393,125220,137613,6,,,
190bf573e1988b2446587e9d9ad6aca5f6f64459,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-04 14:31:05-07:00,25200,2017-10-04 14:31:05-07:00,25200,True,False,['README.md'],['a237775db5b9280e40be2f64486b20186553918d'],4,6,10,1,,,
2da1eb373d0dfead2069e7dfa250f24cc569c32e,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-09 14:18:32-07:00,25200,2017-10-09 14:18:32-07:00,25200,True,False,['README.md'],['190bf573e1988b2446587e9d9ad6aca5f6f64459'],1,1,2,1,,,
de2f3dfa47cdbc99344f09a77fa364e2c2fb6a60,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-12 14:16:30-07:00,25200,2017-10-12 14:16:30-07:00,25200,True,False,['README.md'],['2da1eb373d0dfead2069e7dfa250f24cc569c32e'],5,8,13,1,,,
e8a8a57fedc8e449403a70a277af4513d8e1e13c,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-12 14:18:05-07:00,25200,2017-10-12 14:18:05-07:00,25200,True,False,['README.md'],['de2f3dfa47cdbc99344f09a77fa364e2c2fb6a60'],1,1,2,1,,,
12936d9cbb3f933c5e8cddc5a8163f99040f2132,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-23 11:21:16-07:00,25200,2017-10-23 11:21:16-07:00,25200,True,False,['README.md'],['e8a8a57fedc8e449403a70a277af4513d8e1e13c'],1,1,2,1,,,
d2031435a14eaecf711e887af830843042a0327c,New interaction plots,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-10-24 21:20:11-07:00,25200,2017-10-24 21:20:19-07:00,25200,True,False,"['League+of+Legends+Win+Prediction+with+XGBoost.html', 'League of Legends Win Prediction with XGBoost.ipynb', 'setup.py', '__init__.py', 'shap.py']",['12936d9cbb3f933c5e8cddc5a8163f99040f2132'],2,93685,93687,5,0.0,0.0,0.0
89f404ef2444c5567e7ed6d6cb4f820a777e0e5b,Updated League example,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-10-25 09:52:05-07:00,25200,2017-10-25 09:52:05-07:00,25200,True,False,"['League+of+Legends+Win+Prediction+with+XGBoost.html', 'League of Legends Win Prediction with XGBoost.ipynb', 'shap.py']",['d2031435a14eaecf711e887af830843042a0327c'],30310,99687,129997,3,0.0,0.0,0.0
d634c94ff5475f846527a10eddd44e5730e94124,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-25 09:58:18-07:00,25200,2017-10-25 09:58:18-07:00,25200,True,False,['README.md'],['89f404ef2444c5567e7ed6d6cb4f820a777e0e5b'],0,2,2,1,,,
86f5024c8915c438b0810dbb810e6e698df881d1,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-25 12:17:49-07:00,25200,2017-10-25 12:17:49-07:00,25200,True,False,['README.md'],['d634c94ff5475f846527a10eddd44e5730e94124'],1,1,2,1,,,
7214c1d3ffb53bf0a6b6183d01cb7ac2ece7869f,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-25 12:19:12-07:00,25200,2017-10-25 12:19:12-07:00,25200,True,False,['README.md'],['86f5024c8915c438b0810dbb810e6e698df881d1'],1,1,2,1,,,
83d71481cd5c6f85451416e678eb4aca555cd629,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-25 12:19:24-07:00,25200,2017-10-25 12:19:24-07:00,25200,True,False,['README.md'],['7214c1d3ffb53bf0a6b6183d01cb7ac2ece7869f'],1,1,2,1,,,
e2897f89ca4b7c1fcc5c940c23047261976c4d25,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-25 16:14:48-07:00,25200,2017-10-25 16:14:48-07:00,25200,True,False,['README.md'],['83d71481cd5c6f85451416e678eb4aca555cd629'],2,2,4,1,,,
f11511197b0d166482bf0a2143d8ff0c737b5c1f,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-10-26 12:05:38-07:00,25200,2017-10-26 12:05:38-07:00,25200,True,False,['README.md'],['e2897f89ca4b7c1fcc5c940c23047261976c4d25'],2,2,4,1,,,
e25a83835a4466b56ddde3cb5a4f50134cb4488a,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2017-11-04 16:49:58-07:00,25200,2017-11-04 16:49:58-07:00,25200,True,False,['README.md'],['f11511197b0d166482bf0a2143d8ff0c737b5c1f'],1,20,21,1,,,
26c07816e346d9ab826f7ae98485e9abaee5d308,Added slides,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-11-06 19:19:14-08:00,28800,2017-11-06 19:19:14-08:00,28800,True,False,"['ODSC West talk.pptx', 'shap.py']",['89f404ef2444c5567e7ed6d6cb4f820a777e0e5b'],3,25,28,2,0.0,0.0,0.0
806ade5992100aee7e4768f96637403ddbab17b1,Cleaned code and changed use_l1 option to l1_reg,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-11-22 09:36:35-08:00,28800,2017-11-22 09:36:35-08:00,28800,True,False,"['__init__.py', 'shap.py', 'test_basic.py']",['14e0b85c47a2f0b5821d57ace7bfe8a9f9c88f8d'],94,48,142,3,0.7631578947368421,0.2631578947368421,1.0
94679009ca62ee06db18fd04c74ce05a9a9cc3f6,Fix l1_reg bug,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-11-30 22:39:08-08:00,28800,2017-11-30 22:39:08-08:00,28800,True,False,"['Simple Kernel SHAP.ipynb', 'setup.py', 'shap.py']",['806ade5992100aee7e4768f96637403ddbab17b1'],9,156,165,3,0.0,0.0,0.0
6b1c91a6b9aa0763b079cce5c9bbfa1426517158,Update scikit example,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,Scott Lundberg,slund1@Scotts-MBP.T-mobile.com,2017-11-30 22:56:15-08:00,28800,2017-11-30 22:56:15-08:00,28800,True,False,"['Iris+classification+with+scikit-learn.html', 'Iris classification with scikit-learn.ipynb']",['94679009ca62ee06db18fd04c74ce05a9a9cc3f6'],201,310,511,2,,,
59acf674aa06e8718be89badb85ee037d58361ed,Interaction plot updates and vector model outputs,Scott Lundberg,slund1@Scotts-MacBook-Pro.local,Scott Lundberg,slund1@Scotts-MacBook-Pro.local,2017-12-07 15:04:32-08:00,28800,2017-12-07 15:04:32-08:00,28800,True,False,"['boston_interaction_plot.png', 'boston_summary_plot.png', 'shap.py']",['6b1c91a6b9aa0763b079cce5c9bbfa1426517158'],26,47,73,3,0.0,0.0,0.0
12efd3ad119a2a3295530f50b96d91c29f520590,Update example interaction plot,Scott Lundberg,slund1@Scotts-MacBook-Pro.local,Scott Lundberg,slund1@Scotts-MacBook-Pro.local,2017-12-08 11:40:19-08:00,28800,2017-12-08 11:40:19-08:00,28800,True,False,"['boston_interaction_plot.png', 'setup.py']",['59acf674aa06e8718be89badb85ee037d58361ed'],1,1,2,2,,,
82eeacb276d1abc713423c4c07949c7a59bebaeb,"Fix color setting in summary plot

Propagate the user color setting also in case of the non-violin
plot. (This prevents the call of the automatic matplotlib color
rotation routine and the creation of a potentially much too
colorful result.)",Sebastian Templ,sebastian.templ@cern.ch,Sebastian Templ,sebastian.templ@cern.ch,2017-12-12 13:34:57+01:00,-3600,2017-12-12 13:34:57+01:00,-3600,True,False,['shap.py'],['12efd3ad119a2a3295530f50b96d91c29f520590'],1,1,2,1,,,
9cf4ae6c29ee513cd79ad37c8e4755c53d1b2eba,"Update setup.py

`'sklearn'` requirement is not recognized during installation",Denis M Korzhenkov,dkorzhenkov@gmail.com,GitHub,noreply@github.com,2017-12-19 15:46:38+03:00,-10800,2017-12-19 15:46:38+03:00,-10800,True,False,['setup.py'],['b2b0a68c6d508920fec5bba007b96819f0b682a0'],1,1,2,1,,,
ffb98edf1fdae7e89a29f415d6569b59b5ad4f39,Interaction plot example,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-08 14:27:57-08:00,28800,2018-01-08 14:27:57-08:00,28800,True,False,['nhanes1_chol_interaction.png'],['9f3a2a480b46be547da6aae296b56301140f337f'],0,0,0,1,,,
4533c1f2be088d8ee2b5306ad2128812f34d0f0f,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-01-08 14:34:17-08:00,28800,2018-01-08 14:34:17-08:00,28800,True,False,['README.md'],['ffb98edf1fdae7e89a29f415d6569b59b5ad4f39'],0,10,10,1,,,
b04975788a9da6acc7209cd47164101367e6e517,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-01-09 08:48:09-08:00,28800,2018-01-09 08:48:09-08:00,28800,True,False,['README.md'],['4533c1f2be088d8ee2b5306ad2128812f34d0f0f'],0,1,1,1,,,
276f337a6eed92cb92b3fda42650627d396f7b22,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-01-09 08:53:35-08:00,28800,2018-01-09 08:53:35-08:00,28800,True,False,['README.md'],['b04975788a9da6acc7209cd47164101367e6e517'],1,1,2,1,,,
d47143af273ed508fed9bc1394a71402201a84f4,Added NIPS slides,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-09 16:38:53-08:00,28800,2018-01-09 16:38:53-08:00,28800,True,False,['NIPS 2017 Talk.pptx'],['276f337a6eed92cb92b3fda42650627d396f7b22'],0,0,0,1,,,
9cb18d14a05677cc858b9407ed7d53c533c30628,initial distributed summary plot,kodonnell,kodonnell@users.noreply.github.com,kodonnell,kodonnell@users.noreply.github.com,2018-01-18 23:34:28+13:00,-46800,2018-01-18 23:34:28+13:00,-46800,True,False,['shap.py'],['d47143af273ed508fed9bc1394a71402201a84f4'],12,68,80,1,0.0,0.0,0.0
bce05e1e3cc9b934ce6e3fcfff51bb924f636b5e,bug fix,kodonnell,kodonnell@users.noreply.github.com,kodonnell,kodonnell@users.noreply.github.com,2018-01-18 23:59:52+13:00,-46800,2018-01-18 23:59:52+13:00,-46800,True,False,['shap.py'],['9cb18d14a05677cc858b9407ed7d53c533c30628'],1,2,3,1,0.0,0.0,0.0
deb6d3d8581b24b881c9363296d59ab6b77bd2e4,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-01-19 10:53:33-08:00,28800,2018-01-19 10:53:33-08:00,28800,True,False,['README.md'],['d47143af273ed508fed9bc1394a71402201a84f4'],1,1,2,1,,,
feff32ca59700f710b26eb71226b48b57ef2640f,latest stuff in case others want to finish off,kodonnell,kodonnell@users.noreply.github.com,kodonnell,kodonnell@users.noreply.github.com,2018-01-20 20:28:51+13:00,-46800,2018-01-20 20:28:51+13:00,-46800,True,False,['shap.py'],['bce05e1e3cc9b934ce6e3fcfff51bb924f636b5e'],16,40,56,1,0.0,0.0,0.0
c46cd77792503dc61a0025d126f8f7ef042e3be1,Refactor of the code and new summary plot style,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-23 11:21:45-08:00,28800,2018-01-23 11:26:20-08:00,28800,True,False,"['setup.py', '__init__.py', 'datasets.py', 'explainer.py', 'plots.py']",['deb6d3d8581b24b881c9363296d59ab6b77bd2e4'],279,554,833,5,0.021164021164021163,0.021164021164021163,0.19047619047619047
650f342458d48bebb6a228dae3d7684f7ac2b053,Moved notebook,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-23 11:26:05-08:00,28800,2018-01-23 11:26:20-08:00,28800,True,False,['The monotonicity axiom implies the symmetry axiom for Shapley values.ipynb'],['c46cd77792503dc61a0025d126f8f7ef042e3be1'],88,0,88,1,,,
8dc9a584614633850e5436ded2dbb0424f587f40,Update README figures,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-23 11:30:06-08:00,28800,2018-01-23 11:30:06-08:00,28800,True,False,"['boston_shap_plot.png', 'boston_summary_plot.png', 'Front page example with XGBoost.ipynb']",['650f342458d48bebb6a228dae3d7684f7ac2b053'],0,50430,50430,3,,,
339265ba84090e58b3e67b0a48a530f43021ab41,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-01-23 11:41:32-08:00,28800,2018-01-23 11:41:32-08:00,28800,True,False,['README.md'],['8dc9a584614633850e5436ded2dbb0424f587f40'],29,14,43,1,,,
3bacf561566104f54c495db0ecfac3ca441c4309,Fix import error,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-23 11:46:09-08:00,28800,2018-01-23 11:46:09-08:00,28800,True,False,['plots.py'],['339265ba84090e58b3e67b0a48a530f43021ab41'],1,1,2,1,,,
311ac874ca1508aae7bce0080fd3f0d0582bcf5e,Recognize pandas.core.series.Series,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-23 11:52:21-08:00,28800,2018-01-23 11:52:21-08:00,28800,True,False,['plots.py'],['3bacf561566104f54c495db0ecfac3ca441c4309'],1,5,6,1,0.0,0.0,0.0
262c8b7a9e1f69a4ec152c059d94a1db80d49c17,Add pandas dependency,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-23 11:55:04-08:00,28800,2018-01-23 11:55:04-08:00,28800,True,False,['setup.py'],['311ac874ca1508aae7bce0080fd3f0d0582bcf5e'],1,1,2,1,,,
9edb9976bad531a546870ba8c261fc7e2478cf02,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-01-23 12:10:25-08:00,28800,2018-01-23 12:10:25-08:00,28800,True,False,['README.md'],['262c8b7a9e1f69a4ec152c059d94a1db80d49c17'],3,3,6,1,,,
e873e59c9ac926bd375bdcdc3757374d3e051ce6,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-01-23 12:29:23-08:00,28800,2018-01-23 12:29:23-08:00,28800,True,False,['README.md'],['9edb9976bad531a546870ba8c261fc7e2478cf02'],1,1,2,1,,,
813d45559fad20b57deaf3b722703bd6609e4138,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-01-23 12:31:38-08:00,28800,2018-01-23 12:31:38-08:00,28800,True,False,['README.md'],['e873e59c9ac926bd375bdcdc3757374d3e051ce6'],1,1,2,1,,,
28a2f543b95c0a5a9da7bd1b7b0adfa3ed79d824,Add ability to turn off feature sorting,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-29 10:57:08-08:00,28800,2018-01-29 10:57:20-08:00,28800,True,False,['plots.py'],['813d45559fad20b57deaf3b722703bd6609e4138'],5,8,13,1,0.0,0.0,0.0
7cd758674a76fecbae992680df7dbff5307f2958,Support list of names in summary plot,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-29 11:17:33-08:00,28800,2018-01-29 11:17:33-08:00,28800,True,False,"['setup.py', 'plots.py']",['28a2f543b95c0a5a9da7bd1b7b0adfa3ed79d824'],2,2,4,2,,,
c230cb495bff700b08281979d846c6b755df9329,Fix feature order,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-29 11:57:16-08:00,28800,2018-01-29 11:57:16-08:00,28800,True,False,['plots.py'],['7cd758674a76fecbae992680df7dbff5307f2958'],1,1,2,1,,,
930420f8040c5460a3b5f60450ebf0200f62977e,Fixed summary plot NaN y-coordinates / Added tight layout,Valentin Perret,valentin.perret@oto.ai,Valentin Perret,valentin.perret@oto.ai,2018-01-30 15:56:03+01:00,-3600,2018-01-30 15:56:03+01:00,-3600,True,False,['plots.py'],['c230cb495bff700b08281979d846c6b755df9329'],1,2,3,1,0.0,0.0,0.0
fdf0eac587f254bf47c57331e9442f435da2676a,Added color bar to summary plot and cleaned up the plots a bit,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-30 16:04:47-08:00,28800,2018-01-30 16:04:47-08:00,28800,True,False,"['and_trees.pdf', 'Basic SHAP Interaction Value Example in XGBoost.ipynb', 'setup.py', 'plots.py']",['ea379e1cbb7ff56968493908a53373e5a47f093d'],8,2209,2217,4,0.0,0.0,0.0
8685477fd3f78360f6c2b72bd131b2be01e57986,Update summary plot scaling,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-30 16:07:44-08:00,28800,2018-01-30 16:07:44-08:00,28800,True,False,"['setup.py', 'plots.py']",['fdf0eac587f254bf47c57331e9442f435da2676a'],3,3,6,2,,,
d13363ca4a33ef648eec7342ccf0a62f153f4191,Add basic interaction example,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-31 07:54:43-08:00,28800,2018-01-31 07:54:43-08:00,28800,True,False,['Basic SHAP Interaction Value Example in XGBoost.ipynb'],['8685477fd3f78360f6c2b72bd131b2be01e57986'],14,13,27,1,,,
bad5d47076b1d5899b164b83a28a58d11e517d15,Update interaction example,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-31 07:59:34-08:00,28800,2018-01-31 07:59:34-08:00,28800,True,False,['Basic SHAP Interaction Value Example in XGBoost.ipynb'],['d13363ca4a33ef648eec7342ccf0a62f153f4191'],22,64,86,1,,,
63f30abf19dd58834b0ec8c6a06b141f08ee790f,Added NHANES I dataset,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-31 16:00:34-08:00,28800,2018-01-31 16:00:34-08:00,28800,True,False,"['NHANESI_subset_X.csv', 'NHANESI_subset_y.csv']",['bad5d47076b1d5899b164b83a28a58d11e517d15'],0,19866,19866,2,,,
ebb3ab92341c8430eff9c8a8c54e89630d77dfe4,Updated NHANES example data,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-01-31 21:09:16-08:00,28800,2018-01-31 21:09:16-08:00,28800,True,False,['NHANESI_subset_X.csv'],['63f30abf19dd58834b0ec8c6a06b141f08ee790f'],9933,9933,19866,1,,,
993bdf7c396f91483c290112ae0ce24c931a6c3d,Add link option and new dataset,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-01 08:50:58-08:00,28800,2018-02-01 08:50:58-08:00,28800,True,False,"['setup.py', 'datasets.py', 'plots.py']",['ebb3ab92341c8430eff9c8a8c54e89630d77dfe4'],3,20,23,3,0.26666666666666666,0.26666666666666666,0.26666666666666666
dacea2d71340ab63dc7354b8d15f45ed1458d990,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-01 21:32:24-08:00,28800,2018-02-01 21:32:24-08:00,28800,True,False,['README.md'],['993bdf7c396f91483c290112ae0ce24c931a6c3d'],1,1,2,1,,,
2126d1dde0ef72ce010040b0a5da62b49b33f452,Interaction plots and iml version dependency,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-02 15:36:21-08:00,28800,2018-02-02 15:36:21-08:00,28800,True,False,"['setup.py', 'datasets.py', 'plots.py', 'test_basic.py']",['993bdf7c396f91483c290112ae0ce24c931a6c3d'],22,145,167,4,0.31868131868131866,0.31868131868131866,0.31868131868131866
56498060b5e37786a504c8d00c791eb978ae15d3,Fix nose,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-02 17:20:25-08:00,28800,2018-02-02 17:20:25-08:00,28800,True,False,['.travis.yml'],['b9529eb57680de0d007a7eeb22853b5eb5e56cbe'],1,1,2,1,,,
16f7493549c9405e006913a385116edecc46ff4b,Don't use display for tests,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-02 17:33:50-08:00,28800,2018-02-02 17:33:50-08:00,28800,True,False,['test_basic.py'],['56498060b5e37786a504c8d00c791eb978ae15d3'],0,4,4,1,,,
e1e5d18a7f01f54f8ac08a9eb8426c56ba2d7e1d,Trying to get matplotlib to be happy on travis,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-03 08:24:20-08:00,28800,2018-02-03 08:24:20-08:00,28800,True,False,['test_basic.py'],['16f7493549c9405e006913a385116edecc46ff4b'],3,1,4,1,1.0,1.0,1.0
df56fce4b9a1d418555bd0c0881e7bdc1c692df3,Move backend def for travis,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-03 08:39:51-08:00,28800,2018-02-03 08:39:51-08:00,28800,True,False,['test_basic.py'],['e1e5d18a7f01f54f8ac08a9eb8426c56ba2d7e1d'],2,2,4,1,0.0,0.0,0.0
59fe3b8c7e38b8cc5ac57143357cb2a22c070d2e,Turn off plots in travis,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-03 09:43:54-08:00,28800,2018-02-03 09:43:54-08:00,28800,True,False,['test_basic.py'],['df56fce4b9a1d418555bd0c0881e7bdc1c692df3'],3,3,6,1,0.0,0.0,0.0
c84afdd569eb7c5cdcbe7bb65cda7c17f87c63c6,Enable link specification for array visualize and discrete color maps,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-05 10:37:26-08:00,28800,2018-02-05 10:37:26-08:00,28800,True,False,"['nhanes_age_sbp_interaction.pdf', 'nhanes_age_sex_interaction.pdf', 'nhanes_bmi.pdf', 'nhanes_sbp.pdf', 'nhanes_summary.pdf', 'sentiment_perturbation.pdf', 'sentiment_summary.pdf', 'Airline Tweet Sentiment Analysis.ipynb', 'nhanes_age_sex_interaction.pdf', 'sentiment_summary.pdf', 'plots.py']",['59fe3b8c7e38b8cc5ac57143357cb2a22c070d2e'],13,51027,51040,11,0.0,0.0,0.0
1309c1bf661045fde8d69886160331543521b4b5,Clean up,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-05 21:23:41-08:00,28800,2018-02-05 21:23:41-08:00,28800,True,False,"['nhanes_age_sbp_interaction.pdf', 'nhanes_age_sex_interaction.pdf', 'nhanes_bmi.pdf', 'nhanes_sbp.pdf', 'nhanes_summary.pdf', 'sentiment_perturbation.pdf', 'sentiment_summary.pdf', 'Airline Tweet Sentiment Analysis.ipynb', 'setup.py']",['c84afdd569eb7c5cdcbe7bb65cda7c17f87c63c6'],51006,1,51007,9,,,
394de81abf37693e64eeaa314cb585fa8231424e,More clean up,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-05 21:26:18-08:00,28800,2018-02-05 21:26:18-08:00,28800,True,False,"['.gitignore', 'and_trees.pdf']",['1309c1bf661045fde8d69886160331543521b4b5'],1652,1,1653,2,,,
cd26bbd01b1e32e4b864141cccfb0bc6777b471f,Fix categorical plotting issue,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-07 10:19:53-08:00,28800,2018-02-07 10:19:53-08:00,28800,True,False,"['setup.py', 'plots.py']",['394de81abf37693e64eeaa314cb585fa8231424e'],3,3,6,2,,,
f1d79bf652a0c3558262ea5e0dd0e1312a36adc5,Updated SHAP interaction value example,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-07 10:34:44-08:00,28800,2018-02-07 10:34:44-08:00,28800,True,False,['Basic SHAP Interaction Value Example in XGBoost.ipynb'],['cd26bbd01b1e32e4b864141cccfb0bc6777b471f'],106,229,335,1,,,
f5259afc783aab3507a6baf95571b8906a6db7d0,Rename columns in NHANES dataset,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-08 12:02:46-08:00,28800,2018-02-08 12:02:46-08:00,28800,True,False,['NHANESI_subset_X.csv'],['f1d79bf652a0c3558262ea5e0dd0e1312a36adc5'],1,1,2,1,,,
31e4536ea8ab5ba670ae807dcd13660c5eb732a6,Interaction effect support and examples,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-08 17:12:44-08:00,28800,2018-02-08 17:12:44-08:00,28800,True,False,"['.gitignore', 'NHANES I Survival Model.ipynb', 'setup.py', 'datasets.py', 'plots.py']",['f5259afc783aab3507a6baf95571b8906a6db7d0'],11,1015,1026,5,0.43478260869565216,0.43478260869565216,0.43478260869565216
ad6464cb7c19884225864c144b6467142a9948f9,NHANES example,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-08 17:19:57-08:00,28800,2018-02-08 17:19:57-08:00,28800,True,False,['NHANES+I+Survival+Model.html'],['31e4536ea8ab5ba670ae807dcd13660c5eb732a6'],0,54471,54471,1,,,
d00a97679324f111c1f5141703949bbf08fc1474,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-08 17:23:23-08:00,28800,2018-02-08 17:23:23-08:00,28800,True,False,['README.md'],['ad6464cb7c19884225864c144b6467142a9948f9'],0,2,2,1,,,
b643b49dc37f69091a6b842d99a79664cc0cd883,"Update LightGBM example notebook

Fixes #11",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-08 22:42:03-08:00,28800,2018-02-08 22:42:03-08:00,28800,True,False,"['Census+income+classification+with+LightGBM.html', 'Census income classification with LightGBM.ipynb']",['d00a97679324f111c1f5141703949bbf08fc1474'],11915,14497,26412,2,,,
18fb165f8696d674dfcb76b544c9b94ba5ba7845,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-09 08:19:24-08:00,28800,2018-02-09 08:19:24-08:00,28800,True,False,['README.md'],['b643b49dc37f69091a6b842d99a79664cc0cd883'],1,1,2,1,,,
51092b9623a2e2785d370861e12285b61d1d8217,Add tree SHAP figure notebooks,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-11 13:52:39-08:00,28800,2018-02-11 13:52:39-08:00,28800,True,False,"['Figure 1 - Simple Inconsistency Example.ipynb', 'Figure 3 - User Study.ipynb', 'Figure 4 - Supervised Clustering Adult Census Data.ipynb', 'Figure 5 - Runtime.ipynb', 'Figure 6 - Supervised Clustering R-squared.ipynb', 'Figure 7 - Airline Tweet Sentiment Analysis.ipynb', 'Figures 8-11 NHANES I Survival Model.ipynb', 'cognitive_score.txt', 'module_expression.txt', 'neuropath.txt', 'tweets.csv']",['b643b49dc37f69091a6b842d99a79664cc0cd883'],0,71183,71183,11,,,
3b0caafee28e49eab4f9d07ed2e457afb74ea15f,Get plots tested on travis,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-11 15:03:38-08:00,28800,2018-02-11 15:03:38-08:00,28800,True,False,"['.gitignore', '.travis.yml', 'Basic SHAP Interaction Value Example in XGBoost.ipynb', 'Front page example (XGBoost).ipynb', 'Front page example with XGBoost.ipynb', 'nhanes_age_sex_interaction.pdf', 'plots.py', 'test_basic.py']",['2a57a487e7478b98bce628bb30728ef6246c6004'],51046,628,51674,8,0.3,0.3,0.3
3f74d63d16df367cec6961217284372e5f19fe40,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-11 20:25:42-08:00,28800,2018-02-11 20:25:42-08:00,28800,True,False,['README.md'],['3b0caafee28e49eab4f9d07ed2e457afb74ea15f'],1,1,2,1,,,
d548a3d5cc384919b89e96fad80e6c656d11fdd8,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-12 17:21:46-08:00,28800,2018-02-12 17:21:46-08:00,28800,True,False,['README.md'],['3f74d63d16df367cec6961217284372e5f19fe40'],2,2,4,1,,,
5a9890d70d59a50cfa3f9a7d2bbc64a7a251d2b6,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-12 18:18:42-08:00,28800,2018-02-12 18:18:42-08:00,28800,True,False,['README.md'],['d548a3d5cc384919b89e96fad80e6c656d11fdd8'],8,8,16,1,,,
103cd6ae9745e3571b5d9a7c3c59838d46846bea,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-13 09:31:49-08:00,28800,2018-02-13 09:31:49-08:00,28800,True,False,['README.md'],['5a9890d70d59a50cfa3f9a7d2bbc64a7a251d2b6'],1,1,2,1,,,
6bd11139dcb8ff302f38cf8b2e6a8a71f65b527f,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-13 09:33:55-08:00,28800,2018-02-13 09:33:55-08:00,28800,True,False,['README.md'],['103cd6ae9745e3571b5d9a7c3c59838d46846bea'],7,7,14,1,,,
d8ea871600adb94a84ed526429a4ecc2b18cde69,Update dataset interface and rename visualize to force_plot,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-13 11:20:31-08:00,28800,2018-02-13 11:20:31-08:00,28800,True,False,"['boston_dependence_plot.png', 'boston_summary_plot.png', 'Front page example (XGBoost).ipynb', 'setup.py', '__init__.py', 'datasets.py', 'explainer.py', 'plots.py']",['6bd11139dcb8ff302f38cf8b2e6a8a71f65b527f'],532,602,1134,8,0.3673469387755102,0.3673469387755102,0.2653061224489796
fcbda0a632ecfd91b4884d95d2fd8ef2ac31c58e,New plot images,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-13 11:40:29-08:00,28800,2018-02-13 11:40:29-08:00,28800,True,False,"['iris_dataset.png', 'iris_instance.png']",['d8ea871600adb94a84ed526429a4ecc2b18cde69'],0,0,0,2,,,
5047b8a78931727035d2506cde47ad73fb753330,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-13 11:47:54-08:00,28800,2018-02-13 11:47:54-08:00,28800,True,False,['README.md'],['fcbda0a632ecfd91b4884d95d2fd8ef2ac31c58e'],27,27,54,1,,,
aff438aa933193032a8db57e93a0ad459518fe26,Update tests,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-13 11:51:30-08:00,28800,2018-02-13 11:51:30-08:00,28800,True,False,['test_basic.py'],['fcbda0a632ecfd91b4884d95d2fd8ef2ac31c58e'],21,19,40,1,0.0,0.0,0.0
3320232d4b1e3eef5150e1ae7a0db5d14b757921,Fix test,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-13 11:53:42-08:00,28800,2018-02-13 11:53:42-08:00,28800,True,False,['test_basic.py'],['47574e9ca747e7b33ae8ce98bc7666588731cac9'],1,1,2,1,,,
9173ecbe44756baba87e977b863e7923837e5828,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-13 11:54:17-08:00,28800,2018-02-13 11:54:17-08:00,28800,True,False,['README.md'],['3320232d4b1e3eef5150e1ae7a0db5d14b757921'],1,1,2,1,,,
401f66fa4e40501e8222585060180965b478a5c2,Fix typo,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-14 07:13:13-08:00,28800,2018-02-14 07:13:13-08:00,28800,True,False,['LICENSE'],['9173ecbe44756baba87e977b863e7923837e5828'],1,1,2,1,,,
b677f216769bf9d15f0652788100fee13055644e,Added VGG16 example,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-14 11:24:29-08:00,28800,2018-02-14 11:24:29-08:00,28800,True,False,"['nhanes_age_sex_interaction.png', 'strawberry_example.png', 'ImageNet VGG16 Model with Keras.ipynb', 'apple_strawberry.jpg']",['3320232d4b1e3eef5150e1ae7a0db5d14b757921'],0,202,202,4,,,
408d03e62170c8b2a40e05093ae35fea6e9391e1,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-14 11:29:14-08:00,28800,2018-02-14 11:29:14-08:00,28800,True,False,['README.md'],['c049cfeecf5b599703a7b5f798b5e89d085ed7a3'],1,19,20,1,,,
179df3d589af483aff9e4c765af22abce88bab00,Add VGG16 example as html,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-14 12:00:33-08:00,28800,2018-02-14 12:00:33-08:00,28800,True,False,['ImageNet+VGG16+Model+with+Keras.html'],['408d03e62170c8b2a40e05093ae35fea6e9391e1'],0,15825,15825,1,,,
8ffb26e2dec3b8eddd351b5eabb0a621072c89a3,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-14 12:20:39-08:00,28800,2018-02-14 12:20:39-08:00,28800,True,False,['README.md'],['179df3d589af483aff9e4c765af22abce88bab00'],2,2,4,1,,,
d7068081945744beba30915db05943dee98c43f5,Update notebooks,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-15 11:18:49-08:00,28800,2018-02-15 11:18:49-08:00,28800,True,False,"['Census+income+classification+with+Keras.html', 'Census+income+classification+with+LightGBM.html', 'Census income classification with Keras.ipynb', 'Census income classification with LightGBM.ipynb', 'setup.py', 'explainer.py', 'plots.py']",['8ffb26e2dec3b8eddd351b5eabb0a621072c89a3'],14910,34209,49119,7,0.0,0.0,0.0
2b057d3d700ab9f377f33e4dcc35a68d3555c6c3,Update notebooks,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-15 15:56:52-08:00,28800,2018-02-15 15:56:52-08:00,28800,True,False,"['Census income classification.html', 'League+of+Legends+Win+Prediction+with+XGBoost.html', 'Census income classification with scikit-learn.ipynb', 'League of Legends Win Prediction with XGBoost.ipynb', 'explainer.py']",['d7068081945744beba30915db05943dee98c43f5'],66154,100812,166966,5,,,
d730522a97898bc56b5bb2158c9db9a26fd9246f,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-15 15:58:38-08:00,28800,2018-02-15 15:58:38-08:00,28800,True,False,['README.md'],['2b057d3d700ab9f377f33e4dcc35a68d3555c6c3'],1,1,2,1,,,
fbd0c273a4dd4168fb1dd8acc0dde88aec1d11bd,Add notebook,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-15 15:59:35-08:00,28800,2018-02-15 15:59:47-08:00,28800,True,False,['Census+income+classification+with+scikit-learn.html'],['d730522a97898bc56b5bb2158c9db9a26fd9246f'],0,68594,68594,1,,,
90237fb8882813b9a3a745de69d2abf93b8fd2ed,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-15 16:50:10-08:00,28800,2018-02-15 16:50:10-08:00,28800,True,False,['README.md'],['fbd0c273a4dd4168fb1dd8acc0dde88aec1d11bd'],0,1,1,1,,,
f132f17aefd2754488dc366fdceece3e9f75c270,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-02-15 16:50:43-08:00,28800,2018-02-15 16:50:43-08:00,28800,True,False,['README.md'],['90237fb8882813b9a3a745de69d2abf93b8fd2ed'],2,1,3,1,,,
20f2e76fc20efde0bad4f5346570373bd4de3810,Fix multi-class model agnostic vector input,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-16 09:03:33-08:00,28800,2018-02-16 09:03:33-08:00,28800,True,False,"['Iris+classification+with+scikit-learn.html', 'Iris classification with scikit-learn.ipynb', 'explainer.py', 'plots.py']",['f132f17aefd2754488dc366fdceece3e9f75c270'],313,499,812,4,0.0,0.0,0.0
3100df1be7bfefde8319a48a8e08df79f9b3347f,Small formatting fix to summary plots,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-19 11:30:29-08:00,28800,2018-02-19 11:30:29-08:00,28800,True,False,"['setup.py', 'plots.py']",['20f2e76fc20efde0bad4f5346570373bd4de3810'],4,2,6,2,,,
d7029a185956f35b0b26212df8933ce0b57eca91,Add warning for wrong shapes,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-02-20 15:19:20-08:00,28800,2018-02-20 15:19:20-08:00,28800,True,False,"['setup.py', 'plots.py']",['3100df1be7bfefde8319a48a8e08df79f9b3347f'],1,4,5,2,0.0,0.0,0.0
4bff5e340b1a2ca568cfe239fe58ea76b96b6d05,"Added custom color maps to force plots

Added the ability to use custom colors for force plots, akin to those
available in matplotlib. In case a color map is not supplied, the
default color scheme is used. A notebook was added showing this feature.",JuanCorp,juan.nunez.corp@gmail.com,JuanCorp,juan.nunez.corp@gmail.com,2018-02-25 14:11:22-04:00,14400,2018-02-25 14:11:22-04:00,14400,True,False,"['Force Plot Colors.ipynb', 'Front page example (XGBoost).ipynb', 'explainer.py', 'plots.py']",['d7029a185956f35b0b26212df8933ce0b57eca91'],5654,57658,63312,4,0.0,0.25,0.0
d4fee254f75682b6a5986028d12ad5bf10e4b9d5,Clean up custom color options,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-03-03 14:28:09-08:00,28800,2018-03-03 14:28:09-08:00,28800,True,False,"['setup.py', 'explainer.py', 'plots.py']",['2bba45d01f49a1f35bde2b127e212a8ffa2403a5'],22,12,34,3,1.0,0.7142857142857143,1.0
aa8394775012280173438a9920a49a3f60771a7a,Changed urllib.request import (Python3) to optionally import from urllib (Python2) if using Python2,Brian Hill,brian.l.hill11@gmail.com,Brian Hill,brian.l.hill11@gmail.com,2018-03-06 16:30:41-08:00,28800,2018-03-06 16:30:41-08:00,28800,True,False,['datasets.py'],['d4fee254f75682b6a5986028d12ad5bf10e4b9d5'],2,5,7,1,,,
15bc5873b5ebf5c77ffcc324f7e4ddea05493042,Add python 2.7 to travis tests,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-03-06 19:41:20-08:00,28800,2018-03-06 19:41:20-08:00,28800,True,False,"['.travis.yml', 'setup.py']",['afc8bc8e4977c46f8ea4d5aa4999381c0dc1d43c'],1,3,4,2,,,
bee203640aecfc574e0eae105d2b9a31338f40a0,Warning for large sample sizes in force plot #39,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-03-06 19:51:28-08:00,28800,2018-03-06 19:51:28-08:00,28800,True,False,['plots.py'],['15bc5873b5ebf5c77ffcc324f7e4ddea05493042'],0,3,3,1,0.0,0.0,0.0
dbf0d974792f1997e19df9b535e7d8e18282e0a0,"PEP8 Compliance, Code Cleaning",Simon,simon@graphkite.nl,Simon,simon@graphkite.nl,2018-03-09 16:28:48+01:00,-3600,2018-03-09 16:28:48+01:00,-3600,True,False,"['misc.xml', 'modules.xml', 'shap.iml', 'workspace.xml', '__init__.py', 'datasets.py', 'explainer.py', 'plots.py', 'test_basic.py']",['bee203640aecfc574e0eae105d2b9a31338f40a0'],264,337,601,9,0.0,0.6666666666666666,0.0
02133732763d3133417110de6bb778b16a93a0ec,Removed .idea settings,Simon,simon@graphkite.nl,Simon,simon@graphkite.nl,2018-03-09 16:29:10+01:00,-3600,2018-03-09 16:29:10+01:00,-3600,True,False,"['misc.xml', 'modules.xml', 'shap.iml', 'workspace.xml']",['dbf0d974792f1997e19df9b535e7d8e18282e0a0'],47,0,47,4,,,
f0de2e5966c7cdf7d5f7ee39880f13400e2c7e51,Fix python 2 issue,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-03-09 08:53:56-08:00,28800,2018-03-09 08:53:56-08:00,28800,True,False,['explainer.py'],['87bd0748bbd63f5a2522676128c72ae121e701dc'],3,3,6,1,,,
625d7215c898608b3a72dd14c04c1b1883c95e8f,Support for weighted background datasets and kmeans summaries,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-03-21 13:53:32-07:00,25200,2018-03-21 13:53:32-07:00,25200,True,False,"['Diabetes regression.ipynb', 'Iris classification with scikit-learn.ipynb', 'NHANES I Survival Model-Copy1.ipynb', 'setup.py', '__init__.py', 'datasets.py', 'explainer.py']",['f0de2e5966c7cdf7d5f7ee39880f13400e2c7e51'],50747,52658,103405,7,1.0,0.0,0.2857142857142857
1698aadb1bd862c82b772ffe9fd1d95f80208b53,Clean up old notebooks.,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-03-21 20:17:20-06:00,21600,2018-03-21 20:17:20-06:00,21600,True,False,"['Front page example (model agnostic).ipynb', 'Gain calculations and user study for AAAI TreeSHAP paper.ipynb', 'Lending agent game data generator.ipynb', 'Method efficiency comparison.ipynb', 'Simple Kernel SHAP.ipynb', 'Simple test.ipynb', 'Sparse simple non-linear.ipynb']",['625d7215c898608b3a72dd14c04c1b1883c95e8f'],150275,4,150279,7,,,
d8a17556f615317236d7f4520053e8acddea60c0,"Fix plots

Addresses #53 by bumping iml version",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-05 07:28:38-07:00,25200,2018-04-05 07:28:38-07:00,25200,True,False,"['Census income classification with scikit-learn.ipynb', 'setup.py', 'plots.py']",['1698aadb1bd862c82b772ffe9fd1d95f80208b53'],52279,56,52335,3,0.0,0.0,0.0
d79ebce3d7317480af80dd126af4809af200d4b1,Python version of Tree SHAP,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-06 17:07:53-07:00,25200,2018-04-06 17:07:53-07:00,25200,True,False,['Python Version of Tree SHAP.ipynb'],['d8a17556f615317236d7f4520053e8acddea60c0'],0,564,564,1,,,
d0b08bec1782e8044df416ff6e7fb28a33f95750,"New numba-based Tree SHAP with support for sklearn

Number is about 10x slower than C++",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-09 11:35:09-07:00,25200,2018-04-09 11:35:09-07:00,25200,True,False,"['setup.py', '__init__.py', '__init__.py', 'kernel.py', 'tree.py', 'test_basic.py']",['d79ebce3d7317480af80dd126af4809af200d4b1'],5,323,328,6,0.29385964912280704,0.4342105263157895,0.0
1abb1a71c05a85f45f7b69899bdb031313c3fa0a,Undo numba to fix installs,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-09 20:47:41-07:00,25200,2018-04-09 20:47:41-07:00,25200,True,False,"['setup.py', 'tree.py']",['d0b08bec1782e8044df416ff6e7fb28a33f95750'],9,11,20,2,,,
c3663a7f9ae9190dbd7ba18c0ce85349a3ca7fc8,Fix setup.py,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-10 12:29:16-07:00,25200,2018-04-10 12:29:16-07:00,25200,True,False,['setup.py'],['1abb1a71c05a85f45f7b69899bdb031313c3fa0a'],13,15,28,1,,,
11c579c5408d00b1c6b10fe660d095be49b4a04f,Fix setup.py,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-10 13:37:03-07:00,25200,2018-04-10 13:37:03-07:00,25200,True,False,['setup.py'],['c3663a7f9ae9190dbd7ba18c0ce85349a3ca7fc8'],2,2,4,1,,,
428685bbbd625185a03b51678528a0a0b7815eb3,New C++ core to support sklearn models.,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-10 14:21:54-07:00,25200,2018-04-10 14:21:54-07:00,25200,True,False,"['setup.py', '_cext.cc', 'pytree.py', 'tree.py', 'tree_shap.h']",['11c579c5408d00b1c6b10fe660d095be49b4a04f'],194,954,1148,5,0.1891348088531187,0.4164989939637827,0.2655935613682093
145771389c52871d54e86b1f81ac70cacaa3bbd4,Support Py27 C extensions,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-10 15:10:13-07:00,25200,2018-04-10 15:10:13-07:00,25200,True,False,['_cext.cc'],['428685bbbd625185a03b51678528a0a0b7815eb3'],13,27,40,1,1.0,0.0,0.0
9392cb090d9de898f9265f4713bb969a9e1f1a04,Fix py 2.7 issue,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-10 15:23:34-07:00,25200,2018-04-10 15:23:34-07:00,25200,True,False,['_cext.cc'],['145771389c52871d54e86b1f81ac70cacaa3bbd4'],1,0,1,1,0.0,0.0,0.0
5ee7f582100c79994dd80ea699bcc40dd2a62995,Another py 2.7 C extension fix,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-10 15:25:27-07:00,25200,2018-04-10 15:25:27-07:00,25200,True,False,['_cext.cc'],['9392cb090d9de898f9265f4713bb969a9e1f1a04'],2,2,4,1,1.0,1.0,1.0
892cbd3084c784ae808a1529b73a404fc08f86bd,Fix python2.7 C extension,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-10 16:58:24-07:00,25200,2018-04-10 16:58:24-07:00,25200,True,False,"['setup.py', '_cext.cc']",['5ee7f582100c79994dd80ea699bcc40dd2a62995'],2,2,4,2,,,
f735190f2a366fd859dd9b229b6c8959fdf87c9a,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-04-10 19:51:38-07:00,25200,2018-04-10 19:51:38-07:00,25200,True,False,['README.md'],['892cbd3084c784ae808a1529b73a404fc08f86bd'],8,8,16,1,,,
e185ad94685dca6f5af122d3a60dc00b0b9178c4,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-04-10 22:10:35-07:00,25200,2018-04-10 22:10:35-07:00,25200,True,False,['README.md'],['f735190f2a366fd859dd9b229b6c8959fdf87c9a'],2,3,5,1,,,
15ecb69cc7d9b70e94b2cd49bd2afd166bf86674,Fix pip dist,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-11 11:37:38-07:00,25200,2018-04-11 11:37:38-07:00,25200,True,False,"['MANIFEST.in', 'setup.py', '_cext.cc', 'kernel.py', 'tree.py', 'test_basic.py']",['e185ad94685dca6f5af122d3a60dc00b0b9178c4'],62,33,95,6,0.0,0.8666666666666667,0.8666666666666667
2ad4655773e05d15956ca6307857567fea3c1435,"To allow shap to work with models that consume time series data and use pandas dataframe as input and output, I'm proposing this change. Because shap convert dataframe into ndarray and only work with ndarrays, I propose keep index information when flag keep_index is set to be True, and reconstruct the dataframe before shap calls model.f function. keep_index is set to False by default, so there should be no behavior change to existing use case. This change should go after the change in iml package. Please feel free to let me know if you have any questions/concerns. Thanks!",xzzxzxxz,zhouxiang8421@gmail.com,xzzxzxxz,zhouxiang8421@gmail.com,2018-04-11 21:28:07-04:00,14400,2018-04-11 21:28:07-04:00,14400,True,False,['kernel.py'],['e185ad94685dca6f5af122d3a60dc00b0b9178c4'],8,42,50,1,0.0,0.0,0.3225806451612903
0a3fcfc0e31a14728bbf54ac97c15196bf1db1f0,"Fixed some corner case bugs in KernelExplainer

Rarely when using multiple background reference samples a feature could
be incorrectly considered as invariant, which would cause wrong final
SHAP values.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-11 21:27:16-07:00,25200,2018-04-11 21:27:16-07:00,25200,True,False,"['Basic SHAP Interaction Value Example in XGBoost.ipynb', 'Census income classification with LightGBM.ipynb', 'Census income classification with scikit-learn.ipynb', 'Diabetes regression.ipynb', 'NHANES I Survival Model.ipynb', 'setup.py', 'kernel.py', 'plots.py']",['15ecb69cc7d9b70e94b2cd49bd2afd166bf86674'],51638,602,52240,8,0.5,0.5,0.5
4f9e96b2792737a2191b41c43bae750483b62823,Update notebook examples,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-11 21:33:46-07:00,25200,2018-04-11 21:33:46-07:00,25200,True,False,"['Census+income+classification+with+LightGBM.html', 'Census+income+classification+with+scikit-learn.html', 'League+of+Legends+Win+Prediction+with+XGBoost.html', 'NHANES+I+Survival+Model.html', 'League of Legends Win Prediction with XGBoost.ipynb']",['0a3fcfc0e31a14728bbf54ac97c15196bf1db1f0'],162200,60955,223155,5,,,
fbc451d907b3497422d9d0e52d2b207fdd4674ba,New iml version and parallel processing for sklearn Tree SHAP,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-13 22:17:41-07:00,25200,2018-04-13 22:17:41-07:00,25200,True,False,"['setup.py', 'datasets.py', 'tree.py']",['4f9e96b2792737a2191b41c43bae750483b62823'],17,29,46,3,1.0,1.0,1.0
12e3a9a83f1d3835ba6dc4f8fb93808c2e3e275b,Fix python 2 issue,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-13 22:36:20-07:00,25200,2018-04-13 22:36:20-07:00,25200,True,False,['tree.py'],['fbc451d907b3497422d9d0e52d2b207fdd4674ba'],2,7,9,1,0.0,0.0,0.0
82d2c0716c083871f61967c3f9c1116486501bc7,Fix typo,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-13 22:41:44-07:00,25200,2018-04-13 22:41:44-07:00,25200,True,False,['tree.py'],['12e3a9a83f1d3835ba6dc4f8fb93808c2e3e275b'],1,1,2,1,,,
358eb055fa0e1e4b59182212dabe1c6fe1ca3b8b,fix the issue of no data for explain func call,xzzxzxxz,zhouxiang8421@gmail.com,xzzxzxxz,zhouxiang8421@gmail.com,2018-04-14 08:58:15-04:00,14400,2018-04-14 08:58:15-04:00,14400,True,False,['kernel.py'],['2ad4655773e05d15956ca6307857567fea3c1435'],1,1,2,1,,,
1e613d7e00ba38d40e01c44e7d1f206100b36dee,And XGBoost census example.,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-14 16:11:41-07:00,25200,2018-04-14 16:11:41-07:00,25200,True,False,"['Census+income+classification+with+XGBoost.html', 'Census income classification with XGBoost.ipynb']",['82d2c0716c083871f61967c3f9c1116486501bc7'],0,44869,44869,2,,,
2defb6a97131b4baef7fa3a7a577d36af2b02803,Update notebook,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-16 10:42:09-07:00,25200,2018-04-16 10:42:09-07:00,25200,True,False,"['Census+income+classification+with+XGBoost.html', 'Census income classification with XGBoost.ipynb']",['86e08444854ec3a2361bf078947e5c7c14eb45e6'],0,4084,4084,2,,,
564b0b4de5f8b0c2605a6568b8ac7c61d1a8c0e6,"Add appveyor

And clean up some violin plot issues",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-19 12:04:37-07:00,25200,2018-04-19 12:04:37-07:00,25200,True,False,"['appveyor.yml', 'install.ps1', 'run_with_env.cmd', 'plots.py']",['2defb6a97131b4baef7fa3a7a577d36af2b02803'],32,510,542,4,0.0,0.0,0.0
e27a8ecf3ba56e24461d1b49d6a2c851815b7786,Update appveyor,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-19 12:14:11-07:00,25200,2018-04-19 12:14:11-07:00,25200,True,False,['appveyor.yml'],['564b0b4de5f8b0c2605a6568b8ac7c61d1a8c0e6'],99,37,136,1,,,
fd3413cc3caacd937528363b8212fd6774b91fe3,Another appveyor update,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-19 12:23:14-07:00,25200,2018-04-19 12:23:14-07:00,25200,True,False,['appveyor.yml'],['e27a8ecf3ba56e24461d1b49d6a2c851815b7786'],37,100,137,1,,,
3b98d4160e719fccf03e36961921f6f81dbfbe04,Fail nicely when c extension does not build,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-19 13:16:23-07:00,25200,2018-04-19 13:16:23-07:00,25200,True,False,"['setup.py', 'tree.py']",['fd3413cc3caacd937528363b8212fd6774b91fe3'],16,32,48,2,0.0,1.0,1.0
1a6c273b348808814f7108d4b3cdb38048bf8177,Violin plot updates,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-19 14:49:31-07:00,25200,2018-04-19 14:49:31-07:00,25200,True,False,"['Scatter Density vs. Violin Plot Comparison.ipynb', 'plots.py']",['3b98d4160e719fccf03e36961921f6f81dbfbe04'],2,435,437,2,0.0,0.0,0.0
fac1c6b677efd73df938a0f5289cd83e6d7ef9d1,Deal with unorderable feature types in the summary plot,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-19 15:39:02-07:00,25200,2018-04-19 15:39:02-07:00,25200,True,False,['plots.py'],['1a6c273b348808814f7108d4b3cdb38048bf8177'],5,15,20,1,0.0,0.0,0.0
a47c75465a86f119fc1ab62d0098c12acb0c0a92,tidyups of violin plot from @slundberg copying of original PR,kodonnell,kodonnell@users.noreply.github.com,kodonnell,kodonnell@users.noreply.github.com,2018-04-20 21:28:52+12:00,-43200,2018-04-20 21:28:52+12:00,-43200,True,False,"['Scatter Density vs. Violin Plot Comparison.ipynb', 'plots.py']",['fac1c6b677efd73df938a0f5289cd83e6d7ef9d1'],251,81,332,2,1.0,1.0,1.0
dddad944735216a15a927cadeb3dd72470699598,"added scaling of categorical varaibles in layered_violin, and update notebook",kodonnell,kodonnell@users.noreply.github.com,kodonnell,kodonnell@users.noreply.github.com,2018-04-20 22:13:13+12:00,-43200,2018-04-20 22:13:13+12:00,-43200,True,False,"['Scatter Density vs. Violin Plot Comparison.ipynb', 'plots.py']",['53d3f9a2c1d855b263c3b3e8e86be7c1f700f1c5'],12,18,30,2,0.0,0.0,0.0
98630d08d2026a11de1be9cf5c1dbd15e12fb07f,shap is no longer in master,kodonnell,kodonnell@users.noreply.github.com,kodonnell,kodonnell@users.noreply.github.com,2018-04-20 22:21:50+12:00,-43200,2018-04-20 22:21:50+12:00,-43200,True,False,['shap.py'],['dddad944735216a15a927cadeb3dd72470699598'],654,0,654,1,0.8869565217391304,0.8869565217391304,0.9456521739130435
ced236f1f12ba6d1c59491c5b215c085b3894e41,Catch more possible dependency errors,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-20 10:07:07-07:00,25200,2018-04-20 10:07:07-07:00,25200,True,False,['tree.py'],['fac1c6b677efd73df938a0f5289cd83e6d7ef9d1'],0,17,17,1,,,
42f4fc4b3b0581315755498a47ef59db6f1ba135,New example notebook,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-21 16:21:54-07:00,25200,2018-04-21 16:21:54-07:00,25200,True,False,['Understanding Tree SHAP for Simple Models.ipynb'],['ced236f1f12ba6d1c59491c5b215c085b3894e41'],0,887,887,1,,,
84917d1bb2b1159850d0c9dcb1163fc3a01c93d5,Fix error message for unsupported models types in shap_interaction_values,Alexandr Nikitin,nikitin.alexandr.a@gmail.com,GitHub,noreply@github.com,2018-04-24 09:30:46+03:00,-10800,2018-04-24 09:30:46+03:00,-10800,True,False,['tree.py'],['42f4fc4b3b0581315755498a47ef59db6f1ba135'],1,1,2,1,,,
e8cf8af921091924e8559220243cb10961dc4e99,"Warn when using large background sample sizes.

Addresses #66",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-26 08:16:14-07:00,25200,2018-04-26 08:16:14-07:00,25200,True,False,"['Diabetes regression.ipynb', 'kernel.py']",['bfba46b8ff8ffe1961e1700fc84fb5ae92883865'],18,42,60,2,0.0,1.0,0.0
a28e32f203ef941902cb0c2df9427d8cc22d836f,Clear code copy and paste,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-26 08:23:48-07:00,25200,2018-04-26 08:23:48-07:00,25200,True,False,['plots.py'],['e8cf8af921091924e8559220243cb10961dc4e99'],43,1,44,1,1.0,1.0,1.0
9a1964ef7657d8dadca52c41fc21f9b7e5ac3df0,Address merge conflict,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-26 08:25:20-07:00,25200,2018-04-26 08:25:20-07:00,25200,True,False,['plots.py'],['a28e32f203ef941902cb0c2df9427d8cc22d836f'],1,0,1,1,1.0,1.0,1.0
113770c1e288c02c8bc074ca110e8d3b820e7cfb,Fix syntax,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-26 08:27:21-07:00,25200,2018-04-26 08:27:21-07:00,25200,True,False,['plots.py'],['9a1964ef7657d8dadca52c41fc21f9b7e5ac3df0'],0,1,1,1,0.0,0.0,0.0
e818e2b0b8bbef26acc4e1db6c9ab07cffb49093,Support catboost bindings in TreeExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-26 11:23:32-07:00,25200,2018-04-26 11:23:32-07:00,25200,True,False,"['kernel.py', 'tree.py']",['113770c1e288c02c8bc074ca110e8d3b820e7cfb'],2,10,12,2,0.0,0.0,0.0
614e08c1ae834bc555d1a8643dc134da077e0afa,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-04-26 11:28:01-07:00,25200,2018-04-26 11:28:01-07:00,25200,True,False,['README.md'],['e818e2b0b8bbef26acc4e1db6c9ab07cffb49093'],3,3,6,1,,,
43e26d62810e616700bc2639ec1f1e374a4da9fc,Add attribution,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-04-27 15:44:49-07:00,25200,2018-04-27 15:44:49-07:00,25200,True,False,['tree.py'],['1602420d3116acc31de52b26e5bbb8b33f6bc1dc'],1,1,2,1,,,
8d820cb751d98b0d678102dcb5b1a677b51fdf5e,added warning if too little data for layered_violin,kodonnell,kodonnell@users.noreply.github.com,kodonnell,kodonnell@users.noreply.github.com,2018-05-03 11:14:24+12:00,-43200,2018-05-03 11:14:24+12:00,-43200,True,False,['plots.py'],['43e26d62810e616700bc2639ec1f1e374a4da9fc'],0,8,8,1,0.0,0.0,0.0
024328f13c432778e10bd77992629e9b4f1a8e01,formatting,kodonnell,kodonnell@users.noreply.github.com,kodonnell,kodonnell@users.noreply.github.com,2018-05-03 11:18:22+12:00,-43200,2018-05-03 11:18:22+12:00,-43200,True,False,['plots.py'],['8d820cb751d98b0d678102dcb5b1a677b51fdf5e'],1,2,3,1,0.0,0.0,0.0
85de154b4ad62840ce1a032fe789696b1ba5b65f,change default color in layered_violin summary_plot,kodonnell,kodonnell@users.noreply.github.com,kodonnell,kodonnell@users.noreply.github.com,2018-05-03 11:50:10+12:00,-43200,2018-05-03 11:50:10+12:00,-43200,True,False,['plots.py'],['43e26d62810e616700bc2639ec1f1e374a4da9fc'],1,4,5,1,0.0,0.0,0.0
3d4a050826f9a3e0eda77a1cc793f72342d0b690,woops,kodonnell,kodonnell@users.noreply.github.com,kodonnell,kodonnell@users.noreply.github.com,2018-05-03 11:52:40+12:00,-43200,2018-05-03 11:52:40+12:00,-43200,True,False,['plots.py'],['85de154b4ad62840ce1a032fe789696b1ba5b65f'],1,2,3,1,0.0,0.0,0.0
8e2ca90f8c705f7474c6701b10fecab12ba411a5,Extend tree explainer for XGB sklearn interface and multitask output,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-05-03 10:15:23-07:00,25200,2018-05-03 10:15:23-07:00,25200,True,False,"['setup.py', 'tree.py']",['a1b39ae4bae1c02eb408390991d1dab43237407f'],5,17,22,2,0.0,0.0,0.0
204b9e58a156e4f0faf7a240b5923a7c0f305c09,update setup.py to bootstrap numpy installation,Oliver Laslett,o.laslett@soton.ac.uk,Oliver Laslett,o.laslett@soton.ac.uk,2018-05-04 15:18:06+01:00,-3600,2018-05-04 15:18:31+01:00,-3600,True,False,['setup.py'],['8e2ca90f8c705f7474c6701b10fecab12ba411a5'],1,14,15,1,0.7142857142857143,1.0,1.0
e4d9218b7b5f928a9bfb4c4e75aace72c2310f20,"Added feature to alter the texts on plots, i.e. for multi-language

Extracted the text values from the plot functions into global constants. The official name is Monkey Patching (https://en.wikipedia.org/wiki/Monkey_patch). It is a simple pattern to enable to change the texts of the plots without changing the functions.

Example code:

import shap

shap.plots.SHAP_MAIN_EFFECT = ""Translation for SHAP main effect value for\n%s""
shap.plots.SHAP_INTERACTION_VALUE = ""Translation for SHAP interaction value""
shap.plots.SHAP_INTERACTION_EFFECT = ""Translation for SHAP interaction value for\n%s and %s""
shap.plots.SHAP_VALUE = ""Translation for SHAP value (impact on model output)""
shap.plots.SHAP_VALUE_FOR = ""Translation for SHAP value for\n%s""
shap.plots.SHAP_PLOT_FOR = ""Translation for SHAP plot for %s""
shap.plots.SHAP_FEATURE = ""Translation for Feature %s""
shap.plots.SHAP_FEATURE_VALUE = ""Translation for Feature value""
shap.plots.SHAP_FEATURE_VALUE_LOW = ""Translation for Low""
shap.plots.SHAP_FEATURE_VALUE_HIGH = ""Translation for High""
shap.plots.SHAP_JOINT_VALUE = ""Translation for Joint SHAP value""",Simon Brugman,sbrugman@users.noreply.github.com,GitHub,noreply@github.com,2018-05-06 12:39:26+02:00,-7200,2018-05-06 12:39:26+02:00,-7200,True,False,['plots.py'],['8e2ca90f8c705f7474c6701b10fecab12ba411a5'],17,32,49,1,,,
2d8f4283f526ac903204adf63ee5aa77127891d6,"Update plots.py

Nuance comment",Simon Brugman,sbrugman@users.noreply.github.com,GitHub,noreply@github.com,2018-05-06 12:41:55+02:00,-7200,2018-05-06 12:41:55+02:00,-7200,True,False,['plots.py'],['e4d9218b7b5f928a9bfb4c4e75aace72c2310f20'],1,1,2,1,,,
6341ac85204f085fba81ff5b765042de025bf9b6,Added labels to dict,Simon Brugman,sbrugman@users.noreply.github.com,GitHub,noreply@github.com,2018-05-08 16:19:24+02:00,-7200,2018-05-08 16:19:24+02:00,-7200,True,False,['plots.py'],['2d8f4283f526ac903204adf63ee5aa77127891d6'],44,50,94,1,0.0,0.0,0.0
ce0f15ab7a0294a949877a9f22a5f873f2724c24,Update plots.py,Simon Brugman,sbrugman@users.noreply.github.com,GitHub,noreply@github.com,2018-05-08 16:20:43+02:00,-7200,2018-05-08 16:20:43+02:00,-7200,True,False,['plots.py'],['6341ac85204f085fba81ff5b765042de025bf9b6'],6,7,13,1,,,
e11b5caa19c04e9ed747a3ff9c4faf1b50739ee5,fix typos,Alex Fortin,alex.antoine.fortin@gmail.com,GitHub,noreply@github.com,2018-05-09 16:03:31-05:00,18000,2018-05-09 16:03:31-05:00,18000,True,False,['ImageNet VGG16 Model with Keras.ipynb'],['b91fd1877a15f50b413f85031702d3ac631fa433'],1,1,2,1,,,
ccc6bdb81b5c9ad39755913c537f860a45a533b1,"Fix pandas 0.23.0 deprecation of as_matrix

```
FutureWarning: Method .as_matrix will be removed in a future version.
Use .values instead.
```
https://github.com/pandas-dev/pandas/pull/18458",Jeremiah Lewis,jlewis91@users.noreply.github.com,Jeremiah Lewis,jlewis91@users.noreply.github.com,2018-05-16 11:09:52+02:00,-7200,2018-05-16 11:09:52+02:00,-7200,True,False,"['Census income classification with Keras.ipynb', 'Census income classification with XGBoost.ipynb', 'League of Legends Win Prediction with XGBoost.ipynb', 'Python Version of Tree SHAP.ipynb', 'Figure 7 - Airline Tweet Sentiment Analysis.ipynb', 'Figures 8-11 NHANES I Survival Model.ipynb', 'datasets.py', 'kernel.py', 'pytree.py', 'tree.py', 'plots.py']",['fa00af9f7b695c4728c422cbbdfb4e691a5de2ec'],32,33,65,11,,,
3988b9ba4844487b6102ee07e1550236e426f29c,Fix appveyor.yml,Jeremiah,jlewis91@users.noreply.github.com,GitHub,noreply@github.com,2018-05-17 10:59:49+02:00,-7200,2018-05-17 10:59:49+02:00,-7200,True,False,['appveyor.yml'],['ccc6bdb81b5c9ad39755913c537f860a45a533b1'],1,1,2,1,,,
3f98f33d4b3f26f0cf2fb322af558fc39c4c8e67,Add silent option,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-05-17 16:50:24-07:00,25200,2018-05-17 16:50:24-07:00,25200,True,False,['kernel.py'],['8e2ca90f8c705f7474c6701b10fecab12ba411a5'],4,4,8,1,,,
62765b5aa0225927ff12da101ff04c384b94d09e,XGBoost multi-class test,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-05-17 16:51:36-07:00,25200,2018-05-17 16:51:36-07:00,25200,True,False,"['setup.py', 'test_basic.py']",['293327a6399e98c587ffd33960c43c7f2f374329'],1,16,17,2,1.0,1.0,1.0
431ce2ff83b0b134bce804e03b808c6e4480fd50,Fixes bool bug #92,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-05-21 12:12:58-07:00,25200,2018-05-21 12:12:58-07:00,25200,True,False,"['setup.py', 'plots.py', 'test_basic.py']",['62765b5aa0225927ff12da101ff04c384b94d09e'],4,16,20,3,1.0,1.0,1.0
da3380ea0009a888f374e55eb28f01a16e6224d2,Added more docs,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-05-22 11:08:48-07:00,25200,2018-05-22 11:08:48-07:00,25200,True,False,"['Makefile', 'environment.pickle', 'index.doctree', 'index.txt', 'ajax-loader.gif', 'alabaster.css', 'basic.css', 'comment-bright.png', 'comment-close.png', 'comment.png', 'custom.css', 'doctools.js', 'down-pressed.png', 'down.png', 'file.png', 'jquery-1.11.1.js', 'jquery.js', 'minus.png', 'plus.png', 'pygments.css', 'searchtools.js', 'underscore-1.3.1.js', 'underscore.js', 'up-pressed.png', 'up.png', 'websupport.js', 'genindex.html', 'index.html', 'objects.inv', 'py-modindex.html', 'search.html', 'searchindex.js', 'index.rst', 'make.bat', 'kernel.py', 'tree.py', 'plots.py']",['431ce2ff83b0b134bce804e03b808c6e4480fd50'],11,15595,15606,37,0.4989295774647887,0.5394929577464789,0.7130140845070423
7f95ae87e6c4b347effb2bda729e47ecd8796c3b,"Better error message when _cext is missing

Addresses #96",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-05-22 11:37:38-07:00,25200,2018-05-22 11:37:38-07:00,25200,True,False,"['environment.pickle', 'index.doctree', 'setup.py', 'tree.py']",['da3380ea0009a888f374e55eb28f01a16e6224d2'],2,5,7,4,1.0,1.0,0.0
2d8d103c7faf4b870e5dc68de11a844cf72c3a38,"Support multi-class LightGBM output and the LightGBM sklearn interface

Fixes #103",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-05-29 09:58:47-07:00,25200,2018-05-29 09:58:47-07:00,25200,True,False,"['setup.py', 'mimic.py', 'tree.py', 'test_basic.py']",['7f95ae87e6c4b347effb2bda729e47ecd8796c3b'],2,121,123,4,0.5471698113207547,0.6415094339622641,0.33962264150943394
9f885dc046229d5c321fbefa77c65d7f8f4ef0e6,Fix lightgbm travis error,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-05-29 10:08:54-07:00,25200,2018-05-29 10:08:54-07:00,25200,True,False,"['setup.py', 'test_basic.py']",['2d8d103c7faf4b870e5dc68de11a844cf72c3a38'],27,27,54,2,0.0,0.0,0.0
4dbe4ac029e6f5dc87fc846e59f437b3f59551fb,"Fix multiclass bug in sklearn explanations

Fixes #102",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-05-30 11:06:07-07:00,25200,2018-05-30 11:06:07-07:00,25200,True,False,"['setup.py', 'tree.py', 'tree_shap.h']",['9f885dc046229d5c321fbefa77c65d7f8f4ef0e6'],3,31,34,3,,,
7a6dbe38628e4427756428e8741fef1df89b58c8,Add unit test,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-05-30 11:16:56-07:00,25200,2018-05-30 11:16:56-07:00,25200,True,False,['test_basic.py'],['4dbe4ac029e6f5dc87fc846e59f437b3f59551fb'],0,15,15,1,1.0,1.0,1.0
e38465ef95d5d6ce4e375acf5b59031e0b0cfaaa,Add docs config,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-05-30 12:52:29-07:00,25200,2018-05-30 12:52:29-07:00,25200,True,False,['conf.py'],['7a6dbe38628e4427756428e8741fef1df89b58c8'],0,342,342,1,,,
5d329ffc4d5c8fe86e4087cc80d541e80598c02f,doc update,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-05-30 13:05:38-07:00,25200,2018-05-30 13:05:38-07:00,25200,True,False,['conf.py'],['e38465ef95d5d6ce4e375acf5b59031e0b0cfaaa'],2,5,7,1,,,
a941568cebffc2a130df699a5d8280c0b0f04f48,Print exception during failed C extension,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-05-30 13:25:58-07:00,25200,2018-05-30 13:25:58-07:00,25200,True,False,['setup.py'],['204b9e58a156e4f0faf7a240b5923a7c0f305c09'],1,2,3,1,,,
58176513c6401aab01416ef6b49277344bc814aa,Update setup.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-05-30 13:28:00-07:00,25200,2018-05-30 13:28:00-07:00,25200,True,False,['setup.py'],['a941568cebffc2a130df699a5d8280c0b0f04f48'],1,1,2,1,,,
cb7e497f349cc567b86a8f272eb1c8f5ba35596b,Update setup.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-05-30 13:31:03-07:00,25200,2018-05-30 13:31:03-07:00,25200,True,False,['setup.py'],['58176513c6401aab01416ef6b49277344bc814aa'],1,1,2,1,,,
37e1537ac3863a475b4ddcd13925c392bf650710,Update setup.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-05-30 13:41:26-07:00,25200,2018-05-30 13:41:26-07:00,25200,True,False,['setup.py'],['cb7e497f349cc567b86a8f272eb1c8f5ba35596b'],4,4,8,1,0.5,0.0,0.0
0a669ecaa4545aa7c784dc45084f4ca8ef4c159b,Update setup.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-05-30 13:45:55-07:00,25200,2018-05-30 13:45:55-07:00,25200,True,False,['setup.py'],['37e1537ac3863a475b4ddcd13925c392bf650710'],4,5,9,1,0.6666666666666666,1.0,1.0
a7e2c3d427cd327e38593491f2b7f4a4b5c6a600,add ntree_limit and num_iteration limit compatibility,Alexandra Okeson,amokeson@bicycle.cs.washington.edu,Alexandra Okeson,amokeson@bicycle.cs.washington.edu,2018-06-06 12:02:31-07:00,25200,2018-06-06 12:02:31-07:00,25200,True,False,"['.nfs000000000002caf100004bbf', '.nfs000000000002cd9000004bc0', '_cext.so', 'pytree.py', 'tree.py']",['f610db02a4eaa0d0b008582eecd8a67cfa9a8926'],15,27,42,5,0.5,0.5,0.0
560621037f6ec899aa8887aa2af01260c7b25f16,Fix #109,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-06 15:23:59-07:00,25200,2018-06-06 15:23:59-07:00,25200,True,False,"['setup.py', 'plots.py']",['f610db02a4eaa0d0b008582eecd8a67cfa9a8926'],2,1,3,2,1.0,1.0,1.0
c5a386b833b613925e75a45d7e8affbc321d8511,"Added bar summary plots with support for multiple output classes

Fixes #88",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-06 17:08:28-07:00,25200,2018-06-06 17:08:28-07:00,25200,True,False,"['setup.py', 'tree.py', 'plots.py']",['560621037f6ec899aa8887aa2af01260c7b25f16'],15,80,95,3,0.09302325581395349,0.09302325581395349,0.0
a7c28c362bb80d14249c378904398c8e31db3689,Added a new model agnostic SamplingExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-07 17:26:06-07:00,25200,2018-06-07 17:26:06-07:00,25200,True,False,"['setup.py', '__init__.py', 'kernel.py', 'sampling.py', 'test_basic.py', 'test_kernel.py', 'test_sampling.py', 'test_tree.py']",['c5a386b833b613925e75a45d7e8affbc321d8511'],177,266,443,8,0.0,0.09722222222222222,0.0
a5bf9d72c1ce771e5282fe2ff137340ee69187d6,Fix encoding issue in 2.7,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-07 17:37:59-07:00,25200,2018-06-07 17:37:59-07:00,25200,True,False,['sampling.py'],['a7c28c362bb80d14249c378904398c8e31db3689'],1,1,2,1,,,
47d2b7307316ede566ba06811462791730bbbf00,Fix python 2 inheritance,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-07 21:23:33-07:00,25200,2018-06-07 21:23:33-07:00,25200,True,False,['kernel.py'],['a5bf9d72c1ce771e5282fe2ff137340ee69187d6'],2,2,4,1,,,
cf8e768a36e9c6e92ecbbade1dd20c8872baa6aa,Fix class test in python 2,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-07 21:32:36-07:00,25200,2018-06-07 21:32:36-07:00,25200,True,False,['sampling.py'],['47d2b7307316ede566ba06811462791730bbbf00'],1,1,2,1,,,
922e793dfff068fea3c642c5f216ee2ff447dc8e,add generic shap interaction calculations capability,Alexandra Okeson,amokeson@bam.cs.washington.edu,Alexandra Okeson,amokeson@bam.cs.washington.edu,2018-06-15 09:33:05-07:00,25200,2018-06-15 09:33:05-07:00,25200,True,False,['tree.py'],['a7e2c3d427cd327e38593491f2b7f4a4b5c6a600'],16,116,132,1,0.0,0.0,0.0
eb38149aff1f5662d5744f220f8a6e209ca16e49,update documentation,Alexandra Okeson,amokeson@bam.cs.washington.edu,Alexandra Okeson,amokeson@bam.cs.washington.edu,2018-06-15 11:18:27-07:00,25200,2018-06-15 11:18:27-07:00,25200,True,False,"['README.md', '.nfs000000000002caf100004bbf', '.nfs000000000002cd9000004bc0', 'tree.py']",['922e793dfff068fea3c642c5f216ee2ff447dc8e'],10,8,18,4,1.0,0.3333333333333333,1.0
2f32ce63d412c66939ffa93753644cb455815ff0,add test for sklearn interaction calculations,Alexandra Okeson,amokeson@bam.cs.washington.edu,Alexandra Okeson,amokeson@bam.cs.washington.edu,2018-06-15 13:48:58-07:00,25200,2018-06-15 13:48:58-07:00,25200,True,False,['test_tree.py'],['58eeeb3824e848eecdb03cfa843f4b241c7a06bd'],0,19,19,1,1.0,0.0,1.0
c8a4b2ce76b22398254ec1331771924e5a30cd09,"take external referencing variable as an argument

Issue: function kernel_shap is referencing variable ""M"" outside of  its function, this may cause NameError
solution: take external referencing variable as an argument",Miae Kim,beautiful.mimikim@gmail.com,GitHub,noreply@github.com,2018-06-18 08:22:11-07:00,25200,2018-06-18 08:22:11-07:00,25200,True,False,['Simple Kernel SHAP.ipynb'],['cf8e768a36e9c6e92ecbbade1dd20c8872baa6aa'],2,2,4,1,,,
9419a62103feeb9ef9369d05f9f58412eb652086,take external referencing model as an argument,Miae Kim,beautiful.mimikim@gmail.com,GitHub,noreply@github.com,2018-06-18 08:37:25-07:00,25200,2018-06-18 08:37:25-07:00,25200,True,False,['Simple Kernel SHAP.ipynb'],['c8a4b2ce76b22398254ec1331771924e5a30cd09'],2,2,4,1,,,
470076285e31520ae2770b151dca4bfaea5680c8,Fixes #117,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 08:56:37-07:00,25200,2018-06-18 08:56:37-07:00,25200,True,False,"['NHANES+I+Survival+Model.html', 'NHANES I Survival Model.ipynb']",['cf8e768a36e9c6e92ecbbade1dd20c8872baa6aa'],81,4108,4189,2,,,
8988904a609a1b6f3e52d9af392221d71cf27624,fix imports for general compatibility,Alexandra Okeson,amokeson@tricycle.cs.washington.edu,Alexandra Okeson,amokeson@tricycle.cs.washington.edu,2018-06-18 10:05:26-07:00,25200,2018-06-18 10:05:26-07:00,25200,True,False,"['README.md', 'tree.py']",['2f32ce63d412c66939ffa93753644cb455815ff0'],6,3,9,2,,,1.0
d35ace2441fc2fdfbcba4290f9142b517013971d,Fix #115 and re-include tree tests,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 10:14:41-07:00,25200,2018-06-18 10:14:41-07:00,25200,True,False,"['League+of+Legends+Win+Prediction+with+XGBoost.html', 'League of Legends Win Prediction with XGBoost.ipynb', 'test_tree.py']",['470076285e31520ae2770b151dca4bfaea5680c8'],104789,635,105424,3,1.0,1.0,1.0
55d141af49a930915b6a2a69b2a69977911bd3d4,Update appveyor config,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 10:52:34-07:00,25200,2018-06-18 10:52:34-07:00,25200,True,False,['appveyor.yml'],['d35ace2441fc2fdfbcba4290f9142b517013971d'],100,26,126,1,,,
4f7cdfc32c6c8f60b9f07b84acd2792fbd322438,appveyor config update,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 11:09:05-07:00,25200,2018-06-18 11:09:05-07:00,25200,True,False,['appveyor.yml'],['a6873c29d03ad3edefcc2f02f28fe1286758129e'],5,2,7,1,,,
d69be4da4043bce5f6faddef99bbc47a92d6b46f,Make optional testing dependencies,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 11:48:14-07:00,25200,2018-06-18 11:48:14-07:00,25200,True,False,"['appveyor.yml', 'setup.py', 'test_tree.py']",['4f7cdfc32c6c8f60b9f07b84acd2792fbd322438'],46,89,135,3,0.31666666666666665,0.4166666666666667,0.4166666666666667
404b541c40c7684075882f413c0d26b651f4b195,Another appveyor tweak,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 11:50:22-07:00,25200,2018-06-18 11:50:22-07:00,25200,True,False,['appveyor.yml'],['d69be4da4043bce5f6faddef99bbc47a92d6b46f'],4,2,6,1,,,
f23ce578051403cdfb5e1535f26cbe0c6795ba41,Add build error fall back,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 12:10:04-07:00,25200,2018-06-18 12:10:04-07:00,25200,True,False,['setup.py'],['404b541c40c7684075882f413c0d26b651f4b195'],1,3,4,1,0.0,1.0,1.0
150e236d2670eb384a15ed6f37add9a31bb27c97,Fix __builtins__ compat,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 12:57:24-07:00,25200,2018-06-18 12:57:24-07:00,25200,True,False,['setup.py'],['f23ce578051403cdfb5e1535f26cbe0c6795ba41'],1,4,5,1,1.0,1.0,1.0
add07b4e63712dfa4c4362cfc43541821e7e7964,Bump travis to test py36,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 13:15:47-07:00,25200,2018-06-18 13:15:47-07:00,25200,True,False,"['.travis.yml', 'appveyor.yml', 'setup.py']",['150e236d2670eb384a15ed6f37add9a31bb27c97'],3,6,9,3,0.0,0.0,0.0
0f25c5ad1b7aadee8e4d5b5aeb82996b66320ec5,Don't require xgboost for testing on windows,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 13:32:11-07:00,25200,2018-06-18 13:32:11-07:00,25200,True,False,['setup.py'],['add07b4e63712dfa4c4362cfc43541821e7e7964'],1,9,10,1,0.0,0.0,0.0
95ef1bd4adcc0bce9b70900abc9cfac944827c76,Fix syntax issue,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 13:33:30-07:00,25200,2018-06-18 13:33:30-07:00,25200,True,False,['setup.py'],['0f25c5ad1b7aadee8e4d5b5aeb82996b66320ec5'],1,1,2,1,,,
0a258932c50811ace1f497001477d539c5f2ee7c,Try again to fix appveyor,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 13:46:54-07:00,25200,2018-06-18 13:46:54-07:00,25200,True,False,['setup.py'],['95ef1bd4adcc0bce9b70900abc9cfac944827c76'],3,5,8,1,0.0,0.0,0.0
5e91cf6e29b934263cb76868b86faaf194c910a0,Try again to stop appveyor problems,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 14:00:57-07:00,25200,2018-06-18 14:00:57-07:00,25200,True,False,['setup.py'],['0a258932c50811ace1f497001477d539c5f2ee7c'],31,11,42,1,1.0,0.13636363636363635,0.13636363636363635
ef1821ef6026b336829a27e39f1346c0dca923a1,One more attempt to stop appveyor looping,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 14:22:48-07:00,25200,2018-06-18 14:22:48-07:00,25200,True,False,['setup.py'],['5e91cf6e29b934263cb76868b86faaf194c910a0'],13,14,27,1,,,
c4d7f1f4a1bd71ad3cccb8378db32dada8d7ab46,Final app appveyor cleanup,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-18 14:41:15-07:00,25200,2018-06-18 14:41:15-07:00,25200,True,False,['setup.py'],['ef1821ef6026b336829a27e39f1346c0dca923a1'],20,27,47,1,0.0,1.0,1.0
ea0b418ee74340cb83543f7bbce33e2161c6b428,Fix bug,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-06-18 14:56:02-07:00,25200,2018-06-18 14:56:02-07:00,25200,True,False,['tree.py'],['e3206b24620fc2255250bce6136cc453b33e8814'],1,1,2,1,,,
3512fe2d4c9d94caa0381d76088b422a36e32f82,"Fix classifier bug, fix regressor bug for LGBM",Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-06-18 15:11:18-07:00,25200,2018-06-18 15:11:18-07:00,25200,True,False,['tree.py'],['ea0b418ee74340cb83543f7bbce33e2161c6b428'],5,9,14,1,0.0,0.0,0.0
dddbd22b06988881a8df62febca7f0b08ab8c740,Fix my merge mistake,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-06-18 15:14:54-07:00,25200,2018-06-18 15:14:54-07:00,25200,True,False,['test_tree.py'],['3512fe2d4c9d94caa0381d76088b422a36e32f82'],4,3,7,1,1.0,1.0,
f10223fec3c08e5f9baeee027d09ff1ecee63875,Update tree.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-06-18 15:29:42-07:00,25200,2018-06-18 15:29:42-07:00,25200,True,False,['tree.py'],['dddbd22b06988881a8df62febca7f0b08ab8c740'],2,10,12,1,0.0,0.0,0.0
441dfdac2500c9fcdc5a57e7d587c41dd9770145,Update tree.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-06-18 15:30:37-07:00,25200,2018-06-18 15:30:37-07:00,25200,True,False,['tree.py'],['f10223fec3c08e5f9baeee027d09ff1ecee63875'],0,1,1,1,,,
ef703e5192e705d56618a30d1ee12c7b99889d77,Update tree.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-06-18 15:33:08-07:00,25200,2018-06-18 15:33:08-07:00,25200,True,False,['tree.py'],['441dfdac2500c9fcdc5a57e7d587c41dd9770145'],0,2,2,1,1.0,1.0,0.0
6daa4d7050e6814d68c15635f0fa7f412cb37130,Update test_tree.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-06-18 15:34:48-07:00,25200,2018-06-18 15:34:48-07:00,25200,True,False,['test_tree.py'],['ef703e5192e705d56618a30d1ee12c7b99889d77'],1,3,4,1,,,
709b21960d1c0ffa801f350ebff5214f3e073cbe,add tree_limit for all models,Alexandra Okeson,amokeson@bicycle.cs.washington.edu,Alexandra Okeson,amokeson@bicycle.cs.washington.edu,2018-06-18 16:13:01-07:00,25200,2018-06-18 16:13:01-07:00,25200,True,False,['tree.py'],['8988904a609a1b6f3e52d9af392221d71cf27624'],34,74,108,1,0.08571428571428572,0.02857142857142857,0.45714285714285713
a4d1708066e346ee0f2e6748cfd2ee8a7b30228e,fix redundancies in code,Alexandra Okeson,amokeson@bicycle.cs.washington.edu,Alexandra Okeson,amokeson@bicycle.cs.washington.edu,2018-06-18 16:24:51-07:00,25200,2018-06-18 16:24:51-07:00,25200,True,False,['tree.py'],['605eeda2fb43311d6cb4ab43afbbe1fa009c3dc4'],5,0,5,1,1.0,1.0,1.0
161c88794d308d079f97d011d73e1287c6d61c2b,clean up single instance shap calculations code,Alexandra Okeson,amokeson@bicycle.cs.washington.edu,Alexandra Okeson,amokeson@bicycle.cs.washington.edu,2018-06-18 16:55:58-07:00,25200,2018-06-18 16:55:58-07:00,25200,True,False,['tree.py'],['a4d1708066e346ee0f2e6748cfd2ee8a7b30228e'],25,10,35,1,1.0,1.0,1.0
5723be49b0294cc86835a88792fc9b82d9f0ff2b,Allow ExtraTreesClassifier,saaryalov,saar.yalov@gmail.com,saaryalov,saar.yalov@gmail.com,2018-06-22 23:32:23+00:00,0,2018-06-22 23:32:23+00:00,0,True,False,['tree.py'],['2df169d101435e2e6a3e83e3ce6cf82889cb2847'],0,2,2,1,0.0,0.0,0.0
48adaf864ac2c830c3e1d94961a72c46aa4f896b,Update tree.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-06-22 17:37:00-07:00,25200,2018-06-22 17:37:00-07:00,25200,True,False,['tree.py'],['5723be49b0294cc86835a88792fc9b82d9f0ff2b'],1,1,2,1,,,
e62731c398e4937118d30fe1f6c0f5dea58616f9,expose Tree object + fix to the breaking test of kernel shap for dataframe input,xzzxzxxz,zhouxiang8421@gmail.com,xzzxzxxz,zhouxiang8421@gmail.com,2018-06-23 21:07:39-04:00,14400,2018-06-23 21:07:39-04:00,14400,True,False,"['__init__.py', 'kernel.py', 'test_kernel.py']",['d5e65b2a93145ac576a6ffe03ee9900f51dc8a37'],3,22,25,3,1.0,0.0,1.0
619158382b022dfeb7d39206d97fb599edc4a982,Fix #132,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-25 12:11:23-07:00,25200,2018-06-25 12:11:23-07:00,25200,True,False,['README.md'],['d5e65b2a93145ac576a6ffe03ee9900f51dc8a37'],4,3,7,1,,,
a73d37e6f75a13b5b018d5ac5b6a9522ca1e48cb,Fix vector output layout for KernelExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-27 10:40:04-07:00,25200,2018-06-27 10:40:04-07:00,25200,True,False,['kernel.py'],['619158382b022dfeb7d39206d97fb599edc4a982'],4,5,9,1,0.0,0.0,0.0
1a07e090402d94bdfa59eb13890071e08a03c5ba,Update kernel.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-06-27 10:48:00-07:00,25200,2018-06-27 10:48:00-07:00,25200,True,False,['kernel.py'],['e62731c398e4937118d30fe1f6c0f5dea58616f9'],1,2,3,1,0.0,1.0,0.0
6383c085c412296553e256f8b90f6f37c931a81f,Alpha version of DeepExplainer for TensorFlow/Keras models,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-27 11:49:35-07:00,25200,2018-06-27 11:49:35-07:00,25200,True,False,"['__init__.py', 'common.py', 'deep.py', 'plots.py']",['b21168dc351e847da978e8b952bcd67db0bcb8c1'],17,307,324,4,0.09036144578313253,0.22289156626506024,0.3072289156626506
65152771765533a919009e095afdf7816e10bdb8,Don't require tensorflow unless we are using DeepExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-27 12:01:41-07:00,25200,2018-06-27 12:01:41-07:00,25200,True,False,['deep.py'],['6383c085c412296553e256f8b90f6f37c931a81f'],2,3,5,1,1.0,1.0,1.0
a51df87f3145de2ea5eae0f9ef1c5ff72f0efb78,Fix incorrect max_samples settings as noted in #93,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-28 11:43:46-07:00,25200,2018-06-28 11:43:46-07:00,25200,True,False,['kernel.py'],['65152771765533a919009e095afdf7816e10bdb8'],3,4,7,1,0.0,0.0,0.0
021e57c1a944149925976bf3977f374b4f8c7941,"0.19.1

Last release before interface merge with DeepExplainer",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-28 16:39:49-07:00,25200,2018-06-28 16:39:49-07:00,25200,True,False,['setup.py'],['a51df87f3145de2ea5eae0f9ef1c5ff72f0efb78'],1,1,2,1,,,
8562437bbacf06db21385dede157538629006638,"Fix #137

sklearn models use <= not < for threshold comparisons",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-29 11:32:30-07:00,25200,2018-06-29 11:32:30-07:00,25200,True,False,"['setup.py', '_cext.cc', 'tree.py', 'tree_shap.h']",['021e57c1a944149925976bf3977f374b4f8c7941'],16,23,39,4,0.0,0.0,0.14285714285714285
1e9db5a5b932b1bb5b7f14fd95555ffa5daaacab,Bump iml version,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-29 11:40:09-07:00,25200,2018-06-29 11:40:09-07:00,25200,True,False,['setup.py'],['8562437bbacf06db21385dede157538629006638'],1,1,2,1,,,
254db4c2ab4159a5da6f684e595bf27775899145,Add #137 issue and unit test,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-29 12:47:53-07:00,25200,2018-06-29 12:47:53-07:00,25200,True,False,['test_tree.py'],['1e9db5a5b932b1bb5b7f14fd95555ffa5daaacab'],2,17,19,1,1.0,1.0,1.0
ae62408b7a0a46b41f53069e497aa05bf0b8b36a,Don't require graphviz for tests,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-06-29 14:38:40-07:00,25200,2018-06-29 14:38:40-07:00,25200,True,False,['test_tree.py'],['254db4c2ab4159a5da6f684e595bf27775899145'],1,0,1,1,0.0,0.0,0.0
922fa0fe9f198011edd875289fc68b906ff9f2b8,Lazy graph building and correctly find default keras session,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-02 15:31:41-07:00,25200,2018-07-02 15:31:41-07:00,25200,True,False,"['deep.py', 'plots.py']",['ae62408b7a0a46b41f53069e497aa05bf0b8b36a'],38,128,166,2,0.35294117647058826,0.0,0.0
45287421b385e4916d7b3b0510caed15a6478e38,add args to keep index sorted -- required by some models,xzzxzxxz,zhouxiang8421@gmail.com,xzzxzxxz,zhouxiang8421@gmail.com,2018-07-02 21:53:38-04:00,14400,2018-07-02 21:53:38-04:00,14400,True,False,['kernel.py'],['922fa0fe9f198011edd875289fc68b906ff9f2b8'],0,3,3,1,0.0,0.0,0.6666666666666666
d79965b976de9d200a4e698fdbcbc608089ae232,Adding sklearn decision tree classifier to shap,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2018-07-03 14:40:23-04:00,14400,2018-07-03 14:40:23-04:00,14400,True,False,"['tree.py', 'test_tree.py']",['922fa0fe9f198011edd875289fc68b906ff9f2b8'],1,18,19,2,0.7857142857142857,0.7857142857142857,0.7857142857142857
0a3a1526dcaaed766894252424cdd7993effeee4,"Corrected NHANES data and Juptyer notebook

Whereas poverty index previously could be up to 999, poverty index now is maximum of 9.98, in line with the NHANES definition of poverty index. Poverty index that was previously '999' is now 'Nan', since 999 is a code for 'unknown'. Whereas ""Red blood cells"" previously was maximum 88.8, red blood cells (in millions/mm^3) was scaled down by a factor of ten, to correspond correctly to the NHANES DU4800 documentation. 'Unacceptable data' and 'Blank, but applicable' (previously 77.7 and 88.8) are now 'NaN'.",Alex DeGrave,ajd98@pitt.edu,Alex DeGrave,ajd98@pitt.edu,2018-07-03 11:51:43-07:00,25200,2018-07-03 11:54:11-07:00,25200,True,False,"['NHANES I Survival Model.ipynb', 'NHANESI_subset_X.csv']",['922fa0fe9f198011edd875289fc68b906ff9f2b8'],10190,10049,20239,2,,,
c2d3d1a4eae80f58c04909ca2f02ea3b145d5929,"Remove notebook copy, at Scott's request",Alex DeGrave,ajd98@pitt.edu,Alex DeGrave,ajd98@pitt.edu,2018-07-03 12:35:53-07:00,25200,2018-07-03 12:35:53-07:00,25200,True,False,['NHANES I Survival Model-Copy1.ipynb'],['0a3a1526dcaaed766894252424cdd7993effeee4'],52393,0,52393,1,,,
74912e914c85666e9f81fc385e0a72571a57960a,Added a new GradientExplainer based on expected gradients,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-04 17:04:35-07:00,25200,2018-07-04 17:04:35-07:00,25200,True,False,"['__init__.py', 'common.py', 'deep.py', 'gradient.py', 'sampling.py', 'plots.py', 'test_gradient.py']",['922fa0fe9f198011edd875289fc68b906ff9f2b8'],63,443,506,7,0.04926108374384237,0.2315270935960591,0.35467980295566504
66d9a07283ce691ac607f63637d2c8bbbe941bd5,Fix non-ascii character,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-04 17:11:05-07:00,25200,2018-07-04 17:11:05-07:00,25200,True,False,"['gradient.py', 'sampling.py']",['bc09d54295eae73328feaa62782c6dfb43e398b9'],6,4,10,2,1.0,1.0,1.0
e7708a14d2f647d5a95089903c77b3edcfd5ad34,Fix #142,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-06 09:19:21-07:00,25200,2018-07-06 09:19:21-07:00,25200,True,False,['tree.py'],['66d9a07283ce691ac607f63637d2c8bbbe941bd5'],0,2,2,1,0.0,0.0,0.0
cfcbdebcd23bf487282fae96ce479e845c61c632,Cleanup and tweaks for GradientExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-06 10:37:51-07:00,25200,2018-07-06 10:37:51-07:00,25200,True,False,"['setup.py', 'gradient.py', 'plots.py', 'test_gradient.py']",['e7708a14d2f647d5a95089903c77b3edcfd5ad34'],37,52,89,4,0.0,0.13333333333333333,0.13333333333333333
663c6d43b4939d81a45dcfe456b2b23015d89001,Add softmax support to DeepExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-06 17:06:34-07:00,25200,2018-07-06 17:06:34-07:00,25200,True,False,"['deep.py', 'plots.py', 'test_deep.py', 'test_gradient.py']",['cfcbdebcd23bf487282fae96ce479e845c61c632'],50,114,164,4,0.0,1.0,1.0
f83c51b878951b2db139ed92174d7f4088273d5e,Add version checks for tensorflow and keras,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-06 17:44:18-07:00,25200,2018-07-06 17:44:18-07:00,25200,True,False,"['mnist_image_plot.png', 'deep.py']",['663c6d43b4939d81a45dcfe456b2b23015d89001'],0,8,8,2,0.0,0.0,0.0
d938731723d0804e33994cf3ebfe88d8248e5e02,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-07-06 18:19:35-07:00,25200,2018-07-06 18:19:35-07:00,25200,True,False,['README.md'],['f83c51b878951b2db139ed92174d7f4088273d5e'],0,28,28,1,,,
52ac94818ab87d46265030270ceb9084e55e2b84,Update docs theme,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-07 10:24:57-07:00,25200,2018-07-07 10:24:57-07:00,25200,True,False,['conf.py'],['d938731723d0804e33994cf3ebfe88d8248e5e02'],2,2,4,1,,,
4ff23ac90cabec334e7fe41a1c1e2fa5decd894c,Update docs,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-07 10:41:35-07:00,25200,2018-07-07 10:41:35-07:00,25200,True,False,['index.rst'],['52ac94818ab87d46265030270ceb9084e55e2b84'],10,22,32,1,,,
e40c87822b0d3ff668cd73ff14b879e57b49bc5c,Doc updates,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-07 10:46:21-07:00,25200,2018-07-07 10:46:21-07:00,25200,True,False,"['.gitignore', 'index.rst']",['4ff23ac90cabec334e7fe41a1c1e2fa5decd894c'],7,6,13,2,,,
aa0142074021eca9ebc6738361c40bd039053e5f,Don't import tensorflow until needed,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-09 13:06:35-07:00,25200,2018-07-09 13:06:35-07:00,25200,True,False,"['boston_summary_plot_bar.png', 'index.rst', 'deep.py', 'gradient.py', 'test_gradient.py']",['e40c87822b0d3ff668cd73ff14b879e57b49bc5c'],46,38,84,5,0.0,0.0,0.0
24723db987cbf350845eb56ae1b8bde82f55079d,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-07-09 13:15:43-07:00,25200,2018-07-09 13:15:43-07:00,25200,True,False,['README.md'],['aa0142074021eca9ebc6738361c40bd039053e5f'],1,12,13,1,,,
6e02ab941ce727c4e2d3ba527e58c6712bd20b0b,Organize the notebooks by which explainer they use,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-09 16:41:23-07:00,25200,2018-07-09 16:41:23-07:00,25200,True,False,"['Census income classification with Keras.ipynb', 'Force Plot Colors.ipynb', 'Front page example (XGBoost).ipynb', 'NHANESI_subset_X.csv', 'NHANESI_subset_y.csv', 'adult.data', 'adult.names', 'adult.test', 'age_bst1.pdf', 'age_bst2.pdf', 'age_bst6.pdf', 'sentiment_summary.pdf', 'Front Page DeepExplainer MNIST Example.ipynb', 'Census income classification with Keras.ipynb', 'Census income classification with scikit-learn.ipynb', 'Diabetes regression.ipynb', 'ImageNet VGG16 Model with Keras.ipynb', 'Iris classification with scikit-learn.ipynb', 'Simple Kernel SHAP.ipynb', 'apple_strawberry.jpg', 'dog.3538.jpg', 'Basic SHAP Interaction Value Example in XGBoost.ipynb', 'Census income classification with LightGBM.ipynb', 'Census income classification with XGBoost.ipynb', 'Force Plot Colors.ipynb', 'Front page example (XGBoost).ipynb', 'League of Legends Win Prediction with XGBoost.ipynb', 'NHANES I Survival Model.ipynb', 'Python Version of Tree SHAP.ipynb', 'Scatter Density vs. Violin Plot Comparison.ipynb', 'Understanding Tree SHAP for Simple Models.ipynb', 'XGBoost Multi-class Example.ipynb', 'Figure 1 - Simple Inconsistency Example.ipynb', 'Figure 3 - User Study.ipynb', 'Figure 4 - Supervised Clustering Adult Census Data.ipynb', 'Figure 5 - Runtime.ipynb', 'Figure 6 - Supervised Clustering R-squared.ipynb', 'Figure 7 - Airline Tweet Sentiment Analysis.ipynb', 'Figures 8-11 NHANES I Survival Model-Copy1.ipynb', 'Figures 8-11 NHANES I Survival Model.ipynb', 'Performance comparison-Copy1.ipynb', 'Performance comparison.ipynb', 'Tree SHAP in Python.ipynb', 'cognitive_score.txt', 'module_expression.txt', 'neuropath.txt', 'tweets.csv', 'perf.pdf']",['aa0142074021eca9ebc6738361c40bd039053e5f'],222576,8087,230663,48,,,
95a5c1aab5a3f5110b722be438deee3995970804,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-07-09 16:50:03-07:00,25200,2018-07-09 16:50:03-07:00,25200,True,False,['README.md'],['11f50e10948636c7a6c5d5284075c8338dc5498a'],2,2,4,1,,,
053957b06df9d706c545deab0b074e49772880e5,Update tree.py,mizukasai,33205508+mizukasai@users.noreply.github.com,GitHub,noreply@github.com,2018-07-10 15:41:09+02:00,-7200,2018-07-10 15:41:09+02:00,-7200,True,False,['tree.py'],['95a5c1aab5a3f5110b722be438deee3995970804'],1,1,2,1,,,
d87172377b1bb46984db1733687aa4065292b1d8,Support GradientBoostingRegressor #147,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-11 11:32:16-07:00,25200,2018-07-11 11:32:16-07:00,25200,True,False,"['tree.py', 'plots.py']",['d9f2eb83d2e0efab50eb9352821e05ac3c3ec7c7'],4,18,22,2,0.09090909090909091,0.09090909090909091,0.09090909090909091
1b18a842a86a3d0d4c6c5eead735246fc0e95820,"Added DeepExplainer support for LSTMs
- Included examples for multiply, divide, and lstm.
- Included examples for Keras functional API and Tensorflow defined models.
- Fixed nans that arose from division by zero.
- Fixed problems that arose from multiplications/divisions of two vectors.
- Added support for ClipByValue.
- Added support for additional guaranteed linearities.",Hugh Chen,hugh.chen1@gmail.com,Hugh Chen,hugh.chen1@gmail.com,2018-07-11 11:44:04-07:00,25200,2018-07-11 11:44:04-07:00,25200,True,False,"['Explain Keras Sequential Model LSTM with DeepExplainer.ipynb', 'Explain Multiply Keras Functional API.ipynb', 'Explain Multiply and Division Models defined in Tensorflow.ipynb', 'deep.py', 'test_deep_lstm.py']",['d9f2eb83d2e0efab50eb9352821e05ac3c3ec7c7'],10,651,661,5,0.0,0.40963855421686746,0.40963855421686746
d7e602a6b730d0d88842a1306b8e25d76ceced0b,Tag 0.19.4,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-12 09:17:15-07:00,25200,2018-07-12 09:17:15-07:00,25200,True,False,"['setup.py', 'deep.py']",['7c8cc0572c51e9eb33cedf850ea94b1c3c026cf9'],16,14,30,2,,,
672e44f5d1f6ce808796b35be0dd0a75c2c3c9ed,Restore NHANES data,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-12 12:21:08-07:00,25200,2018-07-12 12:21:08-07:00,25200,True,False,"['NHANESI_subset_X.csv', 'NHANESI_subset_y.csv', 'datasets.py']",['d7e602a6b730d0d88842a1306b8e25d76ceced0b'],2,19868,19870,3,,,
12ec133d147d7c4df1d7f90ef3968a38989d491e,"Update deep.py

Typo in the parsing of model type for keras functional API models",Evan Kriminger,evankriminger@gmail.com,GitHub,noreply@github.com,2018-07-12 14:57:04-07:00,25200,2018-07-12 14:57:04-07:00,25200,True,False,['deep.py'],['672e44f5d1f6ce808796b35be0dd0a75c2c3c9ed'],1,1,2,1,,,
d998b9694391a0e0c8563ee2a231c18dc9cfbc15,DeepExplainer warning update,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-12 17:11:26-07:00,25200,2018-07-12 17:11:26-07:00,25200,True,False,['deep.py'],['fac069a51283120e4a3b0f2e4aafa223ddcb2002'],0,2,2,1,0.0,0.0,0.0
9af1fd2d51705920f835f26b369ae2ac46bfa550,tree shap_values indexation fix,Manar Toumi,manartoumi42@gmail.com,Manar Toumi,manartoumi42@gmail.com,2018-07-13 17:12:23+02:00,-7200,2018-07-13 17:12:23+02:00,-7200,True,False,['tree.py'],['053957b06df9d706c545deab0b074e49772880e5'],2,2,4,1,,,
e06e674f32bae5b0d3acbf4a433bed25197572cf,Support embedding layers in DeepExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-13 10:48:32-07:00,25200,2018-07-13 10:48:32-07:00,25200,True,False,['deep.py'],['d998b9694391a0e0c8563ee2a231c18dc9cfbc15'],3,28,31,1,0.0,0.0,0.0
47b31402f4dc6d49ac7f7f853faa7da360986181,Now support dropout in LSTMs,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-13 15:24:15-07:00,25200,2018-07-13 15:24:15-07:00,25200,True,False,"['Explain Keras Sequential Model LSTM with DeepExplainer.ipynb', 'setup.py', 'deep.py']",['e06e674f32bae5b0d3acbf4a433bed25197572cf'],116,301,417,3,1.0,1.0,1.0
75e1911e8958ec81e73a5fd5797203f1243c01c2,Index bug fix on shap interaction values,Manar Toumi,manartoumi42@gmail.com,Manar Toumi,manartoumi42@gmail.com,2018-07-16 16:30:06+02:00,-7200,2018-07-16 16:30:06+02:00,-7200,True,False,['tree.py'],['adefe7aaa48442f354038c6c41a2e6fb4fd6b8a1'],2,2,4,1,,,
4763c87adfee24b5368495175b834aea035d59b8,"First set of changes for 0.20

No longer return the expected model value as the last column",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-16 09:40:38-07:00,25200,2018-07-16 09:40:38-07:00,25200,True,False,"['Explain Multiply Keras Functional API.ipynb', 'Explain Multiply and Division Models defined in Tensorflow.ipynb', 'Keras LSTM for IMDB Sentiment Classification.ipynb', 'Census income classification with Keras.ipynb', 'Census income classification with scikit-learn.ipynb', 'Diabetes regression.ipynb', 'kernel.py', 'tree.py', 'plots.py', 'test_tree.py']",['47b31402f4dc6d49ac7f7f853faa7da360986181'],740,297,1037,10,0.3,0.325,0.3
35e20d11e58218c25c8f2c3c0662aa706716243b,"New interface for v0.20

This is a big interface change where we no longer return the expected model output as the last column of the shap_values array. This makes KernelExplainer and TreeExplainer consistent with DeepExplainer, and also now requires us to pass `explainer.expected_value` to `force_plot` calls (since the base value is no longer the last column).

This should make everything much clearer in the long run, since now the shape of the returned shap_values matrix is the exact same as the passed input matrix.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-16 16:05:02-07:00,25200,2018-07-16 16:05:02-07:00,25200,True,False,"['README.md', 'Census income classification with Keras.html', 'Census income classification with LightGBM.html', 'Census income classification with XGBoost.html', 'Census income classification with scikit-learn.html', 'Census+income+classification+with+Keras.html', 'Census+income+classification+with+scikit-learn.html', 'Front Page DeepExplainer MNIST Example.html', 'ImageNet VGG16 Model with Keras.html', 'Iris classification with scikit-learn.html', 'Iris+classification+with+scikit-learn.html', 'Keras LSTM for IMDB Sentiment Classification.html', 'League of Legends Win Prediction with XGBoost.html', 'NHANES I Survival Model.html', 'NHANES+I+Survival+Model.html', 'Front Page DeepExplainer MNIST Example.ipynb', 'Diabetes regression.ipynb', 'ImageNet VGG16 Model with Keras.ipynb', 'Iris classification with scikit-learn.ipynb', 'Simple Kernel SHAP.ipynb', 'Basic SHAP Interaction Value Example in XGBoost.ipynb', 'Census income classification with LightGBM.ipynb', 'Census income classification with XGBoost.ipynb', 'Force Plot Colors.ipynb', 'Front page example (XGBoost).ipynb', 'League of Legends Win Prediction with XGBoost.ipynb', 'NHANES I Survival Model.ipynb', 'Scatter Density vs. Violin Plot Comparison.ipynb', 'Understanding Tree SHAP for Simple Models.ipynb', 'XGBoost Multi-class Example.ipynb', 'setup.py', 'kernel.py', 'tree.py', 'plots.py', 'test_deep.py', 'test_deep_lstm.py', 'test_kernel.py', 'test_sampling.py', 'test_tree.py']",['7200b70d3cac684ae7443a8e1037e33213d78ec4'],207246,75991,283237,39,1.0,1.0,0.8333333333333334
626a5333860bf6fe85ee7ff8cd75f025d9df110c,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-07-16 16:11:45-07:00,25200,2018-07-16 16:11:45-07:00,25200,True,False,['README.md'],['35e20d11e58218c25c8f2c3c0662aa706716243b'],6,7,13,1,,,
e5f9753265feb69e93d4a6c089520e83eaa706bc,"Fix #157 LightGBM interaction values

This fixes some problems with computing interaction values for LightGBM models.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-16 16:58:48-07:00,25200,2018-07-16 16:58:48-07:00,25200,True,False,"['tree.py', 'test_tree.py']",['626a5333860bf6fe85ee7ff8cd75f025d9df110c'],6,27,33,2,1.0,1.0,1.0
c9e916d57db3b2cfad9f2e734f4c42b21e0d01c7,Try and push windows wheel with Appveyor,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-16 21:30:50-07:00,25200,2018-07-16 21:30:50-07:00,25200,True,False,['appveyor.yml'],['e5f9753265feb69e93d4a6c089520e83eaa706bc'],0,6,6,1,,,
447a7708405772a7e388d87ad4a6309994c70b8c,Get around broken UCI site,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-16 21:46:53-07:00,25200,2018-07-16 21:46:53-07:00,25200,True,False,"['adult.data', 'datasets.py']",['c9e916d57db3b2cfad9f2e734f4c42b21e0d01c7'],1,32563,32564,2,,,
0324390f29929f32a44c693d7a9151565ea87dc9,Try new appveyor config,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-17 08:32:03-07:00,25200,2018-07-17 08:32:03-07:00,25200,True,False,"['appveyor.yml', 'setup.py']",['447a7708405772a7e388d87ad4a6309994c70b8c'],15,32,47,2,,,
bb1419c82840f8415a48df50955857bc45522517,Fix typo in appveyor.yml,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-17 08:32:59-07:00,25200,2018-07-17 08:32:59-07:00,25200,True,False,['appveyor.yml'],['0324390f29929f32a44c693d7a9151565ea87dc9'],1,1,2,1,,,
182943ca7b5952bf2e30ccfe1b5023c352bc3510,More appveyor updates,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-17 08:40:54-07:00,25200,2018-07-17 08:40:54-07:00,25200,True,False,['appveyor.yml'],['bb1419c82840f8415a48df50955857bc45522517'],31,18,49,1,,,
ae989bf4d2326de0b0b647d88c26b9d8555f8715,Add 50 imagenet style images,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-18 08:33:30-07:00,25200,2018-07-18 08:33:30-07:00,25200,True,False,"['.travis.yml', 'appveyor.yml', 'sim_n01549053_4208.jpg', 'sim_n01624305_3109.jpg', 'sim_n01642257_3703.jpg', 'sim_n01687978_7467.jpg', 'sim_n01887474_9375.jpg', 'sim_n02010272_1613.jpg', 'sim_n02011805_6117.jpg', 'sim_n02033561_2663.jpg', 'sim_n02138441_3552.jpg', 'sim_n02190166_6252.jpg', 'sim_n02382204_7427.jpg', 'sim_n02395694_14311.jpg', 'sim_n02968333_22100.jpg', 'sim_n03029197_6381.jpg', 'sim_n03049924_13.jpg', 'sim_n03061345_7223.jpg', 'sim_n03118969_4898.jpg', 'sim_n03235180_7802.jpg', 'sim_n03245889_16148.jpg', 'sim_n03268918_3662.jpg', 'sim_n03433637_2002.jpg', 'sim_n03488887_15199.jpg', 'sim_n03518943_2240.jpg', 'sim_n03523987_7290.jpg', 'sim_n03809603_3531.jpg', 'sim_n03822767_7285.jpg', 'sim_n04260364_2410.jpg', 'sim_n04288533_9519.jpg', 'sim_n04404412_26251.jpg', 'sim_n04564581_8170.jpg', 'sim_n04583212_9954.jpg', 'sim_n07560652_7278.jpg', 'sim_n07581931_2919.jpg', 'sim_n07663899_6767.jpg', 'sim_n07697313_11105.jpg', 'sim_n07714571_3105.jpg', 'sim_n07910656_7115.jpg', 'sim_n07930554_10266.jpg', 'sim_n09406793_39048.jpg', 'sim_n09691729_2568.jpg', 'sim_n09706255_4386.jpg', 'sim_n09906704_22866.jpg', 'sim_n09988703_14533.jpg', 'sim_n10374849_811.jpg', 'sim_n11508382_9183.jpg', 'sim_n11769176_1973.jpg', 'sim_n12560282_16028.jpg', 'sim_n12709103_15667.jpg', 'sim_n12828791_5672.jpg', 'sim_n13052670_6077.jpg']",['182943ca7b5952bf2e30ccfe1b5023c352bc3510'],11,18,29,52,,,
cb1960efaf3eb90ea7fd825c6e56bb018da02c1a,Don't try 3.7 on travis,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-18 08:38:21-07:00,25200,2018-07-18 08:38:21-07:00,25200,True,False,['.travis.yml'],['ae989bf4d2326de0b0b647d88c26b9d8555f8715'],1,0,1,1,,,
ca2806f20ccf083e26219fad721dcb25f269e5d3,Add ImageNet50 array,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-18 08:45:48-07:00,25200,2018-07-18 08:45:48-07:00,25200,True,False,['imagenet50_224x224.npy'],['cb1960efaf3eb90ea7fd825c6e56bb018da02c1a'],0,0,0,1,,,
f15404215eb4e0d70ae786e99affe5b6f6519215,Add imagenet50 dataset,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-18 09:07:30-07:00,25200,2018-07-18 09:07:30-07:00,25200,True,False,"['imagenet50_labels.csv', 'datasets.py']",['ca2806f20ccf083e26219fad721dcb25f269e5d3'],1,67,68,2,1.0,1.0,1.0
3c3d4f575235c85fe2b02403d0a9b75fe8bada6f,Lower version requirements for GradientExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-18 11:51:29-07:00,25200,2018-07-18 11:51:29-07:00,25200,True,False,"['explainer.py', 'gradient.py']",['f15404215eb4e0d70ae786e99affe5b6f6519215'],5,13,18,2,1.0,1.0,1.0
a347109e6514fbeacf71dd521a60499a8b611b49,"New VGG16 GradientExplainer example

Also includes a new Explainer superclass for everything",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-18 12:50:45-07:00,25200,2018-07-18 12:50:45-07:00,25200,True,False,"['Explain an Intermediate Layer of VGG16 on ImageNet.html', 'Explain an Intermediate Layer of VGG16 on ImageNet.ipynb', 'deep.py', 'gradient.py', 'kernel.py', 'mimic.py', '__init__.py', 'coefficent.py', 'pytree.py', 'tree.py']",['3c3d4f575235c85fe2b02403d0a9b75fe8bada6f'],7,34883,34890,10,1.0,1.0,1.0
12d8b95a90d41c0c9ee9b3087dcb56295f3d9a94,Add example image plot,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-18 13:13:15-07:00,25200,2018-07-18 13:13:15-07:00,25200,True,False,"['gradient_imagenet_plot.png', 'Explain an Intermediate Layer of VGG16 on ImageNet.html', 'Explain an Intermediate Layer of VGG16 on ImageNet.ipynb', 'gradient.py']",['a347109e6514fbeacf71dd521a60499a8b611b49'],14,14,28,4,,,
9a1046234aa85ea201560522db2882278d889331,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-07-18 13:18:12-07:00,25200,2018-07-18 13:18:12-07:00,25200,True,False,['README.md'],['12d8b95a90d41c0c9ee9b3087dcb56295f3d9a94'],10,44,54,1,,,
f21c2243a76add0413177e1a7b5adcc2a533d79d,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-07-18 14:59:50-07:00,25200,2018-07-18 14:59:50-07:00,25200,True,False,['README.md'],['9a1046234aa85ea201560522db2882278d889331'],9,25,34,1,,,
6bf048d0baf52dbac59c4a620908611d2b71f290,"Clean up code as mentioned in #167

This does not change the behavior, but is now much better written.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-19 10:57:06-07:00,25200,2018-07-19 10:57:06-07:00,25200,True,False,"['kernel.py', 'tree.py']",['f21c2243a76add0413177e1a7b5adcc2a533d79d'],10,10,20,2,,,
075da93b92e3f5967a9b88ced61ea38b4c4623a8,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-07-19 11:39:16-07:00,25200,2018-07-19 11:39:16-07:00,25200,True,False,['README.md'],['6bf048d0baf52dbac59c4a620908611d2b71f290'],2,10,12,1,,,
0d4fe2eeff5864e4173bc02c66b9fac08cf08e99,Help address #170,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-21 12:09:00-07:00,25200,2018-07-21 12:09:00-07:00,25200,True,False,['tree.py'],['075da93b92e3f5967a9b88ced61ea38b4c4623a8'],6,6,12,1,1.0,1.0,1.0
5a688c4163d3462cb834f5565c819a11d51f7e11,fixes interaction value summary plot,Gabriel Cypriano,gabrielcs@gmail.com,Gabriel Cypriano,gabrielcs@gmail.com,2018-07-22 22:56:14-03:00,10800,2018-07-22 22:56:14-03:00,10800,True,False,['plots.py'],['0d4fe2eeff5864e4173bc02c66b9fac08cf08e99'],2,2,4,1,,,
00fbd6dbc94756158215dd0ee32e8147ebacb332,Add Longer Talk,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-23 09:11:19-07:00,25200,2018-07-23 09:11:19-07:00,25200,True,False,['February 2018 Talk.pptx'],['0d4fe2eeff5864e4173bc02c66b9fac08cf08e99'],0,0,0,1,,,
4bd8014edb8af4e489e80dbd19bd0439065da92b,Allow interaction plots without feature values,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-23 09:48:44-07:00,25200,2018-07-23 09:48:44-07:00,25200,True,False,"['plots.py', 'test_tree.py']",['23fe189e3773e375ed43818066491f61581e4412'],6,9,15,2,1.0,1.0,1.0
aeb64a811a2dadb6054bc282a4ac799ee801835f,Update pip for v0.20.2,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-23 09:50:24-07:00,25200,2018-07-23 09:50:24-07:00,25200,True,False,['setup.py'],['4bd8014edb8af4e489e80dbd19bd0439065da92b'],1,1,2,1,,,
4e7c70f273cc28add4982906a2c55c3a1d7eccf6,Try and fix travis auto-deploy,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-23 10:09:01-07:00,25200,2018-07-23 10:09:01-07:00,25200,True,False,['.travis.yml'],['aeb64a811a2dadb6054bc282a4ac799ee801835f'],2,2,4,1,,,
fa3a3104becae0ca85e20c16a3a29ae21705f2ce,New LinearExplainer that handles correlations,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-23 17:43:26-07:00,25200,2018-07-23 17:43:26-07:00,25200,True,False,"['.travis.yml', 'setup.py', '__init__.py', 'linear.py', 'test_linear.py']",['4e7c70f273cc28add4982906a2c55c3a1d7eccf6'],8,208,216,5,0.30526315789473685,0.5263157894736842,0.6842105263157895
4e94b67044763ccfb20eb00c48fb6b7c87407d44,fix the error found in tests and fix test case,xzzxzxxz,zhouxiang8421@gmail.com,xzzxzxxz,zhouxiang8421@gmail.com,2018-07-23 20:47:48-04:00,14400,2018-07-23 20:47:48-04:00,14400,True,False,"['kernel.py', 'test_kernel.py']",['1a07e090402d94bdfa59eb13890071e08a03c5ba'],3,3,6,2,,,
174f59c6da343c0ea7f9d88adc8f7890b4e198dc,Fix py2.7 issue,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-23 18:16:43-07:00,25200,2018-07-23 18:16:43-07:00,25200,True,False,"['.travis.yml', 'linear.py', 'test_linear.py']",['fa3a3104becae0ca85e20c16a3a29ae21705f2ce'],7,8,15,3,1.0,1.0,1.0
802820628ba063e92cb6eac2884d7614c6beac6c,Add expected_value attribute to LinearExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-24 09:32:18-07:00,25200,2018-07-24 09:32:18-07:00,25200,True,False,"['linear.py', 'test_deep.py', 'test_gradient.py', 'test_kernel.py', 'test_linear.py', 'test_sampling.py', 'test_tree.py']",['174f59c6da343c0ea7f9d88adc8f7890b4e198dc'],11,23,34,7,0.875,1.0,0.875
6b7519d0eb4a7c439ca05706704f628c01f9dedf,Remove broken travis auto deploy,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-24 09:41:03-07:00,25200,2018-07-24 09:41:03-07:00,25200,True,False,['.travis.yml'],['802820628ba063e92cb6eac2884d7614c6beac6c'],8,8,16,1,,,
0ac9751ec49606e86358637d333253232ff67815,Now TreeExplainer.shap_values can take catboost.Pool as X argument. This is needed to provide categorical features description for dataset.,Pavel Smirnov,smirnovpavel@park.search.yandex.net,Pavel Smirnov,smirnovpavel@park.search.yandex.net,2018-07-27 11:24:53+03:00,-10800,2018-07-27 11:24:53+03:00,-10800,True,False,['tree.py'],['5a9b80fa031a2780dbca8795ed6d0858d265a4cc'],2,4,6,1,0.0,0.0,0.0
dbbe4cf2b8b1d31fa33cd02ae5cea4292f7ff125,"Fix #192 for non-zero background value pruning

This also should make the KernelExplainer code a bit faster.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-30 10:08:14-07:00,25200,2018-07-30 10:08:14-07:00,25200,True,False,['kernel.py'],['6b7519d0eb4a7c439ca05706704f628c01f9dedf'],11,7,18,1,0.0,1.0,1.0
cd6ef26b64757b0db54e0336c9a1463eaf319f2c,Allow approximations in Tree SHAP for comparison,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-30 10:09:08-07:00,25200,2018-07-30 10:09:08-07:00,25200,True,False,['tree.py'],['dbbe4cf2b8b1d31fa33cd02ae5cea4292f7ff125'],2,9,11,1,,,
3629596be27aceeacf8854c5af05bb5d1e96afea,Should fix #188,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-30 10:44:18-07:00,25200,2018-07-30 10:44:18-07:00,25200,True,False,['deep.py'],['16e919f29e76986db81de3cd10d809b1628bb2d8'],2,7,9,1,0.0,0.0,0.0
85da04c878d164b9d31818c361940e10c14276fd,"Fix #189

Still need to support multi-class at some point.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-30 11:43:23-07:00,25200,2018-07-30 11:43:23-07:00,25200,True,False,['linear.py'],['3629596be27aceeacf8854c5af05bb5d1e96afea'],2,7,9,1,0.0,0.0,0.0
357c8d2264774787e765d671d40a2f5cdfcd85ad,Add new datasets,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-30 12:27:21-07:00,25200,2018-07-30 12:27:21-07:00,25200,True,False,['CommViolPredUnnormalizedData.txt'],['85da04c878d164b9d31818c361940e10c14276fd'],0,2216,2216,1,,,
41a29e8c47a67a503810f5e8c07a9f1d08ce47bb,Finish adding new datasets,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-30 12:32:51-07:00,25200,2018-07-30 12:32:51-07:00,25200,True,False,['datasets.py'],['357c8d2264774787e765d671d40a2f5cdfcd85ad'],4,76,80,1,0.2571428571428571,1.0,1.0
d7f2dfc53acfb750f26e291dc58a29fadef717f3,Make py27 happy,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-30 12:44:38-07:00,25200,2018-07-30 12:44:38-07:00,25200,True,False,['datasets.py'],['41a29e8c47a67a503810f5e8c07a9f1d08ce47bb'],5,5,10,1,,,
48bc3a7f8fa9465be778ecef14d4de8604275f7f,Add preliminary code for benchmark,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-07-31 16:30:37-07:00,25200,2018-07-31 16:30:37-07:00,25200,True,False,"['__init__.py', '__init__.py', 'methods.py', 'metrics.py', 'plots.py', 'scorers.py', 'datasets.py', '__init__.py', 'coefficent.py', 'random.py', 'tree.py', 'plots.py']",['d7f2dfc53acfb750f26e291dc58a29fadef717f3'],12,529,541,12,0.6106870229007634,0.9045801526717557,0.2480916030534351
74b2e51bfa28908b3530bb6df2dd869f8bcd6999,Support tf.pad to fix #182,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-03 12:28:16-06:00,21600,2018-08-03 12:28:16-06:00,21600,True,False,"['setup.py', 'deep.py']",['48bc3a7f8fa9465be778ecef14d4de8604275f7f'],2,5,7,2,0.0,0.0,0.0
ec26a1e0ccdf0a3885943e63502cf479194c13d1,Now support batch norm and earlier versions of tensorflow,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-03 16:30:33-06:00,21600,2018-08-03 16:30:33-06:00,21600,True,False,['deep.py'],['74b2e51bfa28908b3530bb6df2dd869f8bcd6999'],16,80,96,1,0.8627450980392157,0.49019607843137253,0.6274509803921569
010a607dbb919632773539523619a88c7cef4906,"Merge the iml package into shap

This has a fair amount of refactoring to pull iml into shap. Doing this will simplify dependency tracking.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-07 20:32:22-07:00,25200,2018-08-07 20:32:22-07:00,25200,True,False,"['index.html', 'color-set.js', 'index.jsx', 'package.json', 'random-explanation.js', 'test.js', 'AdditiveForceArrayVisualizer.jsx', 'AdditiveForceVisualizer.jsx', 'SimpleListVisualizer.jsx', 'webpack.config.js', 'setup.py', '__init__.py', 'common.py', 'kernel.py', 'sampling.py', 'tree.py', 'plots.py', '__init__.py', 'colors.py', 'dependence.py', 'force.py', 'image.py', 'bundle.js', 'logoSmallGray.png', 'summary.py', '__init__.py', 'test_deep.py', 'test_gradient.py', 'test_kernel.py', 'test_linear.py', 'test_sampling.py', 'test_tree.py', '__init__.py', 'test_image.py']",['ec26a1e0ccdf0a3885943e63502cf479194c13d1'],1043,3180,4223,34,0.672583287820863,0.7476788640087384,0.8560895685417804
04e72609471a9c623674187f9b8e07aff4434f78,Fix import error,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-07 20:38:56-07:00,25200,2018-08-07 20:38:56-07:00,25200,True,False,"['kernel.py', 'sampling.py']",['010a607dbb919632773539523619a88c7cef4906'],9,2,11,2,,,
68fee2cee188fef12774ec9cd89c6b954167cb5c,Add ipython as a dependency,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-07 20:42:30-07:00,25200,2018-08-07 20:42:30-07:00,25200,True,False,['setup.py'],['04e72609471a9c623674187f9b8e07aff4434f78'],1,1,2,1,,,
69cbaf9935bf604ee0d9204cde352a2a525c2ca5,Better error message,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-07 20:54:50-07:00,25200,2018-08-07 20:54:50-07:00,25200,True,False,['force.py'],['68fee2cee188fef12774ec9cd89c6b954167cb5c'],4,3,7,1,0.0,0.0,0.0
e56b26c2bf4992d40aed1211644d67982bd56c39,Fix py27 unicode issue,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-07 21:13:31-07:00,25200,2018-08-07 21:13:31-07:00,25200,True,False,['force.py'],['69cbaf9935bf604ee0d9204cde352a2a525c2ca5'],3,3,6,1,,,
0a440401b92988596f1b1d484bf25d3bf2d32c3b,Fix #206 (import error),Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-08 08:28:25-07:00,25200,2018-08-08 08:28:25-07:00,25200,True,False,['setup.py'],['e56b26c2bf4992d40aed1211644d67982bd56c39'],2,2,4,1,,,
af9801aba3035499895830ad9e82cf37c8f77d6d,Add other explainers to pip package,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-08 11:43:49-07:00,25200,2018-08-08 11:43:49-07:00,25200,True,False,['setup.py'],['0a440401b92988596f1b1d484bf25d3bf2d32c3b'],2,2,4,1,,,
dda27ca1090167e4a2975a0ce75760fe6a45adec,Fix bug in bar summary plots,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-08 16:57:18-07:00,25200,2018-08-08 16:57:18-07:00,25200,True,False,"['summary.py', 'test_summary.py']",['af9801aba3035499895830ad9e82cf37c8f77d6d'],7,32,39,2,1.0,1.0,1.0
8fd675b92c921220c540fb054f1e6defa0517fb3,"Fix ClipByValue Error #202

ClipByValue was removed from the gradient registry in the most recent version of TensorFlow",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-08 17:30:35-07:00,25200,2018-08-08 17:30:35-07:00,25200,True,False,"['setup.py', 'deep.py']",['dda27ca1090167e4a2975a0ce75760fe6a45adec'],4,10,14,2,0.0,0.0,0.6666666666666666
531b883d7875e9d991ed46caba90d390fce1b410,Support singular covariance matrices in LinearExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-09 17:42:22-07:00,25200,2018-08-09 17:42:22-07:00,25200,True,False,"['.gitignore', '_cext.so', 'linear.py', 'test_linear.py']",['8fd675b92c921220c540fb054f1e6defa0517fb3'],6,53,59,4,0.8108108108108109,0.2702702702702703,0.7567567567567568
216ecf2b0f39ab84bba5a2e3962a4e0909cfac56,Fix handling of singular cov for LinearExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-10 11:13:57-07:00,25200,2018-08-10 11:13:57-07:00,25200,True,False,"['linear.py', 'test_linear.py']",['531b883d7875e9d991ed46caba90d390fce1b410'],6,8,14,2,0.0,0.0,1.0
f519cacdf3596f87b27e4c01ca016b393664346a,Handle multi-colinear features in LinearExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-10 16:19:34-07:00,25200,2018-08-10 16:19:34-07:00,25200,True,False,"['linear.py', 'test_linear.py']",['216ecf2b0f39ab84bba5a2e3962a4e0909cfac56'],2,10,12,2,0.16666666666666666,0.16666666666666666,0.5
c3f2a086ba8fda3f5e8908e21066afa5c8bbac2d,Added installation instructions via conda,aandrade,aandrade@palantir.com,aandrade,aandrade@palantir.com,2018-08-11 17:29:06+02:00,-7200,2018-08-11 17:29:06+02:00,-7200,True,False,['README.md'],['f519cacdf3596f87b27e4c01ca016b393664346a'],0,8,8,1,,,
af6fa71f53be9ef908ba6ca820d789e36c7995a5,Adding CSR support for KernelExplainer,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2018-08-02 18:46:45-04:00,14400,2018-08-13 12:08:47-04:00,14400,True,False,['kernel.py'],['f519cacdf3596f87b27e4c01ca016b393664346a'],4,14,18,1,0.6666666666666666,0.6666666666666666,0.6666666666666666
14a283d010b0ec8eaba3c6317939e9b3db282371,"adding test for csr matrix, fixing bug",Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2018-08-03 01:24:33-04:00,14400,2018-08-13 12:08:48-04:00,14400,True,False,"['a1a.svmlight', 'datasets.py', 'kernel.py', 'test_kernel.py']",['af6fa71f53be9ef908ba6ca820d789e36c7995a5'],4,1628,1632,4,1.0,1.0,1.0
223e20d9c1c40d820faadd855299de719449f648,fixed test url,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2018-08-03 01:52:09-04:00,14400,2018-08-13 12:08:48-04:00,14400,True,False,"['datasets.py', 'test_kernel.py']",['14a283d010b0ec8eaba3c6317939e9b3db282371'],3,6,9,2,1.0,1.0,1.0
b3dd3d569a064aa073321a0354ab5a4ed1a59556,minor doc fix,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2018-08-03 02:02:47-04:00,14400,2018-08-13 12:08:48-04:00,14400,True,False,['kernel.py'],['223e20d9c1c40d820faadd855299de719449f648'],2,2,4,1,,,
086cf736f97401b29692f4eb02aa11a966b92697,improve csr handling for very sparse data,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2018-08-13 02:04:13-04:00,14400,2018-08-13 12:08:48-04:00,14400,True,False,"['common.py', 'kernel.py', 'test_kernel.py']",['b3dd3d569a064aa073321a0354ab5a4ed1a59556'],28,112,140,3,0.0,0.1038961038961039,0.8181818181818182
c049c2aacb52d88d5ae545bcdb32c4c543a7dee1,fixing a1a test and optimizing performance more in sample creation by using numpy arrays with vectorization,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2018-08-13 11:52:53-04:00,14400,2018-08-13 12:08:48-04:00,14400,True,False,"['kernel.py', 'test_kernel.py']",['086cf736f97401b29692f4eb02aa11a966b92697'],9,29,38,2,0.0,0.0,0.11764705882352941
025f182357ed9c0750de1934c3c0a6bde1c0bddf,fixed using indexes instead of i when setting whether group varies,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2018-08-13 12:50:13-04:00,14400,2018-08-13 12:50:13-04:00,14400,True,False,['kernel.py'],['c049c2aacb52d88d5ae545bcdb32c4c543a7dee1'],1,1,2,1,,,
d59a78a2fcc9c525984233b2c6be0c3e7b40bcb0,add args to allow customized tree model,xzzxzxxz,zhouxiang8421@gmail.com,xzzxzxxz,zhouxiang8421@gmail.com,2018-08-13 16:57:41-04:00,14400,2018-08-13 16:57:41-04:00,14400,True,False,['tree.py'],['f519cacdf3596f87b27e4c01ca016b393664346a'],1,2,3,1,0.0,0.0,0.0
6dd524c74e2eccbbb71b3fc751b27d38a616c9b0,"Refactor DeepExplainer and support TensorFlow 1.10

TensorFlow 1.10 changed how backprop worked internally and broke DeepExplainer, this fixes that. It also refactors DeepExplainer to better support a growing number of basic ops.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-14 21:53:25-07:00,25200,2018-08-14 21:53:25-07:00,25200,True,False,"['setup.py', 'deep.py', 'explainer.py', 'test_deep.py', 'test_linear.py']",['f519cacdf3596f87b27e4c01ca016b393664346a'],242,338,580,5,1.0,1.0,0.47368421052631576
0e3c7240e6e043c33f869fb9667bf84aa90e7f6a,fixed github data url for svmlight sparse dataset,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2018-08-15 14:45:50-04:00,14400,2018-08-15 14:45:50-04:00,14400,True,False,['datasets.py'],['0751c7f8e10efeb943f6197c145f40ca10712097'],3,1,4,1,0.0,0.0,0.0
ced373007982d86d52b906d98042a7648db9b4e7,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-08-15 16:55:20-07:00,25200,2018-08-15 16:55:20-07:00,25200,True,False,['README.md'],['4d3b983117409cbae7bc39b90cfc01322eee801c'],2,2,4,1,,,
6068f813772fb084c2aea2c8f86def35c46ae505,Add warning note that DeepExplainer is unfinished,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-15 17:12:39-07:00,25200,2018-08-15 17:12:39-07:00,25200,True,False,"['deep.py', 'gradient.py', 'test_deep.py']",['ced373007982d86d52b906d98042a7648db9b4e7'],23,36,59,3,1.0,0.9,0.9
b00c68f240b2483605452b083bfc44b929ed60c7,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-08-15 20:02:21-07:00,25200,2018-08-15 20:02:21-07:00,25200,True,False,['README.md'],['c3f2a086ba8fda3f5e8908e21066afa5c8bbac2d'],2,2,4,1,,,
14cb00ab03284fa9310fb954441311bf5b2c1d10,"Make softmax attributions numerically stable

This is meant to address #225",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-16 08:40:27-07:00,25200,2018-08-16 08:40:27-07:00,25200,True,False,"['setup.py', 'deep.py', 'test_deep.py', 'test_kernel.py']",['54780e3a27f6a104092b7cde4cb9324aa3c9d3a8'],16,41,57,4,0.0,1.0,0.0
e54812e954615f3241d652dd3b860506b39aae0b,Fix image_plot off-by-one alignment,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-16 08:55:39-07:00,25200,2018-08-16 08:55:39-07:00,25200,True,False,"['image.py', 'test_kernel.py']",['14cb00ab03284fa9310fb954441311bf5b2c1d10'],3,3,6,2,,,
087c1542788def4f6894c21019fa93bdea3d8433,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-08-16 08:57:03-07:00,25200,2018-08-16 08:57:03-07:00,25200,True,False,['README.md'],['e54812e954615f3241d652dd3b860506b39aae0b'],1,1,2,1,,,
071c48e97fcc10330813c088babbe492976b283e,Update PyPI description,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-16 08:59:17-07:00,25200,2018-08-16 08:59:17-07:00,25200,True,False,['setup.py'],['087c1542788def4f6894c21019fa93bdea3d8433'],4,4,8,1,0.0,0.0,0.0
54e06c307135771725aa5a00ec14f72ab4817d5a,Replace recursion with while loop,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-16 12:04:57-07:00,25200,2018-08-16 12:04:57-07:00,25200,True,False,['deep.py'],['071c48e97fcc10330813c088babbe492976b283e'],23,5,28,1,0.0,0.0,0.0
fe4cd04b31157f313514999b37b33066a7909062,Replace lambdas to ensure tensorflow need not be imported,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-16 12:07:51-07:00,25200,2018-08-16 12:07:51-07:00,25200,True,False,['deep.py'],['54e06c307135771725aa5a00ec14f72ab4817d5a'],3,3,6,1,,,
f7e3e63771a95e478ed19e6990815dd0dbcdbbce,Add JupyterLab warning,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-17 16:52:12-07:00,25200,2018-08-17 16:52:12-07:00,25200,True,False,['force.py'],['fe4cd04b31157f313514999b37b33066a7909062'],1,2,3,1,,,
96fdfc65431df2a45dec3f3714d662a1f341ad15,"import warnings

to comply with jupyter notebooks",jochenater,ik.jochem@gmail.com,GitHub,noreply@github.com,2018-08-20 16:32:20+02:00,-7200,2018-08-20 16:32:20+02:00,-7200,True,False,['force.py'],['f7e3e63771a95e478ed19e6990815dd0dbcdbbce'],0,1,1,1,,,
54aa7e727f56ba87e169ec816979b7f009b1e001,"Fix minor KernelExplainer weighting issue

This also addresses an extra model call noted in #217",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-20 10:16:37-07:00,25200,2018-08-20 10:16:37-07:00,25200,True,False,"['setup.py', 'common.py', 'kernel.py']",['f7e3e63771a95e478ed19e6990815dd0dbcdbbce'],28,26,54,3,1.0,1.0,1.0
b206836fa71b08763d6a2300303c0ebf009f04c1,Fix duplicate model evaluations noted in #217,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-20 10:37:06-07:00,25200,2018-08-20 10:37:06-07:00,25200,True,False,['kernel.py'],['54aa7e727f56ba87e169ec816979b7f009b1e001'],4,19,23,1,0.0,0.0,0.0
57570d1638dce9b830930ede52c6adb39e5c8edc,Fix missing imports,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-20 10:45:03-07:00,25200,2018-08-20 10:45:03-07:00,25200,True,False,['force.py'],['d319e896da83cfe3b3aaf54b18650b2b2919498e'],0,3,3,1,,,
1b5aaae071849ce08d27b20f3338e4cb56b5944a,update to pass array of Tree objects,xzzxzxxz,zhouxiang8421@gmail.com,xzzxzxxz,zhouxiang8421@gmail.com,2018-08-21 22:35:48-04:00,14400,2018-08-21 22:35:48-04:00,14400,True,False,['tree.py'],['d59a78a2fcc9c525984233b2c6be0c3e7b40bcb0'],3,5,8,1,0.0,0.0,0.0
a6607be491e02362244dc1d7b5e51ba638a5c3b1,Add support for sklearn gradient boosting,Jacques Verre,jacquesverre@drivalytix.com,Jacques Verre,jacquesverre@drivalytix.com,2018-08-23 13:19:26+01:00,-3600,2018-08-23 13:19:26+01:00,-3600,True,False,['tree.py'],['57570d1638dce9b830930ede52c6adb39e5c8edc'],0,13,13,1,0.1,0.1,0.1
90e3282b350fe04298f261c9edd6e5b6cea6f84f,Fix undefined variable name,Jacques Verre,jacquesverre@drivalytix.com,Jacques Verre,jacquesverre@drivalytix.com,2018-08-23 13:20:09+01:00,-3600,2018-08-23 13:20:09+01:00,-3600,True,False,['tree.py'],['a6607be491e02362244dc1d7b5e51ba638a5c3b1'],2,2,4,1,,,
47e52f90bed1d0fa74fc2e438f8ccd4b76a63e51,improve performance for sparse matrix input in kernel explainer,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2018-08-23 15:00:20-04:00,14400,2018-08-23 15:00:20-04:00,14400,True,False,"['common.py', 'kernel.py', 'test_kernel.py']",['57570d1638dce9b830930ede52c6adb39e5c8edc'],12,22,34,3,0.0,0.0,0.6666666666666666
80125e4b1953087be8e97cd77334892d52f43f43,Remove print statement,Jacques Verre,jacquesverre@drivalytix.com,Jacques Verre,jacquesverre@drivalytix.com,2018-08-23 22:17:31+01:00,-3600,2018-08-23 22:17:31+01:00,-3600,True,False,['tree.py'],['90e3282b350fe04298f261c9edd6e5b6cea6f84f'],1,0,1,1,1.0,1.0,1.0
359a3a45461996d442ff962594e6c9a01a393f89,Remove print statements,Jacques Verre,jacquesverre@drivalytix.com,Jacques Verre,jacquesverre@drivalytix.com,2018-08-23 22:44:46+01:00,-3600,2018-08-23 22:44:46+01:00,-3600,True,False,['tree.py'],['80125e4b1953087be8e97cd77334892d52f43f43'],1,0,1,1,0.0,0.0,0.0
be4a6fd9fc54997312cc299a0d55155715e32100,Added unit tests for gradient boosting,Jacques Verre,jacquesverre@drivalytix.com,Jacques Verre,jacquesverre@drivalytix.com,2018-08-23 22:45:37+01:00,-3600,2018-08-23 22:45:37+01:00,-3600,True,False,['test_tree.py'],['359a3a45461996d442ff962594e6c9a01a393f89'],0,34,34,1,1.0,1.0,1.0
96c8908e0aa2407a12aa788826f2e9b73babd625,Comment out unused line,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-23 17:40:44-07:00,25200,2018-08-23 17:40:44-07:00,25200,True,False,['kernel.py'],['57570d1638dce9b830930ede52c6adb39e5c8edc'],1,1,2,1,1.0,1.0,1.0
a921ccd2d38a4677ac445375fb4e928305bf10d7,Fix unused tree constructor,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-23 17:48:33-07:00,25200,2018-08-23 17:48:33-07:00,25200,True,False,['tree.py'],['651babd0afa9706e1e9b193ea13808451fd4e30f'],18,18,36,1,0.0,0.0,
d34f175e83e4703d8427b0034a57441736188aa9,Update setup.py for 0.24.0,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-23 17:55:28-07:00,25200,2018-08-23 17:55:28-07:00,25200,True,False,['setup.py'],['a921ccd2d38a4677ac445375fb4e928305bf10d7'],1,1,2,1,,,
960191e11e117380eab89fd88bf4b31cc891c5a9,Added support for matplotlib additive plot,Jacques Verre,jacquesverre@drivalytix.com,Jacques Verre,jacquesverre@drivalytix.com,2018-08-26 12:51:26+01:00,-3600,2018-08-26 12:51:26+01:00,-3600,True,False,"['force.py', 'force_matplotlib.py']",['d34f175e83e4703d8427b0034a57441736188aa9'],8,380,388,2,0.0,0.011673151750972763,0.03501945525291829
b272dfaf51ba054d1a4ea12989387f0c4cff441a,Faster KernelExplainer. More benchmark code.,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-27 10:26:50-07:00,25200,2018-08-27 10:26:50-07:00,25200,True,False,"['setup.py', '__init__.py', '__init__.py', 'methods.py', 'metrics.py', 'plots.py', 'scorers.py', 'kernel.py', 'linear.py', '__init__.py', 'lime.py', 'treegini.py']",['d34f175e83e4703d8427b0034a57441736188aa9'],136,483,619,12,0.512987012987013,0.461038961038961,0.2987012987012987
79e4790399cba40155534e8e138c0b07dcc9dc0f,Wrap optional import in try-catch,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-27 10:31:21-07:00,25200,2018-08-27 10:31:21-07:00,25200,True,False,['lime.py'],['b272dfaf51ba054d1a4ea12989387f0c4cff441a'],3,5,8,1,,,
b1a6838c44b7745e93baa0efae329d662b65687f,Added modularity,jverre-drivalytix,jacques.verre@drivalytix.com,jverre-drivalytix,jacques.verre@drivalytix.com,2018-08-27 19:47:36+01:00,-3600,2018-08-27 19:47:36+01:00,-3600,True,False,['force_matplotlib.py'],['960191e11e117380eab89fd88bf4b31cc891c5a9'],130,152,282,1,1.0,1.0,1.0
7b607729406172667cec5b963703f388a65f50af,More benchmarking code,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-27 15:50:34-07:00,25200,2018-08-27 15:50:34-07:00,25200,True,False,"['__init__.py', 'models.py', 'run.py']",['79e4790399cba40155534e8e138c0b07dcc9dc0f'],3,78,81,3,0.2,1.0,0.2
c642413d563a0b347801afbc884923ff7ced0ab1,Try and make py27 happy,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-27 17:27:13-07:00,25200,2018-08-27 17:27:13-07:00,25200,True,False,"['__init__.py', 'run.py']",['7b607729406172667cec5b963703f388a65f50af'],5,22,27,2,0.75,1.0,0.25
942ed833e5a88030f5b16951dd251079c453da7d,Fix import typo,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-27 19:20:28-07:00,25200,2018-08-27 19:20:28-07:00,25200,True,False,['__init__.py'],['c642413d563a0b347801afbc884923ff7ced0ab1'],1,1,2,1,,,
60a0902d1b04d66245e92f03ae03c11eed69aa0e,Fix for py27,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-27 21:35:32-07:00,25200,2018-08-27 21:35:32-07:00,25200,True,False,['run.py'],['942ed833e5a88030f5b16951dd251079c453da7d'],1,2,3,1,0.0,1.0,0.0
ef5a8ef3ccfdb609ed6cd781a79d71cbfd2d13d8,More benchmark code,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-29 11:50:30-07:00,25200,2018-08-29 11:50:30-07:00,25200,True,False,"['__init__.py', '__init__.py', 'methods.py', 'models.py', 'plots.py', 'run.py', 'scorers.py', 'tests.py', '__init__.py', 'lime.py', 'treegain.py', 'pytree.py']",['fbb803acd05794ad18b3437dceffde48b1022eaf'],324,549,873,12,0.0,0.0,1.0
6fb3c080784b1dd3fa4089d93e557cfff0801504,Fix unit test name conflict,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-29 12:25:25-07:00,25200,2018-08-29 12:25:25-07:00,25200,True,False,"['__init__.py', 'experiments.py', 'plots.py']",['ef5a8ef3ccfdb609ed6cd781a79d71cbfd2d13d8'],28,27,55,3,,,
d2042bab95bdd9c14f4bf7f1a8340bb6a2cf8733,Add keras model to benchmark,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-08-29 14:54:19-07:00,25200,2018-08-29 14:54:19-07:00,25200,True,False,"['experiments.py', 'methods.py', 'models.py', 'scorers.py']",['6fb3c080784b1dd3fa4089d93e557cfff0801504'],6,46,52,4,1.0,1.0,0.7391304347826086
e0e411e87bf66c551c1a1948dabb535254c623e5,Add Pytorch gradient explainer,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-08-31 14:25:38-04:00,14400,2018-08-31 14:25:38-04:00,14400,True,False,"['__init__.py', 'gradient_pytorch.py', 'test_gradient.py']",['d2042bab95bdd9c14f4bf7f1a8340bb6a2cf8733'],0,273,273,3,0.13095238095238096,0.5,0.35714285714285715
e19f60821d701addaa0009c5d55405a80f67582b,Refactor into current class,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-08-31 16:48:35-04:00,14400,2018-08-31 16:48:35-04:00,14400,True,False,"['__init__.py', 'gradient.py', 'gradient_pytorch.py', 'test_gradient.py']",['e0e411e87bf66c551c1a1948dabb535254c623e5'],227,185,412,4,0.7,1.0,0.3
48ae3e5cb482b38f9031ede5cad3bdc8afa23c77,Add notebooks,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-09-01 09:51:32-04:00,14400,2018-09-01 09:51:32-04:00,14400,True,False,"['Explain VGG16 on ImageNet (PyTorch).html', 'Explain VGG16 on ImageNet (PyTorch).ipynb']",['e19f60821d701addaa0009c5d55405a80f67582b'],0,12108,12108,2,,,
48fe9871d71933d8324c61a07a7a2ed7340663e9,Benchmark updates,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-09-01 09:02:11-07:00,25200,2018-09-01 09:02:11-07:00,25200,True,False,"['__init__.py', 'experiments.py', 'methods.py', 'metrics.py', 'scorers.py', 'datasets.py', 'linear.py']",['d2042bab95bdd9c14f4bf7f1a8340bb6a2cf8733'],112,214,326,7,0.2361111111111111,1.0,0.7777777777777778
d95407548c9ea74dbccea6d1c9d05fdc298754d0,Support functional Keras models in GradientExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-09-01 09:18:05-07:00,25200,2018-09-01 09:18:05-07:00,25200,True,False,"['experiments.py', 'gradient.py']",['48fe9871d71933d8324c61a07a7a2ed7340663e9'],0,7,7,2,0.0,0.0,0.0
1b0e50549cbb23254e5c89eca05f1862fc9f14da,Fix Queue import for py27,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-09-01 09:23:00-07:00,25200,2018-09-01 09:23:00-07:00,25200,True,False,['experiments.py'],['d95407548c9ea74dbccea6d1c9d05fdc298754d0'],1,4,5,1,,,
23969b09d9412ad9bd87aadee22c62c51669f063,"Add MNIST tests, move forward pass",Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-09-01 15:28:07-04:00,14400,2018-09-01 15:28:07-04:00,14400,True,False,"['Explain VGG16 on ImageNet (PyTorch).html', 'PyTorch Gradient Explainer MNIST example.html', 'Explain VGG16 on ImageNet (PyTorch).ipynb', 'PyTorch Gradient Explainer MNIST example.ipynb', 'gradient.py']",['48ae3e5cb482b38f9031ede5cad3bdc8afa23c77'],12111,12219,24330,5,,,
420a4639fb73d2f9082809452febbcca27c9caf9,Faster Keras bnechmarking,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-09-01 14:34:21-07:00,25200,2018-09-01 14:34:21-07:00,25200,True,False,"['experiments.py', 'methods.py', 'metrics.py', 'models.py']",['1b0e50549cbb23254e5c89eca05f1862fc9f14da'],23,59,82,4,0.0,1.0,0.7222222222222222
7756113a3962cfe59b1a9c64d333a92f722bf284,Add pytorch gradient explainer support for interim layer explanations,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-09-02 15:13:21-04:00,14400,2018-09-02 15:27:43-04:00,14400,True,False,['gradient.py'],['26f9c34ec94636d6326c07919224dd078d6aa9d6'],18,114,132,1,0.3968253968253968,0.15873015873015872,0.07936507936507936
a3705b2c66600b4af8e4509e6b19ce13520d07e2,Autodetect framework in gradient explainer,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-09-02 15:38:55-04:00,14400,2018-09-02 15:38:55-04:00,14400,True,False,"['gradient.py', 'test_gradient.py']",['7756113a3962cfe59b1a9c64d333a92f722bf284'],2,19,21,2,0.0,0.0,0.0
7d7537b9b0871da138f175109435071db3fc3b26,Add Imagenet notebook for the PyTorch gradient explainer,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-09-03 10:16:46-04:00,14400,2018-09-03 10:36:15-04:00,14400,True,False,"['Explain an Intermediate Layer of VGG16 on ImageNet (PyTorch).html', 'PyTorch Gradient Explainer MNIST example.html', 'Explain an Intermediate Layer of VGG16 on ImageNet (PyTorch).ipynb', 'PyTorch Gradient Explainer MNIST example.ipynb', 'gradient.py']",['a3705b2c66600b4af8e4509e6b19ce13520d07e2'],12217,12102,24319,5,,,
e8441649e88e4cd4be48381df54f5acb113d13ad,Better benchmark structure,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-09-03 12:37:29-07:00,25200,2018-09-03 12:37:29-07:00,25200,True,False,"['__init__.py', '__init__.py', 'experiments.py', 'measures.py', 'metrics.py', 'plots.py', 'scorers.py']",['26f9c34ec94636d6326c07919224dd078d6aa9d6'],521,521,1042,7,,,
6c089b2aad4894aee0cd4ac077ee23a8d1d248a4,Fix memory errors on PyTorch Gradient Explainer,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-09-03 17:03:01-04:00,14400,2018-09-03 20:06:22-04:00,14400,True,False,"['Explain an Intermediate Layer of VGG16 on ImageNet (PyTorch).html', 'Explain an Intermediate Layer of VGG16 on ImageNet (PyTorch).ipynb', 'gradient.py']",['7d7537b9b0871da138f175109435071db3fc3b26'],62,40,102,3,0.15384615384615385,0.38461538461538464,0.8461538461538461
8cbfc32067662853d57385441be25a1e0fc3d8f4,Make sure all tensors are on the right device,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-09-04 12:47:44-04:00,14400,2018-09-04 12:47:44-04:00,14400,True,False,['gradient.py'],['6c089b2aad4894aee0cd4ac077ee23a8d1d248a4'],3,8,11,1,0.0,0.0,0.0
7f75356fe4eb03ea386df63659567cb1385fc425,More benchmark data,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-09-04 17:38:10-07:00,25200,2018-09-04 17:38:10-07:00,25200,True,False,"['__init__.py', 'experiments.py', 'metrics.py', 'models.py', 'plots.py', 'datasets.py']",['e8441649e88e4cd4be48381df54f5acb113d13ad'],62,226,288,6,0.39655172413793105,0.13793103448275862,0.4827586206896552
e31b669bbb7de860291d51099cf8fc3e70918d8f,Add PyTorch Deep Explainer and test,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-09-08 16:05:37-04:00,14400,2018-09-10 19:24:24-04:00,14400,True,False,"['__init__.py', 'deep_pytorch.py', 'deep_tf.py', 'test_deep.py']",['ed284b6278813c5292d83dc2a22976a0fdedd4ec'],48,472,520,4,0.19256756756756757,0.47297297297297297,0.25
3c1ade69d8e4bf335ed0dacf80ac9baa6518fb65,Add MNIST notebook,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-09-10 20:22:01-04:00,14400,2018-09-10 20:34:17-04:00,14400,True,False,"['Front Page DeepExplainer MNIST Example.html', 'Keras LSTM for IMDB Sentiment Classification.html', 'PyTorch Deep Explainer MNIST example.html', 'PyTorch Deep Explainer MNIST example.ipynb']",['e31b669bbb7de860291d51099cf8fc3e70918d8f'],0,12233,12233,4,,,
89639aca7fe28086b0712705774d31bbf83a5774,"Search for modules recursively, add interim outputs",Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-09-13 18:21:07-04:00,14400,2018-09-14 17:33:44-04:00,14400,True,False,"['deep_pytorch.py', 'test_deep.py']",['3c1ade69d8e4bf335ed0dacf80ac9baa6518fb65'],61,104,165,2,0.3,0.8,0.325
8edca9989b7a04859dda37746ae67f2b1687145c,"Add docstrings and comments, improve memory use",Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-09-15 16:12:32-04:00,14400,2018-09-16 17:26:31-04:00,14400,True,False,"['__init__.py', 'deep_pytorch.py']",['89639aca7fe28086b0712705774d31bbf83a5774'],48,91,139,2,1.0,1.0,1.0
d8926187c363797f092bd20addb58b801df5b04f,More benchmark updates,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-10-02 07:54:54-07:00,25200,2018-10-02 07:54:54-07:00,25200,True,False,"['experiments.py', 'measures.py', 'methods.py', 'metrics.py', 'models.py', 'plots.py', 'treegain.py']",['ed284b6278813c5292d83dc2a22976a0fdedd4ec'],61,156,217,7,0.5192307692307693,0.5192307692307693,0.9615384615384616
32aee1cd242b44445e3f3d84748664a260be7467,Minor fixes for sampling explainer and force_plot,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-10-02 07:55:43-07:00,25200,2018-10-02 07:55:43-07:00,25200,True,False,"['sampling.py', 'force.py']",['d8926187c363797f092bd20addb58b801df5b04f'],0,5,5,2,0.0,0.0,0.0
e9c750a45fc027227c87dbfbe34ccc6143632aa1,Fix #269,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-10-02 10:33:23-07:00,25200,2018-10-02 10:33:23-07:00,25200,True,False,['linear.py'],['32aee1cd242b44445e3f3d84748664a260be7467'],13,14,27,1,,,
6b3ad06f784812d2af6897fd9b594114183e7b37,fixed bug in update_axis_limits and format_data,Omar Elbaghdadi,omar.elbaghdadi@ortec.com,Omar Elbaghdadi,omar.elbaghdadi@ortec.com,2018-10-03 11:42:18+02:00,-7200,2018-10-03 11:42:18+02:00,-7200,True,False,['force_matplotlib.py'],['e9c750a45fc027227c87dbfbe34ccc6143632aa1'],6,19,25,1,0.0,0.5384615384615384,0.46153846153846156
3702d020461aeb02f7cb698cab0bf4dc859bb4e3,Allow a custom list of trees as the model object,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-10-03 09:07:43-07:00,25200,2018-10-03 09:07:43-07:00,25200,True,False,['tree.py'],['1b5aaae071849ce08d27b20f3338e4cb56b5944a'],3,5,8,1,0.0,0.0,0.0
07972a8282efb9923b2718dec2b5132346028113,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-10-09 17:11:02-07:00,25200,2018-10-09 17:11:02-07:00,25200,True,False,['README.md'],['e2d7dc657ecabc8f6e95419c95ee6169cae8f24e'],2,1,3,1,,,
185a39e1f2b0087f5cf15f720990813fdcf891cb,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-10-10 09:54:37-07:00,25200,2018-10-10 09:54:37-07:00,25200,True,False,['README.md'],['07972a8282efb9923b2718dec2b5132346028113'],1,1,2,1,,,
49a4716b769d129144bb5a7ed2842b8b51aec4a6,Small fixes for v0.25,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-10-10 11:39:04-07:00,25200,2018-10-10 11:39:04-07:00,25200,True,False,"['__init__.py', 'datasets.py', 'tree.py']",['185a39e1f2b0087f5cf15f720990813fdcf891cb'],4,4,8,3,,,
45aaf9a01abd84fa52d10037af4d23390e858ea6,"Added support for independent treeshap with nonlinear functions (mse, logistic, logloss) of the output for Booster models",Hugh Chen,hughchen@tricycle.cs.washington.edu,Hugh Chen,hughchen@tricycle.cs.washington.edu,2018-10-18 10:49:55-07:00,25200,2018-10-18 10:49:55-07:00,25200,True,False,"['_cext.cc', 'tree.py', 'tree_shap.h', 'test_tree_indep.py']",['49a4716b769d129144bb5a7ed2842b8b51aec4a6'],4,733,737,4,0.06607142857142857,0.3196428571428571,0.3535714285714286
a564e84c5ba15d66d263005e2468260efb685c1e,"Fix #291

Add deep to the packaging in setup.py",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-10-19 10:35:14-07:00,25200,2018-10-19 10:35:14-07:00,25200,True,False,['setup.py'],['49a4716b769d129144bb5a7ed2842b8b51aec4a6'],1,4,5,1,0.0,0.0,0.0
4962593f5bcf9dbb98bbd3fcb4bcabd27892a4ff,Remove unneeded lines,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-10-19 10:46:44-07:00,25200,2018-10-19 10:46:44-07:00,25200,True,False,['_cext.cc'],['45aaf9a01abd84fa52d10037af4d23390e858ea6'],2,0,2,1,,,
ac94eb7403a664da80b25c5f4719e60942f900a2,Modified TreeExplainer to initialize based on desired dependence structure and attempted to modify tree_shap.h to avoid compilation errors,Hugh Chen,hughchen@bicycle.cs.washington.edu,Hugh Chen,hughchen@bicycle.cs.washington.edu,2018-10-22 10:15:30-07:00,25200,2018-10-22 10:15:30-07:00,25200,True,False,"['tree.py', 'tree_shap.h']",['45aaf9a01abd84fa52d10037af4d23390e858ea6'],90,109,199,2,0.0,0.0,0.0
614db36a80d96a76e93a3dfee511433e64cd3ef8,Updated tests to reflect changes,Hugh Chen,hughchen@bicycle.cs.washington.edu,Hugh Chen,hughchen@bicycle.cs.washington.edu,2018-10-22 10:56:00-07:00,25200,2018-10-22 10:56:00-07:00,25200,True,False,['test_tree_indep.py'],['87e5aa1f0c2538add826754e49efa90a6e219e27'],27,20,47,1,1.0,0.0,0.0
89e1f70f67251107877aab106bd4844e8d70861e,Changed initialization of node_stack variable,Hugh Chen,hughchen@tricycle.cs.washington.edu,Hugh Chen,hughchen@tricycle.cs.washington.edu,2018-10-22 16:04:29-07:00,25200,2018-10-22 16:04:29-07:00,25200,True,False,['tree_shap.h'],['614db36a80d96a76e93a3dfee511433e64cd3ef8'],1,1,2,1,,,
63902865992cb3c0f38a021b03f83e2fe17619f7,Add support for ExtraTreesRegressor.,Jimmy Wan,jimmy@novilabs.com,Jimmy Wan,jimmy@novilabs.com,2018-10-23 21:06:40+00:00,0,2018-10-23 21:06:40+00:00,0,True,False,"['tree.py', 'test_tree.py']",['a564e84c5ba15d66d263005e2468260efb685c1e'],17,24,41,2,0.0,0.5714285714285714,0.5714285714285714
46c782bf76b217eb9f810457a7873258eb8f4816,Update test_tree.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-10-24 13:55:13-07:00,25200,2018-10-24 13:55:13-07:00,25200,True,False,['test_tree.py'],['63902865992cb3c0f38a021b03f83e2fe17619f7'],0,16,16,1,1.0,1.0,1.0
8f7d9e19c13f063dc76863c929243d414c3a7308,Update test_tree.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-10-24 14:02:46-07:00,25200,2018-10-24 14:02:46-07:00,25200,True,False,['test_tree.py'],['46c782bf76b217eb9f810457a7873258eb8f4816'],2,2,4,1,,,
f58ba1c29e0dd7240c5296b4423c55f2a166153e,Update tree.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-10-25 09:45:57-07:00,25200,2018-10-25 09:45:57-07:00,25200,True,False,['tree.py'],['89e1f70f67251107877aab106bd4844e8d70861e'],3,3,6,1,,,
6ba439726f7b2790f63b7afbe3994d333c3d0be0,fix my typo,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-10-25 09:48:20-07:00,25200,2018-10-25 09:48:20-07:00,25200,True,False,['tree.py'],['f58ba1c29e0dd7240c5296b4423c55f2a166153e'],4,4,8,1,,,
66ea782dae144be7d0e51a56b5aa6810dd4b65d0,Rename ref_X to data for consistency with KenelExplainer,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-10-25 10:00:18-07:00,25200,2018-10-25 10:00:18-07:00,25200,True,False,['tree.py'],['6ba439726f7b2790f63b7afbe3994d333c3d0be0'],7,7,14,1,,,
07307dc444f9539813cf9f2281420f29b7ea5a50,Update test_tree_indep.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-10-25 10:10:24-07:00,25200,2018-10-25 10:10:24-07:00,25200,True,False,['test_tree_indep.py'],['66ea782dae144be7d0e51a56b5aa6810dd4b65d0'],7,7,14,1,,,
ba0a60a828664ac1a0995abc8cac679e9e7035c1,Update tree.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-10-25 10:31:50-07:00,25200,2018-10-25 10:31:50-07:00,25200,True,False,['tree.py'],['07307dc444f9539813cf9f2281420f29b7ea5a50'],2,1,3,1,1.0,1.0,1.0
9a97314469ca8db404c3838116ca335430c97777,Update test_tree_indep.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-10-25 10:32:58-07:00,25200,2018-10-25 10:32:58-07:00,25200,True,False,['test_tree_indep.py'],['ba0a60a828664ac1a0995abc8cac679e9e7035c1'],2,2,4,1,,,
00588b53f7103321862a689eacd0437894de9851,Added support for missing values in the cpp algorithm for independent treeshap,Hugh Chen,hughchen@tricycle.cs.washington.edu,Hugh Chen,hughchen@tricycle.cs.washington.edu,2018-10-25 15:38:26-07:00,25200,2018-10-25 15:38:26-07:00,25200,True,False,"['_cext.cc', 'tree.py', 'tree_shap.h']",['70646720d30753a2ba6d096195558261d0b9b5df'],71,127,198,3,0.0,0.0,0.3584905660377358
50ac5acbf148f084af48a86c2bff3259b2fb8fea,Modified independent tree shap to use np.nan to check for missing values,Hugh Chen,hughchen@tricycle.cs.washington.edu,Hugh Chen,hughchen@tricycle.cs.washington.edu,2018-10-25 16:09:07-07:00,25200,2018-10-25 16:09:07-07:00,25200,True,False,['tree.py'],['00588b53f7103321862a689eacd0437894de9851'],2,2,4,1,,,
3eda859979d31e4108a31dc7fabc3a3a34026d77,"Make unwound_path_sum faster.

This will speed up tree shap a bit",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-10-25 22:35:43-07:00,25200,2018-10-25 22:35:43-07:00,25200,True,False,['tree_shap.h'],['70646720d30753a2ba6d096195558261d0b9b5df'],10,10,20,1,1.0,0.0,1.0
73ba56cf356a3e04a24aceb7530a4d81af2fcaaf,WIP: xtick param (figuring out react),Jason Tam,JasonTam22@gmail.com,Jason Tam,JasonTam22@gmail.com,2018-10-26 12:31:29-04:00,14400,2018-10-26 12:31:29-04:00,14400,True,False,"['AdditiveForceArrayVisualizer.jsx', 'force.py']",['70646720d30753a2ba6d096195558261d0b9b5df'],8,14,22,2,0.16666666666666666,0.16666666666666666,0.8333333333333334
d04a5f6646a0a21da87c97eb57107b0f397b2698,oops,Jason Tam,JasonTam22@gmail.com,Jason Tam,JasonTam22@gmail.com,2018-10-26 14:30:04-04:00,14400,2018-10-26 14:30:04-04:00,14400,True,False,['AdditiveForceArrayVisualizer.jsx'],['73ba56cf356a3e04a24aceb7530a4d81af2fcaaf'],1,1,2,1,,,
d31932e2349b5301bc7e39391fe38bc3a7daedf8,check xticks iterable,Jason Tam,JasonTam22@gmail.com,Jason Tam,JasonTam22@gmail.com,2018-10-26 18:52:24-04:00,14400,2018-10-26 18:52:24-04:00,14400,True,False,['force.py'],['d04a5f6646a0a21da87c97eb57107b0f397b2698'],1,1,2,1,,,
a2b4f6746cc49c0c7e3825a4e2adddf20f9ac115,Added optimizations to the independent tree shap code,Hugh Chen,hughchen@tricycle.cs.washington.edu,Hugh Chen,hughchen@tricycle.cs.washington.edu,2018-10-27 13:24:39-07:00,25200,2018-10-27 13:24:39-07:00,25200,True,False,"['_cext.cc', 'tree_shap.h']",['50ac5acbf148f084af48a86c2bff3259b2fb8fea'],337,822,1159,2,1.0,1.0,1.0
d845a7b561c6870e1c5839a315730721a0f84738,Cleaned up the code a bit,Hugh Chen,hughchen@tricycle.cs.washington.edu,Hugh Chen,hughchen@tricycle.cs.washington.edu,2018-10-27 13:44:15-07:00,25200,2018-10-27 13:44:15-07:00,25200,True,False,"['_cext.cc', 'tree_shap.h']",['a2b4f6746cc49c0c7e3825a4e2adddf20f9ac115'],456,4,460,2,,,
90ae917004a563ce732b3b875486cc2ace27421a,scaleTime if xticks given,Jason Tam,JasonTam22@gmail.com,Jason Tam,JasonTam22@gmail.com,2018-10-28 20:58:21-04:00,14400,2018-10-28 20:58:21-04:00,14400,True,False,['AdditiveForceArrayVisualizer.jsx'],['d31932e2349b5301bc7e39391fe38bc3a7daedf8'],13,45,58,1,0.3181818181818182,0.7272727272727273,1.0
4bf9bfac73e19f980e3d30f7f0b584459f18ee83,default None xticks,Jason Tam,JasonTam22@gmail.com,Jason Tam,JasonTam22@gmail.com,2018-10-28 22:19:38-04:00,14400,2018-10-28 22:19:38-04:00,14400,True,False,['force.py'],['90ae917004a563ce732b3b875486cc2ace27421a'],1,1,2,1,,,
781f11797285282848ad9e459b677cdfbc104ef0,ts_fmt param for strftime,Jason Tam,JasonTam22@gmail.com,Jason Tam,JasonTam22@gmail.com,2018-10-28 22:50:18-04:00,14400,2018-10-28 22:50:18-04:00,14400,True,False,"['AdditiveForceArrayVisualizer.jsx', 'force.py']",['4bf9bfac73e19f980e3d30f7f0b584459f18ee83'],8,9,17,2,0.0,0.0,0.0
e4bd474b754a277bc6cd033f3993412fc6c8c892,update built bundle.js,Jason Tam,JasonTam22@gmail.com,Jason Tam,JasonTam22@gmail.com,2018-10-28 23:35:39-04:00,14400,2018-10-28 23:35:39-04:00,14400,True,False,['bundle.js'],['781f11797285282848ad9e459b677cdfbc104ef0'],16,13,29,1,0.0,0.0,1.0
a6afc84905d58d4b84f9597ce1b15e315b2e147e,unused import,Jason Tam,JasonTam22@gmail.com,Jason Tam,JasonTam22@gmail.com,2018-10-28 23:38:11-04:00,14400,2018-10-28 23:38:11-04:00,14400,True,False,['AdditiveForceArrayVisualizer.jsx'],['e4bd474b754a277bc6cd033f3993412fc6c8c892'],1,1,2,1,,,
226be328a72239d6e99279d4137e5412d50169a5,"Handle file opening using with statement.

Fix ResourceWarning...

/usr/local/lib/python3.7/site-packages/shap/plots/force.py:155: ResourceWarning: unclosed file <_io.TextIOWrapper name='/usr/local/lib/python3.7/site-packages/shap/plots/resources/bundle.js' mode='r' encoding='utf-8'>
  bundle_data = io.open(bundle_path, encoding=""utf-8"").read()",Jeremiah,4462211+jlewis91@users.noreply.github.com,GitHub,noreply@github.com,2018-10-29 11:38:38+01:00,-3600,2018-10-29 11:38:38+01:00,-3600,True,False,['force.py'],['e4f7511456262944cbd5f4b0f07c06c2c4fb5a3d'],2,5,7,1,1.0,1.0,1.0
494381e0d8b565cfcd2b841586460ef9075ab275,"Fix 3.7 deprecation warning

```
/usr/local/bin/ipython:1: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
```",Jeremiah,4462211+jlewis91@users.noreply.github.com,GitHub,noreply@github.com,2018-10-29 11:41:34+01:00,-3600,2018-10-29 11:41:34+01:00,-3600,True,False,['force.py'],['e4f7511456262944cbd5f4b0f07c06c2c4fb5a3d'],2,2,4,1,,,
d2be1814480b7a2ad704fa5ae6f496ec26017582,Ensure Python 2 compatibility,Jeremiah,4462211+jlewis91@users.noreply.github.com,GitHub,noreply@github.com,2018-10-30 10:34:16+01:00,-3600,2018-10-30 10:34:16+01:00,-3600,True,False,['force.py'],['494381e0d8b565cfcd2b841586460ef9075ab275'],3,8,11,1,,,
3da2d6d3b29cef9a8ddc45d296c22fb1cd49d31e,sample order by key,Jason Tam,JasonTam22@gmail.com,Jason Tam,JasonTam22@gmail.com,2018-11-01 12:16:17-04:00,14400,2018-11-01 12:16:17-04:00,14400,True,False,['AdditiveForceArrayVisualizer.jsx'],['a6afc84905d58d4b84f9597ce1b15e315b2e147e'],6,11,17,1,0.2,0.2,1.0
c163db8559d56ec87beb7551c1afabe1d4b0c02c,rename xticks to ordering_keys,Jason Tam,JasonTam22@gmail.com,Jason Tam,JasonTam22@gmail.com,2018-11-01 12:25:59-04:00,14400,2018-11-01 12:25:59-04:00,14400,True,False,"['AdditiveForceArrayVisualizer.jsx', 'force.py', 'bundle.js']",['3da2d6d3b29cef9a8ddc45d296c22fb1cd49d31e'],12,12,24,3,1.0,1.0,1.0
f94af4f8fb6da98b90f73e3dd147fb50bc31dbef,ADD: catboost tree explainer tutorial,canorbal,canorbal@gmail.com,canorbal,canorbal@gmail.com,2018-11-01 21:55:33+03:00,-10800,2018-11-01 21:55:33+03:00,-10800,True,False,['Catboost tutorial.ipynb'],['47c6a7d76696a1f2fd2b333e594ac5ac0f30d358'],0,592,592,1,,,
a5d9616bc34479240f6a6b838ae487097294778d,ordering_keys any num type,Jason Tam,JasonTam22@gmail.com,Jason Tam,JasonTam22@gmail.com,2018-11-04 19:17:46-05:00,18000,2018-11-04 19:17:46-05:00,18000,True,False,"['AdditiveForceArrayVisualizer.jsx', 'bundle.js']",['c163db8559d56ec87beb7551c1afabe1d4b0c02c'],5,12,17,2,0.2222222222222222,0.0,1.0
03c6d616359f1cc85721305be292fa2d74f69f0b,rename ts_fmt to ordering_keys_time_format,Jason Tam,JasonTam22@gmail.com,Jason Tam,JasonTam22@gmail.com,2018-11-04 21:10:06-05:00,18000,2018-11-04 21:10:06-05:00,18000,True,False,"['AdditiveForceArrayVisualizer.jsx', 'force.py', 'bundle.js']",['a5d9616bc34479240f6a6b838ae487097294778d'],12,12,24,3,,,
21bb2e3f9a631c41ccef6dbd7bcb6fb72b109bf3,"Complete refactor of TreeExplainer

This now supports various types of feature dependence.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-06 23:30:56-08:00,28800,2018-11-06 23:30:56-08:00,28800,True,False,"['_cext.cc', 'pytree.py', 'tree.py', 'colors.py', 'tree_shap.h']",['1330bd979e0fb2e943c44e99231e579c9b4f0999'],610,1862,2472,5,0.19791666666666666,0.3576388888888889,0.2048611111111111
1a70e2b0faf068cc6325e618c85e81088cda86f8,Add tree_shap.h to the pip package.,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-07 16:26:14-08:00,28800,2018-11-07 16:26:14-08:00,28800,True,False,['setup.py'],['1330bd979e0fb2e943c44e99231e579c9b4f0999'],1,1,2,1,,,
47a4ac69d6ca9b80f1a2a0eb42410c65d7aa1875,tag 0.25.1,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-07 16:27:35-08:00,28800,2018-11-07 16:27:35-08:00,28800,True,False,['__init__.py'],['1a70e2b0faf068cc6325e618c85e81088cda86f8'],1,1,2,1,,,
169fe9d889308fb1266ae1a42f36eea6d5c1d3c6,fix sparse nonzero background case in shap and add validation test,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2018-11-09 10:57:08-05:00,18000,2018-11-09 11:17:44-05:00,18000,True,False,"['kernel.py', 'test_kernel.py']",['77687ff797e7363c30323de6966d46abeba9da49'],5,38,43,2,0.125,0.9583333333333334,1.0
f2627ad0a19f7a1100ed718cb73c89c1b69d4614,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-11-09 08:51:11-08:00,28800,2018-11-09 08:51:11-08:00,28800,True,False,['README.md'],['27c6911ba7a224147765273f80b5ec7f797e9560'],1,1,2,1,,,
890d85b49228c061a0d46ad76e0bbaa6b506d015,Fixed #305 issue with tf.concat in DeepExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-09 11:49:13-08:00,28800,2018-11-09 11:49:13-08:00,28800,True,False,"['__init__.py', '__init__.py', 'deep_tf.py']",['f2627ad0a19f7a1100ed718cb73c89c1b69d4614'],3,17,20,3,0.9090909090909091,0.9090909090909091,0.2727272727272727
dc189dc7f46dc04d5511269329fe8eb1849f170f,Fix bug in pytorch deep explainer,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-11-10 08:40:28-05:00,18000,2018-11-10 08:40:28-05:00,18000,True,False,['deep_pytorch.py'],['890d85b49228c061a0d46ad76e0bbaa6b506d015'],0,2,2,1,0.0,0.0,0.0
964a6fe285b6297ae95f189630c3ba3f24ea320f,Add regression test to pytorch deep explainer,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2018-11-10 08:41:52-05:00,18000,2018-11-10 08:51:00-05:00,18000,True,False,['test_deep.py'],['dc189dc7f46dc04d5511269329fe8eb1849f170f'],0,66,66,1,0.3448275862068966,1.0,0.7413793103448276
bbf9571306397fe01b3d37c8ab416f22fcbdda67,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-11-10 14:11:53-08:00,28800,2018-11-10 14:11:53-08:00,28800,True,False,['README.md'],['1e770087279455784329fb98bbae931b0685784e'],1,1,2,1,,,
640ca222a6c2c3d8196e30a2d3de2f218cf19072,updates to allow for a dynamic reference,Avanti Shrikumar,avanti.shrikumar@gmail.com,Avanti Shrikumar,avanti.shrikumar@gmail.com,2018-11-10 21:07:22-05:00,18000,2018-11-10 21:07:22-05:00,18000,True,False,"['.gitignore', 'DeepExplainer Genomics Example.ipynb', 'deep_tf.py']",['1e770087279455784329fb98bbae931b0685784e'],9,427,436,3,0.0,0.0,0.0
ac96ad61bfc66cc505eb4a67d98c58db56eba9bb,"Version bump for dynamic ref functionality

Corresponding to adding dynamic reference functionality to the tensorflowdeep explainer",Av Shrikumar,avanti.shrikumar@gmail.com,GitHub,noreply@github.com,2018-11-10 21:11:22-05:00,18000,2018-11-10 21:11:22-05:00,18000,True,False,['__init__.py'],['640ca222a6c2c3d8196e30a2d3de2f218cf19072'],1,1,2,1,,,
81fcdd593eeac933a9759bd0f74b0161794840a5,Delete .gitignore,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-11-10 20:25:03-08:00,28800,2018-11-10 20:25:03-08:00,28800,True,False,['.gitignore'],['ac96ad61bfc66cc505eb4a67d98c58db56eba9bb'],4,0,4,1,,,
90c1095342adcd5ab6f1bfde50ae81cfbf87b1ed,deepsea pytorch explanation in progress,Avanti Shrikumar,avanti.shrikumar@gmail.com,Avanti Shrikumar,avanti.shrikumar@gmail.com,2018-11-11 16:57:45-05:00,18000,2018-11-11 16:57:45-05:00,18000,True,False,['PyTorch Deep Explainer DeepSEA example.ipynb'],['a1e891656deb4424f0b3a45d092d087db28796e4'],0,243,243,1,,,
aa36d0512a1d23efe385efbc6b3b98cb50d42c94,"Add optional noise when feature has less than 20 unique values.

Optionally add random noise to feature values if feature has less than 20 unique values.  May increase plot readability when feature is non-continuous.",ihopethiswillfi,ihopethiswillfi@yahoo.com,GitHub,noreply@github.com,2018-11-13 18:07:47+01:00,-3600,2018-11-13 18:07:47+01:00,-3600,True,False,['dependence.py'],['a1e891656deb4424f0b3a45d092d087db28796e4'],1,14,15,1,0.0,0.0,0.0
4b96252b3158e4321475dbbf2aab45036cc0c224,Complete rewrite of TreeExplainer to support loss explanations,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-13 13:29:39-08:00,28800,2018-11-13 13:29:39-08:00,28800,True,False,"['__init__.py', '_cext.cc', 'tree.py', 'tree_shap.h', 'test_tree.py', 'test_tree_indep.py']",['0cbfffe9bf20ed8e6023e3692f860003b338bfb7'],1133,1208,2341,6,0.0,0.0,0.5221843003412969
2bc484728a23486c51a74baa3c92a7bab4dbb7f8,"Improve independent tree shap

Fix performance issue and add progress bar",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-13 22:27:56-08:00,28800,2018-11-13 22:27:56-08:00,28800,True,False,['tree_shap.h'],['4b96252b3158e4321475dbbf2aab45036cc0c224'],11,32,43,1,0.0,0.8421052631578947,0.0
92c00ff32abe02d5f79ebe8042fa4b57bedbf83f,Add preliminary monitoring_plot,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-13 22:36:20-08:00,28800,2018-11-13 22:36:20-08:00,28800,True,False,"['__init__.py', 'monitoring.py']",['2bc484728a23486c51a74baa3c92a7bab4dbb7f8'],0,77,77,2,0.14285714285714285,1.0,0.14285714285714285
d35b7000b4d24041373c01e003afda488ea45931,"remove list comprehension

use np.min(np.diff(xval)) here to avoid the comprehension. Also set(xv) may not preserve ordering, so you may want to call sort on the xvals. If xvals isn't ordered then you might end up with a negative value for smallest_diff.

Co-Authored-By: ihopethiswillfi <ihopethiswillfi@yahoo.com>",Jacob McCright,jacobmcc@live.unc.edu,GitHub,noreply@github.com,2018-11-15 10:16:48+01:00,-3600,2018-11-15 10:16:48+01:00,-3600,True,False,['dependence.py'],['aa36d0512a1d23efe385efbc6b3b98cb50d42c94'],1,1,2,1,,,
a684b582909de262748787515c2310b963ead5ed,renamed noise to x_jitter,ihopethiswillfi,ihopethiswillfi@yahoo.com,ihopethiswillfi,ihopethiswillfi@yahoo.com,2018-11-15 10:58:17+01:00,-3600,2018-11-15 10:58:17+01:00,-3600,True,False,['dependence.py'],['d35b7000b4d24041373c01e003afda488ea45931'],8,8,16,1,,,
4079e27410f2cfb64f50a1be12f265c037144e0d,removed arbitrary jitter cap of 20 unique X values,ihopethiswillfi,ihopethiswillfi@yahoo.com,ihopethiswillfi,ihopethiswillfi@yahoo.com,2018-11-15 11:00:21+01:00,-3600,2018-11-15 11:00:21+01:00,-3600,True,False,['dependence.py'],['a684b582909de262748787515c2310b963ead5ed'],1,1,2,1,,,
f3f06c1a2e3813b6edcd07a88e6e8923648ed76a,"Update shap/plots/dependence.py

Here is the deletion of the line previously in the for loop

Co-Authored-By: ihopethiswillfi <ihopethiswillfi@yahoo.com>",Jacob McCright,jacobmcc@live.unc.edu,GitHub,noreply@github.com,2018-11-15 18:56:42+01:00,-3600,2018-11-15 18:56:42+01:00,-3600,True,False,['dependence.py'],['4079e27410f2cfb64f50a1be12f265c037144e0d'],1,0,1,1,1.0,1.0,1.0
4830bb6c3aecf1ed677c83a2d1f2fbe6920c2cf8,"Update shap/plots/dependence.py

Co-Authored-By: ihopethiswillfi <ihopethiswillfi@yahoo.com>",Jacob McCright,jacobmcc@live.unc.edu,GitHub,noreply@github.com,2018-11-15 18:57:09+01:00,-3600,2018-11-15 18:57:09+01:00,-3600,True,False,['dependence.py'],['f3f06c1a2e3813b6edcd07a88e6e8923648ed76a'],1,1,2,1,,,
c5a1fb38a23a73ec30221f2801a95f8cc7d906e9,"vectorize FOR loop.

vectorize FOR loop.

Co-Authored-By: ihopethiswillfi <ihopethiswillfi@yahoo.com>",Jacob McCright,jacobmcc@live.unc.edu,GitHub,noreply@github.com,2018-11-15 19:19:19+01:00,-3600,2018-11-15 19:19:19+01:00,-3600,True,False,['dependence.py'],['4830bb6c3aecf1ed677c83a2d1f2fbe6920c2cf8'],1,1,2,1,,,
98ddb0358b970acf7081b72eb0c58c3cbb885dc3,"Fix windows VLA stack issue

Also flushes standard error for the C progress bar",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-15 17:39:09-08:00,28800,2018-11-15 17:39:09-08:00,28800,True,False,['tree_shap.h'],['92c00ff32abe02d5f79ebe8042fa4b57bedbf83f'],1,10,11,1,0.0,1.0,0.0
c4816d7c9a51030d1971496fe80bd352e4bd8f29,try to fix alloc.h import on windows.,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-15 17:58:04-08:00,28800,2018-11-15 17:58:04-08:00,28800,True,False,['tree_shap.h'],['98ddb0358b970acf7081b72eb0c58c3cbb885dc3'],1,5,6,1,,,
e47433d9a3c740d74f1037ccf94926d304c7bd37,Update devnull for Windows,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-15 21:28:07-08:00,28800,2018-11-15 21:28:07-08:00,28800,True,False,['tree.py'],['c4816d7c9a51030d1971496fe80bd352e4bd8f29'],5,3,8,1,,,
a350e896adb754ef37a67eb1b302255ff3a440c9,Fix os.devnull problem on windows,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-16 08:59:19-08:00,28800,2018-11-16 08:59:19-08:00,28800,True,False,"['tree.py', 'test_gradient.py']",['e47433d9a3c740d74f1037ccf94926d304c7bd37'],5,15,20,2,1.0,1.0,1.0
f33ad6b9ab5b280d2874e394355eaae16e44d7a7,ADD: speed comparison test for gradient boosting libraries,canorbal,canorbal@gmail.com,canorbal,canorbal@gmail.com,2018-11-21 16:44:41+03:00,-10800,2018-11-21 16:44:41+03:00,-10800,True,False,['speed_comparison.ipynb'],['46dbca7f677a9913980f6614c4dfb413da76c4c5'],0,813,813,1,,,
3ef7c2ef5b425df23c05d7b7cbc7cab5609a2870,Add approximate method and clean up tree.py imports,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-21 14:51:59-08:00,28800,2018-11-21 14:51:59-08:00,28800,True,False,"['tree.py', 'tree_shap.h']",['a350e896adb754ef37a67eb1b302255ff3a440c9'],497,132,629,2,0.07246376811594203,0.30434782608695654,0.18840579710144928
4bd41ea9592475370905eadd47f6b4879eeebf49,Add initial errata PDF for the NIPS paper.,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-23 09:33:52-08:00,28800,2018-11-23 09:33:52-08:00,28800,True,False,['SHAP_NIPS_2017_Errata.pdf'],['763cc05e41320952dcc92ecd1fac3db7e6199272'],0,0,0,1,,,
078b593b6e3c9d42cc625130e767f3a0fca09dfe,Add support for custom multi-class colors #336,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-11-23 12:20:28-08:00,28800,2018-11-23 12:20:28-08:00,28800,True,False,['summary.py'],['4bd41ea9592475370905eadd47f6b4879eeebf49'],2,7,9,1,0.0,0.0,0.0
f5d53ac12b0dfa27e48bf8dab5251cd13dbb7785,UPD: shap perfomance comparison,canorbal,canorbal@gmail.com,canorbal,canorbal@gmail.com,2018-11-26 20:11:41+03:00,-10800,2018-11-26 20:11:41+03:00,-10800,True,False,['Perfomance Comparison.ipynb'],['f33ad6b9ab5b280d2874e394355eaae16e44d7a7'],3,3,6,1,,,
318623860df7ea61d9cc5482927cff7d081b0814,Fix: using x_jitter produces a blank graph if X-values contain NaNs,ihopethiswillfi,ihopethiswillfi@yahoo.com,ihopethiswillfi,ihopethiswillfi@yahoo.com,2018-12-06 10:36:45+01:00,-3600,2018-12-06 10:36:45+01:00,-3600,True,False,['dependence.py'],['5d5f1c4136175fd7240b9cd05d4d31c6a212c5fa'],1,5,6,1,0.0,0.0,0.0
5029de1825e6b872942d617288ab62da1747cd6f,Only apply jitter if we have at least 2 unique x-values after removing NaNs,ihopethiswillfi,ihopethiswillfi@yahoo.com,ihopethiswillfi,ihopethiswillfi@yahoo.com,2018-12-06 10:48:15+01:00,-3600,2018-12-06 10:48:15+01:00,-3600,True,False,['dependence.py'],['318623860df7ea61d9cc5482927cff7d081b0814'],3,4,7,1,0.0,0.0,0.0
91c38ac0ac504cfc52d0cb89a8558cb3cab60092,Work around invalid JSON from XGBoost,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-10 16:28:09+01:00,-3600,2018-12-10 16:28:09+01:00,-3600,True,False,"['settings.json', 'Keras LSTM for IMDB Sentiment Classification.ipynb', '_cext.cc', '_cext.cpython-37m-darwin.so', 'tree.py', 'tree_shap.h']",['5d5f1c4136175fd7240b9cd05d4d31c6a212c5fa'],37,123,160,6,0.07692307692307693,0.0,0.07692307692307693
f64c48eeeb6a86e680bc23fd9c030407a092db1d,fix typos,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-10 16:42:05+01:00,-3600,2018-12-10 16:42:05+01:00,-3600,True,False,['tree_shap.h'],['5641cce83bcf6a722ac939c233a87aa1f64965df'],94,12,106,1,1.0,1.0,1.0
d5262ff3b5167b5ff728d5b5c58ce8443fd4ecd5,Potential fix to #351,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-10 19:30:46+01:00,-3600,2018-12-10 19:30:46+01:00,-3600,True,False,"['webpack.config.js', 'bundle.js']",['f64c48eeeb6a86e680bc23fd9c030407a092db1d'],14,6,20,2,0.0,0.08774193548387096,0.15354838709677418
732a3d20706fd785c6093ea3ab050ccecc7e4067,add support for quantile estimator,dmilad,dmilad@gmail.com,dmilad,dmilad@gmail.com,2018-12-10 13:50:00-08:00,28800,2018-12-10 13:50:00-08:00,28800,True,False,['tree.py'],['5d5f1c4136175fd7240b9cd05d4d31c6a212c5fa'],1,3,4,1,0.0,0.0,1.0
b98c62aeb7d4697cc4d9ed2c0a51dddbe63a0159,add unit tests,dmilad,dmilad@gmail.com,dmilad,dmilad@gmail.com,2018-12-10 13:50:54-08:00,28800,2018-12-10 13:50:54-08:00,28800,True,False,"['tree.py', 'test_tree.py']",['732a3d20706fd785c6093ea3ab050ccecc7e4067'],3,37,40,2,1.0,1.0,1.0
61115c8374cef377eff81f80603a3d220c8f2926,Create Fitting a Linear Simulation with XGBoost.ipynb,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-11 14:39:15+01:00,-3600,2018-12-11 14:39:15+01:00,-3600,True,False,['Fitting a Linear Simulation with XGBoost.ipynb'],['d5262ff3b5167b5ff728d5b5c58ce8443fd4ecd5'],0,872,872,1,,,
210e5f7d51e81c2aa68eb78d02470a73a7f6051f,Update tree.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-12-12 21:26:28+01:00,-3600,2018-12-12 21:26:28+01:00,-3600,True,False,['tree.py'],['b98c62aeb7d4697cc4d9ed2c0a51dddbe63a0159'],2,2,4,1,,,
3662831bdfc646326fa1473f02c44ad97c54940e,Fix issue with coloring by NaN values,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-12 21:40:38+01:00,-3600,2018-12-12 21:40:38+01:00,-3600,True,False,['dependence.py'],['61115c8374cef377eff81f80603a3d220c8f2926'],1,8,9,1,0.0,0.0,0.0
4fbe0a5e6218f1576926038b0c19140f1425060d,Handle NaNs in the plot,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-12 22:15:54+01:00,-3600,2018-12-12 22:15:54+01:00,-3600,True,False,['dependence.py'],['ce5eed24140bdb52904ae4bba3e068dbf73e658b'],7,14,21,1,0.0,0.0,0.0
6e2acaa1f3b03c2abcf4625f889cd3d66751683d,C++ verision of saabas approximation,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-13 22:06:43+01:00,-3600,2018-12-13 22:06:43+01:00,-3600,True,False,['_cext.cc'],['5d5f1c4136175fd7240b9cd05d4d31c6a212c5fa'],0,105,105,1,0.0,0.0,1.0
8d17e9b68489832e9cfc7b31c8333a13668c5ff2,Added new hclust method,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-13 22:10:39+01:00,-3600,2018-12-13 22:10:39+01:00,-3600,True,False,['common.py'],['40f2c71fedd44474d2786da13203851c56c052b4'],0,36,36,1,0.0,0.0,1.0
946d2aec3282338e071faa9eccaca37fcaf9d8ec,Added embedding plots,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-13 23:21:55+01:00,-3600,2018-12-13 23:21:55+01:00,-3600,True,False,"['__init__.py', 'common.py', 'dependence.py', 'embedding.py', 'force.py']",['8d17e9b68489832e9cfc7b31c8333a13668c5ff2'],71,196,267,5,0.06818181818181818,0.6363636363636364,0.0
4943be1827fdbd1f653ea36f12aa8069481c05d2,"Fix #356

compute the expected_value in the init function of TreeExplainer",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-14 09:05:19+01:00,-3600,2018-12-14 09:05:19+01:00,-3600,True,False,['tree.py'],['946d2aec3282338e071faa9eccaca37fcaf9d8ec'],0,3,3,1,0.0,0.0,0.0
606e7851bc3b2f10480ec333e5aabc2507d8eb6a,Account for NaNs in interaction approximation,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-14 13:36:05+01:00,-3600,2018-12-14 13:36:05+01:00,-3600,True,False,"['common.py', 'dependence.py', 'embedding.py']",['4943be1827fdbd1f653ea36f12aa8069481c05d2'],17,26,43,3,0.0,0.0,0.0
ca118e615903aff0ec193ef0dc83ad4285730a92,Fix JSON issue in XGBoost,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-14 13:59:08+01:00,-3600,2018-12-14 13:59:08+01:00,-3600,True,False,['tree.py'],['606e7851bc3b2f10480ec333e5aabc2507d8eb6a'],1,2,3,1,1.0,1.0,1.0
51ff1f710c551feaf8858337984f48de8f8fcafc,Fix bugs in last update,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-14 16:46:48+01:00,-3600,2018-12-14 16:46:48+01:00,-3600,True,False,"['common.py', 'tree.py']",['ca118e615903aff0ec193ef0dc83ad4285730a92'],2,2,4,2,,,
5346fd4001ebb5e536fae68afb4097658def300b,Add check around the expected value precompution,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-14 19:56:22+01:00,-3600,2018-12-14 19:56:22+01:00,-3600,True,False,['tree.py'],['51ff1f710c551feaf8858337984f48de8f8fcafc'],3,5,8,1,0.0,0.0,0.0
6da1b51efc8defbc9fb828361d74e18715142185,Fix #357,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-14 21:42:22+01:00,-3600,2018-12-14 21:42:22+01:00,-3600,True,False,"['kernel.py', 'dependence.py']",['5346fd4001ebb5e536fae68afb4097658def300b'],2,2,4,2,,,
7da342eb108a53273f139abb6ae69c4d0437c966,"Fix #358

This way we don't complain about warnings.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-17 12:12:45-07:00,25200,2018-12-17 12:12:45-07:00,25200,True,False,"['tree.py', 'tree_shap.h']",['6da1b51efc8defbc9fb828361d74e18715142185'],5,4,9,2,1.0,1.0,1.0
8c771485ac4788bfc7fac3bb0f8101c1c204299d,UPD: performance comparison,canorbal,canorbal@gmail.com,canorbal,canorbal@gmail.com,2018-12-19 15:40:53+03:00,-10800,2018-12-19 15:40:53+03:00,-10800,True,False,['Perfomance Comparison.ipynb'],['f5d53ac12b0dfa27e48bf8dab5251cd13dbb7785'],431,225,656,1,,,
9009d3bc265ced9cf9585ab6c1f691f559d6bf2f,updated pytorch class for pytorch 1.0.0,vmarinescu,rstudio@example.com,vmarinescu,rstudio@example.com,2018-12-19 17:17:47+00:00,0,2018-12-19 17:17:47+00:00,0,True,False,['deep_pytorch.py'],['7da342eb108a53273f139abb6ae69c4d0437c966'],6,6,12,1,,,
9d23ef3f9abafbd1d399c5e9307f5ec9533f46d4,interim layer fix,vmarinescu,rstudio@example.com,vmarinescu,rstudio@example.com,2018-12-22 10:46:59+00:00,0,2018-12-22 10:46:59+00:00,0,True,False,['deep_pytorch.py'],['9009d3bc265ced9cf9585ab6c1f691f559d6bf2f'],1,1,2,1,,,
cf5681082615327d265ad5f6408de868bbead00b,Update LinearExplainer and add sentiment analysis example,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-22 14:12:07-07:00,25200,2018-12-22 14:12:07-07:00,25200,True,False,"['Sentiment Analysis with Logistic Regression.ipynb', 'common.py', 'datasets.py', 'linear.py', 'dependence.py', 'embedding.py']",['db6c4db3951e7643fcdfcfaf5d859217d7888af0'],34,472,506,6,0.2692307692307692,0.3076923076923077,0.19230769230769232
378fdd0a25051f40542b800cc59b397bcd5bf527,Add IMDB example dataset,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-22 14:14:49-07:00,25200,2018-12-22 14:14:49-07:00,25200,True,False,['imdb_train.txt'],['cf5681082615327d265ad5f6408de868bbead00b'],0,25000,25000,1,,,
4fb3265c463d592c9fa6793e5b2231ff00e44ef4,Fix LinearExplainer tests,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-22 14:21:05-07:00,25200,2018-12-22 14:21:05-07:00,25200,True,False,['test_linear.py'],['378fdd0a25051f40542b800cc59b397bcd5bf527'],3,3,6,1,,,
9011ec3ae0080223fe0fb7fc50c65a0c36baa729,Example LinearExplainer notebook,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2018-12-29 10:48:04-08:00,28800,2018-12-29 10:48:04-08:00,28800,True,False,['Sentiment Analysis with Logistic Regression.html'],['5e27543fe1b7b0123d92658ecc417a76d7bf7987'],0,12264,12264,1,,,
5f1445f6657c6639b7588aa0e718d4df43dca472,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2018-12-29 10:48:23-08:00,28800,2018-12-29 10:48:23-08:00,28800,True,False,['README.md'],['9011ec3ae0080223fe0fb7fc50c65a0c36baa729'],0,6,6,1,,,
fdb959b02710da26f804004021dbdfc0b78f586d,Add large background check for DeepExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-01 08:59:46-08:00,28800,2019-01-01 08:59:46-08:00,28800,True,False,"['.gitignore', '__init__.py', 'deep_tf.py']",['5f1445f6657c6639b7588aa0e718d4df43dca472'],2,7,9,3,0.0,0.0,0.0
9a9e089074b9f1325b298d7453b23eae472928f6,Fix windows issue with set_printoptions,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-01 09:08:49-08:00,28800,2019-01-01 09:08:49-08:00,28800,True,False,['test_kernel.py'],['fdb959b02710da26f804004021dbdfc0b78f586d'],1,1,2,1,,,
df22240d5693c6296a85d279da06c81167eb21dd,Avoid round() to make windows happy,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-01 09:41:38-08:00,28800,2019-01-01 09:41:38-08:00,28800,True,False,['tree_shap.h'],['9a9e089074b9f1325b298d7453b23eae472928f6'],2,2,4,1,,,
d10d5ad50d46037e49875e5cfd1d8b164c2fe57d,Clean up unused files.,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-01 10:07:26-08:00,28800,2019-01-01 10:07:26-08:00,28800,True,False,"['.gitignore', 'environment.pickle', 'index.doctree', 'basic.css', 'comment-bright.png', 'comment-close.png', 'comment.png', 'doctools.js', 'down-pressed.png', 'down.png', 'file.png', 'jquery.js', 'minus.png', 'plus.png', 'searchtools.js', 'up-pressed.png', 'up.png', 'websupport.js', 'genindex.html', 'index.html', 'objects.inv', 'search.html', 'searchindex.js']",['df22240d5693c6296a85d279da06c81167eb21dd'],331,1111,1442,23,0.5633802816901409,0.9295774647887324,0.9154929577464789
9786f29c882edc6f3ec49606049fd4d8859db811,Remove vscode config,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-01 10:10:52-08:00,28800,2019-01-01 10:10:52-08:00,28800,True,False,['settings.json'],['d10d5ad50d46037e49875e5cfd1d8b164c2fe57d'],15,0,15,1,,,
fd4c02cb05c155ca76032f74d591fc67595dea53,"Better plots NaN values in dependence_plots

Works around a bug in matplotlib when coloring with NaN values in a scatter plot https://github.com/matplotlib/matplotlib/issues/4354",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-01 13:01:25-08:00,28800,2019-01-01 13:01:25-08:00,28800,True,False,"['__init__.py', 'colors.py', 'dependence.py']",['9786f29c882edc6f3ec49606049fd4d8859db811'],18,33,51,3,0.0,0.0,0.0
76eb3adb69e843824de3f820329472dc235e6eb2,Add interim layer tests for pytorch explainers,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2019-01-03 08:35:49-05:00,18000,2019-01-03 08:35:49-05:00,18000,True,False,"['test_deep.py', 'test_gradient.py']",['5e27543fe1b7b0123d92658ecc417a76d7bf7987'],124,145,269,2,0.0,1.0,0.0
a68b345b00dd8fb49e668f13310d80bc12d3d1ba,Remove Pytorch 1.0 warnings from integrated gradient explainer,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2019-01-03 08:51:47-05:00,18000,2019-01-03 08:51:47-05:00,18000,True,False,['gradient.py'],['76eb3adb69e843824de3f820329472dc235e6eb2'],7,8,15,1,0.0,0.0,0.0
e590d3c3fa9a87353d935c7748996a01b4c05f1f,Update benchmark tests,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-05 11:45:55-08:00,28800,2019-01-05 11:45:55-08:00,28800,True,False,"['experiments.py', 'methods.py']",['fd4c02cb05c155ca76032f74d591fc67595dea53'],7,17,24,2,0.0,1.0,0.0
5e141142e48e6a9b3356f51a21d7e847a0f50bd5,Fix handling of DecisionTreeClassifier to normalize to prob,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-05 13:03:32-08:00,28800,2019-01-05 13:03:32-08:00,28800,True,False,['tree.py'],['e590d3c3fa9a87353d935c7748996a01b4c05f1f'],1,1,2,1,,,
67fb7ff1f423ec436ef26504e5048a3fd89d1253,Bump version after fix,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-05 13:06:38-08:00,28800,2019-01-05 13:06:38-08:00,28800,True,False,['__init__.py'],['5e141142e48e6a9b3356f51a21d7e847a0f50bd5'],1,1,2,1,,,
f8a452794641351b64cc24b182ec8e11aa0ec696,Added tests to classification benchmark,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-07 09:44:21-08:00,28800,2019-01-07 09:44:21-08:00,28800,True,False,['experiments.py'],['bd5fa613b42e05fe575ee764b1a96fef7a603cf7'],2,2,4,1,,,
b834b8c7613f99f7bdee39e0cc56f67294451f8c,Added ind tree shap,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-07 10:30:08-08:00,28800,2019-01-07 10:30:08-08:00,28800,True,False,"['experiments.py', 'methods.py']",['f8a452794641351b64cc24b182ec8e11aa0ec696'],6,14,20,2,1.0,1.0,1.0
186beb98f8c731189c7fdae7697d6fc5af9c2843,Update consistency garuntee list,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-07 13:29:52-08:00,28800,2019-01-07 13:29:52-08:00,28800,True,False,['metrics.py'],['b834b8c7613f99f7bdee39e0cc56f67294451f8c'],1,2,3,1,0.0,1.0,0.0
9d12206f14d0007b41e221e7f2a1c31789daa446,Another consistency list update,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-07 13:31:05-08:00,28800,2019-01-07 13:31:05-08:00,28800,True,False,['metrics.py'],['186beb98f8c731189c7fdae7697d6fc5af9c2843'],1,1,2,1,,,
f149fe326b1996a7eba5d23f4673c04d153ef6ad,Enable multi-output indenpendent tree shap,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-09 11:57:57-08:00,28800,2019-01-09 11:57:57-08:00,28800,True,False,"['tree.py', 'force_matplotlib.py', 'tree_shap.h']",['9d12206f14d0007b41e221e7f2a1c31789daa446'],103,105,208,3,,,
80fe4e7ac3895ffb13f21d71bdfe2d990803f340,bump version,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-09 13:16:49-08:00,28800,2019-01-09 13:16:49-08:00,28800,True,False,['__init__.py'],['f149fe326b1996a7eba5d23f4673c04d153ef6ad'],1,1,2,1,,,
b58a856d8ec99dd5b55037859959057bbfc3b87c,bump benchmark version,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-09 14:04:55-08:00,28800,2019-01-09 14:04:55-08:00,28800,True,False,['__init__.py'],['80fe4e7ac3895ffb13f21d71bdfe2d990803f340'],1,1,2,1,,,
98bf721cc063222feb2456504d20396eeba6a6aa,"Partially fix #384

The real solution is to not let loss explanations also break",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-09 16:22:45-08:00,28800,2019-01-09 16:22:45-08:00,28800,True,False,['tree.py'],['f8a452794641351b64cc24b182ec8e11aa0ec696'],2,5,7,1,0.0,0.0,1.0
7390022c88e98d1028d65e3902753ce4c7dfb2df,"Fix issue #385

removed redundant ""len"" function",Tambah,nitzanartzi@gmail.com,GitHub,noreply@github.com,2019-01-10 15:30:43+02:00,-7200,2019-01-10 15:30:43+02:00,-7200,True,False,['tree.py'],['98bf721cc063222feb2456504d20396eeba6a6aa'],1,1,2,1,,,
310c9474b42a8e69c2cd8b7c352164f699972d6a,Include zeros in benchmark area tests,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-10 16:48:14-08:00,28800,2019-01-10 16:48:14-08:00,28800,True,False,"['__init__.py', 'metrics.py', 'datasets.py', 'tree.py']",['b58a856d8ec99dd5b55037859959057bbfc3b87c'],4,35,39,4,0.8125,0.8125,1.0
edf0b7a4d6b16fc12805a2b696bf437a4a6e059d,Add independentlinear60 test dataset,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-13 22:31:29-08:00,28800,2019-01-13 22:31:29-08:00,28800,True,False,"['experiments.py', 'models.py']",['310c9474b42a8e69c2cd8b7c352164f699972d6a'],0,52,52,2,1.0,1.0,1.0
0310dc63b767e5977edfba0495b53cd90b106fa1,fix benchmark plot colors,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-14 10:38:40-08:00,28800,2019-01-14 10:38:40-08:00,28800,True,False,['plots.py'],['edf0b7a4d6b16fc12805a2b696bf437a4a6e059d'],1,1,2,1,,,
9933e31b2d8cb13e02315a1d079c6af35a38d7be,Fix gbm output for benchmark,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-14 16:54:12-08:00,28800,2019-01-14 16:54:12-08:00,28800,True,False,"['measures.py', 'models.py', 'common.py', 'tree.py']",['0310dc63b767e5977edfba0495b53cd90b106fa1'],40,71,111,4,1.0,1.0,0.7
2d76fa007d66973045b4cca2bb568f3c48837db7,Bump benchmark version,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-14 16:57:12-08:00,28800,2019-01-14 16:57:12-08:00,28800,True,False,"['__init__.py', 'experiments.py', 'methods.py']",['9933e31b2d8cb13e02315a1d079c6af35a38d7be'],6,6,12,3,,,
ecc171324c1543d84a9b8dfeaf8d6a7cc7488a8d,"Updated colors based on explicit Lch space choices

This gives a new better color set for multi-class bar charts, as well as a tweaked and improved global color scheme for plots.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-15 21:04:23-08:00,28800,2019-01-15 21:04:23-08:00,28800,True,False,"['setup.py', '__init__.py', 'plots.py', 'colors.py', 'dependence.py', 'embedding.py', 'summary.py']",['2d76fa007d66973045b4cca2bb568f3c48837db7'],76,125,201,7,0.5,0.5,0.5
08885c7febec9551d47f1fa306ffaad85dced532,Fix numerical precision mismatch with sklearn,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-15 21:06:23-08:00,28800,2019-01-15 21:06:23-08:00,28800,True,False,"['measures.py', 'metrics.py', 'models.py', 'tree.py']",['ecc171324c1543d84a9b8dfeaf8d6a7cc7488a8d'],21,28,49,4,0.0,0.0,1.0
425b341997fbda719d4718e844bdcee9ae9d4e9f,Fix scikit-image dependency,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-15 21:08:00-08:00,28800,2019-01-15 21:08:00-08:00,28800,True,False,['setup.py'],['08885c7febec9551d47f1fa306ffaad85dced532'],1,1,2,1,,,
981c59868f260acdbfffb773eb1f79b8556e2565,Re-include colors needed by image_plot,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-15 21:15:19-08:00,28800,2019-01-15 21:15:19-08:00,28800,True,False,['colors.py'],['425b341997fbda719d4718e844bdcee9ae9d4e9f'],16,16,32,1,,,
3bcefbb4a31e52c261c0c093ae205783d5b8ea77,Fix #393 and enable multiclass LinearExplainer,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-15 22:20:39-08:00,28800,2019-01-15 22:20:39-08:00,28800,True,False,['linear.py'],['981c59868f260acdbfffb773eb1f79b8556e2565'],1,4,5,1,0.0,0.0,1.0
397ed9278fc81c858d3188171dda7591531ccc0d,"Fix XGBoost JSON bug by loading direct from memory

The JSON dump of an XGBoost model actually is not quite exact due to the conversion to base-10. I found this to cause samples to go down different paths in some cases. This fixes that by loading directly from memory.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-16 21:55:01-08:00,28800,2019-01-16 21:55:01-08:00,28800,True,False,"['__init__.py', 'tree.py']",['3bcefbb4a31e52c261c0c093ae205783d5b8ea77'],27,183,210,2,0.10084033613445378,1.0,0.9915966386554622
2e23affac943898f764132e0f169c54de6f8782b,Make py27 happy,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-16 22:20:27-08:00,28800,2019-01-16 22:20:27-08:00,28800,True,False,['tree.py'],['397ed9278fc81c858d3188171dda7591531ccc0d'],1,1,2,1,,,
d58a99e681f37977355f750a0adad48ec011082e,Fix which class we explain for benchmark,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-17 10:33:51-08:00,28800,2019-01-17 10:33:51-08:00,28800,True,False,"['__init__.py', 'models.py']",['2e23affac943898f764132e0f169c54de6f8782b'],5,5,10,2,,,
67a08a04f2cba545ba5340a68b0a550c40bb30b9,Allow for a dynamic expected_value when explaining the loss,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-17 16:17:03-08:00,28800,2019-01-17 16:17:03-08:00,28800,True,False,"['Explaining the Loss of a Model.ipynb', '_cext.cc', 'tree.py', 'tree_shap.h']",['d58a99e681f37977355f750a0adad48ec011082e'],38,198,236,4,0.06451612903225806,0.0,0.6451612903225806
a1f49af95dcd439080f5bbe5bdfb59137dc0048c,Rename variable to match count,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-17 16:19:32-08:00,28800,2019-01-17 16:19:32-08:00,28800,True,False,['methods.py'],['67a08a04f2cba545ba5340a68b0a550c40bb30b9'],2,2,4,1,,,
d8d48ef892635895e53bb7f824ff972c037b16b9,Fix #388,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-01-17 17:40:39-08:00,28800,2019-01-17 17:40:39-08:00,28800,True,False,['README.md'],['50cb6d7cf88e1c913841c6c5f7aba0490c48a414'],1,1,2,1,,,
108f7d145ca0268f313d02f16aadb5864358b6b9,Fix indexing issue with benchmark,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-17 21:53:11-08:00,28800,2019-01-17 21:53:11-08:00,28800,True,False,['measures.py'],['50cb6d7cf88e1c913841c6c5f7aba0490c48a414'],2,2,4,1,,,
cc90a0b17f62a5a446a7b631cbc123a04d143e15,Account for potentially small datasets in benchmark test,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-17 22:17:22-08:00,28800,2019-01-17 22:17:22-08:00,28800,True,False,['methods.py'],['c154329e1c1f1711eddb9f8f00442cda2193244e'],1,1,2,1,,,
e14b78a7a7edad12ae6c40cfd38e45254efefaf0,"Add support for rank based feature selection in KernelExplainer

This allows `l1_reg=""rank(N)""` to be used to select the top N features as non-zero.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-18 09:03:00-08:00,28800,2019-01-18 09:03:00-08:00,28800,True,False,"['kernel.py', 'test_kernel.py']",['3ee6e0f785c93858b0feb128d3380c007a9c96b9'],12,42,54,2,1.0,1.0,1.0
a61b7fe079dd3e4de0c535fd3da4fdabf7b90e9b,"Depricate l1_reg=""auto"" in KernelExplainer",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-18 09:35:56-08:00,28800,2019-01-18 09:35:56-08:00,28800,True,False,['kernel.py'],['e14b78a7a7edad12ae6c40cfd38e45254efefaf0'],7,13,20,1,0.0,0.0,0.0
a2f530a25943f50476be76a91305f4d397e17569,Fix typo in last KernelExplainer commit,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-18 09:49:18-08:00,28800,2019-01-18 09:49:18-08:00,28800,True,False,['kernel.py'],['a61b7fe079dd3e4de0c535fd3da4fdabf7b90e9b'],2,2,4,1,,,
00631d3f2bf8eb045ca3f3bf0f972b2c796adab6,"Better load the objective of LightGBM

Fixed while working with the example in #392",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-18 17:01:45-08:00,28800,2019-01-18 17:01:45-08:00,28800,True,False,"['kernel.py', 'tree.py']",['a2f530a25943f50476be76a91305f4d397e17569'],10,15,25,2,0.0,0.0,1.0
8c057ff0197fa44fbe301b09a0e057f9a700e510,"Fix mac 10.14 builds

This fixes #399 #343 #369",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-21 10:38:18-08:00,28800,2019-01-21 10:38:18-08:00,28800,True,False,"['setup.py', 'methods.py', 'plots.py', 'datasets.py']",['00631d3f2bf8eb045ca3f3bf0f972b2c796adab6'],29,138,167,4,0.32653061224489793,0.42857142857142855,0.0
25cdb89aaf49fe20fffa9a40d5115fdc2382807d,Upgrade webpack-dev-server,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-21 10:50:40-08:00,28800,2019-01-21 10:50:40-08:00,28800,True,False,['package.json'],['8c057ff0197fa44fbe301b09a0e057f9a700e510'],2,2,4,1,,,
27da679f2304e577b2b17d680718e894fc11d65e,Clean up version tag,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-21 10:52:12-08:00,28800,2019-01-21 10:52:12-08:00,28800,True,False,['__init__.py'],['25cdb89aaf49fe20fffa9a40d5115fdc2382807d'],1,1,2,1,,,
e61f3f805830418f70da6a8d5d70ced4e48cb876,Fix issues with expected_value and transformed outputs,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-21 18:02:27-08:00,28800,2019-01-21 18:02:27-08:00,28800,True,False,"['_cext.cc', 'tree.py', 'tree_shap.h', 'test_tree.py']",['27da679f2304e577b2b17d680718e894fc11d65e'],73,323,396,4,0.10326086956521739,0.5706521739130435,0.0
a3de87ac0ee36c630b50997e3d59c64af236ed6b,"Allow XGBoost node weights to be overridden

This addresses an issue in #90 #29 #352",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-21 18:14:10-08:00,28800,2019-01-21 18:14:10-08:00,28800,True,False,"['__init__.py', 'tree.py']",['e61f3f805830418f70da6a8d5d70ced4e48cb876'],2,2,4,2,,,
16f5ea37aa0971388d4658121b0cac28081360c4,Mirror the tree limit use of sklearn API XGB models,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-22 12:27:23-08:00,28800,2019-01-22 12:27:23-08:00,28800,True,False,['tree.py'],['a3de87ac0ee36c630b50997e3d59c64af236ed6b'],8,31,39,1,0.0,0.0,0.0
2f126669907d0594d664b0c142cc602a6ea584fe,Fix tree_limit bug,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-22 12:39:39-08:00,28800,2019-01-22 12:39:39-08:00,28800,True,False,"['tree.py', 'test_tree.py']",['16f5ea37aa0971388d4658121b0cac28081360c4'],10,10,20,2,,,
cfff12fe3340823ba9e4ba2548a05f7e6345fff9,Fix bug in tree_limit check,HughChen,hugh.chen1@gmail.com,GitHub,noreply@github.com,2019-01-22 13:36:24-08:00,28800,2019-01-22 13:36:24-08:00,28800,True,False,['tree.py'],['2f126669907d0594d664b0c142cc602a6ea584fe'],1,1,2,1,,,
7d8b75551e8556e3559a23d55cd9f4a9380336fb,Fix plot colors on Python 2.7 by using float division,Pyry Jahkola,pyry.jahkola@iki.fi,Pyry Jahkola,pyry.jahkola@iki.fi,2019-01-23 16:48:04+02:00,-7200,2019-01-23 16:50:36+02:00,-7200,True,False,"['colors.py', 'dependence.py', 'force.py', 'summary.py']",['35ea9379a3c99e8010384e3ffcb7e2226169aa88'],1,7,8,4,,,
07cda811a3f75133e3cfb4abd02409b9bfa2a034,"Handle type size differences on windows.

Fixes #403",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-23 10:33:51-08:00,28800,2019-01-23 10:33:51-08:00,28800,True,False,"['_cext.cc', 'tree.py', 'dependence.py', 'embedding.py', 'force_matplotlib.py', 'image.py', 'monitoring.py', 'summary.py', 'tree_shap.h']",['2f126669907d0594d664b0c142cc602a6ea584fe'],57,80,137,9,0.0,0.6153846153846154,0.5769230769230769
bd7a457a80fd58668d4d817b29471fbb827206c5,Fix windows byte sizing issue during xgb load,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-23 12:57:45-08:00,28800,2019-01-23 12:57:45-08:00,28800,True,False,['tree.py'],['aff7ee81f33899f0d22972f1e8afff98f0ee7ef3'],3,3,6,1,,,
7cf9cda213bb36464d84adfbe07290bafe26da59,Downgrade numpy api usage to support older numpy's,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-23 14:08:07-08:00,28800,2019-01-23 14:08:07-08:00,28800,True,False,"['__init__.py', '_cext.cc']",['bd7a457a80fd58668d4d817b29471fbb827206c5'],15,15,30,2,1.0,1.0,0.0
806031126e20cfb32eeb8d9fd650a42e14e0787f,Fix #405,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-23 16:04:37-08:00,28800,2019-01-23 16:04:37-08:00,28800,True,False,['dependence.py'],['7cf9cda213bb36464d84adfbe07290bafe26da59'],1,2,3,1,0.0,0.0,0.0
be0b6b8285964843a6059e4c067270f78546e2c2,"Fix #407

Check for a string instead of an array",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-24 08:29:50-08:00,28800,2019-01-24 08:29:50-08:00,28800,True,False,['force.py'],['806031126e20cfb32eeb8d9fd650a42e14e0787f'],0,2,2,1,0.0,0.0,0.0
f8b2422ab810b7b493f12fbe760796557fe92f72,"Fix incorrect gray dots in summary plot #406

Gray dots should only be for nan feature values",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-24 09:16:29-08:00,28800,2019-01-24 09:16:29-08:00,28800,True,False,"['__init__.py', 'summary.py']",['14ab8b432d5bd62a56bb00b5991137add95f0170'],2,11,13,2,0.0,0.0,0.0
668f2e525f081d82e88b28aa5bee130b32584f7f,"Add save_html function

Related to #3",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-24 10:29:46-08:00,28800,2019-01-24 10:29:46-08:00,28800,True,False,"['__init__.py', 'force.py']",['f8b2422ab810b7b493f12fbe760796557fe92f72'],1,25,26,2,1.0,1.0,1.0
2885c9f69f57e23ad43170f115582d14c6aa2418,"Add fix for l1reg

- Fix for floats
- Convert old ""rank"" to ""num_features""",HughChen,hugh.chen1@gmail.com,GitHub,noreply@github.com,2019-01-24 11:28:13-08:00,28800,2019-01-24 11:28:13-08:00,28800,True,False,['kernel.py'],['668f2e525f081d82e88b28aa5bee130b32584f7f'],2,2,4,1,,,
7777a4d04a2948b3c0e70151c6d1d5714e4985fa,"Fix issue with dependence_plot with no interaction

Fixes #411",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-01-24 12:06:14-08:00,28800,2019-01-24 12:06:14-08:00,28800,True,False,"['dependence.py', 'test_dependence.py']",['286e031e82d952a652cbb108b968bd7937347273'],2,12,14,2,1.0,1.0,1.0
dc53ee14340b6614cbe44c5cfad8a0897029c141,"Fix #424

Create extra random samples to prevent an overflow.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-02-01 20:23:45-08:00,28800,2019-02-01 20:23:45-08:00,28800,True,False,['kernel.py'],['7777a4d04a2948b3c0e70151c6d1d5714e4985fa'],2,2,4,1,,,
5485f46867386657fb30b01e4b6522675d0ddc97,fixed memory corruption error from TreeExplainer,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2019-02-05 13:43:23-05:00,18000,2019-02-05 17:52:31-05:00,18000,True,False,"['_cext.cc', 'test_tree.py']",['dc53ee14340b6614cbe44c5cfad8a0897029c141'],1,48,49,2,0.972972972972973,0.972972972972973,0.8918918918918919
e34ea56a916c3050aa1abdf914a81efc8ddb6bcd,Fix deprecation warning in numpy v1.16,Jeremiah,4462211+jlewis91@users.noreply.github.com,GitHub,noreply@github.com,2019-02-08 11:25:29+01:00,-3600,2019-02-08 11:25:29+01:00,-3600,True,False,['force.py'],['9ba759e1048989818b12c7c8325320878f60ab35'],1,1,2,1,,,
6a67d0eed32785eccb7b8b319095d4a3bf678830,Added support for skopt Random Forest and ExtraTrees Regressors. Added a small if statement to make the force graph a little nicer in the absence of feature values.,KKT,kajetan.k.tukendorf-beczynski@durham.ac.uk,KKT,kajetan.k.tukendorf-beczynski@durham.ac.uk,2019-02-10 16:36:58+00:00,0,2019-02-10 16:36:58+00:00,0,True,False,"['tree.py', 'force_matplotlib.py', 'test_tree.py']",['a0cc7f3b538c2cf9773add8e7d46dd381ce6c7a2'],4,52,56,3,0.05555555555555555,0.5833333333333334,0.5833333333333334
51400d8345de52c22dd7b7f863271e0980ab1b65,Make kernel and sampling explainers have consistent nsamples defaults,Janis Klaise,jk@seldon.io,Janis Klaise,jk@seldon.io,2019-02-14 17:22:00+00:00,0,2019-02-14 17:22:00+00:00,0,True,False,['sampling.py'],['2ee5770c49038a9781f5c04a38c8e84f25c6021a'],3,3,6,1,,,
d9338220f38413eeb1d4a6fa0a49cf47e327e54d,"Adding support for matplotlib forceplot with text rotation (tests, examples included)",Srivatsan Ramanujam,vatsan.cs@gmail.com,Srivatsan Ramanujam,vatsan.cs@gmail.com,2019-02-14 22:34:19-08:00,28800,2019-02-14 22:34:19-08:00,28800,True,False,"['README.md', 'force_plot_matplotlib_rotate.png', 'force.py', 'force_matplotlib.py', 'test_force.py']",['2ee5770c49038a9781f5c04a38c8e84f25c6021a'],12,86,98,5,1.0,1.0,1.0
0849c0bcabbc0fa466ed84b9f98eb23adae732ed,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-02-15 16:45:52-08:00,28800,2019-02-15 16:45:52-08:00,28800,True,False,['README.md'],['2ee5770c49038a9781f5c04a38c8e84f25c6021a'],9,5,14,1,,,
6a23d95321501ac3c1c203cdc9eedf211ee34706,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-02-15 16:57:55-08:00,28800,2019-02-15 16:57:55-08:00,28800,True,False,['README.md'],['d9338220f38413eeb1d4a6fa0a49cf47e327e54d'],3,3,6,1,,,
74f748e61cd88190192f51d5b59d895cb1642bb6,Bump release,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-02-15 17:57:23-08:00,28800,2019-02-15 17:57:23-08:00,28800,True,False,"['__init__.py', 'colors.py']",['f512e415cf3c12a32a7e4380e5c6b54d1eade859'],1,4,5,2,,,
d43f11ffd78ff6b6fe978028993b73a846df4668,Force appveyer to rebuild packages,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-02-16 09:57:58-08:00,28800,2019-02-16 09:57:58-08:00,28800,True,False,['__init__.py'],['74f748e61cd88190192f51d5b59d895cb1642bb6'],1,1,2,1,,,
1af80804d84529d4fa7ec406b1f730254942dfe4,Revamp the benchmark code,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-02-18 11:06:25-08:00,28800,2019-02-18 11:06:25-08:00,28800,True,False,"['__init__.py', '__init__.py', 'experiments.py', 'measures.py', 'methods.py', 'metrics.py', 'models.py', 'plots.py']",['d43f11ffd78ff6b6fe978028993b73a846df4668'],308,745,1053,8,0.5603448275862069,0.9396551724137931,0.1810344827586207
bf38e3c513c8a7e9e75db3b58d367cc0084be79f,"Allow limited customizations to image_plot

Esp. useful for small input images like mnist.",Verdi March,verdi.march@gmail.com,GitHub,noreply@github.com,2019-02-22 18:05:54+08:00,-28800,2019-02-22 18:05:54+08:00,-28800,True,False,['image.py'],['1af80804d84529d4fa7ec406b1f730254942dfe4'],5,11,16,1,0.0,0.0,0.0
d65ba3a1d3acf4a24311260069a734504a579888,Better docs for force_plot.,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-02-28 09:30:55-08:00,28800,2019-02-28 09:30:55-08:00,28800,True,False,['force.py'],['1af80804d84529d4fa7ec406b1f730254942dfe4'],2,32,34,1,,,
e1ac8b2cc7dbcb3ce408608a093a3a8fe8be6b85,Added test verifying that linear shap gives the correct result.,Jorge C. Leitao,jorgecarleitao@gmail.com,Jorge C. Leitao,jorgecarleitao@gmail.com,2019-03-01 10:32:58+01:00,-3600,2019-03-01 10:52:16+01:00,-3600,True,False,['test_linear.py'],['fce3f2f4a706c33f7280bb91e8c6c1efb55b5702'],0,25,25,1,1.0,1.0,1.0
3eb30f46f7077a3cae2610917ebb33682deb86bc,Added test checking that DeepExplainer of a linear model (in tf keras) is correct.,Jorge C. Leitao,jorgecarleitao@gmail.com,Jorge C. Leitao,jorgecarleitao@gmail.com,2019-03-01 11:55:51+01:00,-3600,2019-03-01 11:55:51+01:00,-3600,True,False,['test_deep.py'],['fce3f2f4a706c33f7280bb91e8c6c1efb55b5702'],0,50,50,1,0.0,1.0,1.0
1572211e16dbd953a1d20605870b28f552457cb4,Removed generic exception.,Jorge C. Leitao,jorgecarleitao@gmail.com,Jorge C. Leitao,jorgecarleitao@gmail.com,2019-03-01 13:46:03+01:00,-3600,2019-03-01 13:46:03+01:00,-3600,True,False,['test_deep.py'],['3eb30f46f7077a3cae2610917ebb33682deb86bc'],8,4,12,1,1.0,0.0,0.0
e8cf15afd1d50c1802b0003a28851d72d4bdd96b,Added tensorflow installation to travis.,Jorge C. Leitao,jorgecarleitao@gmail.com,Jorge C. Leitao,jorgecarleitao@gmail.com,2019-03-01 14:00:15+01:00,-3600,2019-03-01 14:00:15+01:00,-3600,True,False,['.travis.yml'],['1572211e16dbd953a1d20605870b28f552457cb4'],0,1,1,1,,,
621f169a9b96a1b1cc27b01f7becc6e2e9d0f0fa,"Fixed CI by installing tensorflow.

Also improved test skipping with nose.",Jorge C. Leitao,jorgecarleitao@gmail.com,Jorge C. Leitao,jorgecarleitao@gmail.com,2019-03-01 14:10:33+01:00,-3600,2019-03-01 14:25:43+01:00,-3600,True,False,"['.travis.yml', 'appveyor.yml', 'test_deep.py']",['fce3f2f4a706c33f7280bb91e8c6c1efb55b5702'],45,50,95,3,1.0,0.0,0.0
36b8b83633061dcb2a7c75d2e38b63142b964467,Added Keras to travis and appveyor.,Jorge C. Leitao,jorgecarleitao@gmail.com,Jorge C. Leitao,jorgecarleitao@gmail.com,2019-03-01 14:35:27+01:00,-3600,2019-03-01 14:35:27+01:00,-3600,True,False,"['.travis.yml', 'appveyor.yml']",['621f169a9b96a1b1cc27b01f7becc6e2e9d0f0fa'],2,2,4,2,,,
88727b72238d10cb6885f49c16d4ef8ebb006482,Added missing global_variables_initializer to test.,Jorge C. Leitao,jorgecarleitao@gmail.com,Jorge C. Leitao,jorgecarleitao@gmail.com,2019-03-01 14:53:17+01:00,-3600,2019-03-01 14:53:27+01:00,-3600,True,False,['test_deep.py'],['36b8b83633061dcb2a7c75d2e38b63142b964467'],0,1,1,1,0.0,1.0,1.0
4515a2bb6be524210288994d050a76f1689888a0,Fix unit test,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-03-01 09:01:39-08:00,28800,2019-03-01 09:01:39-08:00,28800,True,False,['test_deep.py'],['e8cf15afd1d50c1802b0003a28851d72d4bdd96b'],11,7,18,1,,,
b1b396456c36da8e547d6671a5b0ae3e5298319c,Update test_deep.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-03-01 09:09:15-08:00,28800,2019-03-01 09:09:15-08:00,28800,True,False,['test_deep.py'],['4515a2bb6be524210288994d050a76f1689888a0'],8,4,12,1,1.0,0.0,0.0
5ebb8cd66d70ada88779032ce1cac8797891a852,Update test_deep.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-03-01 09:50:29-08:00,28800,2019-03-01 09:50:29-08:00,28800,True,False,['test_deep.py'],['749f1da3cf926a520f809578770cf7abc87747c4'],2,4,6,1,0.0,1.0,1.0
f4d9f48c014ee80c1be3ca49465c9950d2f4fac9,Update test_deep.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-03-01 10:07:33-08:00,28800,2019-03-01 10:07:33-08:00,28800,True,False,['test_deep.py'],['5ebb8cd66d70ada88779032ce1cac8797891a852'],0,1,1,1,0.0,1.0,1.0
ce5d69fff4a8c426102bc366d16cb2b7bfd780b1,Fix #467,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-03-01 15:58:42-08:00,28800,2019-03-01 15:58:42-08:00,28800,True,False,"['linear.py', 'test_linear.py']",['d9271c1f4958bd74ca1eae4c6ffda78016a45efe'],1,22,23,2,1.0,1.0,1.0
b9e71b7d71e04d835d5ce6a000a5b7ea211c7d21,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-03-01 17:11:00-08:00,28800,2019-03-01 17:11:00-08:00,28800,True,False,['README.md'],['ce5d69fff4a8c426102bc366d16cb2b7bfd780b1'],1,1,2,1,,,
28fea6d942de10d1fc4d9de6c8708d67ece9757b,add new BalancedRandomForestClassifier model,jpzhangvincent,vincentzhangv@gmail.com,jpzhangvincent,vincentzhangv@gmail.com,2019-03-04 21:54:47-08:00,28800,2019-03-04 21:54:47-08:00,28800,True,False,['tree.py'],['b9e71b7d71e04d835d5ce6a000a5b7ea211c7d21'],0,6,6,1,0.0,0.0,0.0
69acf25331384b9374456a670d5593b3586e0495,Fix #484,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-03-11 12:20:03-07:00,25200,2019-03-11 12:20:03-07:00,25200,True,False,['summary.py'],['b9e71b7d71e04d835d5ce6a000a5b7ea211c7d21'],2,2,4,1,,,
9ceb3c792a0226be79e869bbf2da5cbbd138370c,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-03-11 14:07:28-07:00,25200,2019-03-11 14:07:28-07:00,25200,True,False,['README.md'],['69acf25331384b9374456a670d5593b3586e0495'],1,3,4,1,,,
04e7e35bde07484243a783fee5f0c32d4d41571e,Add brute force check,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-03-11 15:11:14-07:00,25200,2019-03-11 15:11:14-07:00,25200,True,False,['test_tree.py'],['9ceb3c792a0226be79e869bbf2da5cbbd138370c'],0,57,57,1,0.673469387755102,1.0,0.8163265306122449
c48ecff8534accff7cb83828c5bd22492084cc97,"Address #427

Clarify the issues with position based features in text.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-03-12 16:37:24-07:00,25200,2019-03-12 16:37:24-07:00,25200,True,False,['Keras LSTM for IMDB Sentiment Classification.ipynb'],['04e7e35bde07484243a783fee5f0c32d4d41571e'],31,72,103,1,,,
8ffa62ea286330492031102a83dacdebf620d500,Update Keras LSTM for IMDB Sentiment Classification.html,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-03-12 16:39:00-07:00,25200,2019-03-12 16:39:00-07:00,25200,True,False,['Keras LSTM for IMDB Sentiment Classification.html'],['c48ecff8534accff7cb83828c5bd22492084cc97'],32,66,98,1,,,
fa89d29f91bd2633dd16bc0370d8237637c85467,"Fix #490

This addresses some problems with the diagonal values of SHAP interaction values for internally computed models with multiple outputs. Also fixes an expected value problem where the base_offset was not included.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-03-13 16:50:57-07:00,25200,2019-03-13 16:50:57-07:00,25200,True,False,"['tree.py', 'tree_shap.h', 'test_tree.py']",['8ffa62ea286330492031102a83dacdebf620d500'],4,15,19,3,0.0,0.8333333333333334,0.8333333333333334
286422d95355fc55c1745731732d763ca1bdb7e5,Tag new version with bug fixes.,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-03-13 16:53:35-07:00,25200,2019-03-13 16:53:35-07:00,25200,True,False,['__init__.py'],['fa89d29f91bd2633dd16bc0370d8237637c85467'],1,1,2,1,,,
0849aa20551cf9825f9e294fcc29d7fbe7b9f932,Fix #489,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-03-13 17:07:06-07:00,25200,2019-03-13 17:07:06-07:00,25200,True,False,['force.py'],['286422d95355fc55c1745731732d763ca1bdb7e5'],1,1,2,1,,,
714110b0eea969e78437771c50c29dc6cc486605,add BN to deep torch and fix a small Warning statement,ZHAO Jiecheng,zhaojiecheng@ppdai.com,ZHAO Jiecheng,zhaojiecheng@ppdai.com,2019-03-14 16:09:22+08:00,-28800,2019-03-14 16:09:22+08:00,-28800,True,False,"['deep_pytorch.py', 'test_deep.py']",['0849aa20551cf9825f9e294fcc29d7fbe7b9f932'],1,5,6,2,0.0,1.0,1.0
9fb66692852652bb0bfeab31410dc94bb7cbcc79,fixed broken keras multi input model in gradient explainer,Moritz Augustin,moritzaugustin@users.noreply.github.com,Moritz Augustin,moritzaugustin@users.noreply.github.com,2019-03-22 10:45:57+01:00,-3600,2019-03-22 12:56:00+01:00,-3600,True,False,['gradient.py'],['bfeacff001333e67eb99ccf80bbadce64b68f830'],3,3,6,1,,,
d9b1b0acc23c7e1663148c91e7da1b9051a5dc5e,Add leaky ReLU and other conv layers to pytorch deep explainer,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2019-03-23 08:41:14-04:00,14400,2019-03-23 15:40:33-04:00,14400,True,False,"['deep_pytorch.py', 'test_deep.py']",['bfeacff001333e67eb99ccf80bbadce64b68f830'],4,10,14,2,1.0,1.0,1.0
05a282bf4f9beef186a240879c5abdba01a9743d,custom output rank,Moritz Augustin,moritzaugustin@users.noreply.github.com,Moritz Augustin,moritzaugustin@users.noreply.github.com,2019-03-26 14:47:41+01:00,-3600,2019-03-26 14:47:41+01:00,-3600,True,False,['gradient.py'],['9fb66692852652bb0bfeab31410dc94bb7cbcc79'],2,9,11,1,0.0,0.0,0.0
bbd0fe0f598a19847bbd0f1a1bf4b8e370b8d769,seed argument for tf gradientexplainer shap_values,Moritz Augustin,moritzaugustin@users.noreply.github.com,Moritz Augustin,moritzaugustin@users.noreply.github.com,2019-03-26 14:48:17+01:00,-3600,2019-03-26 14:48:17+01:00,-3600,True,False,['gradient.py'],['05a282bf4f9beef186a240879c5abdba01a9743d'],5,5,10,1,0.0,0.0,0.0
d6dd8ff58f0720fb4d20ce12e0006a8f5da7363d,fixed seed in GradientExplainer constructor,Moritz Augustin,moritzaugustin@users.noreply.github.com,Moritz Augustin,moritzaugustin@users.noreply.github.com,2019-03-26 17:18:30+01:00,-3600,2019-03-26 17:23:25+01:00,-3600,True,False,['gradient.py'],['2057aade67556c73fc58efc8f870a9f04dd9db52'],1,1,2,1,,,
774bbba9e0896b52b0042192408bb76459acf53e,Add fix to maxpool1d bug,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2019-03-26 09:06:07-04:00,14400,2019-03-26 15:41:04-04:00,14400,True,False,"['deep_pytorch.py', 'test_deep.py']",['2a1c57e0c2ff60fa72a58964c7282a00b37433ac'],4,7,11,2,0.3333333333333333,1.0,0.3333333333333333
2266f0c7913d1280c492bc00dc77cb9b6e2652e0,Add warning about maxpool1d layer in pytorch deep explainer and set manual seed in test,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2019-03-26 15:45:19-04:00,14400,2019-03-26 16:52:12-04:00,14400,True,False,"['deep_pytorch.py', 'test_deep.py']",['774bbba9e0896b52b0042192408bb76459acf53e'],0,7,7,2,0.0,1.0,0.5
5b39771d57d4e2f2fbff4cc392b606d3e726d9f1,"Set expected values in pytorch

Is this just missing or is there a special reason not to set self.expected_value in the constructor?",Gökçen Eraslan,gokcen.eraslan@gmail.com,GitHub,noreply@github.com,2019-03-26 22:44:00-04:00,14400,2019-03-26 22:44:00-04:00,14400,True,False,['deep_pytorch.py'],['6992883fb3470163fcbe2bfacae0bd5f724ed1f8'],0,1,1,1,0.0,0.0,0.0
91faf00f616946f7105a63cf08ec23fc6f9b6dbd,Save expected_value for both single and multi output models,Gökçen Eraslan,gokcen.eraslan@gmail.com,GitHub,noreply@github.com,2019-03-26 23:08:40-04:00,14400,2019-03-26 23:08:40-04:00,14400,True,False,['deep_pytorch.py'],['5b39771d57d4e2f2fbff4cc392b606d3e726d9f1'],1,1,2,1,,,
2adc9f28cdb771b702bc13893bd58e4c92f6f1af,fixing seed and added pytorch gradient seed,Moritz Augustin,moritzaugustin@users.noreply.github.com,Moritz Augustin,moritzaugustin@users.noreply.github.com,2019-03-31 14:38:01+02:00,-7200,2019-03-31 14:39:20+02:00,-7200,True,False,['gradient.py'],['8dcaecbd4adfa028a359cdc04e171fc2bb4eabcd'],6,14,20,1,0.0,0.0,0.0
8af94f0ba316a9c80d071026c15245e263ca4450,improved seed documentation,Moritz Augustin,moritzaugustin@users.noreply.github.com,Moritz Augustin,moritzaugustin@users.noreply.github.com,2019-03-31 14:42:34+02:00,-7200,2019-03-31 14:42:34+02:00,-7200,True,False,['gradient.py'],['2adc9f28cdb771b702bc13893bd58e4c92f6f1af'],1,2,3,1,,,
2f21664de3beae7998cb83489ca98272b0c62f9c,Make errors like in #29 more clear,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-04-02 11:14:53-07:00,25200,2019-04-02 11:14:53-07:00,25200,True,False,['tree.py'],['0849aa20551cf9825f9e294fcc29d7fbe7b9f932'],10,5,15,1,1.0,1.0,1.0
dc936d0497ae37ae223e8b4287c786eb10959cd4,"Fix #518

Sklearn treats multiple regression different than multiple class clssifications. This fixes the code to correctly explain all outputs of a multiple regression problem.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-04-04 16:35:41-07:00,25200,2019-04-04 16:35:41-07:00,25200,True,False,['tree.py'],['049b76dea0a8755d5e3ae060612fc712f81c8ae7'],3,2,5,1,1.0,1.0,1.0
2ab722d0ef54e4ac3aac917e6640268d702150b6,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-04-05 17:36:05-07:00,25200,2019-04-05 17:36:05-07:00,25200,True,False,['README.md'],['dc936d0497ae37ae223e8b4287c786eb10959cd4'],1,9,10,1,,,
d75b17e98445d890839e26fbea5d172b918b7bb4,Add bibtex files,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-04-05 17:41:47-07:00,25200,2019-04-05 17:41:47-07:00,25200,True,False,"['nature_bme.bib', 'shap_nips.bib', 'treeshap_arxiv.bib']",['dc936d0497ae37ae223e8b4287c786eb10959cd4'],0,26,26,3,,,
61b4ef2b9bd401c407c649ca90b6776b7e3b43d1,Address #535,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-04-05 17:45:04-07:00,25200,2019-04-05 17:45:04-07:00,25200,True,False,['README.md'],['db8a8b93c475a632067620847e14d56580740cf7'],4,4,8,1,,,
5181fca8ab50bafc917fe9733fb6593ee73de357,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-04-05 17:46:10-07:00,25200,2019-04-05 17:46:10-07:00,25200,True,False,['README.md'],['61b4ef2b9bd401c407c649ca90b6776b7e3b43d1'],1,1,2,1,,,
208a433b7653ab8810235022923a6ac8671ff8f6,Update gradient.py,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-04-06 11:21:15-07:00,25200,2019-04-06 11:21:15-07:00,25200,True,False,['gradient.py'],['8af94f0ba316a9c80d071026c15245e263ca4450'],1,0,1,1,1.0,1.0,1.0
9a90a5acf3395ee6ef9a03643be2c2a0135bac46,[FEAT] adding support for catBoost ranker,Dor Amir,dor.a@fiverr.com,Dor Amir,dor.a@fiverr.com,2019-04-07 10:40:28+03:00,-10800,2019-04-07 10:40:28+03:00,-10800,True,False,['tree.py'],['5181fca8ab50bafc917fe9733fb6593ee73de357'],0,4,4,1,0.0,0.0,0.0
c9c03f0541d14687d7df49e1738581c428db0d17,add XGBRanker and LGBMRanker to shap's TreeExplainer,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2019-04-05 00:35:45-04:00,14400,2019-04-10 17:54:17-04:00,14400,True,False,['tree.py'],['044c0da7cb890cfc9f79d1ca55b2668271a82dc1'],0,25,25,1,0.0,0.0,0.0
fab00018934047444b71f0c4ce602e6993d348d4,updating based on comments,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2019-04-10 15:59:29-04:00,14400,2019-04-10 17:54:17-04:00,14400,True,False,['tree.py'],['c9c03f0541d14687d7df49e1738581c428db0d17'],9,6,15,1,1.0,1.0,1.0
b2ce2b2fa407e898573242e0dd72fa20c2e578ce,added tests for ranking,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2019-04-10 17:53:52-04:00,14400,2019-04-10 17:54:18-04:00,14400,True,False,"['datasets.py', 'test_tree.py']",['fab00018934047444b71f0c4ce602e6993d348d4'],2,51,53,2,1.0,1.0,1.0
e788e653e2471b9a9cc0cc80e1967b38368e62ff,"make shap play nicer with sklearn<0.18

an alternative is to pin sklearn > 0.18",Chris Hua,chua@quora.com,Chris Hua,chua@quora.com,2019-04-12 10:50:22-07:00,25200,2019-04-12 10:50:22-07:00,25200,True,False,['metrics.py'],['b3f124f6cb0dc1d7cec83a8f47a38e82bf6b3611'],7,12,19,1,,,
655e27f9e3ef3ea73984dadc02f07e3de4bbfb4a,added validation,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2019-04-14 04:22:26-04:00,14400,2019-04-14 04:22:26-04:00,14400,True,False,['test_tree.py'],['b2ce2b2fa407e898573242e0dd72fa20c2e578ce'],6,10,16,1,1.0,1.0,1.0
fa00b0ea5c787390b93ca3506bfd770eb7938aa8,Remove maxpool1d instability,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2019-04-14 12:48:02-04:00,14400,2019-04-14 12:50:41-04:00,14400,True,False,"['deep_pytorch.py', 'test_deep.py']",['2266f0c7913d1280c492bc00dc77cb9b6e2652e0'],73,94,167,2,0.8333333333333334,0.6666666666666666,0.6666666666666666
ccdd0e7c9a2a093c95638e28315b2bdcacb3bf8f,"Issue #496: embedding lookup with tf.keras

Since tensorflow.keras uses the ResourceGather operation type for embedding lookup instead of GatherV2, registered gather as op handler for ResourceGather",Unknown,andriy.v.nikolov@gmail.com,Unknown,andriy.v.nikolov@gmail.com,2019-04-09 12:52:14+01:00,-3600,2019-04-16 12:23:23+01:00,-3600,True,False,"['deep_tf.py', 'test_deep.py']",['5181fca8ab50bafc917fe9733fb6593ee73de357'],1,53,54,2,0.0,0.8421052631578947,0.8421052631578947
4f3f9513c7dfef9cd6ded516d133aaf8e42f07eb,dependence_plot uses color arg + optional cmap,Randy Carnevale,randy.carnevale@lendup.com,Randy Carnevale,randy.carnevale@lendup.com,2019-04-17 22:29:00-04:00,14400,2019-04-17 22:31:04-04:00,14400,True,False,['dependence.py'],['456da71fa2a75638af80ad38b1dcebb9b8b55c45'],9,9,18,1,0.0,0.0,0.0
ff523c0f49a428503d556553769c5267cdaff843,Benchmark update,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-04-18 10:58:52-07:00,25200,2019-04-18 10:58:52-07:00,25200,True,False,"['experiments.py', 'measures.py', 'methods.py', 'metrics.py', 'models.py', 'plots.py']",['db8a8b93c475a632067620847e14d56580740cf7'],87,633,720,6,0.3287671232876712,0.6575342465753424,0.0776255707762557
91839e15d0ac7dfaa26bde90dbc7282911920e15,Fix #527,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-04-18 11:03:55-07:00,25200,2019-04-18 11:03:55-07:00,25200,True,False,['dependence.py'],['bf56254056b4558e48be570ceadddb05512aba89'],1,1,2,1,,,
6d6fcd1fb01c9254e266c93ff25fa8310e45b614,Remove unneeded import,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-04-18 11:09:50-07:00,25200,2019-04-18 11:09:50-07:00,25200,True,False,['metrics.py'],['f0188997b1b949d5ef70ff44baa422d8b0f4398e'],1,0,1,1,,,
bb5ea012e92c52e616c73430e4838dd229e2e4c1,"Drop Python 2 testing

Python 2 is EOL soon, so after version 0.28 I don't think we need to support it.",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-04-18 11:30:05-07:00,25200,2019-04-18 11:30:05-07:00,25200,True,False,"['.travis.yml', 'setup.py']",['6d6fcd1fb01c9254e266c93ff25fa8310e45b614'],1,1,2,2,,,
4a027d4a9404bca627bb00892680336417e81891,fixed multirow sparse background case for KernelExplainer and added test,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2019-04-18 15:47:20-04:00,14400,2019-04-18 15:47:20-04:00,14400,True,False,"['kernel.py', 'test_kernel.py']",['18344c23cf1a35f1f4ecf3dcebae516974d5051b'],10,47,57,2,0.0,0.9230769230769231,1.0
061b62eee4ab398f2c9b768356abacaa46b30a6a,Fix #432,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-04-18 13:10:31-07:00,25200,2019-04-18 13:10:31-07:00,25200,True,False,['tree.py'],['bb5ea012e92c52e616c73430e4838dd229e2e4c1'],2,4,6,1,0.0,0.0,0.0
331827c5e21e906de587676ea40fc8e451736f32,Python 3.5 support for Windows,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-04-18 17:03:18-07:00,25200,2019-04-18 17:03:18-07:00,25200,True,False,['appveyor.yml'],['061b62eee4ab398f2c9b768356abacaa46b30a6a'],0,1,1,1,,,
2eed7454702a604dcde1606007e22a2820b4be1c,pylint fix,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-04-18 17:03:43-07:00,25200,2019-04-18 17:03:43-07:00,25200,True,False,['test_kernel.py'],['331827c5e21e906de587676ea40fc8e451736f32'],2,2,4,1,,,
9268448ea423926bc6ea55098fa5758a57acee17,Fix #558,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-04-22 11:14:33-07:00,25200,2019-04-22 11:14:33-07:00,25200,True,False,['kernel.py'],['f17d33a9646b6362ed2c39b30794d09c83530ce6'],2,2,4,1,,,
811090946e838fcb676dcc1569c78d15aee014ec,fix zero division in compute_expectations,dvpolyakov,polyakov.mipt@yandex.ru,dvpolyakov,polyakov.mipt@yandex.ru,2019-04-27 20:05:25+03:00,-10800,2019-04-27 20:05:25+03:00,-10800,True,False,['tree_shap.h'],['b280cb81d498b9d98565cad8dd16fc88ae52649f'],2,6,8,1,0.0,0.0,0.0
93baf58fb3c3df56beba9d9714b388e969f33621,add SHAP values for binary classification to CatBoost,dvpolyakov,polyakov.mipt@yandex.ru,dvpolyakov,polyakov.mipt@yandex.ru,2019-05-07 17:59:08+03:00,-10800,2019-05-07 17:59:08+03:00,-10800,True,False,['tree.py'],['b280cb81d498b9d98565cad8dd16fc88ae52649f'],0,76,76,1,0.10204081632653061,0.10204081632653061,0.10204081632653061
0830151dc5bff03c445c9e6ea23182b3e81532eb,"Integer division for np.linspace stepping parameter in line 35

Eliminates a `DeprecationWarning` issued by passing float valued stepping parameters to np.linspace in shap/plots/color.py:35",Philipp Meier,p.meier@tiplu.de,GitHub,noreply@github.com,2019-05-10 14:27:10+02:00,-7200,2019-05-10 14:27:10+02:00,-7200,True,False,['colors.py'],['50a64235701528e9abc06d949d6922bb623b1a8c'],1,1,2,1,,,
96968e4da2798ba4ca7da5bd28e87d83c89c6ce8,Fix GradientBoostingClassifier for the most recent sklearn,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-05-14 18:06:20-07:00,25200,2019-05-14 18:06:20-07:00,25200,True,False,['tree.py'],['50a64235701528e9abc06d949d6922bb623b1a8c'],0,8,8,1,0.0,0.0,0.0
40238df00f0a80a2b0d09c7592f6c8674adc02ea,Bump version,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-05-14 18:07:07-07:00,25200,2019-05-14 18:07:07-07:00,25200,True,False,['__init__.py'],['96968e4da2798ba4ca7da5bd28e87d83c89c6ce8'],1,1,2,1,,,
3a0a9555267062598e8b450dcc277e1b751473e4,Hide keras imdb bug,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-05-14 18:09:59-07:00,25200,2019-05-14 18:09:59-07:00,25200,True,False,['test_deep.py'],['40238df00f0a80a2b0d09c7592f6c8674adc02ea'],2,8,10,1,0.0,1.0,1.0
e9acbb822c3e864b21b4f47437ced294264c0a21,Support the new sklearn changes to GradientBoostingRegressor,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-05-14 18:19:29-07:00,25200,2019-05-14 18:19:29-07:00,25200,True,False,['tree.py'],['3a0a9555267062598e8b450dcc277e1b751473e4'],0,2,2,1,0.0,0.0,0.0
938a4d9c0635798aa5c52f7eaba9b2f407e1403a,Support passing in an Axes object to dependence_plot.,Michael Kuhlen,kuhlen@gmail.com,Michael Kuhlen,mike@missionlane.com,2019-05-17 21:27:36+00:00,0,2019-05-17 22:23:48+00:00,0,True,False,['dependence.py'],['e6e48af0ffc65d7f9bb318ffba6f04f3725bd296'],29,38,67,1,0.0,0.0,0.0
c770f3a8e166787680381f01961763f11bf69050,Docs for dependence_plot,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-05-17 22:47:20-07:00,25200,2019-05-17 22:47:20-07:00,25200,True,False,"['dependence_plot.html', 'dependence_plot.ipynb']",['e6e48af0ffc65d7f9bb318ffba6f04f3725bd296'],0,12892,12892,2,,,
084c9b8b69e5bc2b569cd9681ba5a8f721100dc4,Update README.md,Scott Lundberg,slundberg@users.noreply.github.com,GitHub,noreply@github.com,2019-05-17 23:00:51-07:00,25200,2019-05-17 23:00:51-07:00,25200,True,False,['README.md'],['c770f3a8e166787680381f01961763f11bf69050'],0,6,6,1,,,
e881c641725087f51f8d7389db54384f37270bf2,reset seed in test,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-05-17 23:19:37-07:00,25200,2019-05-17 23:19:37-07:00,25200,True,False,['test_kernel.py'],['084c9b8b69e5bc2b569cd9681ba5a8f721100dc4'],1,2,3,1,0.0,1.0,1.0
b80553a8c2f887a82b653b1a8ef8397cc984ea89,Log dependency versions during testing,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-05-18 14:25:52-07:00,25200,2019-05-18 14:25:52-07:00,25200,True,False,['test_kernel.py'],['e881c641725087f51f8d7389db54384f37270bf2'],1,6,7,1,0.0,1.0,1.0
90007b2e4c69c091d9d867ffb7d3e23c898a2638,Speed up KernelExplainer unit tests,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-05-18 14:36:54-07:00,25200,2019-05-18 14:36:54-07:00,25200,True,False,['test_kernel.py'],['b80553a8c2f887a82b653b1a8ef8397cc984ea89'],6,7,13,1,0.0,1.0,1.0
89a12808a0cc3234452cb2269c5b91990b539239,Strip prints (trying to fix travis),Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-05-18 14:50:07-07:00,25200,2019-05-18 14:50:07-07:00,25200,True,False,['test_kernel.py'],['90007b2e4c69c091d9d867ffb7d3e23c898a2638'],6,0,6,1,1.0,0.0,0.0
02518683e02de958bdd7dbd370ba30f1e8afa276,skip test issue for the moment,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-05-18 15:11:28-07:00,25200,2019-05-18 15:11:28-07:00,25200,True,False,['test_kernel.py'],['89a12808a0cc3234452cb2269c5b91990b539239'],1,1,2,1,1.0,0.0,0.0
3992c317b09f17db16663d661f018be83a0be88e,Add adaptive average pooling,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2019-05-22 14:38:08-04:00,14400,2019-05-22 14:39:57-04:00,14400,True,False,"['deep_pytorch.py', 'test_deep.py']",['04b16b02cac2447ebe445336f2d4ead3bd575472'],3,6,9,2,,,
2ce9aaacb4080773fbaf5adbfbbaeb4d08e85638,Add conv transpose layers,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2019-05-22 14:52:40-04:00,14400,2019-05-22 14:52:40-04:00,14400,True,False,"['deep_pytorch.py', 'test_deep.py']",['3992c317b09f17db16663d661f018be83a0be88e'],1,6,7,2,0.5,1.0,1.0
79bfe52be1d5f0f3b48835587577b112f54b3a06,"Fix for #615

Changed the second `if` to an `elif`",Prem Piyush Goyal,prempiyush@gmail.com,GitHub,noreply@github.com,2019-05-29 22:05:12+05:30,-19800,2019-05-29 22:05:12+05:30,-19800,True,False,['tree.py'],['04b16b02cac2447ebe445336f2d4ead3bd575472'],1,1,2,1,,,
3a680f78007653752133d3b998c82457f1853b44,only access colors.red_blue if we are explicitly plotting. This avoids import errors on a missing matplotlib backend,Himanshu Chandola,6212113+hchandola@users.noreply.github.com,Himanshu Chandola,6212113+hchandola@users.noreply.github.com,2019-05-23 15:54:13-07:00,25200,2019-05-29 14:53:46-07:00,25200,True,False,['dependence.py'],['04b16b02cac2447ebe445336f2d4ead3bd575472'],1,4,5,1,0.0,0.0,0.0
b07903c9b3c384ee8b7d857b939f0325063450d7,tqdm -> tqdm.autonotebook in linear.py,KOLANICH,KOLANICH@users.noreply.github.com,GitHub,noreply@github.com,2019-05-30 21:07:59+00:00,0,2019-05-30 21:07:59+00:00,0,True,False,['linear.py'],['04b16b02cac2447ebe445336f2d4ead3bd575472'],2,2,4,1,,,
00032d26e0f4db35d8d585f3fca4bdcd627a5fcf,tqdm -> tqdm.autonotebook in kernel.py,KOLANICH,KOLANICH@users.noreply.github.com,GitHub,noreply@github.com,2019-05-30 21:09:59+00:00,0,2019-05-30 21:09:59+00:00,0,True,False,['kernel.py'],['b07903c9b3c384ee8b7d857b939f0325063450d7'],1,1,2,1,,,
3556f6596f3264b90f795107da7c13163c405192,tqdm -L tqdm.autonotebook in measures.py,KOLANICH,KOLANICH@users.noreply.github.com,GitHub,noreply@github.com,2019-05-30 21:17:32+00:00,0,2019-05-30 21:17:32+00:00,0,True,False,['measures.py'],['00032d26e0f4db35d8d585f3fca4bdcd627a5fcf'],2,2,4,1,,,
092844438db8c62cd7b9553f63debb4e9c3cd592,Added the version constraint on tqdm,KOLANICH,KOLANICH@users.noreply.github.com,GitHub,noreply@github.com,2019-05-30 21:31:19+00:00,0,2019-05-30 21:31:19+00:00,0,True,False,['setup.py'],['3556f6596f3264b90f795107da7c13163c405192'],1,1,2,1,,,
5eaae3492fe7b14581c46f2c4da9a0b57335a043,Allow deep_pytorch to use cuda models,Julius Bier Kirkegaard,juliusbierk@gmail.com,GitHub,noreply@github.com,2019-06-03 13:00:36+02:00,-7200,2019-06-03 13:00:36+02:00,-7200,True,False,['deep_pytorch.py'],['04b16b02cac2447ebe445336f2d4ead3bd575472'],2,2,4,1,,,
5c2dc58b4afe5f5e42843ff32c0f73badab3ed78,fix travis build due to xgboost install error,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2019-05-29 23:49:25-04:00,14400,2019-06-05 22:23:24-04:00,14400,True,False,['.travis.yml'],['04b16b02cac2447ebe445336f2d4ead3bd575472'],1,7,8,1,,,
86ddf75e6ec4fedcdaa1a34bb2e6c63221ef9be6,relaxing tolerances to fix failing test,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2019-05-18 13:21:05-04:00,14400,2019-06-06 12:38:05-04:00,14400,True,False,['test_kernel.py'],['441caf66e2e961c233a0607ca95f30937d32d5b2'],8,4,12,1,,,
7111eb3c1cf950a956e2268f2427d81ada27b969,Fix #631 by updating doc string,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-06-06 14:59:14-07:00,25200,2019-06-06 14:59:14-07:00,25200,True,False,"['__init__.py', 'gradient.py']",['a8b572342745ac565a75418ebd4e9a1023aca4ca'],8,8,16,2,,,
e4e23af266b741d82d4c1bcdf1677b26838c6143,"Fix for #615

Changed the second `if` to an `elif`",Prem Piyush Goyal,prempiyush@gmail.com,prempiyush,prempiyush@in.ibm.com,2019-05-29 22:05:12+05:30,-19800,2019-06-07 09:03:36+05:30,-19800,True,False,['tree.py'],['7111eb3c1cf950a956e2268f2427d81ada27b969'],1,1,2,1,,,
11e6ba7385d642ed04fdfc8889d5c1edf3a92daf,only access colors.red_blue if we are explicitly plotting. This avoids import errors on a missing matplotlib backend,Himanshu Chandola,6212113+hchandola@users.noreply.github.com,Julius,juliusbierk@gmail.com,2019-05-23 15:54:13-07:00,25200,2019-06-07 10:04:32+02:00,-7200,True,False,['dependence.py'],['5eaae3492fe7b14581c46f2c4da9a0b57335a043'],1,4,5,1,0.0,0.0,0.0
fe0d2d0e2782a79ac7b42ea225e89340d2a22929,tqdm -> tqdm.autonotebook in linear.py,KOLANICH,KOLANICH@users.noreply.github.com,Julius,juliusbierk@gmail.com,2019-05-30 21:07:59+00:00,0,2019-06-07 10:04:32+02:00,-7200,True,False,['linear.py'],['11e6ba7385d642ed04fdfc8889d5c1edf3a92daf'],2,2,4,1,,,
795a495e0dee493822f22ebc2bef4370e0d125f8,tqdm -> tqdm.autonotebook in kernel.py,KOLANICH,KOLANICH@users.noreply.github.com,Julius,juliusbierk@gmail.com,2019-05-30 21:09:59+00:00,0,2019-06-07 10:04:32+02:00,-7200,True,False,['kernel.py'],['fe0d2d0e2782a79ac7b42ea225e89340d2a22929'],1,1,2,1,,,
d2829911432cad3ed5ddd377f5bbe0dfbab9a417,tqdm -L tqdm.autonotebook in measures.py,KOLANICH,KOLANICH@users.noreply.github.com,Julius,juliusbierk@gmail.com,2019-05-30 21:17:32+00:00,0,2019-06-07 10:04:32+02:00,-7200,True,False,['measures.py'],['795a495e0dee493822f22ebc2bef4370e0d125f8'],2,2,4,1,,,
9f2de65d329fddc313045adb52e127cd31994f39,Added the version constraint on tqdm,KOLANICH,KOLANICH@users.noreply.github.com,Julius,juliusbierk@gmail.com,2019-05-30 21:31:19+00:00,0,2019-06-07 10:04:32+02:00,-7200,True,False,['setup.py'],['d2829911432cad3ed5ddd377f5bbe0dfbab9a417'],1,1,2,1,,,
6b8a30047798e9d0ff3c8c5e335c1934a3c5c668,fix travis build due to xgboost install error,Ilya Matiach,ilmat@microsoft.com,Julius,juliusbierk@gmail.com,2019-05-29 23:49:25-04:00,14400,2019-06-07 10:04:32+02:00,-7200,True,False,['.travis.yml'],['9f2de65d329fddc313045adb52e127cd31994f39'],1,7,8,1,,,
82b9c2b193dbb0a11f34e89cd61da5920da251e5,relaxing tolerances to fix failing test,Ilya Matiach,ilmat@microsoft.com,Julius,juliusbierk@gmail.com,2019-05-18 13:21:05-04:00,14400,2019-06-07 10:04:32+02:00,-7200,True,False,['test_kernel.py'],['6b8a30047798e9d0ff3c8c5e335c1934a3c5c668'],8,4,12,1,,,
f99ca46bbe26818c69cf07d2650789bd2fba6e39,Fix #631 by updating doc string,Scott Lundberg,slund1@cs.washington.edu,Julius,juliusbierk@gmail.com,2019-06-06 14:59:14-07:00,25200,2019-06-07 10:04:32+02:00,-7200,True,False,"['__init__.py', 'gradient.py']",['82b9c2b193dbb0a11f34e89cd61da5920da251e5'],8,8,16,2,,,
062a3edbf9e09c12a7fb69aaf8ef4a5cbf57eb0b,"Fix sklearn GradientBoostingRegressor bug

if to elif",nasir-bhanpuri,nbhanpuri@virtahealth.com,GitHub,noreply@github.com,2019-06-12 13:28:33-07:00,25200,2019-06-12 13:28:33-07:00,25200,True,False,['tree.py'],['9866ae7d22eaa149abfcbd159c4e9a3fe9ed67d4'],1,1,2,1,,,
dc309d1757096fcc77eac41d4a7570f6bb5cc6f4,adding sparse support to shap linear explainer,Ilya Matiach,ilmat@microsoft.com,Ilya Matiach,ilmat@microsoft.com,2019-06-13 17:36:22-04:00,14400,2019-06-14 11:32:33-04:00,14400,True,False,"['linear.py', 'test_linear.py']",['9866ae7d22eaa149abfcbd159c4e9a3fe9ed67d4'],11,57,68,2,0.0,0.47058823529411764,0.7058823529411765
0d4b499dad288bdc6e0b73879cc38ff9d3399c55,Fix 649,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-06-18 08:47:29-07:00,25200,2019-06-18 08:47:29-07:00,25200,True,False,"['__init__.py', 'summary.py']",['9866ae7d22eaa149abfcbd159c4e9a3fe9ed67d4'],6,11,17,2,0.0,0.0,0.0
1af5f526b41f30ce8e6f09519947ea1b3d2fe900,Add Python 2 warning,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-06-18 17:24:02-07:00,25200,2019-06-18 17:24:02-07:00,25200,True,False,['common.py'],['7fe414d393c968ea08cc26d3d532c6897bc03aa8'],0,5,5,1,,,
849e50d7c079df8f046cb8c4616d0c72f0e0ff41,Supprese warning for tqdm in the notebook,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-06-19 13:18:01-07:00,25200,2019-06-19 13:18:01-07:00,25200,True,False,['kernel.py'],['1af5f526b41f30ce8e6f09519947ea1b3d2fe900'],1,1,2,1,,,
4efc638fba5836ddf1a833de2590fb845376325d,"Fix API change in tensorflow that effects DeepExplainer

Related to #324 and fixes #496",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-06-19 13:20:13-07:00,25200,2019-06-19 13:20:13-07:00,25200,True,False,['deep_tf.py'],['849e50d7c079df8f046cb8c4616d0c72f0e0ff41'],1,3,4,1,0.0,0.0,0.0
b105147c3525ee32cb92808f8e0468d313f7b615,Fix monitoring plot issue,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-06-19 13:30:42-07:00,25200,2019-06-19 13:30:42-07:00,25200,True,False,"['__init__.py', 'monitoring.py']",['4efc638fba5836ddf1a833de2590fb845376325d'],3,9,12,2,0.0,0.0,0.0
f616f76b14a19e61c9a2087d039fc93dfa1e3012,"Partly fix #652

This fixes the issue where the expected_value can be wrapped in a 1-element array before calling shap_values for TreeExplainer",Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-06-19 14:06:35-07:00,25200,2019-06-19 14:06:35-07:00,25200,True,False,['tree.py'],['b105147c3525ee32cb92808f8e0468d313f7b615'],1,3,4,1,0.0,0.0,0.0
9d764e202c82dffc688b097f365c612803d0e933,Fix len issue,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-06-19 14:18:48-07:00,25200,2019-06-19 14:18:48-07:00,25200,True,False,['tree.py'],['f616f76b14a19e61c9a2087d039fc93dfa1e3012'],1,1,2,1,,,
aa2846dd94a73f58a4eee94de9552653a349a2bd,Fix #636,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-06-19 16:40:38-07:00,25200,2019-06-19 16:40:38-07:00,25200,True,False,['kernel.py'],['9d764e202c82dffc688b097f365c612803d0e933'],1,1,2,1,,,
ca7863dc06517a593dad7ee2f01b61984ca4b350,Drop py35 from appveyor since matplotlib has dropped it,Scott Lundberg,slund1@cs.washington.edu,Scott Lundberg,slund1@cs.washington.edu,2019-06-19 16:57:28-07:00,25200,2019-06-19 16:57:28-07:00,25200,True,False,['appveyor.yml'],['aa2846dd94a73f58a4eee94de9552653a349a2bd'],1,0,1,1,,,
ed8caaff7144faaf5938ec47aeac7ebe274d7f31,"Make sure the model, background and test data are all on the same device",Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,Gabriel Tseng,gabriel.tseng@mail.mcgill.ca,2019-06-21 15:11:39-07:00,25200,2019-06-21 15:11:39-07:00,25200,True,False,['deep_pytorch.py'],['ca7863dc06517a593dad7ee2f01b61984ca4b350'],2,8,10,1,0.0,0.0,0.0
bdeec8ad63bfbe1ef9069899b625ad563f2c2c9a,Added hypothetical imp core calc,Avanti Shrikumar,avanti.shrikumar@gmail.com,Avanti Shrikumar,avanti.shrikumar@gmail.com,2019-06-25 16:44:56-07:00,25200,2019-06-25 16:44:56-07:00,25200,True,False,"['DeepExplainer Genomics Example With Hypothetical Importance Scores.ipynb', 'DeepExplainer Genomics Example.ipynb', 'deep_tf.py']",['41c4a7a3a8b62e5991fdcf04721f9531f27384d2'],409,485,894,3,0.3333333333333333,0.3333333333333333,0.0
45d81759afeb558f12b4a1dfa0c6391fb2aa8dcb,"modified code to use grads returned on the actual values rather than grads returned on the references, for better default behaviour",Avanti Shrikumar,avanti.shrikumar@gmail.com,Avanti Shrikumar,avanti.shrikumar@gmail.com,2019-07-02 14:11:49-07:00,25200,2019-07-02 14:11:49-07:00,25200,True,False,"['DeepExplainer Genomics Example With Hypothetical Importance Scores.ipynb', 'deep_pytorch.py', 'deep_tf.py']",['537f62ac5206fa73e7579c3aed03111863726eb3'],98,75,173,3,0.0,0.0,0.0
f9f8440ff7df8b691e7cbed6b7a243d62dd148b2,managed to get explanations for DeepSEA,Avanti Shrikumar,avanti.shrikumar@gmail.com,Avanti Shrikumar,avanti.shrikumar@gmail.com,2019-07-02 14:22:31-07:00,25200,2019-07-02 14:22:31-07:00,25200,True,False,['deep_pytorch.py'],['45d81759afeb558f12b4a1dfa0c6391fb2aa8dcb'],9,3,12,1,1.0,1.0,1.0
4243b3ae3c2762cb79234495fe1b4776f7585b73,managed to get nonzero explanations for DeepSEA,Avanti Shrikumar,avanti.shrikumar@gmail.com,Avanti Shrikumar,avanti.shrikumar@gmail.com,2019-07-02 14:23:09-07:00,25200,2019-07-02 14:23:09-07:00,25200,True,False,['PyTorch Deep Explainer DeepSEA example.ipynb'],['f9f8440ff7df8b691e7cbed6b7a243d62dd148b2'],48,113,161,1,,,
e14f65bb6209759ce24ac2ba6a529ff1b8683750,wrote code for making data a callable,Avanti Shrikumar,avanti.shrikumar@gmail.com,Avanti Shrikumar,avanti.shrikumar@gmail.com,2019-07-02 17:33:05-07:00,25200,2019-07-02 17:33:05-07:00,25200,True,False,['deep_pytorch.py'],['4243b3ae3c2762cb79234495fe1b4776f7585b73'],10,39,49,1,0.0,0.0,0.0
1630de93efd61132642a2c1570effd2dd0e0132f,added a warning in case there's an op that isn't in op_handlers,Avanti Shrikumar,avanti.shrikumar@gmail.com,Avanti Shrikumar,avanti.shrikumar@gmail.com,2019-07-02 17:33:26-07:00,25200,2019-07-02 17:33:26-07:00,25200,True,False,['deep_tf.py'],['e14f65bb6209759ce24ac2ba6a529ff1b8683750'],0,4,4,1,0.0,0.0,0.0
97a558e971f7395e87872e335bc4ead4402faddd,nothing much changed here,Avanti Shrikumar,avanti.shrikumar@gmail.com,Avanti Shrikumar,avanti.shrikumar@gmail.com,2019-07-02 18:36:15-07:00,25200,2019-07-02 18:36:15-07:00,25200,True,False,['DeepExplainer Genomics Example With Hypothetical Importance Scores.ipynb'],['1630de93efd61132642a2c1570effd2dd0e0132f'],25,56,81,1,,,
d666672c0bdf51daad5ebe433623b583cb4f9c6e,fixed the shuffling,Avanti Shrikumar,avanti.shrikumar@gmail.com,Avanti Shrikumar,avanti.shrikumar@gmail.com,2019-07-02 18:36:37-07:00,25200,2019-07-02 18:36:37-07:00,25200,True,False,['PyTorch Deep Explainer DeepSEA example.ipynb'],['97a558e971f7395e87872e335bc4ead4402faddd'],56,59,115,1,,,
0b0350ba3a42af275f6e99ca2e3c5877d7d94f8a,got a pytorch example evidently behaving,Avanti Shrikumar,avanti.shrikumar@gmail.com,Avanti Shrikumar,avanti.shrikumar@gmail.com,2019-07-03 15:07:16-07:00,25200,2019-07-03 15:07:16-07:00,25200,True,False,"['DeepExplainer Genomics Example With Hypothetical Importance Scores.ipynb', 'PyTorch Deep Explainer DeepSEA example.ipynb', '__init__.py', 'deep_pytorch.py', 'deep_tf.py', 'misc.py']",['d666672c0bdf51daad5ebe433623b583cb4f9c6e'],40,182,222,6,0.0,0.0,0.0
246fc03b99d5cdc84006566daaabb4aceab2b749,added more comments to the notebooks,Avanti Shrikumar,avanti.shrikumar@gmail.com,Avanti Shrikumar,avanti.shrikumar@gmail.com,2019-07-04 13:09:30-07:00,25200,2019-07-04 13:09:30-07:00,25200,True,False,"['DeepExplainer Genomics Example With Hypothetical Importance Scores.ipynb', 'PyTorch Deep Explainer DeepSEA example.ipynb', 'PyTorch Deep Explainer Genomics example With Hypothetical Importance Scores.ipynb', 'Tensorflow DeepExplainer Genomics Example With Hypothetical Importance Scores.ipynb']",['0b0350ba3a42af275f6e99ca2e3c5877d7d94f8a'],856,884,1740,4,,,
5ab70f06be88e605468c3e42c3f466e38e73d3a3,fixed to use logit of sigmoid rather than post-sigmoid output,Anon,blindauth,Anon,blindauth,2019-08-13 14:02:51-07:00,25200,2019-08-13 14:02:51-07:00,25200,True,False,['Tensorflow DeepExplainer Genomics Example With Hypothetical Importance Scores.ipynb'],['246fc03b99d5cdc84006566daaabb4aceab2b749'],17,21,38,1,,,
5b982488913c2406ebb7fb90437bb0ca1c6349a9,added Log,AvantiShri,avanti.shrikumar@gmail.com,AvantiShri,avanti.shrikumar@gmail.com,2019-08-24 16:24:35-07:00,25200,2019-08-24 16:24:35-07:00,25200,True,False,['deep_tf.py'],['5ab70f06be88e605468c3e42c3f466e38e73d3a3'],0,1,1,1,,,
277e54950d5b85d94089b7f09fcf64fb12bd9209,progress update support,AvantiShri,avanti.shrikumar@gmail.com,AvantiShri,avanti.shrikumar@gmail.com,2019-10-17 12:31:06-07:00,25200,2019-10-17 12:31:06-07:00,25200,True,False,"['__init__.py', 'deep_tf.py']",['5b982488913c2406ebb7fb90437bb0ca1c6349a9'],3,13,16,2,0.3333333333333333,0.3333333333333333,0.0
253d46403392778875d8ff93da67ad3838f64b9e,"Bugfixes and documentation for PyTorch explainer

- Explain in documentation that explained output tensor must be shaped B
x 1, with B being batch dimension
- Add support for progress updates
- Backpropagation retains graph for needed future computation",Alex Tseng,amtseng@stanford.edu,Alex Tseng,amtseng@stanford.edu,2020-01-27 18:01:59-08:00,28800,2020-01-27 18:01:59-08:00,28800,True,False,['deep_pytorch.py'],['277e54950d5b85d94089b7f09fcf64fb12bd9209'],4,19,23,1,0.0,0.0,0.0
4b4baf93718b0715eeb829151529e3402a93041e,compatibility w/ tf 2.0,anna shcherbina,annashcherbina@gmail.com,anna shcherbina,annashcherbina@gmail.com,2020-09-10 16:51:14-07:00,25200,2020-09-10 16:51:14-07:00,25200,True,False,['deep_tf.py'],['cc4a223c9697dd41b97a0f484d3b6c0bf9435dd2'],8,15,23,1,0.4,0.4,0.0
2eacfd181d4a0cae0ad6cc481fc29052cc4dac75,cleanup,anna shcherbina,annashcherbina@gmail.com,anna shcherbina,annashcherbina@gmail.com,2020-09-10 16:59:22-07:00,25200,2020-09-10 16:59:22-07:00,25200,True,False,['deep_tf.py'],['4b4baf93718b0715eeb829151529e3402a93041e'],10,12,22,1,1.0,1.0,1.0
e952c80189f4938a957f5972291263e37871c622,updated for back-comp w/ v1,anna shcherbina,annashcherbina@gmail.com,anna shcherbina,annashcherbina@gmail.com,2020-09-10 18:18:51-07:00,25200,2020-09-10 18:18:51-07:00,25200,True,False,['deep_tf.py'],['2eacfd181d4a0cae0ad6cc481fc29052cc4dac75'],2,2,4,1,,,
34488eb968266f4cd06a1460efced63ccd380d7f,preserving  session = keras.backend.get_session() for v1,anna shcherbina,annashcherbina@gmail.com,anna shcherbina,annashcherbina@gmail.com,2020-09-10 21:47:30-07:00,25200,2020-09-10 21:47:30-07:00,25200,True,False,['deep_tf.py'],['e952c80189f4938a957f5972291263e37871c622'],4,3,7,1,1.0,1.0,1.0
95d0208725ccef10abd11f65c578e3571be59f45,compatibility w/ v1 & v2,anna shcherbina,annashcherbina@gmail.com,anna shcherbina,annashcherbina@gmail.com,2020-09-10 23:28:12-07:00,25200,2020-09-10 23:28:12-07:00,25200,True,False,['deep_tf.py'],['34488eb968266f4cd06a1460efced63ccd380d7f'],6,6,12,1,0.0,0.0,0.0
f1011179b75de54c4e726037e4296ac5d24c0d6b,more compat stuff,anna shcherbina,annashcherbina@gmail.com,anna shcherbina,annashcherbina@gmail.com,2020-09-10 23:32:39-07:00,25200,2020-09-10 23:32:39-07:00,25200,True,False,['deep_tf.py'],['95d0208725ccef10abd11f65c578e3571be59f45'],8,12,20,1,0.0,0.0,0.0
276bb8cae899a79dedab15c294cd440e57d5695e,Consistency between tf1 and tf2 sessions,Av Shrikumar,avanti.shrikumar@gmail.com,GitHub,noreply@github.com,2020-09-10 23:47:01-07:00,25200,2020-09-10 23:47:01-07:00,25200,True,False,['deep_tf.py'],['0fa44160597502562b5f815593093f447017efd9'],1,1,2,1,,,
a9de67bcaddd1def79dbb7f05a9fede47367c855,reverting change that seems u nnecesary,anna shcherbina,annashcherbina@gmail.com,anna shcherbina,annashcherbina@gmail.com,2020-12-11 23:11:04-08:00,28800,2020-12-11 23:11:04-08:00,28800,True,False,['deep_tf.py'],['276bb8cae899a79dedab15c294cd440e57d5695e'],9,0,9,1,0.0,0.0,1.0
5fdad0651176cdbf1acd6c697604a71529695211,Updated to work with current Colab default env,Av Shrikumar,avanti.shrikumar@gmail.com,Av Shrikumar,avanti.shrikumar@gmail.com,2021-10-20 02:20:58-07:00,25200,2021-10-20 02:20:58-07:00,25200,True,False,['Tensorflow DeepExplainer Genomics Example With Hypothetical Importance Scores.ipynb'],['76cd4a03af0ad5968aaf33fc244a9fba4e8cfdae'],441,670,1111,1,,,
365b59c8526b14fdd0287755b663f8fd67ceca6d,Update README.md,Av Shrikumar,avanti.shrikumar@gmail.com,GitHub,noreply@github.com,2021-11-11 09:53:38-08:00,28800,2021-11-11 09:53:38-08:00,28800,True,False,['README.md'],['5fdad0651176cdbf1acd6c697604a71529695211'],1,2,3,1,,,
0c2d32ea1c8734f1791279d9e63f8f15698ce689,Update README.md,Av Shrikumar,avanti.shrikumar@gmail.com,GitHub,noreply@github.com,2021-11-11 09:54:17-08:00,28800,2021-11-11 09:54:17-08:00,28800,True,False,['README.md'],['365b59c8526b14fdd0287755b663f8fd67ceca6d'],0,1,1,1,,,
79f1b24d69311b2d74942fb6a4446807ed12174e,Update README.md,Av Shrikumar,avanti.shrikumar@gmail.com,GitHub,noreply@github.com,2021-11-11 09:54:47-08:00,28800,2021-11-11 09:54:47-08:00,28800,True,False,['README.md'],['0c2d32ea1c8734f1791279d9e63f8f15698ce689'],2,3,5,1,,,
29d2ffab405619340419fc848de6b53e2ef0f00c,fix for dropout,Surag,10693069+suragnair@users.noreply.github.com,Surag,10693069+suragnair@users.noreply.github.com,2022-06-30 20:33:32+00:00,0,2022-06-30 20:33:32+00:00,0,True,False,['deep_tf.py'],['79f1b24d69311b2d74942fb6a4446807ed12174e'],1,1,2,1,,,
