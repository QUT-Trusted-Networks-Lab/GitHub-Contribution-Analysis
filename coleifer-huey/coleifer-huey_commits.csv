Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
3be590d24c02adef4ba3e5b2101d9908ba8e16ef,Initial checkin of code for simple queue,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-03 11:40:09-05:00,18000,2011-11-03 11:40:09-05:00,18000,True,False,"['LICENSE', 'MANIFEST.in', 'runtests.py', 'setup.py', '__init__.py', '__init__.py', 'base.py', 'dummy.py', 'redis_backend.py', '__init__.py', 'config.py', 'skew_consumer.py', 'decorators.py', 'exceptions.py', 'queue.py', 'registry.py', 'tests.py', 'utils.py']",[],0,1062,1062,18,0.8571428571428571,0.9256360078277887,0.7592954990215264
5d14eaf458861271818920cc3c0a5e0c8b5e3691,Allow passing arbitrary keyword args to the redis connection,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 09:32:35-05:00,18000,2011-11-04 09:32:35-05:00,18000,True,False,['redis_backend.py'],['3be590d24c02adef4ba3e5b2101d9908ba8e16ef'],4,4,8,1,,,
f528fb0a48181f76fd36c3a85c32b3eebee1bd57,"Rewriting some of the test cases and starting work on tests for the
consumer",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 09:32:53-05:00,18000,2011-11-04 09:32:53-05:00,18000,True,False,"['__init__.py', 'config.py', 'consumer.py', 'crontab.py', 'queue.py']",['5d14eaf458861271818920cc3c0a5e0c8b5e3691'],85,125,210,5,1.0,1.0,1.0
1a4a5575811044c0fbc6aabc905c79c3a69bfff3,"Adding exception handling to the invokers enqueue and dequeue
operations, as well as to result store writing and reading.
Additionally cleaning up handling of None results in the result store.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 10:19:44-05:00,18000,2011-11-04 10:19:44-05:00,18000,True,False,"['dummy.py', 'redis_backend.py', 'exceptions.py', 'queue.py', 'queue.py', 'utils.py']",['f528fb0a48181f76fd36c3a85c32b3eebee1bd57'],13,55,68,6,1.0,1.0,1.0
d984b66ca3d63fdabda731ecbd9b78ec387bc970,"Changing the interface of the invoker to make it easier to use the queue
consumer (which I realized was not using the result store).  Added
blocking gets on the result store.  Also cleaning up exception handling
in the consumer.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 10:53:06-05:00,18000,2011-11-04 10:53:06-05:00,18000,True,False,"['skew_consumer.py', 'exceptions.py', 'queue.py', 'queue.py']",['1a4a5575811044c0fbc6aabc905c79c3a69bfff3'],54,107,161,4,0.358974358974359,0.6153846153846154,0.6153846153846154
72f8048d99f7d9f3d596d0af1d8a76e8cdc71b48,Starting work on testing elements of the consumer,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 11:26:44-05:00,18000,2011-11-04 11:26:44-05:00,18000,True,False,"['skew_consumer.py', 'consumer.py', 'queue.py']",['d984b66ca3d63fdabda731ecbd9b78ec387bc970'],2,49,51,3,1.0,1.0,0.8333333333333334
0034350ee13b79331368e3d05e522eb23635b4dd,First test of consumer,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 11:42:52-05:00,18000,2011-11-04 11:42:52-05:00,18000,True,False,"['skew_consumer.py', 'queue.py', 'consumer.py']",['72f8048d99f7d9f3d596d0af1d8a76e8cdc71b48'],3,37,40,3,0.9565217391304348,0.08695652173913043,0.8260869565217391
4076182ad9a71936f41d3c11ad742cde80eba6c8,Writing tests for the consumer threadpool and worker,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 12:18:51-05:00,18000,2011-11-04 12:18:51-05:00,18000,True,False,"['skew_consumer.py', 'queue.py', 'consumer.py']",['0034350ee13b79331368e3d05e522eb23635b4dd'],8,73,81,3,1.0,1.0,1.0
2939d1f514b2d063a2209098617c646c57ef0da3,Cleaning up the logic when using a non-blocking queue,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 12:25:12-05:00,18000,2011-11-04 12:25:12-05:00,18000,True,False,['skew_consumer.py'],['4076182ad9a71936f41d3c11ad742cde80eba6c8'],4,3,7,1,1.0,1.0,0.0
17a3b8124e04c546d957be085496c111ae51263a,Adding some very basic django integration,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 12:40:07-05:00,18000,2011-11-04 12:40:07-05:00,18000,True,False,"['__init__.py', '__init__.py', 'run_skew.py', 'models.py']",['2939d1f514b2d063a2209098617c646c57ef0da3'],0,64,64,4,1.0,1.0,0.56
5cd9d43e4238c33bd31c74af47c5e18d783dfa71,"Moving the django stuff into a submodule, skew.djskew, and providing a
simpler API since most configuration in django is handled in the
settings module.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 13:44:45-05:00,18000,2011-11-04 13:44:45-05:00,18000,True,False,"['config.py', '__init__.py', 'conf.py', 'decorators.py', '__init__.py', '__init__.py', 'run_skew.py', 'models.py']",['17a3b8124e04c546d957be085496c111ae51263a'],14,123,137,8,1.0,1.0,1.0
cea512805b182e8abc65f63ec5bd9cb9f28384b9,"Import crontab so you can use same import style with djskew and regualr
skew",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 13:55:52-05:00,18000,2011-11-04 13:55:52-05:00,18000,True,False,['decorators.py'],['5cd9d43e4238c33bd31c74af47c5e18d783dfa71'],1,1,2,1,,,
cfca5ccc1465757e93e6f1a644c639eb7131ab78,Fixing a bug in the redis blocking queue,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 13:56:13-05:00,18000,2011-11-04 13:56:13-05:00,18000,True,False,['redis_backend.py'],['cea512805b182e8abc65f63ec5bd9cb9f28384b9'],1,1,2,1,,,
a75069f072d4ee89696c7370228766a03cd84761,Fixing the test log handler,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 14:41:20-05:00,18000,2011-11-04 14:41:20-05:00,18000,True,False,['consumer.py'],['cfca5ccc1465757e93e6f1a644c639eb7131ab78'],1,1,2,1,,,
17b8861d271c44b3bc58993516c2efc2dacb3326,"Encoding some time information with the message to allow for scheduled
execution down the road maybe",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 15:11:17-05:00,18000,2011-11-04 15:11:17-05:00,18000,True,False,"['skew_consumer.py', 'queue.py', 'registry.py']",['a75069f072d4ee89696c7370228766a03cd84761'],24,35,59,3,1.0,1.0,0.8333333333333334
e5ca9a4c05bb7898462d99157e627b51fbf3e063,Adding a readme,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 15:11:38-05:00,18000,2011-11-04 15:11:38-05:00,18000,True,False,['README.rst'],['17b8861d271c44b3bc58993516c2efc2dacb3326'],0,7,7,1,,,
19dc5d560cac6cd1e0ce4952fcad6d7807d267e9,Small fix for periodic commands to ensure they dont' store results,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 15:49:59-05:00,18000,2011-11-04 15:49:59-05:00,18000,True,False,"['__init__.py', 'queue.py']",['e5ca9a4c05bb7898462d99157e627b51fbf3e063'],2,2,4,2,,,
e0cbb00d9cb38050d158e5fe356df492978c2ac6,"Whoops, wrong class",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 15:54:34-05:00,18000,2011-11-04 15:54:34-05:00,18000,True,False,['queue.py'],['19dc5d560cac6cd1e0ce4952fcad6d7807d267e9'],1,1,2,1,,,
4461036da0b74420ede93db6f51bbf3270de1005,Adding a missing import,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 16:04:26-05:00,18000,2011-11-04 16:04:26-05:00,18000,True,False,['redis_backend.py'],['e0cbb00d9cb38050d158e5fe356df492978c2ac6'],0,1,1,1,,,
02051ed76a0cd88e373d1fba442834664b425bf4,Fixing the async result when blocking is set to True so as to back off,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 16:04:34-05:00,18000,2011-11-04 16:04:34-05:00,18000,True,False,"['queue.py', 'utils.py']",['4461036da0b74420ede93db6f51bbf3270de1005'],4,8,12,2,0.0,0.5,0.5
1feea9cbbb24a4323c1617bd78ee0cd3e200e91a,"Make storing None results an option on the invoker and turn off by
default",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 16:26:23-05:00,18000,2011-11-04 16:26:23-05:00,18000,True,False,"['queue.py', 'queue.py']",['02051ed76a0cd88e373d1fba442834664b425bf4'],3,19,22,2,0.5,0.0,0.9
8b5fd3bd21e88507a89b19ffc0b4f1ea6971f8cd,Do not require a database configured if using with django,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-04 16:28:31-05:00,18000,2011-11-04 16:28:31-05:00,18000,True,False,['__init__.py'],['1feea9cbbb24a4323c1617bd78ee0cd3e200e91a'],3,6,9,1,,,
80d9adfaeda38dc39480217c1f18794b2506de22,Allow threads and periodic to be specified as management command options,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-07 15:28:51-06:00,21600,2011-11-07 15:28:51-06:00,21600,True,False,['run_skew.py'],['8b5fd3bd21e88507a89b19ffc0b4f1ea6971f8cd'],0,25,25,1,1.0,1.0,0.0
d8c612d395d5335fffc2ad52c47e9bf6697b2c8a,Adding a flush() method to the data store,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-07 17:59:51-06:00,21600,2011-11-07 17:59:51-06:00,21600,True,False,"['base.py', 'dummy.py', 'redis_backend.py']",['80d9adfaeda38dc39480217c1f18794b2506de22'],3,21,24,3,1.0,1.0,1.0
b68ef57b7408caf727fe79618b173dec639997a9,Fiddling with connection args,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-07 18:04:41-06:00,21600,2011-11-07 18:04:41-06:00,21600,True,False,"['dummy.py', 'redis_backend.py']",['d8c612d395d5335fffc2ad52c47e9bf6697b2c8a'],22,20,42,2,0.0,0.0,1.0
f770053fe466b5b7089dc3ee5df0bd3b765af159,"Renaming the result store to data store as it will double as a
persistence layer for tasks that need to run at a set time",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-07 18:07:03-06:00,21600,2011-11-07 18:07:03-06:00,21600,True,False,"['base.py', 'dummy.py', 'redis_backend.py', 'skew_consumer.py', '__init__.py', 'exceptions.py', 'queue.py', 'config.py', 'consumer.py', 'queue.py', 'utils.py']",['b68ef57b7408caf727fe79618b173dec639997a9'],47,47,94,11,,,
aed54bc4c6d84b7b767a0e24d56cd68e181c45f2,More work 'genericizing' the result store/data store,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-08 08:41:10-06:00,21600,2011-11-08 08:41:10-06:00,21600,True,False,"['base.py', 'dummy.py', 'redis_backend.py', 'config.py', 'skew_consumer.py', 'queue.py', 'queue.py']",['f770053fe466b5b7089dc3ee5df0bd3b765af159'],25,19,44,7,1.0,1.0,0.0
cc9ec5d3a81f5703795ab4710faa2b1f72160ba3,Naming things is hard,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-08 09:43:05-06:00,21600,2011-11-08 09:43:05-06:00,21600,True,False,"['skew_consumer.py', 'consumer.py']",['aed54bc4c6d84b7b767a0e24d56cd68e181c45f2'],23,23,46,2,,,
8e37123c86d76ce12688f5777207f9da9e3a3398,Beginning work on repurposing the scheduler,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-08 09:46:52-06:00,21600,2011-11-08 09:46:52-06:00,21600,True,False,['skew_consumer.py'],['cc9ec5d3a81f5703795ab4710faa2b1f72160ba3'],6,8,14,1,1.0,1.0,1.0
8c0d7fe440a9afb75f1553f8963e2e481efd83b4,Fixing a bad line in the redis backend,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-08 10:52:22-06:00,21600,2011-11-08 10:52:22-06:00,21600,True,False,['redis_backend.py'],['8e37123c86d76ce12688f5777207f9da9e3a3398'],1,1,2,1,,,
477ff482de2995199a13346f15a26979d374668d,Fixing djskew's handling of connection args,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-08 10:52:35-06:00,21600,2011-11-08 10:52:35-06:00,21600,True,False,['__init__.py'],['8c0d7fe440a9afb75f1553f8963e2e481efd83b4'],4,2,6,1,,,
d9f7730ef4df64f62fe132a07faa834ee03d1842,Adding a schedule function to the queue_command decorator,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-08 10:52:49-06:00,21600,2011-11-08 10:52:49-06:00,21600,True,False,['decorators.py'],['477ff482de2995199a13346f15a26979d374668d'],0,6,6,1,1.0,1.0,0.4
aa17f6647599f5eb121cb6a1a93e17f7cfe0c3cd,"Adding scheduled execution of commands with optional persistence layer
for schedule",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-08 14:33:38-06:00,21600,2011-11-08 14:33:38-06:00,21600,True,False,"['skew_consumer.py', '__init__.py', 'run_skew.py', 'queue.py']",['d9f7730ef4df64f62fe132a07faa834ee03d1842'],21,104,125,4,0.673469387755102,0.9387755102040817,0.7551020408163265
966bf8ac7d1025fd37ef4112f0c5e83d9b51cb07,Adding test case for schedule() and the CommandSchedule,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-08 23:07:28-06:00,21600,2011-11-08 23:07:28-06:00,21600,True,False,"['queue.py', 'queue.py']",['aa17f6647599f5eb121cb6a1a93e17f7cfe0c3cd'],3,95,98,2,0.28846153846153844,1.0,1.0
c29c4d8854229462a66a3e7aa5d42cca7b3a854e,Adding unit tests for scheduled execution by the consumer,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-09 14:20:34-06:00,21600,2011-11-09 14:20:34-06:00,21600,True,False,"['skew_consumer.py', 'consumer.py', 'queue.py']",['966bf8ac7d1025fd37ef4112f0c5e83d9b51cb07'],28,92,120,3,0.0,1.0,1.0
ba0798b266ddfebe584f22e9a4996880d38078f3,"find . -exec sed -i ""s|skew|huey|g"" {} \;",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-09 22:18:01-06:00,21600,2011-11-09 22:18:01-06:00,21600,True,False,"['README.rst', '__init__.py', '__init__.py', 'base.py', 'dummy.py', 'redis_backend.py', '__init__.py', 'config.py', 'huey_consumer.py', 'decorators.py', '__init__.py', 'conf.py', 'decorators.py', '__init__.py', '__init__.py', 'run_huey.py', 'models.py', 'exceptions.py', 'queue.py', 'registry.py', '__init__.py', 'config.py', 'consumer.py', 'crontab.py', 'queue.py', 'utils.py', 'runtests.py', 'setup.py', 'conf.py', '__init__.py']",['c29c4d8854229462a66a3e7aa5d42cca7b3a854e'],66,66,132,30,,,
f75b9dd65d6d689a474124771989d02e38189900,Updating the description,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-09 22:19:06-06:00,21600,2011-11-09 22:19:06-06:00,21600,True,False,['setup.py'],['ba0798b266ddfebe584f22e9a4996880d38078f3'],1,1,2,1,,,
d2882717a6e06dd6a2a21a31582e7c6b316a86f4,Updating the config,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-09 22:23:52-06:00,21600,2011-11-09 22:23:52-06:00,21600,True,False,['__init__.py'],['f75b9dd65d6d689a474124771989d02e38189900'],3,3,6,1,,,
07ef81006b3ece040e31397d78c7bda7ca042f87,Adding graphic,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-10 09:49:51-06:00,21600,2011-11-10 09:49:51-06:00,21600,True,False,['README.rst'],['d2882717a6e06dd6a2a21a31582e7c6b316a86f4'],0,2,2,1,,,
3035ba207a3c3b870b1ff5e5167b272d586cfdc5,Adding a helper function to convert local time to utc (not used yet),Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-10 13:24:14-06:00,21600,2011-11-10 13:24:14-06:00,21600,True,False,['utils.py'],['07ef81006b3ece040e31397d78c7bda7ca042f87'],0,5,5,1,1.0,1.0,1.0
c29f53f908725d748d8f14576525e71e2e6a63ef,"Adding a setting to skip enqueue-ing and execute in process (for debug
purposes and such)",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-10 13:24:31-06:00,21600,2011-11-10 13:24:31-06:00,21600,True,False,"['__init__.py', 'queue.py']",['3035ba207a3c3b870b1ff5e5167b272d586cfdc5'],2,10,12,2,1.0,1.0,0.5
94532568cd516ba5e4d078a24c5568b950ece6e6,Altering the syntax for using the .schedule(),Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-10 13:35:17-06:00,21600,2011-11-10 13:35:17-06:00,21600,True,False,"['decorators.py', 'consumer.py', 'queue.py']",['c29f53f908725d748d8f14576525e71e2e6a63ef'],9,9,18,3,,,
41a0b790536bd8506479416f610eed68c4f61c77,Missing else in try/except block,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-10 14:15:03-06:00,21600,2011-11-10 14:15:03-06:00,21600,True,False,['huey_consumer.py'],['94532568cd516ba5e4d078a24c5568b950ece6e6'],11,11,22,1,1.0,0.0,1.0
7fb7270dc14298db4056e0f959137e3983c58c5a,Adding conversion to utc,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-14 15:58:35-06:00,21600,2011-11-14 15:58:35-06:00,21600,True,False,"['config.py', 'huey_consumer.py', 'decorators.py', 'consumer.py', 'queue.py']",['41a0b790536bd8506479416f610eed68c4f61c77'],8,38,46,5,0.5789473684210527,1.0,0.8421052631578947
f91ad9e091c009f03fe40d929f8c82b3ae2439e5,Adding another testcase to loca/utc,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2011-11-14 16:32:14-06:00,21600,2011-11-14 16:32:14-06:00,21600,True,False,['consumer.py'],['7fb7270dc14298db4056e0f959137e3983c58c5a'],0,44,44,1,0.0,1.0,1.0
6da5bedc64ddd36e8e28684c6a89c96f649f6e2e,Starting work writing documentation for huey,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-02 21:49:15-06:00,21600,2012-01-02 21:49:15-06:00,21600,True,False,"['Makefile', 'layout.html', 'relations.html', 'flasky.css_t', 'small_flask.css', 'theme.conf', 'conf.py', 'example.jpg', 'example_results.jpg', 'getting-started.rst', 'index.rst', 'installation.rst', 'make.bat']",['f91ad9e091c009f03fe40d929f8c82b3ae2439e5'],0,1347,1347,13,,,
4fb1ef7ec43985210b24fa817091272830af024b,Adding docs on more usage patterns of the queue,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-02 23:05:32-06:00,21600,2012-01-02 23:05:32-06:00,21600,True,False,"['example_crontab.jpg', 'example_schedule.jpg', 'getting-started.rst']",['6da5bedc64ddd36e8e28684c6a89c96f649f6e2e'],9,108,117,3,,,
5324e69a4810cb6200cb247844940080865d5998,Adding notes on running with django,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-02 23:50:50-06:00,21600,2012-01-02 23:50:50-06:00,21600,True,False,"['example_django.jpg', 'getting-started.rst']",['4fb1ef7ec43985210b24fa817091272830af024b'],0,85,85,2,,,
0e730dca82efc2e66939fd8b86d6d35eca6ec07d,Adding logo,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-02 23:53:58-06:00,21600,2012-01-02 23:53:58-06:00,21600,True,False,"['huey.jpg', 'logo.jpg']",['5324e69a4810cb6200cb247844940080865d5998'],0,0,0,2,,,
fe2b20633fb3a9b3e8842e6cdf9feb31adcedecb,Starting docs on troubleshooting,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-03 15:45:54-06:00,21600,2012-01-03 15:45:54-06:00,21600,True,False,"['index.rst', 'troubleshooting.rst']",['0e730dca82efc2e66939fd8b86d6d35eca6ec07d'],0,24,24,2,,,
87e21c1c0c83c3bd4eccfa6cd870207c128a5ad8,Updating the troubleshooting docs,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-03 16:15:50-06:00,21600,2012-01-03 16:15:50-06:00,21600,True,False,"['troubleshooting.rst', '__init__.py']",['fe2b20633fb3a9b3e8842e6cdf9feb31adcedecb'],1,31,32,2,,,
efc6b9c7574fc238f34f759c842a31e16e9e69de,Updates to the docs,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-03 19:34:11-06:00,21600,2012-01-03 19:34:11-06:00,21600,True,False,"['api.rst', 'imports.rst', 'index.rst', 'troubleshooting.rst']",['87e21c1c0c83c3bd4eccfa6cd870207c128a5ad8'],0,207,207,4,,,
71c74a2aa32b750aa22fbc38298573570d0ba42f,Adding more docs to the api,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-03 20:17:35-06:00,21600,2012-01-03 20:17:35-06:00,21600,True,False,['api.rst'],['efc6b9c7574fc238f34f759c842a31e16e9e69de'],2,99,101,1,,,
401f284c82a1d2dbea59e00af2a9cf76c87d5854,Added some info on the asyndata obj,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-03 23:11:08-06:00,21600,2012-01-03 23:11:08-06:00,21600,True,False,['api.rst'],['71c74a2aa32b750aa22fbc38298573570d0ba42f'],1,41,42,1,,,
413118d476234097fbb59dc27258838cc1e50040,Finishing up the main api docs,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-04 10:23:20-06:00,21600,2012-01-04 10:23:20-06:00,21600,True,False,['api.rst'],['401f284c82a1d2dbea59e00af2a9cf76c87d5854'],2,168,170,1,,,
854e5a315269513e6ed93dce67dca949a737cb73,Adding docs on the django api,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-04 10:46:32-06:00,21600,2012-01-04 10:46:32-06:00,21600,True,False,['api.rst'],['413118d476234097fbb59dc27258838cc1e50040'],2,124,126,1,,,
ba6ed47de3417e27583ca1f357af297774649372,Fixing broken references,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-04 11:03:09-06:00,21600,2012-01-04 11:03:09-06:00,21600,True,False,"['api.rst', 'getting-started.rst']",['854e5a315269513e6ed93dce67dca949a737cb73'],7,9,16,2,,,
3862ab61292643c9eb72f69b362f4ee41cc2485a,"Adding some examples, fixes #1",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-04 14:53:46-06:00,21600,2012-01-04 14:53:57-06:00,21600,True,False,"['README', '__init__.py', 'manage.py', 'settings.py', '__init__.py', 'commands.py', 'models.py', 'urls.py', 'README', '__init__.py', 'commands.py', 'config.py', 'main.py']",['ba6ed47de3417e27583ca1f357af297774649372'],0,104,104,13,1.0,1.0,1.0
1504d80d95988125eb59353df836e09d080f22d6,"Added code to try dynamic import when comand comes down the pipe and
isn't in the registry",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-07 11:51:45-06:00,21600,2012-01-07 11:51:45-06:00,21600,True,False,"['registry.py', '__init__.py', 'config.py', 'registry.py', 'test_cmd.py']",['3862ab61292643c9eb72f69b362f4ee41cc2485a'],5,58,63,5,1.0,1.0,1.0
71ca49e2701b037c09365ced9668c0862124300a,Adding docs on the new dynamic import stuff and version bamp,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-07 13:39:56-06:00,21600,2012-01-07 13:39:56-06:00,21600,True,False,"['CHANGELOG', 'MANIFEST.in', 'conf.py', 'imports.rst', 'setup.py']",['1504d80d95988125eb59353df836e09d080f22d6'],6,23,29,5,,,
6685904255c252b3cd2a2bdf8bdc635a1f41fba6,"Starting work by adding in places where ""retries"" can be specified --
need to work this out for the django decorator as well, which is
slightly different",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-27 00:03:11-06:00,21600,2012-01-27 00:03:11-06:00,21600,True,False,"['huey_consumer.py', 'decorators.py', 'queue.py', 'registry.py']",['71ca49e2701b037c09365ced9668c0862124300a'],8,21,29,4,1.0,1.0,0.9166666666666666
d04a7cda848be811e0dd3e9a102dc62dda4b7a24,Adding test coverage for retrying tasks,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-27 18:00:03-06:00,21600,2012-01-27 18:00:03-06:00,21600,True,False,['consumer.py'],['6685904255c252b3cd2a2bdf8bdc635a1f41fba6'],0,71,71,1,0.10714285714285714,1.0,1.0
8ac4982e3b66a89394bef2e4279bceba94565ce6,Updating the django queue_command decorator,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-27 18:00:13-06:00,21600,2012-01-27 18:00:13-06:00,21600,True,False,['decorators.py'],['d04a7cda848be811e0dd3e9a102dc62dda4b7a24'],2,6,8,1,1.0,1.0,1.0
1defd32b622014b544744b52b9c9b51efb53e844,decorator with optional parameter can be called in variety of ways,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-27 18:18:27-06:00,21600,2012-01-27 18:18:27-06:00,21600,True,False,['decorators.py'],['8ac4982e3b66a89394bef2e4279bceba94565ce6'],2,5,7,1,,,
760cd2ca006e37375ab5392d206b9e88ff25ceb0,Blampfkins,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-27 18:19:27-06:00,21600,2012-01-27 18:19:27-06:00,21600,True,False,['setup.py'],['1defd32b622014b544744b52b9c9b51efb53e844'],1,1,2,1,,,
9c3fcf2d71ed60e03133853a8456376b375d7b94,"Add the ability to delay retries in seconds, which included splitting
out the scheduled tasks from periodic ones in the consumer",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-28 17:55:00-06:00,21600,2012-01-28 17:55:00-06:00,21600,True,False,"['huey_consumer.py', 'decorators.py', 'decorators.py', 'queue.py', 'registry.py']",['760cd2ca006e37375ab5392d206b9e88ff25ceb0'],16,40,56,5,1.0,1.0,0.7894736842105263
4123ecfef66aa051890d603b93006b04ebd414d6,Test retry delay,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-28 18:06:01-06:00,21600,2012-01-28 18:06:01-06:00,21600,True,False,['consumer.py'],['9c3fcf2d71ed60e03133853a8456376b375d7b94'],0,31,31,1,0.25,1.0,1.0
5c9016f6c6d574ff9c88eccc6be72d83d15b8b19,"Simplifying the name used to serialize a command and removing dynamic
import stuff",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-30 13:10:32-06:00,21600,2012-01-30 13:10:32-06:00,21600,True,False,"['registry.py', 'queue.py', 'registry.py']",['4123ecfef66aa051890d603b93006b04ebd414d6'],33,8,41,3,0.0,0.0,0.0
58c4b4b8bdf8a3f65a70a91883975e27de8f4246,Updating documentation with notes on retries and retry_delay,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-30 16:19:18-06:00,21600,2012-01-30 16:19:18-06:00,21600,True,False,"['getting-started.rst', 'imports.rst']",['5c9016f6c6d574ff9c88eccc6be72d83d15b8b19'],5,61,66,2,,,
1e6263360313209ce3f40e7d3b9024a632293081,Adding images for docs,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-01-30 16:20:26-06:00,21600,2012-01-30 16:20:26-06:00,21600,True,False,"['example_retry.jpg', 'example_retry_delay.jpg']",['58c4b4b8bdf8a3f65a70a91883975e27de8f4246'],0,0,0,2,,,
26c39a0f1718b160f59bd1a848a312ab6da00d59,Adding an example showing retries,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-02-02 15:05:20-06:00,21600,2012-02-02 15:05:20-06:00,21600,True,False,"['commands.py', 'commands.py']",['1e6263360313209ce3f40e7d3b9024a632293081'],0,14,14,2,1.0,1.0,1.0
7751560efddea301a6d4c7364ec6ba0eb70dd837,Better ex,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-02-02 15:08:47-06:00,21600,2012-02-02 15:08:47-06:00,21600,True,False,"['commands.py', 'commands.py']",['26c39a0f1718b160f59bd1a848a312ab6da00d59'],2,6,8,2,1.0,1.0,1.0
ab1063a5ccfce803a52f63f2d9c52d78568460f9,Updating docs on queue command api,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-02-02 15:33:33-06:00,21600,2012-02-02 15:33:47-06:00,21600,True,False,['api.rst'],['7751560efddea301a6d4c7364ec6ba0eb70dd837'],1,3,4,1,,,
e842adc24dee0aa7ce89df4314f0ed3e93ba0cd9,Bumping doc version,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-02-02 15:34:08-06:00,21600,2012-02-02 15:34:08-06:00,21600,True,False,['conf.py'],['ab1063a5ccfce803a52f63f2d9c52d78568460f9'],2,2,4,1,,,
064f3a5cad9d0a38d6db8134bae8f38a1db6f4fa,Adding huey.jpg,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-02-08 12:13:02-06:00,21600,2012-02-08 12:13:02-06:00,21600,True,False,['huey.jpg'],['e842adc24dee0aa7ce89df4314f0ed3e93ba0cd9'],0,0,0,1,,,
3e18f2975a0c753d4c3b819bb78961719cb358ed,Updating readme,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-02-08 12:14:46-06:00,21600,2012-02-08 12:14:46-06:00,21600,True,False,['README.rst'],['064f3a5cad9d0a38d6db8134bae8f38a1db6f4fa'],0,13,13,1,,,
7df0884b80dfd151d1bb117131f2767eca836bb9,Updating index,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-02-08 12:16:11-06:00,21600,2012-02-08 12:16:11-06:00,21600,True,False,['index.rst'],['3e18f2975a0c753d4c3b819bb78961719cb358ed'],0,5,5,1,,,
24b7750bb73308b88b232d5fc5d305fa05c8ce10,add shebang line to huey_consumer.py like that the shell knows how to execute it,Psycojoker,psycojoker@gmail.com,Psycojoker,psycojoker@gmail.com,2012-03-05 05:49:06+01:00,-3600,2012-03-05 05:49:06+01:00,-3600,True,False,['huey_consumer.py'],['7df0884b80dfd151d1bb117131f2767eca836bb9'],0,1,1,1,,,
a57b8fe5f27658961d0605e551923116b0e77c29,"Fixing missing variable that leads to NameError, fixes #3 thanks for
reporting",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-04-06 16:50:20-05:00,18000,2012-04-06 16:50:20-05:00,18000,True,False,['huey_consumer.py'],['a031f56a9ac4617967b2b3a5e18f6e375e6a44bf'],1,0,1,1,,,
623d5a278374ace3648d2e345403214bbc5c4009,Version bump,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-04-06 16:51:13-05:00,18000,2012-04-06 16:51:13-05:00,18000,True,False,['setup.py'],['a57b8fe5f27658961d0605e551923116b0e77c29'],1,1,2,1,,,
2bfbbbd0b65a30902e65e715b86779d86a1f8297,Use the nature theme for better readability,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-04-09 07:47:21-05:00,18000,2012-04-09 07:47:21-05:00,18000,True,False,['conf.py'],['623d5a278374ace3648d2e345403214bbc5c4009'],7,8,15,1,,,
31756ea83e5a010ea44d04f8d3abfe444406738b,"Suggesting the use of manage.py in the getting started doc, thanks
@jsullivanlive",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-04-16 22:59:01-05:00,18000,2012-04-16 22:59:44-05:00,18000,True,False,['getting-started.rst'],['2bfbbbd0b65a30902e65e715b86779d86a1f8297'],2,2,4,1,,,
29b2a8f23c7df6bb4fe8efb68a5af43dc0acf091,Added possibility to get current retry as parameter,Leora,leora.friedrich@chocri.de,Leora,leora.friedrich@chocri.de,2012-04-18 09:20:11+02:00,-7200,2012-04-18 09:45:24+02:00,-7200,True,False,"['decorators.py', 'decorators.py']",['31756ea83e5a010ea44d04f8d3abfe444406738b'],5,7,12,2,1.0,1.0,0.0
7fdeb9fb50e5d55af4b67110ca757177f40c8a79,"Fixing broken, image, fixes #6 [critical]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-06-11 11:58:24-05:00,18000,2012-06-11 11:58:24-05:00,18000,True,False,['README.rst'],['2a27f503f4abb8ddb889e4a25c1617b8953e0442'],1,1,2,1,,,
4d35ecb06366658e16236de1d2bbd77662a2608f,Restructuring imports for simplicity,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-08-10 18:25:21-05:00,18000,2012-08-10 18:25:21-05:00,18000,True,False,"['__init__.py', 'config.py', 'consumer.py', 'crontab.py']",['7fdeb9fb50e5d55af4b67110ca757177f40c8a79'],106,107,213,4,,,
ea7ecee6f2d9e596c8ce72d2953f9f11d9455dbe,Cleaning up imports in example,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-08-10 18:27:06-05:00,18000,2012-08-10 18:27:06-05:00,18000,True,False,['config.py'],['4d35ecb06366658e16236de1d2bbd77662a2608f'],2,1,3,1,,,
1b7f09920fc541e72160731000001fb3e7454841,Updating getting started docs w/new imports,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-08-10 18:28:58-05:00,18000,2012-08-10 18:28:58-05:00,18000,True,False,['getting-started.rst'],['ea7ecee6f2d9e596c8ce72d2953f9f11d9455dbe'],17,15,32,1,,,
521402f87ce3b1bc27f12310ee66d8fd4f18a767,version bump,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-08-21 10:22:26-05:00,18000,2012-08-21 10:22:26-05:00,18000,True,False,"['conf.py', 'setup.py']",['1b7f09920fc541e72160731000001fb3e7454841'],3,3,6,2,,,
17f793832ee4629765ea97f8b811b86382521531,"Changed ValidationError to ValueError

And added a testcase to reproduce and fix this.",Horacio G. de Oro,hgdeoro@gmail.com,Horacio G. de Oro,hgdeoro@gmail.com,2012-09-29 11:53:05-03:00,10800,2012-09-29 11:53:05-03:00,10800,True,False,"['decorators.py', 'crontab.py']",['521402f87ce3b1bc27f12310ee66d8fd4f18a767'],2,7,9,2,1.0,1.0,1.0
78f806edde0afe04520df8b7e6662a7e53d3bb07,Adds missing import of QueueException,Horacio G. de Oro,hgdeoro@gmail.com,Charles Leifer,coleifer@gmail.com,2012-09-29 11:59:05-03:00,10800,2012-09-29 10:26:32-05:00,18000,True,False,['queue.py'],['1b6ad78e9cba168d4ca32cc78f200f608cecba4b'],1,2,3,1,,,
9415ce795cd899912ea0f725408a79cfdc7d8ca0,Small fix per changes in #9 and addition to tests,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-14 11:34:33-06:00,21600,2012-11-14 11:34:33-06:00,21600,True,False,"['queue.py', 'consumer.py']",['78f806edde0afe04520df8b7e6662a7e53d3bb07'],1,4,5,2,0.0,1.0,1.0
9e84a932896b737b1778db70f49983d995567aaa,whitespace,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-26 20:03:45-06:00,21600,2012-11-26 20:03:45-06:00,21600,True,False,"['base.py', 'dummy.py', 'redis_backend.py', 'config.py', 'huey_consumer.py', 'decorators.py', 'queue.py', 'registry.py', 'queue.py']",['9415ce795cd899912ea0f725408a79cfdc7d8ca0'],203,203,406,9,,,
9533b03619af8091728b63652ab31e1258343f4b,Marking a few methods as private,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-26 21:08:52-06:00,21600,2012-11-26 21:08:52-06:00,21600,True,False,['queue.py'],['9e84a932896b737b1778db70f49983d995567aaa'],4,4,8,1,,,
5dbd588abf72a1e6278c0cde02614b6455ac4cf5,Adding a peek() method to the data store,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-26 21:17:04-06:00,21600,2012-11-26 21:17:04-06:00,21600,True,False,"['base.py', 'dummy.py', 'redis_backend.py', 'queue.py']",['9533b03619af8091728b63652ab31e1258343f4b'],4,17,21,4,1.0,1.0,0.8888888888888888
1756ce90c5bd53fc239ab7b35c2dafba841ac2dd,Adding tests for new methods,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-26 21:34:55-06:00,21600,2012-11-26 21:34:55-06:00,21600,True,False,"['base.py', 'dummy.py', 'redis_backend.py', '__init__.py', 'backends.py', 'queue.py', 'registry.py']",['5dbd588abf72a1e6278c0cde02614b6455ac4cf5'],10,79,89,7,0.28,1.0,1.0
96c9a15c7c9be4146f5c32545fcd0a828db74472,Adding revoke functionality,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-26 22:08:36-06:00,21600,2012-11-26 22:08:36-06:00,21600,True,False,"['huey_consumer.py', 'decorators.py', 'exceptions.py', 'queue.py']",['1756ce90c5bd53fc239ab7b35c2dafba841ac2dd'],16,73,89,4,1.0,0.8260869565217391,0.34782608695652173
20111c54f04161a1a7d71c029c52646e957b15b8,"Make it possible to cancel asyncdata stuff, too",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-26 22:18:08-06:00,21600,2012-11-26 22:18:08-06:00,21600,True,False,"['queue.py', 'consumer.py']",['96c9a15c7c9be4146f5c32545fcd0a828db74472'],18,21,39,2,0.0,0.0,0.0
ebefd4b2dc8f6c7682c61732ae47eca442cc6cdd,Adding a few basic tests,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-26 22:26:36-06:00,21600,2012-11-26 22:26:36-06:00,21600,True,False,['queue.py'],['20111c54f04161a1a7d71c029c52646e957b15b8'],0,51,51,1,0.05555555555555555,1.0,1.0
7ffc0166ffb0741f13158240bd99d58d532cd0f5,Adding a can_run to complement should_run,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-26 23:11:09-06:00,21600,2012-11-26 23:11:09-06:00,21600,True,False,"['huey_consumer.py', 'queue.py', 'queue.py']",['ebefd4b2dc8f6c7682c61732ae47eca442cc6cdd'],9,11,20,3,0.0,0.5,1.0
48ba620165795d239a2882e8037cec7ec1cc9735,Adding tests for periodic command revoking,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-27 11:25:05-06:00,21600,2012-11-27 11:25:05-06:00,21600,True,False,"['decorators.py', 'consumer.py']",['7ffc0166ffb0741f13158240bd99d58d532cd0f5'],1,159,160,2,0.2903225806451613,1.0,1.0
bf7521e7ffa9d2a7c953e953b4482dc4a9786c78,Check revoke until on periodic commands,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-27 11:32:06-06:00,21600,2012-11-27 11:32:06-06:00,21600,True,False,['consumer.py'],['48ba620165795d239a2882e8037cec7ec1cc9735'],0,21,21,1,0.0,1.0,1.0
95e4975564b47a1f6163be60745a9efd05403c63,Adding some bits,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-27 12:17:24-06:00,21600,2012-11-27 12:17:24-06:00,21600,True,False,"['huey_consumer.py', 'decorators.py', 'queue.py']",['bf7521e7ffa9d2a7c953e953b4482dc4a9786c78'],2,5,7,3,1.0,1.0,1.0
a4132b26d686e15c19eedc2333d803c2a7f24942,Updating docs on revoke/restore,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-27 12:44:29-06:00,21600,2012-11-27 12:44:29-06:00,21600,True,False,"['api.rst', 'getting-started.rst']",['95e4975564b47a1f6163be60745a9efd05403c63'],4,191,195,2,,,
d2defdb28f634a4d255f08d82965f661022d3b1f,Adding back preserve,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-27 12:46:27-06:00,21600,2012-11-27 12:46:27-06:00,21600,True,False,['decorators.py'],['a4132b26d686e15c19eedc2333d803c2a7f24942'],2,2,4,1,,,
2e817c9a329b28482e12c8f5ebfd246b743e5ec0,Version,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-27 12:48:40-06:00,21600,2012-11-27 12:48:40-06:00,21600,True,False,"['conf.py', 'setup.py']",['d2defdb28f634a4d255f08d82965f661022d3b1f'],3,3,6,2,,,
b12ceaa98140e979a98059a883d1e419efde919a,"Adding a delay= parameter, fixes #12 :hamster:",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-28 09:57:37-06:00,21600,2012-11-28 09:57:37-06:00,21600,True,False,"['decorators.py', 'queue.py']",['2e817c9a329b28482e12c8f5ebfd246b743e5ec0'],1,38,39,2,0.14814814814814814,0.6666666666666666,0.8518518518518519
262e782c51c7bf0efdd59d8706e66fdfb4e03b6b,Docs for delay,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-28 09:58:04-06:00,21600,2012-11-28 09:58:04-06:00,21600,True,False,"['api.rst', 'getting-started.rst']",['b12ceaa98140e979a98059a883d1e419efde919a'],5,15,20,2,,,
571dd406fda92aa602b5c87fdc50e24b49c7aeb4,Version,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-11-28 09:58:24-06:00,21600,2012-11-28 09:58:24-06:00,21600,True,False,"['conf.py', 'setup.py']",['262e782c51c7bf0efdd59d8706e66fdfb4e03b6b'],3,3,6,2,,,
7907e42a3e7eaa6014b07c0b515a19b72881e81e,"Simplifying message encoding, thanks for the tip @dmr, don't know why I
had it different",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-12-01 11:43:56-06:00,21600,2012-12-01 11:43:56-06:00,21600,True,False,['registry.py'],['571dd406fda92aa602b5c87fdc50e24b49c7aeb4'],18,10,28,1,0.0,0.0,0.0
cb21bb3500bcebbed143ecb4c5bd57d00740a987,Changing message format,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2012-12-01 11:46:56-06:00,21600,2012-12-01 11:46:56-06:00,21600,True,False,['setup.py'],['7907e42a3e7eaa6014b07c0b515a19b72881e81e'],1,1,2,1,,,
ab1cc9e4b91f381a8a9dbd1ff16ed31216cbf944,Update README.rst,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-04-02 17:03:10-05:00,18000,2013-04-02 17:03:10-05:00,18000,True,False,['README.rst'],['cb21bb3500bcebbed143ecb4c5bd57d00740a987'],1,1,2,1,,,
5dd4986675b4176ebf5b4289741ba2f74bf1aabb,Update index.rst,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-04-02 17:03:37-05:00,18000,2013-04-02 17:03:37-05:00,18000,True,False,['index.rst'],['ab1cc9e4b91f381a8a9dbd1ff16ed31216cbf944'],1,1,2,1,,,
bfb9878895df32aef8d2cd7ce62fa5c305ffc43c,"Starting rewrite, moving logic into api module",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-03-29 10:46:52-05:00,18000,2013-05-08 19:55:49-05:00,18000,True,False,"['__init__.py', 'api.py', 'base.py', 'redis_backend.py', 'huey_consumer.py', 'decorators.py', 'registry.py', 'utils.py']",['5dd4986675b4176ebf5b4289741ba2f74bf1aabb'],331,295,626,8,1.0,0.0,0.0
a1cdfeb469086ed43f2bba395e87d54a43d265b4,Cleaning up api,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-04-24 15:03:07-05:00,18000,2013-05-08 19:55:49-05:00,18000,True,False,['api.py'],['bfb9878895df32aef8d2cd7ce62fa5c305ffc43c'],22,54,76,1,0.0,0.0,1.0
5de9aede27cf0e3fab541393b63ec4c516bce106,Only export the basics,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-04-24 15:03:23-05:00,18000,2013-05-08 19:55:49-05:00,18000,True,False,['__init__.py'],['a1cdfeb469086ed43f2bba395e87d54a43d265b4'],1,1,2,1,,,
c59c9d567cdf5b98bc201b79296f1f21cc71e85c,Small stuff in api/backends,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-04-24 15:36:47-05:00,18000,2013-05-08 19:55:49-05:00,18000,True,False,"['api.py', 'dummy.py', 'redis_backend.py']",['5de9aede27cf0e3fab541393b63ec4c516bce106'],9,6,15,3,,,
55d9357f2101441e98477aecd9b04dbd2de84f9d,"Small changes, working on large-scale refactor/rewrite of consumer.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-04-27 14:32:36-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,"['api.py', 'config.py', 'huey_consumer.py', 'registry.py']",['c59c9d567cdf5b98bc201b79296f1f21cc71e85c'],202,375,577,4,0.45901639344262296,0.8688524590163934,0.7950819672131147
be8e7ff96f445e2f6bd2e50ad2df064f559b464c,Rewriting api and queue consumer,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-04-30 11:51:55-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,"['api.py', 'huey_consumer.py']",['55d9357f2101441e98477aecd9b04dbd2de84f9d'],318,201,519,2,0.0,0.03278688524590164,0.06557377049180328
50ecc62341afdaf12e219af4a0d1d8fcb7f1c192,Refactoring djhuey,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-01 09:07:32-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,"['__init__.py', 'decorators.py', 'run_huey.py']",['be8e7ff96f445e2f6bd2e50ad2df064f559b464c'],78,59,137,3,0.0,0.0,0.7142857142857143
9aee6385f79005dc3bb71c217ae6d939896eb25d,Removing unneeded conf.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-01 09:07:51-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,['conf.py'],['50ecc62341afdaf12e219af4a0d1d8fcb7f1c192'],5,0,5,1,,,
5d9fa6cae3f0670efc542b260982a0de6bf6c3f4,Cleaning up logging,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-01 09:08:05-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,['huey_consumer.py'],['9aee6385f79005dc3bb71c217ae6d939896eb25d'],31,39,70,1,1.0,1.0,1.0
709df9e1bfd8ed90fc99dc5844ef59cf8568507f,Tests,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-01 16:18:05-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,"['api.py', 'huey_consumer.py', 'registry.py', '__init__.py', 'backends.py', 'config.py', 'consumer.py', 'crontab.py', 'queue.py', 'test_cmd.py']",['5d9fa6cae3f0670efc542b260982a0de6bf6c3f4'],176,166,342,10,1.0,0.0,0.0
92001b49e578a6114439495b4c7f9ccfb6fd20d7,Refactoring consumer tests.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-01 18:18:24-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,"['huey_consumer.py', 'consumer.py']",['709df9e1bfd8ed90fc99dc5844ef59cf8568507f'],82,70,152,2,1.0,0.0,0.0
8f9534317527087ec4b64a36994aef515ec0782f,Cleaning up tests and getting passing.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-05 18:04:28-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,"['huey_consumer.py', 'consumer.py']",['92001b49e578a6114439495b4c7f9ccfb6fd20d7'],274,195,469,2,1.0,0.0,0.0
bada880326d4fceb5bce1d1731f73dcd5eecf3ba,Cleaning up the example app,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-05 18:20:26-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,"['README', 'config.py', 'cons.sh', 'main.py', 'tasks.py']",['8f9534317527087ec4b64a36994aef515ec0782f'],18,25,43,5,1.0,1.0,1.0
730c356f312989c168f09ba6e3e1471b9fbb70c0,Removing debugging,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-05 18:20:32-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,['huey_consumer.py'],['bada880326d4fceb5bce1d1731f73dcd5eecf3ba'],1,0,1,1,,,
117d4597e5ddf3028c7322a2b6c3f5dd0088aaae,Updates to djhuey,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-05 19:12:04-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,"['settings.py', 'tasks.py', 'redis_backend.py', '__init__.py', 'decorators.py']",['730c356f312989c168f09ba6e3e1471b9fbb70c0'],73,94,167,5,0.0,0.0,0.8333333333333334
20cd28ad0c8c88271bb0ae8336afdd03cd894f68,API for django,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-05 19:12:26-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,['api.py'],['117d4597e5ddf3028c7322a2b6c3f5dd0088aaae'],0,15,15,1,1.0,1.0,0.2857142857142857
3fc2cd1edd6b1b8a3ebe74a767583bd5e43d5c89,Removing the assigning of time in the loop() method,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-05 21:08:46-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,['huey_consumer.py'],['20cd28ad0c8c88271bb0ae8336afdd03cd894f68'],4,8,12,1,1.0,0.75,1.0
a296995bf1fa85ff299ef0b5d0e8c0baf8ecfa66,Working on doc cleanup,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-05 21:30:46-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,"['api.rst', 'crontab.png', 'django.png', 'example.jpg', 'example_crontab.jpg', 'example_django.jpg', 'example_results.jpg', 'example_retry.jpg', 'example_retry_delay.jpg', 'example_schedule.jpg', 'getting-started.rst', 'imports.rst', 'index.rst', 'installation.rst', 'intro.png', 'results.png', 'retry-delay.png', 'retry.png', 'schedule.png', 'troubleshooting.rst']",['3fc2cd1edd6b1b8a3ebe74a767583bd5e43d5c89'],289,239,528,20,,,
7b91779805014dfb11d5c9c8a8e2a30d8ded28c9,Shortcuts,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-05 23:56:32-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,"['__init__.py', 'huey_consumer.py', 'consumer.py']",['a296995bf1fa85ff299ef0b5d0e8c0baf8ecfa66'],6,20,26,3,1.0,1.0,0.3333333333333333
bdee226f8cce97669551fa1d69f6c372787ec1ba,"More docs, removing djhuey",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-06 22:32:27-05:00,18000,2013-05-08 19:55:50-05:00,18000,True,False,"['README.rst', 'api.rst', 'consumer.rst', 'django.png', 'getting-started.rst', 'imports.rst', 'index.rst', 'troubleshooting.rst', 'README', '__init__.py', 'manage.py', 'settings.py', '__init__.py', 'models.py', 'tasks.py', 'urls.py', 'config.py', 'api.py', '__init__.py', 'api.py', '__init__.py', '__init__.py', 'run_huey.py', 'models.py']",['7b91779805014dfb11d5c9c8a8e2a30d8ded28c9'],824,379,1203,24,0.0,0.0,0.325
204e21d1f8cdb635b91328b5cd638298f509ef66,Fixing django integration,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-07 19:22:57-05:00,18000,2013-05-08 19:55:51-05:00,18000,True,False,"['huey_consumer.py', '__init__.py', '__init__.py', '__init__.py', 'run_huey.py', 'models.py']",['bdee226f8cce97669551fa1d69f6c372787ec1ba'],1,184,185,6,0.9622641509433962,1.0,0.5471698113207547
6611aa9b5ac32106503438161a4298b8be63ad85,Bringing back django example.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-07 19:23:10-05:00,18000,2013-05-08 19:55:51-05:00,18000,True,False,"['README', '__init__.py', 'manage.py', 'settings.py', '__init__.py', 'models.py', 'tasks.py', 'urls.py']",['204e21d1f8cdb635b91328b5cd638298f509ef66'],0,66,66,8,1.0,1.0,1.0
da589c04c3bae5794c11e12da2fc8b1b770bd9a7,Adding Django docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-07 19:46:30-05:00,18000,2013-05-08 19:55:51-05:00,18000,True,False,"['README.rst', 'django.rst', 'getting-started.rst', 'index.rst', '__init__.py', 'setup.py']",['6611aa9b5ac32106503438161a4298b8be63ad85'],2,91,93,6,,,
3b73c0c52d7494c8c492143ee6546acbcf80d668,Fixing option name.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-07 19:54:16-05:00,18000,2013-05-08 19:55:51-05:00,18000,True,False,['huey_consumer.py'],['da589c04c3bae5794c11e12da2fc8b1b770bd9a7'],1,1,2,1,,,
8fb5548093bf8c6336e54de6c29beacdbce073d4,Cleanup,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-08 19:19:13-05:00,18000,2013-05-08 19:55:51-05:00,18000,True,False,"['api.rst', 'consumer.rst', 'index.rst', 'installation.rst', 'upgrading.rst']",['3b73c0c52d7494c8c492143ee6546acbcf80d668'],12,109,121,5,,,
85a92a72ebec18be64bff7f37528b95d3781db72,Fixes to docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-08 19:30:08-05:00,18000,2013-05-08 19:55:51-05:00,18000,True,False,"['api.rst', 'conf.py', 'getting-started.rst', 'upgrading.rst']",['8fb5548093bf8c6336e54de6c29beacdbce073d4'],13,20,33,4,,,
dd6bd27bcfbff3e5612000b2097ecbc805e5e80d,Small doc fixes,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-08 19:46:20-05:00,18000,2013-05-08 19:55:51-05:00,18000,True,False,"['consumer.rst', 'getting-started.rst']",['85a92a72ebec18be64bff7f37528b95d3781db72'],4,4,8,2,,,
5cc29eb9b21b003fd68ea346b199f861e658bf6b,Readme updates.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-09 09:21:53-05:00,18000,2013-05-09 09:21:53-05:00,18000,True,False,['README.rst'],['dd6bd27bcfbff3e5612000b2097ecbc805e5e80d'],0,20,20,1,,,
29cd18b75fb5044f1ecd23086bb3af557e1fa323,Doc index update,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-09 09:23:32-05:00,18000,2013-05-09 09:23:32-05:00,18000,True,False,['index.rst'],['5cc29eb9b21b003fd68ea346b199f861e658bf6b'],0,27,27,1,,,
ed0813f77ca093662399c6094d55e1e3f5648656,Fixers,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-09 09:31:46-05:00,18000,2013-05-09 09:31:46-05:00,18000,True,False,['README.rst'],['29cd18b75fb5044f1ecd23086bb3af557e1fa323'],2,0,2,1,,,
e38bfb50366f9fe76ce99e1a0655461517f8aace,"Note on autodiscovery, fixes #25",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-15 08:32:54-05:00,18000,2013-05-15 08:32:54-05:00,18000,True,False,['upgrading.rst'],['ed0813f77ca093662399c6094d55e1e3f5648656'],0,6,6,1,,,
12218d5ea1732332d4c64914f308045384cef826,"Simplifying consumer, refs #24",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-22 06:14:20-05:00,18000,2013-05-22 06:14:20-05:00,18000,True,False,"['__init__.py', 'api.py', 'base.py', 'dummy.py', 'redis_backend.py', 'huey_consumer.py', 'exceptions.py']",['e38bfb50366f9fe76ce99e1a0655461517f8aace'],132,176,308,7,0.0,1.0,0.0
0441f7c4a8445a83b7000cc2989a58cc99432d83,Fix failing tests (except consumer tests),Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-22 06:50:42-05:00,18000,2013-05-22 06:50:42-05:00,18000,True,False,"['api.py', 'base.py', 'dummy.py', 'redis_backend.py', 'backends.py', 'config.py', 'queue.py', 'test_cmd.py']",['12218d5ea1732332d4c64914f308045384cef826'],49,76,125,8,1.0,1.0,1.0
67dcf48b088fe557f5281431dc06c9add4f2cee7,Get all consumer tests passing.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-22 07:20:41-05:00,18000,2013-05-22 07:20:41-05:00,18000,True,False,['consumer.py'],['0441f7c4a8445a83b7000cc2989a58cc99432d83'],125,42,167,1,0.5686274509803921,0.0,0.13725490196078433
f6b80de0bddf790e3729e39713c8690095119293,"Adding a class-level ""Component"" object",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-22 10:36:21-05:00,18000,2013-05-22 10:36:21-05:00,18000,True,False,"['base.py', 'dummy.py', 'redis_backend.py']",['67dcf48b088fe557f5281431dc06c9add4f2cee7'],0,9,9,3,,,
45e38cba8738b63910b8105ab510e837a3b4ca79,Simplifying django settings once more.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-22 10:36:37-05:00,18000,2013-05-22 10:36:37-05:00,18000,True,False,['__init__.py'],['f6b80de0bddf790e3729e39713c8690095119293'],33,18,51,1,,,
a8871915fc5e5515ffb8caf877019405307df314,Fixing django_ex settings,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-22 10:36:57-05:00,18000,2013-05-22 10:36:57-05:00,18000,True,False,['settings.py'],['45e38cba8738b63910b8105ab510e837a3b4ca79'],3,2,5,1,,,
b6da1529a19ff51bf6adc59927107ccf5515579d,Cleanup,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-22 12:29:40-05:00,18000,2013-05-22 12:29:40-05:00,18000,True,False,"['api.py', 'huey_consumer.py', 'run_huey.py', 'backends.py', 'consumer.py', 'queue.py']",['a8871915fc5e5515ffb8caf877019405307df314'],51,8,59,6,0.045454545454545456,0.045454545454545456,0.045454545454545456
05579b459dec42913dfb4a5faab7d66d63b78093,Cleaning up docs,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-22 18:04:10-05:00,18000,2013-05-22 18:04:10-05:00,18000,True,False,"['consumer.rst', 'django.rst']",['b6da1529a19ff51bf6adc59927107ccf5515579d'],18,10,28,2,,,
5c02892eb40075fa89ab88073dd53db7c99e6559,Cleaning up consumer code,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-22 21:00:18-05:00,18000,2013-05-22 21:00:18-05:00,18000,True,False,"['api.py', 'huey_consumer.py']",['05579b459dec42913dfb4a5faab7d66d63b78093'],38,54,92,2,1.0,1.0,1.0
d6204a934171761432f2674318d5972de94d4303,Re-shuffling,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-22 21:03:19-05:00,18000,2013-05-22 21:03:19-05:00,18000,True,False,['huey_consumer.py'],['5c02892eb40075fa89ab88073dd53db7c99e6559'],7,7,14,1,,,
9ebafadb67c68a1374518d0857a6c2db52587a7f,Log that task is executed.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-22 21:10:14-05:00,18000,2013-05-22 21:10:14-05:00,18000,True,False,['huey_consumer.py'],['d6204a934171761432f2674318d5972de94d4303'],0,1,1,1,1.0,1.0,0.0
262b330e3395918eee71e1ce882cdff3ec91b69c,Fixing some new test failures.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-22 21:11:41-05:00,18000,2013-05-22 21:11:41-05:00,18000,True,False,['consumer.py'],['9ebafadb67c68a1374518d0857a6c2db52587a7f'],0,2,2,1,0.5,1.0,1.0
7dacf9e2bfe8d8e54cddeb6078dfb37426af7b4f,Updating upgrade notes.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-24 15:09:12-05:00,18000,2013-05-24 15:09:12-05:00,18000,True,False,['upgrading.rst'],['262b330e3395918eee71e1ce882cdff3ec91b69c'],8,3,11,1,,,
5a456dbecb2ae5deec20903106f6ef97dae7e74f,Removing unused module and commenting on some test assertions.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-26 11:41:29-05:00,18000,2013-05-26 11:41:29-05:00,18000,True,False,"['backends.py', 'config.py']",['7dacf9e2bfe8d8e54cddeb6078dfb37426af7b4f'],12,11,23,2,0.0,1.0,1.0
c4ce39ae6d7026049d5e2fe495a754f2332bcd01,"When using djhuey, always_eager is configurable in HUEY settings obj. Updates docs",Angel Medrano,asmedrano@gmail.com,Angel Medrano,asmedrano@gmail.com,2013-05-27 15:31:37-04:00,14400,2013-05-27 15:31:37-04:00,14400,True,False,"['django.rst', '__init__.py']",['7dacf9e2bfe8d8e54cddeb6078dfb37426af7b4f'],1,3,4,2,,,
81dac7d72f83b9eea88d599f1add7911732fbc62,Allow a name to be specified for tasks.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-27 22:33:55-05:00,18000,2013-05-27 22:33:55-05:00,18000,True,False,['api.py'],['c44945b706a6f76b0d708f7ad8952749478a006b'],6,9,15,1,0.0,1.0,0.0
b144369a6cf14968b4e4ad1b0d830958a7593fcd,Passing the task name using correct var.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-05-28 17:39:43-05:00,18000,2013-05-28 17:39:43-05:00,18000,True,False,['api.py'],['cf36348cece1f88963f0f7cccf5beaf27db483f9'],1,1,2,1,,,
ae71be1432f7e6cd7ff3edee1d3e99ee61227b42,Version 0.4.1,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-06-05 09:07:41-05:00,18000,2013-06-05 09:07:41-05:00,18000,True,False,"['conf.py', 'setup.py']",['b144369a6cf14968b4e4ad1b0d830958a7593fcd'],4,4,8,2,,,
f5b2fc693e0ab79f30c27fce58300a7f51cde54f,Attempting to get better error messages.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-06-11 09:24:09-05:00,18000,2013-06-11 09:24:09-05:00,18000,True,False,"['__init__.py', 'huey_consumer.py']",['ae71be1432f7e6cd7ff3edee1d3e99ee61227b42'],2,5,7,2,1.0,1.0,0.0
659317fc2d60eda2a1155976d67bcb806280ee96,"Update django.rst

added instructions for adding huey.djhuey to the INSTALLED_APPS portion of the Django settings.py file.",Steven Wilcox,steven@wilcoxzone.com,Steven Wilcox,steven@wilcoxzone.com,2013-06-14 15:17:18-05:00,18000,2013-06-14 15:17:18-05:00,18000,True,False,['django.rst'],['f5b2fc693e0ab79f30c27fce58300a7f51cde54f'],0,11,11,1,,,
630ce12c49218c1220eb20fa727727394a05bb38,"Adding an event emitter to publish messages about internal state of the
consumer and tasks.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-06-17 22:00:49-05:00,18000,2013-06-18 10:10:28-05:00,18000,True,False,"['api.py', 'base.py', 'dummy.py', 'redis_backend.py', 'huey_consumer.py']",['d85016154e3b4d1a3c9e53bf2656b679fd511caa'],11,74,85,5,1.0,1.0,0.35714285714285715
45033358f1350844cb2c991d59d635461fb420f1,Adding event emitter tests,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-06-18 10:05:57-05:00,18000,2013-06-18 10:10:29-05:00,18000,True,False,"['api.py', 'dummy.py', 'backends.py', 'consumer.py']",['630ce12c49218c1220eb20fa727727394a05bb38'],12,122,134,4,0.034482758620689655,1.0,0.9540229885057471
78f94545152d97c481bd45815e7045b01ddea217,Adding support for events to user-facing apis.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-06-18 10:10:09-05:00,18000,2013-06-18 10:10:29-05:00,18000,True,False,"['__init__.py', '__init__.py']",['45033358f1350844cb2c991d59d635461fb420f1'],3,14,17,2,1.0,1.0,0.0
9e2a00abf9b8e96ef169fe43cbf5622ed83db0d5,Notes on new APIs,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-06-18 10:21:55-05:00,18000,2013-06-18 10:21:55-05:00,18000,True,False,['api.rst'],['78f94545152d97c481bd45815e7045b01ddea217'],6,53,59,1,,,
13cf3825e0873149d416b1f38b26b7a2d876656d,Adding docs on events.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-06-18 10:45:54-05:00,18000,2013-06-18 10:45:54-05:00,18000,True,False,['consumer.rst'],['9e2a00abf9b8e96ef169fe43cbf5622ed83db0d5'],0,34,34,1,,,
974a8c322cbc6842c3a4d9879c715abc3239e3ca,"Use utcnow in ready_to_run, fixes test queue.test_task_delay",Jaap Roes,jaap@eight.nl,Jaap Roes,jaap@eight.nl,2013-10-07 15:01:14+02:00,-7200,2013-10-07 15:01:14+02:00,-7200,True,False,['api.py'],['13cf3825e0873149d416b1f38b26b7a2d876656d'],1,1,2,1,,,
5bc208d34019a496773d2969142c0df751752432,"Reset the delay when a task is received, fixes #38",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2013-10-16 10:33:00-05:00,18000,2013-10-16 10:33:00-05:00,18000,True,False,['huey_consumer.py'],['daf9c4f4e474c12d914525df15db56052ee609dd'],1,3,4,1,0.0,0.5,0.5
24d454af5aded5492bc441851eb518a489a90a86,Added delay param to run_huey command.,Helmut Irle,helmut@spiraleye.com,Helmut Irle,helmut@spiraleye.com,2013-10-17 09:16:39+02:00,-7200,2013-10-17 09:16:39+02:00,-7200,True,False,['run_huey.py'],['5bc208d34019a496773d2969142c0df751752432'],0,8,8,1,1.0,1.0,0.0
79310ea6f8e15f759c90d9f09e01023dd7c2393a,Added max_delay param to run_huey command.,Helmut Irle,helmut@spiraleye.com,Helmut Irle,helmut@spiraleye.com,2013-10-17 09:20:47+02:00,-7200,2013-10-17 09:20:47+02:00,-7200,True,False,['run_huey.py'],['24d454af5aded5492bc441851eb518a489a90a86'],0,8,8,1,0.0,0.0,0.0
abf70df473b6c943560e711707983eb5bf676fb6,"Adding decorators which handle automatically closing db connection,
fixes #44",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-01-24 13:58:41-06:00,21600,2014-01-24 14:04:11-06:00,21600,True,False,"['settings.py', 'tasks.py', '__init__.py']",['8a8b6fac6c0014b46de39829a532d196e8c4d2af'],1,26,27,3,1.0,1.0,1.0
ad5fd435f1b3f768b1f66c06087d4aba8c3d3816,Documenting new API and adding error handling.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-01-24 14:03:47-06:00,21600,2014-01-24 14:04:11-06:00,21600,True,False,"['django.rst', '__init__.py']",['abf70df473b6c943560e711707983eb5bf676fb6'],4,26,30,2,1.0,1.0,1.0
fdaab5ecee96489296ce740bba535fab20589491,print is a function,averagehuman,cyclebelfast@gmail.com,averagehuman,cyclebelfast@gmail.com,2014-01-28 15:04:42+00:00,0,2014-01-28 15:04:42+00:00,0,True,False,['__init__.py'],['ad5fd435f1b3f768b1f66c06087d4aba8c3d3816'],3,3,6,1,,,
6794bef04292d2d57c375c1e25074c139c2aa214,Add SQLite backend,Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-02-20 18:03:07+01:00,-3600,2014-02-21 08:50:25+01:00,-3600,True,False,"['__init__.py', 'sqlite_backend.py', 'backends.py']",['99b4936521296b010da32349be18cc7184852513'],8,349,357,3,0.639344262295082,0.9289617486338798,0.7377049180327869
03e3fe3c13210c7912815941df559aa74027fa81,"Fix bug in SqliteEventEmitter.read()

Prevents exception when there are no messages in the database at the
time of calling the method.",Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-02-21 16:38:48+01:00,-3600,2014-02-21 14:40:49+01:00,-3600,True,False,['sqlite_backend.py'],['6794bef04292d2d57c375c1e25074c139c2aa214'],6,11,17,1,0.0,0.0,1.0
1a1d3314cf4c827ca7765d065a599de9225a9721,Return deserialized message in SqliteEventEmitter.read(),Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-02-21 16:41:02+01:00,-3600,2014-02-21 14:42:02+01:00,-3600,True,False,['sqlite_backend.py'],['03e3fe3c13210c7912815941df559aa74027fa81'],1,2,3,1,,,
42842a6ccab0805f0512ad17ba023f97c81e1d1c,Make 'location' parameter mandatory in SqliteHuey,Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-02-21 16:59:05+01:00,-3600,2014-02-21 16:59:24+01:00,-3600,True,False,['__init__.py'],['1a1d3314cf4c827ca7765d065a599de9225a9721'],1,4,5,1,0.0,1.0,0.0
45e7c2c0af68dbb1984d58ed64acaa05d1296179,Use multiline strings instead of implicit string concatenation in sqlite_backend,Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-02-21 17:10:31+01:00,-3600,2014-02-21 17:10:31+01:00,-3600,True,False,['sqlite_backend.py'],['42842a6ccab0805f0512ad17ba023f97c81e1d1c'],49,41,90,1,,,
b939558302817c6223435c38a986f2ca2e874d6b,Move creation of immediate transaction into SqliteDatabase.get_connection,Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-02-21 17:19:05+01:00,-3600,2014-02-21 17:19:05+01:00,-3600,True,False,['sqlite_backend.py'],['45e7c2c0af68dbb1984d58ed64acaa05d1296179'],6,4,10,1,1.0,1.0,1.0
6a974384c334f2ec5c8f4b2fb5dbbdd87df286a3,Remove SqliteBlockingQueue,Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-02-21 17:21:02+01:00,-3600,2014-02-21 17:21:02+01:00,-3600,True,False,"['__init__.py', 'sqlite_backend.py', 'backends.py']",['b939558302817c6223435c38a986f2ca2e874d6b'],37,3,40,3,1.0,0.0,0.0
5d4314dfdaf20b5c22c64846e8620a2e8deff78e,Make sqlite_backend Python3 compatible,Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-02-21 18:24:54+01:00,-3600,2014-02-21 18:24:54+01:00,-3600,True,False,['sqlite_backend.py'],['6a974384c334f2ec5c8f4b2fb5dbbdd87df286a3'],22,20,42,1,0.0,0.0,0.4
c9ffaaa0e76e8228114250e720278b120dcfd564,Make SqliteQueue.read() run in an immediate transaction again,Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-02-21 18:40:00+01:00,-3600,2014-02-21 18:40:00+01:00,-3600,True,False,['sqlite_backend.py'],['5d4314dfdaf20b5c22c64846e8620a2e8deff78e'],1,1,2,1,,,
fefb15a0c86f5895d787ccf256f29cf5f5868341,SQLite backend performance optimizations,Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-03-03 18:53:03+01:00,-3600,2014-03-03 18:53:03+01:00,-3600,True,False,['sqlite_backend.py'],['c9ffaaa0e76e8228114250e720278b120dcfd564'],0,7,7,1,1.0,1.0,1.0
7b374f251ea7bc859c2a3cb5e7160aea1fe722d7,"Fixing the db_task decorator, fixes #44",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-03-06 08:32:05-06:00,21600,2014-03-06 08:32:26-06:00,21600,True,False,['__init__.py'],['86029826960fb6a237af4c90a041aacfbc5f6e63'],2,2,4,1,,,
e725626f515fb243d6f5527ff59179588ff00baa,"Move consumer classes from bin.huey_consumer to huey.consumer

This should make it easier to create Consumers in code without relying on the
huey_consumer script.",Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-02-21 15:12:47+01:00,-3600,2014-03-07 18:41:17+01:00,-3600,True,False,"['huey_consumer.py', 'consumer.py']",['7b374f251ea7bc859c2a3cb5e7160aea1fe722d7'],287,284,571,2,1.0,1.0,0.0
669f4c5f5f62dee111cff9a6341c9af96f8271fb,Fix consumer tests,Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-03-07 19:00:10+01:00,-3600,2014-03-07 19:00:10+01:00,-3600,True,False,['consumer.py'],['e725626f515fb243d6f5527ff59179588ff00baa'],3,4,7,1,0.0,1.0,1.0
e671274984f61788af27ac6114da1730c169a2c0,Remove logging-related parameters from Consumer __init__,Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-03-07 19:07:07+01:00,-3600,2014-03-07 19:07:07+01:00,-3600,True,False,['consumer.py'],['669f4c5f5f62dee111cff9a6341c9af96f8271fb'],2,1,3,1,0.0,0.0,1.0
13ede1b20cb20d609cb9f70be5f8d5c6705c38ee,"ConsumerThread: Sleep when huey is non-blocking, not the other way round",Johannes Baiter,johannes.baiter@gmail.com,Johannes Baiter,johannes.baiter@gmail.com,2014-03-07 19:54:45+01:00,-3600,2014-03-07 19:54:45+01:00,-3600,True,False,['consumer.py'],['e671274984f61788af27ac6114da1730c169a2c0'],1,1,2,1,,,
61a582e968bec7344255d68d143551e1e6c7b278,"Use wraps to preserve name, fixes #55",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-03-13 08:47:58-05:00,18000,2014-03-13 08:47:58-05:00,18000,True,False,['__init__.py'],['7b374f251ea7bc859c2a3cb5e7160aea1fe722d7'],0,2,2,1,1.0,1.0,1.0
7a8ba2c2a1205616153f592de15a3d17d4c0e4f4,version bump,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-03-13 09:02:19-05:00,18000,2014-03-13 09:02:19-05:00,18000,True,False,"['conf.py', 'setup.py']",['61a582e968bec7344255d68d143551e1e6c7b278'],3,3,6,2,,,
be2bf41b472ab3175bfdbf465fec816c3730041a,Fix django consumer after consumer refactoring.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-04-03 19:03:20-05:00,18000,2014-04-03 19:03:20-05:00,18000,True,False,"['huey_consumer.py', 'run_huey.py']",['333e8e87f22ba1302f22903014d2395bdc0d3407'],9,16,25,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
c1976863cd53969cf36ab9fecbe0985914235517,py3k fixes.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-04-03 19:17:59-05:00,18000,2014-04-03 19:17:59-05:00,18000,True,False,"['tasks.py', 'main.py', 'tasks.py', 'api.py', 'crontab.py']",['be2bf41b472ab3175bfdbf465fec816c3730041a'],19,21,40,5,1.0,1.0,1.0
965d920a727c61e48184be85fe1cd2451c787d5d,Travis,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-04-03 19:19:17-05:00,18000,2014-04-03 19:19:17-05:00,18000,True,False,['.travis.yml'],['c1976863cd53969cf36ab9fecbe0985914235517'],0,12,12,1,,,
17d471aac064e50e962e5b50c3eba862149b4fd5,Thread fixes for py3k,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-04-03 19:23:22-05:00,18000,2014-04-03 19:23:22-05:00,18000,True,False,['sqlite_backend.py'],['965d920a727c61e48184be85fe1cd2451c787d5d'],1,4,5,1,,,
c99c9a053b0e41fa45e771bc3ed3e01bd0fd2427,Fix for unicode responses in tests w/redis.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-04-03 20:03:42-05:00,18000,2014-04-03 20:03:42-05:00,18000,True,False,['backends.py'],['17d471aac064e50e962e5b50c3eba862149b4fd5'],0,14,14,1,0.0,1.0,1.0
768ad7e737d1c59c6b132d1f9851b95ef4563b54,Email,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-04-03 20:06:29-05:00,18000,2014-04-03 20:06:29-05:00,18000,True,False,['.travis.yml'],['c99c9a053b0e41fa45e771bc3ed3e01bd0fd2427'],1,1,2,1,,,
c31ba2768148407932adc69b3475808d27d26103,"Added Github + Documentation link

People might read this file outside Github context, so it is good to have those links in README too.",Mikko Ohtamaa,mikko@opensourcehacker.com,Mikko Ohtamaa,mikko@opensourcehacker.com,2014-04-21 22:28:09+03:00,-10800,2014-04-21 22:28:09+03:00,-10800,True,False,['README.rst'],['768ad7e737d1c59c6b132d1f9851b95ef4563b54'],0,11,11,1,,,
26a2c2f20cac7c1582e52998c37869bdab2b70ce,Test new peewee helper,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-05-01 18:53:02-05:00,18000,2014-05-01 18:53:18-05:00,18000,True,False,"['__init__.py', '__init__.py', 'peewee_tests.py']",['65b21e1c489aa2905953c0a3e0af20ed9716c6fa'],0,90,90,3,1.0,1.0,0.8043478260869565
8a2a447a03b21834a73a0ad22be2960e40472a51,make sqlite optional,Sergey Fursov,GeyseR85@gmail.com,Sergey Fursov,GeyseR85@gmail.com,2014-05-25 18:25:25+04:00,-14400,2014-05-25 18:25:25+04:00,-14400,True,False,['__init__.py'],['26a2c2f20cac7c1582e52998c37869bdab2b70ce'],24,28,52,1,1.0,1.0,0.0
09a8a83dba887c12325048308de94b7e4e7b1057,Configurable scheduler / cron intervals.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-08-04 09:55:30-05:00,18000,2014-08-04 09:55:51-05:00,18000,True,False,"['huey_consumer.py', 'consumer.py']",['e928460f76d509718a7832bbe6ea5657231357a2'],9,33,42,2,0.3,1.0,0.8
7c654ded8cf01e90cb44c00ef6cf9692ccb118f2,Test unicode.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-08-13 08:48:09-05:00,18000,2014-08-13 08:48:09-05:00,18000,True,False,['backends.py'],['09a8a83dba887c12325048308de94b7e4e7b1057'],0,20,20,1,0.125,1.0,1.0
fadc92c139566c4a0b9a07e4b8b2f4e64027070e,Version bump,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-09-04 12:48:44-05:00,18000,2014-09-04 12:48:44-05:00,18000,True,False,"['conf.py', 'setup.py']",['7c654ded8cf01e90cb44c00ef6cf9692ccb118f2'],3,3,6,2,,,
7496b00e7c8d64330a3961540552fc7ed27efac0,Removing Sqlite event emitter due to performance issues.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-09-06 09:32:09-05:00,18000,2014-09-06 09:32:09-05:00,18000,True,False,"['sqlite_backend.py', '__init__.py', 'backends.py']",['fadc92c139566c4a0b9a07e4b8b2f4e64027070e'],70,6,76,3,0.5853658536585366,0.9024390243902439,0.17073170731707318
1195582df973026d7b16f7c17c3cb34df5c06bd6,Allow to specify task_id,Mikhail Podgurskiy,kmmbvnr@gmail.com,Mikhail Podgurskiy,kmmbvnr@gmail.com,2014-11-07 17:33:25+06:00,-21600,2014-11-07 17:33:25+06:00,-21600,True,False,"['api.py', 'queue.py']",['7496b00e7c8d64330a3961540552fc7ed27efac0'],2,8,10,2,0.0,0.8,0.8
dfb606d3814e581141edca71818f861eb4f3ff11,logo,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2014-11-26 09:23:31-06:00,21600,2014-11-26 09:23:31-06:00,21600,True,False,"['README.rst', 'index.rst']",['6b5d90897e1c7ff88c5559c1932f3a68491ccad9'],1,5,6,2,,,
fa4bdb4d6672d0113b2c74362d9fcd93202d2676,Adding Django 1.7 compatiblity,Mikko Ohtamaa,mikko@opensourcehacker.com,Mikko Ohtamaa,mikko@opensourcehacker.com,2014-12-07 21:03:41+07:00,-25200,2014-12-07 21:03:41+07:00,-25200,True,False,['run_huey.py'],['dfb606d3814e581141edca71818f861eb4f3ff11'],1,25,26,1,1.0,1.0,1.0
4ddf50c754a410765b6b2053cd877f745af946af,basic rabbitmq support implementation,deathowl,csergo.balint@ustream.tv,deathowl,csergo.balint@ustream.tv,2014-12-29 02:45:03+01:00,-3600,2014-12-29 02:45:14+01:00,-3600,True,False,"['.travis.yml', 'rabbitmq_backend.py', 'backends.py']",['1aaa2c29c9760f2b1cf7dfc139d185256fcea925'],5,138,143,3,1.0,1.0,0.7702702702702703
10f91cabc65d61608547917e326e1f54b598cbeb,polish,deathowl,csergo.balint@ustream.tv,deathowl,csergo.balint@ustream.tv,2014-12-29 14:28:23+01:00,-3600,2014-12-29 14:58:26+01:00,-3600,True,False,['rabbitmq_backend.py'],['4ddf50c754a410765b6b2053cd877f745af946af'],8,22,30,1,1.0,1.0,0.0
b6b9711990d5c3d3f126fa8bf2e48c8bbec5c487,Clean up docs/conf/version metadata.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-01-05 20:34:02-06:00,21600,2015-01-05 20:34:18-06:00,21600,True,False,"['conf.py', '__init__.py', 'setup.py']",['0f9025f606bee5823ad2456b785b15e6a9c71017'],6,14,20,3,,,
c224a13cdefe448f817eadc8814e1f0b7680c33c,Remove reference to SqliteEventEmitter.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-01-05 20:38:03-06:00,21600,2015-01-05 20:38:03-06:00,21600,True,False,['__init__.py'],['b6b9711990d5c3d3f126fa8bf2e48c8bbec5c487'],4,1,5,1,1.0,0.0,1.0
91cd598d01436fcacf8c1a313c823cb5f74610af,Code cleanup in rabbitmq backend.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-01-05 20:46:25-06:00,21600,2015-01-05 20:46:25-06:00,21600,True,False,['rabbitmq_backend.py'],['c224a13cdefe448f817eadc8814e1f0b7680c33c'],37,49,86,1,0.0,1.0,0.0
9cd47249d3d842c2bee22f04f9f5f0188540d9ad,Attempt to add cwd to path when consumer fails. Refs #83.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-01-15 11:27:29-06:00,21600,2015-01-15 11:27:29-06:00,21600,True,False,['huey_consumer.py'],['91cd598d01436fcacf8c1a313c823cb5f74610af'],5,14,19,1,1.0,1.0,1.0
eb5c096ad029fbb498ae11764211a8ac9a97dd12,Fix exception wrapper to actually raise the correct exception class.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-01-15 22:43:43-06:00,21600,2015-01-15 22:43:43-06:00,21600,True,False,"['queue.py', 'utils.py']",['9cd47249d3d842c2bee22f04f9f5f0188540d9ad'],2,62,64,2,0.23076923076923078,1.0,0.9230769230769231
1d36e625090787d07f22ca4e43a32a7497d510aa,Version bump.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-02-04 09:52:18-06:00,21600,2015-02-04 09:52:18-06:00,21600,True,False,['__init__.py'],['eb5c096ad029fbb498ae11764211a8ac9a97dd12'],1,1,2,1,,,
95f307fbd301235837abb0f4712921c47e1a0ab1,Fix imports using appconfig. Fixes #86.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-02-04 19:44:37-06:00,21600,2015-02-04 19:44:37-06:00,21600,True,False,"['__init__.py', 'run_huey.py']",['1d36e625090787d07f22ca4e43a32a7497d510aa'],2,4,6,2,1.0,1.0,1.0
8b749fd72d2dadfe68930dd130ea68b164418e9a,Version bump for emergency fix.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-02-04 19:47:13-06:00,21600,2015-02-04 19:47:13-06:00,21600,True,False,['__init__.py'],['95f307fbd301235837abb0f4712921c47e1a0ab1'],1,1,2,1,,,
06364bf87a92970807b3b5679a5bb67733daa590,Attempt another fix for #86. Fucking django.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-02-04 20:49:04-06:00,21600,2015-02-04 20:49:04-06:00,21600,True,False,['run_huey.py'],['8b749fd72d2dadfe68930dd130ea68b164418e9a'],1,2,3,1,1.0,1.0,1.0
4206cf0d66ac9a912d1afd136a549c6676db05ae,Version bumpf.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-02-04 20:49:36-06:00,21600,2015-02-04 20:49:36-06:00,21600,True,False,['__init__.py'],['06364bf87a92970807b3b5679a5bb67733daa590'],1,1,2,1,,,
3dfd6a19346e27eae6413bc627ed0d5a50e12421,README.rst: Syntax highlight,Marc Abramowitz,marc@marc-abramowitz.com,Marc Abramowitz,marc@marc-abramowitz.com,2015-02-04 18:58:00-08:00,28800,2015-02-04 18:58:00-08:00,28800,True,False,['README.rst'],['4206cf0d66ac9a912d1afd136a549c6676db05ae'],1,1,2,1,,,
4234d7f294d641d8faa597702ee6d766bcd4c1bb,Call close() directly on conn.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-02-05 09:36:44-06:00,21600,2015-02-05 09:36:44-06:00,21600,True,False,['__init__.py'],['4206cf0d66ac9a912d1afd136a549c6676db05ae'],2,2,4,1,,,
b8114fd07b04cc6ab9a771dadff5351ce2f74d59,0.4.7,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-02-05 09:37:04-06:00,21600,2015-02-05 09:37:04-06:00,21600,True,False,['__init__.py'],['4234d7f294d641d8faa597702ee6d766bcd4c1bb'],1,1,2,1,,,
a6ab0bc1d2dbb622fa8c152fcdf88a52d1c399fa,Django 1.7-ifying example.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-02-11 22:45:11-06:00,21600,2015-02-11 22:45:11-06:00,21600,True,False,"['README', '__init__.py', 'settings.py', '__init__.py', 'models.py', 'tasks.py', 'urls.py', 'manage.py', 'urls.py']",['b8114fd07b04cc6ab9a771dadff5351ce2f74d59'],28,12,40,9,,,
abbd407c299724ece30e4d13355610e57567188c,Re-adding readme.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-02-11 22:45:39-06:00,21600,2015-02-11 22:45:39-06:00,21600,True,False,['README'],['a6ab0bc1d2dbb622fa8c152fcdf88a52d1c399fa'],0,12,12,1,,,
272795a4bd1269e42d2522ee9db1496b9ffff0ec,Update docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-02-11 23:16:07-06:00,21600,2015-02-11 23:16:07-06:00,21600,True,False,['consumer.rst'],['abbd407c299724ece30e4d13355610e57567188c'],0,3,3,1,,,
7b6a9fc34a0a06406ca3603c3f9478331a8c3d1f,Fix handling of exception wrapping. Fixes #90.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-03-19 00:17:20-05:00,18000,2015-03-19 00:17:20-05:00,18000,True,False,"['__init__.py', 'utils.py', 'utils.py']",['272795a4bd1269e42d2522ee9db1496b9ffff0ec'],1,26,27,3,1.0,1.0,1.0
afbb31dbd003522aa5dac47e768adc05d517e3ce,Added example usuage of sqlite backend,timdaman,tim.laurence@kik.com,timdaman,tim.laurence@kik.com,2015-04-09 00:35:09-04:00,14400,2015-04-09 00:35:09-04:00,14400,True,False,['django.rst'],['7b6a9fc34a0a06406ca3603c3f9478331a8c3d1f'],1,20,21,1,,,
503a2299d9a3572f9ac44377715a55dbb366f883,work/self-aware-tasks initial,deathowl,bagoly@endticket.com,deathowl,bagoly@endticket.com,2015-04-10 04:43:43+02:00,-7200,2015-04-10 04:43:43+02:00,-7200,True,False,[],['7b6a9fc34a0a06406ca3603c3f9478331a8c3d1f'],0,0,0,0,,,
a397eef9e1b7b766416924a2fb71a0c49b5ead3f,try to make huey task functions self aware.,deathowl,bagoly@endticket.com,deathowl,bagoly@endticket.com,2015-04-10 04:57:22+02:00,-7200,2015-04-10 04:57:22+02:00,-7200,True,False,['api.py'],['503a2299d9a3572f9ac44377715a55dbb366f883'],2,4,6,1,1.0,1.0,1.0
9d8518ab494109b41098caa53c2ac444c7a6a30f,"it's actually simply self, as self is the task itself",deathowl,bagoly@endticket.com,deathowl,bagoly@endticket.com,2015-04-10 05:26:13+02:00,-7200,2015-04-10 05:26:13+02:00,-7200,True,False,['api.py'],['a397eef9e1b7b766416924a2fb71a0c49b5ead3f'],1,1,2,1,,,
f844ee9d0314fef685f541d91c7fb10908dd2ffb,add tests for self-awareness of tasks,deathowl,bagoly@endticket.com,deathowl,bagoly@endticket.com,2015-04-10 05:52:29+02:00,-7200,2015-04-10 05:52:29+02:00,-7200,True,False,['queue.py'],['9d8518ab494109b41098caa53c2ac444c7a6a30f'],0,22,22,1,1.0,1.0,0.8666666666666667
dcda07bce663808cbc7b82421ed1fe3a16eeb58d,make it so,deathowl,bagoly@endticket.com,deathowl,bagoly@endticket.com,2015-04-14 04:05:37+02:00,-7200,2015-04-14 04:05:37+02:00,-7200,True,False,"['api.py', 'queue.py']",['f844ee9d0314fef685f541d91c7fb10908dd2ffb'],8,8,16,2,,,
38a9d9f67bdffa423cd08363815072affcaf6e87,remove leftover parts of introspection code,deathowl,bagoly@endticket.com,deathowl,bagoly@endticket.com,2015-04-14 04:14:08+02:00,-7200,2015-04-14 04:14:08+02:00,-7200,True,False,['api.py'],['dcda07bce663808cbc7b82421ed1fe3a16eeb58d'],2,0,2,1,0.0,0.0,0.0
d5a4d722d9977b6fb696a13fd03a972161ab60a8,Fix lines.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-04-20 00:01:53-05:00,18000,2015-04-20 00:01:53-05:00,18000,True,False,['api.py'],['1a220a0fca2b61e9055432af54ffec2233ea1771'],0,2,2,1,,,
7535ae2d01e581b93c3c2b4aecf70b41781eceaf,"Cleanups, cc @deathowl",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-04-20 00:07:56-05:00,18000,2015-04-20 00:07:56-05:00,18000,True,False,['api.py'],['d5a4d722d9977b6fb696a13fd03a972161ab60a8'],5,10,15,1,1.0,1.0,1.0
031ce0c37515176df02b847fd42a58e524d5f26d,"Document new API, cc @deathowl",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-04-20 00:08:05-05:00,18000,2015-04-20 00:08:05-05:00,18000,True,False,['api.rst'],['7535ae2d01e581b93c3c2b4aecf70b41781eceaf'],6,8,14,1,,,
2d2e701a7eb7e7fb21ce28b0f06a5741c5a3dfbd,Docs update.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-04-28 02:15:58-05:00,18000,2015-04-28 02:15:58-05:00,18000,True,False,['api.rst'],['031ce0c37515176df02b847fd42a58e524d5f26d'],7,6,13,1,,,
7f663fde4f4973c9c2ed5983c3f3207a29f456a2,Add way to call `@task` decorated functions without enqueueing.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-05-11 00:18:13-05:00,18000,2015-05-11 00:18:13-05:00,18000,True,False,"['api.rst', 'api.py', 'queue.py']",['2d2e701a7eb7e7fb21ce28b0f06a5741c5a3dfbd'],0,18,18,3,1.0,1.0,1.0
dc40ecd3e870c53e57cd542bb9e2071f5fa1f497,Version 0.4.8,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-05-11 00:18:51-05:00,18000,2015-05-11 00:18:51-05:00,18000,True,False,['__init__.py'],['7f663fde4f4973c9c2ed5983c3f3207a29f456a2'],1,1,2,1,,,
ddbe0fe1dc3d9d7a62d923761188893102b4a109,Allow setting a read timeout. Fixes #102.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-06-27 21:12:48-05:00,18000,2015-06-27 21:12:48-05:00,18000,True,False,"['api.rst', '__init__.py', 'redis_backend.py']",['dc40ecd3e870c53e57cd542bb9e2071f5fa1f497'],5,22,27,3,0.0,1.0,0.25
6a2e47485e2780ec190eef7d2ebe179b63a7c779,"Django 1.8 warning: Use importlib instead of django.db.models.loading

Removes this warning in django 1.8:

```
RemovedInDjango19Warning: The utilities in django.db.models.loading are deprecated
in favor of the new application loading system.
```",Xavier Antoviaque,xavier@antoviaque.org,Xavier Antoviaque,xavier@antoviaque.org,2015-06-28 11:22:12+02:00,-7200,2015-06-28 11:25:16+02:00,-7200,True,False,['run_huey.py'],['ddbe0fe1dc3d9d7a62d923761188893102b4a109'],1,4,5,1,,,
4d748f777d3319ffad96c743b4f038259e3f36af,make redis schedule read an atomic pop operation via eval,John Loehrer,jloehrer@yahoo.com,John Loehrer,jloehrer@yahoo.com,2015-07-15 08:41:53-07:00,25200,2015-07-16 06:03:37-07:00,25200,True,False,['redis_backend.py'],['dce841d3ff44e65c0860690f96bd62e844ea9d4d'],4,17,21,1,0.0,0.0,0.0
814331b98c1ee5876a51f4825e0d3b6c37728804,self.conn.brpop returns None if it times out but we expect data. if that happens handle it gracefully,John Loehrer,jloehrer@yahoo.com,John Loehrer,jloehrer@yahoo.com,2015-07-16 13:12:41-07:00,25200,2015-07-16 13:12:41-07:00,25200,True,False,['redis_backend.py'],['dce841d3ff44e65c0860690f96bd62e844ea9d4d'],1,1,2,1,,,
6dd483bed9e832bb874c99aa88d83a08154ea886,"Update README of django example

It was pointing to commands (old file) instead of tasks",Angel Velasquez,angvp@archlinux.org,Angel Velasquez,angvp@archlinux.org,2015-08-04 17:45:38-03:00,10800,2015-08-04 17:45:38-03:00,10800,True,False,['README'],['4f8e7b55fd0788653a4d474013a454755e18a23c'],1,1,2,1,,,
7905d13f53c88cef056289e11df93ed234daf35e,"Change how heuy_consumer is started

 This fixes #116

 The logic behind this is that other programs that would like to
 reuse huey can now do:

   from huey.bin.huey_consumer import consumer_main

 and thus include consumer main as a sub command.

 Also, setuptools takes care of properly instaling scripts in windows
 and virtual environments.",Oz N Tiram,nahumoz@gmail.com,Oz N Tiram,nahumoz@gmail.com,2015-09-01 21:33:39+02:00,-7200,2015-09-01 21:33:39+02:00,-7200,True,False,"['huey_consumer.py', 'setup.py']",['25d6492608c223c4334d9afea3568b76cfc4e3df'],2,10,12,2,0.0,1.0,1.0
2a160db80b2546564b3026f8985a9245014d8acf,re-add scripts for backward compatability,Oz N Tiram,nahumoz@gmail.com,Oz N Tiram,nahumoz@gmail.com,2015-09-02 07:29:33+02:00,-7200,2015-09-02 07:29:33+02:00,-7200,True,False,['setup.py'],['7905d13f53c88cef056289e11df93ed234daf35e'],1,2,3,1,,,
e8bedc03d704814830722f1fdd68bbe878599464,Fix dude's typo.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-09-11 15:12:14-05:00,18000,2015-09-11 15:12:14-05:00,18000,True,False,['setup.py'],['ff400a9200c46935d14445da57204df8e03e72dc'],1,1,2,1,,,
db8a39fbc84e4eb78e2eca2e7b8b2b8007534d43,Use newer APIs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-09-21 21:51:51-05:00,18000,2015-09-21 21:51:51-05:00,18000,True,False,"['__init__.py', 'peewee_tests.py']",['e8bedc03d704814830722f1fdd68bbe878599464'],8,5,13,2,0.0,0.0,0.0
6782a1e26ff7978fc6b777e63eca06344019af53,Version bump,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-09-26 08:35:52-05:00,18000,2015-09-26 08:35:52-05:00,18000,True,False,['__init__.py'],['db8a39fbc84e4eb78e2eca2e7b8b2b8007534d43'],1,1,2,1,,,
52d43c71e1f623c18d2fedfcea30570cbee788c3,allow to specify main redis conenction params in url form,Anentropic,ego@anentropic.com,Anentropic,ego@anentropic.com,2015-10-11 21:01:26+01:00,-3600,2015-10-11 21:33:13+01:00,-3600,True,False,"['django.rst', 'redis_backend.py']",['6782a1e26ff7978fc6b777e63eca06344019af53'],4,15,19,2,1.0,1.0,1.0
b52aad0c188173e00caaa3a154f7ac6102f02f11,Fix #126,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-18 10:22:26-06:00,21600,2015-12-18 10:22:41-06:00,21600,True,False,['run_huey.py'],['a1d81581065fbb3aabb6c33bb4772ce3627d36ad'],0,11,11,1,,,
cfaf1721f663810c0d0c3db81c061a6b31a95385,No '-v' for django.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-18 19:16:57-06:00,21600,2015-12-18 19:16:57-06:00,21600,True,False,['run_huey.py'],['b52aad0c188173e00caaa3a154f7ac6102f02f11'],1,1,2,1,,,
ffea5b6fdb7fb92b99f2234c5b1b0b77cbd54280,Big refactor.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 05:24:29-06:00,21600,2015-12-30 05:24:29-06:00,21600,True,False,"['__init__.py', 'api.py', '__init__.py', 'base.py', 'rabbitmq_backend.py', 'sqlite_backend.py', 'huey_consumer.py', 'consumer.py', '__init__.py', 'redis_backend.py', 'dummy.py']",['cfaf1721f663810c0d0c3db81c061a6b31a95385'],758,282,1040,11,0.047619047619047616,0.0,0.26406926406926406
86c613e35ffd976b476c215bd037257885090fb5,More touchups.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 05:38:02-06:00,21600,2015-12-30 05:38:02-06:00,21600,True,False,['consumer.py'],['ffea5b6fdb7fb92b99f2234c5b1b0b77cbd54280'],20,44,64,1,1.0,1.0,1.0
abf9f74788f3992f9cb0a7e29b56ba03d3ce382b,holy shit it worked.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 05:40:12-06:00,21600,2015-12-30 05:40:12-06:00,21600,True,False,['consumer.py'],['86c613e35ffd976b476c215bd037257885090fb5'],2,5,7,1,1.0,1.0,1.0
babc25e91f9d789aadefb2c448b723c4f2de1174,keep on hackin.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 06:32:41-06:00,21600,2015-12-30 06:32:41-06:00,21600,True,False,"['consumer.py', 'redis_backend.py', 'backends.py', 'consumer.py', 'queue.py']",['abf9f74788f3992f9cb0a7e29b56ba03d3ce382b'],251,188,439,5,1.0,0.0,0.0
8a8002bff668d9883374b0384734514bd3d40d28,Test cleanups.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 08:58:50-06:00,21600,2015-12-30 08:58:50-06:00,21600,True,False,"['consumer.py', 'redis_backend.py', 'consumer.py']",['babc25e91f9d789aadefb2c448b723c4f2de1174'],97,79,176,3,0.28,0.0,1.0
edbb8419a26163fd1156ed6b8f1c32950ac88b0a,Tests are passing,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 10:20:42-06:00,21600,2015-12-30 10:20:42-06:00,21600,True,False,"['__main__.py', 'consumer.py']",['8a8002bff668d9883374b0384734514bd3d40d28'],14,13,27,2,0.0,0.0,1.0
0fa341216412acd9060c816241115db6b78a2c4b,More cleanups.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 10:59:32-06:00,21600,2015-12-30 10:59:32-06:00,21600,True,False,"['cons.sh', '__init__.py', 'api.py', 'backend.py', 'consumer.py', '__init__.py', 'dummy.py', 'peewee_tests.py', 'queue.py']",['edbb8419a26163fd1156ed6b8f1c32950ac88b0a'],190,39,229,9,0.0,0.0,0.041666666666666664
9804cf7fcdf4ef00b2e53d766a38818c8cc32c82,Small tweaks.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 11:21:24-06:00,21600,2015-12-30 11:21:24-06:00,21600,True,False,"['cons.sh', 'main.py', 'tasks.py', 'api.py', 'consumer.py']",['0fa341216412acd9060c816241115db6b78a2c4b'],16,25,41,5,1.0,1.0,1.0
cc18290ead1637089951ba17d6476489c2ce421b,"Small cleanups, if you can call them that.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 12:21:53-06:00,21600,2015-12-30 12:21:53-06:00,21600,True,False,"['cons.sh', 'api.py', 'huey_consumer.py', 'consumer.py', 'consumer.py']",['9804cf7fcdf4ef00b2e53d766a38818c8cc32c82'],13,35,48,5,0.7619047619047619,0.8571428571428571,0.8571428571428571
c95502c112f82d36bf9e37ee4a258f3f896357af,Blow away djhuey,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 12:26:22-06:00,21600,2015-12-30 12:26:22-06:00,21600,True,False,"['__init__.py', '__init__.py', '__init__.py', 'run_huey.py', 'models.py']",['cc18290ead1637089951ba17d6476489c2ce421b'],256,0,256,5,0.21739130434782608,0.21739130434782608,0.33695652173913043
d2c663caf1dbd3435f5904535c75f634a9fe2f9f,Docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 12:45:36-06:00,21600,2015-12-30 12:45:36-06:00,21600,True,False,"['api.rst', 'consumer.rst', 'django.rst', 'getting-started.rst', 'index.rst', 'installation.rst', 'troubleshooting.rst', 'upgrading.rst', 'README', '__init__.py', 'settings.py', '__init__.py', 'models.py', 'tasks.py', 'urls.py', 'manage.py', 'huey_consumer.py']",['c95502c112f82d36bf9e37ee4a258f3f896357af'],521,53,574,17,0.0,0.0,0.0
b64a8b592a03e05d80dab4be8fda59fbddc74286,Yet more cleanup.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 12:57:22-06:00,21600,2015-12-30 12:57:22-06:00,21600,True,False,"['README.rst', 'index.rst', '__init__.py', 'setup.py']",['d2c663caf1dbd3435f5904535c75f634a9fe2f9f'],8,13,21,4,,,
de37e31618f729b69361a0f18736b49e9777daf9,Begin by rewriting tests.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 13:35:53-06:00,21600,2015-12-30 13:35:53-06:00,21600,True,False,"['__init__.py', 'base.py', 'test_consumer.py', 'test_crontab.py', 'test_integration.py', 'test_queue.py', 'test_utils.py']",['b64a8b592a03e05d80dab4be8fda59fbddc74286'],10,38,48,7,1.0,1.0,0.8333333333333334
013ca28a83a676a7b2bb5dd46711f37d475b14cb,Some more changes and cleanups.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 16:15:46-06:00,21600,2015-12-30 16:15:46-06:00,21600,True,False,"['consumer.rst', 'getting-started.rst', '__init__.py', 'api.py', 'huey_consumer.py', 'consumer.py', 'storage.py', 'queue.py', 'runtests.py']",['b64a8b592a03e05d80dab4be8fda59fbddc74286'],22,30,52,9,0.4,1.0,0.0
676138a5356739929e65a68ac20e573bdcbb6cbe,Test reshuffling.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 20:07:27-06:00,21600,2015-12-30 20:07:27-06:00,21600,True,False,"['api.py', 'storage.py', '__init__.py', 'base.py', 'test_crontab.py', 'test_queue.py', 'test_registry.py', 'test_storage.py', 'test_utils.py']",['dfbfe96e3b5e57ac60e625eb2f9584d3e6ddcd57'],200,229,429,9,0.4583333333333333,1.0,0.3333333333333333
95788e5642429a97906731f641dd4d98c14ece1b,More tests.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 21:38:24-06:00,21600,2015-12-30 21:38:24-06:00,21600,True,False,"['storage.py', 'base.py', 'test_consumer.py', 'test_registry.py', 'test_storage.py']",['676138a5356739929e65a68ac20e573bdcbb6cbe'],231,249,480,5,1.0,1.0,0.5
f85328cafdd54872ea6b27d97c7d94cfcf0948dd,1.0.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-30 21:40:27-06:00,21600,2015-12-30 21:40:27-06:00,21600,True,False,['__init__.py'],['95788e5642429a97906731f641dd4d98c14ece1b'],1,1,2,1,,,
326be5dff1ebdc0f6127eb6459c2c2cec0ac6740,More.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2015-12-31 09:15:54-06:00,21600,2015-12-31 09:15:54-06:00,21600,True,False,"['cons.sh', 'main.py', 'consumer.py', 'base.py', 'test_consumer.py']",['f85328cafdd54872ea6b27d97c7d94cfcf0948dd'],7,41,48,5,1.0,1.0,1.0
b60a2c5a81a6fa56f385faf4f9d6cbf9458c5086,Cleaning up example.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-01 13:52:32-06:00,21600,2016-01-01 13:52:32-06:00,21600,True,False,"['README', 'config.py', 'cons.sh', 'main.py']",['326be5dff1ebdc0f6127eb6459c2c2cec0ac6740'],2,14,16,4,,,
51fb8cd1e6933085987e243ea5f89ad8bedc1b35,Ignore newbase.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-01 13:52:57-06:00,21600,2016-01-01 13:52:57-06:00,21600,True,False,['registry.py'],['b60a2c5a81a6fa56f385faf4f9d6cbf9458c5086'],1,1,2,1,,,
aa7c952397e92c20f0546f1837261b2a51b0d70a,Use read timeout.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-03 10:08:06-06:00,21600,2016-01-03 10:08:06-06:00,21600,True,False,['storage.py'],['51fb8cd1e6933085987e243ea5f89ad8bedc1b35'],2,2,4,1,,,
64e69c5ba998f61840469a5264aa6ddc6c18bbac,Simplifying.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-03 15:29:16-06:00,21600,2016-01-03 15:29:16-06:00,21600,True,False,['consumer.py'],['aa7c952397e92c20f0546f1837261b2a51b0d70a'],22,18,40,1,0.0,0.0,0.0
585cd82d2e5ce6cf185a126da3f593da813eee20,Working.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-03 16:19:49-06:00,21600,2016-01-03 16:19:49-06:00,21600,True,False,"['main.py', 'consumer.py']",['64e69c5ba998f61840469a5264aa6ddc6c18bbac'],11,12,23,2,0.0,0.5,1.0
e526b8f8ca262ba901d758b6a0d6efb667210a64,logging reorg.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-03 16:25:37-06:00,21600,2016-01-03 16:25:37-06:00,21600,True,False,['consumer.py'],['585cd82d2e5ce6cf185a126da3f593da813eee20'],4,5,9,1,,,
b7555db49a17abf4f23476fe0c0c3d79eec49dea,Fix test.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-03 16:45:34-06:00,21600,2016-01-03 16:45:34-06:00,21600,True,False,['test_consumer.py'],['e526b8f8ca262ba901d758b6a0d6efb667210a64'],1,3,4,1,1.0,1.0,1.0
97899e9b4b6c34bbedf8445055e092504f0a322d,More cleanups.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-03 20:48:44-06:00,21600,2016-01-03 20:49:29-06:00,21600,True,False,"['huey_consumer.py', 'consumer.py', '__init__.py', 'test_consumer.py', 'test_wrapper.py', 'wrapper.py']",['b7555db49a17abf4f23476fe0c0c3d79eec49dea'],39,196,235,6,0.6271186440677966,1.0,0.9152542372881356
2cb84f5e7eee9149f8db49b781bf6055ea39efd7,remove read timeout,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-03 20:52:36-06:00,21600,2016-01-03 20:52:36-06:00,21600,True,False,['huey_consumer.py'],['97899e9b4b6c34bbedf8445055e092504f0a322d'],6,0,6,1,1.0,0.0,0.0
1e2806545b52d19126363739c84f2def057f84e2,Re-adding django integration.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-03 21:23:13-06:00,21600,2016-01-03 21:23:13-06:00,21600,True,False,"['README', '__init__.py', 'settings.py', '__init__.py', 'models.py', 'tasks.py', 'urls.py', 'manage.py', '__init__.py', '__init__.py', '__init__.py', '__init__.py', 'run_huey.py', 'models.py']",['2cb84f5e7eee9149f8db49b781bf6055ea39efd7'],0,299,299,14,0.78125,0.78125,0.78125
9e82d3b37f4c40a84e2642e2118830bb092699a7,docs,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-03 21:33:46-06:00,21600,2016-01-03 21:33:46-06:00,21600,True,False,"['README.rst', 'getting-started.rst', 'index.rst']",['1e2806545b52d19126363739c84f2def057f84e2'],21,20,41,3,,,
04b6dcfd21aaaaedd9b80b0efab74cdb5d4b060b,Django docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-03 22:06:43-06:00,21600,2016-01-03 22:06:43-06:00,21600,True,False,"['django.rst', 'index.rst']",['9e82d3b37f4c40a84e2642e2118830bb092699a7'],0,121,121,2,,,
800af48a4f4b1a6237bb1e126df0544bbca99743,Add metadata methods.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-04 12:23:02-06:00,21600,2016-01-04 12:23:14-06:00,21600,True,False,"['api.rst', 'api.py', 'storage.py', 'test_queue.py']",['04b6dcfd21aaaaedd9b80b0efab74cdb5d4b060b'],1,80,81,4,1.0,1.0,1.0
dbfcf3cd25c7c6317b110102463545719f6cd50a,fix py3k issues.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-04 19:55:09-06:00,21600,2016-01-04 19:55:09-06:00,21600,True,False,"['storage.py', 'base.py', 'test_queue.py', 'test_storage.py']",['800af48a4f4b1a6237bb1e126df0544bbca99743'],32,22,54,4,1.0,0.0,0.0
086ab61780eb18dcb8f6958a5153a33c2f78d3b8,1.0.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-06 14:28:12-06:00,21600,2016-01-06 14:28:12-06:00,21600,True,False,"['CHANGELOG', 'consumer.rst', 'README']",['dbfcf3cd25c7c6317b110102463545719f6cd50a'],6,33,39,3,,,
f11b8e9dcab750539ca5c74fc997ac30b567c160,"Fix indentation, fixes #111",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-06 14:43:15-06:00,21600,2016-01-06 14:43:15-06:00,21600,True,False,['consumer.rst'],['086ab61780eb18dcb8f6958a5153a33c2f78d3b8'],1,1,2,1,,,
6f83e976769ffc7e4431506a39335fa264004af7,"Update travis.yml, fixes #110",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-06 14:43:58-06:00,21600,2016-01-06 14:43:58-06:00,21600,True,False,['.travis.yml'],['f11b8e9dcab750539ca5c74fc997ac30b567c160'],2,2,4,1,,,
c65ccd4cfe073b5dc5b262ba40f8e74cb738b388,Fix consumer runner script.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-07 12:48:58-06:00,21600,2016-01-07 12:48:58-06:00,21600,True,False,['cons.sh'],['6f83e976769ffc7e4431506a39335fa264004af7'],1,1,2,1,,,
b958fc488345441dc443f3ad0e0e291aa60787a8,fix examples/simple support for python 3.x,Peter Wang,wph95@Campusnetwork.net.hziee.edu.cn,Peter Wang,wph95@Campusnetwork.net.hziee.edu.cn,2016-01-10 16:02:45+08:00,-28800,2016-01-10 16:28:41+08:00,-28800,True,False,"['main.py', 'tasks.py']",['c65ccd4cfe073b5dc5b262ba40f8e74cb738b388'],3,5,8,2,,,
718efd82c3b2008bd957dc48ecc854279814b90b,Improve docs for testing. Closes #130,Camilo Nova,camilo.nova@gmail.com,Camilo Nova,camilo.nova@gmail.com,2016-01-11 09:14:17-05:00,18000,2016-01-11 09:14:17-05:00,18000,True,False,['troubleshooting.rst'],['1bd31a2c13d87417eb8afdeeba3866859f435724'],0,4,4,1,,,
68dd6876c2d41ffe600568a0e207279c31013940,"changed legacy ""consumer_options"" to ""consumer""",Christoph Haunschmidt,c.haunschmidt@gmail.com,Christoph Haunschmidt,c.haunschmidt@gmail.com,2016-01-12 18:37:32+01:00,-3600,2016-01-12 18:37:32+01:00,-3600,True,False,['django.rst'],['b389cef24beaaa41d380ba5d4cc6f948010f85ca'],1,1,2,1,,,
ec1bb1f682e3a099f08a808834c8bbf0d2b5cbc3,Adding to-do.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-15 15:48:52-06:00,21600,2016-01-15 15:49:03-06:00,21600,True,False,['TODO.rst'],['46a8a98266babb21764e387c349f7745a304addb'],0,3,3,1,,,
f097ba0d24cf947123025426dd7ec51880d8d420,Events docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-15 16:09:02-06:00,21600,2016-01-15 16:09:02-06:00,21600,True,False,"['consumer.rst', 'events.rst', 'index.rst']",['ec1bb1f682e3a099f08a808834c8bbf0d2b5cbc3'],30,70,100,3,,,
e049901af98bece98f2f11a5690bc4eb801d8217,Actually this isn't necessary,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-15 16:45:26-06:00,21600,2016-01-15 16:45:26-06:00,21600,True,False,['TODO.rst'],['f097ba0d24cf947123025426dd7ec51880d8d420'],1,0,1,1,,,
3800f695fae2859e666bc2fc73034e2035eedfd6,Nicer event iteration.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-15 19:57:04-06:00,21600,2016-01-15 19:57:04-06:00,21600,True,False,"['events.rst', 'api.py', 'storage.py', 'test_storage.py']",['e049901af98bece98f2f11a5690bc4eb801d8217'],28,61,89,4,1.0,1.0,1.0
b3172b3b4d967a7d1e163334aad061914dd2af5c,Error storage!,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-15 20:51:16-06:00,21600,2016-01-15 20:51:16-06:00,21600,True,False,"['api.py', 'storage.py', 'test_queue.py']",['3800f695fae2859e666bc2fc73034e2035eedfd6'],9,75,84,3,0.58,0.88,0.68
7678367f78ed6edc869d81dfe4600220be1ddd9a,Big internal API refactoring / backend simplification.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-15 23:55:04-06:00,21600,2016-01-15 23:55:04-06:00,21600,True,False,"['api.py', 'storage.py', 'base.py', 'test_consumer.py', 'test_queue.py', 'test_registry.py', 'test_storage.py']",['b3172b3b4d967a7d1e163334aad061914dd2af5c'],297,315,612,7,1.0,1.0,1.0
c3e8e4204af690edbe21b95516a28c572b05e4b5,Fix failing 3.x test.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-16 13:23:23-06:00,21600,2016-01-16 13:23:23-06:00,21600,True,False,['test_storage.py'],['7678367f78ed6edc869d81dfe4600220be1ddd9a'],2,2,4,1,,,
519382cf18f2bb6be636b390cfc9845de92a639a,Add metadata storage.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-16 13:27:09-06:00,21600,2016-01-16 13:27:09-06:00,21600,True,False,"['api.py', 'exceptions.py', 'storage.py', 'test_storage.py']",['c3e8e4204af690edbe21b95516a28c572b05e4b5'],7,64,71,4,0.9722222222222222,1.0,0.8055555555555556
f3cf9256696da62f3c405bb4cc5c1abe32819288,event refactoring,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-16 17:41:35-06:00,21600,2016-01-16 17:41:35-06:00,21600,True,False,"['api.py', 'consumer.py', 'test_consumer.py']",['519382cf18f2bb6be636b390cfc9845de92a639a'],18,94,112,3,0.20754716981132076,0.8867924528301887,0.660377358490566
fccec94adb4f169f9218d9a9eae444ab6e0e0922,Fucking python3.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-16 20:38:04-06:00,21600,2016-01-16 20:38:04-06:00,21600,True,False,['test_storage.py'],['f3cf9256696da62f3c405bb4cc5c1abe32819288'],1,1,2,1,,,
f3091ebf1c816fd5172c88b3cf043a28f6f02449,Fucking python3.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-16 20:38:04-06:00,21600,2016-01-16 20:38:28-06:00,21600,True,False,['test_storage.py'],['519382cf18f2bb6be636b390cfc9845de92a639a'],1,1,2,1,,,
43721667831b96652e60452ab5d6eb32d9e90253,Events.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-20 20:33:29-06:00,21600,2016-01-20 20:33:29-06:00,21600,True,False,"['api.py', 'consumer.py', 'storage.py']",['fccec94adb4f169f9218d9a9eae444ab6e0e0922'],31,90,121,3,0.23076923076923078,0.9423076923076923,0.4807692307692308
3a13cdb37cd146112f196e0c9c9436bed3c437ec,Small event code cleanup,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-20 21:44:13-06:00,21600,2016-01-20 21:44:13-06:00,21600,True,False,"['consumer.py', 'storage.py']",['43721667831b96652e60452ab5d6eb32d9e90253'],15,5,20,2,0.0,0.0,0.4444444444444444
04de75f2f737f99d598d90124be72219c155c24b,Better events docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-20 21:44:24-06:00,21600,2016-01-20 21:44:24-06:00,21600,True,False,['events.rst'],['3a13cdb37cd146112f196e0c9c9436bed3c437ec'],25,39,64,1,,,
e8989370c18a221002ebc4552a96b092cadd5eb5,More docs updates.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-20 21:48:17-06:00,21600,2016-01-20 21:48:17-06:00,21600,True,False,['api.rst'],['04de75f2f737f99d598d90124be72219c155c24b'],14,9,23,1,,,
92405939ad06fe2cfa0bd7b1f32d89e2a8041384,1.1.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-20 21:49:26-06:00,21600,2016-01-20 21:49:26-06:00,21600,True,False,"['CHANGELOG', '__init__.py']",['e8989370c18a221002ebc4552a96b092cadd5eb5'],1,18,19,2,,,
ce35b0ca77466fb45118decaebd2598e5236ccb1,Fix test failures.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-20 21:56:38-06:00,21600,2016-01-20 21:56:38-06:00,21600,True,False,"['storage.py', 'base.py', 'test_consumer.py', 'test_storage.py']",['39684c37d7826f711d46c7f161895c80383b8846'],12,7,19,4,0.75,0.0,0.0
05370e194ae309a1f5916f12ec22b34c6a7f8861,Test metadata.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-21 22:48:59-06:00,21600,2016-01-21 22:48:59-06:00,21600,True,False,['test_consumer.py'],['ce35b0ca77466fb45118decaebd2598e5236ccb1'],0,51,51,1,0.1,1.0,1.0
e9081f9fe48ea8f96162816c5a81b792b14c169c,New methods.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-21 23:28:32-06:00,21600,2016-01-21 23:28:32-06:00,21600,True,False,"['api.py', 'test_consumer.py']",['05370e194ae309a1f5916f12ec22b34c6a7f8861'],0,14,14,2,0.7272727272727273,1.0,1.0
06fc6b301d6ecb666064b54549fdc7d3c565d80e,py3k,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-01-24 14:53:25-06:00,21600,2016-01-24 14:53:54-06:00,21600,True,False,['test_consumer.py'],['e9081f9fe48ea8f96162816c5a81b792b14c169c'],25,26,51,1,,,
30eb22ba0bafd488b95ca4008d7dc4e7f63b58b0,fix link,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-02-12 07:22:48-06:00,21600,2016-02-12 07:22:48-06:00,21600,True,False,['index.rst'],['06fc6b301d6ecb666064b54549fdc7d3c565d80e'],2,1,3,1,,,
87799fb1c96ad8ef6a8d7bea77c3a0b2b542e1a9,Cleanup,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-02-22 14:17:27-06:00,21600,2016-02-22 14:17:27-06:00,21600,True,False,['getting-started.rst'],['30eb22ba0bafd488b95ca4008d7dc4e7f63b58b0'],21,3,24,1,,,
8db21f04c5cba8426981638e4587c4f23289075f,Update API docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-02-29 08:30:03-06:00,21600,2016-02-29 08:30:03-06:00,21600,True,False,['api.rst'],['87799fb1c96ad8ef6a8d7bea77c3a0b2b542e1a9'],2,1,3,1,,,
4a271b219be079efdee135054cf82b6c842444a2,i have no idea,deathowl,bagoly@endticket.com,deathowl,bagoly@endticket.com,2016-02-29 16:11:50+01:00,-3600,2016-02-29 16:11:50+01:00,-3600,True,False,['.gitignore'],['8db21f04c5cba8426981638e4587c4f23289075f'],0,1,1,1,,,
612927a88b780a0cc2ed5c652316be252d578e45,work/ISSUE-140 initial,deathowl,bagoly@endticket.com,deathowl,bagoly@endticket.com,2016-02-29 16:21:00+01:00,-3600,2016-02-29 16:21:00+01:00,-3600,True,False,[],['8db21f04c5cba8426981638e4587c4f23289075f'],0,0,0,0,,,
5342693af9f1fc2fdfd1f7ad3a56c2be9767267d,i have no idea,deathowl,bagoly@endticket.com,deathowl,bagoly@endticket.com,2016-02-29 16:21:10+01:00,-3600,2016-02-29 16:21:10+01:00,-3600,True,False,['.gitignore'],['612927a88b780a0cc2ed5c652316be252d578e45'],0,1,1,1,,,
b80e9af6a434597ee638ab7c42557afa7d16caba,handle pickling error on include_task,deathowl,bagoly@endticket.com,deathowl,bagoly@endticket.com,2016-02-29 16:38:32+01:00,-3600,2016-02-29 17:40:16+01:00,-3600,True,False,"['api.py', 'test_queue.py']",['34e97d56332072628bb01b1db76be73083882d7d'],2,17,19,2,0.0,1.0,0.4
805f1bdfe13447d88c12d3f8aac9a6f93be0a8de,Changelog for 1.1.1,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-03-10 10:30:19-06:00,21600,2016-03-10 10:30:19-06:00,21600,True,False,['CHANGELOG'],['276dc3d8b2f2b99047fce26c66d038cc4afd887d'],0,12,12,1,,,
c26289d76c592a2efc24db5900955abcf934657d,v1.1.1,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-03-10 10:30:49-06:00,21600,2016-03-10 10:30:49-06:00,21600,True,False,['__init__.py'],['805f1bdfe13447d88c12d3f8aac9a6f93be0a8de'],1,1,2,1,,,
d407cb2f1cdaa812b3cb9ff6d762c0140ad588cc,"Refs #146. Do not close Django db connection if `always_eager` is True. Thanks to
@iivvoo for the comment.",Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-04-25 15:35:50-05:00,18000,2016-04-25 15:35:59-05:00,18000,True,False,['__init__.py'],['c26289d76c592a2efc24db5900955abcf934657d'],1,2,3,1,1.0,1.0,1.0
ad038578a80ce077c6652ec5f929c390777887e1,"Update event documentation, fixes #147",Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-05-04 15:36:50-05:00,18000,2016-05-04 15:36:50-05:00,18000,True,False,['events.rst'],['d407cb2f1cdaa812b3cb9ff6d762c0140ad588cc'],3,3,6,1,,,
653f0b17a0cff36d637c4a8cbe46df0c0b025889,"Cleaning up docs and adding an API for retrieving task return values
using the task ID (refs #148).",Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-05-04 17:50:00-05:00,18000,2016-05-04 17:50:00-05:00,18000,True,False,"['api.rst', 'events.rst', 'getting-started.rst', 'api.py', 'test_queue.py']",['ad038578a80ce077c6652ec5f929c390777887e1'],34,141,175,5,0.9354838709677419,1.0,0.45161290322580644
8a929e1334da54facb2b030ddf0b4bdc2fd804d4,1.1.2,Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-05-04 17:55:31-05:00,18000,2016-05-04 17:55:31-05:00,18000,True,False,"['CHANGELOG', '__init__.py']",['653f0b17a0cff36d637c4a8cbe46df0c0b025889'],1,14,15,2,,,
5ce0ab5da74468a3b0e950f6783b0e748ff97533,"Backwards-incompatible change: the consumer logging handler has been
changed from a RotatingFileHandler to a regular FileHandler.

Doc cleanup as well.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-05-04 18:30:38-05:00,18000,2016-05-04 18:30:42-05:00,18000,True,False,"['consumer.rst', 'getting-started.rst', 'index.rst', 'installation.rst', 'huey_consumer.py']",['8a929e1334da54facb2b030ddf0b4bdc2fd804d4'],43,46,89,5,0.0,0.0,1.0
b3149e5a56d49377859aaad04f88eb8846a1e8be,"Rename AsyncData -> TaskResultWrapper to more clearly convey the purpose
of the class.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-05-04 19:20:37-05:00,18000,2016-05-04 19:20:37-05:00,18000,True,False,"['api.rst', 'consumer.rst', 'getting-started.rst', 'api.py']",['5ce0ab5da74468a3b0e950f6783b0e748ff97533'],24,46,70,4,,,
1855f790d4e0a702931315f69f0fc91ded65f88a,"Upgrade django command for django 1.8.

Django 1.8 argument parsing is based on argparse rather than optparse.

Commands that use optparse still work, but django prints deprecation warnings
when you use optparse-style arguments.

This patch updates the run_huey command to use argparse.
On django < 1.8 it falls back to optparse.",Matjaz Gregoric,mtyaka@gmail.com,Matjaz Gregoric,mtyaka@gmail.com,2016-05-05 09:46:45+02:00,-7200,2016-05-05 09:51:23+02:00,-7200,True,False,['run_huey.py'],['b3149e5a56d49377859aaad04f88eb8846a1e8be'],20,38,58,1,0.28205128205128205,1.0,0.7692307692307693
9b503b4e337c8eb2ffeb41f2ace60c06297a0b94,"Fix FileHandler import.

It's defined in the core logging module, not logging.handlers.",Matjaz Gregoric,mtyaka@gmail.com,Matjaz Gregoric,mtyaka@gmail.com,2016-05-05 10:31:24+02:00,-7200,2016-05-05 10:31:25+02:00,-7200,True,False,['huey_consumer.py'],['1855f790d4e0a702931315f69f0fc91ded65f88a'],1,1,2,1,,,
cda66da19e8a92d98453b53e106c3a74c20f640b,Forgot it was RST,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-05-08 21:48:57-05:00,18000,2016-05-08 21:49:21-05:00,18000,True,False,['installation.rst'],['7fb322880a16e87c659c38746e59d66c8e5f3db7'],2,2,4,1,,,
1cffde3e6ee325661489410cd171c15e00b66740,"Fix error logging so it does not fail when attempting to log the data
associated with a periodic task (which has no data).",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-06-07 22:11:44-05:00,18000,2016-06-07 22:11:44-05:00,18000,True,False,['api.py'],['cda66da19e8a92d98453b53e106c3a74c20f640b'],1,1,2,1,,0.0,
764948acd2bd2c61e319ae19212d6dcd553339ac,Call super() on the management command class.,Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-06-08 12:05:20-05:00,18000,2016-06-08 12:05:20-05:00,18000,True,False,['run_huey.py'],['1cffde3e6ee325661489410cd171c15e00b66740'],0,1,1,1,1.0,1.0,0.0
a9c9a1807cd0b1aa6056172a782772fe81258ebb,print parentheses,kennell,kevin@kennell.de,kennell,kevin@kennell.de,2016-06-09 22:10:08+02:00,-7200,2016-06-09 22:10:08+02:00,-7200,True,False,"['api.rst', 'django.rst', 'getting-started.rst', 'imports.rst']",['764948acd2bd2c61e319ae19212d6dcd553339ac'],15,15,30,4,,,
e52593bb9d51db2a983666c7300b089cdecab6cc,"Convert readthedocs links for their .org -> .io migration for hosted projects

As per [their blog post of the 27th April](https://blog.readthedocs.com/securing-subdomains/) ‘Securing subdomains’:

> Starting today, Read the Docs will start hosting projects from subdomains on the domain readthedocs.io, instead of on readthedocs.org. This change addresses some security concerns around site cookies while hosting user generated data on the same domain as our dashboard.

Test Plan: Manually visited all the links I’ve modified.",Adam Chainz,adam@adamj.eu,Adam Chainz,adam@adamj.eu,2016-06-16 08:59:27+01:00,-3600,2016-06-16 08:59:27+01:00,-3600,True,False,"['CHANGELOG', 'README.rst']",['e477af71969a4f65daa031135772dfd2afa1c0c4'],5,5,10,2,,,
19f43dc7900b4be73f7131980e43948dbe725c2a,"Fix AttributeError when logging failed dequeue operation, fixes #164",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-07-12 21:52:26-05:00,18000,2016-07-12 22:11:55-05:00,18000,True,False,"['api.py', 'consumer.py']",['57d026f96a274ea7c8b392a9fd8b9f40c5b86e07'],12,14,26,2,0.0,1.0,1.0
b34bb794da1a7c7a47042b3089c12437647ac434,Add test for broken dequeue behavior. Refs #164.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-07-12 22:11:34-05:00,18000,2016-07-12 22:11:55-05:00,18000,True,False,"['base.py', 'test_consumer.py']",['19f43dc7900b4be73f7131980e43948dbe725c2a'],0,32,32,2,1.0,1.0,1.0
501ee2813f469f906484f0a6bb7a29b9f89a9699,"Kill metadata with fire, refs #166",Charles Leifer,coleifer@gmail.com,Charles Leifer,charles.leifer@propylon.pri,2016-07-20 23:17:41-05:00,18000,2016-07-21 08:46:16-05:00,18000,True,False,"['api.py', 'consumer.py', 'storage.py', 'test_consumer.py', 'test_storage.py']",['b34bb794da1a7c7a47042b3089c12437647ac434'],170,1,171,5,0.6106870229007634,0.0,0.15267175572519084
46ab563236fa953f62a7b7770f1c73714fcc451a,1.2.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,charles.leifer@propylon.pri,2016-07-20 23:31:42-05:00,18000,2016-07-21 08:46:25-05:00,18000,True,False,"['CHANGELOG', '__init__.py']",['501ee2813f469f906484f0a6bb7a29b9f89a9699'],1,16,17,2,,,
21bdb2b6f267cd547a8606be55038d4c59c8fc42,"Use pipelines for peek/pop, fixes #167.",Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-07-21 14:19:17-05:00,18000,2016-07-21 14:19:17-05:00,18000,True,False,['storage.py'],['46ab563236fa953f62a7b7770f1c73714fcc451a'],7,11,18,1,1.0,1.0,1.0
df00603755864a53d070e12f8b805327e93edaa0,Removing old todo,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-07-31 21:15:02-05:00,18000,2016-07-31 21:15:02-05:00,18000,True,False,['TODO.rst'],['21bdb2b6f267cd547a8606be55038d4c59c8fc42'],2,0,2,1,,,
86611200a90acb9512ce74042f68d1257e674ab1,Support configuration using a single redis url (#163),Martin Morgenstern,martinmo@users.noreply.github.com,Charles Leifer,coleifer@gmail.com,2016-08-11 14:28:18+02:00,-7200,2016-08-11 07:28:18-05:00,18000,True,False,"['django.rst', 'storage.py', 'test_storage.py']",['df00603755864a53d070e12f8b805327e93edaa0'],3,49,52,3,0.7037037037037037,0.1111111111111111,0.7037037037037037
e3aca46fe1eee9982fc3895262805c3125094bab,"Add final integration test, refs #163",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-11 12:05:05-05:00,18000,2016-08-11 12:05:05-05:00,18000,True,False,"['storage.py', 'test_storage.py']",['86611200a90acb9512ce74042f68d1257e674ab1'],7,17,24,2,0.875,0.875,0.75
be028a389e42966d026fff4ed2f530374c884168,"Refs #171, disallow running the consumer when always_eager=True.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-11 14:10:55-05:00,18000,2016-08-11 14:10:55-05:00,18000,True,False,"['consumer.py', 'exceptions.py']",['e3aca46fe1eee9982fc3895262805c3125094bab'],1,13,14,2,0.0,1.0,0.5
2c39667d6daf6444679987b6c8ad72e802c44d33,Clean up the scheduler thread's loop body. Refs #171.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-11 14:21:24-05:00,18000,2016-08-11 14:21:24-05:00,18000,True,False,['consumer.py'],['be028a389e42966d026fff4ed2f530374c884168'],23,28,51,1,1.0,1.0,0.0
ca84d34bcd56c206e75a61115da52da5d18b2357,"Fix issue #157 (#158)

Catch IOError when calling time.sleep() to recover from races
where our process may get preempted and not given CPU back until
the sleep deadline has already passed.",Moises Silva,moises.silva@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-22 21:57:24-04:00,14400,2016-08-22 19:57:24-06:00,21600,True,False,['consumer.py'],['2c39667d6daf6444679987b6c8ad72e802c44d33'],4,13,17,1,1.0,1.0,0.0
47cd8b29c48dc1e6e752dba69806b1cca10dd7cf,Start of work to allow monitoring of worker processes.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-22 21:17:56-05:00,18000,2016-08-22 22:00:29-05:00,18000,True,False,['consumer.py'],['ca84d34bcd56c206e75a61115da52da5d18b2357'],0,6,6,1,1.0,1.0,1.0
db6933fd1e986a44cd9c520e28905e924ff90121,Small updates for consumer options with Django.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-22 22:00:02-05:00,18000,2016-08-22 22:00:29-05:00,18000,True,False,"['consumer.rst', 'run_huey.py']",['47cd8b29c48dc1e6e752dba69806b1cca10dd7cf'],19,26,45,2,0.0,0.8888888888888888,0.8888888888888888
1c3ef5f3fa45d09127a426385dc96fe4e6458bed,Allow `loglevel` to be specified in consumer settings.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-22 22:07:19-05:00,18000,2016-08-22 22:07:19-05:00,18000,True,False,['run_huey.py'],['db6933fd1e986a44cd9c520e28905e924ff90121'],3,7,10,1,0.0,0.0,0.0
978e4c59374edfe9c5bb76c75327b70a5c2f356e,Start config refactor,Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-08-25 14:58:08-05:00,18000,2016-08-25 14:58:08-05:00,18000,True,False,['consumer.py'],['1c3ef5f3fa45d09127a426385dc96fe4e6458bed'],3,31,34,1,1.0,1.0,1.0
6e6a2e18f6800a750176e8846811ff15f4bf3ead,Starting in on option refactor.,Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-08-25 17:40:57-05:00,18000,2016-08-25 17:40:57-05:00,18000,True,False,['consumer.py'],['978e4c59374edfe9c5bb76c75327b70a5c2f356e'],0,5,5,1,1.0,1.0,1.0
ec0ee32fc4eb33ac62ab63c5aaa176ee06e8caa8,Refactor configuration and option handling.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-25 20:13:55-05:00,18000,2016-08-25 20:13:55-05:00,18000,True,False,"['huey_consumer.py', 'consumer.py']",['6e6a2e18f6800a750176e8846811ff15f4bf3ead'],133,138,271,2,1.0,0.0,0.0
c91838c1c35d72157c802ff93ca06ca0aaf4fec8,"Clean up the APIs a little, fix typos.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-25 23:20:09-05:00,18000,2016-08-25 23:20:09-05:00,18000,True,False,"['huey_consumer.py', 'consumer.py']",['ec0ee32fc4eb33ac62ab63c5aaa176ee06e8caa8'],14,9,23,2,0.0,0.0,1.0
9082c616bf44e7dbc48272e5bf601f98b33dcb68,Fix django mgmt command to use new consumer apis.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-25 23:53:46-05:00,18000,2016-08-25 23:53:46-05:00,18000,True,False,['run_huey.py'],['c91838c1c35d72157c802ff93ca06ca0aaf4fec8'],60,30,90,1,1.0,0.2903225806451613,0.2903225806451613
ea98ded4832b38cf9fe4e8f273aa2563ccf77ca3,Add return value to restore(),Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-08-26 09:56:09-05:00,18000,2016-08-26 09:56:09-05:00,18000,True,False,"['api.py', 'test_queue.py']",['9082c616bf44e7dbc48272e5bf601f98b33dcb68'],2,4,6,2,0.0,1.0,1.0
21f6855d041a31b45c33904e3a9e3ec7d1a31041,"Fix #169, ensure that workers that die unexpectedly are restarted.

Applies to all worker execution models, process, thread and greenlet.
While it seems most likely that a process would be killed, the
protection is extended to all worker classes.",Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-08-26 16:39:50-05:00,18000,2016-08-26 16:39:50-05:00,18000,True,False,"['consumer.py', 'test_consumer.py']",['ea98ded4832b38cf9fe4e8f273aa2563ccf77ca3'],49,229,278,2,0.4523809523809524,0.9523809523809523,0.5555555555555556
8563f732d52fef7e4b7905503f883c874834d7cf,"More docs, getting there.",Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-08-26 16:50:26-05:00,18000,2016-08-26 16:50:26-05:00,18000,True,False,['consumer.rst'],['21f6855d041a31b45c33904e3a9e3ec7d1a31041'],2,17,19,1,,,
bcf154b6ec5e44c5d29a35b66f33fcc5dd26d637,Docs updates.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-26 20:42:17-05:00,18000,2016-08-26 20:42:17-05:00,18000,True,False,"['consumer.rst', 'imports.rst', 'troubleshooting.rst']",['8563f732d52fef7e4b7905503f883c874834d7cf'],35,91,126,3,,,
cd64b4f5905cbb4f871f71ac13e204d955c4da49,Slight code re-org.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-27 11:26:13-05:00,18000,2016-08-27 11:26:13-05:00,18000,True,False,"['api.py', 'constants.py', 'consumer.py', 'consumer_options.py', 'run_huey.py', 'storage.py', 'test_queue.py', 'test_storage.py', 'utils.py']",['bcf154b6ec5e44c5d29a35b66f33fcc5dd26d637'],176,182,358,9,,,
d46e065beb8eb036b1ad6b1a96b1c43ed19a9cd1,Add docs section on always_eager / debug mode.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-27 18:24:07-05:00,18000,2016-08-27 18:24:07-05:00,18000,True,False,['django.rst'],['cd64b4f5905cbb4f871f71ac13e204d955c4da49'],0,19,19,1,,,
ad53d070708741543f361ac0ed499129ac02c6ce,"Doc updates, hopefully increases clarity and organization of django
docs.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-28 02:01:01-05:00,18000,2016-08-28 02:01:01-05:00,18000,True,False,"['consumer.rst', 'django.rst']",['d46e065beb8eb036b1ad6b1a96b1c43ed19a9cd1'],74,166,240,2,,,
c226312966baeaecf817b8e182b477f7a166d6d2,"Fix consumer options import, docs cleanup",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-29 23:15:57-05:00,18000,2016-08-29 23:16:08-05:00,18000,True,False,"['consumer.rst', 'django.rst', 'cons.sh', 'huey_consumer.py', 'consumer.py']",['ad53d070708741543f361ac0ed499129ac02c6ce'],30,34,64,5,0.0,0.0,0.0
27a82a5d396689c7ae7d4eb661683e0058d4ad52,django options fix for `-v` and docs updates. Fixes #170,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-08-30 00:08:25-05:00,18000,2016-08-30 00:08:25-05:00,18000,True,False,"['consumer.rst', 'django.rst', 'run_huey.py']",['c226312966baeaecf817b8e182b477f7a166d6d2'],6,14,20,3,1.0,1.0,1.0
de8bf6370eab3d5b84330a7e09bbb24e99e21a95,fixing huey pic,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-09-04 20:09:47-05:00,18000,2016-09-04 20:09:47-05:00,18000,True,False,['index.rst'],['27a82a5d396689c7ae7d4eb661683e0058d4ad52'],1,1,2,1,,,
6085f989c92cd625134c79e473c229bc33aa69ad,Add methods for revoke_by_id and restore_by_id,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-09-18 22:46:01-05:00,18000,2016-09-18 22:46:01-05:00,18000,True,False,"['api.py', 'test_queue.py']",['de8bf6370eab3d5b84330a7e09bbb24e99e21a95'],0,23,23,2,1.0,0.3333333333333333,0.8888888888888888
dce4d7e7618504566269216342312b7f9243d495,Docs for revoke_by_id and restore_by_id.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-09-18 23:09:32-05:00,18000,2016-09-18 23:09:32-05:00,18000,True,False,"['api.rst', 'api.py']",['6085f989c92cd625134c79e473c229bc33aa69ad'],2,54,56,2,1.0,1.0,0.0
fea51d0cd0acb05f4a216eb3d565f8ce4945ebf6,"Remove unused event, ""EVENT_ENQUEUED"", fixes #183",Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-09-29 10:32:59-05:00,18000,2016-09-29 10:32:59-05:00,18000,True,False,['events.rst'],['dce4d7e7618504566269216342312b7f9243d495'],2,0,2,1,,,
cc72f1f41d243e682dcbb9c57cf7b3a96dd3129e,1.2.1,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-10-02 00:49:13-05:00,18000,2016-10-02 00:49:13-05:00,18000,True,False,['__init__.py'],['fea51d0cd0acb05f4a216eb3d565f8ce4945ebf6'],1,1,2,1,,,
2a67490287864fbffb51598be9e79fb3b6b85756,"Fix handling of negative sleep times.

In Python 2, calling time.sleep() with a negative argument has
platform-dependent results.  On Linux, it will throw an IOError, which is the
only case the code handles correctly.  On other platforms, it results in
sleeping for an infinite time, or undefined behaviour.  In Python 3,
time.sleep() will throw a ValueError when called with a negative argument.  See
https://bugs.python.org/issue12459 for additional information.

The easiest way to solve this problem for all Python versions is to compute the
time to sleep beforehand and only call time.sleep() if the argument is
postitive.  (This isn't in any way slower or less accurate than the previous
solution, as the comment I removed in this patch suggests.  CPython local
variables are accessed by static index rather than by name, and are thus just as
fast as the execution frame stack.)",Sven Marnach,sven@marnach.net,Sven Marnach,sven@marnach.net,2016-10-17 14:04:52+02:00,-7200,2016-10-17 14:10:32+02:00,-7200,True,False,['consumer.py'],['cc72f1f41d243e682dcbb9c57cf7b3a96dd3129e'],10,5,15,1,0.0,0.0,1.0
a90b889b3bf2db23a424e9ae55b05d1370713feb,1.2.2,Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-10-17 09:27:30-05:00,18000,2016-10-17 09:27:30-05:00,18000,True,False,['__init__.py'],['6a259c480f03b3c0848b1060bf46723df6252ed9'],1,1,2,1,,,
a68a378376e968a7e62085a6a4bf4813f440800d,CHANGELOG update,Charles Leifer,charles.leifer@propylon.pri,Charles Leifer,charles.leifer@propylon.pri,2016-10-17 09:28:49-05:00,18000,2016-10-17 09:28:49-05:00,18000,True,False,['CHANGELOG'],['a90b889b3bf2db23a424e9ae55b05d1370713feb'],0,6,6,1,,,
2e8092998bb32e3ed4cba5181478dbb7f9c2678f,Update URL for photo of Huey,B M Corser,ben@steady.supply,GitHub,noreply@github.com,2016-11-01 07:59:22+00:00,0,2016-11-01 07:59:22+00:00,0,True,False,['README.rst'],['a68a378376e968a7e62085a6a4bf4813f440800d'],1,1,2,1,,,
8e704b3563914ee59ca7ce2778c099ca5980991c,"Remove defaults when importing options. Hopefully this takes care of
some of the issues people have had with djhuey.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-11-15 08:50:37-06:00,21600,2016-11-15 08:51:06-06:00,21600,True,False,['run_huey.py'],['dc3b9bdc322007c530f4ead7c958ea7b59af12f0'],0,2,2,1,0.0,0.0,1.0
7d7566d49a82ffaf6d039e5a484fc9cc374dbb94,Possible fix for #190,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2016-11-15 08:55:46-06:00,21600,2016-11-15 08:55:46-06:00,21600,True,False,['run_huey.py'],['8e704b3563914ee59ca7ce2778c099ca5980991c'],0,2,2,1,1.0,1.0,0.0
1fbffc7d8ea099bb195d8cb0b4c8841e9fb13ce6,Version 1.2.3,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-02-17 10:59:58-06:00,21600,2017-02-17 10:59:58-06:00,21600,True,False,['__init__.py'],['7d7566d49a82ffaf6d039e5a484fc9cc374dbb94'],1,1,2,1,,,
d64faebcdcc45b607c93f4112632ec52e0ddefb9,Cleanup and remove support for old django versions,Camilo Nova,camilo.nova@axiacore.com,Camilo Nova,camilo.nova@axiacore.com,2017-03-04 14:41:03-05:00,18000,2017-03-04 14:41:03-05:00,18000,True,False,"['LICENSE', 'api.py', 'consumer.py', '__init__.py', 'exceptions.py', 'storage.py', 'utils.py', 'runtests.py', 'setup.py']",['1fbffc7d8ea099bb195d8cb0b4c8841e9fb13ce6'],12,28,40,9,,,
922144dc9a6dd617a6baf9c9e3bb6fc05ad4e644,Test against Python 3.5 and 3.6,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-03-06 16:18:06-06:00,21600,2017-03-06 16:18:06-06:00,21600,True,False,['.travis.yml'],['298f1f799ab348488dd53891f4540729623a7fd8'],2,2,4,1,,,
4f5bac7ab105462301d2716ea4f5c591457da752,Add experimental SQLite storage backend.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-03-07 13:36:24-06:00,21600,2017-03-07 13:36:24-06:00,21600,True,False,"['sqlitedb.py', '__init__.py', 'base.py', 'test_sqlite.py']",['922144dc9a6dd617a6baf9c9e3bb6fc05ad4e644'],1,255,256,4,0.8414634146341463,1.0,0.9024390243902439
43fb80cb4e97aa654d8427c33c8a07ceff4c5191,Test integration with consumer,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-03-08 12:52:29-06:00,21600,2017-03-08 12:52:29-06:00,21600,True,False,['test_sqlite.py'],['4f5bac7ab105462301d2716ea4f5c591457da752'],9,39,48,1,0.09090909090909091,1.0,1.0
f229475c409e49fadfd151ad9f37759a55c0d9ae,Fixed issue when scheduling tasks with timezone-aware ETA,Antoine,antoine@buzzhire.co,Antoine,antoine@buzzhire.co,2017-04-04 15:04:19+01:00,-3600,2017-04-04 15:04:19+01:00,-3600,True,False,"['api.py', 'utils.py']",['43fb80cb4e97aa654d8427c33c8a07ceff4c5191'],3,61,64,2,0.782608695652174,0.782608695652174,0.782608695652174
64089463ddc0736c1f1a43da1a474fa43fc7695a,UTC option is now impacting only scheduler,Antoine,antoine@buzzhire.co,Antoine,antoine@buzzhire.co,2017-04-04 15:04:50+01:00,-3600,2017-04-04 15:04:50+01:00,-3600,True,False,"['consumer.rst', 'consumer.py']",['f229475c409e49fadfd151ad9f37759a55c0d9ae'],12,13,25,2,1.0,1.0,1.0
4105a56ba118cc368653eb8833dc31d94eb6707c,"Removed duplicate optionparser default, and unnecessary patches",Antoine,antoine@buzzhire.co,Antoine,antoine@buzzhire.co,2017-04-04 16:02:51+01:00,-3600,2017-04-04 16:02:51+01:00,-3600,True,False,"['huey_consumer.py', 'consumer_options.py', 'run_huey.py']",['43fb80cb4e97aa654d8427c33c8a07ceff4c5191'],15,13,28,3,0.5,1.0,1.0
c5152e8510e70667031de0bbdd9530bd56d84967,Clean old django code,Camilo Nova,camilo.nova@axiacore.com,Camilo Nova,camilo.nova@axiacore.com,2017-04-05 10:02:55-05:00,18000,2017-04-05 10:02:55-05:00,18000,True,False,"['.gitignore', 'consumer.py', 'run_huey.py']",['43fb80cb4e97aa654d8427c33c8a07ceff4c5191'],61,6,67,3,0.0,0.0,0.3870967741935484
e36c44ab6170142d43f8f5174e1598bc46021ec5,Drop Python 2.6 support,Camilo Nova,camilo.nova@axiacore.com,Camilo Nova,camilo.nova@axiacore.com,2017-04-07 08:52:00-05:00,18000,2017-04-07 08:52:00-05:00,18000,True,False,['.travis.yml'],['c5152e8510e70667031de0bbdd9530bd56d84967'],1,0,1,1,,,
4c74a9fea8509d4a90cca64b5d5765cc80f96656,Updaded docs,Camilo Nova,camilo.nova@axiacore.com,Camilo Nova,camilo.nova@axiacore.com,2017-04-07 08:52:08-05:00,18000,2017-04-07 08:52:08-05:00,18000,True,False,['django.rst'],['e36c44ab6170142d43f8f5174e1598bc46021ec5'],0,2,2,1,,,
3ef6d07cec9357afdfb88fdcd503964864dcd461,Preserve results when preserve=True. Fixes #214.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-04-07 18:37:52-05:00,18000,2017-04-07 18:38:16-05:00,18000,True,False,"['api.py', 'test_queue.py']",['a169356d3a8820105d97f362508c69355d828a99'],4,14,18,2,1.0,1.0,1.0
7eee64f5778c91f0f4f46964936698d6f5de799b,Ignored pyc,Antoine,antoine@buzzhire.co,Antoine,antoine@buzzhire.co,2017-04-10 12:32:04+01:00,-3600,2017-04-10 12:32:04+01:00,-3600,True,False,['.gitignore'],['4105a56ba118cc368653eb8833dc31d94eb6707c'],0,1,1,1,,,
bfec639c8fde0cb38c9aa93e156a5ae26fc0eeef,1.3.0,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-04-13 10:14:00-05:00,18000,2017-04-13 10:14:00-05:00,18000,True,False,['__init__.py'],['08d3d776ce5857a84750514f912f63201bbafd0e'],1,1,2,1,,,
214f3e7d5e4c5302dc5f14c4b1df82e1b4796b03,Update imports in docs.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-04-13 10:17:35-05:00,18000,2017-04-13 10:17:35-05:00,18000,True,False,['django.rst'],['bfec639c8fde0cb38c9aa93e156a5ae26fc0eeef'],2,4,6,1,,,
1fd4b0a36313df6b9a73f34f5377df5586536fcc,Allow setting client name for redis conn.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-04-22 22:19:53-05:00,18000,2017-04-22 22:19:53-05:00,18000,True,False,['storage.py'],['214f3e7d5e4c5302dc5f14c4b1df82e1b4796b03'],1,4,5,1,0.0,0.0,0.0
d08cc27550ac4f33cf380cfe4e10fbbf0553ccc7,Update docs.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-05-09 16:32:32-05:00,18000,2017-05-09 16:32:51-05:00,18000,True,False,"['.gitignore', 'api.rst', 'contrib.rst', 'django.rst', 'index.rst', 'sqlite.rst']",['d5124e3cdf184eb10f7291b9c9d9ae43d84b6acc'],21,78,99,6,,,
bf2ced1893f802147533c69c7a601264fe4187f3,"Fix missing import, do not attempt to set client name.",Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-05-09 16:41:53-05:00,18000,2017-05-09 16:41:53-05:00,18000,True,False,['storage.py'],['d08cc27550ac4f33cf380cfe4e10fbbf0553ccc7'],1,2,3,1,1.0,1.0,1.0
f70c5a30b0851423e87153c9105ec0eaae147a53,Conditionally set client name.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-05-09 16:42:48-05:00,18000,2017-05-09 16:42:48-05:00,18000,True,False,['storage.py'],['bf2ced1893f802147533c69c7a601264fe4187f3'],3,2,5,1,0.0,0.0,0.0
18b33a417341bfdddc1ce39c4c78d88d6b3efbd1,1.3.1,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-05-09 16:43:15-05:00,18000,2017-05-09 16:43:15-05:00,18000,True,False,['__init__.py'],['f70c5a30b0851423e87153c9105ec0eaae147a53'],1,1,2,1,,,
118ce2d0db6f8082e4d112b3296799942f9a0883,Add API stubs for storage.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-05-09 17:24:30-05:00,18000,2017-05-09 17:24:30-05:00,18000,True,False,['api.rst'],['18b33a417341bfdddc1ce39c4c78d88d6b3efbd1'],0,54,54,1,,,
1caee02e0c362a31748e11b27ac7465e28bc7a22,Improve efficiency of reading schedule.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-05-09 17:31:54-05:00,18000,2017-05-09 17:31:54-05:00,18000,True,False,['sqlitedb.py'],['118ce2d0db6f8082e4d112b3296799942f9a0883'],4,5,9,1,1.0,1.0,1.0
dda305e3cf2e02908cdaa2888151cd03ae3b84dd,Create getting-started.rst,Ivo van der Wijk,github2015@in.m3r.nl,GitHub,noreply@github.com,2017-06-09 14:03:23+02:00,-7200,2017-06-09 14:03:23+02:00,-7200,True,False,['getting-started.rst'],['1caee02e0c362a31748e11b27ac7465e28bc7a22'],1,1,2,1,,,
c593df5919400bcab6056b6b8230a3784ce5123f,Update sqlite storage doc with peewee dependency.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-06-20 16:30:17-05:00,18000,2017-06-20 16:30:17-05:00,18000,True,False,['sqlite.rst'],['2c46686d7ad97a2495930be6bf5d8798c5f0e701'],0,6,6,1,,,
167b5d00c303289370f618294b267dc32be3ab51,"Add pip extras-require group ""backends"" to include sqlite and redis",winkidney,winkidney@gmail.com,winkidney,winkidney@gmail.com,2017-06-22 19:21:07+08:00,-28800,2017-06-22 19:21:07+08:00,-28800,True,False,"['installation.rst', 'setup.py']",['c593df5919400bcab6056b6b8230a3784ce5123f'],0,12,12,2,,,
ee4cd0f6d9c4b153c512e8d28aa3c4fee5fe0ea6,Add flag to Huey to allow tasks to be registered on a single Huey obj.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-07-06 09:49:15-05:00,18000,2017-07-06 09:49:15-05:00,18000,True,False,"['api.py', 'test_queue.py', 'test_registry.py']",['499f938f0a6b49d7019262a179785096bd590144'],20,26,46,3,0.8333333333333334,1.0,0.6666666666666666
25bf307e46ec055699d653560bd15db7f9aae276,Allow graceful shutdown via SIGINT.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-07-06 22:24:39-05:00,18000,2017-07-06 22:37:18-05:00,18000,True,False,['consumer.py'],['ee4cd0f6d9c4b153c512e8d28aa3c4fee5fe0ea6'],3,21,24,1,0.7692307692307693,0.7692307692307693,1.0
625cf1abd07d2cd2fb0e070bb06c1a2053cf19a7,Add docs on SIGINT/SIGTERM.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-07-06 22:37:04-05:00,18000,2017-07-06 22:37:18-05:00,18000,True,False,['consumer.rst'],['25bf307e46ec055699d653560bd15db7f9aae276'],1,17,18,1,,,
0ae06cec00469d5bde2c4bbe8177adad8991112d,Catch ScheduleReadException in consumer's scheduler thread.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-07-06 22:43:31-05:00,18000,2017-07-06 22:43:31-05:00,18000,True,False,['consumer.py'],['625cf1abd07d2cd2fb0e070bb06c1a2053cf19a7'],3,9,12,1,0.0,0.0,1.0
15f0c755d3ab89b1d8910396b2e144ead8cdc78a,Get sqlitedb working with Peewee 3.0a,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-07-07 10:19:57-05:00,18000,2017-07-07 10:19:57-05:00,18000,True,False,['sqlitedb.py'],['0ae06cec00469d5bde2c4bbe8177adad8991112d'],4,9,13,1,,,
478035314a511d89a59edf42ad3c5e25eb6042e3,Add another assertion to test.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-07-16 00:32:39-05:00,18000,2017-07-16 00:32:39-05:00,18000,True,False,['test_consumer.py'],['15f0c755d3ab89b1d8910396b2e144ead8cdc78a'],1,2,3,1,0.0,1.0,0.0
4d76d826c2e2a62ec583e41e2143d0c167678097,Fix scheduler interval behavior.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-07-20 11:07:47-05:00,18000,2017-07-20 11:08:00-05:00,18000,True,False,"['consumer.py', 'test_consumer.py']",['478035314a511d89a59edf42ad3c5e25eb6042e3'],14,13,27,2,0.0,0.0,1.0
c34932f193900aa0027272cf76aa809f94dddafe,Real fix for consumer scheduler interval w/r/t periodic tasks.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-07-20 15:18:16-05:00,18000,2017-07-20 15:18:16-05:00,18000,True,False,"['consumer.py', 'test_consumer.py']",['4d76d826c2e2a62ec583e41e2143d0c167678097'],20,27,47,2,1.0,0.0,1.0
7ba4f2490a46b72a4cb90f7cb0e63606d17bdcdc,Remove flaky test.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-07-24 22:30:02-05:00,18000,2017-07-24 22:30:02-05:00,18000,True,False,['test_consumer.py'],['c34932f193900aa0027272cf76aa809f94dddafe'],25,0,25,1,1.0,0.0,1.0
321590f0433287e28f4ad4ca13d7ff041fbdf843,"Add `reschedule` method to `TaskResultWrapper`.

Also includes fixes where UTC was being used inconsistently, which
would have affected consumer processes running in localtime and
scheduled tasks.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-08-01 00:26:25-05:00,18000,2017-08-01 00:26:47-05:00,18000,True,False,"['api.py', 'consumer.py', 'test_queue.py']",['7ba4f2490a46b72a4cb90f7cb0e63606d17bdcdc'],17,74,91,3,0.5641025641025641,1.0,0.5897435897435898
b604992bf22187ae8d7d29d9111ca04bcb034ca2,Notes on specifying delays/etas and UTC/localtime consumer.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-08-01 01:16:40-05:00,18000,2017-08-01 01:16:40-05:00,18000,True,False,"['api.rst', 'getting-started.rst']",['321590f0433287e28f4ad4ca13d7ff041fbdf843'],3,77,80,2,,,
e45aa894c8a3361f26616fdee32a4ea593d5bbae,1.4.0,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-08-01 09:09:32-05:00,18000,2017-08-01 09:09:32-05:00,18000,True,False,['__init__.py'],['b604992bf22187ae8d7d29d9111ca04bcb034ca2'],1,1,2,1,,,
7b646625feca2520690b23c0b0c66afe8810c33e,Update docs on day-of-week numbering.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-08-10 09:54:34-05:00,18000,2017-08-10 09:54:34-05:00,18000,True,False,"['api.rst', 'api.py']",['e45aa894c8a3361f26616fdee32a4ea593d5bbae'],1,5,6,2,,,
a1802fd91342975c788399f74a2792467a532043,Accept '7' as valid weekday.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-08-22 08:51:44-05:00,18000,2017-08-22 08:51:44-05:00,18000,True,False,['api.py'],['7b646625feca2520690b23c0b0c66afe8810c33e'],0,8,8,1,0.0,0.0,0.0
2eb57b6accbe96456d91547951f3664b40a92006,Add test for sunday dow.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-08-22 09:06:03-05:00,18000,2017-08-22 09:06:03-05:00,18000,True,False,['test_crontab.py'],['a1802fd91342975c788399f74a2792467a532043'],0,10,10,1,1.0,1.0,1.0
dbfd720f40f42dbddd8dfa8265927b88451a7198,Update changelog.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-08-22 09:28:03-05:00,18000,2017-08-22 09:28:03-05:00,18000,True,False,"['CHANGELOG.md', 'MANIFEST.in']",['2eb57b6accbe96456d91547951f3664b40a92006'],3,81,84,2,,,
8ca8662a3ff83590fa7fda6ab555ccbbe9bd2972,Add a minimal huey-like task runner powered by gevent.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-08-24 11:20:10-05:00,18000,2017-08-24 11:20:10-05:00,18000,True,False,['minimal.py'],['dbfd720f40f42dbddd8dfa8265927b88451a7198'],0,119,119,1,0.735632183908046,0.735632183908046,0.7126436781609196
31f9ac71902b5931cd37dba5a22ce986893439ec,Docs on minihuey.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-08-24 11:34:16-05:00,18000,2017-08-24 11:34:16-05:00,18000,True,False,"['contrib.rst', 'mini.rst']",['8ca8662a3ff83590fa7fda6ab555ccbbe9bd2972'],0,63,63,2,,,
44b91e0c2efafd818d4387d7125d0a53d2f07015,Allow interval to be specified.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-08-24 23:57:13-05:00,18000,2017-08-24 23:57:13-05:00,18000,True,False,['minimal.py'],['31f9ac71902b5931cd37dba5a22ce986893439ec'],2,2,4,1,,,0.0
f92e8897407a005ed3304db26fa3e733ede0a72f,"Explicitly set default to None, fixes #243.",Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-09-08 15:32:58-05:00,18000,2017-09-08 15:32:58-05:00,18000,True,False,['run_huey.py'],['44b91e0c2efafd818d4387d7125d0a53d2f07015'],0,1,1,1,0.0,1.0,1.0
9d9c4c78f54194b0010befcf7b76f0007b84b941,1.4.1,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-09-08 15:35:56-05:00,18000,2017-09-08 15:35:56-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['f92e8897407a005ed3304db26fa3e733ede0a72f'],10,17,27,2,,,
5b9b7aa2e172868fc6aa914e1320828d86c19311,Fix non-global registry has global task storage,Nils Schmidt,nils.schmidt@hetzner-cloud.de,Nils Schmidt,nils.schmidt@hetzner-cloud.de,2017-09-14 13:20:54+02:00,-7200,2017-09-14 13:33:53+02:00,-7200,True,False,"['registry.py', 'test_registry.py']",['7b646625feca2520690b23c0b0c66afe8810c33e'],2,16,18,2,1.0,1.0,1.0
57f28653eda982cc1759c4a0d38928dd93105a5c,"Add docs, fixes #212.",Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-02 11:24:48-05:00,18000,2017-10-02 11:25:02-05:00,18000,True,False,['django.rst'],['c0ea45759c2bcbb5d08e52a2188192a035cca458'],1,30,31,1,,,
2f677694351a1c63d11f71b406eee41319982b9e,"Add to troubleshooting as well, refs #212.",Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-02 11:26:52-05:00,18000,2017-10-02 11:26:52-05:00,18000,True,False,['troubleshooting.rst'],['57f28653eda982cc1759c4a0d38928dd93105a5c'],1,3,4,1,,,
c365b060579146ab87a7c07ec898a7ff6799de72,"Update wording, refs #250.",Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-04 10:32:56-05:00,18000,2017-10-04 10:32:56-05:00,18000,True,False,['api.rst'],['2f677694351a1c63d11f71b406eee41319982b9e'],2,3,5,1,,,
59ea58df2fa9f69d8132e4ad601267b0ed8c351f,Add docstrings.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-04 11:15:01-05:00,18000,2017-10-04 11:15:01-05:00,18000,True,False,['storage.py'],['c365b060579146ab87a7c07ec898a7ff6799de72'],0,146,146,1,,,
cfcdf359de94e5f70fe6e4b19ad1421dfa5c7a7b,Lazy logging message evaluation. Using logging.exception to see the traceback of the exception.,Victor,victor.varvaryuk@mindojo.com,Victor,victor.varvaryuk@mindojo.com,2017-10-05 09:30:56+03:00,-10800,2017-10-05 09:32:04+03:00,-10800,True,False,['consumer.py'],['59ea58df2fa9f69d8132e4ad601267b0ed8c351f'],27,24,51,1,1.0,1.0,0.0
5968b8a7be5a91564396cf9bbde2d639579c6475,"Conditional import of Redis, fixes #256.",Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-05 10:57:44-05:00,18000,2017-10-05 10:58:01-05:00,18000,True,False,['storage.py'],['e6793f67c5dfe035fa315f3b506bbdfd01c41035'],2,11,13,1,0.0,0.0,0.0
5f1318663722deca079a5ae5552679e81e4d8d09,"Extend revoke/restore/is_revoked.

The above methods are now added to decorated tasks (where formerly
they were only available on decorated periodic tasks). Calling the
methods on the task function will revoke/restore all instances of the
given task.

A follow-on effect is that periodic task instances now have their own
unique task ID.",Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-05 13:04:59-05:00,18000,2017-10-05 13:04:59-05:00,18000,True,False,"['api.rst', 'getting-started.rst', 'api.py', 'test_consumer.py', 'test_queue.py']",['5968b8a7be5a91564396cf9bbde2d639579c6475'],66,246,312,5,0.7872340425531915,0.3404255319148936,0.48936170212765956
7b65599b4b4bd26d58dc30b4519130b20874f042,1.5.0,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-05 13:25:27-05:00,18000,2017-10-05 13:25:27-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['5f1318663722deca079a5ae5552679e81e4d8d09'],3,21,24,2,,,
f285640f78ef74927ab74f8c5b5a77c6b68ec004,Allow periodic tasks to specify a retry and retry_delay. Fixes #260.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-10-08 11:16:16-05:00,18000,2017-10-08 11:16:16-05:00,18000,True,False,"['api.py', 'test_consumer.py']",['7b65599b4b4bd26d58dc30b4519130b20874f042'],6,40,46,2,1.0,1.0,0.92
1080899a767c4adceda9383957714855019ff008,"Add comment, refs #260.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-10-08 17:11:25-05:00,18000,2017-10-08 17:11:25-05:00,18000,True,False,['api.py'],['f285640f78ef74927ab74f8c5b5a77c6b68ec004'],0,4,4,1,,,
6eeebcab5e2727af6e76f5ef6b167f02bbaf584b,changelog.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-10-08 17:13:26-05:00,18000,2017-10-08 17:13:26-05:00,18000,True,False,['CHANGELOG.md'],['1080899a767c4adceda9383957714855019ff008'],2,11,13,1,,,
9c473886f2a242b845192ced7d717d5c3ffec887,1.5.1,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-10-08 17:13:37-05:00,18000,2017-10-08 17:13:37-05:00,18000,True,False,['__init__.py'],['6eeebcab5e2727af6e76f5ef6b167f02bbaf584b'],1,1,2,1,,,
1ffb3ddbbc20e8716743011d2a4e02802f61f659,Enable restart via SIGHUP.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-09 10:04:04-05:00,18000,2017-10-09 10:04:04-05:00,18000,True,False,['consumer.py'],['9c473886f2a242b845192ced7d717d5c3ffec887'],6,22,28,1,0.5,0.5833333333333334,0.5
fbf75577ee258a2e61658d6ded63c831603fb2b1,Do not inherit consumer master process SIGHUP handler in worker.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-09 10:10:19-05:00,18000,2017-10-09 10:10:19-05:00,18000,True,False,['consumer.py'],['1ffb3ddbbc20e8716743011d2a4e02802f61f659'],3,5,8,1,0.0,0.0,1.0
4bcd35d518283fcd28bd1e900260c55711686203,Use a pool to allow the number of tasks to be bounded.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-09 11:19:30-05:00,18000,2017-10-09 11:19:30-05:00,18000,True,False,['minimal.py'],['fbf75577ee258a2e61658d6ded63c831603fb2b1'],3,5,8,1,1.0,1.0,0.0
d2e7d2e7b09fcae9707d3a39fb68bc57453a009f,Do not use pool to spawn scheduler.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-09 11:25:41-05:00,18000,2017-10-09 11:25:41-05:00,18000,True,False,['minimal.py'],['4bcd35d518283fcd28bd1e900260c55711686203'],1,1,2,1,,,
fcffc5463ad32006b87e09de11098ab542e086bc,Document SIGHUP behavior.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-09 11:51:45-05:00,18000,2017-10-09 11:51:45-05:00,18000,True,False,['consumer.rst'],['d2e7d2e7b09fcae9707d3a39fb68bc57453a009f'],0,9,9,1,,,
e005bfb17961685c5fda96fd2a900209f8744532,More docs for minihuey.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-09 11:57:22-05:00,18000,2017-10-09 11:57:22-05:00,18000,True,False,['mini.rst'],['fcffc5463ad32006b87e09de11098ab542e086bc'],0,6,6,1,,,
746b499b9ff4e7cf464e82748c12a8a6cb7db553,Clean up.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-10 08:57:29-05:00,18000,2017-10-10 08:57:29-05:00,18000,True,False,['runtests.py'],['e005bfb17961685c5fda96fd2a900209f8744532'],0,4,4,1,1.0,1.0,1.0
51f951e4c942577489ee0b9f720860fe4c1dff53,Fix periodic task registry to store and instantiate periodic tasks.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-16 09:33:34-05:00,18000,2017-10-16 09:33:34-05:00,18000,True,False,"['registry.py', 'test_consumer.py', 'test_registry.py']",['746b499b9ff4e7cf464e82748c12a8a6cb7db553'],5,4,9,3,0.0,0.0,0.0
c1f2833a8f615efec6ac861bb94fb88ec53856dc,1.5.2,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-16 10:01:35-05:00,18000,2017-10-16 10:01:35-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['51f951e4c942577489ee0b9f720860fe4c1dff53'],5,15,20,2,,,
b35818b5232924c1227c74c737430361ecc1ce59,Add method to Huey object to create consumer.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-17 14:17:00-05:00,18000,2017-10-17 14:17:00-05:00,18000,True,False,"['api.py', 'huey_consumer.py']",['c1f2833a8f615efec6ac861bb94fb88ec53856dc'],1,5,6,2,1.0,1.0,1.0
0b4ccf5288f062c060046467e8a64f154340cfc6,Add task locking to prevent multiple instances being run.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-19 16:30:36-05:00,18000,2017-10-19 16:30:36-05:00,18000,True,False,"['api.py', 'consumer.py', 'exceptions.py', 'test_consumer.py']",['b35818b5232924c1227c74c737430361ecc1ce59'],0,59,59,4,0.7560975609756098,0.7560975609756098,0.6097560975609756
864261af9e11854ec73cb724d8a7c648128a749c,Docstrings for locking.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-10-22 07:42:20-05:00,18000,2017-10-22 07:42:20-05:00,18000,True,False,['api.py'],['0b4ccf5288f062c060046467e8a64f154340cfc6'],0,36,36,1,,,
4fdfcfbb4772be0b260eb02d24da4d11b587e601,Better docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-10-22 07:52:26-05:00,18000,2017-10-22 07:52:26-05:00,18000,True,False,"['api.rst', 'events.rst', 'api.py']",['864261af9e11854ec73cb724d8a7c648128a749c'],6,49,55,3,,,
101b93722646e01eee781e40e571afedfe07e4e0,1.5.3,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-10-22 07:58:20-05:00,18000,2017-10-22 07:58:20-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['4fdfcfbb4772be0b260eb02d24da4d11b587e601'],3,11,14,2,,,
c206de7947d32542cc7a5b372169dfa815e544e4,Atomicity for task lock.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-23 09:43:41-05:00,18000,2017-10-23 09:43:41-05:00,18000,True,False,"['api.py', 'storage.py']",['101b93722646e01eee781e40e571afedfe07e4e0'],2,21,23,2,1.0,1.0,0.0
b15c819cb123cdca80909ee08b46f71516687057,Atomic put if empty for sqlite.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-23 10:04:23-05:00,18000,2017-10-23 10:04:23-05:00,18000,True,False,"['sqlitedb.py', 'test_sqlite.py']",['c206de7947d32542cc7a5b372169dfa815e544e4'],0,25,25,2,1.0,1.0,0.5263157894736842
9464803cfb597a6f27fb11fed0df3769501b27c2,1.5.4,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-10-23 10:40:09-05:00,18000,2017-10-23 10:40:09-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['b15c819cb123cdca80909ee08b46f71516687057'],3,11,14,2,,,
98f487d593a80ff36ce035019d75ea284ee0c81c,"Corrected the HUEY settings 

The Django DATABASE default key is an uppercase 'NAME' while the one used in the HUEY documentation is lowercase.
A reference to this is in the django docs here: https://docs.djangoproject.com/en/1.11/ref/settings/#name
This has been changed to effect this error.",Olamilekan Wahab,olamyy53@gmail.com,GitHub,noreply@github.com,2017-10-28 08:05:53+01:00,-3600,2017-10-28 08:05:53+01:00,-3600,True,False,['django.rst'],['9464803cfb597a6f27fb11fed0df3769501b27c2'],1,1,2,1,,,
07164083f6357d63a2a192961b74c61b4fb74ebd,Add pre-/post-execution task hooks API. Refs #263.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-11-02 11:40:36-05:00,18000,2017-11-02 11:40:36-05:00,18000,True,False,"['api.py', 'consumer.py', 'exceptions.py']",['9464803cfb597a6f27fb11fed0df3769501b27c2'],43,117,160,3,0.13725490196078433,0.47058823529411764,0.3137254901960784
c84caf924a5f4a0ce88656a96dda1f30fb68fef6,Add tests for hooks.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-11-02 11:57:43-05:00,18000,2017-11-02 11:57:43-05:00,18000,True,False,"['__init__.py', 'test_hooks.py']",['07164083f6357d63a2a192961b74c61b4fb74ebd'],0,88,88,2,1.0,1.0,0.9361702127659575
162db992c8af39c4cc8d844316ea7610510bde11,Document pre/post- hooks.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-11-02 12:07:48-05:00,18000,2017-11-02 12:07:48-05:00,18000,True,False,['api.rst'],['c84caf924a5f4a0ce88656a96dda1f30fb68fef6'],0,70,70,1,,,
07d7940760067a149367b14df76e08608e0fabfc,1.5.5,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-11-02 13:31:21-05:00,18000,2017-11-02 13:31:21-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['162db992c8af39c4cc8d844316ea7610510bde11'],3,13,16,2,,,
ab90bc9dae33168d82ba967f2527ffcc05cbb46b,Refactor into separate helper methods.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-11-02 14:00:02-05:00,18000,2017-11-02 14:00:02-05:00,18000,True,False,['consumer.py'],['07d7940760067a149367b14df76e08608e0fabfc'],22,29,51,1,1.0,1.0,1.0
a897193a3d08a36222337726c39481cdcfe1eff3,s/warn/warning.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-11-02 14:29:55-05:00,18000,2017-11-02 14:29:55-05:00,18000,True,False,['consumer.py'],['ab90bc9dae33168d82ba967f2527ffcc05cbb46b'],2,2,4,1,,,
636e1432f7f759f694bf6b14bd09ca3e710f91c1,Log before emitting.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-11-02 14:31:23-05:00,18000,2017-11-02 14:31:23-05:00,18000,True,False,['consumer.py'],['a897193a3d08a36222337726c39481cdcfe1eff3'],4,4,8,1,,,
65506e953f468cc1af15630b5602d0e671b34fda,Remove SIGHUP signal handling on windows platform or other platforms that dont support SIGHUP,santiavenda2,santiavenda2,santiavenda2,santiavenda2,2017-11-02 17:59:05-03:00,10800,2017-11-02 17:59:05-03:00,10800,True,False,['consumer.py'],['636e1432f7f759f694bf6b14bd09ca3e710f91c1'],3,6,9,1,0.3333333333333333,0.3333333333333333,1.0
4144c4949dc302090286bf348cba66da35298c3e,Fix conditional,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-11-03 16:40:12-05:00,18000,2017-11-03 16:40:12-05:00,18000,True,False,['minimal.py'],['de0e12eb77bfd075af61a97a1ab81f6a5b425339'],1,1,2,1,,,
4a5dda82f1ee98566402432bb340e95e47975d0e,"Catch ImportError raised during module load / autodiscover.

Refs #269.",Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-11-06 11:21:25-06:00,21600,2017-11-06 11:21:25-06:00,21600,True,False,['run_huey.py'],['4144c4949dc302090286bf348cba66da35298c3e'],1,9,10,1,1.0,1.0,1.0
af9ad0ab867e1458892c6869a021f081c99d39aa,Better task name default. Fixes #276.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-12-03 10:47:10-06:00,21600,2017-12-03 10:47:10-06:00,21600,True,False,"['api.py', 'test_queue.py', 'test_registry.py', 'test_sqlite.py']",['d01ef827709f2071743d6e81cbe21229f90f7a59'],13,14,27,4,0.0,1.0,1.0
8a98bcad6d8c37e7da2898cce05a09c55e355ee2,Test setting params.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-12-03 10:51:11-06:00,21600,2017-12-03 10:51:11-06:00,21600,True,False,['test_registry.py'],['af9ad0ab867e1458892c6869a021f081c99d39aa'],0,9,9,1,1.0,1.0,1.0
50e443d1e62ba7b99e9cf851d8c341424c22e504,Allow periodic tasks to specify arbitrary settings as well. Refs #274,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-12-03 10:52:31-06:00,21600,2017-12-03 10:52:31-06:00,21600,True,False,['api.py'],['8a98bcad6d8c37e7da2898cce05a09c55e355ee2'],2,3,5,1,1.0,1.0,1.0
f7b18fd3cd759c7548b0258c7468902d2a4fc841,1.5.6,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-12-09 20:38:40-06:00,21600,2017-12-09 20:38:40-06:00,21600,True,False,['__init__.py'],['50e443d1e62ba7b99e9cf851d8c341424c22e504'],1,1,2,1,,,
c221fa9d4940e7c4d177504df002d96f0fbfe16b,Changelog updates,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-12-09 20:42:49-06:00,21600,2017-12-09 20:42:49-06:00,21600,True,False,['CHANGELOG.md'],['f7b18fd3cd759c7548b0258c7468902d2a4fc841'],2,12,14,1,,,
00c33127c012854e601d8cd09e05c51235df02de,Check scheduler when checking health.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-12-11 08:49:41-06:00,21600,2017-12-11 08:50:11-06:00,21600,True,False,['consumer.py'],['c221fa9d4940e7c4d177504df002d96f0fbfe16b'],0,8,8,1,0.0,1.0,1.0
1cf537852693f0267fc1b83d23c6281a8667ea13,Coerce exception to string. Fixes #246,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-12-14 08:28:37-06:00,21600,2017-12-14 08:28:37-06:00,21600,True,False,"['api.py', 'test_queue.py']",['00c33127c012854e601d8cd09e05c51235df02de'],2,2,4,2,,,
69888c4652c97ad6672bc3c50bc8391157197572,"Add RetryTask exception and corresponding consumer logic.

References #280.",Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-12-22 10:24:00-06:00,21600,2017-12-22 10:24:15-06:00,21600,True,False,"['consumer.py', 'exceptions.py', 'test_consumer.py']",['1cf537852693f0267fc1b83d23c6281a8667ea13'],0,38,38,3,0.18518518518518517,0.8148148148148148,0.8148148148148148
923403f2f93036abb921c47cbe3ce35f58058126,Add additional test case for maxing out explicit retries.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-12-22 10:27:26-06:00,21600,2017-12-22 10:27:26-06:00,21600,True,False,"['consumer.py', 'test_consumer.py']",['69888c4652c97ad6672bc3c50bc8391157197572'],1,15,16,2,0.0,1.0,1.0
06f4c6ede53fb7ab998e7b98a479502b441a3982,Rollback changes to task name API as it causes pickling errors.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-12-26 13:10:29-06:00,21600,2017-12-26 13:10:29-06:00,21600,True,False,"['api.py', 'test_queue.py', 'test_registry.py', 'test_sqlite.py']",['923403f2f93036abb921c47cbe3ce35f58058126'],10,8,18,4,0.0,0.0,0.0
38686a747a6b58aa3fad86bc34a063c93c210805,Include __module__ in task repr.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-12-26 13:12:17-06:00,21600,2017-12-26 13:12:17-06:00,21600,True,False,"['api.py', 'test_sqlite.py']",['06f4c6ede53fb7ab998e7b98a479502b441a3982'],2,2,4,2,,,
f1778e70a2a5e20b5af79b1f3147b5c566689aa1,Fix #282 and add test-case.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-12-27 14:54:23-06:00,21600,2017-12-27 14:54:23-06:00,21600,True,False,"['registry.py', 'test_consumer.py']",['38686a747a6b58aa3fad86bc34a063c93c210805'],2,29,31,2,1.0,0.36363636363636365,0.7727272727272727
5bf125d1044122321b7d25307808bb11afe465de,Add simple networked queue server implementation.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-12-28 10:46:27-06:00,21600,2017-12-28 10:46:27-06:00,21600,True,False,"['simple.py', 'simple_storage.py', 'test_simple.py']",['f1778e70a2a5e20b5af79b1f3147b5c566689aa1'],0,528,528,3,0.7421383647798742,0.8836477987421384,0.6761006289308176
06e78b12a0f6be470f9290e10c08d84c0b4b0a54,Remove unused imports.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2017-12-28 14:04:51-06:00,21600,2017-12-28 14:04:51-06:00,21600,True,False,['simple.py'],['5bf125d1044122321b7d25307808bb11afe465de'],4,0,4,1,,,
a8f3b52d8af6e6fd9a3eea3531ffb9112ebc30d8,Support dictionaries.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2017-12-31 08:57:39-06:00,21600,2017-12-31 08:57:39-06:00,21600,True,False,['simple.py'],['06e78b12a0f6be470f9290e10c08d84c0b4b0a54'],0,45,45,1,0.7777777777777778,0.8611111111111112,0.5833333333333334
e4935beaff50a2f13bf418b49ae0a22c9c1f217b,Py3k compatibility.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-02 09:44:15-06:00,21600,2018-01-02 09:44:15-06:00,21600,True,False,['simple.py'],['a8f3b52d8af6e6fd9a3eea3531ffb9112ebc30d8'],462,480,942,1,1.0,1.0,1.0
3e6d5ca2c318a3ca9804fb836efaccfdd26ee7d6,Add option parser.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-01-02 09:51:26-06:00,21600,2018-01-02 09:51:26-06:00,21600,True,False,['simple.py'],['e4935beaff50a2f13bf418b49ae0a22c9c1f217b'],4,36,40,1,1.0,1.0,1.0
4bd44aaf36fcc72627716a5d911f569a617b69bd,Fix variable typo.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-01-02 10:05:44-06:00,21600,2018-01-02 10:05:44-06:00,21600,True,False,['simple.py'],['3e6d5ca2c318a3ca9804fb836efaccfdd26ee7d6'],1,1,2,1,,,
16b8d412c9f1d2aa71b2ec38c31e392a0385d93d,More docs.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-02 10:26:36-06:00,21600,2018-01-02 10:26:36-06:00,21600,True,False,['README.rst'],['4bd44aaf36fcc72627716a5d911f569a617b69bd'],1,59,60,1,,,
2f35876988bcca29b7f921a20c9c2231ec761451,Allow configuration of Huey backend using django config,Joe Alcorn,joealcorn123@gmail.com,Joe Alcorn,joealcorn123@gmail.com,2018-01-10 23:49:33+00:00,0,2018-01-11 00:05:36+00:00,0,True,False,"['django.rst', '__init__.py']",['16b8d412c9f1d2aa71b2ec38c31e392a0385d93d'],4,20,24,2,1.0,1.0,1.0
a295f5249c05c2b0f93d027858f9ec8e9627a881,Exceptions in data-store.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-01-11 08:53:43-06:00,21600,2018-01-11 08:53:43-06:00,21600,True,False,"['api.py', 'exceptions.py', 'utils.py']",['16b8d412c9f1d2aa71b2ec38c31e392a0385d93d'],5,26,31,3,0.7777777777777778,0.7777777777777778,0.2222222222222222
f867e2fc0fba0ed427e0c1d62b170c148ff27501,"Raise exception when getting result of task that failed.

Additionally, refactor the result store interfaces to better
encapsulate the serialization.",Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-11 09:25:56-06:00,21600,2018-01-11 09:25:56-06:00,21600,True,False,"['api.py', 'exceptions.py', 'test_consumer.py', 'test_queue.py']",['a295f5249c05c2b0f93d027858f9ec8e9627a881'],16,50,66,4,1.0,1.0,0.6521739130434783
32f6acb989ea5bcf7df1ad1dbc6385c48f443d3e,Add full description to package.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-11 09:28:48-06:00,21600,2018-01-11 09:28:48-06:00,21600,True,False,['setup.py'],['f867e2fc0fba0ed427e0c1d62b170c148ff27501'],0,5,5,1,,,
ebca030a8676e0febceafc58b6195da8133019f5,Include build status on README.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-11 09:32:05-06:00,21600,2018-01-11 09:32:05-06:00,21600,True,False,['README.rst'],['32f6acb989ea5bcf7df1ad1dbc6385c48f443d3e'],1,3,4,1,,,
aaf1b5779a857c699bdb216d2a8050324eb9e086,Update docs.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-11 09:38:41-06:00,21600,2018-01-11 09:38:41-06:00,21600,True,False,['index.rst'],['ebca030a8676e0febceafc58b6195da8133019f5'],1,1,2,1,,,
76121b6bd3e75283a0eb90392c24a659b9260164,Add docs on exception raised by TaskResultWrapper.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-11 09:48:57-06:00,21600,2018-01-11 09:48:57-06:00,21600,True,False,['api.rst'],['4c998e446af8ff7554ec11f7750d9cd53e9263b3'],0,19,19,1,,,
7161a831f09e5b8414c52a7466c1847511ee4b3e,Add NullHandler() to avoid spurious output in tests.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-11 16:35:55-06:00,21600,2018-01-11 16:35:55-06:00,21600,True,False,['base.py'],['76121b6bd3e75283a0eb90392c24a659b9260164'],0,1,1,1,,,
3d0874603fbc599157a0fbf969d576291d74a271,"Refactor task and periodic task decorators.

Rather than closing over the arguments and using nested functions,
I've flattened things and opted to use a wrapper class with a __call__
method instead.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-01-11 20:43:46-06:00,21600,2018-01-11 20:43:46-06:00,21600,True,False,['api.py'],['7161a831f09e5b8414c52a7466c1847511ee4b3e'],54,62,116,1,0.0,1.0,0.0
312370f48f7f0e61a5e455cb41f135a4c37115f5,"Add pipeline feature, including partial application.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-01-11 21:49:02-06:00,21600,2018-01-11 21:49:02-06:00,21600,True,False,"['api.py', 'registry.py', '__init__.py', 'test_pipeline.py']",['3d0874603fbc599157a0fbf969d576291d74a271'],13,124,137,4,0.4868421052631579,0.6710526315789473,0.5
10be731dbe733b27e59b9c48f94bf05f950c4d2d,Update docs for pipelines and task decorator refactor.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-12 13:38:37-06:00,21600,2018-01-12 13:38:37-06:00,21600,True,False,"['api.rst', 'getting-started.rst', 'index.rst']",['312370f48f7f0e61a5e455cb41f135a4c37115f5'],180,447,627,3,,,
dbd8bc47a26f39d4bf49724deeb5c4439cd45145,Fix rst errors.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-12 14:53:56-06:00,21600,2018-01-12 14:53:56-06:00,21600,True,False,['api.rst'],['10be731dbe733b27e59b9c48f94bf05f950c4d2d'],7,3,10,1,,,
747e5df450b1fee7654a0b0b39499b8cac572327,Document task locking in getting-started.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-12 15:09:15-06:00,21600,2018-01-12 15:09:15-06:00,21600,True,False,"['README.rst', 'getting-started.rst', 'index.rst']",['dbd8bc47a26f39d4bf49724deeb5c4439cd45145'],0,42,42,3,,,
b246aa3c3be89667ca02da696b6f459db3558e4b,1.6.0,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-12 15:09:27-06:00,21600,2018-01-12 15:09:27-06:00,21600,True,False,"['CHANGELOG.md', '__init__.py']",['747e5df450b1fee7654a0b0b39499b8cac572327'],3,19,22,2,,,
c27b2399bd42c9bd5e262e236252f64d9193ec91,Add docs on simple storage.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-01-12 22:17:24-06:00,21600,2018-01-12 22:17:24-06:00,21600,True,False,"['contrib.rst', 'simple.rst']",['b246aa3c3be89667ca02da696b6f459db3558e4b'],0,223,223,2,,,
c4ded7f14c2d974cf906f83e10229f0ee280a0ef,Support for threading in addition to gevent.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-01-13 17:16:29-06:00,21600,2018-01-13 17:16:29-06:00,21600,True,False,['simple.py'],['c27b2399bd42c9bd5e262e236252f64d9193ec91'],13,55,68,1,0.0,1.0,0.5
64871af0fa1641ede615247b302e2439c3feb762,Docs on using threads.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-01-13 17:18:14-06:00,21600,2018-01-13 17:18:14-06:00,21600,True,False,['simple.rst'],['c4ded7f14c2d974cf906f83e10229f0ee280a0ef'],2,3,5,1,,,
6c34ec6a92a4bbb3a2c2f5dd6c179951d8441fe0,"Migrate to using ""simpledb"".",Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-15 10:28:18-06:00,21600,2018-01-15 10:28:18-06:00,21600,True,False,"['simple.py', 'simple_storage.py', 'test_simple.py']",['64871af0fa1641ede615247b302e2439c3feb762'],566,43,609,3,0.3170028818443804,0.12103746397694524,0.3400576368876081
540e7aeefc2f7ce79ac4c767225837b5ef29543c,Doc cleanup.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-15 10:34:36-06:00,21600,2018-01-15 10:34:36-06:00,21600,True,False,['simple.rst'],['6c34ec6a92a4bbb3a2c2f5dd6c179951d8441fe0'],166,13,179,1,,,
0a41bc5b626798d4f7c4cbcaede986270b1b3b0a,"Add note to changelog, refs #289.",Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-25 08:57:49-06:00,21600,2018-01-25 08:57:49-06:00,21600,True,False,['CHANGELOG.md'],['540e7aeefc2f7ce79ac4c767225837b5ef29543c'],0,7,7,1,,,
b3bd8a48376c02e8cc23f98e22c19a73a28522e5,Implement equivalent fix for #289.,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-25 08:59:21-06:00,21600,2018-01-25 08:59:21-06:00,21600,True,False,['registry.py'],['0a41bc5b626798d4f7c4cbcaede986270b1b3b0a'],2,6,8,1,1.0,1.0,1.0
3abb3123d981e264e767110c56a37fce916bab6f,Changelog updates for 1.6.1,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-25 09:01:37-06:00,21600,2018-01-25 09:01:37-06:00,21600,True,False,['CHANGELOG.md'],['b3bd8a48376c02e8cc23f98e22c19a73a28522e5'],2,14,16,1,,,
dce8f560747fbef97af58d60f16d9f81b024ad9c,1.6.1,Charles Leifer,charles.leifer@propylon.com,Charles Leifer,charles.leifer@propylon.com,2018-01-25 09:01:51-06:00,21600,2018-01-25 09:01:51-06:00,21600,True,False,['__init__.py'],['3abb3123d981e264e767110c56a37fce916bab6f'],1,1,2,1,,,
4b672594a938427cebcb34b7189a8c9bdb0b895a,"Tentative fix to issue of tracebacks being stored when store_errors=False.

References #290.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-02-07 10:27:30-06:00,21600,2018-02-07 10:27:30-06:00,21600,True,False,['api.py'],['dce8f560747fbef97af58d60f16d9f81b024ad9c'],3,2,5,1,1.0,1.0,0.0
ae56d41e09ac23d616e533fd7dc5374dc283966e,1.7.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-02-07 11:16:58-06:00,21600,2018-02-07 11:16:58-06:00,21600,True,False,"['CHANGELOG.md', '__init__.py']",['4b672594a938427cebcb34b7189a8c9bdb0b895a'],3,15,18,2,,,
b47b3a4f6b84e0ff5838cf5330b41ba42573a309,Dead code removal.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-02-12 16:45:46-06:00,21600,2018-02-12 16:45:46-06:00,21600,True,False,['simple_storage.py'],['ae56d41e09ac23d616e533fd7dc5374dc283966e'],13,0,13,1,,,
37a4ba9db4fb97dba54ffe55a5dabf70cbf22081,"allow django connection pooling

added close_db_connections before and after each task

removed duplicate close",Marco Glauser,marco.glauser@apgsga.ch,Marco Glauser,marco.glauser@apgsga.ch,2018-02-19 12:04:19+00:00,0,2018-02-19 16:23:58+00:00,0,True,False,['__init__.py'],['b47b3a4f6b84e0ff5838cf5330b41ba42573a309'],2,3,5,1,,,
29e6a0ab915a6dfcd1f75d29c56e3b42071b0e1b,Update simpledb note.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-02-20 12:12:37-06:00,21600,2018-02-20 12:12:48-06:00,21600,True,False,['README.rst'],['b262b99fb7f515db2db35d6c1d1a4a727c81d148'],2,3,5,1,,,
1869440cc1646678f3639dea3b3962bfb54598cb,Do not require settings.HUEY to be defined.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-02-22 16:08:04-06:00,21600,2018-02-22 16:08:04-06:00,21600,True,False,['run_huey.py'],['29e6a0ab915a6dfcd1f75d29c56e3b42071b0e1b'],2,5,7,1,0.0,1.0,0.0
6e4b71dc8ad1609f59751c63909d6a180fd74fe3,"Extended djhuey to support multiple huey instances

Added testing env for djhuey

added ConfigurationReaders

added default configuration

added DjangoHuey

refactored readers

further refactorings

added argument to run_huey

added queue parameter for run_huey

updated docs

added title to docs

removed print

Update django.rst

fixed run_huey bug

added check if huey is in settings

some adjustments

install test_requirements.txt in travis ci

added python2.7 compatibality

fixed threading bug",Severin Bühler,severin.buehler@apgsga.ch,Marco Glauser,marco.glauser@apgsga.ch,2017-06-16 09:34:47+02:00,-7200,2018-02-28 08:04:23+00:00,0,True,False,"['.gitignore', '.travis.yml', 'django.rst', 'settings.py', '__init__.py', 'settings.py', '__init__.py', 'models.py', 'tasks.py', 'urls.py', '__init__.py', 'settings.py', '__init__.py', 'models.py', 'tasks.py', 'urls.py', '__init__.py', 'configuration.py', 'run_huey.py', '__init__.py', 'settings.py', 'test_configuration.py', 'runtests.py', 'test_requirements.txt']",['2c46686d7ad97a2495930be6bf5d8798c5f0e701'],116,901,1017,24,0.6986301369863014,0.9657534246575342,0.9269406392694064
41b4092a844b3bb3db1af30b31e441345cac2caa,fix duplicate runtests,Marco Glauser,marco.glauser@apgsga.ch,Marco Glauser,marco.glauser@apgsga.ch,2018-02-28 09:58:37+00:00,0,2018-02-28 09:58:37+00:00,0,True,False,['runtests.py'],['b30de06ca3b5953720a8b7dd4edefa73e49cf81d'],3,1,4,1,,,
6d31507e03659cf6b501c536306c45542c982e7d,limit django tests to djhuey folder,Marco Glauser,marco.glauser@apgsga.ch,Marco Glauser,marco.glauser@apgsga.ch,2018-02-28 10:10:38+00:00,0,2018-02-28 10:10:38+00:00,0,True,False,"['runtests.py', 'test_requirements.txt']",['41b4092a844b3bb3db1af30b31e441345cac2caa'],4,5,9,2,1.0,1.0,1.0
259ac1bf6390c050892fa678842c1793e7f1dda0,Allow running tests without Django.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-02-28 09:37:38-06:00,21600,2018-02-28 09:37:38-06:00,21600,True,False,['runtests.py'],['a5db95111d2b590c2d078cdbfcdc3d8df7194697'],4,4,8,1,,,
cfdc87cc7f438dac7b6b68db9f34f9b83b31ff80,Clean-up the multi-config Django patch.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-02-28 10:03:43-06:00,21600,2018-02-28 10:03:43-06:00,21600,True,False,"['__init__.py', 'configuration.py']",['259ac1bf6390c050892fa678842c1793e7f1dda0'],142,64,206,2,0.76,0.04,0.16
75594be9a11013dd95a90b76c749b1741c1493f9,call_local should not close connections. Fixes #296.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-03-09 08:54:00-06:00,21600,2018-03-09 08:54:00-06:00,21600,True,False,['__init__.py'],['cfdc87cc7f438dac7b6b68db9f34f9b83b31ff80'],1,3,4,1,1.0,1.0,1.0
8181e32d69afc4ece0cd39438b757503aa987744,Use `queue` kwarg for django task queue specification.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-03-09 09:24:13-06:00,21600,2018-03-09 09:24:13-06:00,21600,True,False,"['django.rst', 'configuration.py']",['75594be9a11013dd95a90b76c749b1741c1493f9'],6,12,18,2,1.0,1.0,0.0
8201d28eb32d1ae4f06af816829d1837d967801c,Update tests.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-03-09 09:30:16-06:00,21600,2018-03-09 09:30:16-06:00,21600,True,False,['test_configuration.py'],['8181e32d69afc4ece0cd39438b757503aa987744'],1,1,2,1,,,
aaf3824723dceb6ac537166c6dd6e3da2ae3d9ca,1.8.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-03-09 09:44:51-06:00,21600,2018-03-09 09:44:51-06:00,21600,True,False,"['CHANGELOG.md', '__init__.py']",['8201d28eb32d1ae4f06af816829d1837d967801c'],3,17,20,2,,,
f85efe0a89270436211d71fca80d0a8c849b764b,Fix bug when running huey with specific queue.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-03-12 16:06:11-05:00,18000,2018-03-12 16:06:11-05:00,18000,True,False,['run_huey.py'],['aaf3824723dceb6ac537166c6dd6e3da2ae3d9ca'],1,3,4,1,1.0,1.0,0.0
b652b396949206872dd68c8f086f29c9b7fb2161,"Roll back multi-queue support for Django.

Reverts #230",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-03-12 16:19:54-05:00,18000,2018-03-12 16:19:54-05:00,18000,True,False,"['.travis.yml', 'django.rst', '__init__.py', 'configuration.py', 'run_huey.py', '__init__.py', 'settings.py', 'test_configuration.py', 'runtests.py', 'test_requirements.txt']",['f85efe0a89270436211d71fca80d0a8c849b764b'],779,144,923,10,0.23514851485148514,0.034653465346534656,0.08168316831683169
791b4a30fd4b1590778a5e47efc9119820e5ceac,1.9.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-03-12 16:22:46-05:00,18000,2018-03-12 16:22:46-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['b652b396949206872dd68c8f086f29c9b7fb2161'],3,21,24,2,,,
8fdc2a369972721c512ed2ba1759a4b361024965,Restore single-huey django example code.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-03-12 16:27:58-05:00,18000,2018-03-12 16:27:58-05:00,18000,True,False,"['__init__.py', 'settings.py', '__init__.py', 'models.py', 'tasks.py', 'urls.py', 'settings.py', '__init__.py', 'settings.py', '__init__.py', 'models.py', 'tasks.py', 'urls.py']",['791b4a30fd4b1590778a5e47efc9119820e5ceac'],79,18,97,13,0.0,0.0,0.0
cf06701c265cd40ae7c1f813b0c0c09e13e77770,"Support wrapping task-decorated funcs with periodic tasks.

Refs #277.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-03-15 10:45:24-05:00,18000,2018-03-15 10:45:24-05:00,18000,True,False,"['api.py', 'test_queue.py']",['8fdc2a369972721c512ed2ba1759a4b361024965'],0,22,22,2,1.0,1.0,1.0
20781a0e2f2c0d41d66d0891fd1ffd900b474f97,Cleaner implementation for re-wrapping tasks/periodic tasks.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-03-15 10:46:30-05:00,18000,2018-03-15 10:46:30-05:00,18000,True,False,['api.py'],['cf06701c265cd40ae7c1f813b0c0c09e13e77770'],5,2,7,1,0.0,0.0,0.0
7766cdb11ea9f7baff0978c96ea0e8a2ef75d8c8,Removing dead code.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-03-19 22:11:13-05:00,18000,2018-03-19 22:11:13-05:00,18000,True,False,['api.py'],['20781a0e2f2c0d41d66d0891fd1ffd900b474f97'],2,2,4,1,,,1.0
e860b54c72a61615af331e66961430dfff8f7b4a,Ensure that scheduler loop does drift. Refs #304.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-03-20 20:22:26-05:00,18000,2018-03-20 20:24:31-05:00,18000,True,False,['consumer.py'],['7766cdb11ea9f7baff0978c96ea0e8a2ef75d8c8'],4,9,13,1,0.2,0.2,0.8
d6a5f372715737cbfbed6ff71dc685107ade1e5e,Add reset() method to TaskResultWrapper.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-04-04 13:52:52-05:00,18000,2018-04-04 13:52:52-05:00,18000,True,False,['api.py'],['e860b54c72a61615af331e66961430dfff8f7b4a'],0,3,3,1,1.0,1.0,1.0
8ccbbf9e833df7f94929200435891d74069a345b,Docs for reset() method.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-04-04 13:54:21-05:00,18000,2018-04-04 13:54:21-05:00,18000,True,False,['api.rst'],['d6a5f372715737cbfbed6ff71dc685107ade1e5e'],0,5,5,1,,,
17d54af8c2eb035ad23db4318e383412c917506b,1.9.1,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-04-04 13:56:00-05:00,18000,2018-04-04 13:56:00-05:00,18000,True,False,['__init__.py'],['8ccbbf9e833df7f94929200435891d74069a345b'],1,1,2,1,,,
d0c277ac324b5836acc348d85727e50d7f5aa635,1.9.1 changelog.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-04-04 13:57:45-05:00,18000,2018-04-04 13:57:45-05:00,18000,True,False,['CHANGELOG.md'],['17d54af8c2eb035ad23db4318e383412c917506b'],2,12,14,1,,,
2509a0b568b497e3f6718edd574a629a6829fe7a,"Add ""-f"" to flush locks when starting consumer. Refs #308.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-04-05 23:02:17-05:00,18000,2018-04-05 23:02:17-05:00,18000,True,False,"['api.py', 'consumer.py', 'consumer_options.py', 'test_queue.py']",['d0c277ac324b5836acc348d85727e50d7f5aa635'],3,37,40,4,0.7916666666666666,1.0,0.8333333333333334
0447c6046e7475ec31e9d0796ccc6c7f906bfaef,Add lock_task to djhuey module namespace.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-04-11 15:08:57-05:00,18000,2018-04-11 15:08:57-05:00,18000,True,False,['__init__.py'],['2509a0b568b497e3f6718edd574a629a6829fe7a'],0,1,1,1,,,
c5b2f54f129a2f5e52d4bdb4e020ef04895c84ab,Fix bad link in readme,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-04-25 10:37:45-05:00,18000,2018-04-25 10:37:45-05:00,18000,True,False,['README.rst'],['0447c6046e7475ec31e9d0796ccc6c7f906bfaef'],1,1,2,1,,,
a36c03d551fbffaa7a3b9f72fbfdd473f2a7adc5,Add comments to consumer code and methods.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-04-25 15:50:29-05:00,18000,2018-04-25 15:50:29-05:00,18000,True,False,['consumer.py'],['c5b2f54f129a2f5e52d4bdb4e020ef04895c84ab'],7,123,130,1,,,
38c53cb82320dca9fa1af780c8f367f42b72dec6,Better test runner.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-05-01 14:48:47-05:00,18000,2018-05-01 14:48:47-05:00,18000,True,False,['runtests.py'],['a36c03d551fbffaa7a3b9f72fbfdd473f2a7adc5'],8,25,33,1,0.0,0.0,0.0
b53aadec658bfe0ae69c1d8fc995466ebbb5cf4c,Fix available task log message. Refs #294,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-05-10 14:44:29-05:00,18000,2018-05-10 14:44:29-05:00,18000,True,False,['consumer.py'],['38c53cb82320dca9fa1af780c8f367f42b72dec6'],2,1,3,1,,,
2c465dc117e84b9d1119f8b06a5488f68a793e7d,Allow task pipelines to run when always_eager=True.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-05-17 14:08:29-05:00,18000,2018-05-17 14:08:29-05:00,18000,True,False,"['api.py', 'test_queue.py']",['b53aadec658bfe0ae69c1d8fc995466ebbb5cf4c'],1,30,31,2,1.0,1.0,1.0
8e1ebef282ddafe8e5220d8b83d6673dd4495d4e,Expose enqueue through djhuey,Vladislav Manchev,3009538+blablacio@users.noreply.github.com,GitHub,noreply@github.com,2018-05-23 22:06:18+02:00,-7200,2018-05-23 22:06:18+02:00,-7200,True,False,['__init__.py'],['2c465dc117e84b9d1119f8b06a5488f68a793e7d'],0,1,1,1,,,
fb76042116bb9bd5d1545c7224c4db22858a9c6b,Add support for SIGINT for graceful stopping and restarting.,Logan Collins,logan@lcspace.net,Logan Collins,logan@lcspace.net,2018-05-29 16:44:11-05:00,18000,2018-05-29 16:44:11-05:00,18000,True,False,['consumer.py'],['a3515fa4b9220e8ae066cd97ae52b3e85a9b5a84'],1,11,12,1,0.8888888888888888,1.0,0.1111111111111111
b294bf23295c536b028e638dd4ea24cc05f5cec7,"Revert ""Add support for SIGINT for graceful stopping and restarting.""

This reverts commit fb76042116bb9bd5d1545c7224c4db22858a9c6b.",Logan Collins,logan@lcspace.net,Logan Collins,logan@lcspace.net,2018-05-30 10:53:40-05:00,18000,2018-05-30 10:53:40-05:00,18000,True,False,['consumer.py'],['fb76042116bb9bd5d1545c7224c4db22858a9c6b'],11,1,12,1,0.1111111111111111,0.0,0.8888888888888888
67ab06d94284f4e1cc4cfcc530796bf9f96b4d30,Simpler adding of graceful restart + always add the default SIGINT handler.,Logan Collins,logan@lcspace.net,Logan Collins,logan@lcspace.net,2018-05-30 10:54:29-05:00,18000,2018-05-30 10:54:29-05:00,18000,True,False,['consumer.py'],['b294bf23295c536b028e638dd4ea24cc05f5cec7'],1,4,5,1,0.6666666666666666,1.0,0.3333333333333333
f0d17e47f930c73e539e9d5456458628e6015822,1.10.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-05-30 11:11:54-05:00,18000,2018-05-30 11:12:21-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['1e5a97b2cff514c36f454ffa969d44b48c029da6'],3,13,16,2,,,
4138d454cc6fd4d252c9350dbd88d74dd3c67dcb,Remove connect() call as it is no longer needed.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-06-24 07:17:38-05:00,18000,2018-06-24 07:17:38-05:00,18000,True,False,['simple_storage.py'],['f0d17e47f930c73e539e9d5456458628e6015822'],1,0,1,1,0.0,0.0,1.0
44a44456060db31271a4a6fcbf8403d6d3f6ec04,"Run pre- and post-execute hooks in always_eager mode.

Refs #327",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-07-09 13:29:25-05:00,18000,2018-07-09 13:29:25-05:00,18000,True,False,['api.py'],['4138d454cc6fd4d252c9350dbd88d74dd3c67dcb'],0,4,4,1,1.0,0.0,1.0
a8909f2b8f539582725d32479132d232421a5434,"Include task value and exception in eager-mode post-execute.

Refs #327",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-07-10 09:14:07-05:00,18000,2018-07-10 09:14:07-05:00,18000,True,False,['api.py'],['44a44456060db31271a4a6fcbf8403d6d3f6ec04'],2,8,10,1,0.0,0.0,1.0
6b09632394043aef6b46db7888c024b2d84aca72,Expose restore/revoke through djhuey,Vladislav Manchev,v@bin.bz,Vladislav Manchev,v@bin.bz,2018-07-13 11:09:06+02:00,-7200,2018-07-13 11:09:06+02:00,-7200,True,False,['__init__.py'],['a8909f2b8f539582725d32479132d232421a5434'],0,7,7,1,,,
c670b60bdc270455b588b52706311248595a223e,Fix failing huey test on 3.7,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-07-15 17:17:37-05:00,18000,2018-07-15 17:17:37-05:00,18000,True,False,['test_queue.py'],['22914a471650cd16f24f560c3543adc098d5bdfb'],1,1,2,1,,,
7d887c85cd33316506ca4558658a82cbcbd38215,Test huey against 3.7,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-07-15 17:18:18-05:00,18000,2018-07-15 17:18:18-05:00,18000,True,False,['.travis.yml'],['c670b60bdc270455b588b52706311248595a223e'],0,3,3,1,,,
8727fca0a777f8f48faceb627a6b1d89ccb488dd,travisci changes,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-07-15 17:34:49-05:00,18000,2018-07-15 17:34:49-05:00,18000,True,False,['.travis.yml'],['7d887c85cd33316506ca4558658a82cbcbd38215'],7,13,20,1,,,
75f797a4221daef426ff8ae2834e674b3f23087e,1.10.1,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-07-24 08:29:11-05:00,18000,2018-07-24 08:29:11-05:00,18000,True,False,['__init__.py'],['8727fca0a777f8f48faceb627a6b1d89ccb488dd'],1,1,2,1,,,
7856f6953f1229694986443499b0eff70dd6e89c,CHANGELOG updates for 1.10.1,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-07-24 08:32:43-05:00,18000,2018-07-24 08:32:43-05:00,18000,True,False,['CHANGELOG.md'],['75f797a4221daef426ff8ae2834e674b3f23087e'],1,13,14,1,,,
dc970232301d921487bbaa3a2216d3a02f66be3e,Add troubleshooting note about consumer+cron+UTC.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-08-14 11:39:32-05:00,18000,2018-08-14 11:39:32-05:00,18000,True,False,['troubleshooting.rst'],['7856f6953f1229694986443499b0eff70dd6e89c'],0,5,5,1,,,
8b9df00769fcba16feb48a7bc079de45358bf99e,Improve extras_require options.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-08-14 14:30:10-05:00,18000,2018-08-14 14:30:10-05:00,18000,True,False,['setup.py'],['dc970232301d921487bbaa3a2216d3a02f66be3e'],1,4,5,1,,,
9e21490abf6b81741ed61031f2549f7ad89d65ec,1.10.2,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-08-14 14:31:32-05:00,18000,2018-08-14 14:31:51-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['8b9df00769fcba16feb48a7bc079de45358bf99e'],2,9,11,2,,,
b05f70777bcede61385ee9bd50f728e0b809f7e7,Add API for registering worker startup hooks.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-08-30 16:02:43-05:00,18000,2018-08-30 16:02:43-05:00,18000,True,False,"['api.rst', 'api.py', 'consumer.py']",['9e21490abf6b81741ed61031f2549f7ad89d65ec'],0,92,92,3,0.9523809523809523,1.0,0.8571428571428571
e04f17b54fba54b3e1232607df4d7389d72017a3,Add note to changelog.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-08-30 16:07:25-05:00,18000,2018-08-30 16:07:25-05:00,18000,True,False,['CHANGELOG.md'],['b05f70777bcede61385ee9bd50f728e0b809f7e7'],0,4,4,1,,,
7092cf07bc3cf7ca794dec31454142b2a6625a9e,"Remove unnecessary sleep, more accurate worker health check.

Replaces #353",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-08-31 10:25:12-05:00,18000,2018-08-31 10:25:12-05:00,18000,True,False,['consumer.py'],['e04f17b54fba54b3e1232607df4d7389d72017a3'],8,7,15,1,1.0,0.0,1.0
5cad89c4ad59c88aa8b156d0a92a7d10b03c5245,"Add support for result_items() to sqlite storage.

Fixes #356",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-09-06 14:47:38-05:00,18000,2018-09-06 14:47:38-05:00,18000,True,False,['sqlitedb.py'],['7092cf07bc3cf7ca794dec31454142b2a6625a9e'],0,4,4,1,1.0,1.0,1.0
0931e2aa45441a944d9b3882eb41fe904f28d585,typo in api.py docstring,JensDiemer,git@jensdiemer.de,JensDiemer,git@jensdiemer.de,2018-09-07 11:03:01+02:00,-7200,2018-09-07 11:03:01+02:00,-7200,True,False,['api.py'],['5cad89c4ad59c88aa8b156d0a92a7d10b03c5245'],2,2,4,1,,,
8e99fdebd9f8a750a9cb4a931ec5375f915916f5,use django.utils.module_loading.autodiscover_modules,JensDiemer,git@jensdiemer.de,JensDiemer,git@jensdiemer.de,2018-09-07 11:42:26+02:00,-7200,2018-09-07 11:42:26+02:00,-7200,True,False,['run_huey.py'],['5cad89c4ad59c88aa8b156d0a92a7d10b03c5245'],20,3,23,1,0.0,0.0,0.0
2ac97394661b86edba450a1155859a1a642d6503,"Resolve inconsistency in error handling when using Huey.result().

Fixes #364",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-09-26 21:53:07-05:00,18000,2018-09-26 21:53:07-05:00,18000,True,False,['api.py'],['db5f038bdf7c8d07293d8d66a2da3070531eee4d'],11,8,19,1,0.0,0.0,1.0
11190ca41ec3bfa172fada1bd456160ef882e814,"Add testcase for task error handling.

Refs #364",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-09-26 21:59:54-05:00,18000,2018-09-26 21:59:54-05:00,18000,True,False,['test_queue.py'],['2ac97394661b86edba450a1155859a1a642d6503'],0,19,19,1,1.0,1.0,1.0
f7c5b1d72b13896bc8e660c6931743426496ecd5,Fix regression - exceptions not raised in always eager mode.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-10-09 13:51:15-05:00,18000,2018-10-09 13:51:15-05:00,18000,True,False,"['api.py', 'test_queue.py']",['11190ca41ec3bfa172fada1bd456160ef882e814'],1,12,13,2,0.5714285714285714,0.5714285714285714,1.0
b240b7f42f754444dc4d11f7d6a4e1a29ccf844c,1.10.3,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-10-09 13:51:41-05:00,18000,2018-10-09 13:51:41-05:00,18000,True,False,['__init__.py'],['f7c5b1d72b13896bc8e660c6931743426496ecd5'],1,1,2,1,,,
02becc046ed2c99d42bc84d22433da92f3445721,Changelog notes.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-10-09 13:53:24-05:00,18000,2018-10-09 13:53:24-05:00,18000,True,False,['CHANGELOG.md'],['b240b7f42f754444dc4d11f7d6a4e1a29ccf844c'],1,8,9,1,,,
4643f100b24e5cbcc229ccb9382dd5322ac07d5b,"Missing import, unused import.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-10-10 09:10:14-05:00,18000,2018-10-10 09:10:14-05:00,18000,True,False,"['sqlitedb.py', 'test_queue.py']",['02becc046ed2c99d42bc84d22433da92f3445721'],1,1,2,2,,,
4f2e3a45c73f4ab09b7363c1eaa1b92b52eeba4e,"Log task execution. Replaces #367

Logs the time taken to execute a task successfully on the default
loglevel. Removes debugging duration logging.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-10-10 16:08:37-05:00,18000,2018-10-10 16:08:37-05:00,18000,True,False,"['consumer.py', 'test_consumer.py', 'test_sqlite.py']",['4643f100b24e5cbcc229ccb9382dd5322ac07d5b'],4,6,10,3,0.5,1.0,1.0
36d234c91bc96325144929488d29e2150fb83458,Changelog notes and link fix.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-10-10 16:11:16-05:00,18000,2018-10-10 16:11:16-05:00,18000,True,False,['CHANGELOG.md'],['4f2e3a45c73f4ab09b7363c1eaa1b92b52eeba4e'],1,3,4,1,,,
73feb789d011923861aa55036a3b44a4be09811f,"Run simpledb tests, fix race condition in sqlite assertions",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-10-10 23:29:33-05:00,18000,2018-10-10 23:29:33-05:00,18000,True,False,"['__init__.py', 'test_simple.py', 'test_sqlite.py']",['36d234c91bc96325144929488d29e2150fb83458'],9,31,40,3,0.5,0.0,1.0
2da433fb8d3b5d3f886e310e016d258342e70ca8,Add duration to minihuey logs,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-10-11 08:44:45-05:00,18000,2018-10-11 08:44:45-05:00,18000,True,False,['minimal.py'],['73feb789d011923861aa55036a3b44a4be09811f'],1,4,5,1,1.0,1.0,0.0
000be5ca574ddae449571580ac6f98e9f72bbe85,Easier overrides for built-in RedisStorage.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-10-12 10:43:09-05:00,18000,2018-10-12 10:43:09-05:00,18000,True,False,['storage.py'],['2da433fb8d3b5d3f886e310e016d258342e70ca8'],6,9,15,1,,,
5fc602999e2b5f9f23f0731e1104bdd3e11e6403,1.10.4,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-11-14 09:03:06-06:00,21600,2018-11-14 09:03:06-06:00,21600,True,False,"['CHANGELOG.md', '__init__.py']",['000be5ca574ddae449571580ac6f98e9f72bbe85'],2,11,13,2,,,
245dd9808762b230bab00dc0b9e007b32440fac0,redis-py 3.0 compatibility fix.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-11-19 15:18:36-06:00,21600,2018-11-19 15:18:36-06:00,21600,True,False,['storage.py'],['5fc602999e2b5f9f23f0731e1104bdd3e11e6403'],2,5,7,1,,,
b978e790ce4e3af9b5c7e81261135e1e634576fa,"Notes on consumer restart + SIGHUP + file descriptors.

Refs #374

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-11-19 19:22:54-06:00,21600,2018-11-19 19:22:54-06:00,21600,True,False,['consumer.rst'],['245dd9808762b230bab00dc0b9e007b32440fac0'],0,9,9,1,,,
9434740beb373df9a7a3602fd679eb02ce3c1a4c,"Import hooks into djhuey namespace.

Replaces #376",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-11-24 16:01:48-06:00,21600,2018-11-24 16:01:48-06:00,21600,True,False,['__init__.py'],['b978e790ce4e3af9b5c7e81261135e1e634576fa'],0,8,8,1,,,
d8b9d37a5ee8e8fe51395ea90c94e47dbe4d328d,Less verbose output for the simple consumer.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-12-11 09:00:37-06:00,21600,2018-12-11 09:00:37-06:00,21600,True,False,"['config.py', 'cons.sh']",['9434740beb373df9a7a3602fd679eb02ce3c1a4c'],2,2,4,2,,,
a981bb24d25d8e9ce90cb63e270309b441e8be85,Explicitly specify redis-py >= 3.0.0 as dependency.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-12-19 09:47:17-06:00,21600,2018-12-19 09:47:17-06:00,21600,True,False,['setup.py'],['d8b9d37a5ee8e8fe51395ea90c94e47dbe4d328d'],2,2,4,1,,,
b09aa10a2b3b3118b115b2514efba7553d68a842,1.10.5,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2018-12-19 09:49:35-06:00,21600,2018-12-19 09:49:35-06:00,21600,True,False,"['CHANGELOG.md', '__init__.py']",['a981bb24d25d8e9ce90cb63e270309b441e8be85'],2,10,12,2,,,
fd90bdf85e0ee3fac83b16515b3cf267942f5a0b,Start factoring out and cleaning up task execution.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-01-10 18:01:29-06:00,21600,2019-01-10 18:01:29-06:00,21600,True,False,"['api.py', 'consumer.py', 'events.py']",['b09aa10a2b3b3118b115b2514efba7553d68a842'],34,25,59,3,0.0,0.0,0.0
533c681519f10b4e354e567b6d8790f07f8d8a4d,Small task metadata internal API cleanups.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-01-11 10:50:12-06:00,21600,2019-01-11 10:50:12-06:00,21600,True,False,['api.py'],['fd90bdf85e0ee3fac83b16515b3cf267942f5a0b'],22,15,37,1,0.0,0.0,1.0
240022f64349b4ef16d4124411ae378b204060d9,Fix SyntaxWarning due to unescaped sequence,xtreak,tir.karthi@gmail.com,xtreak,tir.karthi@gmail.com,2019-01-18 10:57:41+00:00,0,2019-01-18 10:57:41+00:00,0,True,False,['api.py'],['533c681519f10b4e354e567b6d8790f07f8d8a4d'],2,2,4,1,,,
78856b07936efc80d56b1b1ac147f268de46d6ed,"Backwards-incompatible task name generation and serialization.

**NOTE**: backwards-incompatible. When upgrading, you should ensure all
tasks (including scheduled tasks) are consumed before switching to this
version.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-01-20 15:31:35-06:00,21600,2019-01-20 15:31:35-06:00,21600,True,False,"['api.py', 'registry.py', 'test_queue.py', 'test_registry.py']",['e1aa366612dfd64055b0a821467ac200206aa03f'],14,20,34,4,1.0,1.0,1.0
af2750c6167f21a8cf096c882755a0522729eb5a,"Changelog notes for latest change.

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-01-20 15:38:55-06:00,21600,2019-01-20 15:38:55-06:00,21600,True,False,['CHANGELOG.md'],['78856b07936efc80d56b1b1ac147f268de46d6ed'],0,17,17,1,,,
7ce118aae904d0ee941b376d5fe3bc248e6d82d8,Test new task-naming with user-defined task name.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-01-20 15:44:02-06:00,21600,2019-01-20 15:44:02-06:00,21600,True,False,['test_registry.py'],['af2750c6167f21a8cf096c882755a0522729eb5a'],0,7,7,1,1.0,1.0,1.0
7b4fc3eea819d5417f510b7ec2bf116b26fafbe9,"Change always_eager mode to return a special TaskResultWrapper.

This change unifies the APIs used to get the return value of a task.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-01-27 10:33:09-06:00,21600,2019-01-27 10:33:09-06:00,21600,True,False,"['CHANGELOG.md', 'api.py', 'test_queue.py']",['7ce118aae904d0ee941b376d5fe3bc248e6d82d8'],4,45,49,3,0.8571428571428571,0.8571428571428571,0.7142857142857143
9408eb9215d33ffaf47d7ebcca19e89ff00a1073,"Convert log to info.

Fixes #390",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-02-06 09:20:26-06:00,21600,2019-02-06 09:20:26-06:00,21600,True,False,['consumer.py'],['7b4fc3eea819d5417f510b7ec2bf116b26fafbe9'],1,1,2,1,,,
db68a555080270ff4195ccd861542e7a4164cc6e,"Allow specifying worker/scheduler implementations on Consumer subclasses.

Simplifies overrides. Fixes #391.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-02-11 13:18:22-06:00,21600,2019-02-11 13:18:22-06:00,21600,True,False,['consumer.py'],['9408eb9215d33ffaf47d7ebcca19e89ff00a1073'],2,7,9,1,,,
1c39de87b4f8553c6c1d9e6b722a8194c7ba5f1e,"Docs update, refs #394",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-02-16 11:09:20-06:00,21600,2019-02-16 11:09:20-06:00,21600,True,False,"['api.rst', 'getting-started.rst']",['db68a555080270ff4195ccd861542e7a4164cc6e'],0,11,11,2,,,
4d2f1e0c20750dbf2a2e7d8abd653affa24cd813,"Add docs for the put() and get() result-store methods.

Refs #394

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-02-16 11:20:18-06:00,21600,2019-02-16 11:20:18-06:00,21600,True,False,"['api.rst', 'getting-started.rst']",['1c39de87b4f8553c6c1d9e6b722a8194c7ba5f1e'],2,34,36,2,,,
eda3de7402437a6a73223d2439e1c9f9299fb1f0,1.11.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-02-16 15:29:11-06:00,21600,2019-02-16 15:29:11-06:00,21600,True,False,"['CHANGELOG.md', '__init__.py']",['4d2f1e0c20750dbf2a2e7d8abd653affa24cd813'],4,9,13,2,,,
443b2f91cd0cbd6411e53fbcf7fb94e7cbfbfadf,Add `task_id` property to task result wrapper.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-03 21:01:32-06:00,21600,2019-03-03 21:01:32-06:00,21600,True,False,"['api.rst', 'api.py', 'test_queue.py']",['eda3de7402437a6a73223d2439e1c9f9299fb1f0'],0,15,15,3,1.0,1.0,1.0
d1bb73794d4dd8f7d1a01baf609ea5a6acfd91c8,"Update changelog

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-03 21:05:08-06:00,21600,2019-03-03 21:05:08-06:00,21600,True,False,['CHANGELOG.md'],['443b2f91cd0cbd6411e53fbcf7fb94e7cbfbfadf'],0,3,3,1,,,
152b7a47a9ac34f69f7fa44f11a7f7a994ad9387,fix crontab import,Vitor de Miranda Henrique,vitormhenrique@gmail.com,GitHub,noreply@github.com,2019-03-12 13:00:31-05:00,18000,2019-03-12 13:00:31-05:00,18000,True,False,['tasks.py'],['d1bb73794d4dd8f7d1a01baf609ea5a6acfd91c8'],1,2,3,1,,,
0ae1937afae4d5de8f9c9dfe1415f483ff418d2d,h2 initial commit.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-12 16:10:51-05:00,18000,2019-03-12 16:10:51-05:00,18000,True,False,"['api.py', 'constants.py', 'exceptions.py', 'registry.py', 'serializer.py', 'storage.py', 'utils.py']",['c86d1f19371521e866ac85b4195726706b9c7d9c'],0,1316,1316,7,0.7648648648648648,0.7554054054054054,0.5391891891891892
c6370ec4170dc4c4e2cf68f999092755e333efc9,Implement simple execute() method.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-12 16:23:35-05:00,18000,2019-03-12 16:23:35-05:00,18000,True,False,['api.py'],['0ae1937afae4d5de8f9c9dfe1415f483ff418d2d'],12,16,28,1,0.0,0.0,1.0
07cbff1991200f34d23922f148dadbea0607c77e,"Consolidate logic for task execution, result handling, etc.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-12 23:25:18-05:00,18000,2019-03-12 23:25:18-05:00,18000,True,False,"['api.py', 'exceptions.py', 'storage.py', 'utils.py']",['c6370ec4170dc4c4e2cf68f999092755e333efc9'],47,212,259,4,0.6592592592592592,0.7777777777777778,0.34074074074074073
f05672f1e0efdd48d0a983ad34946af3ecf3e531,Start tests for h2.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-13 10:00:09-05:00,18000,2019-03-13 10:00:09-05:00,18000,True,False,"['api.py', 'registry.py', 'serializer.py', 'storage.py', '__init__.py', '__main__.py', 'base.py', 'test_api.py', 'utils.py']",['07cbff1991200f34d23922f148dadbea0607c77e'],23,143,166,9,1.0,1.0,1.0
071eab6f9632b0a7d27fbdbbb4f7adee54c6b53b,Add missing init for h2 package.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-13 10:01:54-05:00,18000,2019-03-13 10:01:54-05:00,18000,True,False,['__init__.py'],['f05672f1e0efdd48d0a983ad34946af3ecf3e531'],0,0,0,1,,,
09c6db8a4196932d95c716beae5f1bb54b4061ff,Tests for APIs and task handling.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-13 14:36:24-05:00,18000,2019-03-13 14:36:24-05:00,18000,True,False,"['api.py', 'registry.py', 'base.py', 'test_api.py', 'utils.py']",['071eab6f9632b0a7d27fbdbbb4f7adee54c6b53b'],26,628,654,5,0.4043956043956044,0.9736263736263736,0.9516483516483516
1e4dacbcc6f56c8d25c3e0277b54297775b96502,Test registry,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-14 07:23:35-05:00,18000,2019-03-14 07:23:35-05:00,18000,True,False,"['__init__.py', 'base.py', 'test_api.py', 'test_registry.py']",['09c6db8a4196932d95c716beae5f1bb54b4061ff'],12,20,32,4,1.0,1.0,1.0
89b121e3fe91a746449639d2ee50ae5e3d13d0f2,Add tests for storage layer.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-14 10:18:29-05:00,18000,2019-03-14 10:18:29-05:00,18000,True,False,"['api.py', 'registry.py', 'storage.py', '__init__.py', 'base.py', 'test_registry.py', 'test_storage.py']",['1e4dacbcc6f56c8d25c3e0277b54297775b96502'],6,209,215,7,0.5441176470588235,0.8382352941176471,0.9852941176470589
4bb5d7c9a5148afd26beb4bf1db985df955c31df,"Test storage and utils, start consumer work.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-14 12:01:36-05:00,18000,2019-03-14 12:01:36-05:00,18000,True,False,"['consumer.py', '__init__.py', 'test_storage.py', 'test_utils.py']",['89b121e3fe91a746449639d2ee50ae5e3d13d0f2'],3,712,715,4,0.5211864406779662,0.6483050847457628,0.576271186440678
cf5b823df98cf6825ec483539d4626612c505a33,Huge consumer cleanup.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-14 14:49:12-05:00,18000,2019-03-14 14:49:12-05:00,18000,True,False,"['api.py', 'consumer.py', 'storage.py']",['4bb5d7c9a5148afd26beb4bf1db985df955c31df'],220,47,267,3,0.5986394557823129,0.6122448979591837,0.7482993197278912
a7884514982162922b645924cb2c796f7a59f7d1,Consumer options copy/paste.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-14 16:35:05-05:00,18000,2019-03-14 16:35:05-05:00,18000,True,False,"['consumer.py', 'consumer_options.py']",['cf5b823df98cf6825ec483539d4626612c505a33'],9,168,177,2,0.4,1.0,0.9636363636363636
b730f2fa151df2d006af50bc9ea75e5289865cb3,More tweaks and fixes.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-14 18:09:58-05:00,18000,2019-03-14 18:09:58-05:00,18000,True,False,"['__init__.py', 'api.py', '__init__.py', 'huey_consumer.py', 'consumer.py', 'consumer_options.py']",['a7884514982162922b645924cb2c796f7a59f7d1'],10,79,89,6,0.53125,1.0,1.0
abaa6d412be04ab0afe534c133361e0eb7d86c23,"Fix retry handling for periodic tasks, many more tests.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-14 23:04:04-05:00,18000,2019-03-14 23:04:04-05:00,18000,True,False,"['api.py', '__init__.py', 'base.py', 'test_api.py', 'test_crontab.py']",['b730f2fa151df2d006af50bc9ea75e5289865cb3'],39,371,410,5,0.6735537190082644,1.0,0.9586776859504132
26564df017868d562483b13486b6f0ede39a87ed,Sqlite and consumer integration tests for storage engines.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-14 23:36:24-05:00,18000,2019-03-14 23:36:24-05:00,18000,True,False,"['__init__.py', 'sqlitedb.py', 'base.py', 'test_storage.py']",['abaa6d412be04ab0afe534c133361e0eb7d86c23'],1,231,232,4,0.8707482993197279,1.0,0.8367346938775511
c7900b44c2e9cfd2c3d0d6f113b343aeca42c245,"Additional improvements, add SqliteHuey to main module exports.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-14 23:44:37-05:00,18000,2019-03-14 23:44:37-05:00,18000,True,False,"['__init__.py', 'api.py', 'sqlitedb.py', 'test_api.py']",['26564df017868d562483b13486b6f0ede39a87ed'],6,23,29,4,1.0,1.0,1.0
12ce870b2127adb12482fca931a959ecda5a1bd5,Add MiniHuey module from main source.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-14 23:45:50-05:00,18000,2019-03-14 23:45:50-05:00,18000,True,False,['minimal.py'],['c7900b44c2e9cfd2c3d0d6f113b343aeca42c245'],0,124,124,1,0.7472527472527473,0.7472527472527473,0.5824175824175825
3634e9260b734d5504b92d8bc16d83453d80fb40,Periodic task tests. Start consumer tests.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-14 23:56:22-05:00,18000,2019-03-14 23:56:22-05:00,18000,True,False,"['__init__.py', 'test_api.py', 'test_consumer.py']",['12ce870b2127adb12482fca931a959ecda5a1bd5'],0,34,34,3,0.38461538461538464,1.0,0.8461538461538461
3c5b698dd825897ca66a2af2dfda9ed6c89ad24f,Move into huey package.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-14 23:59:29-05:00,18000,2019-03-14 23:59:29-05:00,18000,True,False,"['__init__.py', 'api.py', '__init__.py', 'huey_consumer.py', 'constants.py', 'consumer.py', 'consumer_options.py', '__init__.py', 'minimal.py', 'sqlitedb.py', 'exceptions.py', 'registry.py', 'storage.py', '__init__.py', '__main__.py', 'base.py', 'test_consumer.py', 'test_crontab.py', 'test_registry.py', 'test_storage.py', 'test_utils.py', 'utils.py', '__init__.py', 'api.py', 'huey_consumer.py', 'consumer.py', 'consumer_options.py', '__init__.py', 'run_huey.py', 'minimal.py', 'simple_storage.py', 'sqlitedb.py', 'events.py', 'exceptions.py', 'registry.py', 'serializer.py', 'storage.py', '__init__.py', '__main__.py', 'base.py', 'test_api.py', 'test_consumer.py', 'test_crontab.py', 'test_hooks.py', 'test_pipeline.py', 'test_queue.py', 'test_registry.py', 'test_simple.py', 'test_sqlite.py', 'test_storage.py', 'test_utils.py', 'test_wrapper.py', 'utils.py', 'wrapper.py']",['3634e9260b734d5504b92d8bc16d83453d80fb40'],6343,992,7335,54,0.35045129162776223,0.1419234360410831,0.23467164643635233
27ab993f0d7ac34a659669cf45225835b5b69f7f,Rename imports.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-15 00:00:52-05:00,18000,2019-03-15 00:00:52-05:00,18000,True,False,"['__init__.py', 'api.py', 'huey_consumer.py', 'consumer.py', '__init__.py', 'run_huey.py', 'minimal.py', 'sqlitedb.py', 'registry.py', 'serializer.py', 'storage.py', '__init__.py', '__main__.py', 'base.py', 'test_api.py', 'test_consumer.py', 'test_crontab.py', 'test_registry.py', 'test_storage.py', 'test_utils.py']",['3c5b698dd825897ca66a2af2dfda9ed6c89ad24f'],74,74,148,20,,,
e0095dbd1e01e5b6186dafe39e393fe408da0c15,Modify sqlite storage to always return bytes internally.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-15 09:10:36-05:00,18000,2019-03-15 09:10:36-05:00,18000,True,False,['sqlitedb.py'],['27ab993f0d7ac34a659669cf45225835b5b69f7f'],3,10,13,1,1.0,1.0,1.0
ea76afb7fba37aa02de59790ccea4db2cf5b307e,More integration tests for consumer.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-15 10:22:45-05:00,18000,2019-03-15 10:22:45-05:00,18000,True,False,"['base.py', 'test_consumer.py', 'test_storage.py']",['e0095dbd1e01e5b6186dafe39e393fe408da0c15'],10,91,101,3,0.7692307692307693,1.0,0.7884615384615384
d1a9009965a4c0bacbb56a570d1e675fc12a8db3,"More simplification, additional consumer test.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-15 11:45:23-05:00,18000,2019-03-15 11:45:23-05:00,18000,True,False,"['consumer.py', 'test_consumer.py']",['ea76afb7fba37aa02de59790ccea4db2cf5b307e'],12,33,45,2,0.0,1.0,0.95
499b295d83caf138c50164df1d7032a0308319a4,Small logging tweaks.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-15 16:58:52-05:00,18000,2019-03-15 16:58:52-05:00,18000,True,False,"['api.py', 'consumer.py']",['d1a9009965a4c0bacbb56a570d1e675fc12a8db3'],2,9,11,2,0.0,0.7142857142857143,0.5714285714285714
976a6cace8b343800118550e4ee2d0d202b5280f,Add blackhole storage,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-15 23:21:55-05:00,18000,2019-03-15 23:21:55-05:00,18000,True,False,['storage.py'],['499b295d83caf138c50164df1d7032a0308319a4'],0,21,21,1,,,
0354d74282463b7b748ba6b8cc2ee14f1ead3d98,"Use ""immediate"" instead of ""always_eager"".",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-17 10:37:33-05:00,18000,2019-03-17 10:37:33-05:00,18000,True,False,"['api.py', 'consumer.py', '__init__.py']",['976a6cace8b343800118550e4ee2d0d202b5280f'],12,17,29,3,0.0,1.0,0.0
8bb192167ef52b9da74c1e0e99b88fc8d21dea60,"Cleanups, reorg.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-17 10:50:12-05:00,18000,2019-03-17 10:50:12-05:00,18000,True,False,"['__init__.py', 'api.py', 'storage.py', 'base.py', 'test_storage.py']",['0354d74282463b7b748ba6b8cc2ee14f1ead3d98'],34,39,73,5,1.0,1.0,1.0
fed487a366dfb3c97dbc877e719f5382e95f1a8f,Scaffolding for supporting immediate-mode.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-17 11:05:20-05:00,18000,2019-03-17 11:05:20-05:00,18000,True,False,['api.py'],['8bb192167ef52b9da74c1e0e99b88fc8d21dea60'],3,35,38,1,0.8125,1.0,0.8125
5c2b6bc089bcb737c2a9638464f479c61fe1e8ee,Add support for immediate mode when enqueueing tasks.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-17 11:06:42-05:00,18000,2019-03-17 11:06:42-05:00,18000,True,False,['api.py'],['fed487a366dfb3c97dbc877e719f5382e95f1a8f'],0,4,4,1,0.0,1.0,1.0
7ab8cde8aca7aab49a0b5ff5e65c2e732f62d92f,Add tests for immediate-mode.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-17 11:26:45-05:00,18000,2019-03-17 11:26:45-05:00,18000,True,False,"['__init__.py', 'test_immediate.py']",['5c2b6bc089bcb737c2a9638464f479c61fe1e8ee'],0,81,81,2,0.6964285714285714,1.0,1.0
e6066380a4ea1e9fd008445895bbb996f55d8cd9,Add test for multiple hueys decorating same task.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-17 11:33:43-05:00,18000,2019-03-17 11:33:43-05:00,18000,True,False,['test_api.py'],['7ab8cde8aca7aab49a0b5ff5e65c2e732f62d92f'],0,25,25,1,0.1111111111111111,1.0,1.0
b6d3b3aefac80ab858631e6350fe15896ac5c5c6,"Small tweak, add todos",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-17 13:05:08-05:00,18000,2019-03-17 13:05:08-05:00,18000,True,False,"['TODO', 'consumer.py']",['e6066380a4ea1e9fd008445895bbb996f55d8cd9'],1,9,10,2,,,
02132c5aafa0a00ae75b1078150d1cffe0660e68,"Support pipelines w/immediate mode, ResultGroup.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-17 13:28:16-05:00,18000,2019-03-17 13:28:16-05:00,18000,True,False,"['api.py', 'test_immediate.py']",['b6d3b3aefac80ab858631e6350fe15896ac5c5c6'],2,49,51,2,0.7567567567567568,0.32432432432432434,0.9459459459459459
38b849b9c70329a67d1079cf63e90c3ee659ea9b,"Remove dep on peewee for sqlite storage, promote from contrib.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-17 22:33:58-05:00,18000,2019-03-17 22:33:58-05:00,18000,True,False,"['TODO', '__init__.py', 'api.py', 'sqlitedb.py', 'storage.py', 'test_storage.py']",['02132c5aafa0a00ae75b1078150d1cffe0660e68'],203,240,443,6,1.0,0.7543859649122807,0.6666666666666666
be3721a1ab93b56156c4b9cbc56a219d92303957,Use graceful=True in consumer integration tests.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-17 22:39:14-05:00,18000,2019-03-17 22:39:14-05:00,18000,True,False,"['TODO', 'base.py']",['38b849b9c70329a67d1079cf63e90c3ee659ea9b'],4,1,5,2,0.0,0.0,0.0
35d8a99cc784ff71a81d861b95fa2295f16afeb5,Stub out possible implementation for signal-sending code.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-17 22:49:56-05:00,18000,2019-03-17 22:49:56-05:00,18000,True,False,['signals.py'],['be3721a1ab93b56156c4b9cbc56a219d92303957'],0,68,68,1,1.0,0.696969696969697,0.3939393939393939
bc6ae6899a1182c71b6b55fcdae84b6461d92130,"Signal code and tests, new crontab helper, etc.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 11:50:05-05:00,18000,2019-03-18 11:50:05-05:00,18000,True,False,"['__init__.py', 'api.py', 'signals.py', 'storage.py', '__init__.py', 'test_crontab.py', 'test_signals.py', 'test_storage.py']",['35d8a99cc784ff71a81d861b95fa2295f16afeb5'],72,397,469,8,0.38132295719844356,0.9027237354085603,0.8638132295719845
2c64f4ea303c4f2e017d96e9da6f60cc71f887fe,Use a lock for certain memorystorage operations.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 13:48:49-05:00,18000,2019-03-18 13:48:49-05:00,18000,True,False,['storage.py'],['bc6ae6899a1182c71b6b55fcdae84b6461d92130'],10,13,23,1,1.0,1.0,0.6666666666666666
f1bae289c788e62a6a295ddc0813ba11323cd8b8,"Fixes to revoke behavior, python 2 compatibility, misc.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 15:49:26-05:00,18000,2019-03-18 15:49:26-05:00,18000,True,False,"['TODO', 'cons.sh', 'tasks.py', 'api.py', '__init__.py', 'storage.py', 'base.py', 'test_api.py', 'test_immediate.py', 'test_storage.py', 'utils.py']",['2c64f4ea303c4f2e017d96e9da6f60cc71f887fe'],29,72,101,11,0.48,1.0,0.88
e09becd9c0ffa270b62439cafbeecb533db4eca1,Use verbose flag.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 15:57:42-05:00,18000,2019-03-18 15:57:42-05:00,18000,True,False,['cons.sh'],['f1bae289c788e62a6a295ddc0813ba11323cd8b8'],1,1,2,1,,,
f8cb4367973e0aab35a44c13c2896d17483b4588,Try to clean-up logging output.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 16:15:23-05:00,18000,2019-03-18 16:15:23-05:00,18000,True,False,"['cons.sh', 'api.py', 'consumer.py']",['e09becd9c0ffa270b62439cafbeecb533db4eca1'],6,6,12,3,,,1.0
dcd256fe7b6172ad8faff9d6e9be454958f31589,Try to organize log levels to better tailor chattiness.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 16:21:44-05:00,18000,2019-03-18 16:21:44-05:00,18000,True,False,"['api.py', 'consumer.py', 'consumer_options.py']",['f8cb4367973e0aab35a44c13c2896d17483b4588'],7,7,14,3,,,
491d3fb8780094473a95ecd2ded6c517e5246c2d,"Add option for simple log format, cleanup option code.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 21:51:23-05:00,18000,2019-03-18 21:51:23-05:00,18000,True,False,['consumer_options.py'],['dcd256fe7b6172ad8faff9d6e9be454958f31589'],6,12,18,1,0.4,1.0,1.0
43ab16a0696e79fa17604194f156bab1f473742a,Consolidate some example code.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 21:51:40-05:00,18000,2019-03-18 21:51:40-05:00,18000,True,False,"['cons.sh', 'main.py', 'tasks.py']",['491d3fb8780094473a95ecd2ded6c517e5246c2d'],26,48,74,3,1.0,1.0,1.0
1bbeefd21e3c860c1ec8fc020c37eafbe6cdaf35,"Update django example, verify it is working.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 22:02:05-05:00,18000,2019-03-18 22:02:05-05:00,18000,True,False,"['README', 'settings.py', 'tasks.py']",['43ab16a0696e79fa17604194f156bab1f473742a'],21,50,71,3,1.0,1.0,1.0
fe2f5ed3f940f8f58bfecce750b1840bbe68c03b,Unify return values when initialized with results=False.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 22:27:02-05:00,18000,2019-03-18 22:27:02-05:00,18000,True,False,"['api.py', 'exceptions.py', 'registry.py', 'test_api.py', 'test_registry.py']",['1bbeefd21e3c860c1ec8fc020c37eafbe6cdaf35'],62,88,150,5,0.16129032258064516,0.967741935483871,1.0
47369e6b31484ec64e805a80243e5c4bcf3fec78,Use exclusive lock for sqlite transactions.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 22:36:27-05:00,18000,2019-03-18 22:36:27-05:00,18000,True,False,"['storage.py', 'base.py']",['fe2f5ed3f940f8f58bfecce750b1840bbe68c03b'],2,2,4,2,,,
62e6cf5007a5545b3fc15fadc159165a1428aeb1,Update README.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 22:47:52-05:00,18000,2019-03-18 22:47:52-05:00,18000,True,False,['README.rst'],['47369e6b31484ec64e805a80243e5c4bcf3fec78'],22,16,38,1,,,
4db728abf12973f9a46a62674bb686d35bf27a1f,Cleanups / doc notes / deps.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-18 23:00:46-05:00,18000,2019-03-18 23:00:46-05:00,18000,True,False,"['README.rst', 'index.rst', 'setup.py']",['62e6cf5007a5545b3fc15fadc159165a1428aeb1'],7,12,19,3,,,
8b4685d73fb1ac31a60779a51295b24fab221e69,Improve test runner.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-19 09:55:52-05:00,18000,2019-03-19 09:55:52-05:00,18000,True,False,['runtests.py'],['4db728abf12973f9a46a62674bb686d35bf27a1f'],17,24,41,1,1.0,1.0,1.0
aad53dd1f65a30f634495d728abc70eec359f25a,Add consumer config tests.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-19 09:55:56-05:00,18000,2019-03-19 09:55:56-05:00,18000,True,False,['test_consumer.py'],['8b4685d73fb1ac31a60779a51295b24fab221e69'],0,40,40,1,1.0,1.0,1.0
11f937b8da609f546f804331baff2a48ba16ccd8,Revoking single task instances defaults to revoke-once.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-19 22:10:12-05:00,18000,2019-03-19 22:10:12-05:00,18000,True,False,"['api.py', 'registry.py', 'test_api.py', 'test_registry.py']",['aad53dd1f65a30f634495d728abc70eec359f25a'],7,65,72,4,0.35555555555555557,1.0,1.0
6074545a8f41cafa2637101966bc7e0329a55c08,Start changes doc.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-19 22:34:32-05:00,18000,2019-03-19 22:34:32-05:00,18000,True,False,['CHANGELOG.md'],['11f937b8da609f546f804331baff2a48ba16ccd8'],4,35,39,1,,,
b2811cc5a4c64648283b49aa8dec25b4153ab7d7,Simplify date format for simple logger.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-20 22:04:25-05:00,18000,2019-03-20 22:04:25-05:00,18000,True,False,['consumer_options.py'],['6074545a8f41cafa2637101966bc7e0329a55c08'],1,3,4,1,0.0,1.0,1.0
4ca2f30cd4fbe0996c9edecd41b2901cf547f1f0,Make raising RetryTask do retry regardless of task.retries.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-24 13:44:05-05:00,18000,2019-03-24 13:44:05-05:00,18000,True,False,"['api.py', 'test_api.py']",['b2811cc5a4c64648283b49aa8dec25b4153ab7d7'],5,27,32,2,1.0,1.0,1.0
0e7587a462c5ae1ed5807d73b134a3cc30c029cf,Add additional assertions for RetryTask behavior.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-24 21:18:03-05:00,18000,2019-03-24 21:18:03-05:00,18000,True,False,['test_api.py'],['4ca2f30cd4fbe0996c9edecd41b2901cf547f1f0'],0,20,20,1,0.0,1.0,1.0
e20c45d8fe692b82000b5f24a0ea71503752c7bb,More sensible behavior.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-24 21:19:48-05:00,18000,2019-03-24 21:19:48-05:00,18000,True,False,"['api.py', 'test_api.py']",['0e7587a462c5ae1ed5807d73b134a3cc30c029cf'],3,2,5,2,1.0,1.0,1.0
1beb7f6a856a30471c36825c9283689da2d8751a,Start rewriting docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-24 22:02:57-05:00,18000,2019-03-24 22:02:57-05:00,18000,True,False,"['index.rst', 'quickstart.rst']",['e20c45d8fe692b82000b5f24a0ea71503752c7bb'],1,495,496,2,,,
e556e2d9ec4a5cdc0e8ea032d44bd71ca0f1975c,Use blocking redis by default.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-25 13:40:35-05:00,18000,2019-03-25 13:40:35-05:00,18000,True,False,"['api.py', 'storage.py']",['1beb7f6a856a30471c36825c9283689da2d8751a'],2,2,4,2,,,
53a01c932ec0454bde1e530d98c01c97dcb68633,Docs updates,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-25 13:40:41-05:00,18000,2019-03-25 13:40:41-05:00,18000,True,False,"['consumer.rst', 'imports.rst', 'index.rst', 'installation.rst', 'quickstart.rst', 'simple.rst', 'troubleshooting.rst']",['e556e2d9ec4a5cdc0e8ea032d44bd71ca0f1975c'],208,149,357,7,,,
2d42f8484ecedaf58d2009777930fb405a1c739e,"Update docs, rename mini module.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-25 21:16:29-05:00,18000,2019-03-25 21:16:48-05:00,18000,True,False,"['mini.rst', 'mini.py']",['53a01c932ec0454bde1e530d98c01c97dcb68633'],36,95,131,2,,,
f665be05310d179ebd0c3bcef035dc7cd074bc65,"Rename events -> signals, start doc.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-25 21:21:32-05:00,18000,2019-03-25 21:21:32-05:00,18000,True,False,"['index.rst', 'signals.rst']",['2d42f8484ecedaf58d2009777930fb405a1c739e'],5,7,12,2,,,
20155275eafed9d786d6a2cfd7c45fa8b9a9a3dc,Add closing_task() decorator/helper.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-25 22:47:10-05:00,18000,2019-03-25 22:47:10-05:00,18000,True,False,"['api.py', 'test_api.py']",['f665be05310d179ebd0c3bcef035dc7cd074bc65'],0,43,43,2,0.6304347826086957,1.0,0.9130434782608695
acdc7b84e1e573042042a87d1cfd1552c26529df,More docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-25 23:12:42-05:00,18000,2019-03-25 23:12:42-05:00,18000,True,False,"['index.rst', 'quickstart.rst', 'shared_resources.rst']",['20155275eafed9d786d6a2cfd7c45fa8b9a9a3dc'],1,126,127,3,,,
ed1dd402b5199742b35af0b03f7e77dd91ad9d47,Tweaking signals,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-26 09:37:20-05:00,18000,2019-03-26 09:37:20-05:00,18000,True,False,"['api.py', 'signals.py', 'test_signals.py']",['acdc7b84e1e573042042a87d1cfd1552c26529df'],24,54,78,3,0.2962962962962963,1.0,0.8888888888888888
5d97110b0804d5a91b58366a2ac7cde3eeaa8f9f,More docs updates.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-26 16:19:38-05:00,18000,2019-03-26 16:19:38-05:00,18000,True,False,"['contrib.rst', 'index.rst', 'shared_resources.rst', 'signals.rst', '__init__.py']",['ed1dd402b5199742b35af0b03f7e77dd91ad9d47'],80,219,299,5,,,
029ac34cadd04eff0d27ac87d44b301f2aad80a0,API doc start.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-26 16:34:17-05:00,18000,2019-03-26 16:34:17-05:00,18000,True,False,['api.rst'],['5d97110b0804d5a91b58366a2ac7cde3eeaa8f9f'],30,57,87,1,,,
d6910fbbcba0f4c997d98c51faa777eafa4a613e,"Docs updates, remove unused images, more tests.

Switch closing_task to ""context_task"".",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-26 21:20:13-05:00,18000,2019-03-26 21:20:13-05:00,18000,True,False,"['crontab.png', 'getting-started.rst', 'guide.rst', 'index.rst', 'intro.png', 'results.png', 'retry-delay.png', 'retry.png', 'schedule.png', 'api.py', 'test_api.py', 'test_immediate.py']",['029ac34cadd04eff0d27ac87d44b301f2aad80a0'],561,118,679,12,0.375,1.0,0.95
d497cfd3ed004447c347c35edefec352d6e93508,"Docs on immediate mode, some tips/tricks.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-26 22:26:03-05:00,18000,2019-03-26 22:26:03-05:00,18000,True,False,"['changes.rst', 'guide.rst', 'api.py']",['d6910fbbcba0f4c997d98c51faa777eafa4a613e'],5,172,177,3,1.0,1.0,1.0
320f9832f225299c944645b91d840910526c1956,tidy up shared resources doc.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-26 22:36:10-05:00,18000,2019-03-26 22:36:10-05:00,18000,True,False,['shared_resources.rst'],['d497cfd3ed004447c347c35edefec352d6e93508'],64,20,84,1,,,
cbb12add875a0c880aacd7796ffbc18580c0f28b,Remove duplicate code.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-26 22:39:15-05:00,18000,2019-03-26 22:39:15-05:00,18000,True,False,['api.py'],['320f9832f225299c944645b91d840910526c1956'],13,2,15,1,1.0,1.0,0.0
47db43a013cdc2eca679bb8e9d2d123a1e607731,"Better reschedule() implementation, more tests.

Drop the half-baked every_between() helper for now.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-26 22:51:01-05:00,18000,2019-03-26 22:51:01-05:00,18000,True,False,"['api.py', 'test_api.py', 'test_crontab.py', 'test_immediate.py']",['cbb12add875a0c880aacd7796ffbc18580c0f28b'],209,49,258,4,1.0,0.25663716814159293,0.19469026548672566
4642933e3b53ced333f147ef47e72b4637acc2ee,todo notes.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-26 22:51:52-05:00,18000,2019-03-26 22:51:52-05:00,18000,True,False,['TODO'],['47db43a013cdc2eca679bb8e9d2d123a1e607731'],2,3,5,1,,,
2ad18c5fa94a6511e6828d282b5a6c9334221008,Docs for task and periodic task.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-27 07:34:31-05:00,18000,2019-03-27 07:34:31-05:00,18000,True,False,"['api.rst', '__init__.py', 'test_api.py']",['4642933e3b53ced333f147ef47e72b4637acc2ee'],87,162,249,3,1.0,1.0,1.0
8236e34870530a62cb88579cd73dcede41bb23f1,Updates to docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-27 12:26:48-05:00,18000,2019-03-27 12:26:48-05:00,18000,True,False,"['api.rst', 'api.py', 'utils.py']",['2ad18c5fa94a6511e6828d282b5a6c9334221008'],142,169,311,3,1.0,1.0,1.0
7f27899b7f4ed31f49471de4cc698d93eb9d6534,More cleanups.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-27 15:02:23-05:00,18000,2019-03-27 15:02:23-05:00,18000,True,False,"['api.rst', 'api.py']",['8236e34870530a62cb88579cd73dcede41bb23f1'],26,27,53,2,,,
e2d9b34f19acf1908f64abfeb54a63aaa739985b,Round out updates to API docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-28 11:15:51-05:00,18000,2019-03-28 11:15:51-05:00,18000,True,False,"['api.rst', 'test_api.py']",['7f27899b7f4ed31f49471de4cc698d93eb9d6534'],235,264,499,2,0.18181818181818182,1.0,1.0
cad7df55b39f332d281fdb651b5936fbcb3efd38,More docs improvements.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-28 15:41:00-05:00,18000,2019-03-28 15:41:00-05:00,18000,True,False,"['api.rst', 'changes.rst', 'index.rst', 'api.py']",['e2d9b34f19acf1908f64abfeb54a63aaa739985b'],3,188,191,4,0.0,0.0,1.0
cf828cadb98edbcac5003242d5de2575e3a3bcc1,README updates.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-28 15:43:55-05:00,18000,2019-03-28 15:43:55-05:00,18000,True,False,['README.rst'],['cad7df55b39f332d281fdb651b5936fbcb3efd38'],37,44,81,1,,,
3afa16e4de61f99d45c4aaaab64e63be5682908e,Fix docs issues.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-28 15:50:02-05:00,18000,2019-03-28 15:50:02-05:00,18000,True,False,"['README.rst', 'api.rst', 'guide.rst', 'index.rst', 'shared_resources.rst', 'signals.rst', 'sqlite.rst', 'troubleshooting.rst']",['cf828cadb98edbcac5003242d5de2575e3a3bcc1'],45,50,95,8,,,
809efce71df482426d6a8027f08aabcf68bffb1c,Small cleanups in docs/readme for readability.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-28 16:00:28-05:00,18000,2019-03-28 16:00:28-05:00,18000,True,False,"['README.rst', 'index.rst']",['3afa16e4de61f99d45c4aaaab64e63be5682908e'],4,4,8,2,,,
ea64c42d43df63534a6a1f45006843fbd481b63c,More notes and docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-29 12:14:20-05:00,18000,2019-03-29 12:14:20-05:00,18000,True,False,"['README.rst', 'api.rst', 'changes.rst', 'guide.rst', 'index.rst', 'api.py', 'storage.py']",['809efce71df482426d6a8027f08aabcf68bffb1c'],115,154,269,7,1.0,0.0,0.0
0b512bfe144e5d3267bc5b05b7a8b172f4439b20,Fix possible 3.4 issue.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-29 12:21:35-05:00,18000,2019-03-29 12:21:35-05:00,18000,True,False,['api.py'],['ea64c42d43df63534a6a1f45006843fbd481b63c'],1,6,7,1,0.0,0.0,0.0
0b9c3fb847a0a1e05cfa34fb46626b368d1b648c,Fuck 3.4,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-29 13:05:17-05:00,18000,2019-03-29 13:05:17-05:00,18000,True,False,['.travis.yml'],['0b512bfe144e5d3267bc5b05b7a8b172f4439b20'],1,0,1,1,,,
49322fa5e3a007c27187157f264565bb7803bd95,Simplify time conversions. Fix for tz aware -> naive local.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-29 16:24:36-05:00,18000,2019-03-29 16:24:36-05:00,18000,True,False,"['test_utils.py', 'utils.py']",['0b9c3fb847a0a1e05cfa34fb46626b368d1b648c'],36,96,132,2,0.39285714285714285,0.9285714285714286,0.9285714285714286
ccb6380b5190680bece703267204b27cb9356178,Improve docs for consumer worker type.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-30 10:32:35-05:00,18000,2019-03-30 10:32:35-05:00,18000,True,False,['consumer.rst'],['49322fa5e3a007c27187157f264565bb7803bd95'],1,72,73,1,,,
4cf921817c8a8f1748e3e56970af900c575dbbc8,"Changelog

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-30 10:37:16-05:00,18000,2019-03-30 10:37:16-05:00,18000,True,False,['CHANGELOG.md'],['ccb6380b5190680bece703267204b27cb9356178'],1,2,3,1,,,
401740f88d5a1ab3ea02eb2d79cff4c474dc671e,"Add option to disable autoloading tasks w/Django.

Fixes #362",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-31 10:12:19-05:00,18000,2019-03-31 10:12:19-05:00,18000,True,False,"['django.rst', 'run_huey.py']",['4cf921817c8a8f1748e3e56970af900c575dbbc8'],1,9,10,2,0.0,0.0,0.75
4f495b2624bdfb2b396864c78a1da0ff73a3c552,"Start implementation for priority support.

Refs #401",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-03-31 17:15:45-05:00,18000,2019-03-31 17:15:45-05:00,18000,True,False,"['api.rst', 'api.py', 'storage.py', 'test_consumer.py', 'test_storage.py']",['401740f88d5a1ab3ea02eb2d79cff4c474dc671e'],112,184,296,5,1.0,1.0,0.0
5f780c773bd2a9aed17b1a7912d213f2bc3899e8,Implement user-facing APIs for task priority.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-01 10:43:16-05:00,18000,2019-04-01 10:43:16-05:00,18000,True,False,"['api.py', 'registry.py', 'test_immediate.py']",['4f495b2624bdfb2b396864c78a1da0ff73a3c552'],12,27,39,3,0.0,0.0,0.46153846153846156
72d2b5c72e1ace7474c303e64e3b7db721add701,Add tests for priority support.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-01 11:31:49-05:00,18000,2019-04-01 11:31:49-05:00,18000,True,False,"['__init__.py', 'test_priority.py']",['5f780c773bd2a9aed17b1a7912d213f2bc3899e8'],0,155,155,2,0.3783783783783784,1.0,1.0
87ec5e29bf147c0869514528dc277083add06deb,Docs for priority support.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-01 12:32:48-05:00,18000,2019-04-01 12:32:48-05:00,18000,True,False,"['api.rst', 'guide.rst', 'index.rst', '__init__.py']",['72d2b5c72e1ace7474c303e64e3b7db721add701'],3,128,131,4,,,
a6b1861aaf9034a6f4336ce5d26445ec98ff26e9,Changes docs and notes.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-01 12:40:00-05:00,18000,2019-04-01 12:40:00-05:00,18000,True,False,"['CHANGELOG.md', 'README.rst', 'changes.rst']",['87ec5e29bf147c0869514528dc277083add06deb'],0,4,4,3,,,
0438f9af6cc5d2088294352da03b4d48aea19c20,Django doc updates.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-01 14:04:48-05:00,18000,2019-04-01 14:04:48-05:00,18000,True,False,"['changes.rst', 'django.rst', '__init__.py']",['a6b1861aaf9034a6f4336ce5d26445ec98ff26e9'],17,42,59,3,,,
e091a5f9a4c23a7cfb96ac96215f04cec8177e78,todo update,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-01 14:05:18-05:00,18000,2019-04-01 14:05:18-05:00,18000,True,False,['TODO'],['0438f9af6cc5d2088294352da03b4d48aea19c20'],3,0,3,1,,,
8e0462d9a1ab55aae3b2c2b9eb8a37c62e9ce7ef,"Small typo

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-01 14:08:16-05:00,18000,2019-04-01 14:08:16-05:00,18000,True,False,['api.rst'],['e091a5f9a4c23a7cfb96ac96215f04cec8177e78'],2,2,4,1,,,
9312ef1de6e614e946a2b3055f350edc5cbeaadb,"Update logo image.

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-01 14:12:53-05:00,18000,2019-04-01 14:12:59-05:00,18000,True,False,"['README.rst', 'index.rst']",['8e0462d9a1ab55aae3b2c2b9eb8a37c62e9ce7ef'],2,2,4,2,,,
3302704c5984ae5269a580c71a651cf79222aef7,"Update re: changed import.

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-01 14:19:29-05:00,18000,2019-04-01 14:19:29-05:00,18000,True,False,['changes.rst'],['9312ef1de6e614e946a2b3055f350edc5cbeaadb'],0,2,2,1,,,
1da682c1e787d89601747ae4ab98f05c776e8395,Add link to changes / announce 2.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-01 16:30:03-05:00,18000,2019-04-01 16:30:03-05:00,18000,True,False,"['README.rst', 'index.rst']",['3302704c5984ae5269a580c71a651cf79222aef7'],6,2,8,2,,,
606511e310cf9944758cb8c6f75b3cf79d43c12b,"Need heading at top of docs.

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-01 16:31:01-05:00,18000,2019-04-01 16:31:01-05:00,18000,True,False,['index.rst'],['1da682c1e787d89601747ae4ab98f05c776e8395'],0,3,3,1,,,
63f1b968865e43cf7a3a947bce1a4fd389901e3e,"Clarify global registry change.

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-01 21:27:02-05:00,18000,2019-04-01 21:27:02-05:00,18000,True,False,['changes.rst'],['606511e310cf9944758cb8c6f75b3cf79d43c12b'],3,9,12,1,,,
2c33b77865f358269218d3430d0af094e9ed7d97,Add deprecation warning for invalid kw arguments.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-02 08:54:30-05:00,18000,2019-04-02 08:54:30-05:00,18000,True,False,['api.py'],['63f1b968865e43cf7a3a947bce1a4fd389901e3e'],0,9,9,1,0.0,0.0,0.0
a916b2121e38b2cd28435d386e1721a52c985a69,"Small docs fix.

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-02 09:00:55-05:00,18000,2019-04-02 09:00:55-05:00,18000,True,False,['guide.rst'],['2c33b77865f358269218d3430d0af094e9ed7d97'],4,4,8,1,,,
8b4ae9847deea617fdb53e7799b4ffa3a05e4f74,"Normalize changelog format.

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-02 10:02:09-05:00,18000,2019-04-02 10:02:09-05:00,18000,True,False,['CHANGELOG.md'],['a916b2121e38b2cd28435d386e1721a52c985a69'],98,63,161,1,,,
aadb3a7e54df8e339af5dc43aa2bca3910eb9d30,Add flask example to examples/ directory.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-02 10:30:15-05:00,18000,2019-04-02 10:30:15-05:00,18000,True,False,"['README.md', '__init__.py', 'app.py', 'main.py', 'run_huey.sh', 'run_webapp.sh', 'tasks.py', 'home.html', 'views.py']",['8b4ae9847deea617fdb53e7799b4ffa3a05e4f74'],0,105,105,9,1.0,1.0,1.0
47eb34234cb247cbd7498404e9a2829b1b323d64,"Add links to example code.

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-02 10:33:37-05:00,18000,2019-04-02 10:33:37-05:00,18000,True,False,"['README.rst', 'index.rst']",['aadb3a7e54df8e339af5dc43aa2bca3910eb9d30'],4,7,11,2,,,
c9a71651a0e6c6ab1e6a1daf4e0364d8dfa6df0c,"Clarify running instructions in flask example readme

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-02 10:35:33-05:00,18000,2019-04-02 10:35:45-05:00,18000,True,False,['README.md'],['47eb34234cb247cbd7498404e9a2829b1b323d64'],0,5,5,1,,,
c85fe132e5bb6d2340a41be16ede75efd039ab40,"Doc notes on implementation of redis queues.

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-02 10:45:44-05:00,18000,2019-04-02 10:45:44-05:00,18000,True,False,['api.rst'],['c9a71651a0e6c6ab1e6a1daf4e0364d8dfa6df0c'],0,14,14,1,,,
b08eadcabcbcd6feb9ef93cc17d6845c80dc7c66,Use peewee to support arbitrary SQL database storage.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-02 15:30:58-05:00,18000,2019-04-02 15:30:58-05:00,18000,True,False,"['sqlstorage.py', '__init__.py', 'test_sqlstorage.py']",['c85fe132e5bb6d2340a41be16ede75efd039ab40'],0,259,259,3,0.7443181818181818,1.0,0.8011363636363636
65b4d941f39e91353043ff2793b48503aa5450d8,Fix catching non-existent exception.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-03 10:24:14-05:00,18000,2019-04-03 10:24:14-05:00,18000,True,False,['consumer.py'],['c85fe132e5bb6d2340a41be16ede75efd039ab40'],1,1,2,1,,,
ac578878baa15a6f8729013e1f7bfc226319554b,2.0.1,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-03 10:25:31-05:00,18000,2019-04-03 10:25:31-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['65b4d941f39e91353043ff2793b48503aa5450d8'],2,8,10,2,,,
f28422108872efe865fcfd5541c851473203c067,"Remove max_errors from doc.

Fixes #406

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-03 11:08:01-05:00,18000,2019-04-03 11:08:01-05:00,18000,True,False,['django.rst'],['ac578878baa15a6f8729013e1f7bfc226319554b'],1,0,1,1,,,
f1eca03af0a5b0965be5d2eee7ecdf4c8a69c525,"Small typo and addition to change doc, re #406

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-03 11:26:50-05:00,18000,2019-04-03 11:27:04-05:00,18000,True,False,['changes.rst'],['f28422108872efe865fcfd5541c851473203c067'],2,3,5,1,,,
c04ccb670efe31b0c14b63648d205eb6aa1fac72,"Rename module to sql_huey, small cleanups.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-03 14:34:29-05:00,18000,2019-04-03 14:34:29-05:00,18000,True,False,"['sql_huey.py', 'storage.py', '__init__.py', 'test_sql_huey.py']",['b08eadcabcbcd6feb9ef93cc17d6845c80dc7c66'],38,59,97,4,0.0,1.0,1.0
e45510484339ff24bbc3f67cfebc501887166b7b,Add helpers for creating and dropping sqlhuey tables.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-03 14:46:04-05:00,18000,2019-04-03 14:46:04-05:00,18000,True,False,"['sql_huey.py', 'test_sql_huey.py']",['c04ccb670efe31b0c14b63648d205eb6aa1fac72'],3,41,44,2,0.41379310344827586,1.0,1.0
8f596cf9c2b2282da672179573720455037758ad,"Changelog note

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-03 14:50:35-05:00,18000,2019-04-03 14:50:35-05:00,18000,True,False,['CHANGELOG.md'],['4f06a5e5a7647b9902bf1f79aad677156080679c'],0,4,4,1,,,
c2244eb14829d44b0d8c9560d06608e154284fc4,Make sure peewee is installed so we can test sql_huey.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-03 14:50:55-05:00,18000,2019-04-03 14:50:55-05:00,18000,True,False,['.travis.yml'],['8f596cf9c2b2282da672179573720455037758ad'],1,1,2,1,,,
aa7b1293083c50e3a0e5f46c6474d0491b149cf3,Coerce map to list.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-03 16:22:45-05:00,18000,2019-04-03 16:22:45-05:00,18000,True,False,['sql_huey.py'],['c2244eb14829d44b0d8c9560d06608e154284fc4'],2,2,4,1,,,
716ee9cec9a306789eeff19eaed0a7580dfed2b1,Add tests for pipeline error / revocation midway.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-05 09:18:41-05:00,18000,2019-04-05 09:18:41-05:00,18000,True,False,['test_api.py'],['aa7b1293083c50e3a0e5f46c6474d0491b149cf3'],0,33,33,1,1.0,1.0,1.0
23e211e1d9b1a0b321c83d5b0373a52baa058988,"Add RedisExpireHuey, which expires results rather than pop() them.

Refs #407",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-08 10:03:45-05:00,18000,2019-04-08 10:03:45-05:00,18000,True,False,"['__init__.py', 'api.py', 'storage.py', 'test_storage.py']",['716ee9cec9a306789eeff19eaed0a7580dfed2b1'],5,177,182,4,0.5566037735849056,1.0,0.7547169811320755
0337a2535a8453dc33af48fa546a1522d0d36944,Add docs and ensure we don't expire revocation/lock keys.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-08 10:22:36-05:00,18000,2019-04-08 10:22:36-05:00,18000,True,False,"['api.rst', 'api.py', 'sql_huey.py', 'storage.py', 'test_storage.py']",['23e211e1d9b1a0b321c83d5b0373a52baa058988'],17,56,73,5,1.0,1.0,0.0
cc61f619f20c1b93ba89cf23326a4f67fe6eb6f3,"Changelog

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-08 10:26:36-05:00,18000,2019-04-08 10:26:36-05:00,18000,True,False,['CHANGELOG.md'],['0337a2535a8453dc33af48fa546a1522d0d36944'],0,5,5,1,,,
418a989a80d3b5003b5bb96efd1b0bdf00722d66,Fix typo (s/test_model/test_mode/),Mark Woodbridge,1724545+mwoodbri@users.noreply.github.com,GitHub,noreply@github.com,2019-04-09 10:23:53+01:00,-3600,2019-04-09 10:23:53+01:00,-3600,True,False,['troubleshooting.rst'],['cc61f619f20c1b93ba89cf23326a4f67fe6eb6f3'],1,1,2,1,,,
e29c89a816b71e17f7587df49509b8622a6d0412,Fix missing import for RedisExpireStorage,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-09 07:34:15-05:00,18000,2019-04-09 07:34:15-05:00,18000,True,False,['api.py'],['cc61f619f20c1b93ba89cf23326a4f67fe6eb6f3'],0,1,1,1,,,
cc50825bf9ab313233a77a2ad807f7294ac39de7,"Let's favor composition over inheritance for Huey implementations.

This patch replaces the subclass-and-override get_storage() pattern that
was ubiquitous in the code. Instead we'll just have the Huey init accept
a storage_class parameter. What were previously subclasses of Huey (e.g.
RedisHuey, SqliteHuey) are now partial applications of the Huey
constructor with the appropriate storage_class.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-09 23:16:43-05:00,18000,2019-04-09 23:24:13-05:00,18000,True,False,"['api.py', 'sql_huey.py', 'storage.py', '__init__.py', 'test_sql_huey.py', 'test_storage.py', 'test_wrappers.py']",['bd0cb24fa6485bd06cf1d75a9e72f80cfc327329'],71,81,152,7,0.0,0.0,1.0
289cdb8509483116d04e236903b440e3fcffdd0c,Note on dynamic periodic tasks.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-13 12:28:52-05:00,18000,2019-04-13 12:28:52-05:00,18000,True,False,"['guide.rst', 'test_api.py']",['cc50825bf9ab313233a77a2ad807f7294ac39de7'],0,81,81,2,1.0,1.0,1.0
416e8da1ca18442c08431a91bce373de7d2d200f,Support using priority support w/redis expire storage.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-04-22 14:48:46-05:00,18000,2019-04-22 14:48:46-05:00,18000,True,False,"['__init__.py', 'api.py', 'storage.py']",['289cdb8509483116d04e236903b440e3fcffdd0c'],1,11,12,3,,,
b7b41a65a2a666ed593beee5ba300e5e1c562711,"Add serializer tests, add optional support for zlib.

Replaces #416",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-05-16 07:02:50-05:00,18000,2019-05-16 07:02:50-05:00,18000,True,False,"['api.rst', 'api.py', 'serializer.py', '__init__.py', 'test_serializer.py']",['416e8da1ca18442c08431a91bce373de7d2d200f'],9,64,73,5,1.0,1.0,0.75
ffeab81d69b7aa385b66ceca6b11e21f0503a081,Fix datetime usage in API test-case.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-05-16 07:03:34-05:00,18000,2019-05-16 07:03:34-05:00,18000,True,False,['test_api.py'],['b7b41a65a2a666ed593beee5ba300e5e1c562711'],2,2,4,1,,,
33c71a511f7fba62e1ac135075de6e955fe5a805,"Fix initialization of Serializer in Huey.__init__().

Closes #416",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-05-16 07:06:23-05:00,18000,2019-05-16 07:06:23-05:00,18000,True,False,['api.py'],['ffeab81d69b7aa385b66ceca6b11e21f0503a081'],4,4,8,1,,,
7fc4405d4887f48a395bfc228ff040a1f0b1019e,2.x compatibility for gzip compression.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-05-16 07:15:28-05:00,18000,2019-05-16 07:15:28-05:00,18000,True,False,['serializer.py'],['33c71a511f7fba62e1ac135075de6e955fe5a805'],4,28,32,1,1.0,1.0,1.0
17a564bd9e84d0e934a325e7293574fff8b07a3a,"Ouch, finally get gzip unfucked with Python 2.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-05-16 07:26:59-05:00,18000,2019-05-16 07:26:59-05:00,18000,True,False,['serializer.py'],['7fc4405d4887f48a395bfc228ff040a1f0b1019e'],3,8,11,1,1.0,1.0,1.0
3273193c4c250c45620cb288234770f6a0a6e059,Small API tweaks to include utc flag in schedule add.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-06-03 22:54:34-05:00,18000,2019-06-03 22:54:34-05:00,18000,True,False,"['api.py', 'sql_huey.py', 'storage.py', 'test_immediate.py', 'test_storage.py']",['17a564bd9e84d0e934a325e7293574fff8b07a3a'],10,11,21,5,,,
21b008f3c0ffd14ed001122355ee7bc4ba252875,Added python versions so django packages shows Python 3 support,watervize,support@omenapps.com,watervize,support@omenapps.com,2019-06-05 14:43:59-07:00,25200,2019-06-05 14:43:59-07:00,25200,True,False,['setup.py'],['3273193c4c250c45620cb288234770f6a0a6e059'],0,5,5,1,,,
3b9dd583a998a416451c0c344ee27970c7c99084,Add filesystem result storage implementation.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-06-05 22:22:56-05:00,18000,2019-06-05 22:23:18-05:00,18000,True,False,"['storage.py', 'test_storage.py']",['f1e569c850ce058b30dcf7cec01510f6e63da6df'],3,117,120,2,1.0,1.0,0.7222222222222222
1677be3d8feef06fce1d224e630b56ec6cd7bb74,"Add documentation for storage implementations, new tests.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-06-05 22:54:52-05:00,18000,2019-06-05 22:54:52-05:00,18000,True,False,"['api.rst', '__init__.py', 'test_storage.py']",['3b9dd583a998a416451c0c344ee27970c7c99084'],1,100,101,3,0.0,1.0,1.0
ec98ddddb494394ac1d07d60c602aaa77f853626,2.1.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-06-06 08:36:23-05:00,18000,2019-06-06 08:36:23-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['1677be3d8feef06fce1d224e630b56ec6cd7bb74'],3,16,19,2,,,
3f593959f29e6efc9c47a8fb8609f097030278b7,"Implements signed serializer from #415

Thanks to @RaphaelKimmig",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-06-19 10:19:09-05:00,18000,2019-06-19 10:19:09-05:00,18000,True,False,"['serializer.py', 'test_api.py', 'utils.py']",['ec98ddddb494394ac1d07d60c602aaa77f853626'],0,57,57,3,1.0,1.0,0.7631578947368421
b4440f660df6a34bf60ea8b5379b4b1eb3869237,"Expose signal and disconnect_signal in djhuey.

Fixes #426",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-06-23 11:15:27-05:00,18000,2019-06-23 11:15:27-05:00,18000,True,False,['__init__.py'],['3f593959f29e6efc9c47a8fb8609f097030278b7'],0,2,2,1,,,
98a3c07fdf276f74dfd56ee1df5e36cf26a210db,Document additional helpers exposed by djhuey.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-06-23 11:19:25-05:00,18000,2019-06-23 11:19:25-05:00,18000,True,False,['django.rst'],['b4440f660df6a34bf60ea8b5379b4b1eb3869237'],0,11,11,1,,,
d822bd7c109f2cc4c16963368d93dfb587bcce10,Add WAL-mode as default journal mode. Replaces #425,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-06-23 11:23:14-05:00,18000,2019-06-23 11:23:14-05:00,18000,True,False,['storage.py'],['98a3c07fdf276f74dfd56ee1df5e36cf26a210db'],1,3,4,1,1.0,1.0,0.5
be6ab6d470b949b8f6048fa0e7becfb157bd47e6,Refactor sqlite storage to make other db's easier to support.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-06-24 19:26:53-05:00,18000,2019-06-24 19:26:53-05:00,18000,True,False,['storage.py'],['d822bd7c109f2cc4c16963368d93dfb587bcce10'],52,65,117,1,0.0,0.6,0.2
f4c766a40c9c188356f12b1ccf79f9fc27d3352f,Drop host/port if they are None from the connection params.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-06-28 13:54:45-05:00,18000,2019-06-28 13:54:45-05:00,18000,True,False,"['storage.py', 'test_storage.py']",['be6ab6d470b949b8f6048fa0e7becfb157bd47e6'],0,8,8,2,0.25,0.25,0.25
46aec7bac7e971dccd85b0c5cbf4442a3c698608,Add doc paragraph on decorator usage.,Martin Vielsmaier,martin@vielsmaier.net,Martin Vielsmaier,martin@vielsmaier.net,2019-07-04 21:00:34+02:00,-7200,2019-07-04 21:00:34+02:00,-7200,True,False,['api.rst'],['ec98ddddb494394ac1d07d60c602aaa77f853626'],0,13,13,1,,,
326a3c54718c29600cc295e25b1d23fafd21fb27,Copy comment in example code to API doc.,Martin Vielsmaier,martin@vielsmaier.net,Martin Vielsmaier,martin@vielsmaier.net,2019-07-04 21:01:08+02:00,-7200,2019-07-04 21:01:08+02:00,-7200,True,False,['api.rst'],['46aec7bac7e971dccd85b0c5cbf4442a3c698608'],1,1,2,1,,,
5d04d9f33eabe7e62bbc2dc1ad28289f93aec2f7,Decorator bit as a note.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-07-05 07:23:11-05:00,18000,2019-07-05 07:23:11-05:00,18000,True,False,['api.rst'],['ed2f62226eab3f1ea8214c3806db1f46d0d1e51e'],10,11,21,1,,,
f2d4004c155a5389ad7c83f0dfa1f1cbda2be54d,fix a spelling error,非法操作,hjlarry@163.com,GitHub,noreply@github.com,2019-07-09 11:32:20+08:00,-28800,2019-07-09 11:32:20+08:00,-28800,True,False,['guide.rst'],['5d04d9f33eabe7e62bbc2dc1ad28289f93aec2f7'],1,1,2,1,,,
395caff5a6eedbac56e4b856169e1592752bf5c4,Expose result method through Django helper,Vladislav Manchev,3009538+blablacio@users.noreply.github.com,GitHub,noreply@github.com,2019-07-21 21:57:56+02:00,-7200,2019-07-21 21:57:56+02:00,-7200,True,False,['__init__.py'],['451a48c53b9026ee25921b4657663da7f7b97a6c'],0,1,1,1,,,
a1895a2356b747d60fa681b7fb984bc67b97c30f,"Configure logging for ""huey"" namespace.

Fixes #437",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-07-31 09:48:45-05:00,18000,2019-07-31 09:48:45-05:00,18000,True,False,"['huey_consumer.py', 'run_huey.py']",['085685a6cb38d9ffa1bcee82480bd7fb1696faed'],2,8,10,2,0.0,0.5,0.5
d9071591dfbb58469088d904f4b9b7d9298f831b,"Preserve docstring in task-decorated functions.

Fixes #439",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-08-06 22:17:22-05:00,18000,2019-08-06 22:17:22-05:00,18000,True,False,"['api.py', 'test_api.py']",['a1895a2356b747d60fa681b7fb984bc67b97c30f'],0,17,17,2,1.0,1.0,0.9230769230769231
47512f228793c040b91b7b951d3b96d4c948a48e,2.1.1,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-08-07 10:58:13-05:00,18000,2019-08-07 10:58:13-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['d9071591dfbb58469088d904f4b9b7d9298f831b'],2,15,17,2,,,
fa71e3e91e6de94c46a02081ef0499f8136aa61b,"Fix __call__() method in mini-huey.

Fixes #443",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-08-16 14:01:20-05:00,18000,2019-08-16 14:01:20-05:00,18000,True,False,['mini.py'],['47512f228793c040b91b7b951d3b96d4c948a48e'],2,6,8,1,,,
de4dee30e3795f66ba3b5d725229f05f93667ce5,"Only call setup_logger() in django management cmd if no handlers.

Refs #437",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-08-25 15:10:38-05:00,18000,2019-08-25 15:10:38-05:00,18000,True,False,['run_huey.py'],['fa71e3e91e6de94c46a02081ef0499f8136aa61b'],1,6,7,1,0.0,0.0,0.0
2ca08707cd89cc0bf2eda08f0226a24285150865,Expose scheduled method in Django helper,Vladislav Manchev,3009538+blablacio@users.noreply.github.com,GitHub,noreply@github.com,2019-08-27 22:20:49+02:00,-7200,2019-08-27 22:20:49+02:00,-7200,True,False,['__init__.py'],['de4dee30e3795f66ba3b5d725229f05f93667ce5'],0,1,1,1,,,
280e87d75f3c9162c14b5ec385347623a7af0dca,Add kyototycoon backend.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-08-29 18:54:21-05:00,18000,2019-08-29 18:54:21-05:00,18000,True,False,"['kyototycoon.py', 'kt.lua', 'test_kt_huey.py', 'utils.py']",['d83b9fc29985afb6bd031303b9ab30545e8c47d5'],0,2059,2059,4,0.5767984445884641,0.6694750486066104,0.4206092028515878
748404c5a9b3cdb1019b24ab1ef5cd6c3e66e94b,Add support for priority to kt queue.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-09-03 09:07:57-05:00,18000,2019-09-03 09:07:57-05:00,18000,True,False,"['kyototycoon.py', 'kt.lua']",['280e87d75f3c9162c14b5ec385347623a7af0dca'],28,117,145,2,0.6323529411764706,0.9264705882352942,0.058823529411764705
eab9bfe34897334e882bb7767747841d7a24e250,Allow kt huey to have an expire time on the results.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-09-03 10:47:17-05:00,18000,2019-09-03 10:47:17-05:00,18000,True,False,"['kyototycoon.py', 'test_kt_huey.py']",['748404c5a9b3cdb1019b24ab1ef5cd6c3e66e94b'],2,28,30,2,0.0,1.0,0.9
c328c094d4c5c79ad08623ac9a3f4785d7d01c3d,Pass database to queue calls. Check for ktserver binary in tests.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-09-03 10:55:49-05:00,18000,2019-09-03 10:55:49-05:00,18000,True,False,"['kyototycoon.py', 'test_kt_huey.py']",['eab9bfe34897334e882bb7767747841d7a24e250'],15,20,35,2,1.0,1.0,1.0
c9152108e96e8a5201bb29b7e7047a05639cda13,Add example of using minihuey.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-09-03 11:14:21-05:00,18000,2019-09-03 11:14:21-05:00,18000,True,False,['mini.py'],['d83b9fc29985afb6bd031303b9ab30545e8c47d5'],0,27,27,1,1.0,1.0,1.0
4c01413b076404aa76f0e6324f1c292cb3a58a78,Allow timeout to be specified for sqlite storage.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-09-03 11:49:03-05:00,18000,2019-09-03 11:49:03-05:00,18000,True,False,"['storage.py', 'test_storage.py']",['c328c094d4c5c79ad08623ac9a3f4785d7d01c3d'],3,10,13,2,1.0,1.0,0.8333333333333334
33c172d56ae3d0d11a7c3823c74fb5bcafa112fc,Test kt stuff.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-09-03 11:51:22-05:00,18000,2019-09-03 11:51:38-05:00,18000,True,False,['.travis.yml'],['4c01413b076404aa76f0e6324f1c292cb3a58a78'],10,9,19,1,,,
94070b3336047d9dd5277ad51744d1c50cc4db2d,2.1.2,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-09-04 10:25:24-05:00,18000,2019-09-04 10:25:24-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['235c0c39ddfebf0e9fde552d435977194f507401'],2,18,20,2,,,
e9f6225b2bcb9b70d6a1de85c08aa5d4f4ee392c,"Change semantics of the SIGNAL_COMPLETE to run after result is stored.

Previously the SIGNAL_COMPLETE would be sent before the result had
actually been placed in the result store. The docs indicate that the
signal is emitted when a task completes successfully, and completion
should imply that the result is ready.

Fixes #449",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-09-25 08:36:24-05:00,18000,2019-09-25 08:36:24-05:00,18000,True,False,['api.py'],['94070b3336047d9dd5277ad51744d1c50cc4db2d'],1,4,5,1,0.0,0.0,0.0
ab98ba6abe8d72a8d172008d732b14c9acedd83f,"Add test-case for resolving a task result in signal handler.

Refs #449",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-09-25 08:42:08-05:00,18000,2019-09-25 08:42:08-05:00,18000,True,False,['test_signals.py'],['e9f6225b2bcb9b70d6a1de85c08aa5d4f4ee392c'],0,15,15,1,1.0,1.0,0.8461538461538461
b7b98a2a73e136e1c8c8b164e1146ed6bc2bd3eb,"Refactor signal handling for child processes. Ensure TERM handled.

Previously, when using worker processes, a worker that was busy
executing a task would not terminate immediately even when SIGTERM was
used. This meant that, in-effect, all shutdowns had to be graceful. This
issue is now resolved. When SIGTERM is sent, any workers executing a
task will be stopped (as originally intended). Graceful shutdown
continues to function as it always has.

Fixes #452",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-10-04 22:32:09-05:00,18000,2019-10-04 22:32:09-05:00,18000,True,False,['consumer.py'],['ab98ba6abe8d72a8d172008d732b14c9acedd83f'],13,23,36,1,1.0,0.0,0.25
6b76adbc9df39e101fc1b9b0dbcfcfb1c42793e1,"Use classes for specific Huey implementations.

This makes it a lot easier/obvious to subclass the desired
implementation and extend just what you want.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-10-13 18:55:40-05:00,18000,2019-10-13 18:55:40-05:00,18000,True,False,['api.py'],['b7b98a2a73e136e1c8c8b164e1146ed6bc2bd3eb'],10,24,34,1,0.0,0.0,0.0
811e1d8a795854118e6890753d672e505116efe8,Cleanup huey_storage.db.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-10-13 18:57:25-05:00,18000,2019-10-13 18:57:25-05:00,18000,True,False,['runtests.py'],['6b76adbc9df39e101fc1b9b0dbcfcfb1c42793e1'],2,3,5,1,,,
2379de8b2e42cdc20eb608c60ecd5272a26c0696,Whoops.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-10-13 18:58:19-05:00,18000,2019-10-13 18:58:19-05:00,18000,True,False,['runtests.py'],['811e1d8a795854118e6890753d672e505116efe8'],1,1,2,1,,,
7c87d6058bdc153b554e9ecf4c6363ba77a5face,2.1.3,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-10-16 09:23:30-05:00,18000,2019-10-16 09:23:30-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['2379de8b2e42cdc20eb608c60ecd5272a26c0696'],2,17,19,2,,,
0722f2b9ef601843ff0f2a691a9471add84dfe40,fix task __repr__ implementation,Glenn De Jonghe,gl3nn@users.noreply.github.com,Glenn De Jonghe,gl3nn@users.noreply.github.com,2019-10-30 16:53:10+01:00,-3600,2019-10-30 16:53:10+01:00,-3600,True,False,['api.py'],['7c87d6058bdc153b554e9ecf4c6363ba77a5face'],1,1,2,1,,,
c99cd75e2da5a7f4cf117e1cdc81a52979b80b08,Put task_id in the meta information of a TaskException,Glenn De Jonghe,gl3nn@users.noreply.github.com,Glenn De Jonghe,gl3nn@users.noreply.github.com,2019-10-30 16:58:27+01:00,-3600,2019-10-30 16:58:27+01:00,-3600,True,False,['api.py'],['7c87d6058bdc153b554e9ecf4c6363ba77a5face'],1,3,4,1,0.0,0.0,0.0
e6706293a2b1d26e6b9389f39585c261765743b0,"Fix typo in TaskLockedException docs

What a difference a letter makes :)",Adam Johnson,me@adamj.eu,GitHub,noreply@github.com,2019-11-06 10:54:23+00:00,0,2019-11-06 10:54:23+00:00,0,True,False,['api.rst'],['e6710bd6a9f581ebc728e24f5923d26eb0047750'],1,1,2,1,,,
35a2abc456ecac7389e3d6cd57c220128c179996,"proc.is_alive() instead of proc.isAlive()

Fixes #466",Peter Bengtsson,mail@peterbe.com,Peter Bengtsson,mail@peterbe.com,2019-11-19 08:55:13-05:00,18000,2019-11-19 08:55:13-05:00,18000,True,False,['consumer.py'],['a018fb752fdea14fe54266cff713416fd0a90868'],1,1,2,1,,,
4d8cc3f38fb681aaaba663b6dd54cf035aa9f5fb,Fix typo in Django docs,Adam Johnson,me@adamj.eu,GitHub,noreply@github.com,2019-11-25 16:21:01+00:00,0,2019-11-25 16:21:01+00:00,0,True,False,['django.rst'],['3b49756419ff2867fe5afdb7ef98150964048ccd'],1,1,2,1,,,
44db57a4e5c441a0b1c62671b260bfa061bd3882,3.8 no longer dev.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-12-05 10:54:37-06:00,21600,2019-12-05 10:54:37-06:00,21600,True,False,['.travis.yml'],['ea1be1d1a03a7502f0df762853c4c43e64cea680'],1,1,2,1,,,
bf002c85ae444954c3237fa4b056fbf9111448a1,"Fix change in Python 3.8

Python 3.8 uses an incompatible multiprocessing mode on MacOS. Set it
back to the old one if we run into this.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2019-12-06 14:10:29-06:00,21600,2019-12-06 14:10:29-06:00,21600,True,False,['huey_consumer.py'],['44db57a4e5c441a0b1c62671b260bfa061bd3882'],0,3,3,1,,,
23655e7d8131da75b6f8d5af599ba1b05c43c981,@db_periodic_task.call_local should not close database connections.,Jonny Arnold,jonny.arnold@nomio.com,Jonny Arnold,jonny.arnold@nomio.com,2019-12-16 18:00:21+00:00,0,2019-12-16 18:00:21+00:00,0,True,False,['__init__.py'],['bf002c85ae444954c3237fa4b056fbf9111448a1'],1,3,4,1,1.0,1.0,1.0
49dd3ad3ae147bb31eca68420475ab130ece9625,"Allow pickle protocol to be specified in serializer.

Also adds test to deserialization when compression is enabled, to first
check whether the data actually is compressed before decompressing. A
corollary check is **not** added for when compression is disabled (the
default).",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-01-06 14:12:44-06:00,21600,2020-01-06 14:12:44-06:00,21600,True,False,"['serializer.py', 'test_serializer.py']",['a40351aec4ff1019cacca1b6e70a0fcbb52ea2d6'],3,29,32,2,1.0,0.13333333333333333,0.8666666666666667
29e95bb42593b44babb7c5d249aa3e57d7872e15,"Fix typo, refs #477",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-01-06 17:16:13-06:00,21600,2020-01-06 17:16:13-06:00,21600,True,False,['serializer.py'],['49dd3ad3ae147bb31eca68420475ab130ece9625'],1,1,2,1,,,
d31940b5dd45ebfd76200ff8939f21b26b905035,"Add FileHuey and full FileStorage implementations.

Note: the file-system storage should not be used in production as it
effectively has a concurrency of 1 due to exclusive locks around all
file-system operations.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-01-08 11:31:31-06:00,21600,2020-01-08 11:31:31-06:00,21600,True,False,"['api.py', 'storage.py', 'test_storage.py', 'utils.py']",['29e95bb42593b44babb7c5d249aa3e57d7872e15'],30,264,294,4,0.5325443786982249,0.6390532544378699,0.6686390532544378
0c3037f03e8a1b5746427cbb13ae485ee330a59a,"Add documentation for new FileHuey implementation.

Also make small fix to the KyotoTycoonHuey contrib module.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-01-08 11:58:37-06:00,21600,2020-01-08 11:58:37-06:00,21600,True,False,"['api.rst', 'kyototycoon.py']",['d31940b5dd45ebfd76200ff8939f21b26b905035'],30,30,60,2,,,
e7f58e04860472fb137744d1804c65513fed259c,Ensure KT tests are being run by default.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-01-08 16:08:32-06:00,21600,2020-01-08 16:08:32-06:00,21600,True,False,"['__init__.py', 'test_kt_huey.py']",['0c3037f03e8a1b5746427cbb13ae485ee330a59a'],1,2,3,2,,,
778790ee5f3d2782e805180ed6c3b50e25e0728a,Skip flaky test on travis-ci.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-01-08 16:44:10-06:00,21600,2020-01-08 16:44:10-06:00,21600,True,False,"['.travis.yml', 'base.py', 'test_storage.py']",['e7f58e04860472fb137744d1804c65513fed259c'],0,6,6,3,,,
373f642e5fa81d4de7fa1284a3a9291a7f2adf79,"Add shutdown hook for worker processes.

Fixes #487",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-02-18 08:25:21-06:00,21600,2020-02-18 08:25:21-06:00,21600,True,False,"['api.rst', 'api.py', 'consumer.py']",['778790ee5f3d2782e805180ed6c3b50e25e0728a'],0,50,50,3,0.9545454545454546,0.36363636363636365,0.9545454545454546
f30d14751fa259705bf65d8d67d4cb32365917bc,Add startup/shutdown to example code.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-02-18 08:25:34-06:00,21600,2020-02-18 08:25:34-06:00,21600,True,False,['tasks.py'],['373f642e5fa81d4de7fa1284a3a9291a7f2adf79'],0,16,16,1,1.0,1.0,1.0
bc8bb7385ba5339fcb7ed7c66231c90cf88dbf52,"Add support for pipelines with task instances.

This also enables support for chaining one pipeline to another.

Fixes #491",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-02-23 09:16:06-06:00,21600,2020-02-23 09:16:06-06:00,21600,True,False,"['api.py', 'test_api.py']",['f30d14751fa259705bf65d8d67d4cb32365917bc'],2,43,45,2,1.0,1.0,0.6
e5dcab12370eb8b77ed429989d10bc060d3a8c7b,Increase verbosity.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-02-23 09:29:49-06:00,21600,2020-02-23 09:30:30-06:00,21600,True,False,['.travis.yml'],['bc8bb7385ba5339fcb7ed7c66231c90cf88dbf52'],2,1,3,1,,,
802625f678f6480b211d6221af8b93a54408f225,Fix flaky tests again. Add timeout to join().,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-02-23 09:36:07-06:00,21600,2020-02-23 09:36:07-06:00,21600,True,False,['test_storage.py'],['e5dcab12370eb8b77ed429989d10bc060d3a8c7b'],2,6,8,1,1.0,1.0,1.0
664649c20aba0d9d9ad7287c6825c45dde2a2f2f,2.2.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-02-23 09:39:16-06:00,21600,2020-02-23 09:39:16-06:00,21600,True,False,"['CHANGELOG.md', '__init__.py']",['802625f678f6480b211d6221af8b93a54408f225'],2,18,20,2,,,
5c5740d284f639b92b5e18925cb9fc19f7b2a082,"Fix simple typo: periodict -> periodic

Closes #493",Tim Gates,tim.gates@iress.com,Tim Gates,tim.gates@iress.com,2020-02-24 05:47:04+11:00,-39600,2020-02-24 05:47:04+11:00,-39600,True,False,['consumer.rst'],['664649c20aba0d9d9ad7287c6825c45dde2a2f2f'],1,1,2,1,,,
48ed3ff442f965f8a60396e623560b4e4f8be01e,"Clarify docs to link to Huey's parameter list.

Fixes #496",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-02-24 06:49:13-06:00,21600,2020-02-24 06:49:39-06:00,21600,True,False,['api.rst'],['8cb6f8990a4b78a9c0f5835deef8aa1747e7a99a'],10,17,27,1,,,
830770fe4d8d04d3afa540c2053e4035b146bfa9,"Add option to enforce FIFO behavior with Sqlite.

Fixes #497",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-02-27 18:51:16-06:00,21600,2020-02-27 18:51:16-06:00,21600,True,False,"['api.rst', 'storage.py']",['48ed3ff442f965f8a60396e623560b4e4f8be01e'],2,24,26,2,1.0,1.0,0.0
d04143f1e3defd27f9c9a9dbf90d3b6c5af44aec,Add exception call to AsyncResult after task failing,kuznetsov_me,kuznetsov_me@bystrobank.ru,kuznetsov_me,kuznetsov_me@bystrobank.ru,2020-03-03 10:00:44+00:00,0,2020-03-03 10:00:44+00:00,0,True,False,['mini.py'],['830770fe4d8d04d3afa540c2053e4035b146bfa9'],0,1,1,1,1.0,1.0,0.0
4e44712c33238236dd2c1523625d11ea126c101e,Export FileHuey in huey.__init__.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-03-04 05:59:10-06:00,21600,2020-03-04 05:59:10-06:00,21600,True,False,['__init__.py'],['7d00929f15cdbc5ecbea0cc3b317d074d479713a'],0,1,1,1,,,
894a3c9b7bdaa166b53a19b463e841b9a3c09147,Include on_shutdown signal in djhuey,Dimo Fedortchenko,d@angelhill.net,GitHub,noreply@github.com,2020-04-04 20:16:34+05:18,-19080,2020-04-04 20:16:34+05:18,-19080,True,False,['__init__.py'],['4e44712c33238236dd2c1523625d11ea126c101e'],0,1,1,1,,,
76bb933c7cb73b28fbd9b85b38d22ad3278bcba5,"Use time.monotonic() for certain timing operations.

Refs #521",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-05-18 08:21:07-05:00,18000,2020-05-18 08:21:07-05:00,18000,True,False,"['api.py', 'consumer.py', 'utils.py']",['4ccc4d5dd165b0acf61108d9bf9d8de3a7ca2e36'],8,16,24,3,,,1.0
1f14785b5bc68d23fd65300f5885e6d916036824,"Use monotonic clock for timing scheduler loop interval.

Refs and resolves #521",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-05-18 08:28:30-05:00,18000,2020-05-18 08:28:30-05:00,18000,True,False,"['consumer.py', 'test_consumer.py']",['76bb933c7cb73b28fbd9b85b38d22ad3278bcba5'],8,9,17,2,,,
b9cb8667258e97608db7c66444551ace370b00c7,Use monotonic clock in minihuey as well.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-05-18 08:33:24-05:00,18000,2020-05-18 08:33:24-05:00,18000,True,False,['mini.py'],['1f14785b5bc68d23fd65300f5885e6d916036824'],5,6,11,1,,,
335c5dcebb34e703fb489b8546e73e14980314ac,"Use existence test + get w/expires storage.

Fixes #531",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-06-18 11:03:06-05:00,18000,2020-06-18 11:03:06-05:00,18000,True,False,['storage.py'],['b9cb8667258e97608db7c66444551ace370b00c7'],2,5,7,1,1.0,1.0,1.0
77000b488d9e8d1c0f04e29f2a4949bf25f0a565,Fix python setup.py test,lhfelis,lhfelis@gmail.com,lhfelis,lhfelis@gmail.com,2020-06-30 20:42:34+08:00,-28800,2020-06-30 20:42:34+08:00,-28800,True,False,"['runtests.py', 'setup.py']",['335c5dcebb34e703fb489b8546e73e14980314ac'],2,2,4,2,,,
3ee834fd866ec3bc71da0e9c0eee35775cb1f935,"Ensure fd is properly cleared on file-lock.

Replaces #532",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-06-30 07:58:48-05:00,18000,2020-06-30 07:58:48-05:00,18000,True,False,['utils.py'],['335c5dcebb34e703fb489b8546e73e14980314ac'],2,2,4,1,,,
4851343304b787d060c29089581d9f88e54bb153,"Ensure we aren't interrupted in the middle of enqueue/put in test.

Replaces #533",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-06-30 08:05:44-05:00,18000,2020-06-30 08:05:44-05:00,18000,True,False,['test_storage.py'],['3ee834fd866ec3bc71da0e9c0eee35775cb1f935'],8,11,19,1,0.6666666666666666,0.6666666666666666,0.6666666666666666
40eaf6a830f5d221d023c1661f83ff44e6c2690b,"Better support for passing around TaskException as pickled value.

Fixes #536",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-07-14 11:18:00-05:00,18000,2020-07-14 11:18:00-05:00,18000,True,False,"['exceptions.py', 'test_api.py']",['3c5ef64f1048c933ded7e899c48f9f2d7dba4b7e'],3,19,22,2,1.0,1.0,1.0
4c455e2d1efea97622c3b4afaca00d34c2d398ff,Set multiprocessing method for 'fork' on MacOS + Python 3.8+.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-07-31 09:08:57-05:00,18000,2020-07-31 09:08:57-05:00,18000,True,False,['run_huey.py'],['40eaf6a830f5d221d023c1661f83ff44e6c2690b'],0,7,7,1,0.0,0.0,0.0
00662ffdc686289bc170944d1ed745c4778a77a6,2.3.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-08-10 08:41:14-05:00,18000,2020-08-10 08:41:14-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['4c455e2d1efea97622c3b4afaca00d34c2d398ff'],2,14,16,2,,,
ef9fbce966e8f365280a6f22c029eb07b8246b70,changes suggested to make cons helper script more correct,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-08-13 11:06:42-05:00,18000,2020-08-13 11:06:42-05:00,18000,True,False,['cons.sh'],['00662ffdc686289bc170944d1ed745c4778a77a6'],3,4,7,1,,,
4032ec65c67b3f38fc4b0a69dba49e69dc56b90f,"rename db to database in example 

in order to keep it consistent with the earlier example that calls the variable database",Fabian Dill,Berserker66@users.noreply.github.com,GitHub,noreply@github.com,2020-08-21 11:57:18+02:00,-7200,2020-08-21 11:57:18+02:00,-7200,True,False,['shared_resources.rst'],['ef9fbce966e8f365280a6f22c029eb07b8246b70'],1,1,2,1,,,
f8820c8c340805f9373d5eb3e7a04ec45cc764b1,Add doc not on flush-locks flag to consumer.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-08-22 20:40:56-05:00,18000,2020-08-22 20:40:56-05:00,18000,True,False,['consumer.rst'],['2d437efe60fdc00f466c583abd2053dad0d4b16e'],0,4,4,1,,,
d0614d844126c32ca4f2416ca91d192bdf2e9fe6,"Additional doc on task locks and a helper clear() method.

Refs #538",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-08-22 20:54:13-05:00,18000,2020-08-22 20:54:13-05:00,18000,True,False,"['api.rst', 'api.py']",['f8820c8c340805f9373d5eb3e7a04ec45cc764b1'],0,28,28,2,1.0,1.0,1.0
677e8e733df6457d7d7cecc90d5e7d72c84e795f,Fix typo.,Karthikeyan Singaravelan,tir.karthi@gmail.com,Karthikeyan Singaravelan,tir.karthi@gmail.com,2020-08-24 11:14:41+00:00,0,2020-08-24 11:14:41+00:00,0,True,False,['storage.py'],['d0614d844126c32ca4f2416ca91d192bdf2e9fe6'],1,1,2,1,,,
55fc6a25a23a46b8bf66b2e152628c3707602f2c,"Update docs on what happens when consumer killed abruptly.

refs #559",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-10-15 14:20:50-05:00,18000,2020-10-15 14:20:50-05:00,18000,True,False,['consumer.rst'],['6d3d418308d3c8c1880f3e856394bc5bb1fee35f'],1,3,4,1,,,
beae339cff1d9f8e5e38d0ccdf6607271f4801a4,Ensure we test both blocking and not blocking redis dequeue.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-11-09 20:00:17-06:00,21600,2020-11-09 20:00:17-06:00,21600,True,False,['test_storage.py'],['55fc6a25a23a46b8bf66b2e152628c3707602f2c'],1,7,8,1,1.0,1.0,1.0
c8566ef60af2014f9a9f85d8a2fc1435eac162b8,Use GH actions for huey CI.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-12-16 15:19:59-06:00,21600,2020-12-16 15:36:49-06:00,21600,True,False,['tests.yaml'],['beae339cff1d9f8e5e38d0ccdf6607271f4801a4'],0,28,28,1,,,
430b00692c435f97f40a68c0dff8f114b0680803,"Remove travis-ci, run tests with increased verbosity.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-12-16 15:41:40-06:00,21600,2020-12-16 15:41:40-06:00,21600,True,False,"['tests.yaml', '.travis.yml']",['c8566ef60af2014f9a9f85d8a2fc1435eac162b8'],20,1,21,2,,,
a4b8044c2a56a3a173448a410c26d89799ce2604,"Clarify where to place lock_task context manager.

Replaces #570",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-12-17 17:02:49-06:00,21600,2020-12-17 17:02:49-06:00,21600,True,False,['api.rst'],['430b00692c435f97f40a68c0dff8f114b0680803'],2,2,4,1,,,
0b3408b3917163c17115ee3cf9746aec29e8f1ae,add a new signal when a consumer exits but task unfinished,gonglinglei,gonglinglei@bytedance.com,gonglinglei,gonglinglei@bytedance.com,2020-12-29 14:26:56+08:00,-28800,2020-12-29 14:31:00+08:00,-28800,True,False,"['signals.rst', 'api.py', 'signals.py']",['a4b8044c2a56a3a173448a410c26d89799ce2604'],0,3,3,3,0.0,0.0,0.0
8cbc11fbe22d68db5e233c12b0d08a6183d3848e,Add interrupted signal handler caveat.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-12-29 07:36:39-06:00,21600,2020-12-29 07:36:39-06:00,21600,True,False,['signals.rst'],['b953913822c5fa1eb616a093542571108671a285'],1,2,3,1,,,
76c2b3777df3a317af3897f0c773f36b07ce1676,Add support for INTERRUPTED signal when using threads/gevent.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2020-12-29 08:36:17-06:00,21600,2020-12-29 08:36:17-06:00,21600,True,False,"['signals.rst', 'api.py', 'consumer.py']",['8cbc11fbe22d68db5e233c12b0d08a6183d3848e'],2,14,16,3,0.6,0.6,0.7
d2dc9d0221e33f6df4b1a5864fc61870f883fbdd,Add doc note on logging.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-01-15 08:00:32-06:00,21600,2021-01-15 08:00:32-06:00,21600,True,False,['guide.rst'],['76c2b3777df3a317af3897f0c773f36b07ce1676'],0,36,36,1,,,
bfa07f26ef078895a36f4bb0297dd536b484774d,"Add note on using django + sqlite and specifying ""filename"".",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-02-05 07:43:34-06:00,21600,2021-02-05 07:43:34-06:00,21600,True,False,['django.rst'],['d2dc9d0221e33f6df4b1a5864fc61870f883fbdd'],1,2,3,1,,,
3f5a45437309facd014dbc41eb4948e6edb87bc0,Use create_consumer in Django run_huey command,nokutana,jonathan.s.chao+github@gmail.com,nokutana,jonathan.s.chao+github@gmail.com,2021-02-23 18:04:25-08:00,28800,2021-02-23 18:04:25-08:00,28800,True,False,['run_huey.py'],['bfa07f26ef078895a36f4bb0297dd536b484774d'],2,1,3,1,,,
5b65ff3bc9f133d8142cbc571f10f15157124e47,2.3.1,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-03-04 09:14:07-06:00,21600,2021-03-04 09:14:07-06:00,21600,True,False,"['CHANGELOG.md', '__init__.py']",['16780667ec6c00768a0729437c114ce561b885fb'],2,11,13,2,,,
a9e2b5147b9f39fbaa36b0db63237e113e70afdb,"Add API hook for enriching the Error result metadata.

Fixes #590",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-03-14 11:27:04-05:00,18000,2021-03-14 11:34:39-05:00,18000,True,False,"['api.py', 'test_api.py']",['5b65ff3bc9f133d8142cbc571f10f15157124e47'],11,45,56,2,1.0,1.0,0.7037037037037037
6c899b4a9b06fbf69a836856598091f327eea073,"Slight change to the build_error_result API to return dict.

The dict is then wrapped with the Error class.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-03-16 10:39:52-05:00,18000,2021-03-16 10:39:52-05:00,18000,True,False,"['api.py', 'test_api.py']",['a9e2b5147b9f39fbaa36b0db63237e113e70afdb'],6,5,11,2,0.0,0.0,1.0
d39345a4cb038b22caa6aa0e41de872b328fb3eb,"Tentative ""fix"" for #592",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-03-21 20:20:19-05:00,18000,2021-03-21 20:20:19-05:00,18000,True,False,['run_huey.py'],['6c899b4a9b06fbf69a836856598091f327eea073'],1,7,8,1,0.0,0.0,0.0
53933ad4ba27c0acc4306bacb378ad4852402ff1,Add note linking to gaiacoop/django-huey.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-03-30 16:13:59-05:00,18000,2021-03-30 16:13:59-05:00,18000,True,False,['django.rst'],['d39345a4cb038b22caa6aa0e41de872b328fb3eb'],1,4,5,1,,,
179809ebb2679704d339f8f61ac4d44a72fa07a5,"Avoid multiprocessing error.

Fixes #592",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-04-05 18:33:58-05:00,18000,2021-04-05 18:34:12-05:00,18000,True,False,['huey_consumer.py'],['53933ad4ba27c0acc4306bacb378ad4852402ff1'],1,4,5,1,,,
510df7a4cc499b2bfda4ebcb49b5a3486934e969,2.3.2,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-04-20 08:43:58-05:00,18000,2021-04-20 08:45:49-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['179809ebb2679704d339f8f61ac4d44a72fa07a5'],2,11,13,2,,,
f46b1490e0854bc9c606a4ac023f651fd600a0dc,"Update crontab() function to raise ValueError on unmatched pieces

Because this change is not backwards compatible, a `strict` keyword
argument with a False default is added to the crontab function.",blissful,blissful@sunsetglow.net,blissful,blissful@sunsetglow.net,2021-06-06 00:08:13-04:00,14400,2021-06-06 00:28:31-04:00,14400,True,False,['api.py'],['510df7a4cc499b2bfda4ebcb49b5a3486934e969'],21,30,51,1,0.0,0.0,0.0
345857dd01293af70a3a72dcb8052e34b38574b1,"Add tests for crontab changes.

Refs #603",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-06-07 08:03:41-05:00,18000,2021-06-07 08:03:41-05:00,18000,True,False,"['api.rst', 'test_crontab.py']",['031d45fe400de163ff101904b2fe19fffb164919'],1,9,10,2,1.0,1.0,1.0
6b1a9f9463fde1a52f884d07f48b2923a8a1b777,Add extensibility to registry.Message in ancitipation of new features,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-06-17 18:13:39-05:00,18000,2021-06-17 18:13:39-05:00,18000,True,False,['registry.py'],['345857dd01293af70a3a72dcb8052e34b38574b1'],0,5,5,1,,,
e4f66804a929681d0b88b72dc2f5d337e0ad6b50,Workflow update.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-06-18 14:55:30-05:00,18000,2021-06-18 14:55:30-05:00,18000,True,False,['tests.yaml'],['6b1a9f9463fde1a52f884d07f48b2923a8a1b777'],3,5,8,1,,,
3a75c55ab94df2a50a01e8fe32a4e7ca60a28f3a,Second attempt at expires.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-06-21 13:08:09-05:00,18000,2021-06-21 13:09:14-05:00,18000,True,False,"['api.py', 'registry.py', 'base.py', 'utils.py']",['e4f66804a929681d0b88b72dc2f5d337e0ad6b50'],7,21,28,4,0.3333333333333333,0.5,0.6666666666666666
43f17a73fbcedabc89d8f8cc34d146e72c33e499,Task expiration support.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-06-21 14:29:23-05:00,18000,2021-06-21 15:04:21-05:00,18000,True,False,"['api.rst', 'guide.rst', 'signals.rst', 'api.py', 'registry.py', 'signals.py', 'test_api.py', 'test_registry.py', 'test_signals.py']",['3a75c55ab94df2a50a01e8fe32a4e7ca60a28f3a'],16,250,266,9,0.20491803278688525,0.680327868852459,0.9426229508196722
5873cc7a565b7fa4cbe9c72e7cc711f9abf6a5b8,Add note to index/readme about task expiration.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-06-21 15:14:17-05:00,18000,2021-06-21 15:14:17-05:00,18000,True,False,"['README.rst', 'index.rst']",['43f17a73fbcedabc89d8f8cc34d146e72c33e499'],0,2,2,2,,,
2ee65622cad07b2524f4df1697176684a4b2b130,Fix 2.7 incompatibility in test.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-06-21 15:16:38-05:00,18000,2021-06-21 15:16:38-05:00,18000,True,False,['test_api.py'],['5873cc7a565b7fa4cbe9c72e7cc711f9abf6a5b8'],1,1,2,1,,,
dd5db5bd13c876be2921e986074ab9b49fc8d6b8,Reorganize docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-06-21 15:18:50-05:00,18000,2021-06-21 15:22:46-05:00,18000,True,False,['guide.rst'],['2ee65622cad07b2524f4df1697176684a4b2b130'],42,46,88,1,,,
a0e03e2293bb4d1f0ca5df612003ba2e760b3008,Clean-up and make retries/retry_delay consistent w/priority/expires,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-06-22 09:56:44-05:00,18000,2021-06-22 09:56:44-05:00,18000,True,False,"['api.py', 'test_api.py']",['dd5db5bd13c876be2921e986074ab9b49fc8d6b8'],21,68,89,2,0.21428571428571427,0.9642857142857143,0.9285714285714286
bc39fcfac43772d681032122cba2746e5bca511b,Small code cleanup,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-06-23 11:02:39-05:00,18000,2021-06-23 11:02:39-05:00,18000,True,False,['consumer.py'],['a0e03e2293bb4d1f0ca5df612003ba2e760b3008'],6,5,11,1,1.0,1.0,0.0
acefb2ceeb51fe249445eac5f871dbce5c360077,Close file first before unlink.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-08-04 12:13:20-05:00,18000,2021-08-04 12:13:20-05:00,18000,True,False,['storage.py'],['bc39fcfac43772d681032122cba2746e5bca511b'],1,1,2,1,,,
235cf3a8e6a704aee01338bfe32a35d9c59aa2fa,2.4.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-08-10 11:14:55-05:00,18000,2021-08-10 11:14:55-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['acefb2ceeb51fe249445eac5f871dbce5c360077'],2,12,14,2,,,
730e7e95be35a3c747930e591f589d243054bb9e,Add notes on other huey implementations.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-08-13 13:05:00-05:00,18000,2021-08-13 13:05:00-05:00,18000,True,False,['django.rst'],['235cf3a8e6a704aee01338bfe32a35d9c59aa2fa'],0,6,6,1,,,
9b0ce1a9c63ffe8c8e51150cde81d068a7a7b088,"Add code around sql-storage methods to reconnect if conn unusable.

Fixes / intended to address #619

In testing locally when I restarted a postgres db, one iteration of the
scheduler and enqueueing failed, and then went back to working the next
run.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-09-15 09:08:36-05:00,18000,2021-09-15 09:08:36-05:00,18000,True,False,['sql_huey.py'],['730e7e95be35a3c747930e591f589d243054bb9e'],0,14,14,1,0.9230769230769231,1.0,0.6923076923076923
2166341362ac44073c8ceb45238c71235e095c5c,"New file lock implementation using flock()

Hopefully this should avoid some of the race conditions observed when
using the softer file lock.

Refs #620",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-09-15 11:13:13-05:00,18000,2021-09-15 11:17:36-05:00,18000,True,False,"['test_storage.py', 'utils.py']",['9b0ce1a9c63ffe8c8e51150cde81d068a7a7b088'],13,16,29,2,0.0,0.0,1.0
c610c55119ba60e11982d1b337486b9693d7b31b,2.4.1,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-09-16 07:40:37-05:00,18000,2021-09-16 07:42:38-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['2166341362ac44073c8ceb45238c71235e095c5c'],2,10,12,2,,,
b04bcb0cddc6faac9f768d432ed3602ad350ae4a,Note on changing storage implementations.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-09-28 08:21:00-05:00,18000,2021-09-28 08:21:00-05:00,18000,True,False,['api.rst'],['c610c55119ba60e11982d1b337486b9693d7b31b'],0,7,7,1,,,
279ca4ad966606ff2fe47bbbbbf544435f405f66,Explicitly join() the scheduler.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-10-08 11:38:46-05:00,18000,2021-10-08 11:38:46-05:00,18000,True,False,['consumer.py'],['b04bcb0cddc6faac9f768d432ed3602ad350ae4a'],0,1,1,1,1.0,1.0,1.0
1e7d2bdef3bbadb6df5061dbd21d3583964f5c44,Ensure default_queue_name returns a str,Christopher Cave-Ayland,c.cave-ayland@imperial.ac.uk,GitHub,noreply@github.com,2021-10-14 13:39:20+01:00,-3600,2021-10-14 13:39:20+01:00,-3600,True,False,['__init__.py'],['279ca4ad966606ff2fe47bbbbbf544435f405f66'],1,1,2,1,,,
6185c6e217de26351bf739d2b473d60a7115df97,py 3.10 support,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-10-28 09:53:49-05:00,18000,2021-10-28 09:54:27-05:00,18000,True,False,"['tests.yaml', 'setup.py']",['12c650e8f4e74467211f8dbcc1f5fdb7b47dc5c3'],1,4,5,2,,,
3ce5e6dd15c4cee79be5997161f544190d29d07b,"Do not store key in local var in redis schedule pop lua script.

This causes problems with some bullshit that redis cluster is doing.
Fixes #632",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-11-09 09:04:30-06:00,21600,2021-11-09 09:04:50-06:00,21600,True,False,['storage.py'],['6185c6e217de26351bf739d2b473d60a7115df97'],3,2,5,1,,,
e77acf307bfdade914ab7f91c65dbbc183af5d8f,"Close old django connections before task body.

Replaces /refs #633",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-11-12 07:37:37-06:00,21600,2021-11-12 07:37:37-06:00,21600,True,False,['__init__.py'],['3ce5e6dd15c4cee79be5997161f544190d29d07b'],0,2,2,1,1.0,1.0,1.0
b488a3626425e4a1f65c9996695b30da0dfa1aac,Add new consumer option / argument to flush_locks() to accept names.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-11-28 09:33:22-06:00,21600,2021-11-28 09:41:27-06:00,21600,True,False,"['api.rst', 'consumer.rst', 'api.py', 'consumer.py', 'consumer_options.py', 'test_api.py']",['e77acf307bfdade914ab7f91c65dbbc183af5d8f'],7,47,54,6,0.75,0.875,0.875
2e9f1efb1eb8c943c9ad35add1d76e581a168b9a,2.4.2,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-11-28 09:45:43-06:00,21600,2021-11-28 09:45:43-06:00,21600,True,False,"['CHANGELOG.md', '__init__.py']",['b488a3626425e4a1f65c9996695b30da0dfa1aac'],2,11,13,2,,,
cc4ea341bdb961d74ec6e3ac6a21a316c717414c,Add note about file-system storage.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-11-28 09:48:08-06:00,21600,2021-11-28 09:48:08-06:00,21600,True,False,"['README.rst', 'index.rst']",['2e9f1efb1eb8c943c9ad35add1d76e581a168b9a'],2,2,4,2,,,
ee6340a41ba3f7064cebf40ba3439a2e52d05345,add link to docs.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-11-28 09:49:05-06:00,21600,2021-11-28 09:49:05-06:00,21600,True,False,['README.rst'],['cc4ea341bdb961d74ec6e3ac6a21a316c717414c'],0,1,1,1,,,
906c67a6b172461a146679c6dec8d845f20415d7,"Fix compatibility issue with new redis-py

Fixes #642",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-12-03 08:53:19-06:00,21600,2021-12-03 08:53:19-06:00,21600,True,False,['storage.py'],['ee6340a41ba3f7064cebf40ba3439a2e52d05345'],2,1,3,1,1.0,1.0,1.0
c568fdc2f8206e9f3393735552518446aa9b9955,2.4.3,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2021-12-28 12:36:19-06:00,21600,2021-12-28 12:36:19-06:00,21600,True,False,['__init__.py'],['906c67a6b172461a146679c6dec8d845f20415d7'],1,1,2,1,,,
b7aebe442514fa9cca376265dce371ae42a17535,"Add method `is_locked(lock_name)` to test whether lock is held.

Fixes #647",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-01-10 11:30:10-06:00,21600,2022-01-10 11:30:10-06:00,21600,True,False,"['api.rst', 'api.py', 'test_api.py']",['c568fdc2f8206e9f3393735552518446aa9b9955'],0,18,18,3,0.0,1.0,1.0
b17c8dc59ee9941ea7aa8ae75f6fdb77307642ab,"Allow raising CancelExecution within a Task, and override retries.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-02-22 10:46:32-06:00,21600,2022-02-22 10:46:32-06:00,21600,True,False,"['api.rst', 'guide.rst', 'api.py', 'exceptions.py', 'test_api.py']",['b7aebe442514fa9cca376265dce371ae42a17535'],4,133,137,5,0.1095890410958904,0.3972602739726027,0.821917808219178
3d206fd2d0131082e3a65d9a943e0ce5f61c600d,Add more example tasks to example.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-05-04 09:19:21-05:00,18000,2022-05-04 09:19:21-05:00,18000,True,False,['tasks.py'],['b17c8dc59ee9941ea7aa8ae75f6fdb77307642ab'],3,33,36,1,1.0,1.0,0.0
9706aa83b81fa24726c2b8073f4128a9c612869c,Add changelog entry for 2.4.3,Adam Johnson,me@adamj.eu,GitHub,noreply@github.com,2022-05-09 12:17:15+01:00,-3600,2022-05-09 12:17:15+01:00,-3600,True,False,['CHANGELOG.md'],['3d206fd2d0131082e3a65d9a943e0ce5f61c600d'],1,7,8,1,,,
10dc57cdc4e283f5ddd1da2ed1cb50f6765f51c2,Clarify docs on settings.DEBUG behavior for Django.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-05-09 07:55:57-05:00,18000,2022-05-09 07:55:57-05:00,18000,True,False,['django.rst'],['3d206fd2d0131082e3a65d9a943e0ce5f61c600d'],7,9,16,1,,,
5485db8cb27a4c462e0a96ebe74990262dfaa6a3,Make all Redis huey instances extend RedisHuey.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-05-31 11:43:09-05:00,18000,2022-05-31 11:43:09-05:00,18000,True,False,['api.py'],['d7c7f36aac3d8d0c7e52df611d0161e4b52c54c2'],3,3,6,1,,,
3c06e3fa468a098ae912a6e6e084cc3fe09754c6,"Add a very basic redis-backed lock that can be acquired more than once.

Refs #671",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-05-31 11:43:32-05:00,18000,2022-05-31 11:43:32-05:00,18000,True,False,"['helpers.py', '__init__.py', 'test_helpers.py']",['5485db8cb27a4c462e0a96ebe74990262dfaa6a3'],0,109,109,3,0.7384615384615385,1.0,0.8
66d1f1ae1c6f35a83fccdcf64fecc459e4b133bf,"Additional note in docs, fixes #673",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-06-13 07:52:26-05:00,18000,2022-06-13 07:52:26-05:00,18000,True,False,['troubleshooting.rst'],['3c06e3fa468a098ae912a6e6e084cc3fe09754c6'],0,8,8,1,,,
390925dcdad8f8057c7cbc98b565c213c9fad87a,Add periodic_task() wrapper for MiniHuey.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-06-28 08:02:24-05:00,18000,2022-06-28 08:02:24-05:00,18000,True,False,['mini.py'],['66d1f1ae1c6f35a83fccdcf64fecc459e4b133bf'],0,5,5,1,1.0,1.0,1.0
499af465074a12164eea5152838a1db68667675a,Update trove classifiers.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-07-14 19:24:07-05:00,18000,2022-07-14 19:24:07-05:00,18000,True,False,['setup.py'],['390925dcdad8f8057c7cbc98b565c213c9fad87a'],2,5,7,1,,,
2bfe7596ce46b661fd61f3f8164e001ece7822f6,"Add note to docs on exponential backoff w/sample implementation.

Refs #451",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-07-15 08:10:45-05:00,18000,2022-07-15 08:10:45-05:00,18000,True,False,['guide.rst'],['499af465074a12164eea5152838a1db68667675a'],0,52,52,1,,,
01903447f5665ba063afaa9f3abab51d35950b4f,"Update docs, fixes #357",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-08-18 08:04:55-05:00,18000,2022-08-18 08:04:55-05:00,18000,True,False,['django.rst'],['2bfe7596ce46b661fd61f3f8164e001ece7822f6'],0,13,13,1,,,
d11f6e2dcecb2429ee12a51fc17f6e751b7e4b16,2.4.4,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-10-21 15:51:03-05:00,18000,2022-10-21 15:51:03-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['01903447f5665ba063afaa9f3abab51d35950b4f'],2,12,14,2,,,
03f2c2acf7e9b34087d561a32dc200c4c2f4125c,pypi lol,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-10-21 15:51:27-05:00,18000,2022-10-21 15:51:27-05:00,18000,True,False,['setup.py'],['d11f6e2dcecb2429ee12a51fc17f6e751b7e4b16'],2,2,4,1,,,
b85c9668d4eb1fecd5f5a4471422b4cbf6631cc3,Reconfigure github actions since 3.6 no longer supported.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2022-12-13 20:37:21-06:00,21600,2022-12-13 20:37:21-06:00,21600,True,False,['tests.yaml'],['03f2c2acf7e9b34087d561a32dc200c4c2f4125c'],1,1,2,1,,,
d0048761239cd29fdc4a1162fd1852f6ca42375a,Store original metadata error when exception raised in sub task,Grigory Mishchenko,grishkokot@gmail.com,Grigory Mishchenko,grishkokot@gmail.com,2022-12-30 09:47:35+03:00,-10800,2022-12-30 09:47:35+03:00,-10800,True,False,"['api.py', 'test_api.py']",['b85c9668d4eb1fecd5f5a4471422b4cbf6631cc3'],2,7,9,2,1.0,1.0,0.0
ae1d582266be8d2d982e3dfa1d8a3e7bfc2d9b2a,Add note on dynamic tasks.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-01-13 12:44:18-06:00,21600,2023-01-13 12:44:18-06:00,21600,True,False,['guide.rst'],['f3c437e7d4e2f5672e84ce21251004a67f0895e7'],0,27,27,1,,,
7eed7598d10d0815b0fb275ec0e12f0ba7580a2d,"Add pyproject.toml, fixes #708

brought to you by the brave folks at pypa.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-02-09 08:12:03-06:00,21600,2023-02-09 08:12:34-06:00,21600,True,False,['pyproject.toml'],['ae1d582266be8d2d982e3dfa1d8a3e7bfc2d9b2a'],0,2,2,1,,,
143796532a1a7e0c6663c2c649c502e206756f4d,2.4.5,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-02-09 08:35:17-06:00,21600,2023-02-09 08:35:17-06:00,21600,True,False,"['CHANGELOG.md', '__init__.py']",['7eed7598d10d0815b0fb275ec0e12f0ba7580a2d'],2,9,11,2,,,
bc922eeb7fcef0871e61c70ac40b4614baa9de42,Add some minimal doc on different storage implementations.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-02-10 12:19:29-06:00,21600,2023-02-10 12:19:29-06:00,21600,True,False,"['api.rst', 'consumer.rst', 'guide.rst']",['143796532a1a7e0c6663c2c649c502e206756f4d'],1,86,87,3,,,
026a5ac921edbccc70024f87cb7b66a4206ab4f9,"Explicitly clear the revoked flag on task instances after execution.

This should fix #713",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-02-24 08:12:58-06:00,21600,2023-02-24 08:12:58-06:00,21600,True,False,['api.py'],['bc922eeb7fcef0871e61c70ac40b4614baa9de42'],0,5,5,1,0.0,0.0,0.0
cc439d55890033a32443e79a2cd483979c2a672c,"Add check that gevent monkeypatch applied, and log warning.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-03-07 08:40:02-06:00,21600,2023-03-07 08:40:02-06:00,21600,True,False,['consumer.py'],['026a5ac921edbccc70024f87cb7b66a4206ab4f9'],0,8,8,1,0.0,0.0,1.0
e01f71bbcf7da9be0daaacf9e3ce065756f9311a,"Add support for `delay()` and `eta()` in `.s()` and `.then()`

Refs #720",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-03-08 14:28:09-06:00,21600,2023-03-08 14:28:09-06:00,21600,True,False,"['api.py', 'test_api.py']",['cc439d55890033a32443e79a2cd483979c2a672c'],0,30,30,2,0.36,1.0,0.72
eacdd8543095cd021a2a91c35762b21dbe6afc6c,"Add option (default=True) for rescheduling callbacks along w/task.

Also reschedule the original priority and support overriding priority
when rescheduling.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-03-10 18:35:24-06:00,21600,2023-03-10 18:35:24-06:00,21600,True,False,"['api.py', 'test_api.py']",['e01f71bbcf7da9be0daaacf9e3ce065756f9311a'],5,49,54,2,0.16666666666666666,0.4166666666666667,0.75
15ff8957f1acb1dce8f89e6cee5c4582603dc5b9,"Add examples for supervisor/systemd and note on multiple consumers.

Refs #726",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-03-23 08:13:26-05:00,18000,2023-03-23 08:13:26-05:00,18000,True,False,['consumer.rst'],['eacdd8543095cd021a2a91c35762b21dbe6afc6c'],0,74,74,1,,,
4093cdb1b0e42db9e74d98ac0e6bd5273df52c04,"Add barebones ""on_commit_task"" for Django users.

Because the enqueueing needs to happen in a callback registered to
Django's transaction.on_commit helper, we can't easily expose a full
TaskWrapper for tasks decorated @on_commit_task so this is a fairly
minimal implementation. Hopefully it should provide enough functionality
to be useful when necessary.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-03-24 18:29:13-05:00,18000,2023-03-24 18:29:13-05:00,18000,True,False,"['api.py', '__init__.py']",['15ff8957f1acb1dce8f89e6cee5c4582603dc5b9'],0,37,37,2,1.0,1.0,1.0
6e7cd48998dad3321a138bd8dfc0dbde24b11206,Add example on_commit_task to django example code.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-03-24 18:30:33-05:00,18000,2023-03-24 18:30:33-05:00,18000,True,False,"['settings.py', 'tasks.py']",['4093cdb1b0e42db9e74d98ac0e6bd5273df52c04'],1,20,21,2,1.0,1.0,1.0
aeaa36e5cc11381830d2ea8c01b6ac63335b357e,Add pyproject to manifest,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-04-06 07:10:32-05:00,18000,2023-04-06 07:10:32-05:00,18000,True,False,['MANIFEST.in'],['6e7cd48998dad3321a138bd8dfc0dbde24b11206'],0,1,1,1,,,
fa999de41273eaaa92a203efcad0c5260d0e2124,Add option to override delay and eta with RetryTask exception.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-04-27 21:10:15-05:00,18000,2023-04-27 21:10:15-05:00,18000,True,False,"['api.rst', 'api.py', 'exceptions.py', 'test_api.py']",['aeaa36e5cc11381830d2ea8c01b6ac63335b357e'],5,50,55,4,0.918918918918919,0.918918918918919,0.7567567567567568
00274ce122b5eac618f1f5a0082afd91b50ab0e8,Make example less confusing to newcomers.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-05-02 07:47:08-05:00,18000,2023-05-02 07:47:08-05:00,18000,True,False,['django.rst'],['fa999de41273eaaa92a203efcad0c5260d0e2124'],1,1,2,1,,,
86e57869aee6e7b2b2f1abd9a05070fea6fef3ed,"Clarify docs on which backends support priority.

Fixes #741

[skip ci]",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-05-20 11:08:16-05:00,18000,2023-05-20 11:08:31-05:00,18000,True,False,['guide.rst'],['00274ce122b5eac618f1f5a0082afd91b50ab0e8'],1,2,3,1,,,
c544807f9f3a4dfc6d9ae82554d4efc66a75d2f7,"Explicitly prevent using multiprocess on windows.

Add note to docs explaining why windows+processes is unsupported.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-06-04 21:03:26-05:00,18000,2023-06-04 21:03:26-05:00,18000,True,False,"['consumer.rst', 'huey_consumer.py']",['86e57869aee6e7b2b2f1abd9a05070fea6fef3ed'],0,11,11,2,0.0,0.0,1.0
63bcf73b9db9cf07a931cf46a6c1d13e1e149685,Remove travis-ci icon,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-06-06 11:30:29-05:00,18000,2023-06-06 11:30:29-05:00,18000,True,False,['README.rst'],['c544807f9f3a4dfc6d9ae82554d4efc66a75d2f7'],2,0,2,1,,,
4737bdf5eac0b354879e39997f1f60ee084dc23d,"Add a very simple `ResultGroup.as_completed()` helper.

Refs #746",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-06-10 16:33:08-05:00,18000,2023-06-10 16:33:08-05:00,18000,True,False,['api.py'],['63bcf73b9db9cf07a931cf46a6c1d13e1e149685'],0,13,13,1,1.0,0.0,0.0
50f5a672636240e9bc8615e0a1efe3fd870819bb,"Add asyncio helper for resolving task results asynchronously.

Also add example script showing how to use this.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-06-23 17:52:25-05:00,18000,2023-06-23 17:52:25-05:00,18000,True,False,"['amain.py', 'asyncio.py']",['4737bdf5eac0b354879e39997f1f60ee084dc23d'],0,83,83,2,1.0,1.0,0.52
800ecfe2f2ba6857d3f72549792ea1fc4ed2be48,Clarify examples and docstrings.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-06-23 17:56:25-05:00,18000,2023-06-23 17:56:25-05:00,18000,True,False,"['tasks.py', 'asyncio.py']",['50f5a672636240e9bc8615e0a1efe3fd870819bb'],12,46,58,2,1.0,1.0,0.8461538461538461
e78778b732d81feb81ab2bf87ea4872197896c95,Add short doc for new asyncio helpers.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-06-23 18:12:21-05:00,18000,2023-06-23 18:12:21-05:00,18000,True,False,"['asyncio.rst', 'contrib.rst', 'asyncio.py']",['800ecfe2f2ba6857d3f72549792ea1fc4ed2be48'],0,73,73,3,,,
28b024b1050f3a5ef2e7b62393af1a31db0cbac3,"GitHub no longer supports python 2.x on actions.

What a clownshow, I'm sure supporting Python 2.x costs them nothing.
I'll need to investigate what will be involved in getting this working
again.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-06-23 18:15:11-05:00,18000,2023-06-23 18:15:11-05:00,18000,True,False,['tests.yaml'],['e78778b732d81feb81ab2bf87ea4872197896c95'],1,1,2,1,,,
361e380ff4682e8d9683a057ef03b3adae60490e,"Add special INT handler for gevent, and fix TERM behavior as well.

Refs #755",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-07-18 11:53:39-05:00,18000,2023-07-18 11:53:39-05:00,18000,True,False,['consumer.py'],['28b024b1050f3a5ef2e7b62393af1a31db0cbac3'],1,19,20,1,1.0,1.0,0.2727272727272727
4180cbe6536206c5d4ecc380db8db746b34cf3b1,"Small examples to demonstrate slow cpu-bound tasks, export worker class.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-07-19 08:45:13-05:00,18000,2023-07-19 08:45:13-05:00,18000,True,False,"['cons.sh', 'tasks.py']",['361e380ff4682e8d9683a057ef03b3adae60490e'],0,6,6,2,1.0,1.0,1.0
6284422cdd7e407c13957484fd3f5e046fe126e3,Forceably terminate greenlets with TERM signal.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-07-19 08:45:34-05:00,18000,2023-07-19 08:45:34-05:00,18000,True,False,['consumer.py'],['4180cbe6536206c5d4ecc380db8db746b34cf3b1'],2,2,4,1,1.0,1.0,0.0
9cbf17eb025dab84a2c7afcd702543a4fe82d88f,"Run killall in a new greenlet.

This prevents exiting immediately if a greenlet is tying up the CPU and
not switching.",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-07-19 08:57:02-05:00,18000,2023-07-19 08:57:02-05:00,18000,True,False,['consumer.py'],['6284422cdd7e407c13957484fd3f5e046fe126e3'],2,4,6,1,1.0,1.0,1.0
fdbd988ab3da23ccd222cafa59c279559abca59b,"Include lock name when task fails to execute due to TaskLocked.

Fixes #757",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-08-01 10:07:51-05:00,18000,2023-08-01 10:07:51-05:00,18000,True,False,"['api.py', 'helpers.py']",['9cbf17eb025dab84a2c7afcd702543a4fe82d88f'],3,3,6,2,,,
a8f85f5880645c7fec71277cd1e50455b7321d20,Fix failing test.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-08-01 10:36:05-05:00,18000,2023-08-01 10:36:05-05:00,18000,True,False,['test_api.py'],['fdbd988ab3da23ccd222cafa59c279559abca59b'],1,1,2,1,,,
2dedbb33094182228ce1c433b57c88e3a494d90b,"Add importerror if gevent specified but not installed.

Refs #759",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-08-04 07:49:43-05:00,18000,2023-08-04 07:49:43-05:00,18000,True,False,['consumer.py'],['a8f85f5880645c7fec71277cd1e50455b7321d20'],0,2,2,1,0.0,0.0,0.0
4a377b25065e55c40b3a9221302351f066608145,2.5.0,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-09-20 07:48:19-05:00,18000,2023-09-20 07:48:19-05:00,18000,True,False,"['CHANGELOG.md', '__init__.py']",['2dedbb33094182228ce1c433b57c88e3a494d90b'],2,29,31,2,,,
07e85d1b293611e1bc069748d2abe9f6120d0089,"Clean up doc index and readme.

Replaces #773",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-10-13 07:38:32-05:00,18000,2023-10-13 07:38:32-05:00,18000,True,False,"['README.rst', 'index.rst']",['4a377b25065e55c40b3a9221302351f066608145'],4,4,8,2,,,
434fb9825c7b464e26ea967897338710185df0bc,"Fix incorrect long-form options in consumer options.

Replaces #774",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-10-22 07:50:12-05:00,18000,2023-10-22 07:50:12-05:00,18000,True,False,['consumer_options.py'],['07e85d1b293611e1bc069748d2abe9f6120d0089'],3,3,6,1,,,
a624af3356c4904dd733bcaf9254cfe0301bdcab,"readthedocs yaml shit is now required.

what the fuck, eabod rtd",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-11-15 08:50:23-06:00,21600,2023-11-15 08:50:23-06:00,21600,True,False,['.readthedocs.yaml'],['434fb9825c7b464e26ea967897338710185df0bc'],0,7,7,1,,,
bdbe58c878b1e7579ea32100120148da8c8a4809,Add compatibility hack for Python 3.12's broken utc stuff,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-11-21 11:35:44-06:00,21600,2023-11-21 11:35:44-06:00,21600,True,False,"['api.py', 'utils.py']",['a624af3356c4904dd733bcaf9254cfe0301bdcab'],2,11,13,2,1.0,1.0,1.0
3e7bdf253a02813eff138a2db6b00554d81a8e57,Updated docs on shutdown behavior.,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2023-11-27 20:36:02-06:00,21600,2023-11-27 20:39:24-06:00,21600,True,False,['consumer.rst'],['bdbe58c878b1e7579ea32100120148da8c8a4809'],1,27,28,1,,,
383331e02468a8d84e16979722653389d710d22e,"Allow users to override the TaskWrapper implementation.

Refs #783",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2024-01-09 10:00:33-06:00,21600,2024-01-09 10:00:33-06:00,21600,True,False,['api.py'],['3e7bdf253a02813eff138a2db6b00554d81a8e57'],0,8,8,1,0.8,0.8,0.4
8cfe4cfd7ff59a75c1d4605e9ca11087f6905266,"Factor consumer main loop into its own method.

Refs #783",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2024-01-09 10:18:17-06:00,21600,2024-01-09 10:18:17-06:00,21600,True,False,"['cons.sh', 'consumer.py']",['383331e02468a8d84e16979722653389d710d22e'],20,31,51,2,1.0,1.0,1.0
1653f922dccb8cf02fa1f86432ed9447342b1a31,Fix bug introduced when normalizing UTC stuff for python 3.12,Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2024-01-11 10:34:26-06:00,21600,2024-01-11 10:34:26-06:00,21600,True,False,['utils.py'],['8cfe4cfd7ff59a75c1d4605e9ca11087f6905266'],1,1,2,1,,,
922b74e445c7a895f3d2e022633a73028f70ef93,"Clarify docs slightly on revoked behavior, clean up code.

Fixes #784",Charles Leifer,coleifer@gmail.com,Charles Leifer,coleifer@gmail.com,2024-01-11 11:02:03-06:00,21600,2024-01-11 11:02:03-06:00,21600,True,False,"['api.rst', 'api.py', 'test_api.py']",['1653f922dccb8cf02fa1f86432ed9447342b1a31'],1,38,39,3,0.3333333333333333,0.7333333333333333,0.5333333333333333
