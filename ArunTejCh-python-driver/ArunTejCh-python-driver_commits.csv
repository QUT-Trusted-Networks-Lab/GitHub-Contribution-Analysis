Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
9f6fcb11ebe2948167e982aa9ca9713b54a0e47d,Initial commit,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-11-08 21:28:44-08:00,28800,2012-11-08 21:28:44-08:00,28800,True,False,"['.gitignore', 'README.md']",[],0,29,29,2,,,
4890726ad57ee388b205acf6749e93b4f8679132,initial research,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-08 22:26:06-08:00,28800,2012-11-08 22:26:06-08:00,28800,True,False,"['__init__.py', 'columns.py', 'connection.py', 'document.py', '__init__.py', 'requirements.txt']",['9f6fcb11ebe2948167e982aa9ca9713b54a0e47d'],0,19,19,6,,,
bc3c26a1ef73d64d9a7835a1cd3d3dcd4f76dffd,adding example cql and crud method stubs,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-09 07:17:08-08:00,28800,2012-11-09 07:17:08-08:00,28800,True,False,['connection.py'],['4890726ad57ee388b205acf6749e93b4f8679132'],4,52,56,1,1.0,1.0,1.0
fb36faa0a6b8188ec6bb2d929fd91ae28349e4aa,"adding initial column classes, document class stubs and an exception file",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-10 10:43:28-08:00,28800,2012-11-10 10:43:28-08:00,28800,True,False,"['columns.py', 'document.py', 'exceptions.py']",['bc3c26a1ef73d64d9a7835a1cd3d3dcd4f76dffd'],0,162,162,3,1.0,1.0,0.8852459016393442
f3ca4843b0fb8495a81c9d26d897aea579120e4f,"Renamed document.py to models.py
defined a base model class, as well as it's metaclass",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-10 17:26:27-08:00,28800,2012-11-10 17:26:27-08:00,28800,True,False,"['document.py', 'models.py']",['fb36faa0a6b8188ec6bb2d929fd91ae28349e4aa'],18,127,145,2,0.453125,0.453125,0.484375
44c1232f8ad8567b94e8c4217cd8474b4ebe010b,"added validation to columns
starting to clean up connection.py
adding exceptions",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-10 17:27:10-08:00,28800,2012-11-10 17:27:10-08:00,28800,True,False,"['columns.py', 'connection.py', 'exceptions.py']",['f3ca4843b0fb8495a81c9d26d897aea579120e4f'],53,62,115,3,1.0,1.0,1.0
ec1a3b02f4482f674fb91faf3a5359249ed2113a,"adding object manager
adding queryset class with insert, select, and table create and drop",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-10 17:27:54-08:00,28800,2012-11-10 17:27:54-08:00,28800,True,False,"['manager.py', 'query.py']",['44c1232f8ad8567b94e8c4217cd8474b4ebe010b'],0,217,217,2,0.6854838709677419,0.8225806451612904,0.9596774193548387
2aaf1650f32a6e4511c5b0cdcf95e25ebcf0b175,"added some unit tests, updated the readme and added requirements.txt",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-10 17:28:55-08:00,28800,2012-11-10 17:28:55-08:00,28800,True,False,"['README.md', 'base.py', '__init__.py', '__init__.py', 'test_class_construction.py', 'test_model_io.py', 'requirements.txt']",['ec1a3b02f4482f674fb91faf3a5359249ed2113a'],1,86,87,7,1.0,1.0,0.7857142857142857
18f52886e7b570ee7c1fe0dbc6782d73abe7664a,renamed some exceptions,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-10 19:33:22-08:00,28800,2012-11-10 19:33:22-08:00,28800,True,False,"['__init__.py', 'columns.py', 'exceptions.py', 'models.py']",['2aaf1650f32a6e4511c5b0cdcf95e25ebcf0b175'],8,10,18,4,,,
cfebd5a32d3b0628c461d96e09c13d297c42da2d,added more tests around the metaclass behavior,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-10 19:34:16-08:00,28800,2012-11-10 19:34:16-08:00,28800,True,False,['test_class_construction.py'],['18f52886e7b570ee7c1fe0dbc6782d73abe7664a'],4,31,35,1,1.0,1.0,1.0
b6042ac57ad62d7f73600588061cb194e114ba83,"adding dynamic columns to models (which aren't working yet)
working on the QuerySet class
adding additional tests around model saving and loading",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-10 21:12:47-08:00,28800,2012-11-10 21:12:47-08:00,28800,True,False,"['columns.py', 'models.py', 'query.py', 'test_validation.py', 'test_model_io.py', 'test_validation.py']",['cfebd5a32d3b0628c461d96e09c13d297c42da2d'],26,109,135,6,1.0,1.0,0.8888888888888888
4764b492eb44b1a2c3bcdc38b80b71704c39bb58,"adding single instance delete method and supporting unit test
adding column type stubs
updating readme",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-11 11:43:05-08:00,28800,2012-11-11 11:43:05-08:00,28800,True,False,"['README.md', 'columns.py', 'manager.py', 'models.py', 'query.py', 'test_model_io.py']",['b6042ac57ad62d7f73600588061cb194e114ba83'],25,81,106,6,1.0,1.0,1.0
142ceb184cbcea853182e6a20511a8c8b17cc6aa,modified model metaclass to replace column definitions with properties that modify the columns value member instead of removing them until instantiation,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-11 16:37:26-08:00,28800,2012-11-11 16:37:26-08:00,28800,True,False,"['columns.py', 'models.py', 'test_class_construction.py']",['4764b492eb44b1a2c3bcdc38b80b71704c39bb58'],21,55,76,3,1.0,1.0,1.0
83cf23da7c9f0dfc3bc36884c69ab9e334ea8d12,cleaning things up a bit,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-11 22:14:40-08:00,28800,2012-11-11 22:14:40-08:00,28800,True,False,"['README.md', 'columns.py', 'manager.py', 'models.py', 'query.py']",['142ceb184cbcea853182e6a20511a8c8b17cc6aa'],11,24,35,5,,,
b8103dd33bd29c83572cdf013759a865bf227437,"removed restriction on multiple primary keys
reworked metaclass to preserve column definition order
adjusted primary key declaration in table definition cql
removed dynamic columns",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-12 21:40:34-08:00,28800,2012-11-12 21:40:34-08:00,28800,True,False,"['README.md', 'columns.py', 'models.py', 'query.py', 'test_class_construction.py', 'test_model_io.py']",['83cf23da7c9f0dfc3bc36884c69ab9e334ea8d12'],58,41,99,6,0.11764705882352941,0.11764705882352941,0.11764705882352941
fc1de7259604dbb973903fd58fba332790ad9c43,"Add Vagrantfile

- Add complete virtual environment with Python 2.7 and Cassandra 1.1.6 for
  testing.",Eric Scrivner,eric@grapheffect.com,Eric Scrivner,eric@grapheffect.com,2012-11-12 22:04:12-08:00,28800,2012-11-12 22:04:12-08:00,28800,True,False,"['Vagrantfile', 'default.pp', 'cassandra.upstart']",['b8103dd33bd29c83572cdf013759a865bf227437'],0,130,130,3,,,
fd881636ea01d58673d12389fe98df925bad6eb1,"Add Ignore For Vagrant

- Add ignore for .vagrant file",Eric Scrivner,eric@grapheffect.com,Eric Scrivner,eric@grapheffect.com,2012-11-12 22:04:41-08:00,28800,2012-11-12 22:04:41-08:00,28800,True,False,['.gitignore'],['fc1de7259604dbb973903fd58fba332790ad9c43'],1,1,2,1,,,
718003362102c078d608afbc6ccb3fb740d79e0b,fixed a problem with the value management of instances,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-13 21:17:21-08:00,28800,2012-11-13 21:17:37-08:00,28800,True,False,"['models.py', 'test_class_construction.py']",['fd881636ea01d58673d12389fe98df925bad6eb1'],5,24,29,2,0.7777777777777778,0.7777777777777778,0.7777777777777778
eab79f6900c3d6bb69702e04c58bb535519c2640,changing name to cqlengine,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-18 17:34:35-08:00,28800,2012-11-18 17:34:35-08:00,28800,True,False,"['__init__.py', 'test_validation.py', '__init__.py', 'columns.py', 'connection.py', 'exceptions.py', 'manager.py', 'models.py', 'query.py', '__init__.py', 'base.py', '__init__.py', 'test_validation.py', '__init__.py', 'test_class_construction.py', 'test_model_io.py', 'test_validation.py']",['718003362102c078d608afbc6ccb3fb740d79e0b'],43,74,117,17,1.0,1.0,0.7727272727272727
39176b9660b0c722ad9f0a97e6a1711294455efa,adding valuemanager class and setup to model metaclass,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-18 17:48:21-08:00,28800,2012-11-18 17:48:21-08:00,28800,True,False,"['models.py', 'test_class_construction.py']",['eab79f6900c3d6bb69702e04c58bb535519c2640'],5,11,16,2,1.0,1.0,1.0
4152a37e80cc2fcad18af5d1f7f7672a258bf935,adding nosetests to vagrant node,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-20 21:48:41-08:00,28800,2012-11-20 21:48:41-08:00,28800,True,False,['default.pp'],['39176b9660b0c722ad9f0a97e6a1711294455efa'],1,1,2,1,,,
61177eb3401ab151ed3072368f8cfb29e289b436,starting to write the QuerySet class,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-20 23:22:58-08:00,28800,2012-11-20 23:22:58-08:00,28800,True,False,"['exceptions.py', 'query.py', '__init__.py', 'test_queryset.py']",['4152a37e80cc2fcad18af5d1f7f7672a258bf935'],15,177,192,4,1.0,0.7846153846153846,0.5846153846153846
24fb184f711c22ce2147e6bfd680af4201206e7b,removing some outdated property stuff,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-21 07:39:13-08:00,28800,2012-11-21 07:39:13-08:00,28800,True,False,['columns.py'],['61177eb3401ab151ed3072368f8cfb29e289b436'],27,0,27,1,0.0,0.0,0.0
dee0ace2d76e0101c6d31180e1787ce25fd97821,"working out queryoperator logic and structure
updating filter arg parsing and storage
adding where clause creation",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-21 07:40:09-08:00,28800,2012-11-21 07:40:09-08:00,28800,True,False,"['query.py', 'test_queryset.py']",['24fb184f711c22ce2147e6bfd680af4201206e7b'],13,100,113,2,1.0,1.0,1.0
1fcf80909510872af1e60044d625ca6129683ea6,"adding select querystring generation
moving the manager functionality into the queryset and modifying the model and query classes to work with it",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-22 12:39:22-08:00,28800,2012-11-22 12:39:22-08:00,28800,True,False,"['columns.py', 'manager.py', 'models.py', 'query.py', 'test_class_construction.py', 'test_model_io.py', 'test_queryoperators.py', 'test_queryset.py', 'requirements.txt']",['dee0ace2d76e0101c6d31180e1787ce25fd97821'],63,153,216,9,0.7037037037037037,0.7037037037037037,1.0
b7d91fe869fef8fcdebafc83b771db907df73f16,"writing query delete method
added queryset usage tests
refactoring how column names are stored and calculated",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-22 23:16:49-08:00,28800,2012-11-22 23:16:49-08:00,28800,True,False,"['columns.py', 'models.py', 'query.py', 'test_queryset.py']",['1fcf80909510872af1e60044d625ca6129683ea6'],32,111,143,4,0.4444444444444444,1.0,0.9814814814814815
277f1496e08117d0fd0721305bbb125e11227891,"made keyspace a model attribute
made keyspace a required parameter for get_connection
moved create/delete column family and keyspaces into a management module",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-23 13:37:45-08:00,28800,2012-11-23 13:37:45-08:00,28800,True,False,"['connection.py', 'management.py', 'models.py', 'query.py', 'test_class_construction.py', 'test_model_io.py', 'test_queryset.py']",['b7d91fe869fef8fcdebafc83b771db907df73f16'],68,125,193,7,0.25925925925925924,1.0,1.0
d67006919a723d831cd5c6d68b6bf5128a2cdb7e,refactoring exceptions,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-23 14:19:40-08:00,28800,2012-11-23 14:19:40-08:00,28800,True,False,"['exceptions.py', 'query.py']",['277f1496e08117d0fd0721305bbb125e11227891'],2,2,4,2,,,
fdae4779048e00f80173d0f94a3bd7bdb178710e,"adding column indexing support
adding some where clause validation
added supporting tests",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-23 16:17:26-08:00,28800,2012-11-23 16:17:26-08:00,28800,True,False,"['columns.py', 'management.py', 'models.py', 'query.py', 'test_class_construction.py', 'test_queryset.py']",['d67006919a723d831cd5c6d68b6bf5128a2cdb7e'],42,157,199,6,0.5833333333333334,0.45,0.9166666666666666
aa6b151d068f17218d9e83279a9521f1c70bdccf,removing the manager file,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-23 16:18:14-08:00,28800,2012-11-23 16:18:14-08:00,28800,True,False,['manager.py'],['fdae4779048e00f80173d0f94a3bd7bdb178710e'],65,0,65,1,0.0,0.0,0.0
f75442456f8ebbfad3510cb1c42d4672671f677f,cleaning up,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-23 17:40:15-08:00,28800,2012-11-23 17:40:15-08:00,28800,True,False,"['columns.py', 'connection.py', 'management.py', 'query.py']",['aa6b151d068f17218d9e83279a9521f1c70bdccf'],63,3,66,4,0.5,0.08333333333333333,0.0
e0530a883ad500628c19bf5fd051e668a54bfd40,"removing the find method
adding initial support for cached queryset results
added a dirty fix for iterating over a queryset more than once",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-23 21:19:46-08:00,28800,2012-11-23 21:19:46-08:00,28800,True,False,"['models.py', 'query.py', 'test_model_io.py', 'test_queryset.py']",['f75442456f8ebbfad3510cb1c42d4672671f677f'],32,55,87,4,0.1111111111111111,0.8888888888888888,0.8888888888888888
854de8d375ae25168b7da633b631dbf5a68d8bd3,adding some todos,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-23 21:33:43-08:00,28800,2012-11-23 21:33:43-08:00,28800,True,False,"['columns.py', 'query.py', 'test_model_io.py']",['e0530a883ad500628c19bf5fd051e668a54bfd40'],12,14,26,3,1.0,1.0,1.0
394266ab983e53c7ce579072fa033ac2e95c97e5,adding support for order_by,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-24 10:28:52-08:00,28800,2012-11-24 10:28:52-08:00,28800,True,False,"['query.py', 'test_class_construction.py', 'test_queryset.py']",['854de8d375ae25168b7da633b631dbf5a68d8bd3'],3,111,114,3,0.5319148936170213,0.5319148936170213,1.0
301aa5c1dfb22a4009a7fa7e1a48e4d7e59d69dd,adding support for select LIMIT,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-24 16:58:03-08:00,28800,2012-11-24 16:58:03-08:00,28800,True,False,['query.py'],['394266ab983e53c7ce579072fa033ac2e95c97e5'],61,47,108,1,1.0,1.0,1.0
2cbf582b0dfc3d05c8494506c54386efd68f1832,adding column delete on save,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-24 17:33:14-08:00,28800,2012-11-24 17:33:14-08:00,28800,True,False,"['columns.py', 'models.py', 'query.py', 'test_model_io.py', 'test_queryset.py']",['301aa5c1dfb22a4009a7fa7e1a48e4d7e59d69dd'],24,32,56,5,0.0,0.0,0.8666666666666667
67dd9151a9abbde3aca24390eb5fceee2bf5b89e,fixing name conflict,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-24 17:37:57-08:00,28800,2012-11-24 17:37:57-08:00,28800,True,False,['models.py'],['2cbf582b0dfc3d05c8494506c54386efd68f1832'],5,5,10,1,,,
405a0240ad651b3d5967028f27073a0b9fa8f6b2,refactoring column null arg to required,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-24 17:38:19-08:00,28800,2012-11-24 17:38:19-08:00,28800,True,False,['columns.py'],['67dd9151a9abbde3aca24390eb5fceee2bf5b89e'],7,5,12,1,,,
823e21fdee28b8b1fa284fcd475b98a48d179520,testing and debugging column deleting,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-24 17:48:40-08:00,28800,2012-11-24 17:48:40-08:00,28800,True,False,"['query.py', 'test_model_io.py']",['405a0240ad651b3d5967028f27073a0b9fa8f6b2'],4,13,17,2,0.8571428571428571,0.8571428571428571,1.0
2db6426d0278b24b751b9271b2f92eb4199de383,"added fault tolerant connection manager, which will be easily extended to support connection pooling
added support for multiple connections
removed dependence on setting keyspace name on opening connection",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-24 23:11:09-08:00,28800,2012-11-24 23:11:09-08:00,28800,True,False,"['connection.py', 'management.py', 'models.py', 'query.py', 'base.py', '__init__.py', 'test_management.py']",['823e21fdee28b8b1fa284fcd475b98a48d179520'],74,169,243,7,0.28,1.0,0.24
6816148ef5e1c9d3a173bfdc52043f94f338e827,removing and get_connection and editing files depending on it,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 10:47:32-08:00,28800,2012-11-25 10:47:32-08:00,28800,True,False,"['connection.py', 'management.py', 'query.py']",['2db6426d0278b24b751b9271b2f92eb4199de383'],27,3,30,3,0.9411764705882353,0.0,0.0
3038afbfc17a02d3e105222689f6ddc2bcacc9e6,adding BSD3 license and authors file,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 11:00:42-08:00,28800,2012-11-25 11:00:42-08:00,28800,True,False,"['AUTHORS', 'LICENSE']",['6816148ef5e1c9d3a173bfdc52043f94f338e827'],0,17,17,2,,,
f0686a50af396454ab06bf4b9a86091119111282,updating readme,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 11:49:33-08:00,28800,2012-11-25 11:49:33-08:00,28800,True,False,['README.md'],['3038afbfc17a02d3e105222689f6ddc2bcacc9e6'],11,66,77,1,,,
1038b6b13251b8784ddc302c524e5d6ddc0cf5ff,"added automatic keyspace generation to create_column_family
added checks for existing keyspaces in create_keyspace and delete_keyspace",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 11:54:49-08:00,28800,2012-11-25 11:54:49-08:00,28800,True,False,['management.py'],['f0686a50af396454ab06bf4b9a86091119111282'],5,11,16,1,0.5,0.5,1.0
382a63875b83ec7a2ab267559e60caec42abfe55,changing docs url,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 12:16:33-08:00,28800,2012-11-25 12:16:33-08:00,28800,True,False,['README.md'],['1038b6b13251b8784ddc302c524e5d6ddc0cf5ff'],1,1,2,1,,,
11e217203c3d6523a03fbdd7fdff8d04494038e6,refactoring BaseColumn name,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 14:44:05-08:00,28800,2012-11-25 14:44:05-08:00,28800,True,False,"['columns.py', 'models.py']",['382a63875b83ec7a2ab267559e60caec42abfe55'],14,15,29,2,,,
bf62e234ecd86e040eb74827d8c9d3cc5bd71f53,"added double/single precision option to float field
fixing some old references to BaseColumn",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 15:20:02-08:00,28800,2012-11-25 15:20:02-08:00,28800,True,False,"['columns.py', 'models.py', 'test_validation.py']",['11e217203c3d6523a03fbdd7fdff8d04494038e6'],2,6,8,3,1.0,1.0,0.0
f62cc9dab6b7f8a3a5c80c324216805881094eea,adding scary alpha warning,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 18:28:13-08:00,28800,2012-11-25 18:28:13-08:00,28800,True,False,['README.md'],['bf62e234ecd86e040eb74827d8c9d3cc5bd71f53'],0,2,2,1,,,
bd940eff49e1877ffbb4c9487a67d451db2c8349,adding datetime and decimal columns and tests,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 18:28:35-08:00,28800,2012-11-25 18:28:35-08:00,28800,True,False,"['columns.py', 'models.py', 'query.py', 'test_validation.py']",['f62cc9dab6b7f8a3a5c80c324216805881094eea'],9,70,79,4,1.0,1.0,1.0
168c1136023e81df93f7c1ea69e25ebfe24e0a61,adding setuptools stuff,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 18:56:38-08:00,28800,2012-11-25 18:56:38-08:00,28800,True,False,"['MANIFEST.in', '__init__.py', 'setup.py']",['bd940eff49e1877ffbb4c9487a67d451db2c8349'],0,50,50,3,,,
f6c51ae55e23a3fdaeb0d9fc9b0bca61acaaf5e2,adding cql dependency,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 19:04:28-08:00,28800,2012-11-25 19:04:28-08:00,28800,True,False,['setup.py'],['168c1136023e81df93f7c1ea69e25ebfe24e0a61'],0,1,1,1,,,
1aa7f4ea11a0a96da69ce5b8a7dffad7386ad794,adding github dependency link,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 21:17:14-08:00,28800,2012-11-25 21:17:14-08:00,28800,True,False,['setup.py'],['f6c51ae55e23a3fdaeb0d9fc9b0bca61acaaf5e2'],0,1,1,1,,,
823ebbf8c7346b6d44908414d6e6318fa6dd7e55,removing old reference to con_pool from connection,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 21:49:24-08:00,28800,2012-11-25 21:49:24-08:00,28800,True,False,"['connection.py', 'setup.py']",['1aa7f4ea11a0a96da69ce5b8a7dffad7386ad794'],1,4,5,2,1.0,0.0,1.0
35b83d448577c0b90937cd1dcda994e2b3680de2,updating version,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 21:56:25-08:00,28800,2012-11-25 21:56:25-08:00,28800,True,False,"['__init__.py', 'setup.py']",['823ebbf8c7346b6d44908414d6e6318fa6dd7e55'],3,3,6,2,,,
69546acca86118e848bd72b7bddc74cd67595326,adding pip instructions,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-25 22:02:01-08:00,28800,2012-11-25 22:02:01-08:00,28800,True,False,['README.md'],['35b83d448577c0b90937cd1dcda994e2b3680de2'],1,3,4,1,,,
d844c0ddeb669108195ce1b6a0a119a176002d4a,adding queryset result caching and array indexing / slicing of querysets,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-26 21:54:53-08:00,28800,2012-11-26 21:54:53-08:00,28800,True,False,"['query.py', 'test_queryset.py']",['69546acca86118e848bd72b7bddc74cd67595326'],50,116,166,2,0.6551724137931034,0.41379310344827586,1.0
74181e2f31545c47c0feb3bcc23bf04ca6e85501,making the autogenerated table names a bit more readable,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-26 22:11:29-08:00,28800,2012-11-26 22:11:29-08:00,28800,True,False,['models.py'],['d844c0ddeb669108195ce1b6a0a119a176002d4a'],2,11,13,1,1.0,1.0,1.0
70bea617f41b86a89435e43a703aaba1f809f01b,updating version,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-26 22:13:21-08:00,28800,2012-11-26 22:13:21-08:00,28800,True,False,"['__init__.py', 'setup.py']",['74181e2f31545c47c0feb3bcc23bf04ca6e85501'],3,3,6,2,,,
6c006578302a91a33d6a26fb6ad2aa9ceac42b90,added create shortcut classmethod on BaseModel,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-28 21:58:56-08:00,28800,2012-11-28 21:58:56-08:00,28800,True,False,"['README.md', 'models.py', 'test_model_io.py']",['70bea617f41b86a89435e43a703aaba1f809f01b'],11,15,26,3,1.0,1.0,1.0
40dda4d839cb8b2f90aedcaabe5da82d4b587f83,adding changelog,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-28 22:03:23-08:00,28800,2012-11-28 22:03:23-08:00,28800,True,False,['changelog'],['6c006578302a91a33d6a26fb6ad2aa9ceac42b90'],0,10,10,1,,,
fd39fac6aae5de612895820af1fbeab766207604,adding IDE stuff,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-29 21:23:03-08:00,28800,2012-11-29 21:23:03-08:00,28800,True,False,['.gitignore'],['40dda4d839cb8b2f90aedcaabe5da82d4b587f83'],0,5,5,1,,,
ba7c8c87ee20c97ed05f3a05e12c70cf7c6a5312,adding get method to QuerySet,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-29 21:24:02-08:00,28800,2012-11-29 21:24:02-08:00,28800,True,False,"['changelog', 'models.py', 'query.py', 'test_queryset.py']",['fd39fac6aae5de612895820af1fbeab766207604'],27,90,117,4,1.0,1.0,1.0
10d753be8def8a3cd10bd5cd67ee7d0068882923,adding partition key validation to delete method,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-11-29 21:41:24-08:00,28800,2012-11-29 21:41:24-08:00,28800,True,False,"['changelog', 'query.py', 'test_queryset.py']",['ba7c8c87ee20c97ed05f3a05e12c70cf7c6a5312'],5,12,17,3,1.0,1.0,1.0
1cd37d65b0162250a2b68f84304262aaa3b79e71,removing foreign key stub,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-12-01 09:43:09-08:00,28800,2012-12-01 09:43:09-08:00,28800,True,False,['columns.py'],['10d753be8def8a3cd10bd5cd67ee7d0068882923'],6,0,6,1,0.0,0.0,0.0
798686cd9d7fc570a82dff48ddbafbdb8a2b57e2,"changing the create_column_family and delete_column_family management functions to create_table and delete_table, respectively",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-12-02 10:00:38-08:00,28800,2012-12-02 10:00:38-08:00,28800,True,False,"['README.md', 'changelog', 'management.py', 'test_validation.py', 'test_model_io.py', 'test_queryset.py']",['1cd37d65b0162250a2b68f84304262aaa3b79e71'],21,23,44,6,,,
112da2a6a89ea2a920fe4faa189c2b20bb575c26,Adding sphinx documentation,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-12-02 10:44:49-08:00,28800,2012-12-02 10:44:49-08:00,28800,True,False,"['.gitignore', 'changelog', 'Makefile', 'conf.py', 'index.rst', 'make.bat', 'columns.rst', 'connection.rst', 'manage_schemas.rst', 'models.rst', 'queryset.rst', 'requirements.txt']",['798686cd9d7fc570a82dff48ddbafbdb8a2b57e2'],0,1213,1213,12,,,
db3a7751fb08f2041219d9900bc7ad3e73f8cd35,updating documentation link,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-12-02 10:51:42-08:00,28800,2012-12-02 10:51:42-08:00,28800,True,False,['README.md'],['112da2a6a89ea2a920fe4faa189c2b20bb575c26'],1,1,2,1,,,
7afe9300ff37c788536434fd966c274e6611700f,updating version#,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-12-02 11:02:09-08:00,28800,2012-12-02 11:02:09-08:00,28800,True,False,"['changelog', '__init__.py', 'conf.py', 'setup.py']",['db3a7751fb08f2041219d9900bc7ad3e73f8cd35'],5,5,10,4,,,
192f1914b3ddfe4ca647908481afdf977ea6fb79,Add Connection Pooling,Eric Scrivner,eric@grapheffect.com,Eric Scrivner,eric@grapheffect.com,2012-12-03 20:22:42-08:00,28800,2012-12-03 20:22:42-08:00,28800,True,False,"['connection.py', 'test_management.py', 'requirements.txt']",['7afe9300ff37c788536434fd966c274e6611700f'],5,121,126,3,0.9672131147540983,1.0,0.9672131147540983
5118c36de91f424a1b63839020fa6cab88734818,expanding the connection manager a bit,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-12-04 22:29:50-08:00,28800,2012-12-04 22:29:50-08:00,28800,True,False,['connection.py'],['8227e5318bba9f776310d6ea07e3b4495c199d9c'],17,14,31,1,0.0,0.0,0.5
43cbca139d53067a0884aea4f669bc38967726cb,adding connection pool support to the queryset,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-12-04 22:30:07-08:00,28800,2012-12-04 22:30:07-08:00,28800,True,False,"['query.py', 'test_queryset.py']",['5118c36de91f424a1b63839020fa6cab88734818'],9,47,56,2,0.37037037037037035,0.37037037037037035,1.0
eb28b92dcf455307b9eb4fcb85ddd945443244be,adding convenience filter methods,Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-12-04 22:46:44-08:00,28800,2012-12-04 22:46:44-08:00,28800,True,False,['models.py'],['43cbca139d53067a0884aea4f669bc38967726cb'],0,12,12,1,1.0,1.0,1.0
1935bd1a0b5cca3f010d2c0a07a8de3bd2602b3f,"updating version, changelog, etc",Blake Eggleston,blake@blake-desktop.(none),Blake Eggleston,blake@blake-desktop.(none),2012-12-04 22:47:47-08:00,28800,2012-12-04 22:47:47-08:00,28800,True,False,"['AUTHORS', 'changelog', '__init__.py', 'setup.py']",['eb28b92dcf455307b9eb4fcb85ddd945443244be'],3,8,11,4,,,
57359a87ad3a6a4609b8017b75bfa7ef0be0b975,added timeuuid column,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-05 11:16:01-08:00,28800,2012-12-05 11:16:01-08:00,28800,True,False,"['columns.py', 'test_validation.py']",['1935bd1a0b5cca3f010d2c0a07a8de3bd2602b3f'],1,43,44,2,1.0,1.0,1.0
d38a71ea788b004c78928ee4752c8ecc18e74bfb,updating version#,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-05 11:16:37-08:00,28800,2012-12-05 11:16:37-08:00,28800,True,False,"['changelog', '__init__.py', 'setup.py']",['57359a87ad3a6a4609b8017b75bfa7ef0be0b975'],2,5,7,3,,,
119c0ac001f3f09c57de1d5a293f0f2e32020d88,updating docs version,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-05 15:30:09-08:00,28800,2012-12-05 15:30:09-08:00,28800,True,False,['conf.py'],['d38a71ea788b004c78928ee4752c8ecc18e74bfb'],2,2,4,1,,,
454f634b3410297ed1b2a7f67f46a044c3a3ee50,updating setup docs link,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-05 16:43:58-08:00,28800,2012-12-05 16:43:58-08:00,28800,True,False,['setup.py'],['119c0ac001f3f09c57de1d5a293f0f2e32020d88'],2,2,4,1,,,
e53a5031ae6ba8bf319e24a6617906d0c1067f65,fixed manual table name bugs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-07 15:10:42-08:00,28800,2012-12-07 15:10:42-08:00,28800,True,False,"['changelog', 'models.py', 'test_class_construction.py', 'models.rst']",['454f634b3410297ed1b2a7f67f46a044c3a3ee50'],19,45,64,4,1.0,1.0,1.0
eae926b6710cc8e74cc9a726f7db6a7628b31227,changing version number,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-07 15:13:00-08:00,28800,2012-12-07 15:13:00-08:00,28800,True,False,"['__init__.py', 'conf.py', 'setup.py']",['e53a5031ae6ba8bf319e24a6617906d0c1067f65'],4,4,8,3,,,
6b202c7e76ad182c1a9290fb0c0cfdd999cdae89,added ability to specifiy replication factor and replication strategy,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2012-12-11 18:53:14-08:00,28800,2012-12-11 18:54:51-08:00,28800,True,False,"['management.py', 'models.py', 'test_management.py']",['eae926b6710cc8e74cc9a726f7db6a7628b31227'],4,18,22,3,0.75,0.75,0.0
fd347707b29d63977a5a37c934e6481c17c0e0f9,updating version# and change log,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-12 11:58:02-08:00,28800,2012-12-12 11:58:02-08:00,28800,True,False,"['changelog', '__init__.py', 'conf.py', 'setup.py']",['7f57002467ca55cd2177fe3f7e79ddbe46346421'],4,8,12,4,,,
27e5069db961a23c85fe84e8a12aed9b2d36042f,updated readme,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2012-12-12 12:31:21-08:00,28800,2012-12-12 12:31:21-08:00,28800,True,False,['README.md'],['fd347707b29d63977a5a37c934e6481c17c0e0f9'],28,33,61,1,,,
3c5b7df847130366fae1c99f0f401a2840531720,readme improvements,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2012-12-12 12:35:26-08:00,28800,2012-12-12 12:35:26-08:00,28800,True,False,['README.md'],['27e5069db961a23c85fe84e8a12aed9b2d36042f'],26,22,48,1,,,
b1c9ad6f8e55876b776099b240f1872a3f26a551,updating docs/readme,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-13 09:32:52-08:00,28800,2012-12-13 09:34:09-08:00,28800,True,False,"['README.md', 'index.rst']",['fd347707b29d63977a5a37c934e6481c17c0e0f9'],32,30,62,2,,,
96a213b4b142af07e055a2d280c47a0a141f0e27,editing doc index,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-13 09:38:35-08:00,28800,2012-12-13 09:38:35-08:00,28800,True,False,['index.rst'],['2790e2e368bba1879fa8b064ae13e934afb15dd8'],21,21,42,1,,,
585c75a5bb4e0d0d482b9805c7dd40da715dfe7a,Fix Vagrant Box URL,Eric Scrivner,eric@grapheffect.com,Eric Scrivner,eric@grapheffect.com,2012-12-13 20:58:20-08:00,28800,2012-12-13 20:58:20-08:00,28800,True,False,['Vagrantfile'],['96a213b4b142af07e055a2d280c47a0a141f0e27'],2,2,4,1,,,
dc902163455f36c8ba34337373b24814829b028e,adding IDEA project files,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-22 21:41:09-08:00,28800,2012-12-22 21:41:09-08:00,28800,True,False,['.gitignore'],['96a213b4b142af07e055a2d280c47a0a141f0e27'],0,5,5,1,,,
cd4f9afbed749dd735880785b2061e93657032e9,fixing column inheritance and short circuiting table name inheritance,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-22 21:41:47-08:00,28800,2012-12-22 21:41:47-08:00,28800,True,False,"['models.py', 'test_class_construction.py']",['dc902163455f36c8ba34337373b24814829b028e'],3,36,39,2,0.5555555555555556,0.5555555555555556,0.5555555555555556
3e1f96c4f0d77fdadb81bb1d7578b1aa36546a98,adding not about short circuited table_name inheritance,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-22 21:45:42-08:00,28800,2012-12-22 21:45:42-08:00,28800,True,False,['models.rst'],['cd4f9afbed749dd735880785b2061e93657032e9'],1,1,2,1,,,
31633bb1a46f3d26b1d9390fefc9232de49f9b6e,updating version number and change log,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2012-12-22 22:06:06-08:00,28800,2012-12-22 22:06:06-08:00,28800,True,False,"['changelog', '__init__.py', 'conf.py', 'setup.py']",['3e1f96c4f0d77fdadb81bb1d7578b1aa36546a98'],4,8,12,4,,,
e7d4f9bf9f260e50f70045da55a13e60c06a1c67,Changing base exception from BaseException to Exception,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-01-06 09:31:37-08:00,28800,2013-01-06 09:31:37-08:00,28800,True,False,['exceptions.py'],['1935bd1a0b5cca3f010d2c0a07a8de3bd2602b3f'],1,1,2,1,,,
79900278450364f8d064dcaaa7ac712a349c95bf,fixed bug where default values that evaluate to false were ignored,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-01-06 09:37:20-08:00,28800,2013-01-06 09:37:20-08:00,28800,True,False,"['columns.py', 'test_validation.py']",['48a0d7adeefc23391f8f54394f2d632dd7facb06'],1,10,11,2,1.0,1.0,1.0
e529f33dbed84f5efd74dffc8e0192e95aa08afe,adding magic methods for model instance equality comparisons,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-01-06 10:13:04-08:00,28800,2013-01-06 10:13:04-08:00,28800,True,False,"['models.py', 'test_equality_operations.py', 'test_model_io.py']",['79900278450364f8d064dcaaa7ac712a349c95bf'],1,58,59,3,1.0,1.0,1.0
16e4a6293288d272c0e8d02f9ae6e682bebca761,adding min & max length validation to the Text column type,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-01-06 10:28:07-08:00,28800,2013-01-06 10:28:07-08:00,28800,True,False,"['columns.py', 'test_validation.py']",['e529f33dbed84f5efd74dffc8e0192e95aa08afe'],0,60,60,2,1.0,0.725,0.9
d0ac0cfcd99cb2619401e886c5fed7f058edfa5f,"updating version number, documentation, and changelog",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-01-06 10:38:10-08:00,28800,2013-01-06 10:38:10-08:00,28800,True,False,"['changelog', '__init__.py', 'conf.py', 'columns.rst', 'setup.py']",['16e4a6293288d272c0e8d02f9ae6e682bebca761'],4,17,21,5,,,
9386d55513ae9233e2281c8f0ffbabf37ce656f9,"fixed a bug in table auto naming, which would fail if the generated name started with an _",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-08 07:04:49-08:00,28800,2013-02-08 07:04:49-08:00,28800,True,False,['models.py'],['e260084857a50b460a9e2e70ca2789d594903e7a'],0,1,1,1,0.0,1.0,1.0
2aa17094e3af71bb3cad7b3508f703376973e3d4,adding check for existing indexes,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-08 07:28:19-08:00,28800,2013-02-08 07:28:19-08:00,28800,True,False,"['management.py', 'test_model_io.py']",['9386d55513ae9233e2281c8f0ffbabf37ce656f9'],2,13,15,2,0.375,0.375,1.0
b8ba592ede1d59a2ee5b3d9ef213c8eb7b5ab6f8,version number bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-08 07:32:39-08:00,28800,2013-02-08 07:32:39-08:00,28800,True,False,"['changelog', '__init__.py', 'conf.py', 'setup.py']",['7771c709cadb011651e1bb6d6766ddbdc352c3e8'],4,7,11,4,,,
ba53c61b7b66cac2340b845e7cccdfa6911ce805,fixing potential bug with column family discovery,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-08 09:11:29-08:00,28800,2013-02-08 09:11:29-08:00,28800,True,False,['management.py'],['b8ba592ede1d59a2ee5b3d9ef213c8eb7b5ab6f8'],2,2,4,1,,,
7467f868976f61785229e0461b4a147b1a30d26c,version number bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-08 09:12:12-08:00,28800,2013-02-08 09:12:12-08:00,28800,True,False,"['__init__.py', 'conf.py', 'setup.py']",['ba53c61b7b66cac2340b845e7cccdfa6911ce805'],4,4,8,3,,,
b76244a2f4acffe6b2e0d5bab5f21f21a5111588,updating docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-08 09:44:13-08:00,28800,2013-02-08 09:44:13-08:00,28800,True,False,"['README.md', 'index.rst']",['7467f868976f61785229e0461b4a147b1a30d26c'],16,16,32,2,,,
2d6aab505b6a387ede22b3f80da028306d8ed631,adding support for 1.2 style keyspace creation,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-23 10:01:54-08:00,28800,2013-02-23 10:01:54-08:00,28800,True,False,"['connection.py', 'management.py']",['b76244a2f4acffe6b2e0d5bab5f21f21a5111588'],7,41,48,2,0.0,0.0,0.0
daadbeb364c59998fd543d7e789bd0f171202209,"adding workaround for detecting existing tables, since 1.2 won't return the column family names with the describe keyspace method",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-23 10:12:34-08:00,28800,2013-02-23 10:12:34-08:00,28800,True,False,['management.py'],['2d6aab505b6a387ede22b3f80da028306d8ed631'],2,7,9,1,0.0,0.0,1.0
7fce1cda23d8a402fef5767e6a166ae309ee3597,fixing index creation to deal with broken schema discovery in cassandra 1.2,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-23 11:03:59-08:00,28800,2013-02-23 11:03:59-08:00,28800,True,False,"['management.py', 'query.py', 'test_model_io.py', 'test_queryset.py']",['daadbeb364c59998fd543d7e789bd0f171202209'],10,47,57,4,0.7142857142857143,0.7142857142857143,1.0
f37ee97f2e06f97815c0fdd059798b5f3e121ac0,adding support for the allow filtering flag in cassandra 1.2,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-23 12:51:46-08:00,28800,2013-02-23 12:51:46-08:00,28800,True,False,"['columns.py', 'models.py', 'query.py', 'test_queryset.py']",['7fce1cda23d8a402fef5767e6a166ae309ee3597'],1,37,38,4,0.6842105263157895,0.47368421052631576,0.7368421052631579
584c439434ebe93253fdc39ae098133c0f7db6ee,updating delete table to work with Cassandra 1.2,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-23 13:35:32-08:00,28800,2013-02-23 13:35:32-08:00,28800,True,False,"['management.py', 'test_management.py', 'test_datetime_queries.py']",['f37ee97f2e06f97815c0fdd059798b5f3e121ac0'],7,19,26,3,1.0,1.0,1.0
a20a26340787676847ef5a58e1d43602f6b89874,fixing datetime query bug,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-23 13:35:59-08:00,28800,2013-02-23 13:35:59-08:00,28800,True,False,"['query.py', 'test_datetime_queries.py', 'test_queryset.py']",['584c439434ebe93253fdc39ae098133c0f7db6ee'],4,48,52,3,1.0,1.0,1.0
64a68e9cf9e045cd64a97a00db2750be02971a1e,"fixing date time precision, and using utc time when turning the cal timestamp into a datetime",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-02-24 19:43:51-08:00,28800,2013-02-24 19:43:51-08:00,28800,True,False,"['columns.py', 'test_datetime_queries.py']",['a20a26340787676847ef5a58e1d43602f6b89874'],2,13,15,2,1.0,1.0,1.0
b9082eee334ae4c7ba88dec300b255f5f1ddcf88,Initial commit,Tyler Hobbs,tylerlhobbs@gmail.com,Tyler Hobbs,tylerlhobbs@gmail.com,2013-02-27 16:16:37-08:00,28800,2013-02-27 16:16:37-08:00,28800,True,False,['README.md'],[],0,4,4,1,,,
e87d50d12ef404f61879854b60876ba19dfd90fc,Dump of current work in progress,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-02-27 18:19:09-06:00,21600,2013-02-27 18:19:09-06:00,21600,True,False,"['.gitignore', '__init__.py', 'cluster.py', 'connection.py', 'cqltypes.py', 'decoder.py', 'marshal.py', 'metadata.py', 'policies.py']",['b9082eee334ae4c7ba88dec300b255f5f1ddcf88'],0,2320,2320,9,0.7650042265426881,0.790363482671175,0.7379543533389687
b2e40c1b97b313e6d66a97bd075374bcda23f7b7,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-01 07:36:28-08:00,28800,2013-03-01 07:37:42-08:00,28800,True,False,['changelog'],['64a68e9cf9e045cd64a97a00db2750be02971a1e'],0,6,6,1,,,
320682c76de1db16545771e3ad3e7452c5d33906,adding support for cal helper functions,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-01 08:00:05-08:00,28800,2013-03-01 08:00:05-08:00,28800,True,False,"['functions.py', 'models.py', 'query.py', 'test_queryoperators.py']",['b2e40c1b97b313e6d66a97bd075374bcda23f7b7'],1,86,87,4,1.0,1.0,1.0
b4e09a324c9ba89b142d2ff764a851c69da635dc,testing min and max timeuuid functions with related debugging,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-02 17:13:51-08:00,28800,2013-03-02 17:13:51-08:00,28800,True,False,"['functions.py', 'query.py', 'test_queryoperators.py', 'test_queryset.py']",['320682c76de1db16545771e3ad3e7452c5d33906'],2,68,70,4,0.425,1.0,1.0
684501de389f016fad9b9ee1fb352ea0a6c99abb,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-02 19:31:11-08:00,28800,2013-03-02 19:31:11-08:00,28800,True,False,['changelog'],['b4e09a324c9ba89b142d2ff764a851c69da635dc'],1,2,3,1,,,
9aba6e469e27692fde5173d9d21c729236d22c9a,adding container columns,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-05 21:26:15-08:00,28800,2013-03-05 21:26:15-08:00,28800,True,False,"['columns.py', 'management.py', 'test_container_columns.py']",['684501de389f016fad9b9ee1fb352ea0a6c99abb'],3,284,287,3,0.8776978417266187,0.920863309352518,0.8345323741007195
7ab2585cb7e4786f56f378674ece0ac0b708de76,adding tests around container column type validation,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-05 21:47:15-08:00,28800,2013-03-05 21:47:15-08:00,28800,True,False,['test_container_columns.py'],['9aba6e469e27692fde5173d9d21c729236d22c9a'],1,22,23,1,1.0,1.0,1.0
412412bfb8c1ed68095ac43557f6e8ba27f1e09d,fixing failing unit test,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-05 21:47:57-08:00,28800,2013-03-05 21:47:57-08:00,28800,True,False,['test_model_io.py'],['7ab2585cb7e4786f56f378674ece0ac0b708de76'],1,1,2,1,,,
eb2fe8c21fa12e279124689d4f3bcb274be3ea65,adding collection types to changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-05 21:53:22-08:00,28800,2013-03-05 21:53:22-08:00,28800,True,False,['changelog'],['412412bfb8c1ed68095ac43557f6e8ba27f1e09d'],0,1,1,1,,,
f1119db1c24bdad5237987059c11646404ba7d7a,adding functions to the base module,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-05 22:24:11-08:00,28800,2013-03-05 22:24:11-08:00,28800,True,False,['__init__.py'],['eb2fe8c21fa12e279124689d4f3bcb274be3ea65'],0,1,1,1,,,
61235126bf84b86aa71655d5383228355b0b53df,adding new features to the documentation,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-05 22:24:26-08:00,28800,2013-03-05 22:24:26-08:00,28800,True,False,"['columns.rst', 'models.rst', 'queryset.rst']",['f1119db1c24bdad5237987059c11646404ba7d7a'],2,94,96,3,,,
cb5945f96cc76d71f81cc878a6d20a54f47cd511,renaming the value manager's initial_value field to previous_value,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-06 20:41:13-08:00,28800,2013-03-06 20:41:13-08:00,28800,True,False,"['columns.py', 'test_model_io.py']",['61235126bf84b86aa71655d5383228355b0b53df'],3,13,16,2,1.0,1.0,1.0
da3895aeb35b934494a3a5be528c7e4125aa3180,adding flags for checking if an object has been persisted and if it can be persisted with an update,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-06 21:13:19-08:00,28800,2013-03-06 21:13:19-08:00,28800,True,False,"['models.py', 'query.py', 'test_model_io.py']",['cb5945f96cc76d71f81cc878a6d20a54f47cd511'],2,67,69,3,1.0,1.0,1.0
e77c056f98f638e02e459fc32ea8290110a0a5f9,adding support for either insert or update statements on object persistence,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-06 22:12:52-08:00,28800,2013-03-06 22:12:52-08:00,28800,True,False,"['query.py', 'test_model_io.py']",['da3895aeb35b934494a3a5be528c7e4125aa3180'],7,87,94,2,0.6041666666666666,0.6041666666666666,1.0
fcae60188e8b6ce7e58ced825bfd56bc5820df3d,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-06 22:14:16-08:00,28800,2013-03-06 22:14:16-08:00,28800,True,False,['changelog'],['e77c056f98f638e02e459fc32ea8290110a0a5f9'],0,1,1,1,,,
54d4b804c4f10926a10c8e7bf9c2703917aead84,adding test around deleting multi key models,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-07 21:59:55-08:00,28800,2013-03-07 21:59:55-08:00,28800,True,False,['test_model_io.py'],['fcae60188e8b6ce7e58ced825bfd56bc5820df3d'],0,28,28,1,1.0,1.0,1.0
dc6031ae9234b9c7333b89ddb0fc95923140df00,Implementing batch queries (not tested yet),Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-07 22:43:42-08:00,28800,2013-03-07 22:43:42-08:00,28800,True,False,"['models.py', 'query.py', 'test_batch_query.py']",['54d4b804c4f10926a10c8e7bf9c2703917aead84'],52,173,225,3,0.25316455696202533,0.8860759493670886,0.7848101265822784
241c942334a049cb9d6d3ceac700ea8afad6e4f4,"restructuring some of the batch query internals, putting some unit tests around batch querying",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-09 17:43:10-08:00,28800,2013-03-09 17:43:10-08:00,28800,True,False,"['models.py', 'query.py', 'test_batch_query.py']",['dc6031ae9234b9c7333b89ddb0fc95923140df00'],20,133,153,3,0.9821428571428571,1.0,0.8571428571428571
66ca79f7779b6ade94e2ee89641fd934eaeee8ed,adding documentation for batch queries,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-09 18:18:20-08:00,28800,2013-03-09 18:18:20-08:00,28800,True,False,"['__init__.py', 'queryset.rst']",['241c942334a049cb9d6d3ceac700ea8afad6e4f4'],0,29,29,2,,,
af50ced2df9ddd3d0dbcfc41910d79080a65dff0,adding support for partial updates for set columns,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-10 14:11:16-07:00,25200,2013-03-10 14:11:16-07:00,25200,True,False,"['columns.py', 'models.py', 'query.py', 'test_container_columns.py']",['66ca79f7779b6ade94e2ee89641fd934eaeee8ed'],6,102,108,4,0.4909090909090909,0.34545454545454546,0.4909090909090909
cdb1dc964287442dab13eb2300a2f4140e1d5ffb,adding support for partial updates for list columns,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-10 19:13:07-07:00,25200,2013-03-10 19:13:07-07:00,25200,True,False,"['columns.py', 'test_container_columns.py']",['af50ced2df9ddd3d0dbcfc41910d79080a65dff0'],2,88,90,2,0.35714285714285715,0.17857142857142858,0.39285714285714285
a6332f12a0447458a97a49a5c12533311ea36efb,adding support for partial updates for map columns,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-10 19:53:22-07:00,25200,2013-03-10 19:53:22-07:00,25200,True,False,"['columns.py', 'query.py', 'test_container_columns.py']",['cdb1dc964287442dab13eb2300a2f4140e1d5ffb'],11,112,123,3,0.49122807017543857,0.5263157894736842,0.43859649122807015
bd7c5c080a648e3e9d2e500a208a6aa432159765,fixing failing unit test,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-10 20:00:39-07:00,25200,2013-03-10 20:00:39-07:00,25200,True,False,['test_container_columns.py'],['a6332f12a0447458a97a49a5c12533311ea36efb'],1,1,2,1,,,
7f1d0c9e80e692c3244ebfd61a00b1bce0e6a846,adding user configurable keyspace,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-11 18:59:27-07:00,25200,2013-03-11 18:59:27-07:00,25200,True,False,"['connection.py', 'management.py', 'models.py', 'query.py', 'base.py']",['bd7c5c080a648e3e9d2e500a208a6aa432159765'],10,25,35,5,0.5,0.0,0.5
f04c831ec0b69f4eb44bf6f08b1592dcc4c86b1b,fixing bug caused by batch objects on querysets being copied,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-12 10:11:55-07:00,25200,2013-03-12 10:11:55-07:00,25200,True,False,"['query.py', 'test_batch_query.py']",['7f1d0c9e80e692c3244ebfd61a00b1bce0e6a846'],2,20,22,2,1.0,1.0,1.0
1dd34e0029068a1eb9dcff75f6ac639e69c5b2ee,updating batch query to work with 1.2,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-12 21:57:23-07:00,25200,2013-03-12 21:57:23-07:00,25200,True,False,"['query.py', 'test_batch_query.py']",['f04c831ec0b69f4eb44bf6f08b1592dcc4c86b1b'],14,10,24,2,1.0,0.0,0.0
fb99a4d70e63f6a2541f54175b89b20b0b9ad865,updating batch query to work with 1.2,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-12 21:57:23-07:00,25200,2013-03-12 21:58:16-07:00,25200,True,False,"['query.py', 'test_batch_query.py', 'test_batch_query.py']",['f04c831ec0b69f4eb44bf6f08b1592dcc4c86b1b'],14,116,130,3,1.0,1.0,1.0
827bf18d6b87640ca37ae60ffd4b636d42a79b24,include cf name in auto generated index name,Mariusz Kryński,mrk@sed.pl,Mariusz Kryński,mrk@sed.pl,2013-03-13 23:15:31+01:00,-3600,2013-03-13 23:15:31+01:00,-3600,True,False,['management.py'],['4f459a2078c41d9ad0b39268117bd7653d19b648'],1,1,2,1,,,
fa5547573d478ee57ac0e29ac9bc9c89dc2e596f,"enable indexes on models with multiple primary keys (supported since
cassandra 1.2)",Mariusz Kryński,mrk@sed.pl,Mariusz Kryński,mrk@sed.pl,2013-03-13 23:23:17+01:00,-3600,2013-03-13 23:23:17+01:00,-3600,True,False,['models.py'],['827bf18d6b87640ca37ae60ffd4b636d42a79b24'],6,0,6,1,1.0,1.0,1.0
1481391fa6ee3c7f993a1057beaaad7926c5dba2,connection.setup 'lazy' parameter,Mariusz Kryński,mrk@sed.pl,Mariusz Kryński,mrk@sed.pl,2013-03-15 13:55:05+01:00,-3600,2013-03-15 13:55:05+01:00,-3600,True,False,['connection.py'],['fa5547573d478ee57ac0e29ac9bc9c89dc2e596f'],4,5,9,1,0.0,0.0,0.0
3b740afd32e25684398a6b08facaf949a9417e9b,"More progress on queries, connection pooling",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-03-20 16:40:09-05:00,18000,2013-03-20 16:40:09-05:00,18000,True,False,"['cluster.py', 'connection.py', 'metadata.py', 'pool.py', 'query.py']",['e87d50d12ef404f61879854b60876ba19dfd90fc'],14,407,421,5,0.6470588235294118,0.7254901960784313,0.8823529411764706
5668cd1be77daca35335f5c9756849ce393c3a36,Get min/max requests/conns settings from Cluster,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-03-20 17:44:38-05:00,18000,2013-03-20 17:44:38-05:00,18000,True,False,"['cluster.py', 'pool.py']",['3b740afd32e25684398a6b08facaf949a9417e9b'],17,73,90,2,0.1891891891891892,0.972972972972973,0.35135135135135137
f94283f0335126178952c2fc9c09bb66d15ead4d,fixing in operator per https://github.com/bdeggleston/cqlengine/issues/34,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-20 19:24:33-07:00,25200,2013-03-20 19:24:33-07:00,25200,True,False,"['query.py', 'test_queryset.py']",['378c2e7879aa203280cea0e31102ded6d7d2b612'],0,25,25,2,1.0,1.0,1.0
e10237e8558e2058eee56a28396feea4cb25d50e,"changing list column behavior to load lists, not tuples, from the database",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-20 19:28:33-07:00,25200,2013-03-20 19:28:33-07:00,25200,True,False,"['columns.py', 'test_container_columns.py']",['f94283f0335126178952c2fc9c09bb66d15ead4d'],2,6,8,2,1.0,1.0,1.0
5c9d8ef31117246c6bf241ec1f51a6f4d447778a,"Progress on metadata, control connection, executors",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-03-21 18:15:47-05:00,18000,2013-03-21 18:15:47-05:00,18000,True,False,"['cluster.py', 'connection.py', 'decoder.py', 'metadata.py', 'pool.py']",['5668cd1be77daca35335f5c9756849ce393c3a36'],113,424,537,5,0.4669811320754717,0.5660377358490566,0.9198113207547169
cad39537efecb9847ddab2dda9bbe2add6fd0be6,Ignore empty batches instead of sending invalid CQL to Cassandra.,Kai Lautaportti,kai.lautaportti@hexagonit.fi,Kai Lautaportti,kai.lautaportti@hexagonit.fi,2013-03-22 09:52:18+02:00,-7200,2013-03-22 09:52:18+02:00,-7200,True,False,"['query.py', 'test_batch_query.py']",['e10237e8558e2058eee56a28396feea4cb25d50e'],4,14,18,2,0.0,1.0,1.0
beb1f48760cb597f179fb7286b15def4cb4a79fe,"Allow multiple ORDER BY conditions to be set.

Supports both .order_by('foo', 'bar') and chained .order_by() calls.",Kai Lautaportti,kai.lautaportti@hexagonit.fi,Kai Lautaportti,kai.lautaportti@hexagonit.fi,2013-03-22 10:11:45+02:00,-7200,2013-03-22 10:11:45+02:00,-7200,True,False,"['query.py', 'test_queryset.py']",['e10237e8558e2058eee56a28396feea4cb25d50e'],32,58,90,2,0.7333333333333333,0.8,1.0
c4d4eb874e79250b855199c375c6f53dd4fc01ea,"Added a derived Date type.

Internally it is stored as a timestamp but the value is
exposed as a  instance.",Kai Lautaportti,kai.lautaportti@hexagonit.fi,Kai Lautaportti,kai.lautaportti@hexagonit.fi,2013-03-22 10:20:03+02:00,-7200,2013-03-22 10:20:03+02:00,-7200,True,False,"['columns.py', 'test_validation.py']",['e10237e8558e2058eee56a28396feea4cb25d50e'],8,67,75,2,1.0,1.0,1.0
1cffc497e394f1d62b6d6f09d1217b013ea91f61,adding test around chaining order_by statements,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-23 21:54:54-07:00,25200,2013-03-23 21:54:54-07:00,25200,True,False,"['base.py', 'test_queryset.py', 'requirements.txt']",['b586ab9f9dfb0363bead8a090e535d6e4ca7a77e'],2,5,7,3,1.0,1.0,1.0
92e37c96c81211d57265661dc16b1bccaee40ed6,making date deserialize with utc timezone,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-23 22:01:46-07:00,25200,2013-03-23 22:01:46-07:00,25200,True,False,['columns.py'],['cbf85c95ccdcc05f25776938b1dbb85a884874f2'],1,1,2,1,,,
5a6c276a887d38da1cae8cfb90188c60bf298a38,"modifying pk comparison to look at the db_field_name, so it's not dependent on the ids being identical",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-03-23 22:04:00-07:00,25200,2013-03-23 22:04:00-07:00,25200,True,False,['query.py'],['92e37c96c81211d57265661dc16b1bccaee40ed6'],1,1,2,1,,,
84de3e6a7647142a7a19ddf5a59a93da81db52d5,Add handlers for event messages,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-03-27 11:11:46-05:00,18000,2013-03-27 11:11:46-05:00,18000,True,False,['cluster.py'],['5c9d8ef31117246c6bf241ec1f51a6f4d447778a'],7,33,40,1,1.0,1.0,1.0
4c5601f6a221fb053a669feda43f30d511dc84d2,Add per-Host and ControlConnection reconnection handlers,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-03-27 15:30:32-05:00,18000,2013-03-27 15:30:32-05:00,18000,True,False,"['cluster.py', 'policies.py', 'pool.py']",['84de3e6a7647142a7a19ddf5a59a93da81db52d5'],12,178,190,3,1.0,1.0,0.7068965517241379
2c1cb095816ee7628837ad3072d29b3a35bf044f,Initial work on async engine for connections,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-03 14:45:38-05:00,18000,2013-04-03 14:45:38-05:00,18000,True,False,"['cluster.py', 'connection.py', 'decoder.py', 'pool.py', 'query.py']",['4c5601f6a221fb053a669feda43f30d511dc84d2'],260,290,550,5,1.0,1.0,0.0
38231f472787caf7a2b104efdb2694e4dcf4e6e3,Fix miscellaneous issues with Cluster startup,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-03 16:31:36-05:00,18000,2013-04-03 16:31:36-05:00,18000,True,False,"['cluster.py', 'connection.py', 'metadata.py', 'policies.py', 'pool.py']",['2c1cb095816ee7628837ad3072d29b3a35bf044f'],32,58,90,5,0.8823529411764706,1.0,0.6470588235294118
089f05b24f3bb4b8b5e9c0142818f16dc9e8dcac,"Basic working Cluster, Session, Connection, ResponseFuture",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-04 18:06:57-05:00,18000,2013-04-04 18:06:57-05:00,18000,True,False,"['cluster.py', 'connection.py', 'decoder.py', 'metadata.py', 'policies.py', 'pool.py', 'query.py']",['38231f472787caf7a2b104efdb2694e4dcf4e6e3'],180,294,474,7,0.6024096385542169,0.6506024096385542,1.0
294172b0db989777ab1ef9b6e0864a18de28887c,Create tests directory,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-10 14:10:53-05:00,18000,2013-04-10 14:10:53-05:00,18000,True,False,['__init__.py'],['089f05b24f3bb4b8b5e9c0142818f16dc9e8dcac'],0,0,0,1,,,
5160fbed147f38aabaa90ca3c01ecc3c8a262b96,"Add tests for load balancing policies, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-10 14:11:38-05:00,18000,2013-04-10 14:11:38-05:00,18000,True,False,"['policies.py', 'pool.py', 'test_policies.py']",['294172b0db989777ab1ef9b6e0864a18de28887c'],16,165,181,3,0.6346153846153846,0.8942307692307693,0.9903846153846154
04f1ae8ca0f29b5899248470b0d58ee4f654c469,Add tests for exponential recon. policy,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-10 14:33:13-05:00,18000,2013-04-10 14:33:13-05:00,18000,True,False,"['policies.py', 'test_policies.py']",['5160fbed147f38aabaa90ca3c01ecc3c8a262b96'],4,25,29,2,1.0,1.0,1.0
1af6b887f6e2d4a4c147eb3d13b554529e23b5e4,"RetryPolicy tests, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-10 15:11:47-05:00,18000,2013-04-10 15:11:47-05:00,18000,True,False,"['cluster.py', 'policies.py', 'test_policies.py']",['04f1ae8ca0f29b5899248470b0d58ee4f654c469'],20,163,183,3,0.2608695652173913,1.0,1.0
2bbd97e2e3fc7ed673272f2d80ce79cb91d339ea,Use pyev/libev for async I/O instead of asyncore,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-11 19:28:39-05:00,18000,2013-04-11 19:28:39-05:00,18000,True,False,['connection.py'],['1af6b887f6e2d4a4c147eb3d13b554529e23b5e4'],52,151,203,1,0.0,0.3058823529411765,0.611764705882353
0247e6ad197f88aa91df7f0a926d064628dbeda3,Remove unused read_frame function,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-11 19:29:23-05:00,18000,2013-04-11 19:29:23-05:00,18000,True,False,['decoder.py'],['2bbd97e2e3fc7ed673272f2d80ce79cb91d339ea'],13,0,13,1,0.0,0.0,0.0
7270a68336c39408570217e4c99e57ab6b39f099,Make ErrorMessage a subclass of BaseException,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-11 19:29:38-05:00,18000,2013-04-11 19:29:38-05:00,18000,True,False,['decoder.py'],['0247e6ad197f88aa91df7f0a926d064628dbeda3'],1,1,2,1,,,
e8d0a88fb398edd1c472d61f0483370bf0eca03f,Fix various minor issues with ResponseFuture,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-11 19:30:42-05:00,18000,2013-04-11 19:30:42-05:00,18000,True,False,['cluster.py'],['7270a68336c39408570217e4c99e57ab6b39f099'],3,5,8,1,0.5,0.5,0.5
09e22e6282f10a80d58846da9384ef383d876ada,Beginnings of Metadata unit tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-11 19:31:19-05:00,18000,2013-04-11 19:31:19-05:00,18000,True,False,['test_metadata.py'],['e8d0a88fb398edd1c472d61f0483370bf0eca03f'],0,53,53,1,1.0,1.0,1.0
c44f5673e689b765554b1f6691ac637273a38753,"Improve event loop handling, add Connection tests",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-16 15:42:45-05:00,18000,2013-04-16 15:42:45-05:00,18000,True,False,"['connection.py', 'test_connection.py']",['09e22e6282f10a80d58846da9384ef383d876ada'],44,192,236,2,0.8297872340425532,1.0,0.20212765957446807
34505ad657dc9b0c6edd34c12be454578c55937b,"ErrorMessage should extend Exception, not BaseException",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-16 16:24:11-05:00,18000,2013-04-16 16:24:11-05:00,18000,True,False,['decoder.py'],['c44f5673e689b765554b1f6691ac637273a38753'],1,1,2,1,,,
787f1304151b237bb76731d6132b8776ea043f8e,Notify event loop when connection is closed,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-16 16:25:36-05:00,18000,2013-04-16 16:25:36-05:00,18000,True,False,['connection.py'],['34505ad657dc9b0c6edd34c12be454578c55937b'],0,2,2,1,1.0,1.0,1.0
30c2db741c16551a9955a25fe0fed731cea1b602,Proper shutdown for Sessions,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-16 16:27:20-05:00,18000,2013-04-16 16:27:20-05:00,18000,True,False,['cluster.py'],['787f1304151b237bb76731d6132b8776ea043f8e'],4,15,19,1,1.0,1.0,1.0
ff6c19b6e2f08fc531bc9bc7b5e06667314db6b8,Misc fixes to test_metadata.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-16 16:27:45-05:00,18000,2013-04-16 16:27:45-05:00,18000,True,False,['test_metadata.py'],['30c2db741c16551a9955a25fe0fed731cea1b602'],12,23,35,1,1.0,1.0,1.0
e78ebba0c8e4b96703d8feecaef7b4e19b3f17d2,"Expanded metadata unit tests, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-16 19:54:40-05:00,18000,2013-04-16 19:54:40-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['ff6c19b6e2f08fc531bc9bc7b5e06667314db6b8'],6,52,58,2,0.0,1.0,1.0
4b4e22775ba1d073c8683600ff6139071d380eac,"More throrough metadata tests, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-17 15:04:43-05:00,18000,2013-04-17 15:04:43-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['e78ebba0c8e4b96703d8feecaef7b4e19b3f17d2'],41,174,215,2,0.8526315789473684,0.6210526315789474,0.6947368421052632
38139db65c1cf9c0c01d59a815b2a9121ddcb471,"Support CLUSTERING ORDER BY, unit tests",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-17 15:42:08-05:00,18000,2013-04-17 15:42:08-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['4b4e22775ba1d073c8683600ff6139071d380eac'],27,128,155,2,0.7727272727272727,0.7727272727272727,0.9696969696969697
e5ba4b8d55353dfede8543fbb24d7b1a359e3259,"Add tests for indexes on tables, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-17 15:52:09-05:00,18000,2013-04-17 15:52:09-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['38139db65c1cf9c0c01d59a815b2a9121ddcb471'],2,31,33,2,1.0,1.0,0.7391304347826086
2c4412e75fc9e6f507f5deaee98e1889e303b60c,"Token metadata support, tests, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-17 18:05:38-05:00,18000,2013-04-17 18:05:38-05:00,18000,True,False,"['cluster.py', 'metadata.py', 'test_metadata.py']",['e5ba4b8d55353dfede8543fbb24d7b1a359e3259'],22,166,188,3,0.7402597402597403,0.5714285714285714,0.7272727272727273
84ad2ca1c21dfcaeebd54c358b3e2e1433bd27c5,Avoid race condition restarting event loop,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-17 19:03:29-05:00,18000,2013-04-17 19:03:29-05:00,18000,True,False,['connection.py'],['2c4412e75fc9e6f507f5deaee98e1889e303b60c'],7,12,19,1,1.0,1.0,1.0
380ce3a8e39253a8911c4dba2d8d35d6adac1bc8,Close connection when gc'ed,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-17 19:03:58-05:00,18000,2013-04-17 19:03:58-05:00,18000,True,False,['connection.py'],['84ad2ca1c21dfcaeebd54c358b3e2e1433bd27c5'],6,9,15,1,1.0,1.0,1.0
fbc9d6d535d54b73776e204eae0332ee46521524,Connection.handle_error doesn't take any args,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-17 19:04:38-05:00,18000,2013-04-17 19:04:38-05:00,18000,True,False,['connection.py'],['380ce3a8e39253a8911c4dba2d8d35d6adac1bc8'],2,2,4,1,,,
149fdc672be51d397e8293cc8d156722322a8b6c,Avoid nose exiting connection test before it's complete,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-17 19:05:00-05:00,18000,2013-04-17 19:05:00-05:00,18000,True,False,['test_connection.py'],['fbc9d6d535d54b73776e204eae0332ee46521524'],9,29,38,1,0.0,1.0,0.6875
c6f45320a02ae32c9b9ab0ad9f1151d8da275999,Add murmur3 hash function to match cassandra,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-18 15:02:34-05:00,18000,2013-04-18 15:02:34-05:00,18000,True,False,"['metadata.py', 'murmur3.c', 'setup.py']",['149fdc672be51d397e8293cc8d156722322a8b6c'],13,209,222,3,0.4090909090909091,0.4090909090909091,0.4090909090909091
735d39a2e4b3637dbf73fe5e0c7e8102aa7f9865,Add build/ to .gitignore,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-18 15:03:06-05:00,18000,2013-04-18 15:03:06-05:00,18000,True,False,['.gitignore'],['c6f45320a02ae32c9b9ab0ad9f1151d8da275999'],0,1,1,1,,,
0a0bc51982d9d5cc2b33c20ef3dadca1bbf0d708,Make MD5 hash also match cassandra,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-18 15:26:26-05:00,18000,2013-04-18 15:26:26-05:00,18000,True,False,['metadata.py'],['735d39a2e4b3637dbf73fe5e0c7e8102aa7f9865'],4,15,19,1,1.0,1.0,1.0
e440c537a00d892cfa1e8e9a5b5bcb15916d0076,object doesn't implement __del__,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-18 15:37:06-05:00,18000,2013-04-18 15:37:06-05:00,18000,True,False,['connection.py'],['0a0bc51982d9d5cc2b33c20ef3dadca1bbf0d708'],1,0,1,1,0.0,0.0,0.0
39fdb2dbd5d9ea2d72f96c47b1e62bb232b56d0c,Raise ProtocolError in place of asserts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-18 15:56:04-05:00,18000,2013-04-18 15:56:04-05:00,18000,True,False,['connection.py'],['e440c537a00d892cfa1e8e9a5b5bcb15916d0076'],5,16,21,1,0.0,0.0,0.0
03ab99411ebe7fa3fd6e4e2b2706084298c0f580,Add docs to ReconnectionHandler,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-18 18:20:16-05:00,18000,2013-04-18 18:20:16-05:00,18000,True,False,['pool.py'],['39fdb2dbd5d9ea2d72f96c47b1e62bb232b56d0c'],2,27,29,1,,,
c651f09263aa3c798c235aa03b297a85defea158,Fix ReconnectionHandler scheduling behavior,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-18 18:20:39-05:00,18000,2013-04-18 18:20:39-05:00,18000,True,False,['pool.py'],['03ab99411ebe7fa3fd6e4e2b2706084298c0f580'],13,8,21,1,0.0,0.0,0.0
58d6b5abd9d098d6c7fb89207b7e364ded5a9020,Add support for SCHEMA_CHANGE event type,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-18 18:21:08-05:00,18000,2013-04-18 18:21:08-05:00,18000,True,False,['decoder.py'],['c651f09263aa3c798c235aa03b297a85defea158'],0,8,8,1,1.0,1.0,1.0
ab409f08e850a6d493ba256c2c0a8d643d289fbb,Implement handle_push in Connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-18 18:21:41-05:00,18000,2013-04-18 18:21:41-05:00,18000,True,False,['connection.py'],['58d6b5abd9d098d6c7fb89207b7e364ded5a9020'],3,5,8,1,1.0,1.0,1.0
accd447cda48ba735c25bc22d10fc2f9ccb50888,"Start testing ControlConnection, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-18 18:22:40-05:00,18000,2013-04-18 18:22:40-05:00,18000,True,False,"['cluster.py', 'test_control_connection.py']",['ab409f08e850a6d493ba256c2c0a8d643d289fbb'],29,132,161,2,0.972972972972973,0.7837837837837838,1.0
40d292c763cd247997c9648aec10b8f9afde7012,Full tests for wait_for_schema_agreement,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-18 18:50:56-05:00,18000,2013-04-18 18:50:56-05:00,18000,True,False,['test_control_connection.py'],['accd447cda48ba735c25bc22d10fc2f9ccb50888'],3,53,56,1,1.0,1.0,1.0
5789fb61212b062fb19cf560770ae72e0d4bf3b9,Minor cleanup in refresh_node_list_and_token_map,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-18 19:03:19-05:00,18000,2013-04-18 19:03:19-05:00,18000,True,False,['cluster.py'],['40d292c763cd247997c9648aec10b8f9afde7012'],13,5,18,1,1.0,1.0,0.0
9d0baa8d3b42a3551bfd1244ae9d4b3c2984d06b,More general setup for control connection tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-19 16:43:14-05:00,18000,2013-04-19 16:43:14-05:00,18000,True,False,['test_control_connection.py'],['5789fb61212b062fb19cf560770ae72e0d4bf3b9'],21,52,73,1,0.09375,1.0,1.0
b102010eece83f0f671907c4f224584f4f193d4b,"Tests for ControlConn node/token refresh, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-04-19 17:12:22-05:00,18000,2013-04-19 17:12:22-05:00,18000,True,False,"['cluster.py', 'test_control_connection.py']",['9d0baa8d3b42a3551bfd1244ae9d4b3c2984d06b'],6,69,75,2,0.9807692307692307,1.0,0.8653846153846154
2be6f3409c0b3fedc0e57bd99072e73571a30852,Fixed issue with trying to call .close() on a None,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-04-22 16:02:31-07:00,25200,2013-04-22 16:02:31-07:00,25200,True,False,['connection.py'],['5a6c276a887d38da1cae8cfb90188c60bf298a38'],5,4,9,1,1.0,0.0,1.0
d3298dd55c11f6569d42479df0ddcd39528797b6,Hold lock on Connection when closing,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 13:24:22-05:00,18000,2013-05-01 13:24:22-05:00,18000,True,False,"['cluster.py', 'connection.py']",['b102010eece83f0f671907c4f224584f4f193d4b'],1,7,8,2,0.8,1.0,0.8
78c41030b9ca56cf8f527bfbd981f0cc14c1b094,Don't delay removal of downed host,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 13:25:57-05:00,18000,2013-05-01 13:25:57-05:00,18000,True,False,['cluster.py'],['d3298dd55c11f6569d42479df0ddcd39528797b6'],1,1,2,1,,,
7003f6f60b9f54f5e8d0583d871ff8325c58631c,Don't start a second reconnection handler,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 13:26:20-05:00,18000,2013-05-01 13:26:20-05:00,18000,True,False,['cluster.py'],['78c41030b9ca56cf8f527bfbd981f0cc14c1b094'],1,2,3,1,1.0,1.0,1.0
723aac78fa5ef0e4025bb5d5eced11c55fbb7c85,Cleanup Connection compression tracking,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 13:35:00-05:00,18000,2013-05-01 13:35:00-05:00,18000,True,False,['connection.py'],['7003f6f60b9f54f5e8d0583d871ff8325c58631c'],10,6,16,1,1.0,0.0,1.0
9ea0d8b2d80131925c8449d309c23ec8df16b17e,Add auth/credentials support,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 13:55:43-05:00,18000,2013-05-01 13:55:43-05:00,18000,True,False,"['cluster.py', 'connection.py']",['723aac78fa5ef0e4025bb5d5eced11c55fbb7c85'],4,9,13,2,0.8,0.8,0.0
feac8b6c60366c75a242db8bdc73105336879b8c,Accept sockopts for Connection sockets,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 14:54:58-05:00,18000,2013-05-01 14:54:58-05:00,18000,True,False,"['cluster.py', 'connection.py']",['9ea0d8b2d80131925c8449d309c23ec8df16b17e'],4,20,24,2,0.25,1.0,0.0
fcf6b9f64afd1d2502b35cce88e62806798a912f,Add compression as a ctor kwarg for Connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 15:35:35-05:00,18000,2013-05-01 15:35:35-05:00,18000,True,False,['connection.py'],['feac8b6c60366c75a242db8bdc73105336879b8c'],4,4,8,1,,,
5eb17ef667bb7b3231448ce65bf02eae01403e8d,Use base class for ReconnectionPolicies,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 15:36:10-05:00,18000,2013-05-01 15:36:10-05:00,18000,True,False,['policies.py'],['fcf6b9f64afd1d2502b35cce88e62806798a912f'],2,12,14,1,1.0,1.0,1.0
31e9734f17dd5187ad799b8640cc7498a1b0efd1,Clean up cluster.py imports,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 15:36:59-05:00,18000,2013-05-01 15:36:59-05:00,18000,True,False,['cluster.py'],['5eb17ef667bb7b3231448ce65bf02eae01403e8d'],15,19,34,1,,,
91db8e62b40720bee5c6eee40d82a648d9eb8167,Create ConvictionPolicy base class,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 15:39:52-05:00,18000,2013-05-01 15:39:52-05:00,18000,True,False,['policies.py'],['31e9734f17dd5187ad799b8640cc7498a1b0efd1'],1,18,19,1,1.0,1.0,1.0
2aa1876a473c793d09f98c218b4d93536d15543c,"Clean up initialization, usage of policies",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 15:43:30-05:00,18000,2013-05-01 15:43:30-05:00,18000,True,False,"['cluster.py', 'pool.py']",['91db8e62b40720bee5c6eee40d82a648d9eb8167'],13,40,53,2,0.3333333333333333,0.3333333333333333,0.6666666666666666
a9124bcd69a3a8d4e76349026f3e8ec2995a4e30,Fix connection reference in early wait_for_schema_agreement,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 16:03:10-05:00,18000,2013-05-01 16:03:10-05:00,18000,True,False,['cluster.py'],['2aa1876a473c793d09f98c218b4d93536d15543c'],3,6,9,1,0.0,0.0,1.0
fa94057bf8e106d8cab2956dd3db4f60e8e41703,Refresh schema on SCHEMA_CHANGE ResultMessages,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 16:41:54-05:00,18000,2013-05-01 16:41:54-05:00,18000,True,False,"['cluster.py', 'connection.py', 'decoder.py']",['a9124bcd69a3a8d4e76349026f3e8ec2995a4e30'],6,30,36,3,0.55,0.55,0.85
34dff9272ec735be14a486af67383ec1eba71e98,"Properly working set_keyspace on session, connection, etc",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-01 17:54:51-05:00,18000,2013-05-01 17:54:51-05:00,18000,True,False,"['cluster.py', 'connection.py', 'pool.py']",['fa94057bf8e106d8cab2956dd3db4f60e8e41703'],18,42,60,3,0.13636363636363635,1.0,0.9090909090909091
723eba6a4847fbb9af96c9525cce207dfbe12d00,Cleanup/docs of config options on Cluster,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 14:11:34-05:00,18000,2013-05-02 14:11:34-05:00,18000,True,False,['cluster.py'],['34dff9272ec735be14a486af67383ec1eba71e98'],7,70,77,1,1.0,0.0,0.0
e973649f36d6edd6446f275736d93307b13f048c,Don't open conns until Cluster.connect() is called,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 14:11:51-05:00,18000,2013-05-02 14:11:51-05:00,18000,True,False,['cluster.py'],['723eba6a4847fbb9af96c9525cce207dfbe12d00'],9,16,25,1,0.0,1.0,1.0
4e70bc00a7b3fb96302ac6c2a29e463e07eabbb0,Test package setup and teardown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 14:12:36-05:00,18000,2013-05-02 14:12:36-05:00,18000,True,False,['__init__.py'],['e973649f36d6edd6446f275736d93307b13f048c'],0,62,62,1,0.0,0.4772727272727273,1.0
ee752150269891657d5e7dfdafa2d3d1d8cc648d,Minor updates to existing unit tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 14:13:05-05:00,18000,2013-05-02 14:13:05-05:00,18000,True,False,"['test_control_connection.py', 'test_metadata.py']",['4e70bc00a7b3fb96302ac6c2a29e463e07eabbb0'],4,7,11,2,1.0,1.0,1.0
28aee41ef96990c42c64627e6be584c00a01675a,Start of Cluster unit/integration tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 14:13:18-05:00,18000,2013-05-02 14:13:18-05:00,18000,True,False,['test_cluster.py'],['ee752150269891657d5e7dfdafa2d3d1d8cc648d'],0,37,37,1,0.0,1.0,1.0
7c6fa5295483fb438db3207c87e10c2e6fdd851d,"Use weakrefs, __del__ to stop event loop automatically",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 15:25:49-05:00,18000,2013-05-02 15:25:49-05:00,18000,True,False,"['cluster.py', 'connection.py', 'metadata.py', 'pool.py', 'test_metadata.py']",['28aee41ef96990c42c64627e6be584c00a01675a'],28,53,81,5,0.6,0.6,1.0
e180230edb6da3dec55a74d03bce226367db1744,Avoid unbound local var when refreshing ks metadata,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 16:33:09-05:00,18000,2013-05-02 16:33:09-05:00,18000,True,False,['metadata.py'],['7c6fa5295483fb438db3207c87e10c2e6fdd851d'],5,4,9,1,1.0,1.0,1.0
93d7069750c2121597c417237d4775fc8faed3ee,More reference cycle avoidance around ResponseFutures,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 16:34:36-05:00,18000,2013-05-02 16:34:36-05:00,18000,True,False,['cluster.py'],['e180230edb6da3dec55a74d03bce226367db1744'],14,23,37,1,0.5,0.5,0.0
42b2939fc51fb9bc6be5d62bf0eed5edb0db6698,Add test for submit_schema_refresh,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 16:35:17-05:00,18000,2013-05-02 16:35:17-05:00,18000,True,False,['test_cluster.py'],['93d7069750c2121597c417237d4775fc8faed3ee'],1,19,20,1,1.0,1.0,1.0
2563449f93e0b8fa683b6d65f0e910d704d6db94,Remove unneeded weakref error handling,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 16:50:02-05:00,18000,2013-05-02 16:50:02-05:00,18000,True,False,['cluster.py'],['42b2939fc51fb9bc6be5d62bf0eed5edb0db6698'],14,7,21,1,1.0,1.0,0.0
e6167d2cab3980071096a39c730f6c03eaaa0ae8,Add comments explaining weakref usages,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 16:53:04-05:00,18000,2013-05-02 16:53:04-05:00,18000,True,False,"['cluster.py', 'metadata.py', 'pool.py']",['2563449f93e0b8fa683b6d65f0e910d704d6db94'],0,11,11,3,,,
bd26be15f062e7f806d0c2a20ac1385acd18d19f,Avoid divide-by-zero when all hosts are down,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 17:36:29-05:00,18000,2013-05-02 17:36:29-05:00,18000,True,False,['policies.py'],['e6167d2cab3980071096a39c730f6c03eaaa0ae8'],2,5,7,1,1.0,1.0,1.0
f10b9ed3e3e6109a12176c8f58ab60d99b262e1f,Add missing 'self' param to conviction policy methods,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 17:36:48-05:00,18000,2013-05-02 17:36:48-05:00,18000,True,False,['policies.py'],['bd26be15f062e7f806d0c2a20ac1385acd18d19f'],2,2,4,1,,,
46ee8e2f777c3f9e902c28eb7f937f7f1abb4374,Correctly working get_and_set,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 17:37:50-05:00,18000,2013-05-02 17:37:50-05:00,18000,True,False,['pool.py'],['f10b9ed3e3e6109a12176c8f58ab60d99b262e1f'],5,3,8,1,0.0,0.0,0.0
6075ae2aac08582a48de798e7e1992a7b4dbf5b9,"Reconnection schedule is a generator, so use next()",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 17:38:16-05:00,18000,2013-05-02 17:38:16-05:00,18000,True,False,['pool.py'],['46ee8e2f777c3f9e902c28eb7f937f7f1abb4374'],2,2,4,1,,,
2a380319d4123602b83380925fe1484dd447fa45,"Signal failure, shutdown when pool fails to add conn to host",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 17:39:03-05:00,18000,2013-05-02 17:39:03-05:00,18000,True,False,['pool.py'],['6075ae2aac08582a48de798e7e1992a7b4dbf5b9'],1,3,4,1,0.0,0.0,1.0
f152589831a775bdbcaf4a4615f10e6c3f7b3e1e,Miscellaneous minor fixes to cluster.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 17:40:33-05:00,18000,2013-05-02 17:40:33-05:00,18000,True,False,['cluster.py'],['2a380319d4123602b83380925fe1484dd447fa45'],3,2,5,1,,,
b29c676003c91d4b370ce25bb4939a8fa1f6c881,Reconnection policy is not actually a factory,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 17:40:54-05:00,18000,2013-05-02 17:40:54-05:00,18000,True,False,['cluster.py'],['f152589831a775bdbcaf4a4615f10e6c3f7b3e1e'],11,7,18,1,,,
a04e8463599827975e28ed407d5e92bcd14838a8,"Test to exercise Cluster.on_up(), on_down()",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-02 17:41:14-05:00,18000,2013-05-02 17:41:14-05:00,18000,True,False,['test_cluster.py'],['b29c676003c91d4b370ce25bb4939a8fa1f6c881'],0,17,17,1,1.0,1.0,1.0
8ec6fc38a43eea201e7086c455fdccb54d5df7de,version number bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-02 22:21:56-07:00,25200,2013-05-02 22:21:56-07:00,25200,True,False,"['__init__.py', 'conf.py', 'setup.py']",['2be6f3409c0b3fedc0e57bd99072e73571a30852'],4,4,8,3,,,
23e2a08aa80478da7dad4598c92f564f706f3cb6,Start on ResponseFuture unit tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:14:21-05:00,18000,2013-05-03 18:14:21-05:00,18000,True,False,['test_cluster.py'],['a04e8463599827975e28ed407d5e92bcd14838a8'],2,145,147,1,0.67,1.0,1.0
6d34a00cee5b033bf285994af739a09419e447a2,Fix reference to wrong keyspace var in metadata,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:14:51-05:00,18000,2013-05-03 18:14:51-05:00,18000,True,False,['metadata.py'],['23e2a08aa80478da7dad4598c92f564f706f3cb6'],2,2,4,1,,,
9abb3d89d0e0b687b8091781a20a817464d9ef0f,Rename UAEErrorMessage to UnavailableErrorMessage,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:16:28-05:00,18000,2013-05-03 18:16:28-05:00,18000,True,False,"['cluster.py', 'decoder.py']",['6d34a00cee5b033bf285994af739a09419e447a2'],7,6,13,2,1.0,1.0,0.0
c7a77b8862551e73fd09b749316c422eee7a2308,Handle no hosts when populating load balancer,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:17:12-05:00,18000,2013-05-03 18:17:12-05:00,18000,True,False,['policies.py'],['9abb3d89d0e0b687b8091781a20a817464d9ef0f'],1,1,2,1,,,
59efe3c6abd7cf6422ee855f451b7d75a2aa699f,Initialize blank Connection attrs at class level,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:17:42-05:00,18000,2013-05-03 18:17:42-05:00,18000,True,False,['connection.py'],['c7a77b8862551e73fd09b749316c422eee7a2308'],10,16,26,1,1.0,0.0,1.0
d1104d5f071923663c2313ae7037dec7a6dd0804,Log when HostReconnector catches an exceptions,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:18:56-05:00,18000,2013-05-03 18:18:56-05:00,18000,True,False,['pool.py'],['59efe3c6abd7cf6422ee855f451b7d75a2aa699f'],1,4,5,1,1.0,1.0,0.0
b8b84ec32522f62e37e3619ad03441909af960c4,Still make callback if HostReconnector is cancelled,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:20:08-05:00,18000,2013-05-03 18:20:08-05:00,18000,True,False,['pool.py'],['d1104d5f071923663c2313ae7037dec7a6dd0804'],4,4,8,1,0.0,0.0,1.0
57a973ef59be7409d6ee44214f03a6822cd5c8ec,"Pass address, not Host to connection factory",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:20:50-05:00,18000,2013-05-03 18:20:50-05:00,18000,True,False,['pool.py'],['b8b84ec32522f62e37e3619ad03441909af960c4'],1,1,2,1,,,
6d5bec932ebf1f9f3e111e7569a8be351596aa23,Cancel reconnector when host conn pool is shutdown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:21:32-05:00,18000,2013-05-03 18:21:32-05:00,18000,True,False,['pool.py'],['57a973ef59be7409d6ee44214f03a6822cd5c8ec'],0,4,4,1,1.0,1.0,1.0
d40745bfcf39a3cb34b6c3ebe269e81d9879efe7,Use log.exception for logging exceptions,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:22:02-05:00,18000,2013-05-03 18:22:02-05:00,18000,True,False,['cluster.py'],['6d5bec932ebf1f9f3e111e7569a8be351596aa23'],2,2,4,1,,,
5b26d6bd8b71daf22797a595b86a6ed17f2555ff,"final_result may be None, so use a special object",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:24:29-05:00,18000,2013-05-03 18:24:29-05:00,18000,True,False,['cluster.py'],['d40745bfcf39a3cb34b6c3ebe269e81d9879efe7'],5,8,13,1,,,
444f7ba6d7ef947737d05a2fd05f32c8d85d2417,ResultMessage may not actually have a result,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:25:27-05:00,18000,2013-05-03 18:25:27-05:00,18000,True,False,['cluster.py'],['5b26d6bd8b71daf22797a595b86a6ed17f2555ff'],5,3,8,1,0.0,0.0,1.0
9008e022594341aa322f2cb3da3836026c65e5ca,Still set final result to None when setting keyspaces,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:25:54-05:00,18000,2013-05-03 18:25:54-05:00,18000,True,False,['cluster.py'],['444f7ba6d7ef947737d05a2fd05f32c8d85d2417'],0,1,1,1,0.0,0.0,1.0
8d64b10f60852c5e0a8c2d3e9d38b1872a299bbe,Don't call recv_response_info when it's not required,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:26:37-05:00,18000,2013-05-03 18:26:37-05:00,18000,True,False,['cluster.py'],['9008e022594341aa322f2cb3da3836026c65e5ca'],3,1,4,1,1.0,1.0,0.0
471f5f48f8f872d7a6da4ef43d8da51d322e2f70,Fix bad attribute references,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:27:23-05:00,18000,2013-05-03 18:27:23-05:00,18000,True,False,['cluster.py'],['8d64b10f60852c5e0a8c2d3e9d38b1872a299bbe'],5,5,10,1,,,
c9d4d831b36b89bc75fd2e51a8999ff250b52c36,Handle result being delivered before callbacks are attached,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:28:05-05:00,18000,2013-05-03 18:28:05-05:00,18000,True,False,['cluster.py'],['471f5f48f8f872d7a6da4ef43d8da51d322e2f70'],8,16,24,1,1.0,1.0,0.25
374a892d1d5514bf2eea507930e05b2ff3833dbe,Shutdown support and usage for Scheduler,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:29:21-05:00,18000,2013-05-03 18:29:21-05:00,18000,True,False,['cluster.py'],['c9d4d831b36b89bc75fd2e51a8999ff250b52c36'],9,33,42,1,0.0,0.0,0.9
713fc8fb3e2200626e7433bb1b681bdd437d7012,"Miscellaneous minor fixes, better logging",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-03 18:30:02-05:00,18000,2013-05-03 18:30:02-05:00,18000,True,False,['cluster.py'],['374a892d1d5514bf2eea507930e05b2ff3833dbe'],11,13,24,1,1.0,1.0,0.0
b8584770c0cf2a0b6c2713a4760b2a4b82ce4546,Token function,Mariusz Kryński,mrk@sed.pl,Mariusz Kryński,mrk@sed.pl,2013-05-04 19:53:46+02:00,-7200,2013-05-04 19:53:46+02:00,-7200,True,False,"['functions.py', 'query.py']",['2be6f3409c0b3fedc0e57bd99072e73571a30852'],4,18,22,2,1.0,0.6666666666666666,0.5555555555555556
3cb08dd23a5c28ec573bb0fd328b513a8b4c4e37,do not call count() in QuerySet.__len__,Mariusz Kryński,mrk@sed.pl,Mariusz Kryński,mrk@sed.pl,2013-05-04 20:05:22+02:00,-7200,2013-05-04 20:05:22+02:00,-7200,True,False,['query.py'],['b8584770c0cf2a0b6c2713a4760b2a4b82ce4546'],1,2,3,1,1.0,1.0,1.0
bc4f7ed78b8d9ee9e6474517d9ab262ca08099ce,QuerySet.values_list support,Mariusz Kryński,mrk@sed.pl,Mariusz Kryński,mrk@sed.pl,2013-05-04 22:30:27+02:00,-7200,2013-05-04 22:30:27+02:00,-7200,True,False,['query.py'],['3cb08dd23a5c28ec573bb0fd328b513a8b4c4e37'],4,31,35,1,1.0,1.0,0.5217391304347826
35fbbc3a331a515b129bdf0a35f37368771e7005,Don't let ReconnectionHandlers hold references to Cluster,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 10:59:19-05:00,18000,2013-05-06 10:59:19-05:00,18000,True,False,"['cluster.py', 'connection.py', 'test_cluster.py']",['713fc8fb3e2200626e7433bb1b681bdd437d7012'],7,23,30,3,1.0,0.8888888888888888,0.2222222222222222
46d0aadda40ddfff221c6c92c2e4eea683a0943a,ResponseFuture no longer needs __del__ defined,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 11:37:21-05:00,18000,2013-05-06 11:37:21-05:00,18000,True,False,['cluster.py'],['35fbbc3a331a515b129bdf0a35f37368771e7005'],4,0,4,1,0.0,0.0,0.0
123bed239db86bad6250049cf0623ba758612b39,Better exception name for busy host pool,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 11:37:53-05:00,18000,2013-05-06 11:37:53-05:00,18000,True,False,['pool.py'],['46d0aadda40ddfff221c6c92c2e4eea683a0943a'],5,4,9,1,1.0,1.0,0.0
c035601e2f5af6e8b035c896731cbb7ff4d71762,Simplify ResponseFuture unit tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 11:38:31-05:00,18000,2013-05-06 11:38:31-05:00,18000,True,False,['test_cluster.py'],['123bed239db86bad6250049cf0623ba758612b39'],40,27,67,1,1.0,0.0,0.0
8e75eeeb99a2b1e36993e5bdfe505c833843f4dc,Test ReponseFuture handling of various pool states,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 11:38:45-05:00,18000,2013-05-06 11:38:45-05:00,18000,True,False,['test_cluster.py'],['c035601e2f5af6e8b035c896731cbb7ff4d71762'],0,46,46,1,1.0,1.0,1.0
edb4a5e72f77173d28ed216ab428e2adff9e7ef3,Don't restart query plan when retrying against different hosts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 13:16:12-05:00,18000,2013-05-06 13:16:12-05:00,18000,True,False,['cluster.py'],['8e75eeeb99a2b1e36993e5bdfe505c833843f4dc'],1,6,7,1,,,
45787c92e99d528175137949c5e8734e83a66bdd,"Correct retry handling on Overloaded, Bootstrapping errors",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 13:18:18-05:00,18000,2013-05-06 13:18:18-05:00,18000,True,False,['cluster.py'],['edb4a5e72f77173d28ed216ab428e2adff9e7ef3'],3,7,10,1,0.0,0.0,1.0
dbe23742708037dfd83dcb32eff66778e2e0a87e,Correct handling for no CL adjustment on retry,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 13:18:38-05:00,18000,2013-05-06 13:18:38-05:00,18000,True,False,['cluster.py'],['45787c92e99d528175137949c5e8734e83a66bdd'],1,3,4,1,1.0,1.0,0.0
82b7608c0fa7e76795ab12034ae41c43c116e134,ResponseFuture tests for different retry cases,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 13:19:50-05:00,18000,2013-05-06 13:19:50-05:00,18000,True,False,['test_cluster.py'],['dbe23742708037dfd83dcb32eff66778e2e0a87e'],7,86,93,1,0.14814814814814814,1.0,1.0
8aa69d301e869ceba09bf05f1a1254480899a9e0,Unit test for all retry attempts failing,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 13:28:30-05:00,18000,2013-05-06 13:28:30-05:00,18000,True,False,['test_cluster.py'],['82b7608c0fa7e76795ab12034ae41c43c116e134'],0,31,31,1,0.0,1.0,1.0
e721428ed6cfdb98d82e494e7e672f78607419a3,Simplify response future unit tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 13:34:59-05:00,18000,2013-05-06 13:34:59-05:00,18000,True,False,"['cluster.py', 'test_cluster.py']",['8aa69d301e869ceba09bf05f1a1254480899a9e0'],11,7,18,2,1.0,0.0,0.0
d57cedc6de3a9e4c0acc747657ca0c12432b450e,Add tests for callbacks/errbacks on response futures,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 13:43:15-05:00,18000,2013-05-06 13:43:15-05:00,18000,True,False,"['cluster.py', 'test_cluster.py']",['e721428ed6cfdb98d82e494e7e672f78607419a3'],4,32,36,2,1.0,1.0,1.0
b7c069045c7b699a237c8eeaf4813528897b379c,"PEP 8 cleanup, rename of cqltypes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 14:05:32-05:00,18000,2013-05-06 14:05:32-05:00,18000,True,False,"['decoder.py', 'metadata.py', 'types.py']",['d57cedc6de3a9e4c0acc747657ca0c12432b450e'],58,64,122,3,0.3333333333333333,0.3333333333333333,0.0
ffdcb99aa7ec547eb853e6bbd37f8874d32a761d,Tests for (un)marshalling,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 14:06:06-05:00,18000,2013-05-06 14:06:06-05:00,18000,True,False,['test_marshalling.py'],['b7c069045c7b699a237c8eeaf4813528897b379c'],0,86,86,1,1.0,1.0,1.0
0249496d2fdc875af87d814041a87175be5fe056,Move ConsistencyLevel to cassandra.__init__,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 14:42:03-05:00,18000,2013-05-06 14:42:03-05:00,18000,True,False,"['__init__.py', 'cluster.py', 'connection.py', 'decoder.py', 'marshal.py', 'policies.py', 'query.py', 'test_cluster.py', 'test_connection.py', 'test_control_connection.py', 'test_policies.py']",['ffdcb99aa7ec547eb853e6bbd37f8874d32a761d'],61,50,111,11,,,
2fc22da38e506f6bf184af456e3f31e8c91fc879,Update Metadata test for cluster weak reference,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 14:45:24-05:00,18000,2013-05-06 14:45:24-05:00,18000,True,False,['test_metadata.py'],['0249496d2fdc875af87d814041a87175be5fe056'],1,1,2,1,,,
bdb813195a836d765a4e5ea35ada2ec16e18ce50,Directly expose HostConnPool.is_shutdown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 14:49:56-05:00,18000,2013-05-06 14:49:56-05:00,18000,True,False,['pool.py'],['2fc22da38e506f6bf184af456e3f31e8c91fc879'],12,8,20,1,0.0,0.0,0.3333333333333333
0c95e9d26e58ad4faf937a5f1a6d6101323d8cc2,Better error reporting in test setup/teardown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 15:08:16-05:00,18000,2013-05-06 15:08:16-05:00,18000,True,False,['__init__.py'],['bdb813195a836d765a4e5ea35ada2ec16e18ce50'],11,7,18,1,1.0,0.5,0.0
f76e900cc5be497634a6195e21e704a29fc228f8,Basic borrow/return tests for host connection pool,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 16:29:51-05:00,18000,2013-05-06 16:29:51-05:00,18000,True,False,['test_host_connection_pool.py'],['0c95e9d26e58ad4faf937a5f1a6d6101323d8cc2'],0,78,78,1,1.0,1.0,1.0
a284c84c01fb85940a7937135644bf02f7614cde,Better attr names and initialization for Connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 16:30:28-05:00,18000,2013-05-06 16:30:28-05:00,18000,True,False,['connection.py'],['f76e900cc5be497634a6195e21e704a29fc228f8'],34,34,68,1,,,
5eb261efd1b08014811c5ef42628d81f11f4238d,Better attr initialization for Host,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 16:31:10-05:00,18000,2013-05-06 16:31:10-05:00,18000,True,False,"['policies.py', 'pool.py']",['a284c84c01fb85940a7937135644bf02f7614cde'],4,8,12,2,0.0,0.0,1.0
900460bf53c529f010bdd46bc695c30466086701,Better attr initialization for HostConnectionPool,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 16:33:31-05:00,18000,2013-05-06 16:33:31-05:00,18000,True,False,['pool.py'],['5eb261efd1b08014811c5ef42628d81f11f4238d'],3,8,11,1,0.0,0.0,1.0
e43a83646945706d5d3afcf754208c4814dc81c8,Fix waiting conditions for HConnPool.borrow_connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 16:34:06-05:00,18000,2013-05-06 16:34:06-05:00,18000,True,False,['pool.py'],['900460bf53c529f010bdd46bc695c30466086701'],13,13,26,1,1.0,1.0,0.0
d86a0693973893fc1c194a220a1faec25c115357,Add missing _maybe_spawn_connection method,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 16:34:33-05:00,18000,2013-05-06 16:34:33-05:00,18000,True,False,['pool.py'],['e43a83646945706d5d3afcf754208c4814dc81c8'],0,9,9,1,1.0,1.0,1.0
e3aa5edb9ea2a36e0f820c679ac765227742a7f9,Fix condition-based waiting for available conn,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 16:35:33-05:00,18000,2013-05-06 16:35:33-05:00,18000,True,False,['pool.py'],['d86a0693973893fc1c194a220a1faec25c115357'],42,40,82,1,1.0,1.0,0.0
6c59a27a667a395785f9b702fbb72257dfdc2144,"Test all connections trashed, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 16:59:46-05:00,18000,2013-05-06 16:59:46-05:00,18000,True,False,"['pool.py', 'test_host_connection_pool.py']",['e3aa5edb9ea2a36e0f820c679ac765227742a7f9'],7,49,56,2,0.2903225806451613,1.0,1.0
a97adc2aebc39bbab051034ee72e8aa6c0a2a77e,Add test for spawning new conns when others are maxed out,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-06 17:15:46-05:00,18000,2013-05-06 17:15:46-05:00,18000,True,False,"['cluster.py', 'pool.py', 'test_host_connection_pool.py']",['6c59a27a667a395785f9b702fbb72257dfdc2144'],6,32,38,3,1.0,1.0,1.0
49bd7415a82f1db81cc8696f804a1ca958787833,memory leak fix,Mariusz Kryński,mrk@sed.pl,Mariusz Kryński,mrk@sed.pl,2013-05-07 00:52:06+02:00,-7200,2013-05-07 00:52:06+02:00,-7200,True,False,['query.py'],['bc4f7ed78b8d9ee9e6474517d9ab262ca08099ce'],17,10,27,1,0.0,0.0,0.0
edaf83f3aec166b5a28676404b0ad03c95d42547,Added guards to ensure that prev and val exist before calling their keys function,Pandu Rao,pandu.rao@gmail.com,Pandu Rao,pandu.rao@gmail.com,2013-05-08 17:06:09-07:00,25200,2013-05-08 17:06:09-07:00,25200,True,False,['columns.py'],['8ec6fc38a43eea201e7086c455fdccb54d5df7de'],2,2,4,1,,0.0,
1bdd1a14b135a6c6c6d6d86118135de983225f79,Timezone aware datetime fix.,Gregory R. Doermann,gdoermann@perfectpitchtech.com,Gregory R. Doermann,gdoermann@perfectpitchtech.com,2013-05-09 11:21:44-06:00,21600,2013-05-09 11:21:44-06:00,21600,True,False,['columns.py'],['2be6f3409c0b3fedc0e57bd99072e73571a30852'],2,6,8,1,1.0,1.0,1.0
29f5ef42acc0dbf73c6ea4a5ca312c3386656096,fixing the base test connection,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-09 10:40:05-07:00,25200,2013-05-09 10:40:05-07:00,25200,True,False,['base.py'],['8ec6fc38a43eea201e7086c455fdccb54d5df7de'],1,1,2,1,,,
c7f9a6d9378ded459e65103a9f028ed13071a172,adding check to update statement to avoid failure on update from None,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-09 10:56:57-07:00,25200,2013-05-09 10:56:57-07:00,25200,True,False,['columns.py'],['65bd34f44ec66d7210a928793a742fb1477228f4'],0,2,2,1,0.0,0.0,0.0
47a0099708c381969125b18a3cd0416a08a55a1d,adding additional tests around map column updates,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-09 10:57:50-07:00,25200,2013-05-09 10:57:50-07:00,25200,True,False,['test_container_columns.py'],['c7f9a6d9378ded459e65103a9f028ed13071a172'],0,20,20,1,1.0,1.0,1.0
558f6981b4ae3b064637fc4b561a1675866eea03,added test for date time column with tzinfo,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-09 11:59:10-07:00,25200,2013-05-09 11:59:10-07:00,25200,True,False,['test_validation.py'],['c5ed9d774dffcdc7280cdda691be06f2de1d079d'],1,14,15,1,1.0,1.0,1.0
8d23c7ba7adb05a8e6404bb676af67ad866398b6,updating pypi description,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-09 12:03:20-07:00,25200,2013-05-09 12:03:20-07:00,25200,True,False,['setup.py'],['558f6981b4ae3b064637fc4b561a1675866eea03'],2,0,2,1,,,
7316fa20c02044e573ee8c769420bebbeba4a097,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-09 12:04:24-07:00,25200,2013-05-09 12:04:24-07:00,25200,True,False,['changelog'],['8d23c7ba7adb05a8e6404bb676af67ad866398b6'],1,5,6,1,,,
2f8752353506cad8d806f362847517a8bb2475cb,Add travis testing,Silvio Tomatis,silviot@gmail.com,Silvio Tomatis,silviot@gmail.com,2013-05-13 14:45:41+02:00,-7200,2013-05-13 14:45:41+02:00,-7200,True,False,['.travis.yml'],['7316fa20c02044e573ee8c769420bebbeba4a097'],0,14,14,1,,,
4fee79b348a9d19b8cf09bf748762265866c6ce8,Make all tests pass when run alltogether with 'py.test cqlengine/tests',Silvio Tomatis,silviot@gmail.com,Silvio Tomatis,silviot@gmail.com,2013-05-13 15:10:14+02:00,-7200,2013-05-13 15:10:14+02:00,-7200,True,False,['test_queryset.py'],['2f8752353506cad8d806f362847517a8bb2475cb'],3,5,8,1,,,
0022f21c975f1b47e8c8b9f25b73a35bc372a3bf,Add test for boolean column in test_model_io,Silvio Tomatis,silviot@gmail.com,Silvio Tomatis,silviot@gmail.com,2013-05-13 15:48:44+02:00,-7200,2013-05-13 15:48:44+02:00,-7200,True,False,['test_model_io.py'],['4fee79b348a9d19b8cf09bf748762265866c6ce8'],1,3,4,1,1.0,1.0,1.0
52f87303a4681521d6b93772a7d0a478005e30b1,Basic (working) counter column.  You can add and subtract values.  You must use CounterModel when using a CounterColumn.,Gregory R. Doermann,gdoermann@perfectpitchtech.com,Gregory R. Doermann,gdoermann@perfectpitchtech.com,2013-05-15 13:46:27-06:00,21600,2013-05-15 13:46:27-06:00,21600,True,False,"['__init__.py', 'columns.py', 'models.py', 'query.py']",['1bdd1a14b135a6c6c6d6d86118135de983225f79'],6,31,37,4,0.09090909090909091,0.09090909090909091,1.0
1b72535064d6954b70d41cb2de236457ed711786,Custom TTL and timestamp information can be passed in on save.,Gregory R. Doermann,gdoermann@perfectpitchtech.com,Gregory R. Doermann,gdoermann@perfectpitchtech.com,2013-05-17 14:12:14-06:00,21600,2013-05-17 14:12:14-06:00,21600,True,False,"['connection.py', 'functions.py', 'models.py', 'query.py']",['96bee2f9067d1f579de9a83c3630c7cfa617d6ee'],9,55,64,4,0.0,0.4827586206896552,0.0
adf90a35655e2f105df3cf5fe0f41bf86e182d05,"Locking fixes for host conn pool around trashing, replacing",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-17 16:04:28-05:00,18000,2013-05-17 16:04:28-05:00,18000,True,False,"['connection.py', 'pool.py', 'test_host_connection_pool.py']",['a97adc2aebc39bbab051034ee72e8aa6c0a2a77e'],54,88,142,3,0.0,0.0,1.0
283fc370e0baed330278a6e71204b9c7019472cd,"Tests for returning defunct conns, related tests",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-17 17:16:49-05:00,18000,2013-05-17 17:16:49-05:00,18000,True,False,"['connection.py', 'pool.py', 'test_host_connection_pool.py']",['adf90a35655e2f105df3cf5fe0f41bf86e182d05'],10,50,60,3,0.4666666666666667,1.0,1.0
7e7e538e4e6ff7b94af94989ec877e6bfe298235,Use Queue for managing request/stream ids per conn,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 12:17:06-05:00,18000,2013-05-20 12:17:06-05:00,18000,True,False,['connection.py'],['283fc370e0baed330278a6e71204b9c7019472cd'],6,24,30,1,0.3333333333333333,0.5833333333333334,0.0
a2018d6b9ff19feae15a96893a6e769de0b7b5f0,Avoid problems with already removed callbacks,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 12:19:04-05:00,18000,2013-05-20 12:19:04-05:00,18000,True,False,['connection.py'],['7e7e538e4e6ff7b94af94989ec877e6bfe298235'],2,2,4,1,,,
c8887b8bfcbcab784b7ec514f3f1b68bd0cfc3b0,Signal control connection errors when refreshing,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 12:29:58-05:00,18000,2013-05-20 12:29:58-05:00,18000,True,False,['cluster.py'],['a2018d6b9ff19feae15a96893a6e769de0b7b5f0'],2,25,27,1,1.0,1.0,0.7333333333333333
217ded6180a52445273b67b7755fb47da3ada933,"Proper error handling, defunction on Connections",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 14:08:18-05:00,18000,2013-05-20 14:08:18-05:00,18000,True,False,"['cluster.py', 'connection.py']",['c8887b8bfcbcab784b7ec514f3f1b68bd0cfc3b0'],34,71,105,2,1.0,1.0,0.5357142857142857
3311e9a949d40c6ad58e4b3232c8801ff5718234,Implement missing Connection.wait_for_response(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 15:55:21-05:00,18000,2013-05-20 15:55:21-05:00,18000,True,False,['connection.py'],['217ded6180a52445273b67b7755fb47da3ada933'],0,4,4,1,0.0,1.0,1.0
03b109a9c51613202280b119195c88aff48d5838,Correctly handle request IDs of 0,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 15:58:06-05:00,18000,2013-05-20 15:58:06-05:00,18000,True,False,['cluster.py'],['3311e9a949d40c6ad58e4b3232c8801ff5718234'],1,1,2,1,,,
6809429b54abc1c7226a635187dbfb1efbe0032c,Include closed pools in error for ResponseFuture,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 15:58:49-05:00,18000,2013-05-20 15:58:49-05:00,18000,True,False,['cluster.py'],['03b109a9c51613202280b119195c88aff48d5838'],0,1,1,1,0.0,1.0,1.0
7b87b66027cd43a25ba0af4e43beaf63d1a12cd0,Handle responses to orphaned ResponseFutures,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 15:59:40-05:00,18000,2013-05-20 15:59:40-05:00,18000,True,False,['cluster.py'],['6809429b54abc1c7226a635187dbfb1efbe0032c'],4,9,13,1,0.4,0.4,1.0
946da23f3491c0a86c70de1a014e212a4834b32d,Session.keyspace is set when a response is received,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 16:00:10-05:00,18000,2013-05-20 16:00:10-05:00,18000,True,False,['cluster.py'],['7b87b66027cd43a25ba0af4e43beaf63d1a12cd0'],1,0,1,1,0.0,0.0,0.0
af174ade8ac2a9723fc5fc18435260a02557c1f2,Avoid refreshing schema/topology before connecting,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 16:00:49-05:00,18000,2013-05-20 16:00:49-05:00,18000,True,False,['cluster.py'],['946da23f3491c0a86c70de1a014e212a4834b32d'],2,4,6,1,1.0,1.0,0.5
684942eba0d0e557a41d602708c339201c52a85f,"Reorg, docstrings for cluster.py, metadata.py",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 17:25:28-05:00,18000,2013-05-20 17:25:28-05:00,18000,True,False,"['cluster.py', 'metadata.py']",['af174ade8ac2a9723fc5fc18435260a02557c1f2'],808,1053,1861,2,1.0,1.0,0.0
de718b3fe40e517bcf1a872e322c33adfddbb8a3,"Add install_requires, test_requires to setup.py",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 17:25:58-05:00,18000,2013-05-20 17:25:58-05:00,18000,True,False,['setup.py'],['684942eba0d0e557a41d602708c339201c52a85f'],1,3,4,1,,,
8f96a88920c8915918acc09d430f674c5ec4a61a,Update _connection_factory attr name in pool,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 17:40:07-05:00,18000,2013-05-20 17:40:07-05:00,18000,True,False,['pool.py'],['de718b3fe40e517bcf1a872e322c33adfddbb8a3'],2,2,4,1,,,
c1c0b41fd815f564d386567ba0a2df809e79d318,Add example usage file,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 17:40:22-05:00,18000,2013-05-20 17:40:22-05:00,18000,True,False,['example.py'],['8f96a88920c8915918acc09d430f674c5ec4a61a'],0,63,63,1,0.0,0.0,1.0
2c498ff5d291f9ab749efdca4424cc99a3850db5,Allow specification of alternate return formats,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-20 18:53:46-05:00,18000,2013-05-20 18:53:46-05:00,18000,True,False,"['cluster.py', 'decoder.py', 'metadata.py', 'example.py']",['c1c0b41fd815f564d386567ba0a2df809e79d318'],13,57,70,4,0.47619047619047616,0.7142857142857143,0.7142857142857143
8cedf475d22d0d6caa2e002e79b370c1cfd6d7c7,Split tests into unit and integration tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-21 10:59:51-05:00,18000,2013-05-21 10:59:51-05:00,18000,True,False,"['__init__.py', '__init__.py', 'test_cluster.py', 'test_connection.py', 'test_metadata.py', 'test_response_future.py', '__init__.py', 'test_control_connection.py', 'test_host_connection_pool.py', 'test_marshalling.py', 'test_policies.py']",['2c498ff5d291f9ab749efdca4424cc99a3850db5'],140,144,284,11,,,
caef6be4b0cf99684a9295bf4aafe9265e20925b,Updates to unit tests to match latest changes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-21 11:21:31-05:00,18000,2013-05-21 11:21:31-05:00,18000,True,False,['test_control_connection.py'],['8cedf475d22d0d6caa2e002e79b370c1cfd6d7c7'],50,33,83,1,1.0,0.0,0.0
f3c914bd49a71fe5b720ce843cdb0c43e41f1c32,Update integration tests to match latest changes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-21 11:37:02-05:00,18000,2013-05-21 11:37:02-05:00,18000,True,False,"['cluster.py', '__init__.py', 'test_cluster.py', 'test_metadata.py', 'test_response_future.py']",['caef6be4b0cf99684a9295bf4aafe9265e20925b'],13,17,30,5,1.0,1.0,1.0
595f210a742e327da1c564c90378829b451e0fb5,First draft of query parameter binding,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-21 16:49:41-05:00,18000,2013-05-21 16:49:41-05:00,18000,True,False,"['cluster.py', 'decoder.py', 'query.py', 'example.py']",['f3c914bd49a71fe5b720ce843cdb0c43e41f1c32'],11,104,115,4,0.9782608695652174,0.9782608695652174,0.6956521739130435
ce5cb69d3bf7963b099c8c7da95c570d67383c8c,Set event loop thread as daemon,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-21 16:55:54-05:00,18000,2013-05-21 16:55:54-05:00,18000,True,False,['connection.py'],['595f210a742e327da1c564c90378829b451e0fb5'],1,1,2,1,,,
ff67b994835bbd3db97b74602cd9b7efafcd161b,Fixed #46 delete property only on can_delete,Pandu Rao,pandu.rao@gmail.com,Pandu Rao,pandu.rao@gmail.com,2013-05-21 17:59:04-07:00,25200,2013-05-21 17:59:04-07:00,25200,True,False,['models.py'],['0022f21c975f1b47e8c8b9f25b73a35bc372a3bf'],2,2,4,1,,,
bdc0c0399ae4315dba3e4e3e0dfbd4fa267a4a0b,"changing ORM (object row mapper) to Object Mapper, to avoid any confusion regarding support for object relationships",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-22 11:46:01-07:00,25200,2013-05-22 11:48:39-07:00,25200,True,False,"['README.md', 'index.rst']",['0022f21c975f1b47e8c8b9f25b73a35bc372a3bf'],2,2,4,2,,,
cf90efc93c679022bba6321d9b2a15ebba0e62c2,Unit tests for Connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-22 18:21:56-05:00,18000,2013-05-22 18:21:56-05:00,18000,True,False,['test_connection.py'],['ce5cb69d3bf7963b099c8c7da95c570d67383c8c'],0,232,232,1,0.7518248175182481,1.0,0.9343065693430657
540f57970a6cde4316edc4a140a889adabfe2cc2,"Better errors, messages for protocol problems",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-22 18:23:08-05:00,18000,2013-05-22 18:23:08-05:00,18000,True,False,['connection.py'],['cf90efc93c679022bba6321d9b2a15ebba0e62c2'],11,13,24,1,0.0,0.0,0.5
fa5d8bbc46bc2dde67fbb83f3b7407a319c80361,Prevent infinite loop when errored on initial connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-22 18:23:23-05:00,18000,2013-05-22 18:23:23-05:00,18000,True,False,['connection.py'],['540f57970a6cde4316edc4a140a889adabfe2cc2'],0,4,4,1,0.0,0.0,1.0
c26ebf6f80ff68e0c064aa064acee4d3daa86def,Tests for ErrorMessage in startup process,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-22 18:40:26-05:00,18000,2013-05-22 18:40:26-05:00,18000,True,False,['test_connection.py'],['fa5d8bbc46bc2dde67fbb83f3b7407a319c80361'],2,58,60,1,1.0,1.0,0.8571428571428571
875674ba3461a06079ca8ffc1fbfdd24874ddec7,"Use tuple for string formatting, not list",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-22 18:45:28-05:00,18000,2013-05-22 18:45:28-05:00,18000,True,False,['query.py'],['c26ebf6f80ff68e0c064aa064acee4d3daa86def'],2,2,4,1,,,
85bd4686fa195934ad048bcd1456b80d49f6482b,Rename types.py to cqltypes.py to avoid namespace conflict,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-22 18:54:17-05:00,18000,2013-05-22 18:54:17-05:00,18000,True,False,"['cqltypes.py', 'decoder.py', 'metadata.py', 'test_marshalling.py']",['875674ba3461a06079ca8ffc1fbfdd24874ddec7'],6,6,12,4,,,
a514109230b0d9e557df9ffafe6ee6841391a348,Start on parameter binding unit tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-22 18:59:11-05:00,18000,2013-05-22 18:59:11-05:00,18000,True,False,"['decoder.py', 'test_parameter_binding.py']",['85bd4686fa195934ad048bcd1456b80d49f6482b'],2,28,30,2,1.0,1.0,1.0
ff381912c0d8836b34529d21ae97d05c33548bbe,Tests for ColumnCollection parameter binding,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-22 19:02:24-05:00,18000,2013-05-22 19:02:24-05:00,18000,True,False,['test_parameter_binding.py'],['a514109230b0d9e557df9ffafe6ee6841391a348'],1,13,14,1,1.0,1.0,1.0
1578c4328542dd1b1c7ccd1f08dd2b2455055190,Add integration test covering all cql types,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-22 20:20:34-05:00,18000,2013-05-22 20:20:34-05:00,18000,True,False,['test_types.py'],['ff381912c0d8836b34529d21ae97d05c33548bbe'],0,99,99,1,0.0,1.0,1.0
17bd51e1c772ba1436e8ca6d2be047934b0d19e0,"Special cql encoders for date, datetime objects",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-22 20:21:01-05:00,18000,2013-05-22 20:21:01-05:00,18000,True,False,['decoder.py'],['1578c4328542dd1b1c7ccd1f08dd2b2455055190'],2,8,10,1,1.0,1.0,1.0
e85917e339e767be2a8cf59e51c9245ce9044d6b,Return datetime objects for timestamp fields,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-22 20:21:46-05:00,18000,2013-05-22 20:21:46-05:00,18000,True,False,['cqltypes.py'],['17bd51e1c772ba1436e8ca6d2be047934b0d19e0'],1,2,3,1,,,
e29004293e821eb2e2b4d78f1c46b0f4953a2e1d,Include futures in setup.py requirements,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-22 20:22:02-05:00,18000,2013-05-22 20:22:02-05:00,18000,True,False,['setup.py'],['e85917e339e767be2a8cf59e51c9245ce9044d6b'],1,1,2,1,,,
7e56e25d2186c00f75f735d0b74f9aa17de3d483,changed .all() behaviour - it clones QuerySet as in Django ORM,Mariusz Kryński,mrk@sed.pl,Mariusz Kryński,mrk@sed.pl,2013-05-25 16:00:49+02:00,-7200,2013-05-25 16:00:49+02:00,-7200,True,False,"['query.py', 'test_queryset.py']",['caeda33a1291562491601b55a50594f14866c863'],6,24,30,2,1.0,1.0,1.0
ec10c687fb5e04dda360971626a31e20926109a4,removing alpha from pypi info,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-26 08:10:10-07:00,25200,2013-05-26 08:10:10-07:00,25200,True,False,['setup.py'],['bdc0c0399ae4315dba3e4e3e0dfbd4fa267a4a0b'],1,0,1,1,,,
c151fbd8b1b55f7ffc0f65b09249e4eaa00f5fbe,updating pypi description,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-26 08:10:52-07:00,25200,2013-05-26 08:10:52-07:00,25200,True,False,['setup.py'],['ec10c687fb5e04dda360971626a31e20926109a4'],1,1,2,1,,,
d1e69bf01df7abdb1b1f2429138e51998d213f5b,adding test around deleting of model attributes,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-26 08:16:21-07:00,25200,2013-05-26 08:16:21-07:00,25200,True,False,['test_class_construction.py'],['c151fbd8b1b55f7ffc0f65b09249e4eaa00f5fbe'],1,12,13,1,1.0,1.0,1.0
786a21ad0d898dc225cd38dd0a23fb6503ef957c,"changing ORM (object row mapper) to Object Mapper, to avoid any confusion regarding support for object relationships",Blake Eggleston,bdeggleston@gmail.com,Pandu Rao,pandu.rao@gmail.com,2013-05-22 11:46:01-07:00,25200,2013-05-26 10:18:56-07:00,25200,True,False,"['README.md', 'index.rst']",['ff67b994835bbd3db97b74602cd9b7efafcd161b'],2,2,4,2,,,
4826f384823bc85d51a601b7b72a5624c2096249,removing alpha from pypi info,Blake Eggleston,bdeggleston@gmail.com,Pandu Rao,pandu.rao@gmail.com,2013-05-26 08:10:10-07:00,25200,2013-05-26 10:18:56-07:00,25200,True,False,['setup.py'],['786a21ad0d898dc225cd38dd0a23fb6503ef957c'],1,0,1,1,,,
d6b984b95223ce538274b3e8d420ef2c441564b7,updating pypi description,Blake Eggleston,bdeggleston@gmail.com,Pandu Rao,pandu.rao@gmail.com,2013-05-26 08:10:52-07:00,25200,2013-05-26 10:18:56-07:00,25200,True,False,['setup.py'],['4826f384823bc85d51a601b7b72a5624c2096249'],1,1,2,1,,,
bb3ea850f250f01cd68db2f77644fcd6c7b45fdc,adding test around deleting of model attributes,Blake Eggleston,bdeggleston@gmail.com,Pandu Rao,pandu.rao@gmail.com,2013-05-26 08:16:21-07:00,25200,2013-05-26 10:18:56-07:00,25200,True,False,['test_class_construction.py'],['d6b984b95223ce538274b3e8d420ef2c441564b7'],1,12,13,1,1.0,1.0,1.0
929d1736eac5e1f03bab6184db7360a8d3b2a339,Fixed error in sample code in documentation,Pandu Rao,pandu.rao@gmail.com,Pandu Rao,pandu.rao@gmail.com,2013-05-26 10:18:31-07:00,25200,2013-05-26 10:18:56-07:00,25200,True,False,['index.rst'],['bb3ea850f250f01cd68db2f77644fcd6c7b45fdc'],2,2,4,1,,,
d9b0eb9bb5dacc00a1efa3c8fcbddb82fe66c147,duplicate pandu-rao's doc fixes in the readme,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-26 12:20:17-06:00,21600,2013-05-26 12:20:17-06:00,21600,True,False,['README.md'],['365ed8d27c01461e098760b10495050a677aa489'],2,2,4,1,,,
cdcccbb99a9ead5a1aea67585d62ec42291ab964,duplicate pandu-rao's doc fixes in the readme,Blake Eggleston,bdeggleston@gmail.com,Pandu Rao,pandu.rao@gmail.com,2013-05-26 12:20:17-06:00,21600,2013-05-26 11:44:09-07:00,25200,True,False,['README.md'],['929d1736eac5e1f03bab6184db7360a8d3b2a339'],2,2,4,1,,,
7c43b39237f7a1e0ee28da347705cc45eb89d83f,"clustering order, composite partition keys, Token func, docs & tests",Mariusz Kryński,mrk@sed.pl,Mariusz Kryński,mrk@sed.pl,2013-05-27 00:34:53+02:00,-7200,2013-05-27 00:34:53+02:00,-7200,True,False,"['columns.py', 'functions.py', 'management.py', 'models.py', 'query.py', 'test_class_construction.py', 'test_clustering_order.py', 'test_queryoperators.py', 'test_queryset.py', 'columns.rst', 'models.rst', 'queryset.rst']",['e6e39d717aca119acf164f8d4212af62ebc01825'],92,284,376,12,0.8068181818181818,0.8068181818181818,0.8295454545454546
97d7e647a304dbfe4ee10539949e7aa12e9e7982,Fix for #41,Mariusz Kryński,mrk@sed.pl,Mariusz Kryński,mrk@sed.pl,2013-05-27 02:14:28+02:00,-7200,2013-05-27 02:14:28+02:00,-7200,True,False,"['models.py', 'test_queryset.py']",['cf9a63e193aa9be154021503f3a3a8c027274260'],1,14,15,2,1.0,1.0,0.8
f2a401d0541d3eebd4259827404d9827740e9adf,"Allow `datetime.date` values with `columns.DateTime`.

Adds support for setting a `datetime.date` value to a `DateTime`
column. The value will be transparently converted to a
`datetime.datetime` with the time components set to zero.",Kai Lautaportti,kai.lautaportti@gmail.com,Kai Lautaportti,kai.lautaportti@gmail.com,2013-05-27 10:39:26+03:00,-10800,2013-05-27 10:39:26+03:00,-10800,True,False,"['columns.py', 'test_validation.py']",['d9b0eb9bb5dacc00a1efa3c8fcbddb82fe66c147'],1,16,17,2,1.0,1.0,1.0
b1ce5f2f380dad3d45be52510f6d4075aac49e7d,"Log the CQL statements at DEBUG level.

This logs the CQL statements emitted by cqlengine in the
`cqlengine.cql` logger at DEBUG level. For debugging purposes you can
enable that logger to help work out problems with your queries.

The logger is not enabled by default by `cqlengine`.",Kai Lautaportti,kai.lautaportti@gmail.com,Kai Lautaportti,kai.lautaportti@gmail.com,2013-05-27 10:54:54+03:00,-10800,2013-05-27 10:54:54+03:00,-10800,True,False,"['columns.py', 'connection.py']",['d9b0eb9bb5dacc00a1efa3c8fcbddb82fe66c147'],0,6,6,2,0.0,1.0,0.6666666666666666
1f174ab8887fb263da1202c6b41ff3c0d495e7ef,Fix reference to nonexistent method when changing core conns,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-05-29 13:08:41-05:00,18000,2013-05-29 13:08:41-05:00,18000,True,False,['cluster.py'],['e29004293e821eb2e2b4d78f1c46b0f4953a2e1d'],1,1,2,1,,,
26d68711469520791dd8a4659b0e245754490dcf,ignoring noseids,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-05-30 14:28:47-07:00,25200,2013-05-30 14:28:47-07:00,25200,True,False,['.gitignore'],['5ef5b91ea665d001e06d720001ac8bf4974b0e34'],0,1,1,1,,,
3bb7314c60521a93bfbca14e532e257e6b6d1089,adding some docstrings to the function classes,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-05-31 09:34:25-07:00,25200,2013-05-31 09:34:25-07:00,25200,True,False,['functions.py'],['cd5dcbbeccecc0486f88a7a37692f8e2953cd416'],0,15,15,1,,,
a815f7652e4bde4090c4b804cfce9aca206aec8d,Fix bad attribute reference when removing hosts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 11:24:31-05:00,18000,2013-06-03 11:24:31-05:00,18000,True,False,['cluster.py'],['1f174ab8887fb263da1202c6b41ff3c0d495e7ef'],1,1,2,1,,,
4a5a11fb5d1ff28a106dc2288d159643cf0d1e2a,removed unused column class,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 09:51:39-07:00,25200,2013-06-03 09:51:39-07:00,25200,True,False,['columns.py'],['3bb7314c60521a93bfbca14e532e257e6b6d1089'],7,0,7,1,0.0,0.0,0.0
7ef3cde72722a81d5d9c5362b6b3273d293325e0,adding some docstrings and comments,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 09:52:04-07:00,25200,2013-06-03 09:52:04-07:00,25200,True,False,"['models.py', 'query.py']",['4a5a11fb5d1ff28a106dc2288d159643cf0d1e2a'],1,7,8,2,,,
e75dfe5ef746323b99050fe30d19a267badfbd4a,adding some todos,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 09:52:40-07:00,25200,2013-06-03 09:52:40-07:00,25200,True,False,['management.py'],['7ef3cde72722a81d5d9c5362b6b3273d293325e0'],0,2,2,1,,,
532f3275191506dab25ed4d5c8f921632c09c909,adding cassandra docs url to token function docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 09:55:45-07:00,25200,2013-06-03 09:55:45-07:00,25200,True,False,['queryset.rst'],['e75dfe5ef746323b99050fe30d19a267badfbd4a'],0,2,2,1,,,
55f16442e36ffea5e35a80a5bb1b128c71f6226f,removing commented out method,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 10:00:15-07:00,25200,2013-06-03 10:00:15-07:00,25200,True,False,['models.py'],['532f3275191506dab25ed4d5c8f921632c09c909'],5,0,5,1,,,
24eba1bbc0aafc9e503747e688cacfdb88ad2fb8,adding contributor guidelines,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 10:11:38-07:00,25200,2013-06-03 10:11:38-07:00,25200,True,False,['CONTRIBUTING.md'],['55f16442e36ffea5e35a80a5bb1b128c71f6226f'],0,12,12,1,,,
88b9d96680e4c23ee208309906104a1b83a7e641,Add TODO list to README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 12:23:36-05:00,18000,2013-06-03 12:23:36-05:00,18000,True,False,"['README.md', 'README.rst']",['a815f7652e4bde4090c4b804cfce9aca206aec8d'],4,12,16,2,,,
dc14e6927505bc949a00c60b7b543330660a5d6a,adding contributor guidelines link to the readme,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 10:23:37-07:00,25200,2013-06-03 10:23:37-07:00,25200,True,False,['README.md'],['dcfde65730c673b879add8d54d46d96e8c0fcc0d'],0,4,4,1,,,
542480c8ea5b01c82c081443817b9281e061cf91,Add unit test for quote escaping,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 12:27:41-05:00,18000,2013-06-03 12:27:41-05:00,18000,True,False,['test_parameter_binding.py'],['88b9d96680e4c23ee208309906104a1b83a7e641'],0,4,4,1,1.0,1.0,1.0
249efeae9698b78bcc7fb21a5449fd644652d7e8,Add build artifacts to .gitignore,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 12:28:10-05:00,18000,2013-06-03 12:28:10-05:00,18000,True,False,['.gitignore'],['542480c8ea5b01c82c081443817b9281e061cf91'],0,2,2,1,,,
8046936da6171d1e3be9f9e8ba0efb4b629df74e,Add license information,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 12:34:24-05:00,18000,2013-06-03 12:34:24-05:00,18000,True,False,"['LICENSE', 'README.rst']",['249efeae9698b78bcc7fb21a5449fd644652d7e8'],0,193,193,2,,,
6eddfb71bb86cb06bb45e9694c0bba692d59b4e9,Add classifiers to setup.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 12:34:44-05:00,18000,2013-06-03 12:34:44-05:00,18000,True,False,['setup.py'],['8046936da6171d1e3be9f9e8ba0efb4b629df74e'],1,15,16,1,,,
e5906355fa645f797ecdd98e6dd649ba586ad40a,Add warning about the driver API changing to README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 12:37:24-05:00,18000,2013-06-03 12:37:24-05:00,18000,True,False,['README.rst'],['6eddfb71bb86cb06bb45e9694c0bba692d59b4e9'],1,6,7,1,,,
f2b98e22d8136d2247b11c35fec7c4cbb78ba527,"ResponseFuture tests are unit, not integration",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 12:42:31-05:00,18000,2013-06-03 12:42:31-05:00,18000,True,False,['test_response_future.py'],['e5906355fa645f797ecdd98e6dd649ba586ad40a'],0,0,0,1,,,
67b375b43c2e404f981980334d0ac28613078215,Add test coverage items to .gitignore,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 12:42:55-05:00,18000,2013-06-03 12:42:55-05:00,18000,True,False,['.gitignore'],['f2b98e22d8136d2247b11c35fec7c4cbb78ba527'],0,2,2,1,,,
fb73ec96d03c7d7189b6de304894aa5e30e2a7b4,"Add test for add_callbacks, related fix",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 12:48:22-05:00,18000,2013-06-03 12:48:22-05:00,18000,True,False,"['cluster.py', 'test_response_future.py']",['67b375b43c2e404f981980334d0ac28613078215'],2,33,35,2,0.0,1.0,1.0
309a1b103c482e3a422034c05f783618ea216f9c,Cover immediate callback/errback case in tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 12:50:01-05:00,18000,2013-06-03 12:50:01-05:00,18000,True,False,['test_response_future.py'],['fb73ec96d03c7d7189b6de304894aa5e30e2a7b4'],0,6,6,1,1.0,1.0,1.0
784f8e10bcbb91f37b40b9f4a4a8f71d4c196d4a,Fix DateType marshalling,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 13:06:01-05:00,18000,2013-06-03 13:06:01-05:00,18000,True,False,"['cqltypes.py', 'test_marshalling.py']",['309a1b103c482e3a422034c05f783618ea216f9c'],4,16,20,2,1.0,1.0,1.0
34844aaa0de7ee2f5f164cc37d31c560ec5cbb9d,Cover IsBootstrappingErrorMessage case in tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 13:06:23-05:00,18000,2013-06-03 13:06:23-05:00,18000,True,False,['test_response_future.py'],['784f8e10bcbb91f37b40b9f4a4a8f71d4c196d4a'],3,3,6,1,,,
5b3b4eba53302c6c69b5b1845548496a7f00033b,Use reentrant lock on Cluster to avoid hang when error on connect,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 13:31:24-05:00,18000,2013-06-03 13:31:24-05:00,18000,True,False,['cluster.py'],['34844aaa0de7ee2f5f164cc37d31c560ec5cbb9d'],2,2,4,1,,,
286bd0e66af0c1c21a961a06fc4e3177c4ecf57c,adding custom value quoter to boolean column for compatibility with Cassandra 1.2.5+,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 11:33:37-07:00,25200,2013-06-03 11:33:37-07:00,25200,True,False,['columns.py'],['dc14e6927505bc949a00c60b7b543330660a5d6a'],17,23,40,1,1.0,1.0,1.0
5ae7fc2b8229dc34a7c3fdb445208980fba5f04f,Fix readme formatting,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 13:36:36-05:00,18000,2013-06-03 13:36:36-05:00,18000,True,False,['README.rst'],['5b3b4eba53302c6c69b5b1845548496a7f00033b'],1,2,3,1,,,
3efd56cd4c17eb32308f5165a3dc583c36517c11,Test Cluster behavior when connect() fails,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 13:39:18-05:00,18000,2013-06-03 13:39:18-05:00,18000,True,False,['test_cluster.py'],['5ae7fc2b8229dc34a7c3fdb445208980fba5f04f'],1,5,6,1,1.0,1.0,1.0
24b207c18a785270b5ac90e93b7e774d3d80cc56,adding None handling to DateTime to_database,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 11:58:22-07:00,25200,2013-06-03 11:58:22-07:00,25200,True,False,['columns.py'],['286bd0e66af0c1c21a961a06fc4e3177c4ecf57c'],0,1,1,1,1.0,1.0,1.0
f8933411f461b0fe19825895f06df2380497052f,"Add tests to cover _handle_topology_change, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 14:30:05-05:00,18000,2013-06-03 14:30:05-05:00,18000,True,False,"['cluster.py', 'test_control_connection.py']",['3efd56cd4c17eb32308f5165a3dc583c36517c11'],3,28,31,2,0.05,1.0,1.0
0682d28d311073854e3885c2a702ab4909788b82,"Test coverage for handle_status_change, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 14:44:39-05:00,18000,2013-06-03 14:44:39-05:00,18000,True,False,"['cluster.py', 'pool.py', 'test_control_connection.py']",['f8933411f461b0fe19825895f06df2380497052f'],16,55,71,3,0.0967741935483871,1.0,1.0
0255288bc4950631f6b9527f157438463ca8266e,Add tests for handle_schema_change,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 14:55:09-05:00,18000,2013-06-03 14:55:09-05:00,18000,True,False,['test_control_connection.py'],['0682d28d311073854e3885c2a702ab4909788b82'],0,30,30,1,0.043478260869565216,1.0,1.0
ade7402d72382904cab214989676b3e82c8cf20e,Add ipv6 note to README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 14:55:24-05:00,18000,2013-06-03 14:55:24-05:00,18000,True,False,['README.rst'],['0255288bc4950631f6b9527f157438463ca8266e'],0,1,1,1,,,
1ee1a536c59a910e46521582464829b911e864f0,Better attr initialization for Cluster,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 15:10:18-05:00,18000,2013-06-03 15:10:18-05:00,18000,True,False,['cluster.py'],['ade7402d72382904cab214989676b3e82c8cf20e'],18,27,45,1,1.0,0.0,1.0
146b74a18973987683cad98ce19c2bb8842007d1,Add test for Cluster keyword args,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 15:13:22-05:00,18000,2013-06-03 15:13:22-05:00,18000,True,False,['test_cluster.py'],['1ee1a536c59a910e46521582464829b911e864f0'],0,20,20,1,1.0,1.0,1.0
0233421076e458c9037d4283aaac06373a9ea1f3,Add auth/security note to README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 15:14:59-05:00,18000,2013-06-03 15:14:59-05:00,18000,True,False,['README.rst'],['146b74a18973987683cad98ce19c2bb8842007d1'],0,1,1,1,,,
40bed98b90d58b980f4086e3901cdab5a4be7b05,"making DoesNotExist & MultipleObjectsReturned distinct classes for each model, and inherit from parent model if any",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 13:24:53-07:00,25200,2013-06-03 13:24:53-07:00,25200,True,False,"['models.py', 'query.py', 'test_class_construction.py']",['24b207c18a785270b5ac90e93b7e774d3d80cc56'],4,56,60,3,0.6470588235294118,0.6470588235294118,0.6470588235294118
1301486d0e223d9feba7453b49fc44ab3a8707c3,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 13:28:26-07:00,25200,2013-06-03 13:28:26-07:00,25200,True,False,['changelog'],['40bed98b90d58b980f4086e3901cdab5a4be7b05'],1,10,11,1,,,
2d046080a373b436ec46c98596946caf64af35d0,Accept CQL versions > 3.0.1,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 15:36:07-05:00,18000,2013-06-03 15:36:07-05:00,18000,True,False,['connection.py'],['0233421076e458c9037d4283aaac06373a9ea1f3'],3,3,6,1,0.0,1.0,0.0
f2b9c14e2906fc2110fa19ae1ce852640c5216ad,version number bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 13:37:14-07:00,25200,2013-06-03 13:37:14-07:00,25200,True,False,"['__init__.py', 'conf.py', 'setup.py']",['1301486d0e223d9feba7453b49fc44ab3a8707c3'],4,4,8,3,,,
ed7d488d2503103036fc49bd5d4499d305a7f1fa,Don't hold lock when incrementing load balancer position,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 16:56:27-05:00,18000,2013-06-03 16:56:27-05:00,18000,True,False,['policies.py'],['2d046080a373b436ec46c98596946caf64af35d0'],11,8,19,1,0.0,0.0,0.2
bfadc1dc4fa07226c9ef0390232cd8e59c1623f8,Add note about removing locking from borrow_connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 17:01:28-05:00,18000,2013-06-03 17:01:28-05:00,18000,True,False,['pool.py'],['ed7d488d2503103036fc49bd5d4499d305a7f1fa'],0,3,3,1,,,
0cea45f438389ea519844edda67e4b1c6d44d4fd,Wrap ResponseFuture._set_result in exception handler,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 17:02:20-05:00,18000,2013-06-03 17:02:20-05:00,18000,True,False,['cluster.py'],['bfadc1dc4fa07226c9ef0390232cd8e59c1623f8'],68,73,141,1,0.0,0.0,1.0
c6d3fa20c148399b11abeb3b2093eac9b3944c74,Add __str__ method for ResponseFuture,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 17:02:36-05:00,18000,2013-06-03 17:02:36-05:00,18000,True,False,['cluster.py'],['0cea45f438389ea519844edda67e4b1c6d44d4fd'],0,5,5,1,1.0,1.0,1.0
36e0f0fb37777522a8c45f6aac3b25f7184b0a03,Hold Connection lock for shorter period while pushing,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-03 17:03:10-05:00,18000,2013-06-03 17:03:10-05:00,18000,True,False,['connection.py'],['c6d3fa20c148399b11abeb3b2093eac9b3944c74'],5,8,13,1,1.0,1.0,1.0
5eef9bd18d94ab0c3d898653799707268b4148e7,adding tests around io for all column types,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 15:46:53-07:00,25200,2013-06-03 15:46:53-07:00,25200,True,False,['test_value_io.py'],['f2b9c14e2906fc2110fa19ae1ce852640c5216ad'],0,136,136,1,1.0,1.0,1.0
229be07bab4c74e13849f623984fd3fe602414f5,adding some conversion logic to Decimal and UUID columns,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 15:47:22-07:00,25200,2013-06-03 15:47:22-07:00,25200,True,False,['columns.py'],['5eef9bd18d94ab0c3d898653799707268b4148e7'],0,22,22,1,1.0,1.0,1.0
7a4fe9ae78090c2591f0980cf8614833fb924111,fixing the get_dict method on the time uuid functions,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 15:48:17-07:00,25200,2013-06-03 15:48:17-07:00,25200,True,False,['functions.py'],['229be07bab4c74e13849f623984fd3fe602414f5'],0,6,6,1,1.0,1.0,1.0
45695a9f691357332a60c5ab4749420cce9797f0,version number bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 15:49:15-07:00,25200,2013-06-03 15:49:15-07:00,25200,True,False,"['__init__.py', 'conf.py', 'setup.py']",['7a4fe9ae78090c2591f0980cf8614833fb924111'],4,4,8,3,,,
8597bfac6c41f9f83b3c45b54a1536f6a7457ff1,adding test files and starting to rework the pool,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-03 13:39:40-07:00,25200,2013-06-03 17:33:00-07:00,25200,True,False,"['connection.py', '__init__.py', 'test_connection_pool.py']",['45695a9f691357332a60c5ab4749420cce9797f0'],0,2,2,3,,,
55331ad07b39bf6f2f164cb12a20fa9379517065,making ConnectionPool not use a global state,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-03 13:45:07-07:00,25200,2013-06-03 17:33:00-07:00,25200,True,False,['connection.py'],['8597bfac6c41f9f83b3c45b54a1536f6a7457ff1'],22,18,40,1,0.0,0.0,0.0
d742345796812722d94c71bab4bc2a423dc6cd62,setup now creates a global connection pool,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-03 13:48:58-07:00,25200,2013-06-03 17:33:00-07:00,25200,True,False,['connection.py'],['55331ad07b39bf6f2f164cb12a20fa9379517065'],15,11,26,1,1.0,1.0,0.0
e6a7934fe30ba89187b30f3c696048105d905d02,fixing references to removed vars,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-03 13:55:30-07:00,25200,2013-06-03 17:33:00-07:00,25200,True,False,"['connection.py', 'base.py']",['d742345796812722d94c71bab4bc2a423dc6cd62'],21,10,31,2,0.2,0.2,0.2
37259b963ee155a17d86ae597a2814e92f818991,"Getting connection pooling working with mocking library

Verified throwing exception when no servers are available,
but correctly recovering and hitting the next server when
one is.

fixing minor pooling tests

ensure we get the right exception back when no servers are available

working on tests for retry

connections working despite failure

Removed old connection_manager and replaced with a simple context
manager that allows for easy access to clients within the main pool",Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-03 14:48:44-07:00,25200,2013-06-03 17:33:00-07:00,25200,True,False,"['.gitignore', 'connection.py', 'management.py', 'query.py', 'base.py', 'test_management.py', 'test_queryset.py']",['e6a7934fe30ba89187b30f3c696048105d905d02'],188,167,355,7,1.0,0.1111111111111111,0.3333333333333333
66548e7f243c75d5160d7bfdd9a2aa06ef6186ce,test comment,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-03 17:30:57-07:00,25200,2013-06-03 17:33:00-07:00,25200,True,False,['test_management.py'],['37259b963ee155a17d86ae597a2814e92f818991'],0,3,3,1,,,
f94c61228ce7e1f329685b78f5a894e19f39c5df,clarifying how the column io tests work,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 18:09:11-07:00,25200,2013-06-03 18:09:11-07:00,25200,True,False,['test_value_io.py'],['45695a9f691357332a60c5ab4749420cce9797f0'],17,20,37,1,0.0,0.0,0.0
f4c7a5bde249dc5d08246a196fec7f664bfcbb5c,more clarification,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-03 18:12:46-07:00,25200,2013-06-03 18:12:46-07:00,25200,True,False,['test_value_io.py'],['f94c61228ce7e1f329685b78f5a894e19f39c5df'],44,51,95,1,,,
8ca9c98bcaa74ffab003bccc7b0270e69ec16888,Avoid locking pool during borrow_connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-04 13:50:20-05:00,18000,2013-06-04 13:50:20-05:00,18000,True,False,"['cluster.py', 'pool.py']",['36e0f0fb37777522a8c45f6aac3b25f7184b0a03'],40,48,88,2,0.0,1.0,1.0
20ba2fcc78e1eecd718190bdc2cef78ed80ac93e,fixing some attribute names that were upsetting py.test reflection,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-04 13:21:12-07:00,25200,2013-06-04 13:21:12-07:00,25200,True,False,['test_value_io.py'],['29263f7ceaa67028caf59e916cb79a2bcfadd5a1'],25,26,51,1,,,
67055e006e1125446c56c05e07c1bd60afb2b1c8,fixing bug in uuid string validation,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-04 13:40:19-07:00,25200,2013-06-04 13:40:19-07:00,25200,True,False,['columns.py'],['20ba2fcc78e1eecd718190bdc2cef78ed80ac93e'],3,3,6,1,,,
750c58c27c71e176b27aba8462c18d36e5b764a4,version bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-04 13:43:58-07:00,25200,2013-06-04 13:43:58-07:00,25200,True,False,"['__init__.py', 'conf.py', 'setup.py']",['67055e006e1125446c56c05e07c1bd60afb2b1c8'],4,4,8,3,,,
634c0e9ae0c8cbf2daa5fed1f85f4d00f41f1da0,adding support for abstract base classes,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-05 14:21:58-07:00,25200,2013-06-05 14:21:58-07:00,25200,True,False,"['management.py', 'models.py', 'test_class_construction.py', 'models.rst']",['750c58c27c71e176b27aba8462c18d36e5b764a4'],4,91,95,4,0.8780487804878049,0.8780487804878049,0.8780487804878049
fd27adf80ebe64bafb7972d0a674d6ce5fc2f9e3,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-05 14:25:33-07:00,25200,2013-06-05 14:25:33-07:00,25200,True,False,['changelog'],['634c0e9ae0c8cbf2daa5fed1f85f4d00f41f1da0'],0,6,6,1,,,
d6707038df441e6b0e05d7eedcafaa0a59b407f3,version bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-05 14:25:40-07:00,25200,2013-06-05 14:25:40-07:00,25200,True,False,"['__init__.py', 'conf.py', 'setup.py']",['fd27adf80ebe64bafb7972d0a674d6ce5fc2f9e3'],4,4,8,3,,,
f8654657578cfc09273c8d45c9c829699756b059,making connection consistency more configurable,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-07 16:18:59-07:00,25200,2013-06-07 16:18:59-07:00,25200,True,False,"['connection.py', 'base.py', 'connection.rst']",['d6707038df441e6b0e05d7eedcafaa0a59b407f3'],6,22,28,3,0.0,1.0,0.8571428571428571
226e900fdf5ff85ebd16bb72c4ef37f666f1ad72,adding some IDE hints to batch and query set descriptors,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-07 16:29:28-07:00,25200,2013-06-07 16:29:28-07:00,25200,True,False,['models.py'],['f8654657578cfc09273c8d45c9c829699756b059'],0,13,13,1,1.0,1.0,0.0
35811d1fab64266655ff335c8afbdd5969c332f6,expanding column documentation,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-07 17:42:12-07:00,25200,2013-06-07 17:42:12-07:00,25200,True,False,"['columns.py', 'columns.rst']",['226e900fdf5ff85ebd16bb72c4ef37f666f1ad72'],4,16,20,2,0.0,1.0,0.0
f722a52850fc14bb3b3630ca4822d4142475141d,Fix typo in example docs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-14 16:41:15-05:00,18000,2013-06-14 16:41:15-05:00,18000,True,False,['cluster.py'],['8ca9c98bcaa74ffab003bccc7b0270e69ec16888'],2,2,4,1,,,
a387644dc841da1057e238550fd5bb76edec5c17,Move current keyspace check out of Connection lock,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-14 16:41:33-05:00,18000,2013-06-14 16:41:33-05:00,18000,True,False,['connection.py'],['f722a52850fc14bb3b3630ca4822d4142475141d'],4,1,5,1,1.0,0.0,0.0
b0e32005d82f064a7ed026a325d04c8fadba8200,Fix potential compile error in murmur3.c,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-14 16:43:11-05:00,18000,2013-06-14 16:43:11-05:00,18000,True,False,['murmur3.c'],['a387644dc841da1057e238550fd5bb76edec5c17'],1,1,2,1,,,
5012f3f7f89c4ce65d2b48d2583e723376ee9617,Raise NotImplementedError instead of NotImplemented,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-14 16:59:12-05:00,18000,2013-06-14 16:59:12-05:00,18000,True,False,"['cluster.py', 'policies.py', 'pool.py']",['b0e32005d82f064a7ed026a325d04c8fadba8200'],7,7,14,3,,,
26420a7b40d86d570372e859f4ca9cb2e1d61c6a,Rename ResponseFuture.deliver() to result(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-14 17:17:04-05:00,18000,2013-06-14 17:17:04-05:00,18000,True,False,"['cluster.py', 'example.py', 'test_response_future.py']",['5012f3f7f89c4ce65d2b48d2583e723376ee9617'],24,24,48,3,,,
f6fd5b100cf4d91bd0ba15a6c733183a208eeef7,beginning work on query builder,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-14 15:47:26-07:00,25200,2013-06-14 15:47:26-07:00,25200,True,False,['query.py'],['35811d1fab64266655ff335c8afbdd5969c332f6'],0,60,60,1,1.0,1.0,0.8695652173913043
4a977005f3569d1a946d7021486c1ba465b14a08,fixed #67 (validation on keyname typos) #66 (removed defaults on columns) and #57 and removed autoid,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-14 17:52:13-07:00,25200,2013-06-14 17:52:13-07:00,25200,True,False,"['changelog', 'columns.py', 'models.py', 'test_validation.py', 'test_class_construction.py', 'test_equality_operations.py', 'test_model_io.py']",['35811d1fab64266655ff335c8afbdd5969c332f6'],32,68,100,7,1.0,1.0,1.0
f254f4da7a4e93e7b757da272a79c59eb01b64ab,updated changelog,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-14 17:53:00-07:00,25200,2013-06-14 17:53:00-07:00,25200,True,False,['changelog'],['4a977005f3569d1a946d7021486c1ba465b14a08'],0,1,1,1,,,
23a59e85a2c2c1717417e7ce4f8ff29df117e82d,changelog update,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-14 17:53:15-07:00,25200,2013-06-14 17:53:15-07:00,25200,True,False,['changelog'],['f254f4da7a4e93e7b757da272a79c59eb01b64ab'],1,1,2,1,,,
30c59e5e8fa7e1cdc70cf0109690a46f44ed9074,required is false by default #61,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-14 17:57:42-07:00,25200,2013-06-14 17:57:42-07:00,25200,True,False,"['columns.py', 'test_validation.py']",['23a59e85a2c2c1717417e7ce4f8ff29df117e82d'],2,2,4,2,,,
0476a97a67c433843c0ad8dd2d713f1495648ac2,"adding query method, and expanding the column descriptor",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 10:06:55-07:00,25200,2013-06-15 10:06:55-07:00,25200,True,False,['query.py'],['f6fd5b100cf4d91bd0ba15a6c733183a208eeef7'],0,13,13,1,1.0,1.0,1.0
c90da56021b2c047e3a294fbc17d211a2aa8c567,replacing property stuff with ColumnDescriptor instances,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 10:30:02-07:00,25200,2013-06-15 10:30:02-07:00,25200,True,False,"['models.py', 'test_class_construction.py']",['0476a97a67c433843c0ad8dd2d713f1495648ac2'],10,54,64,2,1.0,1.0,0.16666666666666666
36082ee04a20fb250ad9e0217c507d8e1186eb89,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 10:34:36-07:00,25200,2013-06-15 10:34:36-07:00,25200,True,False,['changelog'],['09d13432ea4a080d072f5f78fa5bfeef60b11a35'],0,1,1,1,,,
4d21458264e239501c4aa284584050a8dc79cb58,expanding descriptor documentation,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 11:22:12-07:00,25200,2013-06-15 11:22:12-07:00,25200,True,False,['models.py'],['36082ee04a20fb250ad9e0217c507d8e1186eb89'],2,10,12,1,1.0,1.0,0.0
a9c19d3120d2752985aad4ae7f83e6e8dcbc1829,"implementing query method, and mode query method descriptor",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 11:26:27-07:00,25200,2013-06-15 11:26:27-07:00,25200,True,False,"['models.py', 'query.py']",['4d21458264e239501c4aa284584050a8dc79cb58'],0,35,35,2,1.0,1.0,0.4444444444444444
1e6531afda1ba055de09388e0a2a0bfb725dd57d,moving column query expression evaluator out of column descriptor,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 11:27:36-07:00,25200,2013-06-15 11:27:36-07:00,25200,True,False,"['models.py', 'test_class_construction.py']",['a9c19d3120d2752985aad4ae7f83e6e8dcbc1829'],4,14,18,2,1.0,1.0,1.0
c3c21fa1d4b5459617292710dfb083ac38584cda,adding test around query expressions,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 11:27:56-07:00,25200,2013-06-15 11:27:56-07:00,25200,True,False,['test_queryset.py'],['1e6531afda1ba055de09388e0a2a0bfb725dd57d'],0,16,16,1,1.0,1.0,1.0
0d251d170a1a2be5d8d76a0746602601de3f938a,adding query method argument validation and supporting tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 11:33:02-07:00,25200,2013-06-15 11:33:02-07:00,25200,True,False,"['query.py', 'test_queryset.py']",['c3c21fa1d4b5459617292710dfb083ac38584cda'],1,17,18,2,1.0,1.0,1.0
286da25d9aa8d7528217a4c7497cc3dbcd4111d1,adding more tests around query method behavior,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 11:36:43-07:00,25200,2013-06-15 11:36:43-07:00,25200,True,False,['test_queryset.py'],['0d251d170a1a2be5d8d76a0746602601de3f938a'],1,26,27,1,1.0,1.0,1.0
83d904f58f76dd628f1c97392dd353bd3c7cdc22,adding additional tests around query method,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 11:45:11-07:00,25200,2013-06-15 11:45:11-07:00,25200,True,False,['test_queryset.py'],['286da25d9aa8d7528217a4c7497cc3dbcd4111d1'],20,43,63,1,0.38461538461538464,1.0,1.0
b6701db99ed17e15c3e26dcd82fb061ca3dfbf29,rolling all query types into the filter method and removing the query method,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 11:54:23-07:00,25200,2013-06-15 11:54:23-07:00,25200,True,False,"['models.py', 'query.py', 'test_queryset.py']",['83d904f58f76dd628f1c97392dd353bd3c7cdc22'],58,27,85,3,0.0,0.0,0.0
264fcaeb7b277573fb6e057cb40c3bf1ba8a9416,updating the get methods to work with query expressions,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 12:37:36-07:00,25200,2013-06-15 12:37:36-07:00,25200,True,False,"['query.py', 'test_queryset.py']",['b6701db99ed17e15c3e26dcd82fb061ca3dfbf29'],16,28,44,2,1.0,1.0,0.9
f8c4317098ebb710570f79207044067c2fd1afe6,adding additional tests around the query expression queries,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 12:45:36-07:00,25200,2013-06-15 12:45:36-07:00,25200,True,False,['test_queryset.py'],['264fcaeb7b277573fb6e057cb40c3bf1ba8a9416'],5,35,40,1,0.19047619047619047,0.0,1.0
9f94df4b8eb15a9cd27d411e4105124613be3c88,#58 - renamed model configuration attributes to use __double_underscore__ style,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-15 12:50:12-07:00,25200,2013-06-15 12:50:12-07:00,25200,True,False,"['changelog', 'management.py', 'models.py', 'test_class_construction.py']",['30c59e5e8fa7e1cdc70cf0109690a46f44ed9074'],10,12,22,4,,,
09883d6b0408424e32b4190da41271e6673d8f85,changed __contains__ to in_(),Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 16:46:34-07:00,25200,2013-06-15 16:46:34-07:00,25200,True,False,"['query.py', 'test_queryset.py']",['f8c4317098ebb710570f79207044067c2fd1afe6'],7,9,16,2,,,
d50fdfab8b4fbe6fbdb732d69fe54e91af4a0ecc,renaming queryable column,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 16:55:22-07:00,25200,2013-06-15 16:55:22-07:00,25200,True,False,"['models.py', 'query.py']",['09883d6b0408424e32b4190da41271e6673d8f85'],5,11,16,2,,,
005129e6e1fd581962ccb1b9a7892613ed1e7eb7,"moving named classes into their own file, and renaming them",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 17:37:04-07:00,25200,2013-06-15 17:37:04-07:00,25200,True,False,"['named.py', 'query.py']",['d50fdfab8b4fbe6fbdb732d69fe54e91af4a0ecc'],36,41,77,2,1.0,1.0,1.0
13075bc8a56fbbed36e416c3fda850a373be3357,adding tests around name object query creation,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 17:40:18-07:00,25200,2013-06-15 17:40:18-07:00,25200,True,False,['test_named.py'],['005129e6e1fd581962ccb1b9a7892613ed1e7eb7'],0,47,47,1,1.0,1.0,1.0
50506f9a970966ea5544396f08385ffa0a2d0a0f,adding methods to mimic regular models,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 17:42:40-07:00,25200,2013-06-15 17:42:40-07:00,25200,True,False,['named.py'],['13075bc8a56fbbed36e416c3fda850a373be3357'],0,23,23,1,1.0,1.0,0.6
58e38bca76169291aded8b73042c952929425683,adding fake _column,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 17:51:14-07:00,25200,2013-06-15 17:51:14-07:00,25200,True,False,['named.py'],['50506f9a970966ea5544396f08385ffa0a2d0a0f'],4,15,19,1,1.0,1.0,1.0
df2a769c6aca4410c4efcf3e4082468f8997d0a5,"commenting out named table create, for now",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-15 17:51:32-07:00,25200,2013-06-15 17:51:32-07:00,25200,True,False,['named.py'],['58e38bca76169291aded8b73042c952929425683'],3,3,6,1,0.0,0.0,0.0
e6644239bb61981f7728cf37495967ed6a26ce73,updated docs,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-15 22:56:57-07:00,25200,2013-06-15 22:56:57-07:00,25200,True,False,['queryset.rst'],['38bfd781b82716788bb70aa05192d77be5b76b97'],9,30,39,1,,,
fedb622fe426080d30aa58906aeae7ea9fad7cdb,adding tests around where clause generation,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 08:18:53-07:00,25200,2013-06-16 08:18:53-07:00,25200,True,False,['test_named.py'],['df2a769c6aca4410c4efcf3e4082468f8997d0a5'],0,31,31,1,1.0,1.0,1.0
e87d806e5b7ce022ecb64e2dd1d242e6aa194b06,renaming queryset,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 08:21:04-07:00,25200,2013-06-16 08:21:04-07:00,25200,True,False,"['models.py', 'query.py']",['fedb622fe426080d30aa58906aeae7ea9fad7cdb'],7,7,14,2,,,
86202721ada6d1e5e8c153a9b8b038e4898363c6,creating simple query set,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 08:24:19-07:00,25200,2013-06-16 08:24:19-07:00,25200,True,False,['query.py'],['e87d806e5b7ce022ecb64e2dd1d242e6aa194b06'],3,11,14,1,,,
8aaae66254c82cadfc3f2042be8ab6171b88b43f,moving where clause validation off of SimpleQuerySet,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 08:27:02-07:00,25200,2013-06-16 08:27:02-07:00,25200,True,False,['query.py'],['86202721ada6d1e5e8c153a9b8b038e4898363c6'],21,24,45,1,1.0,1.0,1.0
83c11cb735dda575617e3875bffda207fab0e963,encapsulating queryset column retrieval,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 08:32:27-07:00,25200,2013-06-16 08:32:27-07:00,25200,True,False,"['models.py', 'query.py']",['8aaae66254c82cadfc3f2042be8ab6171b88b43f'],1,12,13,2,1.0,1.0,1.0
9c56f3181a10f79d7c8449dd58b949f67e1d98b0,switching named columns from model queryset to simple queryset,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 08:35:48-07:00,25200,2013-06-16 08:35:48-07:00,25200,True,False,['named.py'],['83c11cb735dda575617e3875bffda207fab0e963'],10,31,41,1,1.0,1.0,0.0
23ec346b82a873f9919e6fb7f4602d1e77072960,updating the named object doc strings,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 08:37:03-07:00,25200,2013-06-16 08:37:03-07:00,25200,True,False,['named.py'],['9c56f3181a10f79d7c8449dd58b949f67e1d98b0'],3,9,12,1,,,
6d42ab38ed821bdf317fd42d15f4f4d1a5d20f1d,expanding cql methods on named column,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 08:40:36-07:00,25200,2013-06-16 08:40:36-07:00,25200,True,False,['named.py'],['23ec346b82a873f9919e6fb7f4602d1e77072960'],1,4,5,1,1.0,1.0,1.0
e9d951b671d6b7035bd68bec4f1e999cde943ba9,making named table operations instance specific,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 09:14:37-07:00,25200,2013-06-16 09:14:37-07:00,25200,True,False,['named.py'],['6d42ab38ed821bdf317fd42d15f4f4d1a5d20f1d'],6,11,17,1,1.0,1.0,1.0
cc3b08bdd6e6a7d45bd8b4f895212dd2f1284345,renaming cls to self,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 09:17:13-07:00,25200,2013-06-16 09:17:13-07:00,25200,True,False,['named.py'],['e9d951b671d6b7035bd68bec4f1e999cde943ba9'],12,11,23,1,,,
def580706533dd3814d4d108a12cbc3b95b53b22,adding tests around named table queries,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 09:22:59-07:00,25200,2013-06-16 09:22:59-07:00,25200,True,False,['test_named.py'],['cc3b08bdd6e6a7d45bd8b4f895212dd2f1284345'],1,25,26,1,1.0,1.0,1.0
cc40938b592a8d95922e3e321adb07a3a9f92723,splitting the simple queryset into an abstract and simple queryset,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 09:27:41-07:00,25200,2013-06-16 09:27:41-07:00,25200,True,False,['query.py'],['def580706533dd3814d4d108a12cbc3b95b53b22'],10,27,37,1,1.0,0.6666666666666666,1.0
df964ec3a5543d670f775b96159e520d5505e572,moving the select statement into it's own method,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 09:37:42-07:00,25200,2013-06-16 09:37:42-07:00,25200,True,False,['query.py'],['cc40938b592a8d95922e3e321adb07a3a9f92723'],9,8,17,1,,1.0,
fbe3294554a1c1e2b498de4298829fd6d6d33cfa,creating different result constructor factory methods for each queryset type,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 09:48:07-07:00,25200,2013-06-16 09:48:07-07:00,25200,True,False,['query.py'],['df964ec3a5543d670f775b96159e520d5505e572'],29,42,71,1,1.0,1.0,1.0
d741790ec78b90dd66a19c328670aec84b60c01c,changing named query results to Result Object instance,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 09:52:37-07:00,25200,2013-06-16 09:52:37-07:00,25200,True,False,['query.py'],['fbe3294554a1c1e2b498de4298829fd6d6d33cfa'],1,12,13,1,1.0,1.0,1.0
5c1e203f099470d8d66ec44be8446b04d8461169,adding does not exist and multiple objects returns exceptions to named table,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 09:58:56-07:00,25200,2013-06-16 09:58:56-07:00,25200,True,False,['named.py'],['d741790ec78b90dd66a19c328670aec84b60c01c'],0,5,5,1,,,
6ccc32084c208d612eca7f577962b79f5cf7714e,moving order conditions into their own method and adding extra validation to the model queryset order condition method,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 10:07:57-07:00,25200,2013-06-16 10:07:57-07:00,25200,True,False,['query.py'],['5c1e203f099470d8d66ec44be8446b04d8461169'],18,26,44,1,1.0,1.0,1.0
d7a7d13f54661b9af781219ce2a1e6de65378ab8,adding additional tests around named table queries,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 10:08:15-07:00,25200,2013-06-16 10:08:15-07:00,25200,True,False,['test_named.py'],['6ccc32084c208d612eca7f577962b79f5cf7714e'],1,127,128,1,0.7142857142857143,1.0,1.0
423e26e6b4d53e48a6b0ad65e945be06d6546dc4,removing module name from auto column family name generation,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-16 10:27:42-07:00,25200,2013-06-16 10:27:42-07:00,25200,True,False,"['models.py', 'test_class_construction.py']",['e6644239bb61981f7728cf37495967ed6a26ce73'],4,8,12,2,1.0,1.0,1.0
61de63acc8863c0b2a46df0a18f871fc94fbb4bf,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-17 11:45:37-07:00,25200,2013-06-17 11:45:37-07:00,25200,True,False,['changelog'],['423e26e6b4d53e48a6b0ad65e945be06d6546dc4'],0,1,1,1,,,
d9491aa5f5acc7c806dfdc7809d0a9aefa14e62d,adding breaking change link to readme,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-17 11:48:58-07:00,25200,2013-06-17 11:48:58-07:00,25200,True,False,['README.md'],['61de63acc8863c0b2a46df0a18f871fc94fbb4bf'],1,3,4,1,,,
fec88a847e8b52b4a0b46bc5dada002f4c6c4d14,create uuid1 from datetime #65,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-17 16:37:03-07:00,25200,2013-06-17 16:37:10-07:00,25200,True,False,"['columns.py', 'test_validation.py']",['7918a0377aad948f295a611ab23fd3520351291c'],2,59,61,2,0.22857142857142856,0.22857142857142856,1.0
fed38658460871eaa1ff86b036c577406f20dc7b,updated changelog,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-17 16:39:26-07:00,25200,2013-06-17 16:39:26-07:00,25200,True,False,['changelog'],['85e143a140b89090ff1e7e0a681f2ecdf2dee9fb'],0,2,2,1,,,
071b54a76bafa1f62344a226f41c93fe2ab22142,updating setup,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-18 11:50:22-07:00,25200,2013-06-18 11:50:22-07:00,25200,True,False,['setup.py'],['5c011a80f8fdd620f6b05461c31172a30467cb1d'],4,3,7,1,,,
474bfb4c098a6240edf01c917a529a3cc3ca0e34,version number bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-18 11:51:21-07:00,25200,2013-06-18 11:51:21-07:00,25200,True,False,"['__init__.py', 'conf.py', 'setup.py']",['071b54a76bafa1f62344a226f41c93fe2ab22142'],4,4,8,3,,,
b5d0ddad8bcf8eef4da51348a49fe128b3fd49de,removing alpha warning,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-18 11:57:35-07:00,25200,2013-06-18 11:57:35-07:00,25200,True,False,['index.rst'],['474bfb4c098a6240edf01c917a529a3cc3ca0e34'],2,0,2,1,,,
cc1af16c1c80d4acb631e4769903c4a2d78b3d98,fixed TS issue,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-18 17:50:30-07:00,25200,2013-06-18 17:50:30-07:00,25200,True,False,['columns.py'],['5c011a80f8fdd620f6b05461c31172a30467cb1d'],4,0,4,1,1.0,1.0,0.0
1d4e9b0957070092e02eb4a659370255a896fb10,bugfix for timeuuids,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-18 17:53:53-07:00,25200,2013-06-18 17:53:53-07:00,25200,True,False,"['__init__.py', 'conf.py', 'setup.py']",['3b43338da17f4b68d4c9bebf3f0211826eb329b2'],3,3,6,3,,,
dad5effe7b79d86f8c39444cc0c2b93ac9ed33ec,adding change warning to all doc pages,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-19 09:55:54-07:00,25200,2013-06-19 09:55:54-07:00,25200,True,False,"['index.rst', 'columns.rst', 'connection.rst', 'manage_schemas.rst', 'models.rst', 'queryset.rst']",['b5d0ddad8bcf8eef4da51348a49fe128b3fd49de'],0,30,30,6,,,
147158eb99c16530e8cf40d8324ba8059eb234cc,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-19 14:50:43-07:00,25200,2013-06-19 14:50:43-07:00,25200,True,False,['changelog'],['6dc1600648cf530c0bf87125faf94c69dbae099e'],1,7,8,1,,,
fb5aba9ba69318b90057f6bfad434a2d4459bae2,"adding support for instantiating container columns with column instances, as well as classes",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-19 14:57:33-07:00,25200,2013-06-19 14:57:33-07:00,25200,True,False,"['columns.py', 'test_container_columns.py']",['147158eb99c16530e8cf40d8324ba8059eb234cc'],4,31,35,2,1.0,0.0,0.5454545454545454
c81d01d0f765087bc6ed97d4f860f33492d920c9,adding column instance support to map keys as well,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-19 15:02:24-07:00,25200,2013-06-19 15:02:24-07:00,25200,True,False,"['columns.py', 'test_container_columns.py']",['fb5aba9ba69318b90057f6bfad434a2d4459bae2'],18,56,74,2,1.0,0.21052631578947367,0.7368421052631579
d78a452087dc1bf4a960420949e14e78dc58ba5b,removing now empty test class,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-19 15:03:10-07:00,25200,2013-06-19 15:03:10-07:00,25200,True,False,['test_container_columns.py'],['c81d01d0f765087bc6ed97d4f860f33492d920c9'],6,5,11,1,,,
01cf5bf0b00622f8849d9289920edacab4436e28,version number bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-19 15:04:24-07:00,25200,2013-06-19 15:04:24-07:00,25200,True,False,"['__init__.py', 'conf.py', 'setup.py']",['d78a452087dc1bf4a960420949e14e78dc58ba5b'],4,4,8,3,,,
43b6eb3c8dca2d3d372ecd308ebe024b7777d707,fixing text min length calculation to work with new required=False default,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-20 10:30:06-07:00,25200,2013-06-20 10:30:06-07:00,25200,True,False,"['columns.py', 'test_validation.py']",['01cf5bf0b00622f8849d9289920edacab4436e28'],1,7,8,2,1.0,1.0,1.0
6587d383c27ab05a5c4a2bd0fda8e06e1beb2530,0.4.3 version bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-20 10:41:57-07:00,25200,2013-06-20 10:41:57-07:00,25200,True,False,"['changelog', '__init__.py', 'conf.py', 'setup.py']",['43b6eb3c8dca2d3d372ecd308ebe024b7777d707'],4,7,11,4,,,
9634f47ea57c2122e9060ec6e94c445e1c941f45,updating failing test,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-20 10:48:10-07:00,25200,2013-06-20 10:48:10-07:00,25200,True,False,['test_validation.py'],['6587d383c27ab05a5c4a2bd0fda8e06e1beb2530'],3,1,4,1,0.0,0.0,0.0
174aa4aa1b946f7958ac479821ed32879890f88f,updated batch docs,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-21 10:41:34-07:00,25200,2013-06-21 10:41:34-07:00,25200,True,False,['queryset.rst'],['1d4e9b0957070092e02eb4a659370255a896fb10'],0,9,9,1,,,
7d62430cc849d1f38a7069e518574f3ec04133ec,Restore CQL query logging at DEBUG level.,Kai Lautaportti,kai.lautaportti@gmail.com,Kai Lautaportti,kai.lautaportti@gmail.com,2013-06-24 10:49:24+03:00,-10800,2013-06-24 10:49:24+03:00,-10800,True,False,['connection.py'],['a6aab2f6dbabfc7b15d0a976616c0decdc62b922'],0,1,1,1,1.0,1.0,0.0
ad6d7b834ef228f522d2c80eee689ecac45eee93,"Make ValueQuoter objects equal if their repr() are equal.

This makes model instances which have quoted values to equal in an
intuitive manner.",Kai Lautaportti,kai.lautaportti@gmail.com,Kai Lautaportti,kai.lautaportti@gmail.com,2013-06-07 23:17:31+03:00,-10800,2013-06-24 11:11:24+03:00,-10800,True,False,"['columns.py', 'test_value_io.py']",['a6aab2f6dbabfc7b15d0a976616c0decdc62b922'],0,16,16,2,1.0,1.0,1.0
ed46c0c5ab62f84a36e511326daacd88979174c3,"Fixed a bug when NetworkTopologyStrategy is used.

Although the Cassandra documentation implies that the
`replication_factor` parameter would be ignored in this case its
presence will cause an error when creating a keyspace using
NetworkTopologyStrategy.",Kai Lautaportti,kai.lautaportti@gmail.com,Kai Lautaportti,kai.lautaportti@gmail.com,2013-06-07 19:18:07+03:00,-10800,2013-06-24 14:21:34+03:00,-10800,True,False,['management.py'],['a6aab2f6dbabfc7b15d0a976616c0decdc62b922'],0,6,6,1,0.0,0.0,0.0
19476e7be69e23b316698e8db5256c772e763ede,Use log instead of print in example.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-24 10:34:59-05:00,18000,2013-06-24 10:34:59-05:00,18000,True,False,['example.py'],['26420a7b40d86d570372e859f4ca9cb2e1d61c6a'],8,8,16,1,,,
ac2463b49323f2d8475a1e641a375abf138fbef9,Include ConsistencyLevel usage in example.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-24 10:56:16-05:00,18000,2013-06-24 10:56:16-05:00,18000,True,False,['example.py'],['19476e7be69e23b316698e8db5256c772e763ede'],4,6,10,1,,,
b4d1c46cdadb458de8be284c2459480ee7c01d13,Fix failing unsupported cql version unit test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-24 12:47:24-05:00,18000,2013-06-24 12:47:24-05:00,18000,True,False,['test_connection.py'],['ac2463b49323f2d8475a1e641a375abf138fbef9'],0,1,1,1,0.0,1.0,1.0
06620f797dcfb59fba1f65e492e27799ba06edac,Basic plumbing for prepared statements,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-24 12:48:10-05:00,18000,2013-06-24 12:48:10-05:00,18000,True,False,"['cluster.py', 'query.py']",['b4d1c46cdadb458de8be284c2459480ee7c01d13'],3,41,44,2,1.0,1.0,0.43478260869565216
8ca9c3c88a5fbf16fe6c6b9026efeb2a8ebfab30,PreparedStatement class and from_message factory,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-24 13:39:39-05:00,18000,2013-06-24 13:39:39-05:00,18000,True,False,['query.py'],['06620f797dcfb59fba1f65e492e27799ba06edac'],3,44,47,1,0.18181818181818182,0.18181818181818182,0.0
7f2ed708979a426ed86b9d3bf23ab20aaf3c9ec7,Accept BoundStatement in Session.execute(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-24 16:03:59-05:00,18000,2013-06-24 16:03:59-05:00,18000,True,False,"['cluster.py', 'decoder.py', 'query.py']",['8ca9c3c88a5fbf16fe6c6b9026efeb2a8ebfab30'],28,75,103,3,0.47058823529411764,1.0,0.8235294117647058
1801bedb82e35ead6afc64fb2bb5548850156d84,"Handle ""unprepared"" response within ResponseFuture",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-25 11:35:44-05:00,18000,2013-06-25 11:35:44-05:00,18000,True,False,"['cluster.py', 'decoder.py']",['7f2ed708979a426ed86b9d3bf23ab20aaf3c9ec7'],4,55,59,2,0.45714285714285713,0.45714285714285713,1.0
934c8b34f31d2b5d031def97ae9fa4c15c664240,fixing bug that would cause failures when updating a model with an empty list,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-25 13:39:06-07:00,25200,2013-06-25 13:39:06-07:00,25200,True,False,"['columns.py', 'test_container_columns.py']",['7d62430cc849d1f38a7069e518574f3ec04133ec'],4,37,41,2,0.8888888888888888,0.8888888888888888,0.8888888888888888
27ba94a03a5df562eccd695dd235031d4d2490dc,adding tests around updating empty and null sets,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-25 13:44:26-07:00,25200,2013-06-25 13:44:26-07:00,25200,True,False,['test_container_columns.py'],['934c8b34f31d2b5d031def97ae9fa4c15c664240'],2,28,30,1,1.0,1.0,1.0
1aacad2673f5848bf9da0c955d4da343b705e06d,reformatting,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-25 13:45:14-07:00,25200,2013-06-25 13:45:14-07:00,25200,True,False,['test_container_columns.py'],['27ba94a03a5df562eccd695dd235031d4d2490dc'],34,31,65,1,,,
f65b39ee2b6a679f1360498d9e7e07562b4d6162,changelog update and version bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-25 13:48:21-07:00,25200,2013-06-25 13:48:21-07:00,25200,True,False,"['changelog', '__init__.py', 'conf.py', 'setup.py']",['1aacad2673f5848bf9da0c955d4da343b705e06d'],4,8,12,4,,,
075e55e648b64b243fc804fa154ef44425019512,Correctly handle errors when decoding responses,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-25 16:19:15-05:00,18000,2013-06-25 16:19:15-05:00,18000,True,False,['connection.py'],['1801bedb82e35ead6afc64fb2bb5548850156d84'],19,26,45,1,0.0,0.0,0.0
0ddc388a70cea96db0c2450505f56a655c770902,"'prepared' response uses short, not int for query_id",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-25 16:21:00-05:00,18000,2013-06-25 16:21:00-05:00,18000,True,False,['decoder.py'],['075e55e648b64b243fc804fa154ef44425019512'],1,1,2,1,,,
4b97781a7bdd15d172adb8231d41f5412ff33c61,adding to_python call to value column in container column to_python methods,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-25 15:00:44-07:00,25200,2013-06-25 15:00:44-07:00,25200,True,False,"['columns.py', 'test_container_columns.py']",['f65b39ee2b6a679f1360498d9e7e07562b4d6162'],2,48,50,2,1.0,1.0,1.0
479224df322104776dda3c6f586f7339a8747ffe,updating changelog and version,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-25 15:02:33-07:00,25200,2013-06-25 15:02:33-07:00,25200,True,False,"['changelog', '__init__.py', 'conf.py', 'setup.py']",['4b97781a7bdd15d172adb8231d41f5412ff33c61'],4,7,11,4,,,
044e9fb933a6e8f0af5b7dc583719ed6f6140f3f,updating value quoter equal function to compare values not repr,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-25 15:30:48-07:00,25200,2013-06-25 15:30:48-07:00,25200,True,False,['columns.py'],['77ecc68e43ddac2ec09bdcac6efd7e9578f58399'],1,1,2,1,,,
e722b505464e3f8c8a76fd564653aed97b69ebce,updating equality operations to stop relying on the to_database dictionary conversion,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-25 15:34:35-07:00,25200,2013-06-25 15:34:58-07:00,25200,True,False,['models.py'],['044e9fb933a6e8f0af5b7dc583719ed6f6140f3f'],1,15,16,1,1.0,1.0,1.0
7a4c7235006da305273b49c6a28fe83497b9dec1,renaming as_dict to _as_dict,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-25 15:46:38-07:00,25200,2013-06-25 15:46:38-07:00,25200,True,False,"['models.py', 'query.py']",['e722b505464e3f8c8a76fd564653aed97b69ebce'],2,2,4,2,,,
ed0bb798962205b699da5c0ddf4e830ad6afcb2a,updating changelog and version,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-25 15:47:41-07:00,25200,2013-06-25 15:47:41-07:00,25200,True,False,"['changelog', '__init__.py', 'conf.py', 'setup.py']",['7a4c7235006da305273b49c6a28fe83497b9dec1'],4,7,11,4,,,
3743029c9d19ebf7c2925800742d29d940a90efd,Handle and utilize MD5 prepared query ID,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 12:47:22-05:00,18000,2013-06-26 12:47:22-05:00,18000,True,False,"['decoder.py', 'query.py']",['0ddc388a70cea96db0c2450505f56a655c770902'],10,19,29,2,1.0,1.0,0.8333333333333334
bebe78210b83ba667b6f955b61653e75aa2f8fb9,"Basic integration test of prepared statements, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 12:48:10-05:00,18000,2013-06-26 12:48:10-05:00,18000,True,False,"['cluster.py', 'test_prepared_statements.py']",['3743029c9d19ebf7c2925800742d29d940a90efd'],12,69,81,2,0.0,0.9523809523809523,0.9761904761904762
769dd5ba311e2c6f55da2fc53bb00be14fc67904,Don't add StreamHandler to test logging setup,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 12:48:34-05:00,18000,2013-06-26 12:48:34-05:00,18000,True,False,['__init__.py'],['bebe78210b83ba667b6f955b61653e75aa2f8fb9'],1,0,1,1,,,
f6c65fa833fab3db18d80e02ef8934fa5194e415,Prepare statements against specific hosts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 13:04:38-05:00,18000,2013-06-26 13:04:38-05:00,18000,True,False,['cluster.py'],['769dd5ba311e2c6f55da2fc53bb00be14fc67904'],6,21,27,1,0.0,0.0,0.0
17dce493bfd4785492f9cd272876035506059623,Avoid error when logging message decode problems,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 13:05:06-05:00,18000,2013-06-26 13:05:06-05:00,18000,True,False,['connection.py'],['f6c65fa833fab3db18d80e02ef8934fa5194e415'],1,2,3,1,0.0,0.0,0.0
b5dccdf5c91a092176a3f9e9ddca50b6233698f2,"Unit tests for PreparedQueryNotFound handling, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 13:36:59-05:00,18000,2013-06-26 13:36:59-05:00,18000,True,False,"['cluster.py', 'decoder.py', 'test_response_future.py']",['17dce493bfd4785492f9cd272876035506059623'],14,60,74,3,0.875,0.875,1.0
5c96a13bc21a82f6cc39f8f1afb64d97b9af1d62,Handle non-ascii chars in ErrorMessage.info,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 13:46:51-05:00,18000,2013-06-26 13:46:51-05:00,18000,True,False,['decoder.py'],['b5dccdf5c91a092176a3f9e9ddca50b6233698f2'],1,1,2,1,,,
cb7d251b9a2712c5517d8d60a8346d7ed657b013,PreparedQueryNotFound returns both IDs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 13:47:04-05:00,18000,2013-06-26 13:47:04-05:00,18000,True,False,['decoder.py'],['5c96a13bc21a82f6cc39f8f1afb64d97b9af1d62'],1,2,3,1,1.0,1.0,1.0
d14a5d33a69c7a065c141796a219923697f4b8a6,Misc minor fixes around prepared statements,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 13:52:52-05:00,18000,2013-06-26 13:52:52-05:00,18000,True,False,['cluster.py'],['cb7d251b9a2712c5517d8d60a8346d7ed657b013'],3,5,8,1,1.0,1.0,1.0
516976333ec7bca4fc586c8fbd5798ec27571621,Proper inheritance of Query by Simple/BoundStatement,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 14:32:45-05:00,18000,2013-06-26 14:32:45-05:00,18000,True,False,['query.py'],['d14a5d33a69c7a065c141796a219923697f4b8a6'],8,15,23,1,1.0,1.0,0.0
ed176401f1c9b1359f09fd464d54ec86d43cd699,"Create ControlConnection earlier, fix population of hosts",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 14:33:51-05:00,18000,2013-06-26 14:33:51-05:00,18000,True,False,['cluster.py'],['516976333ec7bca4fc586c8fbd5798ec27571621'],4,4,8,1,1.0,0.0,0.0
d5e400fae0d3d1dc6391f70732423a0f6f65ac97,Tolerate any kind of Exception when creating host pools,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 14:34:23-05:00,18000,2013-06-26 14:34:23-05:00,18000,True,False,['cluster.py'],['ed176401f1c9b1359f09fd464d54ec86d43cd699'],1,1,2,1,,,
4c4dbf0ef90bd2913c3f7048a59623593d1ff6f9,Fix reconntion factory for host reconnector,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 14:34:48-05:00,18000,2013-06-26 14:34:48-05:00,18000,True,False,"['cluster.py', 'pool.py']",['d5e400fae0d3d1dc6391f70732423a0f6f65ac97'],2,2,4,2,,,
1abb28aa8037c9e04bf13e98502ff2be12c28919,Correctly handle returning closed connections to the pool,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 15:23:29-05:00,18000,2013-06-26 15:23:29-05:00,18000,True,False,['pool.py'],['4c4dbf0ef90bd2913c3f7048a59623593d1ff6f9'],1,1,2,1,,,
cf22f4dce7cb29fd67d2ce811477a757d7888a19,Use correct log function in Connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 15:23:58-05:00,18000,2013-06-26 15:23:58-05:00,18000,True,False,['connection.py'],['1abb28aa8037c9e04bf13e98502ff2be12c28919'],1,1,2,1,,,
2fc284a3f396d6395e577889e2025e2228abdfa3,Avoid query plan changing during iteration,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 15:24:27-05:00,18000,2013-06-26 15:24:27-05:00,18000,True,False,['policies.py'],['cf22f4dce7cb29fd67d2ce811477a757d7888a19'],1,1,2,1,,,
cda2de97fdb96da5ce0c4815c42a13cb1931982a,Add unit test for returning closed connection to pool,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 15:28:33-05:00,18000,2013-06-26 15:28:33-05:00,18000,True,False,['test_host_connection_pool.py'],['2fc284a3f396d6395e577889e2025e2228abdfa3'],0,18,18,1,1.0,1.0,1.0
74c7e2b37ecec1cfbc70dd7f5f4c3ef53a2b1dd2,Improvements to example.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 15:59:48-05:00,18000,2013-06-26 15:59:48-05:00,18000,True,False,['example.py'],['cda2de97fdb96da5ce0c4815c42a13cb1931982a'],4,6,10,1,,,
952ce739eb2fc9ddd572a1439442e5713a23e85b,Start notes on handling libev dependency for installation,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 16:10:31-05:00,18000,2013-06-26 16:10:31-05:00,18000,True,False,['README.rst'],['74c7e2b37ecec1cfbc70dd7f5f4c3ef53a2b1dd2'],2,10,12,1,,,
0db46cc3ab5c3d11a0ef868c2ccc7f5bc6aca6ba,Update mock structures in ControlConn unit test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 16:35:07-05:00,18000,2013-06-26 16:35:07-05:00,18000,True,False,"['test_control_connection.py', 'test_host_connection_pool.py']",['952ce739eb2fc9ddd572a1439442e5713a23e85b'],2,5,7,2,,,
7a546e91dd36449c80e6a7f749f9bc0b88e29ec7,"Actual correct setup of ControlConnection, host population",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 16:50:08-05:00,18000,2013-06-26 16:50:08-05:00,18000,True,False,['cluster.py'],['0db46cc3ab5c3d11a0ef868c2ccc7f5bc6aca6ba'],3,12,15,1,0.0,0.6666666666666666,1.0
fe9a3f35e924fff21e490b14a16229a4197e2fb8,Fix test error due to logging,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 17:07:51-05:00,18000,2013-06-26 17:07:51-05:00,18000,True,False,['cluster.py'],['7a546e91dd36449c80e6a7f749f9bc0b88e29ec7'],2,2,4,1,,,
594a7715aacba9fa65a18ae0f16f1ab6bc423657,Clearer param naming for connection factory,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 17:51:44-05:00,18000,2013-06-26 17:51:44-05:00,18000,True,False,['cluster.py'],['fe9a3f35e924fff21e490b14a16229a4197e2fb8'],3,3,6,1,,,
41344e7e24724bcf99f31d2b1830a395491f44d5,Fix prepare_on_all_hosts(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 17:52:21-05:00,18000,2013-06-26 17:52:21-05:00,18000,True,False,['cluster.py'],['594a7715aacba9fa65a18ae0f16f1ab6bc423657'],1,1,2,1,,,
f3a36febfea654f4e596bc5e7ab606bb2d113ae8,Implement prepare_all_queries(host),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-26 17:52:42-05:00,18000,2013-06-26 17:52:42-05:00,18000,True,False,['cluster.py'],['41344e7e24724bcf99f31d2b1830a395491f44d5'],1,35,36,1,0.0,0.0,1.0
f90cfb046a7e727a160e4e331d799064d1588c06,adding support for setting a query's batch object to None,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-27 13:10:16-07:00,25200,2013-06-27 13:10:16-07:00,25200,True,False,"['query.py', 'test_batch_query.py']",['ed0bb798962205b699da5c0ddf4e830ad6afcb2a'],13,32,45,2,1.0,1.0,1.0
01e9747411452e889f2aebeda26c6c8ea2727930,changelog and version update,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-27 13:11:50-07:00,25200,2013-06-27 13:11:50-07:00,25200,True,False,"['changelog', '__init__.py', 'conf.py', 'setup.py']",['f90cfb046a7e727a160e4e331d799064d1588c06'],4,7,11,4,,,
75d20b69200e99f8ff209530c6c824505b2f93f1,"fixed empty sets, maps, lists",Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-27 14:22:47-07:00,25200,2013-06-27 14:22:47-07:00,25200,True,False,"['columns.py', 'test_container_columns.py']",['01e9747411452e889f2aebeda26c6c8ea2727930'],5,30,35,2,1.0,1.0,0.8333333333333334
5cc63e67cfb8aec15ff1d0a4fc8240cafd64cd71,CQL version file instead of manually updating,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-27 14:58:32-07:00,25200,2013-06-27 14:58:32-07:00,25200,True,False,"['VERSION', '__init__.py', 'conf.py', 'setup.py']",['75d20b69200e99f8ff209530c6c824505b2f93f1'],4,10,14,4,,,
7ab977b59c540c2746cd1c2fe09e84b1b2016870,fixed import,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-27 15:01:15-07:00,25200,2013-06-27 15:01:15-07:00,25200,True,False,['__init__.py'],['5cc63e67cfb8aec15ff1d0a4fc8240cafd64cd71'],0,2,2,1,,,
e2dafaa25caea0f137ad78bd4c33af8d65756ed5,"fixes for pulling data out of DB with empty sets, lists, dict",Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-27 15:30:02-07:00,25200,2013-06-27 15:30:02-07:00,25200,True,False,"['columns.py', 'models.py', 'test_container_columns.py']",['7ab977b59c540c2746cd1c2fe09e84b1b2016870'],3,23,26,3,1.0,1.0,1.0
62fdaa5542d80be291f1826f108ebac1a4b426bc,version bump,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-27 15:30:52-07:00,25200,2013-06-27 15:30:52-07:00,25200,True,False,['VERSION'],['e2dafaa25caea0f137ad78bd4c33af8d65756ed5'],1,1,2,1,,,
db60c151817794dc11b3eb309ba5a22341b64eb2,batch docs for deletion,Jon Haddad,jon@grapheffect.com,Jon Haddad,jon@grapheffect.com,2013-06-27 16:03:12-07:00,25200,2013-06-27 16:03:12-07:00,25200,True,False,['queryset.rst'],['62fdaa5542d80be291f1826f108ebac1a4b426bc'],0,6,6,1,,,
c75c20fe6d3c3d20ff7e3796e26df2ca4b72a80a,Basic working implementation of asyncore reactor,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 11:35:08-05:00,18000,2013-06-28 11:35:08-05:00,18000,True,False,"['cluster.py', 'connection.py', '__init__.py', 'asyncorereactor.py', 'pyevreactor.py']",['f3a36febfea654f4e596bc5e7ab606bb2d113ae8'],241,783,1024,5,0.4899713467048711,0.5931232091690545,0.6934097421203438
730fbf3624a04014cb25b09c3aff0a5f4cd02022,Better var names for example.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 13:38:25-05:00,18000,2013-06-28 13:38:25-05:00,18000,True,False,['example.py'],['c75c20fe6d3c3d20ff7e3796e26df2ca4b72a80a'],14,21,35,1,0.0,0.0,1.0
7cbbf0d0de66747a1d5cfeff967d5010a850e1cc,Avoid attribute error on ResponseFuture cleanup,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 13:38:59-05:00,18000,2013-06-28 13:38:59-05:00,18000,True,False,['cluster.py'],['730fbf3624a04014cb25b09c3aff0a5f4cd02022'],2,7,9,1,1.0,1.0,1.0
845cf66861efa85cb63198ebd5f41070fbdae996,Avoid holding traceback info in local scope,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 13:41:00-05:00,18000,2013-06-28 13:41:00-05:00,18000,True,False,['asyncorereactor.py'],['7cbbf0d0de66747a1d5cfeff967d5010a850e1cc'],3,1,4,1,0.0,0.0,0.0
6505cbcec187ef7bb179622193edc0f0616e9a7e,Basic benchmark setup,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 13:41:34-05:00,18000,2013-06-28 13:41:34-05:00,18000,True,False,"['base.py', 'single_thread_callback_full_pipeline.py', 'single_thread_sync.py']",['845cf66861efa85cb63198ebd5f41070fbdae996'],0,141,141,3,0.36486486486486486,1.0,0.8378378378378378
f1f4ff248009a70e6aa02c639cb0961de415c196,Formatting tweak for benchmark numbers,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 13:42:49-05:00,18000,2013-06-28 13:42:49-05:00,18000,True,False,['base.py'],['6505cbcec187ef7bb179622193edc0f0616e9a7e'],2,2,4,1,,,
609ba579916282b8bed9a682700cc442452c24d7,Remove pyev from explicit dependencies,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 13:49:44-05:00,18000,2013-06-28 13:49:44-05:00,18000,True,False,['setup.py'],['f1f4ff248009a70e6aa02c639cb0961de415c196'],1,1,2,1,,,
9ac977b13b755e8395d5b285e23af73c813dfb04,Make PyevConnection a proper subclass of Connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 14:01:50-05:00,18000,2013-06-28 14:01:50-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'pyevreactor.py']",['609ba579916282b8bed9a682700cc442452c24d7'],257,22,279,3,0.9319727891156463,0.6258503401360545,0.40816326530612246
c23151546a8b5645aaa1252c203fd646effccb71,Add benchmarks for more futures use cases,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 14:22:44-05:00,18000,2013-06-28 14:22:44-05:00,18000,True,False,"['base.py', 'single_thread_callback_full_pipeline.py', 'single_thread_future_batches.py', 'single_thread_future_full_pipeline.py', 'single_thread_future_full_throttle.py']",['9ac977b13b755e8395d5b285e23af73c813dfb04'],3,81,84,5,0.5555555555555556,0.5555555555555556,0.0
98bd9a149be01ee787b18d0db9fa62b1b3a571b0,Mark asyncore loop thread as daemon,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 14:40:07-05:00,18000,2013-06-28 14:40:07-05:00,18000,True,False,['asyncorereactor.py'],['c23151546a8b5645aaa1252c203fd646effccb71'],1,1,2,1,,,
4afc0fc8d2edf796cfc9128b23428ac31601898e,Document connection_class attr of Cluster,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 14:46:38-05:00,18000,2013-06-28 14:46:38-05:00,18000,True,False,['cluster.py'],['98bd9a149be01ee787b18d0db9fa62b1b3a571b0'],0,15,15,1,1.0,1.0,1.0
93817b0f88a0cdc804d3020d25904654c5ac79f5,Make control connections always interested in reads,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 14:51:18-05:00,18000,2013-06-28 14:51:18-05:00,18000,True,False,['asyncorereactor.py'],['4afc0fc8d2edf796cfc9128b23428ac31601898e'],1,3,4,1,1.0,1.0,0.0
9ea4987d8c91151d5962c872fbea840014d6fb9a,Update unit tests for Connection inheritance,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 15:39:28-05:00,18000,2013-06-28 15:39:28-05:00,18000,True,False,"['connection.py', '__init__.py', 'test_pyevreactor.py', 'test_connection.py']",['93817b0f88a0cdc804d3020d25904654c5ac79f5'],200,265,465,4,0.5681818181818182,1.0,0.6818181818181818
82ff125cbf46e3391b26cc205ef992358cbeef32,Fix contact points in example.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 15:40:04-05:00,18000,2013-06-28 15:40:04-05:00,18000,True,False,['example.py'],['9ea4987d8c91151d5962c872fbea840014d6fb9a'],1,1,2,1,,,
3b39dbb564c2d73d0bdd4475b2fb70765f3a95e8,Update connection integration tests for refactor,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-06-28 15:48:04-05:00,18000,2013-06-28 15:48:04-05:00,18000,True,False,"['asyncorereactor.py', '__init__.py', 'test_connection.py']",['82ff125cbf46e3391b26cc205ef992358cbeef32'],10,21,31,3,0.5,0.5,0.5
cd7a36665f94ee0b03bac8d9048f8f1e6f5a70f1,"updating field placeholders to use uuid4 instead of uuid1 due to collision0 which appear in some Virtualbox systems

fixes #82",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-30 18:25:13-07:00,25200,2013-06-30 18:25:13-07:00,25200,True,False,['query.py'],['db60c151817794dc11b3eb309ba5a22341b64eb2'],8,5,13,1,,,
49acd4b271bc9510201c518904e4b14dec527865,updating changelog and version,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-30 18:27:33-07:00,25200,2013-06-30 18:27:33-07:00,25200,True,False,"['changelog', 'VERSION']",['cd7a36665f94ee0b03bac8d9048f8f1e6f5a70f1'],1,4,5,2,,,
bac4527fa6024245fadf383eae59b0963c441e1b,Raise friendlier cassandra.* exceptions on failure,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 10:25:37-05:00,18000,2013-07-01 10:25:37-05:00,18000,True,False,"['__init__.py', 'cluster.py', 'decoder.py']",['3b39dbb564c2d73d0bdd4475b2fb70765f3a95e8'],18,150,168,3,0.3333333333333333,0.8461538461538461,0.46153846153846156
1048d70191f4c985dec885adb15b12d304a4caa2,Fix potential hang on down node with asyncore reactor,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 10:26:27-05:00,18000,2013-07-01 10:26:27-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py']",['bac4527fa6024245fadf383eae59b0963c441e1b'],2,5,7,2,0.0,1.0,0.3333333333333333
3211b0bf6ad9e8a98f4f517a3400cc4c560a96ac,Log when hosts are marked up or down,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 11:05:51-05:00,18000,2013-07-01 11:05:51-05:00,18000,True,False,['pool.py'],['1048d70191f4c985dec885adb15b12d304a4caa2'],1,11,12,1,1.0,1.0,0.8571428571428571
fb358165add1d149b7e64547598ee2b14df23afe,More friendly handling of InvalidRequestException responses,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 11:07:03-05:00,18000,2013-07-01 11:07:03-05:00,18000,True,False,"['__init__.py', 'cluster.py', 'connection.py', 'decoder.py']",['3211b0bf6ad9e8a98f4f517a3400cc4c560a96ac'],4,18,22,4,0.2857142857142857,0.0,1.0
f32e45f6e9ea276877264ab85098dc49c456507e,Better logging for control connection errors,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 11:07:31-05:00,18000,2013-07-01 11:07:31-05:00,18000,True,False,['cluster.py'],['fb358165add1d149b7e64547598ee2b14df23afe'],2,2,4,1,,,
bba312ea1fd941265b21d299452b284cff83d225,Run control conn reconnects in executor thread,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 11:07:46-05:00,18000,2013-07-01 11:07:46-05:00,18000,True,False,['cluster.py'],['f32e45f6e9ea276877264ab85098dc49c456507e'],0,3,3,1,1.0,1.0,1.0
5ae85f49fe53c42f0b67b22d42767e53aaf4f256,Better thread name for event loop,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 11:08:36-05:00,18000,2013-07-01 11:08:36-05:00,18000,True,False,"['asyncorereactor.py', 'pyevreactor.py']",['bba312ea1fd941265b21d299452b284cff83d225'],2,2,4,2,,,
f22912b3d708ff3f6f0cda899f9e927c1e3be64a,Log when hosts are added/removed,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 11:16:44-05:00,18000,2013-07-01 11:16:44-05:00,18000,True,False,['cluster.py'],['5ae85f49fe53c42f0b67b22d42767e53aaf4f256'],0,2,2,1,1.0,1.0,0.5
eee785d6bb6a3ffc62dffdd819ed6c66c7967eb3,"Make key sequences require type wrapping, not collections",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 11:22:49-05:00,18000,2013-07-01 11:22:49-05:00,18000,True,False,"['decoder.py', 'query.py', 'test_parameter_binding.py']",['f22912b3d708ff3f6f0cda899f9e927c1e3be64a'],19,12,31,3,0.0,0.0,0.0
8884e3a7b0e8385546f39a52efcf3f4306cf3abd,Initial doc setup,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 11:54:42-05:00,18000,2013-07-01 11:54:42-05:00,18000,True,False,"['__init__.py', 'Makefile', 'conf.py', 'index.rst', 'setup.py']",['eee785d6bb6a3ffc62dffdd819ed6c66c7967eb3'],3,421,424,5,0.16,1.0,1.0
143e2def4bd340db1852d1472b9b79842e7ea423,"Api documentation for cassandra, cassandra.cluster",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 16:13:46-05:00,18000,2013-07-01 16:13:46-05:00,18000,True,False,"['.gitignore', '__init__.py', 'cluster.py', 'pool.py', 'cassandra.rst', 'cluster.rst', 'index.rst', 'conf.py', 'index.rst', 'test_host_connection_pool.py']",['8884e3a7b0e8385546f39a52efcf3f4306cf3abd'],119,301,420,10,0.0,0.0,0.0
e8fcebfb69df9f6d20227cd6d3c561361436ed8c,Update column collection integration tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 16:14:04-05:00,18000,2013-07-01 16:14:04-05:00,18000,True,False,['test_types.py'],['143e2def4bd340db1852d1472b9b79842e7ea423'],4,3,7,1,,,
57af871f6ca67cf7545a4e3d4fd46a976a41d498,API docs for cassandra.query,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-01 17:21:21-05:00,18000,2013-07-01 17:21:21-05:00,18000,True,False,"['cluster.py', 'query.py', 'query.rst', 'test_parameter_binding.py']",['e8fcebfb69df9f6d20227cd6d3c561361436ed8c'],10,108,118,4,0.5,0.0,0.75
d417e09eb508e1b81133a0b28cbac9c4715a9fde,"modifying execute function to just return the connection pool

Conflicts:
	cqlengine/connection.py",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-01 16:01:32-07:00,25200,2013-07-01 16:01:32-07:00,25200,True,False,['connection.py'],['49acd4b271bc9510201c518904e4b14dec527865'],3,4,7,1,0.0,0.0,0.0
85d75512537f3154d45c01a666d68885baf90374,"updating row serialization

Conflicts:
	cqlengine/connection.py
	cqlengine/query.py",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-01 16:02:56-07:00,25200,2013-07-01 16:02:56-07:00,25200,True,False,"['connection.py', 'management.py', 'query.py']",['d417e09eb508e1b81133a0b28cbac9c4715a9fde'],9,20,29,3,0.0,0.0,
0d1ae6e6ca28554e6305ff33ad7c4779683f5413,fixing a problem with the result cache filler,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-26 08:04:15-07:00,25200,2013-07-01 16:03:11-07:00,25200,True,False,"['connection.py', 'query.py']",['85d75512537f3154d45c01a666d68885baf90374'],5,4,9,2,1.0,1.0,0.0
d3137dc321fa82aa848a968e406e12f51fdb8f52,"fixing count method

Conflicts:
	cqlengine/query.py",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-01 16:04:15-07:00,25200,2013-07-01 16:04:15-07:00,25200,True,False,['query.py'],['0d1ae6e6ca28554e6305ff33ad7c4779683f5413'],2,5,7,1,,,
533d70b1be65ac5348720c24e7401871112397d4,updating management module to work with the native driver,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-06-25 10:12:12-07:00,25200,2013-07-01 16:05:32-07:00,25200,True,False,['management.py'],['d3137dc321fa82aa848a968e406e12f51fdb8f52'],46,37,83,1,1.0,1.0,0.8
5c6e8601ec0b73b14db76ab713f1b5fb0d8e8614,updating management functions to work with the cql driver,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-01 16:09:03-07:00,25200,2013-07-01 16:09:03-07:00,25200,True,False,['management.py'],['533d70b1be65ac5348720c24e7401871112397d4'],3,12,15,1,0.3333333333333333,0.3333333333333333,1.0
8aa4b04374539b95cbc4b744c77ea79d5f87704c,updating connection to work with the cql driver,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-01 16:18:38-07:00,25200,2013-07-01 16:18:38-07:00,25200,True,False,['connection.py'],['5c6e8601ec0b73b14db76ab713f1b5fb0d8e8614'],1,5,6,1,1.0,0.0,0.0
0590c5e0f6d7457bdafbff6f7f3a0122e938c804,updating management to work with with the cql driver,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-01 16:19:07-07:00,25200,2013-07-01 16:19:07-07:00,25200,True,False,"['management.py', 'query.py']",['8aa4b04374539b95cbc4b744c77ea79d5f87704c'],12,6,18,2,0.0,0.0,0.0
92ef6fce17c766ee8d3a3b8390ed473ac31810c4,fixing some problems with the eager result loading,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-01 16:26:02-07:00,25200,2013-07-01 16:26:02-07:00,25200,True,False,"['management.py', 'query.py']",['0590c5e0f6d7457bdafbff6f7f3a0122e938c804'],4,9,13,2,0.25,0.25,1.0
e9b055452af5c26b7e33e3fa006c2fbc09d69bc2,wrapping query results in a named tuple,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-01 17:39:21-07:00,25200,2013-07-01 17:39:21-07:00,25200,True,False,['connection.py'],['92ef6fce17c766ee8d3a3b8390ed473ac31810c4'],1,3,4,1,,,
779a960edb054dcc01f19c308d0fdfc0507e5fbe,updating changelog and version,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-01 17:39:33-07:00,25200,2013-07-01 17:39:33-07:00,25200,True,False,"['changelog', 'VERSION']",['e9b055452af5c26b7e33e3fa006c2fbc09d69bc2'],1,6,7,2,,,
2e9cc068733a4de2f41e9fdcd01cf1399116163b,Add documentation for all policies,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-02 14:58:04-05:00,18000,2013-07-02 14:58:04-05:00,18000,True,False,"['cluster.py', 'policies.py', 'query.py', 'policies.rst', 'index.rst']",['57af871f6ca67cf7545a4e3d4fd46a976a41d498'],6,413,419,5,1.0,1.0,0.36363636363636365
5d95a6b4f7cfec4c89fcbd75baf644bd6e5b74f9,"Document reactors, metadata, rename pyev* to libev*",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-02 16:49:23-05:00,18000,2013-07-02 16:49:23-05:00,18000,True,False,"['base.py', '__init__.py', 'cluster.py', 'connection.py', 'decoder.py', 'asyncorereactor.py', 'libevreactor.py', 'metadata.py', 'policies.py', 'pool.py', 'cassandra.rst', 'cluster.rst', 'connection.rst', 'asyncorereactor.rst', 'libevreactor.rst', 'metadata.rst', 'pool.rst', 'query.rst', 'index.rst', 'test_connection.py', 'test_libevreactor.py', 'test_connection.py']",['2e9cc068733a4de2f41e9fdcd01cf1399116163b'],58,317,375,22,0.4,0.4,0.0
f29f06dbee5a685befcdb846305422bad6237e2c,Docs for tokens and token maps,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-02 17:07:39-05:00,18000,2013-07-02 17:07:39-05:00,18000,True,False,"['metadata.py', 'metadata.rst']",['5d95a6b4f7cfec4c89fcbd75baf644bd6e5b74f9'],14,57,71,2,,,
b71848ff04346f9ace1d11b330fce748175fa4cf,"Make load balancing policy not a factory, docs",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 12:30:34-05:00,18000,2013-07-03 12:30:34-05:00,18000,True,False,"['__init__.py', 'cluster.py', 'metadata.py', 'policies.py', 'pool.py', 'query.py', 'test_cluster.py', 'test_control_connection.py']",['f29f06dbee5a685befcdb846305422bad6237e2c'],36,116,152,8,0.4146341463414634,0.0,0.7073170731707317
68ebcde3aee9c59a3b9708a235efc69f8a6cf931,Add API docs for TokenAwarePolicy,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 12:31:05-05:00,18000,2013-07-03 12:31:05-05:00,18000,True,False,['policies.rst'],['b71848ff04346f9ace1d11b330fce748175fa4cf'],0,3,3,1,,,
b996decdcf8a287bbdb6522f177001cf8e81af5c,Make Cluster.retry_policy a non-factory,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 12:42:12-05:00,18000,2013-07-03 12:42:12-05:00,18000,True,False,"['cluster.py', 'policies.py', 'test_cluster.py']",['68ebcde3aee9c59a3b9708a235efc69f8a6cf931'],21,17,38,3,0.0,0.0,0.0
08a2370157d33f0aff51aabe156dc0f6a74ad7f5,Update DCAwareLoadBalancingPolicy unit tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 12:47:55-05:00,18000,2013-07-03 12:47:55-05:00,18000,True,False,['test_policies.py'],['b996decdcf8a287bbdb6522f177001cf8e81af5c'],3,24,27,1,0.0,0.0,1.0
f04aeb35c3cc924c99489e3cf11f883a2eab60cd,"Add test coverage, fixes for TokenAwarePolicy",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 14:16:54-05:00,18000,2013-07-03 14:16:54-05:00,18000,True,False,"['policies.py', 'pool.py', 'query.py', 'test_policies.py']",['08a2370157d33f0aff51aabe156dc0f6a74ad7f5'],13,89,102,4,0.5319148936170213,1.0,1.0
892218ab8fd010bc3372a1c4b7de1c69e7ed4a4b,Fix bad load balancing policy population,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 15:13:46-05:00,18000,2013-07-03 15:13:46-05:00,18000,True,False,['cluster.py'],['f04aeb35c3cc924c99489e3cf11f883a2eab60cd'],1,1,2,1,,,
1cacda81d4a35a9b4339be0e205d6672a4b68c06,"Fix murmur3 import, better murmur3 failure handling",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 15:14:48-05:00,18000,2013-07-03 15:14:48-05:00,18000,True,False,"['metadata.py', 'policies.py']",['892218ab8fd010bc3372a1c4b7de1c69e7ed4a4b'],6,31,37,2,0.6666666666666666,0.6666666666666666,0.6666666666666666
8596c69f35a5a52243f83d6c5b2a45f764e044bf,Add cassandra.io to setup.py package list,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 15:15:07-05:00,18000,2013-07-03 15:15:07-05:00,18000,True,False,['setup.py'],['1cacda81d4a35a9b4339be0e205d6672a4b68c06'],2,4,6,1,0.0,1.0,1.0
f0ee8a2a1005c5940f1fa6c6de33dbf76c1cb0a6,Fix single-partition key routing for prepared statements,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 15:21:35-05:00,18000,2013-07-03 15:21:35-05:00,18000,True,False,['query.py'],['8596c69f35a5a52243f83d6c5b2a45f764e044bf'],5,10,15,1,1.0,1.0,1.0
25e1e9ad4e0a063e4be501d0dbf67824f788143d,Add attribution to the top of murmur3.c,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 17:00:55-05:00,18000,2013-07-03 17:00:55-05:00,18000,True,False,['murmur3.c'],['f0ee8a2a1005c5940f1fa6c6de33dbf76c1cb0a6'],0,10,10,1,,,
4d9c98b5ff7fd260fec37dcaba0206037ec20a16,Fix 'readable' condition for asyncore control connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 18:09:51-05:00,18000,2013-07-03 18:09:51-05:00,18000,True,False,['asyncorereactor.py'],['25e1e9ad4e0a063e4be501d0dbf67824f788143d'],1,1,2,1,,,
b6eb7e076ef10e46a30f0bfec6a02a1011321a90,Actually register for push notifications,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 18:10:41-05:00,18000,2013-07-03 18:10:41-05:00,18000,True,False,"['asyncorereactor.py', 'libevreactor.py']",['4d9c98b5ff7fd260fec37dcaba0206037ec20a16'],7,15,22,2,1.0,1.0,0.6666666666666666
4058b654b5becd829b18496dd089cb559c07a173,Include hostname in control connection logs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 18:11:11-05:00,18000,2013-07-03 18:11:11-05:00,18000,True,False,['cluster.py'],['b6eb7e076ef10e46a30f0bfec6a02a1011321a90'],3,4,7,1,0.0,1.0,1.0
bb3d3baeb6853af2c53d92aa6b65c50b9dc86f83,Start using CCM for integration tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 18:12:57-05:00,18000,2013-07-03 18:12:57-05:00,18000,True,False,"['.gitignore', 'setup.py', '__init__.py', 'test_metadata.py']",['4058b654b5becd829b18496dd089cb559c07a173'],41,64,105,4,1.0,1.0,
2b8c621c3842bde0192dcdcb704408eb1a7d498d,Update installation docs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-03 18:18:52-05:00,18000,2013-07-03 18:18:52-05:00,18000,True,False,['README.rst'],['bb3d3baeb6853af2c53d92aa6b65c50b9dc86f83'],3,34,37,1,,,
8091278d6ab4a427da6582f02a4feec8f9194eb4,removing auto column from docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-05 17:44:25-07:00,25200,2013-07-05 17:44:25-07:00,25200,True,False,['models.rst'],['779a960edb054dcc01f19c308d0fdfc0507e5fbe'],3,0,3,1,,,
6ea6d178836291950ba9b39dd9a564f9fe7478e2,fixing doc version,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-06 08:28:40-07:00,25200,2013-07-06 08:28:40-07:00,25200,True,False,['conf.py'],['8091278d6ab4a427da6582f02a4feec8f9194eb4'],1,1,2,1,,,
714f1e0214620f9a491dd08508ee34cacea24b86,updating columns docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-06 08:28:50-07:00,25200,2013-07-06 08:28:50-07:00,25200,True,False,['columns.rst'],['6ea6d178836291950ba9b39dd9a564f9fe7478e2'],4,17,21,1,,,
2a779643bd0534360e1a194aca4480c360214582,fixing the default value on the example partition key,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-06 08:32:23-07:00,25200,2013-07-06 08:32:23-07:00,25200,True,False,"['README.md', 'index.rst']",['714f1e0214620f9a491dd08508ee34cacea24b86'],2,2,4,2,,,
8e0cccf8f57c74808fbca6d7c2eecc0b682ff603,removing other references to auto defaults and ids from the docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-06 08:34:49-07:00,25200,2013-07-06 08:34:49-07:00,25200,True,False,"['README.md', 'index.rst', 'models.rst']",['2a779643bd0534360e1a194aca4480c360214582'],5,1,6,3,,,
600c9175cd648cff965254b2c9aa317363851fa3,updating description,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-06 08:45:51-07:00,25200,2013-07-06 08:45:51-07:00,25200,True,False,['index.rst'],['8e0cccf8f57c74808fbca6d7c2eecc0b682ff603'],1,1,2,1,,,
b6ceb6cdf4532a8eec89d697511a0fad03342e46,Avoid AttributeError on interpreter shutdown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-08 09:40:52-05:00,18000,2013-07-08 09:40:52-05:00,18000,True,False,['asyncorereactor.py'],['2b8c621c3842bde0192dcdcb704408eb1a7d498d'],1,3,4,1,1.0,1.0,1.0
dfa29f0d93a656baa82fe92de6d58cb399662d4b,Add more basic information to README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-08 14:13:20-05:00,18000,2013-07-08 14:13:20-05:00,18000,True,False,['README.rst'],['b6ceb6cdf4532a8eec89d697511a0fad03342e46'],5,8,13,1,,,
3d22b3a48bd8e336ebcf321d13f9bd3734d4617d,Add link to API docs in README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-08 14:31:40-05:00,18000,2013-07-08 14:31:40-05:00,18000,True,False,['README.rst'],['dfa29f0d93a656baa82fe92de6d58cb399662d4b'],0,4,4,1,,,
340fc72c1b8a84b8fec1ff78542c45b6afe0263a,Switch copyright to DataStax,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-08 14:33:17-05:00,18000,2013-07-08 14:33:17-05:00,18000,True,False,['conf.py'],['3d22b3a48bd8e336ebcf321d13f9bd3734d4617d'],3,3,6,1,,,
f5bda3b14e29c4e862581d09efaf6fed4a12f310,Remove test_init_kwargs from cluster tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-09 10:36:37-05:00,18000,2013-07-09 10:37:03-05:00,18000,True,False,['test_cluster.py'],['340fc72c1b8a84b8fec1ff78542c45b6afe0263a'],19,0,19,1,0.0,0.0,0.0
0fa575f7cfebd7bf5a25cd7803c2b4db8bf51f55,"Add JIRA, mailing list, and IRC to README",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-09 10:40:22-05:00,18000,2013-07-09 10:40:22-05:00,18000,True,False,['README.rst'],['f5bda3b14e29c4e862581d09efaf6fed4a12f310'],2,3,5,1,,,
ce5da33e57f697922d430ec89e4d68a2c0295334,added a retry until no servers can be contacted,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-07-09 21:25:07-07:00,25200,2013-07-09 21:28:23-07:00,25200,True,False,['connection.py'],['2a779643bd0534360e1a194aca4480c360214582'],14,16,30,1,0.0,0.0,0.0
21bb32c045ecd484986c324298483e3a5acfffbb,"quoting clustering order column, fixes #88",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-13 11:57:52-07:00,25200,2013-07-13 11:57:52-07:00,25200,True,False,"['management.py', 'test_management.py']",['600c9175cd648cff965254b2c9aa317363851fa3'],2,24,26,2,1.0,1.0,1.0
019f1435746a073cd799870cbab7ae4fcf7585b0,updating changelog and version#,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-13 12:04:04-07:00,25200,2013-07-13 12:04:04-07:00,25200,True,False,"['changelog', 'VERSION']",['05dd30bb684c18b61b5e582f510209be1a479dba'],1,5,6,2,,,
e11a0b0d7c93366a4875e2ef5b1b998941017014,adding hex conversion to Bytes column,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-13 12:13:48-07:00,25200,2013-07-13 12:13:48-07:00,25200,True,False,"['columns.py', 'test_value_io.py']",['019f1435746a073cd799870cbab7ae4fcf7585b0'],0,11,11,2,1.0,1.0,1.0
69c288019733a8dd3fad95c627803ead81b995a2,updating version and changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-13 12:14:15-07:00,25200,2013-07-13 12:14:15-07:00,25200,True,False,"['changelog', 'VERSION']",['e11a0b0d7c93366a4875e2ef5b1b998941017014'],1,4,5,2,,,
0cafe0a2bd173b50025f9ad3edd6cd2eb684c0bf,Add prepared stmnt cases to type tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-17 12:03:23-05:00,18000,2013-07-17 12:03:23-05:00,18000,True,False,['test_types.py'],['0fa575f7cfebd7bf5a25cd7803c2b4db8bf51f55'],10,41,51,1,0.0,1.0,1.0
0fa527affe2bdbe2dc89a45c1ba4b76ab4f8fe51,Handle tracing flags on encode/decode,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-17 12:35:17-05:00,18000,2013-07-17 12:35:17-05:00,18000,True,False,['decoder.py'],['0cafe0a2bd173b50025f9ad3edd6cd2eb684c0bf'],4,20,24,1,0.0,1.0,0.0
56752c897d98d39a4b09fc94552b57fdb14efdd7,Use logging for decoder warnings,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-17 12:41:29-05:00,18000,2013-07-17 12:41:29-05:00,18000,True,False,['decoder.py'],['0cafe0a2bd173b50025f9ad3edd6cd2eb684c0bf'],5,3,8,1,0.0,0.0,0.0
26b82ceba0c0ea90d552f51becbce8ab04c25336,"First draft of QueryTrace, TraceEvent classes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-18 11:52:26-05:00,18000,2013-07-18 11:52:26-05:00,18000,True,False,['query.py'],['5485bf4383a7a35fecb83684fdc9ac1a943d3647'],0,50,50,1,1.0,1.0,0.625
3bfd881a6a0cf1e13674dfcde42eb69ad1002c80,"Fix bad trace body read, convert to UUID",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-18 12:39:59-05:00,18000,2013-07-18 12:39:59-05:00,18000,True,False,['decoder.py'],['26b82ceba0c0ea90d552f51becbce8ab04c25336'],4,4,8,1,,,
56b43ebfaa7451835c5eeead63bccd2e24f8b88f,"Add __str__ for trace classes, friendlier types",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-18 12:41:06-05:00,18000,2013-07-18 12:41:06-05:00,18000,True,False,['query.py'],['3bfd881a6a0cf1e13674dfcde42eb69ad1002c80'],4,18,22,1,1.0,1.0,1.0
8dac9dc4cd9888e8c0f2000097c847ef22059d74,Enable tracing through execute(_async)() kwarg only,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-18 12:41:56-05:00,18000,2013-07-18 12:41:56-05:00,18000,True,False,"['cluster.py', 'query.py']",['56b43ebfaa7451835c5eeead63bccd2e24f8b88f'],15,17,32,2,0.625,0.625,0.375
44f7a5598b947573179d51046d67a344587701e0,Documentation for new tracing classes and attrs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-18 14:50:34-05:00,18000,2013-07-18 14:50:34-05:00,18000,True,False,['query.py'],['8dac9dc4cd9888e8c0f2000097c847ef22059d74'],6,64,70,1,0.0,1.0,1.0
d7a1e2b2ca799f7010b8abec772a092461067f5f,Add method to retrieve query trace,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-18 15:25:22-05:00,18000,2013-07-18 15:25:22-05:00,18000,True,False,['cluster.py'],['44f7a5598b947573179d51046d67a344587701e0'],8,43,51,1,1.0,0.0,0.38461538461538464
acd9ad7f61dcb745cea50c188a7a93e568c18a50,Remove tracing from TODO list in README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-18 15:26:38-05:00,18000,2013-07-18 15:26:38-05:00,18000,True,False,['README.rst'],['d7a1e2b2ca799f7010b8abec772a092461067f5f'],1,0,1,1,,,
d3273107d2634777046fbe0bcc3d452c56bf723f,Correct callback erroring when message can't be decoded,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-18 15:27:16-05:00,18000,2013-07-18 15:27:16-05:00,18000,True,False,['connection.py'],['acd9ad7f61dcb745cea50c188a7a93e568c18a50'],1,2,3,1,0.0,0.0,0.0
4b8e3981ca87f762b3724f2bbcd1f4c70f5a0669,Add some missing tracing documentation,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-18 15:49:46-05:00,18000,2013-07-18 15:49:46-05:00,18000,True,False,"['query.py', 'query.rst']",['d3273107d2634777046fbe0bcc3d452c56bf723f'],7,44,51,2,,,
edc7d26aa703859c6194240bd33591b5db6f69ec,Use internal OrderedDict class if not found in collection (python <2.7 users),Aaron Daubman,daubman@gmail.com,Aaron Daubman,daubman@gmail.com,2013-07-19 14:42:16-04:00,14400,2013-07-19 14:42:16-04:00,14400,True,False,"['decoder.py', 'metadata.py', 'util.py']",['4b8e3981ca87f762b3724f2bbcd1f4c70f5a0669'],2,141,143,3,1.0,1.0,0.7564102564102564
82e20af7f2ab24d5131ed28ffafae3b15b19f773,Specify full package and module on imports,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-19 13:47:50-05:00,18000,2013-07-19 13:47:50-05:00,18000,True,False,"['decoder.py', 'metadata.py']",['80709b5fd004200d628a1dce0d416e35896d636c'],2,2,4,2,,,
eed5d29a8d623f7877510be7811ea5d6696d372d,Use internal WeakSet if unable to import (users of Python < 2.7),Aaron Daubman,daubman@gmail.com,Aaron Daubman,daubman@gmail.com,2013-07-19 15:11:32-04:00,14400,2013-07-19 15:23:13-04:00,14400,True,False,"['cluster.py', 'pool.py', 'util.py']",['82e20af7f2ab24d5131ed28ffafae3b15b19f773'],2,224,226,3,1.0,1.0,0.9096774193548387
49a6e16d27ba5eb6fc4fccd2259eba665505c764,fixing a mutable kwarg,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-23 12:38:26-07:00,25200,2013-07-23 12:38:26-07:00,25200,True,False,['connection.py'],['69c288019733a8dd3fad95c627803ead81b995a2'],3,2,5,1,1.0,1.0,1.0
c99903aa9aa8084d04d7d477263536b803d4a6c1,adding counter column,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-23 12:48:06-07:00,25200,2013-07-23 12:48:06-07:00,25200,True,False,['columns.py'],['49a6e16d27ba5eb6fc4fccd2259eba665505c764'],6,18,24,1,1.0,1.0,0.0
ceb487af88507aaa0df82cefbbf528d63c5248de,adding counter support to update statement generator,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-23 12:48:34-07:00,25200,2013-07-23 12:48:34-07:00,25200,True,False,['query.py'],['c99903aa9aa8084d04d7d477263536b803d4a6c1'],2,4,6,1,0.0,0.0,1.0
17b77ea9e4b03a6caa4611db3966610dfc491a42,"adding support for using set statements for counter columns if there is no previous value, reformatting",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-23 12:53:00-07:00,25200,2013-07-23 12:53:00-07:00,25200,True,False,"['columns.py', 'test_container_columns.py']",['ceb487af88507aaa0df82cefbbf528d63c5248de'],3,18,21,2,1.0,1.0,0.0
19d6984e727d79af79c466b0c3842de7a4a46207,updating the model and query classes to handle models with counter columns correctly,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-24 09:49:15-07:00,25200,2013-07-24 09:49:15-07:00,25200,True,False,"['columns.py', 'models.py', 'query.py']",['17b77ea9e4b03a6caa4611db3966610dfc491a42'],17,28,45,3,0.5833333333333334,0.5833333333333334,0.0
3c24995481d29d145f99217290a2ca3f1cea4be6,adding tests around counter columns,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-07-24 09:49:41-07:00,25200,2013-07-24 09:49:41-07:00,25200,True,False,['test_counter_column.py'],['19d6984e727d79af79c466b0c3842de7a4a46207'],0,64,64,1,1.0,1.0,1.0
0f1f81c93265ec20f884b43b4529158362a2d57d,"Tolerate unknown host DCs more gracefully

For load balancing purposes, hosts are assumed to be in
the local datacenter now if the actual datacenter is unknown.

However, this is still a slight problem with contact points
in a remote DC when using DCAwareRoundRobinPolicy. See
https://datastax-oss.atlassian.net/browse/JAVA-138 for
more details.

Fixes #5",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-07-30 11:05:13-05:00,18000,2013-07-30 11:07:54-05:00,18000,True,False,['policies.py'],['2e7b42f84cf474860095d9eff783a9553f0f6c1c'],10,16,26,1,1.0,0.0,0.6
54ba28a834c972cd90c00701d68942557cd3c8ae,import from concurrent.futures rather than futures to prevent annoying DeprecationWarning,Aaron Daubman,daubman@gmail.com,Aaron Daubman,daubman@gmail.com,2013-07-30 12:11:31-04:00,14400,2013-07-30 12:11:31-04:00,14400,True,False,"['cluster.py', 'test_control_connection.py']",['2e7b42f84cf474860095d9eff783a9553f0f6c1c'],2,2,4,2,,,
58223eab242d23f43cc67ee7a09ebe6ffbff184f,Only adds new columns.  Will not remove non existing.,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-07-31 12:35:49-07:00,25200,2013-07-31 14:59:04-07:00,25200,True,False,"['connection.py', 'management.py', 'test_management.py']",['69c288019733a8dd3fad95c627803ead81b995a2'],6,85,91,3,0.6363636363636364,0.6363636363636364,0.9393939393939394
121c04d9758c38c63e5f6f91393d0f8127a26e49,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-07-31 15:50:46-07:00,25200,2013-07-31 15:50:46-07:00,25200,True,False,['VERSION'],['df939bf0ce46a40748d39e0fc0b463a4ac77b5c1'],1,1,2,1,,,
1b4430fa85b2b24d647d2c9380e6f6e3fba312fa,fixed db field name issue,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-07-31 16:56:03-07:00,25200,2013-07-31 16:56:03-07:00,25200,True,False,"['management.py', 'test_management.py']",['121c04d9758c38c63e5f6f91393d0f8127a26e49'],1,13,14,2,1.0,1.0,1.0
368bfb642a7015bea8841d65554851f6957c8ca5,fixed bug in alter,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-07-31 16:57:13-07:00,25200,2013-07-31 16:57:13-07:00,25200,True,False,['VERSION'],['1b4430fa85b2b24d647d2c9380e6f6e3fba312fa'],1,1,2,1,,,
55522aa4d924f02f3f249d05e9dd9a0e09245ef9,Fix token metadata test integration with CCM,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-05 14:38:49-05:00,18000,2013-08-05 15:04:34-05:00,18000,True,False,['test_metadata.py'],['1d4ff5eb7e305892a5eda120d1d8536e48a2fad2'],2,5,7,1,1.0,1.0,1.0
d3ff964614cc66b59f82fd5d62e3769408e1ae6c,Fix failing up/down handling integration test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-05 14:58:22-05:00,18000,2013-08-05 15:04:34-05:00,18000,True,False,['test_cluster.py'],['55522aa4d924f02f3f249d05e9dd9a0e09245ef9'],1,0,1,1,0.0,0.0,0.0
788d2037edd43a58b3cb504b05cff7a276778f86,Don't log to stdout by default on integration tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-05 14:59:05-05:00,18000,2013-08-05 15:04:34-05:00,18000,True,False,['__init__.py'],['d3ff964614cc66b59f82fd5d62e3769408e1ae6c'],2,0,2,1,,,
2bf9c8a051d01ae4f68ed67bfc75f1ebabf9eaad,Avoid race in schema refresh integration test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-05 15:01:47-05:00,18000,2013-08-05 15:04:34-05:00,18000,True,False,['test_cluster.py'],['788d2037edd43a58b3cb504b05cff7a276778f86'],3,1,4,1,,,
bcfbe54d760190d54584ab90140ec5b97b2e2dfd,"Fix bad interpretation of prepared stmt ID spec

There is actually only one query ID associated with each
prepared statement, and it is written as a short_string.  That is,
it's a short length followed by a string.  This was misinterpreted
as a short ID and a 16 byte md5 id.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-05 15:03:04-05:00,18000,2013-08-05 15:04:34-05:00,18000,True,False,"['cluster.py', 'decoder.py', 'query.py']",['2bf9c8a051d01ae4f68ed67bfc75f1ebabf9eaad'],26,27,53,3,1.0,1.0,1.0
0055b89de2961fdc173c3f8a54e25742e07e147d,Skip libev tests if pyev fails to import,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-07 15:47:04-05:00,18000,2013-08-07 15:47:04-05:00,18000,True,False,"['test_connection.py', 'test_libevreactor.py']",['bcfbe54d760190d54584ab90140ec5b97b2e2dfd'],2,16,18,2,1.0,1.0,1.0
198450752bd8a8f60c8e76a544bbc5fc9431957e,Avoid race condition around event loop stop and restart,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-08 19:31:02-05:00,18000,2013-08-08 19:31:02-05:00,18000,True,False,['asyncorereactor.py'],['0055b89de2961fdc173c3f8a54e25742e07e147d'],10,13,23,1,0.0,0.0,1.0
c88189df56ec990a0073f221d2a9669b1b2dbeb1,Log ControlConnection errors at DEBUG,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-09 13:09:46-05:00,18000,2013-08-09 13:09:46-05:00,18000,True,False,['cluster.py'],['198450752bd8a8f60c8e76a544bbc5fc9431957e'],6,12,18,1,1.0,1.0,0.0
3233bf4e8edfefff898aa4fa8cdd5d5013e3f0d3,Minimize extra schema agreement checks,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-09 16:12:50-05:00,18000,2013-08-09 16:12:50-05:00,18000,True,False,['cluster.py'],['c88189df56ec990a0073f221d2a9669b1b2dbeb1'],39,45,84,1,0.5,0.5,1.0
e1383f7ad9adab4eb8f25553a6fce01a58fb3a29,Clarify libev version and pyev workaround,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-08-13 16:26:38-05:00,18000,2013-08-13 16:26:38-05:00,18000,True,False,['README.rst'],['3233bf4e8edfefff898aa4fa8cdd5d5013e3f0d3'],2,4,6,1,,,
41cd3b504064eef89db587e4fe36b0249d1d9f8e,Add scales to install_requires,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-13 14:11:08-05:00,18000,2013-08-13 17:35:08-05:00,18000,True,False,['setup.py'],['83180cae568dc65ae4ca320d42c7e8b8a55c8d55'],1,1,2,1,,,
1f31d29fd232e7e68bcc35dc1242c47117a1b347,Basic Metrics class initialization,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-13 14:11:22-05:00,18000,2013-08-13 17:35:08-05:00,18000,True,False,['metrics.py'],['41cd3b504064eef89db587e4fe36b0249d1d9f8e'],0,30,30,1,0.0,1.0,1.0
faded6f9ae9345d9646d30e2a3bc078e8dd42f32,Documentation for metrics attributes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-13 14:25:20-05:00,18000,2013-08-13 17:35:08-05:00,18000,True,False,['metrics.py'],['1f31d29fd232e7e68bcc35dc1242c47117a1b347'],1,73,74,1,0.0,1.0,1.0
e5b841b58522a82d5a8c6e45caa0c3baf45af648,Add a request_timer attribute to Metrics,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-13 14:50:45-05:00,18000,2013-08-13 17:35:08-05:00,18000,True,False,['metrics.py'],['faded6f9ae9345d9646d30e2a3bc078e8dd42f32'],0,20,20,1,0.0,1.0,1.0
563de67a80459afbc0bd5abf8f704500a6c259b6,Add methods for incrementing counters,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-13 17:25:36-05:00,18000,2013-08-13 17:35:08-05:00,18000,True,False,['metrics.py'],['e5b841b58522a82d5a8c6e45caa0c3baf45af648'],0,21,21,1,1.0,1.0,1.0
1cf0f9d48fef3e75c8555b8943e95881f1790e34,Hook into metrics when enabled,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-13 17:25:55-05:00,18000,2013-08-13 17:35:08-05:00,18000,True,False,['cluster.py'],['563de67a80459afbc0bd5abf8f704500a6c259b6'],3,44,47,1,0.4074074074074074,0.4074074074074074,0.8518518518518519
fdc2ebdb3b57d8ef3c4a15c965875669f51659ee,Remove connection pool metrics from TODO list,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-13 17:34:41-05:00,18000,2013-08-13 17:35:08-05:00,18000,True,False,['README.rst'],['1cf0f9d48fef3e75c8555b8943e95881f1790e34'],1,0,1,1,,,
b43abb1e2203a732a05f02a75001e1c593c2e571,Ignore .so and egg-info,Matt Robenolt,matt@ydekproductions.com,Matt Robenolt,matt@ydekproductions.com,2013-08-13 23:35:31-07:00,25200,2013-08-13 23:35:31-07:00,25200,True,False,['.gitignore'],['3233bf4e8edfefff898aa4fa8cdd5d5013e3f0d3'],0,2,2,1,,,
bd008fdf12d2b9f383f0cb60b7829b6ad6b703fd,No more bare excepts,Matt Robenolt,matt@ydekproductions.com,Matt Robenolt,matt@ydekproductions.com,2013-08-13 23:34:17-07:00,25200,2013-08-13 23:37:32-07:00,25200,True,False,"['cluster.py', 'connection.py', 'asyncorereactor.py', 'libevreactor.py', 'pool.py', 'example.py', '__init__.py']",['3233bf4e8edfefff898aa4fa8cdd5d5013e3f0d3'],20,20,40,7,,,
7be46265fc9ce1e7de792bb4023e3644209f46ba,"Stop asyncore loop from complaining about a bad socket

Stops:
```
Exception in thread event_loop:
Traceback (most recent call last):
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py"", line 552, in __bootstrap_inner
    self.run()
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py"", line 505, in run
    self.__target(*self.__args, **self.__kwargs)
  File ""/Users/matt/Dropbox/python-driver/cassandra/io/asyncorereactor.py"", line 27, in _run_loop
    asyncore.loop(timeout=0.001, use_poll=True, count=None)
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/asyncore.py"", line 214, in loop
    poll_fun(timeout, map)
  File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/asyncore.py"", line 144, in poll
    r, w, e = select.select(r, w, e, timeout)
error: (9, 'Bad file descriptor')
```",Matt Robenolt,matt@ydekproductions.com,Matt Robenolt,matt@ydekproductions.com,2013-08-13 23:45:43-07:00,25200,2013-08-13 23:47:28-07:00,25200,True,False,['asyncorereactor.py'],['3233bf4e8edfefff898aa4fa8cdd5d5013e3f0d3'],1,4,5,1,1.0,1.0,1.0
5b217cda8f31f267b138f8fa015b864a8640ec96,"Don't yell on __del__

Was getting:
Exception TypeError: ""'NoneType' object is not callable"" in <bound method Session.__del__ of <cassandra.cluster.Session object at 0x109128c90>> ignored",Matt Robenolt,matt@ydekproductions.com,Matt Robenolt,matt@ydekproductions.com,2013-08-13 23:53:59-07:00,25200,2013-08-13 23:53:59-07:00,25200,True,False,['cluster.py'],['3233bf4e8edfefff898aa4fa8cdd5d5013e3f0d3'],2,5,7,1,1.0,1.0,1.0
08279826eef2b681befee23ca6f48e9f6bf0b376,Default to using pyev if we can,Matt Robenolt,matt@ydekproductions.com,Matt Robenolt,matt@ydekproductions.com,2013-08-14 00:15:46-07:00,25200,2013-08-14 00:15:46-07:00,25200,True,False,['cluster.py'],['3233bf4e8edfefff898aa4fa8cdd5d5013e3f0d3'],3,10,13,1,,,
c073bc1e114bce6fc3dc10de558c05a400916ea5,Same here as well,Matt Robenolt,matt@ydekproductions.com,Matt Robenolt,matt@ydekproductions.com,2013-08-14 00:23:08-07:00,25200,2013-08-14 00:23:08-07:00,25200,True,False,['asyncorereactor.py'],['5b217cda8f31f267b138f8fa015b864a8640ec96'],1,4,5,1,1.0,1.0,1.0
d247d3faae71e73d125a5095e2f5815a7ec7e0db,Log the exception to debug,Matt Robenolt,matt@ydekproductions.com,Matt Robenolt,matt@ydekproductions.com,2013-08-14 09:28:22-07:00,25200,2013-08-14 09:28:22-07:00,25200,True,False,['asyncorereactor.py'],['7be46265fc9ce1e7de792bb4023e3644209f46ba'],1,1,2,1,,,
3b37865ea1db9cf1aa6eb9f91f4fabc0481f3b93,"Raise ConnectionShutdown for closed, defunct errors",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-14 12:12:27-05:00,18000,2013-08-14 12:19:18-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'libevreactor.py']",['d67cdb0d2a4950fad8873f8f6d9d1f1caa1ba3a4'],18,42,60,3,1.0,1.0,1.0
4247e76fe90d23cf381c958853b1a3ec50fc483d,"Better handling of mid-request conn defuncting

Before this fix, connections to other hosts could be
erroneously defuncted when a request failed.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-14 12:14:19-05:00,18000,2013-08-14 12:19:18-05:00,18000,True,False,['cluster.py'],['3b37865ea1db9cf1aa6eb9f91f4fabc0481f3b93'],2,8,10,1,0.6666666666666666,0.6666666666666666,1.0
8e373550ceab94216b6a19f5e97696a5733d9ccc,Correctly count all retry attempts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-14 12:15:28-05:00,18000,2013-08-14 12:19:18-05:00,18000,True,False,['cluster.py'],['4247e76fe90d23cf381c958853b1a3ec50fc483d'],2,2,4,1,1.0,1.0,0.0
d7d11677544f1296a79994747e6602e7f110f30b,Use exc_info for logging where possible,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-14 12:32:47-05:00,18000,2013-08-14 12:32:47-05:00,18000,True,False,"['cluster.py', 'pool.py']",['8e373550ceab94216b6a19f5e97696a5733d9ccc'],18,10,28,2,0.0,0.0,1.0
e6aa601af01c3b2699be52379efe1d0d68bc2509,"Gaurd against asyncore loop start/stop race condition

If the loop stopped while a new connection was being set up,
it could result in the application hanging.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-14 14:02:20-05:00,18000,2013-08-14 14:02:20-05:00,18000,True,False,['asyncorereactor.py'],['d7d11677544f1296a79994747e6602e7f110f30b'],4,23,27,1,0.0,1.0,0.8181818181818182
4d5ccbc81aabcfc5930ffec6219e642418750b5a,Add OS X instructions and patch attribute assertion for libev-4.15,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-08-14 15:08:01-05:00,18000,2013-08-14 15:08:01-05:00,18000,True,False,"['README.rst', 'test_libevreactor.py']",['e6aa601af01c3b2699be52379efe1d0d68bc2509'],1,26,27,2,1.0,1.0,1.0
3ee88ecf93ffaad8eb753021b1e811a27c8d513f,setting counter column default instantiation value to 0 (not None),Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-08-14 15:48:24-07:00,25200,2013-08-14 15:48:24-07:00,25200,True,False,"['columns.py', 'test_counter_column.py']",['3c24995481d29d145f99217290a2ca3f1cea4be6'],2,20,22,2,1.0,1.0,0.6363636363636364
a13d6cf88ba099f615555f5c085aabc8f10a283d,adding tests and checks to model definition constraints,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-08-14 15:56:23-07:00,25200,2013-08-14 15:56:23-07:00,25200,True,False,"['models.py', 'test_counter_column.py']",['3ee88ecf93ffaad8eb753021b1e811a27c8d513f'],2,26,28,2,0.8888888888888888,0.8888888888888888,0.8888888888888888
7a3b6a1bbabfacf77e7e09c6ab4da640d36d3d36,"renamed create_table to sync_table (added an alias), getting compaction started",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-14 18:07:30-07:00,25200,2013-08-14 18:07:30-07:00,25200,True,False,"['__init__.py', 'management.py', 'models.py']",['8cf941ca53018f10b333693ce3d0872487f0c208'],1,8,9,3,1.0,1.0,1.0
23afb880d976cfb47c4b04d2a6436b5f068ef734,"test classes for different scenarios in place, working to test failure cases",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-15 13:20:22-07:00,25200,2013-08-15 13:20:22-07:00,25200,True,False,"['management.py', 'models.py', 'test_management.py']",['7a3b6a1bbabfacf77e7e09c6ab4da640d36d3d36'],2,103,105,3,1.0,1.0,1.0
15f6e613c382f72b8e9333b21d10ca0154a27260,more size tiered options,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-15 13:27:53-07:00,25200,2013-08-15 13:27:53-07:00,25200,True,False,"['management.py', 'test_management.py']",['23afb880d976cfb47c4b04d2a6436b5f068ef734'],3,25,28,2,1.0,1.0,1.0
8c38d7a6eb08ba76e7d014e33aaffbda99484634,finishing out available options,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-15 14:02:48-07:00,25200,2013-08-15 14:02:48-07:00,25200,True,False,"['management.py', 'test_management.py']",['15f6e613c382f72b8e9333b21d10ca0154a27260'],13,16,29,2,1.0,1.0,1.0
95f851863b409cdc2c3185ce339ccaf8dc5cd667,check for sstable size in MB ok in leveled compaction,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-15 14:05:05-07:00,25200,2013-08-15 14:05:05-07:00,25200,True,False,['test_management.py'],['8c38d7a6eb08ba76e7d014e33aaffbda99484634'],0,4,4,1,1.0,1.0,1.0
c17c12152aacbc89bc1315fa4f8591034bb42807,Initial libevwrapper extension,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-15 16:12:43-05:00,18000,2013-08-15 16:12:43-05:00,18000,True,False,['libevwrapper.c'],['e6aa601af01c3b2699be52379efe1d0d68bc2509'],0,370,370,1,0.4,0.7866666666666666,0.43333333333333335
c7f97d91dafb21c2ae0647f8956ad8b5f29929ad,Use libev through wrapper instead of pyev,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-15 16:13:57-05:00,18000,2013-08-15 16:13:57-05:00,18000,True,False,['libevreactor.py'],['c17c12152aacbc89bc1315fa4f8591034bb42807'],12,9,21,1,,,
2f016e39225c7cf08b1a91f02f5b5508204611c7,Add libevwrapper extension to setup.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-15 16:14:54-05:00,18000,2013-08-15 16:14:54-05:00,18000,True,False,['setup.py'],['c7f97d91dafb21c2ae0647f8956ad8b5f29929ad'],1,4,5,1,,,
2687791861e40490725cdf7af559936b28b4dcca,Remove mentions of pyev,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-15 16:29:53-05:00,18000,2013-08-15 16:29:53-05:00,18000,True,False,"['README.rst', 'cluster.py', 'test_libevreactor.py']",['2f016e39225c7cf08b1a91f02f5b5508204611c7'],16,8,24,3,,,
a9de7843cfd788efc8f4736413ec492134d03e29,breaking apart sync table,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-15 14:49:16-07:00,25200,2013-08-15 14:49:16-07:00,25200,True,False,['management.py'],['95f851863b409cdc2c3185ce339ccaf8dc5cd667'],29,35,64,1,0.0,0.0,1.0
14dc049e69b4c84fdcf9116f72bc74c67d114498,Handle pre-options response errors correctly,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-15 16:50:21-05:00,18000,2013-08-15 16:50:21-05:00,18000,True,False,"['connection.py', 'test_libevreactor.py']",['fa57293cceaa827aca3fdb33163701678d25ffd3'],5,7,12,2,0.0,0.0,
83c936ee710ace35a28411594ad89da08d34dc82,Fix libevreactor unit test mock patching,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-15 17:10:10-05:00,18000,2013-08-15 17:10:10-05:00,18000,True,False,['test_libevreactor.py'],['2687791861e40490725cdf7af559936b28b4dcca'],1,1,2,1,,,
50b36685b66f348fa0452cb149c724c89d8e08e8,Use distribute_setup.py as setuptools provider,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-15 17:10:25-05:00,18000,2013-08-15 17:10:25-05:00,18000,True,False,"['distribute_setup.py', 'setup.py']",['83c936ee710ace35a28411594ad89da08d34dc82'],1,561,562,2,0.2440944881889764,0.43832020997375326,0.6640419947506562
03ecdbb9272faaf15c0c7d2e74e97c95f9e12732,Remove pyev from OSX install instructions,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-15 17:41:04-05:00,18000,2013-08-15 17:41:04-05:00,18000,True,False,['README.rst'],['a13d2403fe5857a30b2747407b12a01047a6f823'],6,0,6,1,,,
9ea1c7859e507d5767e33297b2bab31c4bc2fbfd,options added to create string,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-15 15:47:52-07:00,25200,2013-08-15 15:47:52-07:00,25200,True,False,"['management.py', 'test_management.py']",['a9de7843cfd788efc8f4736413ec492134d03e29'],1,13,14,2,0.0,0.0,1.0
f7b9953e0a035bf7f21222c35f6d02f61c01a84b,test for leveled compaction working,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-15 16:11:18-07:00,25200,2013-08-15 16:11:18-07:00,25200,True,False,"['changelog', 'management.py', 'test_management.py']",['9ea1c7859e507d5767e33297b2bab31c4bc2fbfd'],1,25,26,3,1.0,1.0,1.0
6148b9edbf0c77d4d77e75d6654033d356e2d6a8,working on alters,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-15 16:44:31-07:00,25200,2013-08-15 16:44:31-07:00,25200,True,False,"['management.py', 'test_management.py']",['f7b9953e0a035bf7f21222c35f6d02f61c01a84b'],1,19,20,2,1.0,1.0,1.0
a78e4ee54ffb592c92c938b4d82297ca5e2288bb,moved compaction settings to it's own test module,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-15 18:54:56-07:00,25200,2013-08-15 18:54:56-07:00,25200,True,False,"['management.py', 'test_compaction_settings.py', 'test_management.py']",['6148b9edbf0c77d4d77e75d6654033d356e2d6a8'],106,123,229,3,0.0,0.0,0.0
f3c6d32d08b5b394604ba0bbd83f30d8c6faa93d,fixing tablename and keyspace name class args,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-08-16 08:29:02-07:00,25200,2013-08-16 08:29:02-07:00,25200,True,False,['models.rst'],['685dc6854ebba32acc26568bf387640f2f665521'],2,2,4,1,,,
f33627c9791a53aa5efeb9a330d761fc8ae2e7eb,making sure update table is called,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-16 11:26:06-07:00,25200,2013-08-16 11:26:06-07:00,25200,True,False,"['management.py', 'test_compaction_settings.py']",['a78e4ee54ffb592c92c938b4d82297ca5e2288bb'],13,19,32,2,0.0,0.0,0.0
edf0dc06b7b18df61ad3a778c7e059eaceefc1b1,removed unnecessary return value,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-16 11:26:58-07:00,25200,2013-08-16 11:26:58-07:00,25200,True,False,['test_compaction_settings.py'],['f33627c9791a53aa5efeb9a330d761fc8ae2e7eb'],1,0,1,1,0.0,0.0,0.0
054fa2b85391d437dc22422ebc4450ff7f246da7,Update README and setup.py for extensions,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-16 13:30:15-05:00,18000,2013-08-16 13:30:15-05:00,18000,True,False,"['README.rst', 'setup.py']",['03ecdbb9272faaf15c0c7d2e74e97c95f9e12732'],17,140,157,2,1.0,1.0,1.0
d43bf1c9559420a7ca04511764ba98692c4166fa,working on updating compaction strategy,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-16 12:07:29-07:00,25200,2013-08-16 12:07:29-07:00,25200,True,False,"['management.py', 'test_compaction_settings.py']",['edf0dc06b7b18df61ad3a778c7e059eaceefc1b1'],1,20,21,2,1.0,1.0,1.0
dcb6d7c61d10dee50cc559c3dc33d8a81a1d834d,Add note about building after installing libev,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-16 14:21:39-05:00,18000,2013-08-16 14:21:39-05:00,18000,True,False,['README.rst'],['054fa2b85391d437dc22422ebc4450ff7f246da7'],3,4,7,1,,,
e298b0fa9e5085758d46d0b1cb6f595aca1f16d7,1.0.0-beta1 release,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-16 16:05:09-05:00,18000,2013-08-16 16:05:09-05:00,18000,True,False,"['CHANGELOG.rst', 'README-dev.rst', 'README.rst', '__init__.py', 'setup.py']",['dcb6d7c61d10dee50cc559c3dc33d8a81a1d834d'],25,78,103,5,,,
a9990915bf6ce9ff515ce8aa9d06eb3aaa024fb9,Fix typo in readme-dev,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-08-16 16:58:09-05:00,18000,2013-08-16 16:58:09-05:00,18000,True,False,['README-dev.rst'],['e298b0fa9e5085758d46d0b1cb6f595aca1f16d7'],0,1,1,1,,,
b5d69d0906b7080f1933df22f36fed75ccab6d4d,updating column option docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-08-16 16:00:06-07:00,25200,2013-08-16 16:00:06-07:00,25200,True,False,['models.rst'],['ef12134390e668134c9814f6f986cb0825f95f53'],6,13,19,1,,,
6883319866a20480a199c4f38b80236cdd0fdf30,add the include path where ev.h is installed by libev-devel on Centos,Aaron Daubman,daubman@gmail.com,Aaron Daubman,daubman@gmail.com,2013-08-17 22:27:09-04:00,14400,2013-08-17 22:27:09-04:00,14400,True,False,['setup.py'],['a9990915bf6ce9ff515ce8aa9d06eb3aaa024fb9'],2,4,6,1,,,
d9c7037781ef323e0e1fb2702767ae0b0fe5e73a,Needs a MANIFEST.in file so it can actually install from pip,Matt Robenolt,matt@ydekproductions.com,Matt Robenolt,matt@ydekproductions.com,2013-08-17 21:09:25-07:00,25200,2013-08-17 21:09:25-07:00,25200,True,False,['MANIFEST.in'],['a9990915bf6ce9ff515ce8aa9d06eb3aaa024fb9'],0,2,2,1,,,
b2eace8bd49825421d12291dfb441fa32542e1f2,altering correctly on incorrect compaction strategy,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-19 12:02:51-07:00,25200,2013-08-19 12:02:51-07:00,25200,True,False,['management.py'],['d43bf1c9559420a7ca04511764ba98692c4166fa'],1,7,8,1,1.0,1.0,1.0
b9feb7d799a8bd551cbe65a564a2cc74f9c2e3e1,1.0.0-beta2 release,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-08-19 14:36:07-05:00,18000,2013-08-19 14:36:07-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['8dc34c2dada33eee7bdb16040a185a186d8387ac'],1,5,6,2,,,
1258e96b71ece8a3a0ef5526259a1e22394407fe,beta2+ increment,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-08-19 14:44:17-05:00,18000,2013-08-19 14:44:17-05:00,18000,True,False,['__init__.py'],['b9feb7d799a8bd551cbe65a564a2cc74f9c2e3e1'],1,1,2,1,,,
cb925d342cb8cd3db92f4fc2bf47c67c37e40ad0,"verifying alter table with compaction""",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-19 13:12:19-07:00,25200,2013-08-19 13:12:19-07:00,25200,True,False,"['management.py', 'test_compaction_settings.py']",['b2eace8bd49825421d12291dfb441fa32542e1f2'],5,30,35,2,0.0,1.0,1.0
32b005edb1883d179ebc2bf9ef3c6e89760b1167,fixed broken test due to weird copying issue,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-19 13:45:32-07:00,25200,2013-08-19 13:45:32-07:00,25200,True,False,['test_compaction_settings.py'],['cb925d342cb8cd3db92f4fc2bf47c67c37e40ad0'],2,6,8,1,1.0,1.0,1.0
e7c83a0d69933d418b01c8202cc8c9e87b52f7c5,adding support for using different queryset and dmlquery classes on a model,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-08-19 15:49:26-07:00,25200,2013-08-19 15:49:26-07:00,25200,True,False,"['models.py', 'test_class_construction.py']",['b5d69d0906b7080f1933df22f36fed75ccab6d4d'],4,46,50,2,1.0,1.0,1.0
29c8561049ab6333684ce56c398cbe95b849d3dc,"updated docs with options, added tests for compaction options",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-20 11:43:41-07:00,25200,2013-08-20 11:43:41-07:00,25200,True,False,"['management.py', 'test_compaction_settings.py', 'models.rst']",['840c0ce5f61aca8777a19c266e5647b743cdbe80'],22,114,136,3,0.375,1.0,1.0
5efa4e0cb4fb5074f80fa2584900f555551f23d3,Add CentOS libev install commands,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-08-20 15:07:38-05:00,18000,2013-08-20 15:07:38-05:00,18000,True,False,['README.rst'],['353dadf788621a7063211483f9b6282fc94a7e01'],0,4,4,1,,,
4c53e3e2e40697e390d8b6d5ce73249d85687708,updated version,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-20 13:23:52-07:00,25200,2013-08-20 13:23:52-07:00,25200,True,False,['VERSION'],['82a111fea06560e17b8d3ae8d48ed6843e8930f6'],1,1,2,1,,,
f2f9230b5821990330003d5ed0757fdba8ccbb66,fixed docs,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-20 13:32:55-07:00,25200,2013-08-20 13:32:55-07:00,25200,True,False,['models.rst'],['4c53e3e2e40697e390d8b6d5ce73249d85687708'],2,3,5,1,,,
705b18968f6d02c066b4126b0b8ef6a62fd2efb6,fixing more docs errors,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-20 13:35:08-07:00,25200,2013-08-20 13:35:08-07:00,25200,True,False,['models.rst'],['f2f9230b5821990330003d5ed0757fdba8ccbb66'],1,1,2,1,,,
2abdbb52454013c3a6ef7795eedbf252da97a0f1,improving docs,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-20 13:38:41-07:00,25200,2013-08-20 13:38:41-07:00,25200,True,False,['models.rst'],['705b18968f6d02c066b4126b0b8ef6a62fd2efb6'],1,12,13,1,,,
dc869c4916d636d93aebf3863dee13f13672f106,updated readme and index to use sync_table rather than create_table,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-20 13:40:37-07:00,25200,2013-08-20 13:40:37-07:00,25200,True,False,"['README.md', 'index.rst']",['2abdbb52454013c3a6ef7795eedbf252da97a0f1'],5,5,10,2,,,
66930a00d96c0a9fee624efc00dee82036c3f4bb,fixed author,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-20 13:44:15-07:00,25200,2013-08-20 13:44:15-07:00,25200,True,False,['setup.py'],['dc869c4916d636d93aebf3863dee13f13672f106'],1,1,2,1,,,
9c5a0104f56beacee91e953173e246d1710f4c2b,fixing docs,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-20 14:25:58-07:00,25200,2013-08-20 14:25:58-07:00,25200,True,False,['models.rst'],['66930a00d96c0a9fee624efc00dee82036c3f4bb'],1,2,3,1,,,
e6cb306771defd290ca1f21562f27fce29b1d0e4,column docs,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-20 22:16:45-07:00,25200,2013-08-20 22:16:45-07:00,25200,True,False,['columns.rst'],['9c5a0104f56beacee91e953173e246d1710f4c2b'],5,14,19,1,,,
9cbe8d7268797fd7c34495eaf9e9aec2fb0e2384,typo,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-08-20 22:17:34-07:00,25200,2013-08-20 22:17:34-07:00,25200,True,False,['columns.rst'],['e6cb306771defd290ca1f21562f27fce29b1d0e4'],4,2,6,1,,,
79e9c94e42a1bbda79ba44f19f48cb5b0cebdfe2,Fix bug in varint packing that caused 0s to throw an exception,Rick Branson,rick@diodeware.com,Rick Branson,rick@diodeware.com,2013-08-21 15:33:28-07:00,25200,2013-08-21 15:33:28-07:00,25200,True,False,"['marshal.py', 'test_marshalling.py']",['5efa4e0cb4fb5074f80fa2584900f555551f23d3'],0,3,3,2,0.0,0.0,1.0
7354b5d646b3eb31dfc9a7173250c76472fdec3c,adding dev requirements file,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-08-22 15:26:41-07:00,25200,2013-08-22 15:26:41-07:00,25200,True,False,['requirements-dev.txt'],['9cbe8d7268797fd7c34495eaf9e9aec2fb0e2384'],0,6,6,1,,,
70f2c95c90e03ed04e5380190e394e9c8b8791c1,splitting up instance constructor methods to make defining custom instantiation methods easier,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-08-22 15:29:29-07:00,25200,2013-08-22 15:29:29-07:00,25200,True,False,['query.py'],['7354b5d646b3eb31dfc9a7173250c76472fdec3c'],19,20,39,1,1.0,1.0,1.0
f70973a90a07b007c8038756dad32446b5439eef,updating,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-08-22 15:32:23-07:00,25200,2013-08-22 15:32:23-07:00,25200,True,False,"['changelog', 'VERSION']",['70f2c95c90e03ed04e5380190e394e9c8b8791c1'],1,4,5,2,,,
d2b86bb31aefc23a37ab310c7e79e17943beb573,"removing table_name inheritance short circuit, which wasn't working anyway",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-08-22 15:44:18-07:00,25200,2013-08-22 15:44:18-07:00,25200,True,False,"['models.py', 'test_class_construction.py']",['f70973a90a07b007c8038756dad32446b5439eef'],7,0,7,2,0.25,0.25,0.25
4c0648343c161a54d0133968328d18087c3b927b,adding polymorphic_key arg to base column,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-08-30 15:22:34-07:00,25200,2013-08-30 15:22:34-07:00,25200,True,False,['columns.py'],['d2b86bb31aefc23a37ab310c7e79e17943beb573'],1,5,6,1,0.0,1.0,0.0
54d610ec20d867f19c61918c315ca6fee421e625,adding polymorphic config to model metaclass,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-03 10:25:53-07:00,25200,2013-09-03 10:25:53-07:00,25200,True,False,['models.py'],['4c0648343c161a54d0133968328d18087c3b927b'],2,33,35,1,0.3125,0.3125,0.3125
0c380402954df642d4462749bb6dfb5cfbce38ab,adding tests around polymorphic models,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-03 10:26:05-07:00,25200,2013-09-03 10:26:05-07:00,25200,True,False,['test_polymorphism.py'],['54d610ec20d867f19c61918c315ca6fee421e625'],0,110,110,1,1.0,1.0,1.0
94c7578b0b2c1dc180a5041fa4b847df55fa4ede,moving instance construction onto the model,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-03 12:00:11-07:00,25200,2013-09-03 12:00:11-07:00,25200,True,False,"['models.py', 'query.py']",['0c380402954df642d4462749bb6dfb5cfbce38ab'],15,30,45,2,1.0,1.0,0.0
ba476f8d6dce244d2f0cb5581c027140582f48ce,moving polymorphic base discovery into model meta class,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-03 12:09:17-07:00,25200,2013-09-03 12:09:17-07:00,25200,True,False,['models.py'],['94c7578b0b2c1dc180a5041fa4b847df55fa4ede'],13,16,29,1,0.0,0.0,0.0
2fc5350289c87b6db8e9ea313d505c238c348181,adding support for polymorphic model deserialization,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-03 12:25:06-07:00,25200,2013-09-03 12:25:06-07:00,25200,True,False,"['models.py', 'test_polymorphism.py']",['ba476f8d6dce244d2f0cb5581c027140582f48ce'],8,73,81,2,0.5,0.5,0.5961538461538461
2984ba71634e5c3d4b23bb42a977401ca60ffc01,adding tests around unindexed polymorphic columns,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-03 15:35:28-07:00,25200,2013-09-03 15:35:28-07:00,25200,True,False,"['models.py', 'test_polymorphism.py']",['2fc5350289c87b6db8e9ea313d505c238c348181'],8,59,67,2,1.0,1.0,1.0
5dc9e971267c2072c60ae9271c6e230813f72e15,finishing up the unindexed polymorphic key tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-03 16:29:38-07:00,25200,2013-09-03 16:29:38-07:00,25200,True,False,"['models.py', 'test_polymorphism.py']",['2984ba71634e5c3d4b23bb42a977401ca60ffc01'],8,26,34,2,1.0,1.0,1.0
8aa59edb36deb7f985dea556251cf66c9242be1b,switching select query to all columns when defer and only fields aren't defined,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-03 16:33:22-07:00,25200,2013-09-03 16:33:22-07:00,25200,True,False,['query.py'],['5dc9e971267c2072c60ae9271c6e230813f72e15'],7,10,17,1,1.0,0.0,1.0
880600924ae33998b7dddc6b36de00618b089511,adding support for auto filtering on polymorphic subclass models with and indexed polymorphic key,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-03 16:53:59-07:00,25200,2013-09-03 16:53:59-07:00,25200,True,False,"['models.py', 'test_polymorphism.py']",['8aa59edb36deb7f985dea556251cf66c9242be1b'],9,30,39,2,1.0,0.35714285714285715,0.6428571428571429
f0b6966d41f16a608bfcd25c30d10cbab57919c2,adding restriction around defining counter or container columns as polymorphic keys,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-03 17:00:15-07:00,25200,2013-09-03 17:00:15-07:00,25200,True,False,"['models.py', 'test_polymorphism.py']",['880600924ae33998b7dddc6b36de00618b089511'],1,7,8,2,0.6,0.6,0.6
cdb88e4fa4897769011c0181ef48c0ef6cdd4621,adding custom validation,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-03 18:32:06-07:00,25200,2013-09-03 18:32:06-07:00,25200,True,False,"['models.py', 'test_validation.py']",['f0b6966d41f16a608bfcd25c30d10cbab57919c2'],0,52,52,2,1.0,1.0,1.0
3b3d00051816f567348a57e1d11cf8e0db15dd97,get cassandra host from the environment (CASSANDRA_TEST_HOST) or default to localhost,Tommaso Barbugli,tbarbugli@gmail.com,Tommaso Barbugli,tbarbugli@gmail.com,2013-09-04 15:23:51+02:00,-7200,2013-09-04 15:23:51+02:00,-7200,True,False,['base.py'],['d2b86bb31aefc23a37ab310c7e79e17943beb573'],2,9,11,1,,,
fb6543c973b8e445a96c110780fdecd0d8ebf7e1,add VarInt column,Tommaso Barbugli,tbarbugli@gmail.com,Tommaso Barbugli,tbarbugli@gmail.com,2013-09-04 15:56:09+02:00,-7200,2013-09-04 19:10:33+02:00,-7200,True,False,"['columns.py', 'test_validation.py', 'columns.rst']",['3b3d00051816f567348a57e1d11cf8e0db15dd97'],1,53,54,3,1.0,1.0,1.0
b35f915044fd697f2ad9a1f9acbd4aec520b0d66,reverting custom validation changes,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-04 11:19:06-07:00,25200,2013-09-04 11:19:06-07:00,25200,True,False,"['models.py', 'test_validation.py']",['cdb88e4fa4897769011c0181ef48c0ef6cdd4621'],51,0,51,2,0.0,0.0,0.0
031ea5e8ad1540aed356f597dc72935c591f551b,adding docs for polymorphic models and user defined validation,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-04 14:05:34-07:00,25200,2013-09-04 14:05:34-07:00,25200,True,False,['models.rst'],['b35f915044fd697f2ad9a1f9acbd4aec520b0d66'],0,86,86,1,,,
712814432ab013d753e7e68f534e71a8886e6386,fixing typo in docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-04 17:14:26-07:00,25200,2013-09-04 17:14:26-07:00,25200,True,False,['models.rst'],['99d2f06a1b6c621f2407b88179bc81a3a89ef404'],1,1,2,1,,,
95246fc13421ab01758a13094878ed3339436346,updating the doc index with download links,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-04 17:18:08-07:00,25200,2013-09-04 17:18:08-07:00,25200,True,False,['index.rst'],['712814432ab013d753e7e68f534e71a8886e6386'],0,8,8,1,,,
41b9284c7129fad9f8d28c3f7cfbee2e01330f98,savage version bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-04 21:04:34-07:00,25200,2013-09-04 21:04:34-07:00,25200,True,False,['VERSION'],['95246fc13421ab01758a13094878ed3339436346'],1,1,2,1,,,
de23a89b43ac686ecaed550e537a96a58933bdf0,use cstringio rather than += on string in libev,Luke Carmichael,luke@deepfield.net,Luke Carmichael,luke@deepfield.net,2013-09-05 18:58:16-04:00,14400,2013-09-06 10:57:36-04:00,14400,True,False,"['libevreactor.py', 'test_libevreactor.py']",['f963484e30fd1db2de1181de123490e7b215e4e8'],12,30,42,2,0.0,0.1111111111111111,0.0
b259997a98ff3296e32df793b9727452d5987b5b,"add missing unicode encoding mapping

it looks like unicode strings are not properly encoded in cql queries because of this.",Tommaso Barbugli,tbarbugli@gmail.com,Tommaso Barbugli,tbarbugli@gmail.com,2013-09-07 22:11:35+02:00,-7200,2013-09-07 22:11:35+02:00,-7200,True,False,['decoder.py'],['f963484e30fd1db2de1181de123490e7b215e4e8'],0,1,1,1,,,
ce012d44e5c150eb45aa70c1f525dbb9acfd97a3,"Add __repr__ method to SimpleStatement and PreparedStatement. This should help
with debugging.",Tomaz Muraus,tomaz@tomaz.me,Tomaz Muraus,tomaz@tomaz.me,2013-09-11 21:57:59+02:00,-7200,2013-09-11 21:57:59+02:00,-7200,True,False,['query.py'],['5206dcdcaa4aa2bcb2d7f19af5298864b5cfcb33'],0,7,7,1,1.0,1.0,1.0
f2c4b97a52939e00326796dfc04ff618fc31bd75,"Throw InvalidParameterTypeError  exception if user trys to bind
PreparedStatement with an argument of an invalid type.",Tomaz Muraus,tomaz@tomaz.me,Tomaz Muraus,tomaz@tomaz.me,2013-09-11 22:26:44+02:00,-7200,2013-09-11 22:26:44+02:00,-7200,True,False,"['query.py', 'test_parameter_binding.py']",['ce012d44e5c150eb45aa70c1f525dbb9acfd97a3'],1,75,76,2,0.0,1.0,0.8367346938775511
87e1fbe3c8a58f91bc1af37405f30940c2c27e1d,"Add tox and travis config file, update .gitnore.",Tomaz Muraus,tomaz@tomaz.me,Tomaz Muraus,tomaz@tomaz.me,2013-09-11 22:49:54+02:00,-7200,2013-09-11 23:25:19+02:00,-7200,True,False,"['.gitignore', '.travis.yml', 'tox.ini']",['5206dcdcaa4aa2bcb2d7f19af5298864b5cfcb33'],0,26,26,3,,,
2dadfc1237e173b5e04cafa7ef1779ae7f51f3d2,Modify InvalidParamaterTypeError to inherit from TypeError.,Tomaz Muraus,tomaz@tomaz.me,Tomaz Muraus,tomaz@tomaz.me,2013-09-12 13:14:49+02:00,-7200,2013-09-12 13:14:49+02:00,-7200,True,False,"['query.py', 'test_parameter_binding.py']",['f2c4b97a52939e00326796dfc04ff618fc31bd75'],1,10,11,2,0.0,1.0,1.0
5f4c50e88bdfad1b89331c4746e6dd49ae6dec0d,Also include consistency level in the __repr__.,Tomaz Muraus,tomaz@tomaz.me,Tomaz Muraus,tomaz@tomaz.me,2013-09-12 13:21:01+02:00,-7200,2013-09-12 13:21:01+02:00,-7200,True,False,['query.py'],['2dadfc1237e173b5e04cafa7ef1779ae7f51f3d2'],3,6,9,1,1.0,1.0,1.0
4c5333a5dd6cae24c39193f097d014097f0067ef,"missing connection check before returning it

checking if the connection still exists solved lots of random AttributeError exceptions 'NoneType' object has no attribute 'lock'

looking few lines up seems like this check is necessary",Tommaso Barbugli,tbarbugli@gmail.com,Tommaso Barbugli,tbarbugli@gmail.com,2013-09-16 15:33:21+02:00,-7200,2013-09-16 15:33:21+02:00,-7200,True,False,['cluster.py'],['bee7f3807dc012864db94bde8a09b2f6dd791938'],1,1,2,1,,,
0d0115fb057d1d02a5361e084f106666f81f4e15,"Install unittest2 as a test dependencies when running tests under Python 2.6.

Currently tests would blow up if they were run under 2.6 because they were
relying on unittest functionality which is only available in Pyton >= 2.7.

Conflicts:

	tox.ini",Tomaz Muraus,tomaz@tomaz.me,Tyler Hobbs,tyler@datastax.com,2013-09-11 23:01:47+02:00,-7200,2013-09-16 13:07:26-05:00,18000,True,False,"['test_cluster.py', 'test_connection.py', 'test_metadata.py', 'test_prepared_statements.py', 'test_types.py', 'test_libevreactor.py', 'test_connection.py', 'test_control_connection.py', 'test_host_connection_pool.py', 'test_marshalling.py', 'test_parameter_binding.py', 'test_policies.py', 'test_response_future.py']",['ae6a901a6e3065ce3f7cbffbddf315bb98a19b93'],13,60,73,13,,,
37acc6d2211d2646f96693068c328b39b3fe6fa0,"Use set instead of set literal, because set literal is only available in Python
> 2.7.",Tomaz Muraus,tomaz@tomaz.me,Tyler Hobbs,tyler@datastax.com,2013-09-11 23:11:10+02:00,-7200,2013-09-16 13:08:01-05:00,18000,True,False,['test_parameter_binding.py'],['0d0115fb057d1d02a5361e084f106666f81f4e15'],2,3,5,1,,,
54fe64df9f94f317cb6f1bce3a9d4e6c10116735,Only run tests which are CPython dependent under CPython.,Tomaz Muraus,tomaz@tomaz.me,Tyler Hobbs,tyler@datastax.com,2013-09-12 12:30:16+02:00,-7200,2013-09-16 13:16:49-05:00,18000,True,False,['test_marshalling.py'],['37acc6d2211d2646f96693068c328b39b3fe6fa0'],2,11,13,1,,,
0b0964a1196ca578afda39d4e0921c6f2c97ce10,Also use unittest2 (if available) in tests.integration.init module.,Tomaz Muraus,tomaz@tomaz.me,Tyler Hobbs,tyler@datastax.com,2013-09-12 12:45:28+02:00,-7200,2013-09-16 13:17:10-05:00,18000,True,False,['__init__.py'],['54fe64df9f94f317cb6f1bce3a9d4e6c10116735'],2,6,8,1,,,
211558e8c8a9867954c1ce79aaac9c232dcc6d9a,Fix dict iteration in CredentialsMessage::send_body,aholmberg,aholmberg@godaddy.com,aholmberg,aholmberg@godaddy.com,2013-09-16 13:54:04-05:00,18000,2013-09-16 13:54:04-05:00,18000,True,False,['decoder.py'],['bee7f3807dc012864db94bde8a09b2f6dd791938'],1,1,2,1,,,
d5f22e268506087b3c498863442f84af15881dc1,Amend 'set' type in cqltypes.py to be sortedset'from blist instead of set; amend 'map' type to be OrderedDict instead of dict; make blist a dependency,Michael Laing,michael.laing@nytimes.com,Michael Laing,michael.laing@nytimes.com,2013-09-16 16:49:44-04:00,14400,2013-09-16 16:49:44-04:00,14400,True,False,"['README.rst', 'cqltypes.py', 'setup.py']",['ff8ec0d48c0ae431bfc1598a4273c5593ecb7b31'],4,11,15,3,,,
90e5abd8feb95696f574637612312a1c42729ea3,support lz4 compression if it is available,Aaron Daubman,daubman@gmail.com,Tyler Hobbs,tyler@datastax.com,2013-07-15 17:26:48-04:00,14400,2013-09-16 17:26:23-05:00,18000,True,False,['connection.py'],['ff8ec0d48c0ae431bfc1598a4273c5593ecb7b31'],0,6,6,1,,,
e1c19b3ff6c374150fb660aa2ce7e70e381d8339,Handle big endian message lengths,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-16 17:15:43-05:00,18000,2013-09-16 17:26:23-05:00,18000,True,False,['connection.py'],['90e5abd8feb95696f574637612312a1c42729ea3'],2,17,19,1,1.0,1.0,1.0
fc089dcc346b0e38602a5b919d60c48ccfd28778,Add a note about compression to install docs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-16 17:21:59-05:00,18000,2013-09-16 17:26:23-05:00,18000,True,False,['README.rst'],['e1c19b3ff6c374150fb660aa2ce7e70e381d8339'],0,19,19,1,,,
9a9d2fe4a9ec08a7bbb64333a454a7b4018e2130,Handle missing callback more cleanly,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-16 17:23:06-05:00,18000,2013-09-16 17:26:23-05:00,18000,True,False,['connection.py'],['fc089dcc346b0e38602a5b919d60c48ccfd28778'],2,2,4,1,,,
39a403af1b3d922bb05544f9619ff0c794f600e8,"Update type tests for ordered maps, sets

Related to changes in #33",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-16 17:55:54-05:00,18000,2013-09-16 17:55:54-05:00,18000,True,False,"['test_types.py', 'test_marshalling.py']",['8f1b41e3eb89a7653fcfabee596f9e27775001dd'],5,15,20,2,,,
4c8a5e386d5456f21e094458fea3073b7844cf7f,Remove old comment about null values,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-17 13:07:20-05:00,18000,2013-09-17 13:07:20-05:00,18000,True,False,['metadata.py'],['39a403af1b3d922bb05544f9619ff0c794f600e8'],1,1,2,1,,,
b2bacc8136f81d7b99870c6b4714d51363d25b57,Ignore flake8 warnings about dupe imports,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-17 13:07:46-05:00,18000,2013-09-17 13:07:46-05:00,18000,True,False,['metadata.py'],['4c8a5e386d5456f21e094458fea3073b7844cf7f'],1,1,2,1,,,
a008cb8d7eb3e4b7895db8e386f48cc99c8c3c01,Raise TypeError for non-string BOP tokens,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-17 13:10:52-05:00,18000,2013-09-17 13:10:52-05:00,18000,True,False,['metadata.py'],['b2bacc8136f81d7b99870c6b4714d51363d25b57'],0,4,4,1,1.0,1.0,1.0
de91558a2947537929c3b778023d67d1e794eab9,Error on negative max_attempts argument,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-17 13:21:04-05:00,18000,2013-09-17 13:21:04-05:00,18000,True,False,['policies.py'],['a008cb8d7eb3e4b7895db8e386f48cc99c8c3c01'],1,3,4,1,1.0,1.0,0.0
2dbbc7fb8d90a560e4f43dc13eb39c3b328c2fe0,Simplify lookup of cql data types,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-17 14:38:41-05:00,18000,2013-09-17 14:38:41-05:00,18000,True,False,"['cqltypes.py', 'decoder.py']",['de91558a2947537929c3b778023d67d1e794eab9'],67,31,98,2,0.0,0.9333333333333333,0.06666666666666667
f4f0ac551fc06bcc81bc6b9ff8f204a6a7b8e907,Raise Exception on double Cluster shutdown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-17 14:50:27-05:00,18000,2013-09-17 14:50:27-05:00,18000,True,False,['cluster.py'],['2dbbc7fb8d90a560e4f43dc13eb39c3b328c2fe0'],1,1,2,1,,,
36d089194e772390125e85c61e5d99601658b602,"Handle IPv4 inet addresses on Windows

IPv6 addresses are still not supported due to a lack of
inet_ntop and inet_pton, but this only matters if an
IPv6 address is actually used.  Otherwise, we shouldn't
care.

Resolves PYTHON-18",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-17 15:34:58-05:00,18000,2013-09-17 15:34:58-05:00,18000,True,False,['cqltypes.py'],['f4f0ac551fc06bcc81bc6b9ff8f204a6a7b8e907'],4,15,19,1,1.0,1.0,1.0
6b4b4e929e0c2c644703a492c4b051f5491f883e,"Add minimal handling of DynamicCompositeType

This simply allows the driver to not choke when it inspects
the schema sees DynamicCompositeType.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-17 16:18:07-05:00,18000,2013-09-17 16:18:07-05:00,18000,True,False,['cqltypes.py'],['36d089194e772390125e85c61e5d99601658b602'],1,6,7,1,,,
bda935857b9ea42e7d59122081d095e9f3dd6a1b,Return string from KeyspaceMetadata.as_cql_query(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-17 16:20:19-05:00,18000,2013-09-17 16:20:19-05:00,18000,True,False,['metadata.py'],['6b4b4e929e0c2c644703a492c4b051f5491f883e'],0,1,1,1,1.0,1.0,1.0
ca039729d9270917b35f4880a99b1c2e360f6677,"Correctly handle multi-message reads

Data at the end of the first message was accidentally
being discarded (by overwriting self._iobuf prior to
reading the remainder).  There's also some other minor
cleanup and reorg.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-17 17:28:53-05:00,18000,2013-09-17 17:28:53-05:00,18000,True,False,['libevreactor.py'],['de23a89b43ac686ecaed550e537a96a58933bdf0'],14,17,31,1,1.0,1.0,1.0
54d77739d0ff497148761f93cec1bdb43f23f335,"Use 2.6+ ""except ... as ..."" syntax",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-17 18:26:56-05:00,18000,2013-09-17 18:26:56-05:00,18000,True,False,"['cluster.py', 'connection.py', 'cqltypes.py', 'asyncorereactor.py', 'libevreactor.py', 'metadata.py', 'pool.py', 'query.py', 'setup.py', '__init__.py', 'test_cluster.py', 'test_connection.py', 'test_prepared_statements.py', 'test_types.py', 'test_libevreactor.py', 'test_connection.py', 'test_control_connection.py', 'test_host_connection_pool.py', 'test_marshalling.py', 'test_parameter_binding.py', 'test_policies.py', 'test_response_future.py']",['445d81345459938c6871eb464b682a0936be600e'],42,41,83,22,1.0,0.0,0.0
95ec1fbea257ceb47186323befce74e8b72b91e1,Fix code formatting in README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-18 11:31:48-05:00,18000,2013-09-18 11:31:48-05:00,18000,True,False,['README.rst'],['54d77739d0ff497148761f93cec1bdb43f23f335'],7,7,14,1,,,
8c23b1d0f597883f9bde0ec9b245afc71bdccc41,More README code formatting fixes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-18 11:34:51-05:00,18000,2013-09-18 11:34:51-05:00,18000,True,False,['README.rst'],['95ec1fbea257ceb47186323befce74e8b72b91e1'],2,4,6,1,,,
b794c47b409365f936cb93b206ba9544bc76852f,"Correct bool constant format

Boolean values were being surrounded by single quotes,
which is not correct, according to the cql3 spec.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-18 12:04:16-05:00,18000,2013-09-18 12:04:16-05:00,18000,True,False,['metadata.py'],['8c23b1d0f597883f9bde0ec9b245afc71bdccc41'],1,1,2,1,,,
837d15807d1999e61776b8d858535cd7922f553b,"Don't limit float precision in values

By converting floats to strings through the %f format option,
precision was being lost in some cases.  All formats used by
directly converting a float to a string are supported by C*
and preserve precision, so that should be used instead.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-18 12:07:07-05:00,18000,2013-09-18 12:07:07-05:00,18000,True,False,['metadata.py'],['b794c47b409365f936cb93b206ba9544bc76852f'],5,1,6,1,0.0,0.0,0.0
ba209f88c459fd0808c3bde0258ed7b4f3828c0b,Fix MD5 hash function,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-18 12:50:08-05:00,18000,2013-09-18 12:50:08-05:00,18000,True,False,['metadata.py'],['837d15807d1999e61776b8d858535cd7922f553b'],1,1,2,1,,,
f3d75e75cffc41dee7f4c6e548f56d987031cb74,Use ReplicationStrategy classes for ksmetadata,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-18 15:16:41-05:00,18000,2013-09-18 15:16:41-05:00,18000,True,False,['metadata.py'],['ba209f88c459fd0808c3bde0258ed7b4f3828c0b'],13,92,105,1,0.6530612244897959,0.40816326530612246,0.24489795918367346
54699cbc04e433ab0fa623e52b9d1fd85864b650,"More complete token-aware routing

The TokenAwarePolicy now takes into account what keyspace the
query is being run against so that replication settings can
be taken into account.  This means that all replicas for
the queried row can be used instead of just the first replica.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-18 17:02:43-05:00,18000,2013-09-18 17:02:43-05:00,18000,True,False,"['cluster.py', 'metadata.py', 'policies.py', 'query.py', 'test_metadata.py', 'test_policies.py']",['f3d75e75cffc41dee7f4c6e548f56d987031cb74'],49,105,154,6,0.37142857142857144,0.8,0.0
25f8314999337600c277774c61b06d7d3ac36521,"Correctly pass configured port to Connection

Fixes #35",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-18 17:06:30-05:00,18000,2013-09-18 17:06:30-05:00,18000,True,False,['cluster.py'],['54699cbc04e433ab0fa623e52b9d1fd85864b650'],0,2,2,1,1.0,1.0,0.0
b87890d0a37c306c75899697feed59b559dbd3c2,Rename Query to Statement to match Java driver,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-18 17:20:04-05:00,18000,2013-09-18 17:20:04-05:00,18000,True,False,"['cluster.py', 'policies.py', 'query.py', 'test_policies.py']",['25f8314999337600c277774c61b06d7d3ac36521'],32,35,67,4,1.0,1.0,1.0
aace08c2cbed48a1a7b29f8460adb0a8af750ad7,Update changelog with current beta3 progress,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-18 17:41:56-05:00,18000,2013-09-18 17:41:56-05:00,18000,True,False,['CHANGELOG.rst'],['b87890d0a37c306c75899697feed59b559dbd3c2'],4,46,50,1,,,
36d08e776444cf0e3ee450cc775c3276e4041099,"Add 1s timeout for initial connection

This prevents hanging for unreasonable amounts of time when
a connection cannot be made to the host.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-19 13:34:58-05:00,18000,2013-09-19 13:34:58-05:00,18000,True,False,"['asyncorereactor.py', 'libevreactor.py']",['aace08c2cbed48a1a7b29f8460adb0a8af750ad7'],2,28,30,2,1.0,1.0,0.7777777777777778
4b1b50d929658713ab81bf06da13da5072e2424b,Added all extra tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-09-16 20:39:16-05:00,18000,2013-09-19 20:29:15-05:00,18000,True,False,"['.gitignore', '__init__.py', 'test_cluster.py', 'test_factories.py', 'test_metadata.py', 'test_metrics.py', 'test_prepared_statements.py', 'test_query.py', 'test_host_connection_pool.py', 'test_metadata.py', 'test_policies.py', 'test_types.py']",['36d08e776444cf0e3ee450cc775c3276e4041099'],6,1302,1308,12,0.3850658857979502,0.9677891654465594,1.0
75d2451fc2ce97db3fb9a011773894844ce1bedc,First round of test fixes,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-09-19 20:18:58-05:00,18000,2013-09-19 20:29:26-05:00,18000,True,False,"['__init__.py', 'test_cluster.py', 'test_metadata.py', 'test_metrics.py', 'test_query.py', 'test_metadata.py', 'test_policies.py', 'test_types.py']",['4b1b50d929658713ab81bf06da13da5072e2424b'],264,84,348,8,1.0,0.044444444444444446,0.0
a2e617e200b734edb6e0fa18db4caf76f13f6d64,Figured out the accepted DateType formats,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-09-19 20:39:01-05:00,18000,2013-09-19 20:39:01-05:00,18000,True,False,['test_types.py'],['75d2451fc2ce97db3fb9a011773894844ce1bedc'],5,4,9,1,1.0,1.0,1.0
bdb64d07e9f0bdadcbd3e56dba376477f9546e3a,Add LocalStrategy for schema export purposes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-20 11:17:46-05:00,18000,2013-09-20 11:17:46-05:00,18000,True,False,['metadata.py'],['36d08e776444cf0e3ee450cc775c3276e4041099'],0,13,13,1,1.0,0.6666666666666666,0.3333333333333333
bc71462dd09bab993a17753b67ac2221b53245d3,"Handle race condition on building token map

If the token map is built prior to keyspace information being
processed, the token map will not have any knowledge of
keyspaces.  This change causes the token map to be rebuilt
whenever keyspaces change.

Relates to pull request #36",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-20 12:05:19-05:00,18000,2013-09-20 12:05:19-05:00,18000,True,False,['metadata.py'],['bdb64d07e9f0bdadcbd3e56dba376477f9546e3a'],15,39,54,1,0.625,0.625,1.0
b5016bfde6eb7ec241f06caa07db2c43e11d5d1e,Simpler replica calculation tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-20 12:36:33-05:00,18000,2013-09-20 12:36:33-05:00,18000,True,False,"['__init__.py', 'test_metadata.py']",['d3fbb116a6c1074a378177b28ea41529af310612'],21,26,47,2,0.0,1.0,1.0
5a3310d689532009ba0345a39a8b5385263165dc,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-20 13:31:55-05:00,18000,2013-09-20 13:31:55-05:00,18000,True,False,['CHANGELOG.rst'],['b5016bfde6eb7ec241f06caa07db2c43e11d5d1e'],1,3,4,1,,,
383a8817b760ba66c801166678a85e4e98b7efdd,Bump version to 1.0.0-beta3,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-20 13:32:54-05:00,18000,2013-09-20 13:32:54-05:00,18000,True,False,['__init__.py'],['5a3310d689532009ba0345a39a8b5385263165dc'],1,1,2,1,,,
b50f193064bc8263f6d67367c1716df00f1c0165,Make post-release version 1.0.0-beta3+,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-20 13:34:32-05:00,18000,2013-09-20 13:34:32-05:00,18000,True,False,['__init__.py'],['383a8817b760ba66c801166678a85e4e98b7efdd'],1,1,2,1,,,
6d756aed48b1c733366682bac30fdbb302fa1b1d,Update API docs for 1.0.0-beta3,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-20 13:39:23-05:00,18000,2013-09-20 13:39:23-05:00,18000,True,False,"['metadata.rst', 'query.rst']",['b50f193064bc8263f6d67367c1716df00f1c0165'],1,17,18,2,,,
df1a457304c3199de6c5d7588804917806406c9d,"Allow user to specify values for blob columns using bytearray.

This way the client also work with Cassandra 2.0.",Tomaz Muraus,tomaz@tomaz.me,Tomaz Muraus,tomaz@tomaz.me,2013-09-20 22:19:47+02:00,-7200,2013-09-20 22:19:47+02:00,-7200,True,False,"['decoder.py', 'test_types.py']",['6d756aed48b1c733366682bac30fdbb302fa1b1d'],0,50,50,2,0.10526315789473684,1.0,1.0
1ae35132e82a0bcbd712749e5b5cd83bf030e8e6,Allow user to pass 'cql_version' attribute to Cluster constructor.,Tomaz Muraus,tomaz@tomaz.me,Tomaz Muraus,tomaz@tomaz.me,2013-09-20 22:28:30+02:00,-7200,2013-09-20 22:28:30+02:00,-7200,True,False,['cluster.py'],['df1a457304c3199de6c5d7588804917806406c9d'],0,4,4,1,1.0,1.0,0.3333333333333333
2a30b36e6f1100f5d29f75151a31a944cece7719,use assertIsInstance instead of assertTrue(isinstance()),Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-09-20 15:21:21-05:00,18000,2013-09-20 15:31:08-05:00,18000,True,False,"['test_factories.py', 'test_metadata.py', 'test_libevreactor.py']",['6d756aed48b1c733366682bac30fdbb302fa1b1d'],15,15,30,3,,,
5499429c7020a6bc80fd7a182fd85c67bfd986aa,Remove 'system' workaround,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-09-20 15:29:33-05:00,18000,2013-09-20 15:31:17-05:00,18000,True,False,['test_metadata.py'],['2a30b36e6f1100f5d29f75151a31a944cece7719'],4,3,7,1,0.0,0.0,0.0
fb3fdb697e7b2b61bb0f663a0797a73573237fc2,Clear pending bug comments,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-09-20 15:53:41-05:00,18000,2013-09-20 15:53:41-05:00,18000,True,False,['test_metadata.py'],['5499429c7020a6bc80fd7a182fd85c67bfd986aa'],16,1,17,1,1.0,1.0,1.0
60dd6339600bd32066f43b25496c31e6d900ece9,Add tests for new blob writing functionality.,Tomaz Muraus,tomaz@tomaz.me,Tomaz Muraus,tomaz@tomaz.me,2013-09-20 22:59:47+02:00,-7200,2013-09-20 23:02:18+02:00,-7200,True,False,['test_types.py'],['1ae35132e82a0bcbd712749e5b5cd83bf030e8e6'],21,72,93,1,0.35294117647058826,1.0,1.0
f1f329d0b6541b9a9d357c26dfa397e20e4b2a76,"Use a better way of detecting Cassandra and CQL version.

Instead of using cql_version Cluster constructor argument query the ""system.local"" table.",Tomaz Muraus,tomaz@tomaz.me,Tomaz Muraus,tomaz@tomaz.me,2013-09-23 15:55:37+02:00,-7200,2013-09-23 15:55:37+02:00,-7200,True,False,['test_types.py'],['60dd6339600bd32066f43b25496c31e6d900ece9'],17,14,31,1,1.0,1.0,1.0
9627be73868250f2efd21344e4167fab854a3dcb,"Split version detection functionality into a BaseTestCase class.

This seems like a useful functionality so make it more easier to re-use this
information.",Tomaz Muraus,tomaz@tomaz.me,Tomaz Muraus,tomaz@tomaz.me,2013-09-23 16:03:11+02:00,-7200,2013-09-23 16:03:56+02:00,-7200,True,False,"['__init__.py', 'test_types.py']",['f1f329d0b6541b9a9d357c26dfa397e20e4b2a76'],10,30,40,2,1.0,1.0,1.0
1986d6d0409478164fbb02b98dfea7c4bf990e90,Support nicer BoundStatement printing,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-09-23 16:35:42-05:00,18000,2013-09-23 16:35:42-05:00,18000,True,False,['query.py'],['6d756aed48b1c733366682bac30fdbb302fa1b1d'],0,6,6,1,0.8,1.0,1.0
4675e93b115fb8588537ba65cc0da0665805a3dd,Fix small interface discrepancy,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-09-23 16:36:29-05:00,18000,2013-09-23 16:36:29-05:00,18000,True,False,['metadata.py'],['1986d6d0409478164fbb02b98dfea7c4bf990e90'],1,1,2,1,,,0.0
3a2b90e1effd98ffbf71c9208ca1fd46fd65356f,Support nicer BoundStatement printing,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-09-23 16:35:42-05:00,18000,2013-09-23 16:54:04-05:00,18000,True,False,['query.py'],['fb3fdb697e7b2b61bb0f663a0797a73573237fc2'],0,6,6,1,0.8,1.0,1.0
ff51ce73b0a73e526fabd55f460b07c992c4b050,Fix small interface discrepancy,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-09-23 16:36:29-05:00,18000,2013-09-23 16:54:16-05:00,18000,True,False,['metadata.py'],['3a2b90e1effd98ffbf71c9208ca1fd46fd65356f'],1,1,2,1,,,0.0
6e4c5bc5de89ed407b94b827a5536c7c2659aa3c,Another batch of code coverage tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-09-23 17:28:08-05:00,18000,2013-09-23 17:28:08-05:00,18000,True,False,"['test_query.py', 'test_connection.py', 'test_metadata.py', 'test_policies.py']",['ff51ce73b0a73e526fabd55f460b07c992c4b050'],5,384,389,4,0.3521739130434783,1.0,1.0
e72cde5f0e7de393e2b9494062245e0eaf1f7392,validation around not throwing an exception when updating a keyspace,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-09-23 17:53:26-07:00,25200,2013-09-23 17:53:26-07:00,25200,True,False,"['models.py', 'test_validation.py']",['95246fc13421ab01758a13094878ed3339436346'],5,15,20,2,1.0,1.0,1.0
3bd1ee58551d4faf21a69a7a82b56f41c94c9c9a,"removed python 2.6, fixed issue with model creation",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-09-23 17:57:39-07:00,25200,2013-09-23 17:57:39-07:00,25200,True,False,"['VERSION', 'test_validation.py', 'setup.py']",['e72cde5f0e7de393e2b9494062245e0eaf1f7392'],3,3,6,3,1.0,1.0,1.0
96d4b45effcdf6cda5bfe7778f1347a384b5a260,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-09-23 17:57:53-07:00,25200,2013-09-23 17:57:53-07:00,25200,True,False,['VERSION'],['3bd1ee58551d4faf21a69a7a82b56f41c94c9c9a'],1,1,2,1,,,
0c5d343a58d7ec9f7f8642248aaf87bffc56280e,Avoid KeyError when rebuilding NTS token map,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-24 10:49:25-05:00,18000,2013-09-24 10:49:25-05:00,18000,True,False,['metadata.py'],['6d756aed48b1c733366682bac30fdbb302fa1b1d'],5,5,10,1,,,
373c3d286bbf5e29ad8197100d5afca2c3e7b7d9,Minor cleanup on metadata unit tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-24 11:04:20-05:00,18000,2013-09-24 11:04:20-05:00,18000,True,False,['test_metadata.py'],['3fe346de0352fd55c40765892291fe77456e9ae4'],7,7,14,1,,,
0c29388caa45f19300899f1be8596db5b21a67a1,Use util fns instead of inheritance for cql version,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-24 11:30:47-05:00,18000,2013-09-24 11:30:47-05:00,18000,True,False,"['__init__.py', 'test_types.py']",['9627be73868250f2efd21344e4167fab854a3dcb'],35,26,61,2,0.0,0.0,0.0
de31a16633bb216a2c2b16e6a7906f249ef32ab2,Handle SNAPSHOT versions of Cassandra,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-24 11:34:30-05:00,18000,2013-09-24 11:34:30-05:00,18000,True,False,['__init__.py'],['0c29388caa45f19300899f1be8596db5b21a67a1'],0,3,3,1,1.0,1.0,1.0
f137c4b96a4001a37c5c9c38cb73a4aee70caf30,Use hexlify for more efficient blob encoding,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-24 12:03:06-05:00,18000,2013-09-24 12:03:06-05:00,18000,True,False,['decoder.py'],['de31a16633bb216a2c2b16e6a7906f249ef32ab2'],3,2,5,1,0.0,0.0,0.0
bc4b794bcf149701f25c3c541ed6d9ff727310ef,"Better CL options for bound statements

Default consistency levels coming from the parent PreparedStatement
through were being overwritten by the Statement.__init__ default.

Additionally, this allows a consistency level to be set for a
PreparedStatement through an __init__ kwarg.

Fixes #40",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-24 12:45:26-05:00,18000,2013-09-24 12:45:26-05:00,18000,True,False,['query.py'],['a27285ed6bcf6f2cbe1c693e32c24dd108d872a8'],3,6,9,1,1.0,1.0,0.0
a1bdd431bf178324d2b3a02be69a53a9b9eeaf48,"Update changelog, bump version to 1.0.0-beta4",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-24 13:05:38-05:00,18000,2013-09-24 13:05:38-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['bc4b794bcf149701f25c3c541ed6d9ff727310ef'],1,19,20,2,,,
0417f90245480362d2626548123e35e892a1ac3b,Make post-release version 1.0.0-beta4+,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-24 13:06:23-05:00,18000,2013-09-24 13:06:23-05:00,18000,True,False,['__init__.py'],['a1bdd431bf178324d2b3a02be69a53a9b9eeaf48'],1,1,2,1,,,
4a1654f663d66c5d2765fd8b840db0e174eff41c,Fix README-dev.rst code formatting,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-24 13:09:06-05:00,18000,2013-09-24 13:09:06-05:00,18000,True,False,['README-dev.rst'],['0417f90245480362d2626548123e35e892a1ac3b'],12,11,23,1,,,
2b4a9c4720e2490b4ade1ed7297e427351bb2012,Missed one code block in README-dev.rst,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-24 13:09:55-05:00,18000,2013-09-24 13:09:55-05:00,18000,True,False,['README-dev.rst'],['4a1654f663d66c5d2765fd8b840db0e174eff41c'],1,1,2,1,,,
5c16b58a48c493322d515a98b774efb128a50320,allow attempt to requery on connection failure,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-09-24 13:30:56-07:00,25200,2013-09-24 13:30:56-07:00,25200,True,False,['connection.py'],['96d4b45effcdf6cda5bfe7778f1347a384b5a260'],1,1,2,1,,,
8c9487864f43df9d54b95cb22cf1ee8905271467,version bumb,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-09-24 13:32:53-07:00,25200,2013-09-24 13:32:53-07:00,25200,True,False,"['changelog', 'VERSION']",['5c16b58a48c493322d515a98b774efb128a50320'],1,11,12,2,,,
d8b24f8a640e0b2f76416edd1cb7a07a3d65d12d,Unit test coverage for replica map generation,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-25 11:11:46-05:00,18000,2013-09-25 11:11:46-05:00,18000,True,False,['test_metadata.py'],['2b4a9c4720e2490b4ade1ed7297e427351bb2012'],3,75,78,1,0.13793103448275862,1.0,1.0
d1666ca4fde4c619711a93a51f2ef8a7cc24dd44,Avoid KeyError on NTS replica map building,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-25 11:12:47-05:00,18000,2013-09-25 11:12:47-05:00,18000,True,False,['metadata.py'],['d8b24f8a640e0b2f76416edd1cb7a07a3d65d12d'],3,6,9,1,0.0,0.0,0.0
369bb3449d2b156f8f285a3ef2eb4690c2aa3fa9,Specify hash function for Token classes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-25 11:14:40-05:00,18000,2013-09-25 11:14:40-05:00,18000,True,False,['metadata.py'],['d1666ca4fde4c619711a93a51f2ef8a7cc24dd44'],0,4,4,1,1.0,1.0,1.0
c0750625ea6b618a89c1a9d4ebe20034ee992dbe,Shared __str__/__repr__ for all Token classes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-25 11:14:58-05:00,18000,2013-09-25 11:14:58-05:00,18000,True,False,['metadata.py'],['369bb3449d2b156f8f285a3ef2eb4690c2aa3fa9'],12,3,15,1,0.0,0.0,0.0
639fef10cf659c573892aa00a022dfe7edb5d3f6,fixing documentation inconsistency,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-09-25 13:35:26-07:00,25200,2013-09-25 13:35:26-07:00,25200,True,False,['columns.rst'],['41b9284c7129fad9f8d28c3f7cfbee2e01330f98'],1,1,2,1,,,
a61b52f91e005fd9ca472415adf43171b433ac43,"Fixed deadlock that occurs in a certain import scenario.

When user code imports code that initiates a new connection, it could cause a
deadlock when String.encode was called in a seperate thread (e.g. when reading
messages from the cassandra server).
See http://bugs.python.org/issue10923",Ron Cohen,ron@opbeat.com,Ron Cohen,ron@opbeat.com,2013-09-26 10:13:13+02:00,-7200,2013-09-26 10:13:13+02:00,-7200,True,False,['cluster.py'],['c0750625ea6b618a89c1a9d4ebe20034ee992dbe'],0,5,5,1,,,
c85a323d63abf0a569a2c9b23495b7db95e036d0,"Fail fast when gevent monkey-patching is detected

Fixes #43",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-26 12:58:35-05:00,18000,2013-09-26 12:58:35-05:00,18000,True,False,['cluster.py'],['e49ff037c38eb17b4539215405e57a6f3a2ffcda'],0,7,7,1,,,
24b29b7a44eb54a6ea6991f7bd15d213b68849bc,More efficient replica map building for NTS,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-09-27 11:42:32-05:00,18000,2013-09-27 11:42:32-05:00,18000,True,False,['metadata.py'],['c85a323d63abf0a569a2c9b23495b7db95e036d0'],15,21,36,1,0.4,0.4,0.4
523d99364a47e1a396e99dc3ed856ec0ec4d0669,better logging on operational errors,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-09-27 13:35:19-07:00,25200,2013-09-27 13:35:19-07:00,25200,True,False,"['connection.py', 'test_connection_pool.py']",['8c9487864f43df9d54b95cb22cf1ee8905271467'],0,27,27,2,0.7857142857142857,0.7857142857142857,0.7857142857142857
f6e37e96ce90a35a7a38124c7a451bab3c4b3c9b,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-09-27 13:36:00-07:00,25200,2013-09-27 13:36:00-07:00,25200,True,False,['VERSION'],['8a7c1cfad859fe939e90b0eb2ebf86deab43ee92'],1,1,2,1,,,
b8f9b336e8fba3e1404f59aa5d9c784f151db75a,updated changelog,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-09-27 13:36:19-07:00,25200,2013-09-27 13:36:19-07:00,25200,True,False,['changelog'],['f6e37e96ce90a35a7a38124c7a451bab3c4b3c9b'],0,3,3,1,,,
453309e0a865c2528fbea0ea468e45f8ad6839d3,"First cut at a gevent connection class.

It seems to kind of work. The integration tests aren't working
right; that needs to be fixed before first. A simple test of the
basic functionality seems to work, but I've not yet tested the
recovery/retry and other execptional conditions.",Daniel Koepke,daniel.koepke@kwarter.com,Daniel Koepke,daniel.koepke@kwarter.com,2013-09-30 13:39:28-07:00,25200,2013-09-30 13:39:28-07:00,25200,True,False,"['cluster.py', 'connection.py', 'geventreactor.py', 'test_connection.py', 'test_gevent_connection.py']",['24b29b7a44eb54a6ea6991f7bd15d213b68849bc'],7,289,296,5,0.5058823529411764,0.6058823529411764,0.7647058823529411
32ae3413d281f4f618c4f90628cbc2207bb917b9,Remove unused set.,Daniel Koepke,daniel.koepke@kwarter.com,Daniel Koepke,daniel.koepke@kwarter.com,2013-09-30 13:50:10-07:00,25200,2013-09-30 13:50:10-07:00,25200,True,False,['geventreactor.py'],['453309e0a865c2528fbea0ea468e45f8ad6839d3'],2,0,2,1,,,
9e4e7b381825881b7053eea976086d09f5195321,Clean up.,Daniel Koepke,daniel.koepke@kwarter.com,Daniel Koepke,daniel.koepke@kwarter.com,2013-09-30 13:53:22-07:00,25200,2013-09-30 13:53:22-07:00,25200,True,False,"['cluster.py', 'geventreactor.py']",['32ae3413d281f4f618c4f90628cbc2207bb917b9'],10,0,10,2,1.0,0.0,1.0
31d332dbc5840afe3d41be1ee289d2588b2003a8,Fix example code for ValueSequence,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-01 11:33:41-05:00,18000,2013-10-01 11:33:41-05:00,18000,True,False,['query.py'],['24b29b7a44eb54a6ea6991f7bd15d213b68849bc'],1,1,2,1,,,
1c0bfed338cd94e3d3fd2308dd50bd32a8a1ef22,Clean-up and refactor.,Daniel Koepke,daniel.koepke@kwarter.com,Daniel Koepke,daniel.koepke@kwarter.com,2013-10-01 13:55:56-07:00,25200,2013-10-01 13:55:56-07:00,25200,True,False,['geventreactor.py'],['9e4e7b381825881b7053eea976086d09f5195321'],43,51,94,1,1.0,1.0,0.0
5003e608c6593e98b82479ae9db876fa0ef0eccc,updating value manager to use deepcopy instead of copy,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-02 13:40:36-07:00,25200,2013-10-02 13:40:36-07:00,25200,True,False,"['changelog', 'VERSION', 'columns.py', 'test_container_columns.py']",['b8f9b336e8fba3e1404f59aa5d9c784f151db75a'],6,9,15,4,,,
5ff7c9c125248baf42f4600b678f317f36d3eed0,Use gevent as default connection class when monkey patched.,Daniel Koepke,daniel.koepke@kwarter.com,Daniel Koepke,daniel.koepke@kwarter.com,2013-10-03 10:45:21-07:00,25200,2013-10-03 10:45:21-07:00,25200,True,False,['cluster.py'],['1c0bfed338cd94e3d3fd2308dd50bd32a8a1ef22'],5,10,15,1,,,
755fdaf1fb8ea022f6a45bbf3d0648451e7ee6b3,Bring back the timeout.,Daniel Koepke,daniel.koepke@kwarter.com,Daniel Koepke,daniel.koepke@kwarter.com,2013-10-03 10:45:30-07:00,25200,2013-10-03 10:45:30-07:00,25200,True,False,['geventreactor.py'],['5ff7c9c125248baf42f4600b678f317f36d3eed0'],0,1,1,1,0.0,1.0,0.0
68db2f166f371cf8b2c901044c87e4bbcb2a8000,"Add SSL support

Done for PYTHON-2",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-03 16:40:02-05:00,18000,2013-10-03 16:40:37-05:00,18000,True,False,"['cluster.py', 'connection.py', 'asyncorereactor.py', 'libevreactor.py']",['31d332dbc5840afe3d41be1ee289d2588b2003a8'],16,49,65,4,0.0,0.0,0.0
880408d92c2c572c21601fa401046fe95df65177,"Use StringIO for asyncore buf, handle large messages

Messages exceeding the buffer size were not read correctly
when using the asyncore connection class.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-03 17:19:35-05:00,18000,2013-10-03 17:19:35-05:00,18000,True,False,"['asyncorereactor.py', 'libevreactor.py']",['68db2f166f371cf8b2c901044c87e4bbcb2a8000'],16,37,53,2,0.0,0.1111111111111111,1.0
10e4d4290405083979ff7d1ce272ed97efb6f759,Transport Creation,Eric Scrivner,eric@grapheffect.com,Eric Scrivner,eric@grapheffect.com,2013-10-03 16:22:34-07:00,25200,2013-10-03 16:22:34-07:00,25200,True,False,['connection.py'],['5003e608c6593e98b82479ae9db876fa0ef0eccc'],4,53,57,1,0.5909090909090909,0.6818181818181818,0.36363636363636365
f4bf649709f8daefc153e91d9ffba31e4f0f4777,Update documentation,Eric Scrivner,eric@grapheffect.com,Eric Scrivner,eric@grapheffect.com,2013-10-03 16:29:31-07:00,25200,2013-10-03 16:29:31-07:00,25200,True,False,['connection.py'],['10e4d4290405083979ff7d1ce272ed97efb6f759'],1,1,2,1,,,
f23d310767a6c506574cc124b9cbfc5312c6887d,updating version number and docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-03 16:46:23-07:00,25200,2013-10-03 16:46:23-07:00,25200,True,False,"['changelog', 'VERSION', 'connection.rst']",['f4bf649709f8daefc153e91d9ffba31e4f0f4777'],1,7,8,3,,,
d568185c3aa7ad4593d37f638a24cf1759ede6bd,updating timeout docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-03 16:49:38-07:00,25200,2013-10-03 16:49:38-07:00,25200,True,False,"['connection.py', 'connection.rst']",['f23d310767a6c506574cc124b9cbfc5312c6887d'],2,2,4,2,,,
2b8424c74895c6a8dbd3d7f2cc789dd1027d6e89,Added guards to handle None value in Date and DateTime column to_python conversion,Pandu Rao,pandu.rao@gmail.com,Pandu Rao,pandu.rao@gmail.com,2013-10-03 18:34:32-07:00,25200,2013-10-03 18:34:32-07:00,25200,True,False,['columns.py'],['5e09e2b997c7f138d1da5da9153b983f4c76c8e2'],0,2,2,1,1.0,1.0,1.0
797ab9086fd677cf867142eb479c0fe25db1b7fb,Switch to pep386-compliant versioning scheme,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-04 11:14:26-05:00,18000,2013-10-04 11:14:26-05:00,18000,True,False,['__init__.py'],['880408d92c2c572c21601fa401046fe95df65177'],1,1,2,1,,,
d32b3e23d154b269a5935d00f11706d22e374f0e,"Switch back to plain setuptools, packaging tweaks

setup.py will now try to install as many of the extensions
as possible",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-04 12:15:03-05:00,18000,2013-10-04 12:15:03-05:00,18000,True,False,"['MANIFEST.in', 'distribute_setup.py', 'ez_setup.py', 'setup.py']",['797ab9086fd677cf867142eb479c0fe25db1b7fb'],625,343,968,4,0.7204301075268817,0.6989247311827957,0.07526881720430108
b1267d31c2f4ddc0fd7f1f3a814d02f01749424f,"Handle no blist on non-cpython

blist provides the sortedset class, but it's not currently
compatible with pypy.  This marks blist as a dependency only
when using cpython and gracefully handles blist not being
installed with a warning and the use of 'set' instead of 'sortedset'.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-09 17:30:11-05:00,18000,2013-10-09 17:30:11-05:00,18000,True,False,"['cqltypes.py', 'setup.py']",['d32b3e23d154b269a5935d00f11706d22e374f0e'],2,16,18,2,0.0,1.0,1.0
68767b137df140ebe4f08eb0158b82308f5f21ac,Fix empty queue handling when connection is full,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-10 16:55:52+00:00,0,2013-10-10 16:55:52+00:00,0,True,False,"['asyncorereactor.py', 'libevreactor.py']",['b1267d31c2f4ddc0fd7f1f3a814d02f01749424f'],4,4,8,2,,,
2db7cd7a3ebf75d5a2372d5083d820fbc2a4a2af,Avoid deadlock when setting keyspace on conn,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-10 14:41:44-05:00,18000,2013-10-10 14:41:44-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'libevreactor.py']",['68767b137df140ebe4f08eb0158b82308f5f21ac'],32,58,90,3,0.0,1.0,0.6470588235294118
decd31dbe1b826abd3da464e1951bfd1127d3b41,Don't submit retry when operation has already errored,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-10 16:20:56-05:00,18000,2013-10-10 16:20:56-05:00,18000,True,False,['cluster.py'],['2db7cd7a3ebf75d5a2372d5083d820fbc2a4a2af'],0,5,5,1,1.0,1.0,0.0
3ab5dc82de64665efbecd92400bb8443b8270534,"Update changelog, bump version to 1.0.0b5",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-10 17:11:36-05:00,18000,2013-10-10 17:11:36-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['decd31dbe1b826abd3da464e1951bfd1127d3b41'],1,24,25,2,,,
4b7bd4a1a2733ea39bfd6fc1c14d39109899a666,Bump to post-release version,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-10 17:14:36-05:00,18000,2013-10-10 17:14:36-05:00,18000,True,False,"['__init__.py', 'setup.py']",['3ab5dc82de64665efbecd92400bb8443b8270534'],2,2,4,2,,,
6c84af9b63d0417c667d7952c4ea0c11f645e16b,String formatting when logging should be lazy,Matt Robenolt,matt@ydekproductions.com,Matt Robenolt,matt@ydekproductions.com,2013-10-11 09:25:41-07:00,25200,2013-10-11 09:25:41-07:00,25200,True,False,"['cluster.py', 'connection.py', 'decoder.py', 'asyncorereactor.py', 'libevreactor.py', 'pool.py']",['4b7bd4a1a2733ea39bfd6fc1c14d39109899a666'],38,40,78,6,,,
d281b50c963d7bb30f1c4a0d0d936a21c3b9a5ed,"Use async method for setting keyspace to avoid deadlock

If we try to set the keyspace for connections in blocking way,
the event loop thread can end up being the blocked thread, resulting
in deadlock and a hung process.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-11 12:24:26-05:00,18000,2013-10-11 14:13:36-05:00,18000,True,False,"['cluster.py', 'connection.py', 'pool.py', 'test_host_connection_pool.py']",['9709cddb99ba960628df6c0bd359ea8776149417'],8,96,104,4,1.0,1.0,0.54
2a7a11dde4484bf4f0a77152e3ad1615f1235eaf,Added guard to handle None value in Date column to_database conversion,Pandu Rao,pandu.rao@gmail.com,Pandu Rao,pandu.rao@gmail.com,2013-10-16 18:30:47-07:00,25200,2013-10-16 18:30:47-07:00,25200,True,False,['columns.py'],['2b8424c74895c6a8dbd3d7f2cc789dd1027d6e89'],0,1,1,1,1.0,1.0,1.0
c9358733f60353f9ef583a166875ccd608792119,"Add testcases for guards for None in date, datetime conversion",Pandu Rao,pandu.rao@gmail.com,Pandu Rao,pandu.rao@gmail.com,2013-10-16 18:32:05-07:00,25200,2013-10-16 18:32:05-07:00,25200,True,False,['test_validation.py'],['2a7a11dde4484bf4f0a77152e3ad1615f1235eaf'],0,10,10,1,1.0,1.0,1.0
b52e9a9b34411b67d264d4c0a6d4d2c3f2ef76d9,add BigInt column,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2013-10-17 11:17:22-04:00,14400,2013-10-17 11:17:22-04:00,14400,True,False,"['columns.py', 'test_validation.py', 'test_value_io.py', 'columns.rst']",['d568185c3aa7ad4593d37f638a24cf1759ede6bd'],1,28,29,4,1.0,1.0,1.0
432e89415a32fc396aaebe5c5efa7cfccb0b7013,More detailed log messages around connections,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-17 12:07:47-05:00,18000,2013-10-17 12:07:47-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'libevreactor.py', 'pool.py']",['d281b50c963d7bb30f1c4a0d0d936a21c3b9a5ed'],19,28,47,4,0.0,0.3333333333333333,0.8888888888888888
e73ec7b3a9f8210202a3e83e383a5f61ebfe550b,"Add timeouts to conn creation, blocking messages

Instead of waiting indefinitely for a new connection
to initialize, a timeout is used when blocking for the event.

Likewise, for blocking messages (used by the control connection
and when setting keyspaces), set a timeout to avoid blocking
indefinitely in corner cases.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-17 12:11:40-05:00,18000,2013-10-17 12:11:40-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'libevreactor.py']",['432e89415a32fc396aaebe5c5efa7cfccb0b7013'],16,33,49,3,1.0,1.0,0.0
e66bcf38e7a0d5906c71a88a014b176f12e800a7,"Handle exceptions when erroring callbacks

In case any of the callbacks don't properly handle exceptions,
handle the exceptions (with a log message) and continue erroring
out the rest of the callbacks.

Related to #48",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-17 12:13:52-05:00,18000,2013-10-17 12:13:52-05:00,18000,True,False,"['asyncorereactor.py', 'libevreactor.py']",['e73ec7b3a9f8210202a3e83e383a5f61ebfe550b'],2,12,14,2,1.0,1.0,1.0
1ffeb1ffe9113a4bd3c9f8092f6a3bf5bb949f5a,Don't close asyncore connection on empty read,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-17 12:16:18-05:00,18000,2013-10-17 12:16:18-05:00,18000,True,False,['asyncorereactor.py'],['e66bcf38e7a0d5906c71a88a014b176f12e800a7'],2,0,2,1,1.0,1.0,0.0
8ba4a1d5a774e530004acebc77661e1defd420ab,"Grace period before new conns can be trashed

New connections were frequently being trashed before enough
time had passed to put sufficient load on them.  This adds
a basic grace period during which new connections cannot
be trashed, regardless of how few operations they have
in flight.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-17 12:18:59-05:00,18000,2013-10-17 12:18:59-05:00,18000,True,False,"['connection.py', 'pool.py']",['1ffeb1ffe9113a4bd3c9f8092f6a3bf5bb949f5a'],1,7,8,2,0.0,0.0,0.5
273fd38ffd189c5b83f825a5bfc6e0af18f78ab2,Raise exception conn is closed mid-initialization,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-17 12:20:10-05:00,18000,2013-10-17 12:20:10-05:00,18000,True,False,['connection.py'],['8ba4a1d5a774e530004acebc77661e1defd420ab'],1,1,2,1,,,
203f7720da2f2779d8ababf59b51a449dee6a13b,New run_in_executor decoractor for Cluster,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-17 12:26:25-05:00,18000,2013-10-17 12:26:25-05:00,18000,True,False,['cluster.py'],['273fd38ffd189c5b83f825a5bfc6e0af18f78ab2'],1,25,26,1,1.0,1.0,0.5714285714285714
4834683a43d810950ba6e3e0e77ed2392fb28602,Maintain listener list within Cluster,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-17 12:27:46-05:00,18000,2013-10-17 12:27:46-05:00,18000,True,False,['cluster.py'],['203f7720da2f2779d8ababf59b51a449dee6a13b'],0,25,25,1,1.0,1.0,1.0
8b78f37d808d43d9a856963a146c587f02b9bd3d,Avoid deadlock when nodes go up and down,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-17 12:31:09-05:00,18000,2013-10-17 12:31:09-05:00,18000,True,False,"['cluster.py', 'metadata.py', 'policies.py', 'pool.py', 'test_cluster.py', 'test_libevreactor.py', 'test_control_connection.py', 'test_host_connection_pool.py', 'test_policies.py', 'test_response_future.py']",['4834683a43d810950ba6e3e0e77ed2392fb28602'],238,334,572,10,0.0,0.0,0.2261904761904762
6abf31f2cc0a9437807e7a6f4b585aa8f3a4f425,Fixed bug in test case and expanded test case to include values_list,Pandu Rao,pandu.rao@gmail.com,Pandu Rao,pandu.rao@gmail.com,2013-10-17 12:22:33-07:00,25200,2013-10-17 12:22:33-07:00,25200,True,False,['test_validation.py'],['c9358733f60353f9ef583a166875ccd608792119'],4,10,14,1,1.0,1.0,1.0
442872f6a861bcc0686c21bb813f04e23ada6fbb,"Allow use of timezone aware datetimes in {Max,Min}TimeUUID

Convert the given timezone aware datetimes to UTC in a similar manner
as the DateTime column type does instead of resulting in an error.",Kai Lautaportti,kai.lautaportti@gmail.com,Kai Lautaportti,kai.lautaportti@gmail.com,2013-10-18 15:40:12+01:00,-3600,2013-10-18 15:52:49+01:00,-3600,True,False,"['columns.py', 'functions.py', 'test_queryset.py']",['d568185c3aa7ad4593d37f638a24cf1759ede6bd'],15,74,89,3,0.20588235294117646,1.0,1.0
e7f37ac76b8af9738cf52f521da48ee262e949da,Log at warn when a host is marked down,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-22 18:06:43-05:00,18000,2013-10-22 18:06:43-05:00,18000,True,False,['cluster.py'],['8b78f37d808d43d9a856963a146c587f02b9bd3d'],2,2,4,1,,,
15f14e8921da79a569c022a2797b198ce6c4e182,"Update changelog, bump version to 1.0.0b6",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-22 18:18:30-05:00,18000,2013-10-22 18:18:30-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['e7f37ac76b8af9738cf52f521da48ee262e949da'],1,20,21,2,,,
bfebf6584a71fc5eecd149d17e218503ea894a4a,Bump to post-release version,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-22 18:20:17-05:00,18000,2013-10-22 18:20:17-05:00,18000,True,False,['__init__.py'],['15f14e8921da79a569c022a2797b198ce6c4e182'],1,1,2,1,,,
64a9b27a2242c5f5bd36ccaa44c01c4ad36cb5f0,Update version notes in README-dev,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-22 18:22:02-05:00,18000,2013-10-22 18:22:02-05:00,18000,True,False,['README-dev.rst'],['bfebf6584a71fc5eecd149d17e218503ea894a4a'],2,2,4,1,,,
efc854ebe8d718cfea59e124eb4778ff18e4bf3c,Small cleanup.,Daniel Koepke,daniel.koepke@kwarter.com,Daniel Koepke,daniel.koepke@kwarter.com,2013-10-23 13:28:24-07:00,25200,2013-10-23 13:28:24-07:00,25200,True,False,['geventreactor.py'],['755fdaf1fb8ea022f6a45bbf3d0648451e7ee6b3'],7,2,9,1,,,
9e27821fb9c1e4ba71def38b08b58715971c055a,"Correctly set final exception when query fails on all hosts

Before this change, the Event that notifies listeners
that the operation has completed was not being triggered.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-23 17:35:30-05:00,18000,2013-10-23 17:35:30-05:00,18000,True,False,['cluster.py'],['64a9b27a2242c5f5bd36ccaa44c01c4ad36cb5f0'],2,2,4,1,,,
40058d0cf21016ce78f6be20df54ee31289f5ad7,Define ResponseFuture.__repr__(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-23 17:36:36-05:00,18000,2013-10-23 17:36:36-05:00,18000,True,False,['cluster.py'],['9e27821fb9c1e4ba71def38b08b58715971c055a'],0,1,1,1,,,
fd4d3b9ca520e463c7c5f0cdda019d8e099ada50,"Prepare statements in chunks of 10

This helps to finish preparing all statements more quickly
when down nodes come back up.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-23 17:37:30-05:00,18000,2013-10-23 17:37:30-05:00,18000,True,False,['cluster.py'],['40058d0cf21016ce78f6be20df54ee31289f5ad7'],8,11,19,1,0.0,0.0,1.0
4370319da6e8fe2e8a9583de90f2c4c89e740337,Stop preparation of statements after one failure,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-23 17:38:21-05:00,18000,2013-10-23 17:38:21-05:00,18000,True,False,['cluster.py'],['fd4d3b9ca520e463c7c5f0cdda019d8e099ada50'],3,0,3,1,1.0,1.0,0.0
fff78ffdeb5e882181c955ef8b539787761e5edf,Don't callback when reconnector is cancelled,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-23 17:41:15-05:00,18000,2013-10-23 17:41:15-05:00,18000,True,False,['pool.py'],['4370319da6e8fe2e8a9583de90f2c4c89e740337'],9,9,18,1,0.0,0.0,1.0
9652f65b659d75f1071922d5cf1f6e64b0956b33,"Better cleanup of failed node up handling

When a node comes back up, we try to create a new connection
pool for it.  If that process fails, listeners and the
control connection need to be notified.  Prior to this change,
they would not, so the pool could remain in a shutdown state
and the control connection could be unaware that its connection
had failed.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-23 17:45:35-05:00,18000,2013-10-23 17:45:35-05:00,18000,True,False,"['cluster.py', 'pool.py']",['fff78ffdeb5e882181c955ef8b539787761e5edf'],9,36,45,2,0.2857142857142857,0.2857142857142857,0.6666666666666666
72959da7db8a1fd479fbe8d1bea406ca49f1c8f1,fixed authors,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-23 16:49:58-07:00,25200,2013-10-23 16:49:58-07:00,25200,True,False,['AUTHORS'],['d568185c3aa7ad4593d37f638a24cf1759ede6bd'],1,2,3,1,,,
ff92bffe06adbdded0c7ab6e4e8565245f21c805,"Correct str len type for murmur3 key

Without the PY_SSIZE_T_CLEAN macro defined, the length
of the key is set as an int* instead of a Py_ssize_t",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-24 13:07:01-05:00,18000,2013-10-24 13:07:01-05:00,18000,True,False,['murmur3.c'],['9652f65b659d75f1071922d5cf1f6e64b0956b33'],1,1,2,1,,,
e6be639eb6ffc2a661747374c8eb1334144c9d99,"Use int, not byte, type for IO flags",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-24 13:08:51-05:00,18000,2013-10-24 13:08:51-05:00,18000,True,False,['libevwrapper.c'],['ff92bffe06adbdded0c7ab6e4e8565245f21c805'],1,1,2,1,,,
284a69d7f27ade34074a98f582cf92a8088d7d9c,adding stubbed ttl query tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 11:55:15-07:00,25200,2013-10-24 11:55:15-07:00,25200,True,False,['test_ttl.py'],['72959da7db8a1fd479fbe8d1bea406ca49f1c8f1'],0,16,16,1,1.0,1.0,1.0
7b34285ec296b298d674943899415c4a9dad3b11,adding batch and ttl to docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 11:56:20-07:00,25200,2013-10-24 11:56:20-07:00,25200,True,False,"['models.rst', 'queryset.rst']",['284a69d7f27ade34074a98f582cf92a8088d7d9c'],0,17,17,2,,,
c7df51c6b571cab8dea02ca763f95de96d73a564,Better error message for non-int consistency level,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-24 14:11:08-05:00,18000,2013-10-24 14:11:08-05:00,18000,True,False,['decoder.py'],['e6be639eb6ffc2a661747374c8eb1334144c9d99'],1,8,9,1,1.0,1.0,1.0
c62b7519fd613042c1a46041926c176bedd52f6b,adding failing tests for empty container column saving,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 12:17:17-07:00,25200,2013-10-24 12:17:17-07:00,25200,True,False,['test_container_columns.py'],['72959da7db8a1fd479fbe8d1bea406ca49f1c8f1'],3,13,16,1,1.0,1.0,1.0
52e29a57597d9b5bcb1f0ccdd8de3ad0fd589308,adding update method to model docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 12:17:52-07:00,25200,2013-10-24 12:17:52-07:00,25200,True,False,['models.rst'],['c62b7519fd613042c1a46041926c176bedd52f6b'],0,7,7,1,,,
560b7a6db90c31682c4f7a9f7545cb3b0fa3481a,"Fix bad consistency level on retries

On Read/WriteTimeouts, the operation would be retried with
the same consistency level as the previous operation, but that
consistency level was erroneously being stored as a string
instead of an int, resulting in errors like
""error: cannot convert argument to integer"".",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-24 14:26:19-05:00,18000,2013-10-24 14:26:19-05:00,18000,True,False,['decoder.py'],['c7df51c6b571cab8dea02ca763f95de96d73a564'],2,2,4,1,,,
a03da787498c12d12a63cf267239973d6367c4c6,"Revert ""Better error message for non-int consistency level""

This reverts commit c7df51c6b571cab8dea02ca763f95de96d73a564.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-24 14:29:05-05:00,18000,2013-10-24 14:29:05-05:00,18000,True,False,['decoder.py'],['560b7a6db90c31682c4f7a9f7545cb3b0fa3481a'],8,1,9,1,0.0,0.0,0.0
5efd20d5b243847963581182cb745b3bdd8f44a6,Better error messages for failed stmt prepares,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-24 14:39:48-05:00,18000,2013-10-24 14:39:48-05:00,18000,True,False,['cluster.py'],['a03da787498c12d12a63cf267239973d6367c4c6'],3,7,10,1,0.0,0.75,0.75
638ee3c43cbb2182842a25961514ac31a43f562e,Prepare statements against all hosts in parallel,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-24 14:50:09-05:00,18000,2013-10-24 14:50:09-05:00,18000,True,False,['cluster.py'],['5efd20d5b243847963581182cb745b3bdd8f44a6'],5,9,14,1,0.0,0.0,0.0
5aae540d3e54ef747a4e06af69985ea65b243a25,"Fix async keyspace setting on connections

When keyspaces were set asynchronously for connections,
the connection wasn't properly recording the new keyspace,
which could lead to errors preparing statements and
unnecessary re-setting of the keyspace.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-24 14:57:07-05:00,18000,2013-10-24 14:57:40-05:00,18000,True,False,['connection.py'],['638ee3c43cbb2182842a25961514ac31a43f562e'],0,1,1,1,1.0,1.0,1.0
a57d3730f3ea5180a130c56141f308a28c919492,"separating inserts, updates, column deletes and query value logic",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 13:08:52-07:00,25200,2013-10-24 13:08:52-07:00,25200,True,False,['query.py'],['52e29a57597d9b5bcb1f0ccdd8de3ad0fd589308'],68,129,197,1,0.6521739130434783,0.6521739130434783,1.0
dcd5a5a1acd80d1f21e9a6c0b8b89bb2e3138993,ttls are working off the Class and instance,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 13:17:50-07:00,25200,2013-10-24 13:17:50-07:00,25200,True,False,"['models.py', 'query.py', 'test_queryset.py', 'test_ttl.py']",['7b34285ec296b298d674943899415c4a9dad3b11'],8,110,118,4,0.9791666666666666,1.0,0.6458333333333334
982031672e7af39320018d64805e4c30c4e6e1e8,ttl statement fragment,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 13:20:17-07:00,25200,2013-10-24 13:20:17-07:00,25200,True,False,['query.py'],['dcd5a5a1acd80d1f21e9a6c0b8b89bb2e3138993'],2,3,5,1,1.0,1.0,1.0
308a5be608e4ecdd51a4b03b5ae67174bfb8b77c,updating update method to only issue set statements for modified rows and counters,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 13:25:07-07:00,25200,2013-10-24 13:25:07-07:00,25200,True,False,['query.py'],['a57d3730f3ea5180a130c56141f308a28c919492'],0,8,8,1,0.0,0.0,1.0
f68a5924a6dceeb3ff854bb63bdd70f5cbfe0cfd,fixing container column bug that would write insert empty container columns,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 13:36:43-07:00,25200,2013-10-24 13:36:43-07:00,25200,True,False,"['columns.py', 'query.py']",['308a5be608e4ecdd51a4b03b5ae67174bfb8b77c'],4,20,24,2,1.0,1.0,1.0
38df187625d07dd45fca299b0e0f07c68901f9e2,adding tests around empty container insert bug fix,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 13:42:20-07:00,25200,2013-10-24 13:42:20-07:00,25200,True,False,['test_container_columns.py'],['f68a5924a6dceeb3ff854bb63bdd70f5cbfe0cfd'],3,25,28,1,1.0,1.0,1.0
783f77222c27ec5b4268e5fdb7875b98e44c1754,added consistency constants to top level,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 13:48:38-07:00,25200,2013-10-24 13:48:38-07:00,25200,True,False,"['__init__.py', 'models.py']",['982031672e7af39320018d64805e4c30c4e6e1e8'],1,11,12,2,,,
8355e3bb5f276af6c6d0b9f6c5517e2b1dabfd70,test that ensures TTL is called on update,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 14:14:31-07:00,25200,2013-10-24 14:14:31-07:00,25200,True,False,"['query.py', 'test_ttl.py']",['79decb7b0b4d4dcf42834db412367cf1a706ff5e'],3,16,19,2,0.875,1.0,1.0
343367dbf7a57af85e6ea9eaecc4202bdb626bdb,adding update method to model,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 14:19:41-07:00,25200,2013-10-24 14:19:41-07:00,25200,True,False,"['models.py', 'query.py']",['38df187625d07dd45fca299b0e0f07c68901f9e2'],2,32,34,2,0.0,0.0,1.0
eea1e7e1898ce1cdb5d6c19bb0d7d45cf7482958,TTL working for save on an update,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 14:49:25-07:00,25200,2013-10-24 14:49:25-07:00,25200,True,False,"['models.py', 'query.py']",['8355e3bb5f276af6c6d0b9f6c5517e2b1dabfd70'],2,10,12,2,0.16666666666666666,0.16666666666666666,0.8333333333333334
cbc07a9fc88fb28200da8d4a69aed5cb2bf8a2e9,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 14:50:05-07:00,25200,2013-10-24 14:50:05-07:00,25200,True,False,['changelog'],['343367dbf7a57af85e6ea9eaecc4202bdb626bdb'],0,4,4,1,,,
4996f05563814312101ce2fe8905615f841f33f6,fixing update errors,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 14:50:30-07:00,25200,2013-10-24 14:50:30-07:00,25200,True,False,['models.py'],['cbc07a9fc88fb28200da8d4a69aed5cb2bf8a2e9'],2,2,4,1,,,
c906c77773c1f726f56d8315d593c14c945eec2b,adding tests around model updates,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 14:50:42-07:00,25200,2013-10-24 14:50:42-07:00,25200,True,False,['test_updates.py'],['4996f05563814312101ce2fe8905615f841f33f6'],0,91,91,1,1.0,1.0,1.0
2601354448f95348f35e0374717c430780cc7bbe,TTL working on inserts,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 14:52:38-07:00,25200,2013-10-24 14:52:38-07:00,25200,True,False,['test_ttl.py'],['eea1e7e1898ce1cdb5d6c19bb0d7d45cf7482958'],2,9,11,1,1.0,1.0,1.0
ca67541c5a689e7aac4670e11e4727ea1f986fe2,test for updates,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 14:55:44-07:00,25200,2013-10-24 14:55:44-07:00,25200,True,False,['test_ttl.py'],['2601354448f95348f35e0374717c430780cc7bbe'],0,11,11,1,1.0,1.0,1.0
e22dea631dc1541b7ebc3cde34f94f36c16ecf37,update with TTL work,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 14:57:55-07:00,25200,2013-10-24 14:57:55-07:00,25200,True,False,['models.py'],['61c25df4f36ef21918ac9041fa6e73c05930d42f'],1,1,2,1,,,
f1fb9da47c867f4edd57327de0f4a3a773fd0068,ensure consistency is called with the right param,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 15:36:20-07:00,25200,2013-10-24 15:36:20-07:00,25200,True,False,"['connection.py', 'test_consistency.py']",['e22dea631dc1541b7ebc3cde34f94f36c16ecf37'],4,42,46,2,0.8461538461538461,0.8461538461538461,0.8461538461538461
a7c7a85a3522f38ae6184a4c524bd2487b22dbfc,adding queryset updates and supporting tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 15:58:14-07:00,25200,2013-10-24 15:58:14-07:00,25200,True,False,"['query.py', 'test_updates.py']",['c906c77773c1f726f56d8315d593c14c945eec2b'],8,167,175,2,0.6161616161616161,0.48484848484848486,1.0
1aa65768f066bfa6e22f422d0be7aa3b54b2861d,removing empty update exception,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 17:14:00-07:00,25200,2013-10-24 17:14:23-07:00,25200,True,False,"['query.py', 'test_updates.py']",['a7c7a85a3522f38ae6184a4c524bd2487b22dbfc'],6,2,8,2,0.0,0.0,0.0
3ef6c10ac670e8c866c959ab8443065f820b687a,adding docs for queryset update,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 17:14:34-07:00,25200,2013-10-24 17:14:34-07:00,25200,True,False,"['models.rst', 'queryset.rst']",['1aa65768f066bfa6e22f422d0be7aa3b54b2861d'],1,14,15,2,,,
bfe2ebd31ba8ddee6eb95b13b73d29bc469ed57d,adding BigInt to changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 17:23:25-07:00,25200,2013-10-24 17:23:25-07:00,25200,True,False,['changelog'],['5f655f9968491cec837c6a55af0e79521f262c54'],0,1,1,1,,,
73756b247682f299bf8c3aa2511e10cc36195d84,adding dokai's time uuid update to changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 17:28:45-07:00,25200,2013-10-24 17:28:45-07:00,25200,True,False,['changelog'],['c5ac835da00b4759e6f40a3415ebf917dccf5932'],0,1,1,1,,,
8b238734e66137f465cb12dc0a9faff15d54a107,making sure we send the consistency_level explicitly,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 17:33:52-07:00,25200,2013-10-24 17:33:52-07:00,25200,True,False,"['connection.py', 'models.py', 'query.py', 'test_consistency.py']",['f1fb9da47c867f4edd57327de0f4a3a773fd0068'],11,25,36,4,0.6666666666666666,0.6666666666666666,0.3333333333333333
da58f8b2fbb83b535751b6503ba5dd37a8b0da2a,updates can use consistency levels,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 17:54:57-07:00,25200,2013-10-24 17:54:57-07:00,25200,True,False,"['models.py', 'test_consistency.py']",['e590a8fb6d189c0d9a791e95371d95f0a026e657'],4,18,22,2,0.0,1.0,1.0
3f6d293af21a37bf4c3d116d70e9f65dfdb62c55,update test works,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 17:56:46-07:00,25200,2013-10-24 17:56:46-07:00,25200,True,False,['test_consistency.py'],['da58f8b2fbb83b535751b6503ba5dd37a8b0da2a'],1,1,2,1,,,
6b1391749edaccbbbd83767a16b8cacb8903a92c,consistency with batch verified,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 18:19:04-07:00,25200,2013-10-24 18:19:04-07:00,25200,True,False,"['query.py', 'test_consistency.py']",['3f6d293af21a37bf4c3d116d70e9f65dfdb62c55'],3,23,26,2,1.0,1.0,0.9285714285714286
691ddb31718d03b13c38f85797cec062b1294c5c,beginning queryset refactor with some basic statement and operator classes and a bunch of empty test files,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 18:20:30-07:00,25200,2013-10-24 18:20:30-07:00,25200,True,False,"['operators.py', 'statements.py', '__init__.py', 'test_assignment_operators.py', 'test_base_operator.py', 'test_where_operators.py', '__init__.py', 'test_base_statement.py', 'test_delete_statement.py', 'test_dml_statement.py', 'test_insert_statement.py', 'test_select_statement.py', 'test_update_statement.py', 'test_where_clause.py']",['73756b247682f299bf8c3aa2511e10cc36195d84'],0,176,176,14,1.0,1.0,0.7666666666666667
308fd2fbd92c14386bc9026da83335d5c8a49d12,adding where clause rendering,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 18:25:22-07:00,25200,2013-10-24 18:25:22-07:00,25200,True,False,"['operators.py', 'statements.py', 'test_where_clause.py']",['691ddb31718d03b13c38f85797cec062b1294c5c'],1,14,15,3,1.0,1.0,1.0
3bbf307ca9f7ddb928c67cb547dbbe0aa5d38148,adding field listification,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 18:28:56-07:00,25200,2013-10-24 18:28:56-07:00,25200,True,False,"['statements.py', 'test_select_statement.py']",['308fd2fbd92c14386bc9026da83335d5c8a49d12'],2,16,18,2,1.0,1.0,0.375
c3cf18bbdb5d28b4db1fc2988293a2a20685c3ed,test for blind updates,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-24 18:32:29-07:00,25200,2013-10-24 18:32:29-07:00,25200,True,False,['test_consistency.py'],['6b1391749edaccbbbd83767a16b8cacb8903a92c'],0,11,11,1,1.0,1.0,1.0
0d708730bbd9750e5608c053d5337bcce1255b67,adding select field rendering,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 18:34:16-07:00,25200,2013-10-24 18:34:16-07:00,25200,True,False,"['statements.py', 'test_select_statement.py']",['3bbf307ca9f7ddb928c67cb547dbbe0aa5d38148'],2,17,19,2,1.0,1.0,1.0
39e5c08880eeb156ba2c8115b0895208a1768c3b,adding more select rendering and beginning dml statements,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 19:05:09-07:00,25200,2013-10-24 19:05:09-07:00,25200,True,False,"['statements.py', 'test_insert_statement.py', 'test_select_statement.py']",['0d708730bbd9750e5608c053d5337bcce1255b67'],13,99,112,3,0.7096774193548387,0.7903225806451613,0.5645161290322581
136339d9d3ce1bdb180a2881bd1d686197a76bc8,moving where rendering into it's own property,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 19:10:46-07:00,25200,2013-10-24 19:10:46-07:00,25200,True,False,['statements.py'],['39e5c08880eeb156ba2c8115b0895208a1768c3b'],1,6,7,1,1.0,1.0,0.6666666666666666
b23cb13ad8751cc34fcf51ef1a5be496ce8a71f2,fixing str tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 21:21:47-07:00,25200,2013-10-24 21:21:47-07:00,25200,True,False,"['statements.py', 'test_select_statement.py']",['136339d9d3ce1bdb180a2881bd1d686197a76bc8'],8,11,19,2,1.0,1.0,1.0
1207c5fea5e41ef5b92875b30b161223bf5fa3ad,removing the dev mailing list from the docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 21:23:15-07:00,25200,2013-10-24 21:23:15-07:00,25200,True,False,"['README.md', 'index.rst', 'setup.py']",['d6ed7e3319f4bf9d80be9e2d3e2b9b911eda9773'],6,0,6,3,,,
5733a05684cce03915dcbea7d157cb3560b49257,adding tests around misc select statement rendering,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 21:33:50-07:00,25200,2013-10-24 21:33:50-07:00,25200,True,False,['test_select_statement.py'],['b23cb13ad8751cc34fcf51ef1a5be496ce8a71f2'],8,12,20,1,1.0,1.0,1.0
e59d75977f683ca135d2a02f9907cdfc0cb9b95c,fixing statement tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 21:34:51-07:00,25200,2013-10-24 21:34:51-07:00,25200,True,False,"['test_insert_statement.py', 'test_where_clause.py']",['5733a05684cce03915dcbea7d157cb3560b49257'],3,3,6,2,,,
e6a411e3fc7e2920a62e0fd04e4e2b472879ecf7,adding a set clause,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 21:42:20-07:00,25200,2013-10-24 21:42:20-07:00,25200,True,False,['statements.py'],['e59d75977f683ca135d2a02f9907cdfc0cb9b95c'],9,24,33,1,1.0,1.0,0.0
1d816dd07c5099898cf1be40523269adcd2332d4,adding assignment statement base class,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 21:50:45-07:00,25200,2013-10-24 21:50:45-07:00,25200,True,False,['statements.py'],['e6a411e3fc7e2920a62e0fd04e4e2b472879ecf7'],8,31,39,1,1.0,1.0,0.25
822f6f3c2d47c76ec9e2b7c7eb195a85a0a45171,setting up constructors for other statements,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-24 21:58:02-07:00,25200,2013-10-24 21:58:02-07:00,25200,True,False,['statements.py'],['1d816dd07c5099898cf1be40523269adcd2332d4'],3,20,23,1,1.0,1.0,0.0
58253b4ed73945b8ad5d6b81b5f5fb541ab82665,adding deterministic context ids,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 07:06:40-07:00,25200,2013-10-25 07:06:40-07:00,25200,True,False,"['operators.py', 'statements.py']",['822f6f3c2d47c76ec9e2b7c7eb195a85a0a45171'],4,38,42,2,1.0,1.0,0.6470588235294118
317b68815583c9e795a1fbddfa41366c7921f789,adding test around adding assignments,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 07:10:36-07:00,25200,2013-10-25 07:10:36-07:00,25200,True,False,['test_assignment_statement.py'],['58253b4ed73945b8ad5d6b81b5f5fb541ab82665'],0,11,11,1,1.0,1.0,1.0
6bfd7536acfde03594c53a115a44a45ecc2922e3,adding test around adding where clauses,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 07:12:11-07:00,25200,2013-10-25 07:12:11-07:00,25200,True,False,['test_base_statement.py'],['317b68815583c9e795a1fbddfa41366c7921f789'],0,11,11,1,1.0,1.0,1.0
66c625027c62f2ba3d5d6df3ceecb2bafc7beff4,adding initial unicode rendering for insert statement,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 07:19:51-07:00,25200,2013-10-25 07:19:51-07:00,25200,True,False,['statements.py'],['6bfd7536acfde03594c53a115a44a45ecc2922e3'],0,16,16,1,1.0,1.0,1.0
edcb766893b6e93f417fabef2aca5598d4cf970c,adding test around clause context updating,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 07:27:31-07:00,25200,2013-10-25 07:27:31-07:00,25200,True,False,['test_base_clause.py'],['66c625027c62f2ba3d5d6df3ceecb2bafc7beff4'],0,16,16,1,1.0,1.0,1.0
188fdd54aa20442beb74850a69df9c8aa2e5c91e,reworkign clause construction and test around assignment clauses,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 07:30:13-07:00,25200,2013-10-25 07:30:13-07:00,25200,True,False,"['statements.py', 'test_assignment_clause.py']",['edcb766893b6e93f417fabef2aca5598d4cf970c'],13,19,32,2,,,1.0
0a4eebfcd5447b91d55ed3b57dfa0b92dcaf294e,adding tests around insert statements and fixing a few things,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 07:41:15-07:00,25200,2013-10-25 07:41:15-07:00,25200,True,False,"['statements.py', 'test_insert_statement.py', 'test_select_statement.py']",['188fdd54aa20442beb74850a69df9c8aa2e5c91e'],5,21,26,3,1.0,1.0,1.0
9413595f10b04dd5d29aa90a5c62733f88c17b21,fixed ttl bug on updates,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-25 10:57:53-07:00,25200,2013-10-25 10:57:53-07:00,25200,True,False,['query.py'],['80e6e5d99ec3f5556ce6ba80180d0dfdf675e623'],2,4,6,1,0.0,0.0,1.0
735b05f6ef7213c0f8e26e0959f6bfb0af0c5ff6,clone instead of modify self,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-25 11:53:08-07:00,25200,2013-10-25 11:53:08-07:00,25200,True,False,['query.py'],['9413595f10b04dd5d29aa90a5c62733f88c17b21'],5,7,12,1,1.0,1.0,1.0
de041cd08d5281b993f20981d14195e83900ed96,adding method for determining which column values have changed,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 11:57:23-07:00,25200,2013-10-25 11:58:16-07:00,25200,True,False,"['models.py', 'test_model_io.py', 'models.rst']",['ddd1d3b3f9a6976d511171b040b86d421235ad1a'],3,18,21,3,1.0,1.0,1.0
dfb062ec85c555c5b0bea2d490c0d61bcf7c93be,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 12:01:39-07:00,25200,2013-10-25 12:01:39-07:00,25200,True,False,['changelog'],['fc6e95d27b3ba31310127ca2321c2d7c97228603'],0,3,3,1,,,
b0feecfed31c81d45a4f8b5b62669e304a2ba2cd,bumping version number,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 12:03:24-07:00,25200,2013-10-25 12:03:24-07:00,25200,True,False,['VERSION'],['dfb062ec85c555c5b0bea2d490c0d61bcf7c93be'],1,1,2,1,,,
aa87e3a3a6686abfe2b0ffb11f366bc1c067c62f,ignore docs build folder,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-25 12:44:32-07:00,25200,2013-10-25 12:44:32-07:00,25200,True,False,['.gitignore'],['b0feecfed31c81d45a4f8b5b62669e304a2ba2cd'],0,1,1,1,,,
6056f2fac1d4ec695949f19de6fdc44231533775,docs fix,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-25 13:14:55-07:00,25200,2013-10-25 13:14:55-07:00,25200,True,False,['queryset.rst'],['aa87e3a3a6686abfe2b0ffb11f366bc1c067c62f'],1,1,2,1,,,
03e869c10ad1c7398cc00f11fa3c80a965068793,ttl docs,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-25 13:20:01-07:00,25200,2013-10-25 13:20:01-07:00,25200,True,False,['queryset.rst'],['6056f2fac1d4ec695949f19de6fdc44231533775'],3,12,15,1,,,
1e6462366184120b05e0b07ffaef6307230c6a67,implementing delete statement and adding method to get statement context,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 13:48:03-07:00,25200,2013-10-25 13:48:03-07:00,25200,True,False,['statements.py'],['7254b374ff34e2c1b57d15d00344ae9db18b4ade'],17,20,37,1,1.0,1.0,1.0
7771ceabd72c862ac10f3df74836005f26bf3f38,adding test around delete statement,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 13:48:31-07:00,25200,2013-10-25 13:48:31-07:00,25200,True,False,['test_delete_statement.py'],['1e6462366184120b05e0b07ffaef6307230c6a67'],0,38,38,1,1.0,1.0,1.0
ff1184080ceacfab6b9b18a975df8a3ee0d8dca5,adding context test to select statement,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 13:48:38-07:00,25200,2013-10-25 13:48:38-07:00,25200,True,False,['test_select_statement.py'],['7771ceabd72c862ac10f3df74836005f26bf3f38'],0,5,5,1,1.0,1.0,1.0
2b7dd6f22011a45f8d5dec3a6fd6e6f516a608ee,adding methods to the base assignment class,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 13:54:20-07:00,25200,2013-10-25 13:54:20-07:00,25200,True,False,['statements.py'],['ff1184080ceacfab6b9b18a975df8a3ee0d8dca5'],1,21,22,1,1.0,1.0,1.0
cc1533f099fab5d1ddebfa8cb40cd4951b56bf41,implementing update statement and insert ttl,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 14:16:44-07:00,25200,2013-10-25 14:16:44-07:00,25200,True,False,['statements.py'],['2b7dd6f22011a45f8d5dec3a6fd6e6f516a608ee'],16,15,31,1,0.0,0.0,1.0
70e446631b903a835994f2715bc8c583e991acd1,adding test around insert ttl,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 14:16:55-07:00,25200,2013-10-25 14:16:55-07:00,25200,True,False,['test_insert_statement.py'],['cc1533f099fab5d1ddebfa8cb40cd4951b56bf41'],1,4,5,1,1.0,1.0,1.0
89c20ef6c5e1d7717144c953583f1f2359321641,adding tests around update and related debugging,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 14:25:30-07:00,25200,2013-10-25 14:25:30-07:00,25200,True,False,"['statements.py', 'test_update_statement.py']",['70e446631b903a835994f2715bc8c583e991acd1'],3,38,41,2,1.0,1.0,1.0
a7c250561ff8acd10c96d523fa472972e3105da8,adding test around update statement ttls,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 14:37:15-07:00,25200,2013-10-25 14:37:15-07:00,25200,True,False,"['models.py', 'test_update_statement.py']",['89c20ef6c5e1d7717144c953583f1f2359321641'],0,8,8,2,1.0,1.0,1.0
1ea0f057fac7b398959dcabf9d551c0d1765c51a,Added __repr__ to model instances for prettly logging,Dvir Volk,dvir@everything.me,Dvir Volk,dvir@everything.me,2013-10-26 00:50:18+03:00,-10800,2013-10-26 00:50:18+03:00,-10800,True,False,['models.py'],['03e869c10ad1c7398cc00f11fa3c80a965068793'],0,11,11,1,1.0,1.0,1.0
09d440052963b70fd4c4232551d3dbbeed773bd3,removing dml statement tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 15:00:05-07:00,25200,2013-10-25 15:00:05-07:00,25200,True,False,['test_dml_statement.py'],['a7c250561ff8acd10c96d523fa472972e3105da8'],0,0,0,1,,,
1bc88c547c23ede7a5ac3808ee4840944fa77f62,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-25 15:03:27-07:00,25200,2013-10-25 15:03:27-07:00,25200,True,False,['VERSION'],['03e869c10ad1c7398cc00f11fa3c80a965068793'],1,1,2,1,,,
7b24b93a53e3f67e0df0a426b668d0c51bdd246b,adding count and fixing select tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 15:05:48-07:00,25200,2013-10-25 15:05:48-07:00,25200,True,False,"['statements.py', 'test_select_statement.py']",['09d440052963b70fd4c4232551d3dbbeed773bd3'],8,16,24,2,0.0,0.625,0.75
80eba6678937a617ad62b3adf936edbf964a7998,adding context placeholders to some where tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 15:06:35-07:00,25200,2013-10-25 15:06:35-07:00,25200,True,False,"['test_delete_statement.py', 'test_where_clause.py']",['7b24b93a53e3f67e0df0a426b668d0c51bdd246b'],3,4,7,2,1.0,1.0,1.0
a3df87c558bfc6164544e0e747c91c953ea64265,replacing select query with statement object,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 15:59:14-07:00,25200,2013-10-25 15:59:14-07:00,25200,True,False,['query.py'],['80eba6678937a617ad62b3adf936edbf964a7998'],35,29,64,1,,0.0,
181991233389aed18e867d46c616fbc53a4c86ee,fixing operator query objects,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 16:01:12-07:00,25200,2013-10-25 16:01:12-07:00,25200,True,False,"['query.py', 'test_queryset.py']",['a3df87c558bfc6164544e0e747c91c953ea64265'],10,18,28,2,1.0,1.0,1.0
74ed4f4d001e6a1e31bb49e8e479f826c4adc45e,removing obsolete tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 16:02:00-07:00,25200,2013-10-25 16:02:00-07:00,25200,True,False,['test_queryset.py'],['181991233389aed18e867d46c616fbc53a4c86ee'],33,0,33,1,0.0,0.0,0.0
181002486366eb00277a723daa9446f416d1025d,getting basic select queries working properly,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 17:16:43-07:00,25200,2013-10-25 17:16:43-07:00,25200,True,False,"['models.py', 'named.py', 'query.py', 'statements.py']",['74ed4f4d001e6a1e31bb49e8e479f826c4adc45e'],7,21,28,4,1.0,1.0,1.0
49e58cf9673642c1dc24ddd9c602cebf1a7c4489,ensure last item is removed properly,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-25 17:16:53-07:00,25200,2013-10-25 17:16:53-07:00,25200,True,False,['test_container_columns.py'],['1bc88c547c23ede7a5ac3808ee4840944fa77f62'],0,11,11,1,1.0,1.0,1.0
647ebaf5f078508f6e7682420b23b9d24c009a22,"modifying statement, clause, and operator stringifying to encode the object's unicode",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 17:20:50-07:00,25200,2013-10-25 17:20:50-07:00,25200,True,False,"['operators.py', 'statements.py']",['181002486366eb00277a723daa9446f416d1025d'],3,3,6,2,,,
ec2337858c011799d796bb7405af548828d3a0a4,excluding order and limit from count queries,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-25 17:23:51-07:00,25200,2013-10-25 17:23:51-07:00,25200,True,False,"['statements.py', 'test_select_statement.py']",['647ebaf5f078508f6e7682420b23b9d24c009a22'],3,5,8,2,1.0,1.0,1.0
802cd08e09866bc78a725036398ccef84c50e55c,making sure deletion works on the last item,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-25 17:28:12-07:00,25200,2013-10-25 17:28:12-07:00,25200,True,False,['test_container_columns.py'],['49e58cf9673642c1dc24ddd9c602cebf1a7c4489'],0,12,12,1,1.0,1.0,1.0
3556c99724a59a899f0f33e686c0e2e552359c35,refactoring count query,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-27 16:22:31-07:00,25200,2013-10-27 16:22:31-07:00,25200,True,False,['query.py'],['ec2337858c011799d796bb7405af548828d3a0a4'],10,4,14,1,0.0,0.0,0.0
cbbef483b20d9613216d2c08326e18cfcdebbd39,adding quoting wrapper,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-27 16:22:47-07:00,25200,2013-10-27 16:22:47-07:00,25200,True,False,['statements.py'],['3556c99724a59a899f0f33e686c0e2e552359c35'],2,41,43,1,1.0,0.5925925925925926,1.0
88804adaf9155d5cc3e4c327cf66d87670c16b00,adding where clause equality method,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-27 16:32:59-07:00,25200,2013-10-27 16:32:59-07:00,25200,True,False,"['query.py', 'statements.py', 'test_quoter.py', 'test_where_clause.py']",['cbbef483b20d9613216d2c08326e18cfcdebbd39'],1,19,20,4,1.0,1.0,1.0
14008640fca758dabd07e95370a8166cb9121e95,commenting out old operators,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-27 16:40:39-07:00,25200,2013-10-27 16:40:39-07:00,25200,True,False,['query.py'],['88804adaf9155d5cc3e4c327cf66d87670c16b00'],155,157,312,1,0.0,0.0,0.15
0807b299dd6b00f2f5bcbc4413fb738f0d660337,adding equality and hash methods,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-27 17:14:27-07:00,25200,2013-10-27 17:14:27-07:00,25200,True,False,"['query.py', 'statements.py', 'test_queryset.py']",['14008640fca758dabd07e95370a8166cb9121e95'],15,22,37,3,1.0,0.8333333333333334,1.0
898fc438ea058de721192c115628c0eed7d95a98,removing unused methods,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-27 17:18:10-07:00,25200,2013-10-27 17:18:10-07:00,25200,True,False,['query.py'],['0807b299dd6b00f2f5bcbc4413fb738f0d660337'],22,5,27,1,0.0,0.9230769230769231,0.0
736ec6dc7f33d510173c39c4be024fe7fab615ae,fixing delete syntax,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-27 19:55:32-07:00,25200,2013-10-27 19:55:32-07:00,25200,True,False,['statements.py'],['898fc438ea058de721192c115628c0eed7d95a98'],1,2,3,1,1.0,1.0,1.0
e0164167c6dcd8425395575ac5594c45ca91fcf2,replacing delete call with statement,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-27 19:55:49-07:00,25200,2013-10-27 19:55:49-07:00,25200,True,False,['query.py'],['736ec6dc7f33d510173c39c4be024fe7fab615ae'],9,10,19,1,1.0,1.0,1.0
187c5b4678ce4f3c080bcf3fb296a2fb495c1977,adding set update clause and supporting unit tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-28 08:19:24-07:00,25200,2013-10-28 08:19:24-07:00,25200,True,False,"['query.py', 'statements.py', 'test_container_columns.py', 'test_assignment_clause.py', 'test_assignment_clauses.py']",['e0164167c6dcd8425395575ac5594c45ca91fcf2'],17,188,205,5,0.95,0.875,0.9416666666666667
022d31021bff735e8b93f1fa82a63ac49f027bd4,validation around deleting containers,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-10-28 14:28:53-07:00,25200,2013-10-28 14:28:53-07:00,25200,True,False,['test_container_columns.py'],['802cd08e09866bc78a725036398ccef84c50e55c'],0,6,6,1,1.0,1.0,1.0
20afb040701cf03ae41d11306a54df31afdde433,adding list update clause,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-28 18:29:55-07:00,25200,2013-10-28 18:29:55-07:00,25200,True,False,"['statements.py', 'test_assignment_clauses.py']",['187c5b4678ce4f3c080bcf3fb296a2fb495c1977'],8,221,229,2,0.8472222222222222,0.8472222222222222,0.9583333333333334
06632cf53215b7f7d076052f1356e62ae85dbbe4,"adding map update clause, delete clause, and field delete clause",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-28 18:56:32-07:00,25200,2013-10-28 18:56:32-07:00,25200,True,False,['statements.py'],['20afb040701cf03ae41d11306a54df31afdde433'],1,43,44,1,0.9545454545454546,0.9545454545454546,0.6818181818181818
cae7a1945a184e6a78add19e9d180b6fbee590f0,adding not implemented errors and stubbed tests for map and delete field clauses,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-28 19:01:44-07:00,25200,2013-10-28 19:01:44-07:00,25200,True,False,"['statements.py', 'test_assignment_clauses.py']",['06632cf53215b7f7d076052f1356e62ae85dbbe4'],1,46,47,2,1.0,1.0,0.9642857142857143
43648ad67f03314b978b83827be38fc4270e1f81,Define __str__ and __repr__ for Connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-29 12:38:19-05:00,18000,2013-10-29 12:38:19-05:00,18000,True,False,['connection.py'],['5aae540d3e54ef747a4e06af69985ea65b243a25'],0,4,4,1,1.0,1.0,1.0
7aab3a9054842f28ab028a75f8c2f138782a5069,More debug logging around connection management,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-29 12:39:20-05:00,18000,2013-10-29 12:39:20-05:00,18000,True,False,['cluster.py'],['43648ad67f03314b978b83827be38fc4270e1f81'],2,5,7,1,0.6666666666666666,0.6666666666666666,1.0
f4168534dade15feedebd93bd1d47551e0594fc1,"Avoid sharing LoadBalancingPolicies across Clusters

If shared, the old LoadBalancingPolicy instance would be
re-populated, but with different hosts, causing problems
for anything that tries to use the old hosts.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-29 12:39:39-05:00,18000,2013-10-29 12:39:39-05:00,18000,True,False,['cluster.py'],['7aab3a9054842f28ab028a75f8c2f138782a5069'],1,3,4,1,,,
da6bfa3305a1d73fe016c9a8c0cc52576ed6f85e,Handle connection failure in between preparing and executing,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-29 15:16:31-05:00,18000,2013-10-29 15:16:31-05:00,18000,True,False,['cluster.py'],['f4168534dade15feedebd93bd1d47551e0594fc1'],0,3,3,1,0.0,1.0,1.0
3bdcb0dce3a3b2134067cf167cc01dbe3a7f0ada,Limit conn trashing across pool instead of per-conn,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-29 15:30:10-05:00,18000,2013-10-29 15:30:10-05:00,18000,True,False,"['connection.py', 'pool.py']",['da6bfa3305a1d73fe016c9a8c0cc52576ed6f85e'],6,6,12,2,0.0,1.0,1.0
4c44321381a76b83639975470655943c29b3c364,"Avoid conn leak in prepared statements, better err handling

If a prepared statement was not recognized by the server (for
example, if it was restarted), connections were not being properly
returned to the pool.

Additionally, the re-submission of the original query after the
preparation completed was not borrowing connections properly
(by finding the least loaded conn and incrementing its in_flight
count).

Last, if there was a connection error while preparing an
unrecognized prepared statement, that error was raised directly
instead of retrying the operation on other hosts.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-29 16:13:10-05:00,18000,2013-10-29 16:13:10-05:00,18000,True,False,"['cluster.py', 'test_response_future.py']",['3bdcb0dce3a3b2134067cf167cc01dbe3a7f0ada'],7,21,28,2,0.8181818181818182,0.0,0.0
81fbfe8b3c713606eb79b06e449973717471cc8a,Handle failed ResponseFuture after re-preparing stmt,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-29 16:37:14-05:00,18000,2013-10-29 16:37:14-05:00,18000,True,False,['cluster.py'],['4c44321381a76b83639975470655943c29b3c364'],0,3,3,1,0.0,0.0,1.0
63f3ab4f86812dc3f15cef0e87fc381ec03637df,"Less agressive connection use for prepared statements

When preparing a lot of statements at once (as part of a background
operation), a connection could be pushed over its in_flight limit,
resulting in potential failures for normal operations.  This
deprioritizes those types of operations, forcing them to wait to claim
enough stream IDs.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-29 17:22:02-05:00,18000,2013-10-29 17:22:02-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'libevreactor.py']",['81fbfe8b3c713606eb79b06e449973717471cc8a'],18,47,65,3,0.0,0.0,0.0
e9b9e2a26efdc47cfd1f458e11bbfe16573c871c,Renew shutdown pools that are left in session,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-30 13:30:58-05:00,18000,2013-10-30 13:30:58-05:00,18000,True,False,['cluster.py'],['63f3ab4f86812dc3f15cef0e87fc381ec03637df'],1,1,2,1,,,
312300f9fe402d44646c3ff88ea10354e0609a1b,Add methods to dump pool states,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-30 14:21:36-05:00,18000,2013-10-30 14:21:36-05:00,18000,True,False,"['cluster.py', 'pool.py']",['e9b9e2a26efdc47cfd1f458e11bbfe16573c871c'],0,7,7,2,1.0,1.0,1.0
e5d57294818f2b805f21008886451644237a52b0,Check actual conn in_flight before closing trashed conn,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-30 15:03:28-05:00,18000,2013-10-30 15:03:28-05:00,18000,True,False,['pool.py'],['312300f9fe402d44646c3ff88ea10354e0609a1b'],2,3,5,1,0.0,0.0,1.0
e7ad77520fb0eb526037c51779bb9ce176268514,Remove unused Connection.id_lock attribute,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-30 15:03:58-05:00,18000,2013-10-30 15:03:58-05:00,18000,True,False,['connection.py'],['e5d57294818f2b805f21008886451644237a52b0'],2,1,3,1,0.0,0.0,1.0
be2834d62aaf23098ef30584bdc9d4f12478e231,Add timeout to ResponseFuture.result(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-30 15:52:51-05:00,18000,2013-10-30 15:52:51-05:00,18000,True,False,"['__init__.py', 'cluster.py', 'connection.py', 'asyncorereactor.py', 'libevreactor.py']",['e7ad77520fb0eb526037c51779bb9ce176268514'],16,18,34,5,,,
f2592b0d0b1be2d46ed0f093fc2df8762b47aca6,Include defunct/closed in Connection.__str/repr__,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-30 15:54:14-05:00,18000,2013-10-30 15:54:14-05:00,18000,True,False,['connection.py'],['be2834d62aaf23098ef30584bdc9d4f12478e231'],1,7,8,1,1.0,1.0,1.0
871ba29f3bb8e2a9781ec73cd9d3f980127e593d,implementing map update clause and adding stubbed out tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-30 20:07:10-07:00,25200,2013-10-30 20:07:10-07:00,25200,True,False,"['statements.py', 'test_assignment_clauses.py']",['cae7a1945a184e6a78add19e9d180b6fbee590f0'],11,34,45,2,1.0,1.0,0.9444444444444444
cdf45bf1abe889c85199e0c120741689e18d3d7e,removing extra line,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-30 20:08:22-07:00,25200,2013-10-30 20:08:22-07:00,25200,True,False,['models.rst'],['022d31021bff735e8b93f1fa82a63ac49f027bd4'],1,0,1,1,,,
979166f161f46c4c027b1651e92db33dde66b02c,fixing update method syntax,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-30 20:12:12-07:00,25200,2013-10-30 20:12:12-07:00,25200,True,False,['models.rst'],['cdf45bf1abe889c85199e0c120741689e18d3d7e'],2,2,4,1,,,
40b3a5346eff9c785505da7c299b215288bcb675,"Handle failure to submit request after preparing

After re-preparing an unrecognized prepared statement, the
prepared statement will be resubmitted.  The submission process
was not being checked for failures, which could leave the ResponseFuture
hanging endlessly.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-31 14:05:20-05:00,18000,2013-10-31 14:05:20-05:00,18000,True,False,['cluster.py'],['f2592b0d0b1be2d46ed0f093fc2df8762b47aca6'],1,4,5,1,0.0,0.0,1.0
28c5cf04dbcf7ae322c3faa1b6298e26558d3144,"Handle failure to submit message when re-preparing

Similar to the fix in 40b3a53, this could ignore failures
when retrieving a connection from the pool or sending a message
on that connection during repreparation of an unrecognized
prepared statement.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-31 14:35:26-05:00,18000,2013-10-31 14:35:26-05:00,18000,True,False,"['cluster.py', 'test_response_future.py']",['40b3a5346eff9c785505da7c299b215288bcb675'],19,23,42,2,0.0,0.0,0.0
cabcc9b6aa2860cf04eeded660b4dc1b47f054eb,Log at debug when re-preparing unrecognized stmts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-10-31 14:44:10-05:00,18000,2013-10-31 14:44:10-05:00,18000,True,False,['cluster.py'],['28c5cf04dbcf7ae322c3faa1b6298e26558d3144'],0,2,2,1,0.0,0.0,1.0
ff70a5595b2d17d0bf2d5cd7344e37825d2353b8,implementing map delete and field delete,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-31 21:23:05-07:00,25200,2013-10-31 21:23:05-07:00,25200,True,False,['statements.py'],['871ba29f3bb8e2a9781ec73cd9d3f980127e593d'],11,12,23,1,1.0,1.0,0.0
6b75dc357b242ff6f0fcfeebd1213540b6d4f794,"adding tests around map update and delete, and field delete",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-10-31 21:23:17-07:00,25200,2013-10-31 21:23:17-07:00,25200,True,False,['test_assignment_clauses.py'],['ff70a5595b2d17d0bf2d5cd7344e37825d2353b8'],6,43,49,1,1.0,1.0,1.0
6d873e604d99079899f9b017e8226b2bb167a1b8,fixing delete statement,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-02 10:02:38-07:00,25200,2013-11-02 10:02:38-07:00,25200,True,False,['statements.py'],['6b75dc357b242ff6f0fcfeebd1213540b6d4f794'],0,1,1,1,1.0,1.0,0.0
48870d59b1578a3811cf035af1eec7f6a105c67f,updating named query tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 07:48:46-08:00,28800,2013-11-03 07:48:46-08:00,28800,True,False,['test_named.py'],['6d873e604d99079899f9b017e8226b2bb167a1b8'],5,5,10,1,,,
5b2351488f84e9065069d3f17215966c7986d2ac,using to_database for filter values,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 07:49:11-08:00,28800,2013-11-03 07:49:11-08:00,28800,True,False,"['query.py', 'test_datetime_queries.py']",['48870d59b1578a3811cf035af1eec7f6a105c67f'],2,2,4,2,,,
fb21199f51c42b81a017740dfaabb1d0f92e97cf,fixing statement tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 08:00:25-08:00,28800,2013-11-03 08:00:25-08:00,28800,True,False,"['statements.py', 'test_base_clause.py', 'test_delete_statement.py', 'test_select_statement.py', 'test_update_statement.py']",['5b2351488f84e9065069d3f17215966c7986d2ac'],7,12,19,5,1.0,1.0,0.6
a0e99934020ae840bb07859dd227118e4eb156af,fixing delete statement,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 08:14:30-08:00,28800,2013-11-03 08:14:30-08:00,28800,True,False,"['statements.py', 'test_delete_statement.py']",['fb21199f51c42b81a017740dfaabb1d0f92e97cf'],7,5,12,2,0.0,0.0,0.0
2daf6390e6a8ec7b5d99d20861f8db3e98b8216b,fixing IN statement to_database,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 08:19:30-08:00,28800,2013-11-03 08:19:30-08:00,28800,True,False,['query.py'],['a0e99934020ae840bb07859dd227118e4eb156af'],1,8,9,1,0.0,0.0,0.0
7d98bfb67c82d5101fb4e5eba683ea4fdeb3fda6,refactoring where test,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 08:42:51-08:00,28800,2013-11-03 08:42:51-08:00,28800,True,False,['test_named.py'],['2daf6390e6a8ec7b5d99d20861f8db3e98b8216b'],6,17,23,1,0.0,1.0,1.0
1dd5b50bd7ce432a9dd39a8bae99fc154c98a077,refactoring update query,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 08:43:05-08:00,28800,2013-11-03 08:43:05-08:00,28800,True,False,"['query.py', 'test_updates.py']",['7d98bfb67c82d5101fb4e5eba683ea4fdeb3fda6'],27,18,45,2,1.0,1.0,0.0
3a5a09fe5ad8d5b6d47ca7b24abd2eaeaaa001d9,fixing more where construction tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 08:46:12-08:00,28800,2013-11-03 08:46:12-08:00,28800,True,False,['test_named.py'],['1dd5b50bd7ce432a9dd39a8bae99fc154c98a077'],11,18,29,1,0.0,1.0,1.0
f426e0138e1eb25304c01e051ec5d01295e9c4ee,"hacking in the query functions, also getting all tests to pass",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 09:53:51-08:00,28800,2013-11-03 09:53:51-08:00,28800,True,False,"['columns.py', 'functions.py', 'named.py', 'query.py', 'statements.py', 'test_queryoperators.py']",['3a5a09fe5ad8d5b6d47ca7b24abd2eaeaaa001d9'],50,93,143,6,0.8461538461538461,0.8461538461538461,0.8846153846153846
b9fcb20ef37ad37518d436db26204d28bba37966,removing ttl statement method,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 12:00:54-08:00,28800,2013-11-03 12:00:54-08:00,28800,True,False,['query.py'],['f426e0138e1eb25304c01e051ec5d01295e9c4ee'],5,0,5,1,0.0,0.0,0.0
dcdc555422d88e538a078b6f4e7a74993a102bac,moving delete query to delete statement,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 12:19:00-08:00,28800,2013-11-03 12:19:00-08:00,28800,True,False,['query.py'],['b9fcb20ef37ad37518d436db26204d28bba37966'],13,12,25,1,1.0,0.0,0.0
25e787a82cb18882993ae2812f1f7b40051eb7bc,moving save insert to insert statement,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 13:34:35-08:00,28800,2013-11-03 13:34:35-08:00,28800,True,False,"['query.py', 'statements.py']",['dcdc555422d88e538a078b6f4e7a74993a102bac'],18,27,45,2,0.5,0.5,1.0
042d0aee0e21d1c80ec9a61c83dce11de874b501,adding BaseCQLStatemtent support to query execution,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 15:24:37-08:00,28800,2013-11-03 15:24:37-08:00,28800,True,False,['connection.py'],['25e787a82cb18882993ae2812f1f7b40051eb7bc'],0,4,4,1,1.0,1.0,0.0
8767fb18cacc1d33930c8281986db5964acb67d8,encapsulating raw or batch query execution into a querset method,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 15:24:56-08:00,28800,2013-11-03 15:24:56-08:00,28800,True,False,['query.py'],['042d0aee0e21d1c80ec9a61c83dce11de874b501'],33,25,58,1,1.0,1.0,0.0
095ef4d89a2bf273f1675756607ecfd43bb3f619,moving delete null columns to delete statement,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 15:48:19-08:00,28800,2013-11-03 15:48:19-08:00,28800,True,False,"['query.py', 'statements.py']",['8767fb18cacc1d33930c8281986db5964acb67d8'],40,29,69,2,1.0,1.0,0.0
845a52a08196f472663d5bd8432056daaf1eb5ed,moving update query to update statement,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 16:03:50-08:00,28800,2013-11-03 16:03:50-08:00,28800,True,False,"['query.py', 'statements.py']",['095ef4d89a2bf273f1675756607ecfd43bb3f619'],77,53,130,2,0.0,0.0,0.0
e3e7c18376cac94b43fb8278cebeabe751b612a1,adding counter column update clause and supporting unit tests,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 16:12:54-08:00,28800,2013-11-03 16:12:54-08:00,28800,True,False,"['statements.py', 'test_assignment_clauses.py']",['845a52a08196f472663d5bd8432056daaf1eb5ed'],1,51,52,2,1.0,1.0,0.90625
e66eecf28b1e1cd91f16f3c74fff1da5c8036179,adding counter column support to update and condensing the logic,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 16:16:27-08:00,28800,2013-11-03 16:16:27-08:00,28800,True,False,['query.py'],['e3e7c18376cac94b43fb8278cebeabe751b612a1'],13,11,24,1,1.0,1.0,0.0
7a4e2be45ef59d98407d22b9686c3e871f5ddca3,fixing map context updates,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 16:23:39-08:00,28800,2013-11-03 16:23:39-08:00,28800,True,False,['statements.py'],['e66eecf28b1e1cd91f16f3c74fff1da5c8036179'],2,3,5,1,1.0,0.0,1.0
b41a1d6d63cc63bfbb537959cfa8476f98d91097,getting noop counter column updates working properly,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 16:31:26-08:00,28800,2013-11-03 16:31:26-08:00,28800,True,False,"['statements.py', 'test_assignment_clauses.py']",['7a4e2be45ef59d98407d22b9686c3e871f5ddca3'],4,8,12,2,1.0,1.0,1.0
e7107c3c0c656139e0cc01b3d3fd7ed38e9ec07b,adding support for changing the root context id of a statement,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 16:47:56-08:00,28800,2013-11-03 16:47:56-08:00,28800,True,False,"['statements.py', 'test_delete_statement.py', 'test_insert_statement.py', 'test_select_statement.py', 'test_update_statement.py']",['b41a1d6d63cc63bfbb537959cfa8476f98d91097'],2,64,66,5,1.0,1.0,0.9803921568627451
fb502a023fd0f348e67ecadbaff29fd675fa3b5e,removing parameters from batch and execute methods,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 16:51:26-08:00,28800,2013-11-03 16:51:26-08:00,28800,True,False,['query.py'],['e7107c3c0c656139e0cc01b3d3fd7ed38e9ec07b'],5,5,10,1,,,1.0
5a976717b5446ea797cd77920f396ab039f3447d,reworking batch to work with the new statement objects,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 16:54:39-08:00,28800,2013-11-03 16:54:39-08:00,28800,True,False,['query.py'],['fb502a023fd0f348e67ecadbaff29fd675fa3b5e'],5,8,13,1,0.0,1.0,1.0
fe6359e4d0bf95d7b75f11bf832c1f061083b5df,removing old code,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-03 16:57:03-08:00,28800,2013-11-03 16:57:03-08:00,28800,True,False,['query.py'],['5a976717b5446ea797cd77920f396ab039f3447d'],153,5,158,1,,,
cfc77117939fd8701ac4b454b2e080c703a214c3,fixing bug in set update that would prevent the last item in a set from being removed,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-04 09:58:43-08:00,28800,2013-11-04 09:58:43-08:00,28800,True,False,['statements.py'],['b90ad4d6ebada15eb5768a7f1d7b7f85762cf0cd'],1,1,2,1,,,
46d1cc1316331d2b4145106a9b4bd73bf9ac969d,"After re-preparing stmts, run query in executor

The query was being resubmitted on the event loop thread,
which could cause a deadlock if there were not any connections
available for use.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-04 15:33:19-06:00,21600,2013-11-04 15:33:19-06:00,21600,True,False,['cluster.py'],['cabcc9b6aa2860cf04eeded660b4dc1b47f054eb'],1,2,3,1,1.0,1.0,1.0
fa4b02920d8fce5acd782924f75a63ef045c2205,Log when connection creation is actually started,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-04 16:08:28-06:00,21600,2013-11-04 16:08:28-06:00,21600,True,False,['pool.py'],['46d1cc1316331d2b4145106a9b4bd73bf9ac969d'],0,1,1,1,0.0,0.0,1.0
a2ae4906a3c332e565234e846a2c56f7bb22f5c8,Raise min trash interval to 10 seconds,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-04 16:19:52-06:00,21600,2013-11-04 16:19:52-06:00,21600,True,False,['pool.py'],['fa4b02920d8fce5acd782924f75a63ef045c2205'],1,1,2,1,,,
dd84464991134d35732edd063c1417fdeb4003f4,Check open conn count before submitting new creation task,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-04 16:20:14-06:00,21600,2013-11-04 16:20:14-06:00,21600,True,False,['pool.py'],['a2ae4906a3c332e565234e846a2c56f7bb22f5c8'],0,2,2,1,1.0,1.0,1.0
6d6fc66ba4e2e82ae64695f2929b33467ee70e40,Include open count in pool state string,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-04 16:20:37-06:00,21600,2013-11-04 16:20:37-06:00,21600,True,False,['pool.py'],['dd84464991134d35732edd063c1417fdeb4003f4'],1,1,2,1,,,
23968a67ef39d39670c65c803cac8aa66200cac3,Don't recommend using sudo + pip,Matt Robenolt,m@robenolt.com,Matt Robenolt,m@robenolt.com,2013-11-05 05:29:22-08:00,28800,2013-11-05 05:29:22-08:00,28800,True,False,['README.rst'],['6d6fc66ba4e2e82ae64695f2929b33467ee70e40'],5,5,10,1,,,
31f684bb91f3e0a41238c869a7c8fc11ebf21515,"Handle large messages through libev correctly

This fixes a problem similar to what 880408d92c2c5 fixed for
asyncore.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-05 12:15:11-06:00,21600,2013-11-05 12:15:11-06:00,21600,True,False,['libevreactor.py'],['6d6fc66ba4e2e82ae64695f2929b33467ee70e40'],6,6,12,1,,,
bfcce337396a2d8163e16c1ccd8b4a16bcaa6f9e,"Mark hosts up at the right time when adding them

Hosts outside of the intial set of contact points were not
being marked up correctly when they were discovered and added
to the cluster and sessions, resulting in them being skipped
for statement preparation and other operations.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-05 13:23:24-06:00,21600,2013-11-05 13:32:58-06:00,21600,True,False,"['cluster.py', 'pool.py']",['4cc2994c101bd3a688e9ce37465e6ed5bce80f5a'],12,22,34,2,0.0,1.0,1.0
4257aa859c0d447eb281edd310c6bde73146b613,"Don't ignored libev conns closed by server

This bug was introduced by 31f684bb91f3e0a41238c869a7c8fc11ebf21515",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-05 13:29:57-06:00,21600,2013-11-05 13:32:58-06:00,21600,True,False,['libevreactor.py'],['bfcce337396a2d8163e16c1ccd8b4a16bcaa6f9e'],0,3,3,1,0.0,0.0,0.0
96f57caea953b593bfb2f235eb2b837e7540dc6d,Minor cleanup in metrics test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-05 13:32:07-06:00,21600,2013-11-05 13:32:59-06:00,21600,True,False,['test_metrics.py'],['4257aa859c0d447eb281edd310c6bde73146b613'],3,0,3,1,,,
01d1c94999cd8a28c4aac5ab1e1793f95923bf62,Define __str__ for Statement subclasses,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 09:55:52-06:00,21600,2013-11-06 09:55:52-06:00,21600,True,False,['query.py'],['96f57caea953b593bfb2f235eb2b837e7540dc6d'],3,6,9,1,,,
4a779bef9a01a83650fcb6b5fa3f56014cf5c8c3,Better ResponseFuture __str/repr__,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 09:57:19-06:00,21600,2013-11-06 09:57:19-06:00,21600,True,False,['cluster.py'],['01d1c94999cd8a28c4aac5ab1e1793f95923bf62'],2,2,4,1,,,
4b55466ee2f8ba72f7ba8114fdfa87871381ac4c,Create conn pools in parallel when creating sesssions,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 11:04:48-06:00,21600,2013-11-06 11:04:48-06:00,21600,True,False,['cluster.py'],['4a779bef9a01a83650fcb6b5fa3f56014cf5c8c3'],1,5,6,1,1.0,1.0,0.0
e2604e8ac9c9e9c9913e52d7a105b91607f80540,Minor comment in asyncore.handle_read(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 11:25:47-06:00,21600,2013-11-06 11:25:47-06:00,21600,True,False,['asyncorereactor.py'],['4b55466ee2f8ba72f7ba8114fdfa87871381ac4c'],0,1,1,1,,,
854feba0049d0d338fe7933b15e9a6cbaedb9d4c,Expose LIBEV_ERROR in libevwrapper.c,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 14:27:50-06:00,21600,2013-11-06 14:27:50-06:00,21600,True,False,['libevwrapper.c'],['e2604e8ac9c9e9c9913e52d7a105b91607f80540'],0,1,1,1,0.0,1.0,1.0
791d8133685690698bcdad8bc7f2da15267a7910,Whitespace cleanup in util.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 14:28:20-06:00,21600,2013-11-06 14:28:20-06:00,21600,True,False,['util.py'],['854feba0049d0d338fe7933b15e9a6cbaedb9d4c'],1,6,7,1,,,
77f09e6f6c362c2841f1e7636fb6cff0d80a120a,Ensure reconnector runs after failed host setup,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 14:29:52-06:00,21600,2013-11-06 14:29:52-06:00,21600,True,False,['cluster.py'],['791d8133685690698bcdad8bc7f2da15267a7910'],19,24,43,1,1.0,1.0,0.3333333333333333
63c697d3b561bcf1b1e6a60aca61428d864c9b3f,Explicitly shutdown conn after prepared stmt failure,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 14:30:50-06:00,21600,2013-11-06 14:30:50-06:00,21600,True,False,['cluster.py'],['77f09e6f6c362c2841f1e7636fb6cff0d80a120a'],1,2,3,1,0.0,0.0,1.0
b3fd957ccd3fe67c080c466b465cbf4c047a47a8,"Use WeakValueDictionary for prepared statements

When nodes are added or come back up after being down,
all known prepared statements are re-prepared on them.
In order to avoid preparing statements that will never
be used again, we'll use a dictionary of weak references
to the statements so that once they are GC'ed, they are
removed from our cache.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 14:31:43-06:00,21600,2013-11-06 14:31:43-06:00,21600,True,False,['cluster.py'],['63c697d3b561bcf1b1e6a60aca61428d864c9b3f'],3,4,7,1,,,
05dfb46e8d14e8dc3abe6fb9a0c00fc02d67e308,Only log when host pool is actually removed,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 14:33:24-06:00,21600,2013-11-06 14:33:24-06:00,21600,True,False,['cluster.py'],['b3fd957ccd3fe67c080c466b465cbf4c047a47a8'],1,1,2,1,,,
e918b84edcca4c544a72f4b9573ca83a0169a292,Add is_pending() for libev IO watchers,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 15:03:56-06:00,21600,2013-11-06 15:03:56-06:00,21600,True,False,['libevwrapper.c'],['05dfb46e8d14e8dc3abe6fb9a0c00fc02d67e308'],0,6,6,1,1.0,1.0,1.0
232b74e7a312863545b0ef67ee4113a01ac56b64,"Libev performance, safety, and error handling improvements

This commit does several things:
 * check for LIBEV_ERROR flags on read and write notifications.
   (Typically socket.recv() or socket.send() will error correctly,
    but it's safer to also check for this flag in multithreaded
    environments.)
 * Use a separate lock for maniuplating the queue of pending
   messages to be sent
 * Notify the event loop of watcher changes more frequently in
   order to avoid waiting to execute pending events",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 15:12:17-06:00,21600,2013-11-06 15:12:17-06:00,21600,True,False,['libevreactor.py'],['e918b84edcca4c544a72f4b9573ca83a0169a292'],25,48,73,1,0.0,0.043478260869565216,0.043478260869565216
70329fe3b012b071559b96a7fe1a150474c2d5c6,Update unit tests for libev changes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 15:23:09-06:00,21600,2013-11-06 15:23:09-06:00,21600,True,False,['test_libevreactor.py'],['232b74e7a312863545b0ef67ee4113a01ac56b64'],31,26,57,1,0.0,0.0,0.0
9c766f9b658babe03a8a2a5b55b09880484433d8,"Specify version in install instructions

Earlier beta versions (eg 1.0.0-beta4) used a non-PEP426 compliant version
which happens to sort higher than the compliant version (eg 1.0.0b6),
so to ensure the correct version is installed, the version must
explicitly be specified.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 15:25:42-06:00,21600,2013-11-06 15:25:42-06:00,21600,True,False,['README.rst'],['70329fe3b012b071559b96a7fe1a150474c2d5c6'],1,1,2,1,,,
6ed86099ecb4844d01c5253cad6c1311fde82b81,Timeout schema agreement check queries,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-06 15:42:53-06:00,21600,2013-11-06 15:43:48-06:00,21600,True,False,"['cluster.py', 'test_control_connection.py']",['9c766f9b658babe03a8a2a5b55b09880484433d8'],3,11,14,2,0.0,0.0,1.0
8210bacac77c33cd6cfc7038e3a8a74f14789fea,Changed List column's default to be list and not set,Dvir Volk,dvir@everything.me,Dvir Volk,dvir@everything.me,2013-11-12 13:03:02+02:00,-7200,2013-11-12 13:03:02+02:00,-7200,True,False,['columns.py'],['022c03078fe218ed5e3c8861b81ecfa8daf2cb7c'],1,1,2,1,,,
30758a30ba2ddcdb4578a7cb3d77a9b263e5feb8,"Update changelog, bump to version 1.0.0b7",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-12 13:49:53-06:00,21600,2013-11-12 13:49:53-06:00,21600,True,False,"['CHANGELOG.rst', '__init__.py']",['6ed86099ecb4844d01c5253cad6c1311fde82b81'],1,62,63,2,,,
06263d5c264af1b56f9a774881297cf63d315810,Bump version to 1.0.0b7.post for post-release,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-12 13:52:01-06:00,21600,2013-11-12 13:52:01-06:00,21600,True,False,['__init__.py'],['30758a30ba2ddcdb4578a7cb3d77a9b263e5feb8'],1,1,2,1,,,
1ba840346df0cff9f1e112ca50b171617e8f5b4e,Remove version-specific install instructions from readme,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-12 13:59:19-06:00,21600,2013-11-12 13:59:19-06:00,21600,True,False,['README.rst'],['06263d5c264af1b56f9a774881297cf63d315810'],1,1,2,1,,,
778612e6ddcd79c2afe58d4f35a4ebab08555762,Fix changelog typos,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-12 15:31:50-06:00,21600,2013-11-12 15:31:50-06:00,21600,True,False,['CHANGELOG.rst'],['1ba840346df0cff9f1e112ca50b171617e8f5b4e'],8,9,17,1,,,
9ad6229c49e21af65580e70d90f35f765fc32223,Added an fake entry to the scheduled queue to prevent thread leak,Michael Penick,mpenick@godaddy.com,Michael Penick,mpenick@godaddy.com,2013-11-13 08:10:38-07:00,25200,2013-11-13 08:10:38-07:00,25200,True,False,['cluster.py'],['778612e6ddcd79c2afe58d4f35a4ebab08555762'],0,1,1,1,1.0,1.0,1.0
e473c007d374c1198c5dcb1669cd019f9fd5f3ad,"Sanitize column names for named_tuple_factory

Fixes PYTHON-31",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-13 12:26:37-06:00,21600,2013-11-13 12:33:10-06:00,21600,True,False,"['decoder.py', 'test_types.py']",['321a5196e1c30700169890dacfbf7163e82c12e3'],26,28,54,2,1.0,1.0,1.0
bad3866d11b11980acd2215152c06e8bb009f5da,s/checksum/digest/ in RetryPolicy docs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-15 12:50:12-06:00,21600,2013-11-15 12:50:12-06:00,21600,True,False,['policies.py'],['e473c007d374c1198c5dcb1669cd019f9fd5f3ad'],2,2,4,1,,,
380e739c81c023463d1d3d550ac95691c145f447,Not checking None result,Michael Penick,mpenick@godaddy.com,Michael Penick,mpenick@godaddy.com,2013-11-18 15:55:40-07:00,25200,2013-11-18 15:55:40-07:00,25200,True,False,['cluster.py'],['bad3866d11b11980acd2215152c06e8bb009f5da'],1,3,4,1,1.0,1.0,0.0
4d666384bb469e20fdbdeec148b212ed34e02115,"Correctly handle ignored hosts everywhere

Session.add_or_renew_pool returns None instead of a future
when a host is ignored.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-21 17:48:26-06:00,21600,2013-11-21 17:48:26-06:00,21600,True,False,['cluster.py'],['7f02b2489905390ef2d84afef72fb1ef2d74942b'],5,7,12,1,0.0,0.5,1.0
56c11961e66af7aff8df9fc9ec74a9fea323c169,Use Py_ssize_t for murmur3 key len,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-22 13:28:59-06:00,21600,2013-11-22 13:28:59-06:00,21600,True,False,['murmur3.c'],['4d666384bb469e20fdbdeec148b212ed34e02115'],1,2,3,1,,,
011f6258be550a81acfaca7ed6c6401ac9cedbd9,"libev C extension fixes from static analysis

I used the gcc-python-plugin's gcc-with-cpychecker tool as
described here:
http://gcc-python-plugin.readthedocs.org/en/latest/cpychecker.html#gcc-with-cpychecker

Note that the checker does still have some bugs, so it will raise errors
with the current code.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-22 13:32:46-06:00,21600,2013-11-22 13:32:46-06:00,21600,True,False,['libevwrapper.c'],['56c11961e66af7aff8df9fc9ec74a9fea323c169'],17,25,42,1,0.14285714285714285,0.0,0.8571428571428571
d6e36ab788ac96f8a23b069e7ac0243d4aaec026,Add options to benchmark scripts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-22 15:10:41-06:00,21600,2013-11-22 15:10:41-06:00,21600,True,False,['base.py'],['011f6258be550a81acfaca7ed6c6401ac9cedbd9'],5,62,67,1,0.0,1.0,1.0
6e42fd7bd93a2a7c59459ad3b6e7f9f8944bdf2a,Add multithreading support to benchmarks,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-22 16:01:32-06:00,21600,2013-11-22 16:01:32-06:00,21600,True,False,"['base.py', 'callback_full_pipeline.py', 'future_batches.py', 'future_full_pipeline.py', 'future_full_throttle.py', 'single_thread_callback_full_pipeline.py', 'single_thread_future_batches.py', 'single_thread_future_full_pipeline.py', 'single_thread_future_full_throttle.py', 'single_thread_sync.py', 'sync.py']",['d6e36ab788ac96f8a23b069e7ac0243d4aaec026'],134,234,368,11,0.9452054794520548,1.0,0.6575342465753424
b9f6817f03ec25361123907c282550298cb9430c,Less work while holding connection lock,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-22 17:25:48-06:00,21600,2013-11-22 17:25:48-06:00,21600,True,False,['pool.py'],['6e42fd7bd93a2a7c59459ad3b6e7f9f8944bdf2a'],7,7,14,1,,,
95537a7eb9b992c9e3f6648a18ad144561829e3b,Use separate lock for asyncore deque,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-22 17:31:23-06:00,21600,2013-11-22 17:31:23-06:00,21600,True,False,['asyncorereactor.py'],['b9f6817f03ec25361123907c282550298cb9430c'],4,9,13,1,0.0,0.2,0.8
f01df9ad48abcb04bc5b05f11c6fc9fce63acc92,Easy profiling of benchmarks,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-22 18:00:09-06:00,21600,2013-11-22 18:00:09-06:00,21600,True,False,"['base.py', 'callback_full_pipeline.py', 'future_batches.py', 'future_full_pipeline.py', 'future_full_throttle.py', 'sync.py']",['95537a7eb9b992c9e3f6648a18ad144561829e3b'],112,89,201,6,0.0,0.0,1.0
3c5501f127063ac29480317dfdf65fd82b837e63,remove asyncore DeprecationWarning,barvinograd,barvinograd@barvinograd.com,barvinograd,barvinograd@barvinograd.com,2013-11-23 20:32:29+02:00,-7200,2013-11-23 20:32:29+02:00,-7200,True,False,['asyncorereactor.py'],['f01df9ad48abcb04bc5b05f11c6fc9fce63acc92'],1,1,2,1,,,
a080aff3a73351d37126b14eef606061b445aa37,"Fixed a bug when NetworkTopologyStrategy is used.

Although the Cassandra documentation implies that the
`replication_factor` parameter would be ignored in this case its
presence will cause an error when creating a keyspace using
NetworkTopologyStrategy.",Kai Lautaportti,kai.lautaportti@gmail.com,Kai Lautaportti,kai.lautaportti@gmail.com,2013-06-07 19:18:07+03:00,-10800,2013-11-26 15:00:09+02:00,-7200,True,False,['management.py'],['8210bacac77c33cd6cfc7038e3a8a74f14789fea'],0,6,6,1,0.0,0.0,0.0
4b3edc03d07b3258a38ed070a6fc982b93d288ed,Test demonstrating regression in querying with dates,Kai Lautaportti,kai.lautaportti@gmail.com,Kai Lautaportti,kai.lautaportti@gmail.com,2013-11-26 16:48:14+02:00,-7200,2013-11-26 16:48:14+02:00,-7200,True,False,['test_model_io.py'],['a080aff3a73351d37126b14eef606061b445aa37'],0,31,31,1,1.0,1.0,1.0
225f09212b88fe07e4ce9564fcff682eb84b051c,removing double replication strategy fix,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-26 07:30:34-08:00,28800,2013-11-26 07:30:34-08:00,28800,True,False,['management.py'],['e8b0fc5258591e4ded814ad10ef14ec8c3a284e1'],6,0,6,1,1.0,1.0,1.0
cfc076749fd874b974ef6fac1d0508ab2ef41660,fixing polymorphic test,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-26 08:12:07-08:00,28800,2013-11-26 08:12:07-08:00,28800,True,False,['test_polymorphism.py'],['225f09212b88fe07e4ce9564fcff682eb84b051c'],2,2,4,1,,,
556a0d776b5f45767fbab63cd60e99aeebc7582d,fixing to_database behavior for functions,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-26 08:12:25-08:00,28800,2013-11-26 08:12:25-08:00,28800,True,False,"['functions.py', 'query.py']",['cfc076749fd874b974ef6fac1d0508ab2ef41660'],13,25,38,2,1.0,1.0,1.0
33023837d2d2f17e254c80c447d77f06869334e5,bumping version and updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-11-26 08:15:24-08:00,28800,2013-11-26 08:15:24-08:00,28800,True,False,"['changelog', 'VERSION']",['556a0d776b5f45767fbab63cd60e99aeebc7582d'],1,5,6,2,,,
e2d430da788c5a1c898fa130d74509fed25806f7,"Hold reference to prepared stmt while executing

Since we use a weak-reference dict for caching prepared
statements, we need to make sure at least one reference
is held during executing to avoid it being GC'ed.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-26 16:58:24-06:00,21600,2013-11-26 17:03:23-06:00,21600,True,False,['cluster.py'],['7fadddcf29658e23864334ebea5139cabb393adc'],5,15,20,1,0.1,0.1,0.5
fda2f31ea67a1ef4dda08d407c11841a4e93ab07,"Fix bad on_remove call on sessions, listeners",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-26 16:59:52-06:00,21600,2013-11-26 17:03:23-06:00,21600,True,False,['cluster.py'],['e2d430da788c5a1c898fa130d74509fed25806f7'],2,2,4,1,,,
69337d87fb28deb47e6247110c26c193ced5bcb2,Reference prepared stmt when exec'ing bound stmt,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-26 17:56:39-06:00,21600,2013-11-26 17:56:39-06:00,21600,True,False,['cluster.py'],['fda2f31ea67a1ef4dda08d407c11841a4e93ab07'],1,1,2,1,,,
d5265bd8b4a6435913fc06c73450773f01d90914,"Don't check for schema agreement when shutdown

This avoids some unneeded noise in debug logs when shutting down a
Cluster.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-11-26 17:57:09-06:00,21600,2013-11-26 17:57:09-06:00,21600,True,False,['cluster.py'],['69337d87fb28deb47e6247110c26c193ced5bcb2'],2,4,6,1,0.0,0.0,1.0
60a866c1c6f3a76b58877091912546d96f061a37,"fix ""no viable alternative at input"" on map type

encode key and value of map data type with native data types' encoders",Yinyin L,yinyinl@gmail.com,Yinyin L,yinyinl@gmail.com,2013-12-01 23:19:19+08:00,-28800,2013-12-01 23:19:19+08:00,-28800,True,False,['decoder.py'],['d5265bd8b4a6435913fc06c73450773f01d90914'],1,25,26,1,1.0,1.0,1.0
9268e177935a187b7fcf8338fb628f1aa70b4d4d,"fix ""no viable alternative at input"" issue on list type

use native type encoders to encode elements of list",Yinyin L,yinyinl@gmail.com,Yinyin L,yinyinl@gmail.com,2013-12-01 23:34:30+08:00,-28800,2013-12-01 23:34:30+08:00,-28800,True,False,['decoder.py'],['60a866c1c6f3a76b58877091912546d96f061a37'],1,1,2,1,,,
d315b0f1f743ed7e7ff4e86a2bdff2a415a4c523,validate Token and pk__token filter parameters,Russell Haering,russell.haering@rackspace.com,Russell Haering,russell.haering@rackspace.com,2013-12-01 18:33:49-08:00,28800,2013-12-01 18:33:49-08:00,28800,True,False,['query.py'],['33023837d2d2f17e254c80c447d77f06869334e5'],0,11,11,1,0.0,0.0,0.0
2a1cb90c9a5077b9617f92e4b67fdd3ab9fc5373,update validation of Token use at query-execution time,Russell Haering,russell.haering@rackspace.com,Russell Haering,russell.haering@rackspace.com,2013-12-01 19:05:09-08:00,28800,2013-12-01 19:39:54-08:00,28800,True,False,['query.py'],['d315b0f1f743ed7e7ff4e86a2bdff2a415a4c523'],5,3,8,1,0.0,1.0,0.0
5a5e7ef5cdc1fb09da29bbe597ccf04deb0fc898,pass partition columns to Token for use serializing values,Russell Haering,russell.haering@rackspace.com,Russell Haering,russell.haering@rackspace.com,2013-12-01 19:40:19-08:00,28800,2013-12-01 19:40:19-08:00,28800,True,False,['query.py'],['2a1cb90c9a5077b9617f92e4b67fdd3ab9fc5373'],0,1,1,1,0.0,0.0,0.0
a597fa5b2f0038f1cda54f8018afab1db7ad6b63,verify SELECT statement generation with token() works now,Russell Haering,russell.haering@rackspace.com,Russell Haering,russell.haering@rackspace.com,2013-12-02 10:23:55-08:00,28800,2013-12-02 10:23:55-08:00,28800,True,False,['test_queryoperators.py'],['5a5e7ef5cdc1fb09da29bbe597ccf04deb0fc898'],0,4,4,1,0.0,1.0,1.0
f54c3f3613333d20fa03b9b61b96399e9485a992,add tests to verify Token and pk__token validation,Russell Haering,russell.haering@rackspace.com,Russell Haering,russell.haering@rackspace.com,2013-12-02 10:25:34-08:00,28800,2013-12-02 10:25:34-08:00,28800,True,False,['test_queryoperators.py'],['a597fa5b2f0038f1cda54f8018afab1db7ad6b63'],0,10,10,1,0.0,1.0,1.0
ba9a0cadc1bea558d1b72753ecfd65eb44f124cd,"Use timeouts on all Control Connection queries

Fixes PYTHON-34",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-04 13:43:49-06:00,21600,2013-12-04 13:47:15-06:00,21600,True,False,"['cluster.py', 'test_control_connection.py']",['d5265bd8b4a6435913fc06c73450773f01d90914'],9,47,56,2,0.7727272727272727,0.9090909090909091,0.4090909090909091
86249b518d6afd2e4c5f17ab97a73dc69f47aee8,Add timeout parameter to Session.execute(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-04 14:01:34-06:00,21600,2013-12-04 14:01:34-06:00,21600,True,False,['cluster.py'],['ba9a0cadc1bea558d1b72753ecfd65eb44f124cd'],2,2,4,1,,,
5fa4ba4ead7dc2e2b7440a23fad1e1bc67c6557d,adding test around token values,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-12-05 07:41:41-08:00,28800,2013-12-05 07:41:41-08:00,28800,True,False,['test_queryoperators.py'],['33023837d2d2f17e254c80c447d77f06869334e5'],0,35,35,1,1.0,1.0,1.0
bb91d0be40fe75cb1ae01ec5a17839bebc5c48cb,"Add default timeout to Session

For PYTHON-35",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-05 13:21:37-06:00,21600,2013-12-05 13:21:37-06:00,21600,True,False,"['cluster.py', 'test_metrics.py']",['86249b518d6afd2e4c5f17ab97a73dc69f47aee8'],14,43,57,2,0.0,0.0,0.4
6f5157cb30920d694a866bcb20cbc96b31d284ff,"Add null logging handler to cassandra package

This prevents spurious warnings like 'No handlers could be found for
logger ""cassandra.cluster""'.  This will not affect normal logging.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-05 15:34:08-06:00,21600,2013-12-05 15:34:08-06:00,21600,True,False,['__init__.py'],['bb91d0be40fe75cb1ae01ec5a17839bebc5c48cb'],0,11,11,1,1.0,1.0,1.0
7be4dbde4e412a183df1dec7d126e8394b46d36b,encode inner data type of collection with cql_encode_builtin_types(),Yinyin L,yinyinl@gmail.com,Yinyin L,yinyinl@gmail.com,2013-12-06 23:10:51+08:00,-28800,2013-12-06 23:10:51+08:00,-28800,True,False,['decoder.py'],['9268e177935a187b7fcf8338fb628f1aa70b4d4d'],13,4,17,1,0.0,0.0,0.0
b6493f4cc97183e1e3c8660e6400c3ab45d0c42f,rename generic encoding function to cql_encode_all_types(),Yinyin L,yinyinl@gmail.com,Yinyin L,yinyinl@gmail.com,2013-12-06 23:20:55+08:00,-28800,2013-12-06 23:20:55+08:00,-28800,True,False,['decoder.py'],['7be4dbde4e412a183df1dec7d126e8394b46d36b'],5,5,10,1,,,
21dfed31335dd53070ed230d11b580988d1c51e7,Consolidate _child_policy and child_policy,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-09 19:16:43-06:00,21600,2013-12-09 19:16:43-06:00,21600,True,False,['policies.py'],['6f5157cb30920d694a866bcb20cbc96b31d284ff'],8,8,16,1,,,
2951ba35de1fc7213121a9b45b7ff679d543c5d3,"Use CL.ONE explicitly when interacting with the system keyspace

The system keyspace uses  ""LocalStrategy"" for replication so it needs to
be accessed with CL.ONE. If the default consistency level is set to
something else all management commands which rely on introspecting the
system keyspace will fail.",Kai Lautaportti,kai.lautaportti@gmail.com,Kai Lautaportti,kai.lautaportti@gmail.com,2013-11-28 14:26:46+02:00,-7200,2013-12-10 10:36:11+02:00,-7200,True,False,"['management.py', 'test_connection_pool.py', 'test_management.py']",['3c6020ebcc055d553987804a5662c0c8ebd27198'],8,14,22,3,0.3333333333333333,0.3333333333333333,1.0
380eeeb8cabce3cd817ffa775d58c596b0e53c81,Make get_table_settings use CL.ONE explicitly,Kai Lautaportti,kai.lautaportti@gmail.com,Kai Lautaportti,kai.lautaportti@gmail.com,2013-12-10 11:57:24+02:00,-7200,2013-12-10 11:57:24+02:00,-7200,True,False,"['management.py', 'query.py', 'setup.py']",['2951ba35de1fc7213121a9b45b7ff679d543c5d3'],8,9,17,3,1.0,1.0,1.0
5b3d0c6b094c6934b1dfaa55ead5956defd7c542,s/Note/Important/ for Session.timeout docstring,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-10 16:57:49-06:00,21600,2013-12-10 16:57:49-06:00,21600,True,False,['cluster.py'],['774070cb191222f9fb15438efebd5069e3b6f431'],1,1,2,1,,,
847e2b94b568b30d31acb1d89564806778748fc0,remove unused cql-collection-types-in-python set,Yinyin L,yinyinl@gmail.com,Yinyin L,yinyinl@gmail.com,2013-12-12 00:00:57+08:00,-28800,2013-12-12 00:00:57+08:00,-28800,True,False,['decoder.py'],['b6493f4cc97183e1e3c8660e6400c3ab45d0c42f'],8,0,8,1,,,
c59c4d8662114819b209739c09d3580c0e4cdf16,"add encoder mapping for OrderedDict

OrderedDict is the resulted object type when SELECT-ing map data object.",Yinyin L,yinyinl@gmail.com,Yinyin L,yinyinl@gmail.com,2013-12-12 00:23:28+08:00,-28800,2013-12-12 00:23:28+08:00,-28800,True,False,['decoder.py'],['5b3d0c6b094c6934b1dfaa55ead5956defd7c542'],0,1,1,1,,,
10c516138e6e3c4560889a1d87a4400954c63c2a,execute_on_exception in batches,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-11 10:41:46-08:00,28800,2013-12-11 10:41:46-08:00,28800,True,False,"['query.py', 'test_batch_query.py']",['3c6020ebcc055d553987804a5662c0c8ebd27198'],7,50,57,2,1.0,1.0,0.9629629629629629
3d351e475d28f927b0c25f6806da38512d7de488,fixed weird bug in tests which allowed them to pass but for the wrong reasons,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-11 14:59:39-08:00,28800,2013-12-11 14:59:39-08:00,28800,True,False,['test_batch_query.py'],['10c516138e6e3c4560889a1d87a4400954c63c2a'],4,4,8,1,,,
70e55fd0e66016889461edf6ea26a3dbc733648c,added inline explanation of why the 2 new batch exception tests should pass,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-11 15:13:46-08:00,28800,2013-12-11 15:13:46-08:00,28800,True,False,['test_batch_query.py'],['3d351e475d28f927b0c25f6806da38512d7de488'],0,3,3,1,,,
448d861c7bcb42a1c2e5026c38417c954d266b28,updated batch docs,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-11 15:25:06-08:00,28800,2013-12-11 15:25:06-08:00,28800,True,False,['queryset.rst'],['70e55fd0e66016889461edf6ea26a3dbc733648c'],0,14,14,1,,,
a45d867b4f7010d190afda555ce45ec283a10a7c,log exception on _create_connection failure,Konstantin Podshumok,kpp.live@gmail.com,Konstantin Podshumok,kpp.live@gmail.com,2013-12-12 11:06:29+03:00,-10800,2013-12-12 11:06:29+03:00,-10800,True,False,['connection.py'],['67dc09f4324832d1551ebe7f87739d4132f93314'],3,3,6,1,,,
57741b1f7df2cdb58cb2b181c06736ecf562bf75,fix ttl in update statement,Roey Berman,roey.berman@gmail.com,Roey Berman,roey@everything.me,2013-12-12 12:11:45+02:00,-7200,2013-12-12 12:11:45+02:00,-7200,True,False,['statements.py'],['67dc09f4324832d1551ebe7f87739d4132f93314'],3,4,7,1,,,
29912bb944cec7ac48e44cd8597f354b2276d8b2,test verifying the TTL syntax is valid,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-12 10:53:04-08:00,28800,2013-12-12 10:53:04-08:00,28800,True,False,['test_ttl.py'],['57741b1f7df2cdb58cb2b181c06736ecf562bf75'],0,6,6,1,1.0,1.0,1.0
2b8a811bd77c6a79e8c4cf6529fc67731bd0b26b,test verifying the TTL syntax is valid,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-12 10:53:04-08:00,28800,2013-12-12 10:53:28-08:00,28800,True,False,['test_ttl.py'],['67dc09f4324832d1551ebe7f87739d4132f93314'],0,6,6,1,1.0,1.0,1.0
25bd8af1d35cb3dc9c6d1c030592eef5714b7cf1,fixed issue with setting a list to an empty list,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-12 13:46:52-08:00,28800,2013-12-12 13:46:52-08:00,28800,True,False,"['statements.py', 'test_container_columns.py']",['5ad43c3506f552723105ed24001159656ea3144b'],13,33,46,2,1.0,1.0,1.0
7ec61e4d1ab7ec8d4fab1a4b0f60fcd6389170a8,don't throw away a host that is in the contact points list,Russ Bradberry,rbradberry@gmail.com,Russ Bradberry,rbradberry@gmail.com,2013-12-12 16:48:10-05:00,18000,2013-12-12 16:48:10-05:00,18000,True,False,['cluster.py'],['d68d8629a2e1ed83db9a3e24753f8445405e2339'],1,2,3,1,0.0,0.0,1.0
934d8e7edf77678e4d9be435e80c096462061295,add WhiteListRoundRobinPolicy,Russ Bradberry,rbradberry@gmail.com,Russ Bradberry,rbradberry@gmail.com,2013-12-12 16:48:52-05:00,18000,2013-12-12 16:58:14-05:00,18000,True,False,['policies.py'],['7ec61e4d1ab7ec8d4fab1a4b0f60fcd6389170a8'],0,47,47,1,1.0,1.0,0.625
5c425e819333a89cfd1f31620b691d60017fedda,disallow saving None inside set and list,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-12 15:19:53-08:00,28800,2013-12-12 15:19:53-08:00,28800,True,False,"['columns.py', 'test_container_columns.py']",['25bd8af1d35cb3dc9c6d1c030592eef5714b7cf1'],0,16,16,2,1.0,0.8181818181818182,1.0
daa4772e45cd844107ef41f151495cd0aa4d8ea4,"Fixed #90, putting None inside containers now throws a validation error",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-12 15:23:00-08:00,28800,2013-12-12 15:23:00-08:00,28800,True,False,['test_container_columns.py'],['5c425e819333a89cfd1f31620b691d60017fedda'],0,9,9,1,1.0,1.0,1.0
1791544946a3465a5f742ae5841d1b1f73954003,ensure we aren't trying to include polymorphic keys when we blah.objects.delete,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-12 16:00:39-08:00,28800,2013-12-12 16:00:39-08:00,28800,True,False,['test_polymorphism.py'],['daa4772e45cd844107ef41f151495cd0aa4d8ea4'],0,17,17,1,1.0,1.0,1.0
adcfbb9b13f435841b215ac8e87a59fd11c74217,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-12 16:56:30-08:00,28800,2013-12-12 16:56:30-08:00,28800,True,False,['VERSION'],['1791544946a3465a5f742ae5841d1b1f73954003'],1,1,2,1,,,
4e8244022bcf0d3e3012ba8ea9a514a19a66f457,fixed version,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-12 17:02:11-08:00,28800,2013-12-12 17:02:11-08:00,28800,True,False,['setup.py'],['adcfbb9b13f435841b215ac8e87a59fd11c74217'],1,1,2,1,,,
caeab27405b0459be29ba16be52e79541039e49d,"Handle setting same keyspace twice

Before this fix, the second ""USE system"" query would hang until an
OperationTimedOut exception was raised.

Fixes PYTHON-38",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-13 16:49:18-06:00,21600,2013-12-13 16:51:27-06:00,21600,True,False,"['cluster.py', 'connection.py', 'pool.py', 'test_cluster.py']",['619767cf0647add139fc52d176cdafac2abacdc4'],0,15,15,4,1.0,1.0,0.4166666666666667
5165bb078c3fbd51dbe112e25a7c5c7974800397,"Fix logic determining if compaction options need syncing

The compaction_strategy_options as received from the
`system.schema_columnfamilies` table are all string valued and
comparison to typed values (ints, floats) as defined in models results
in sync_table() issuning ALTER TABLE statements redundantly even if
there were no changes to compaction options.

This patch casts the values defined in models to strings to ensure they
compare equal as needed.

Additionally, this patch normalizes handling of the `min_threshold` and
`max_threshold` options for SizeTieredCompactionStrategy which exist
outside the `compaction_strategy_options` mapping and have different
names in the `system.schema_columnfamilies` table compared to the CQL
options.

A typo in the `BaseModel.__compaction_tombstone_threshold__` option is
also fixed.",Kai Lautaportti,kai.lautaportti@gmail.com,Kai Lautaportti,kai.lautaportti@gmail.com,2013-12-14 20:23:21+02:00,-7200,2013-12-14 20:23:21+02:00,-7200,True,False,"['management.py', 'models.py', 'test_compaction_settings.py']",['4e8244022bcf0d3e3012ba8ea9a514a19a66f457'],8,63,71,3,0.84375,1.0,1.0
2810fead112e32f9082aeafee92c10dec441b296,bugfix: connection.setup - cast port to int,Roey Berman,roey.berman@gmail.com,Roey Berman,roey@everything.me,2013-12-16 15:04:57+02:00,-7200,2013-12-16 15:06:28+02:00,-7200,True,False,"['connection.py', 'test_connection_setup.py']",['4e8244022bcf0d3e3012ba8ea9a514a19a66f457'],2,27,29,2,0.7142857142857143,0.7142857142857143,0.7142857142857143
e467d005a83c485de40dc174332ab2601cf1b0f0,"Add support for ConsistencyLevel LOCAL_ONE

Fixes #65",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-17 12:31:28-06:00,21600,2013-12-17 12:31:28-06:00,21600,True,False,['__init__.py'],['caeab27405b0459be29ba16be52e79541039e49d'],2,10,12,1,,,
8c51776bdf9fc43200bc7e9f78941990699f134b,Rearrange integration tests with new consistency test,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-11-05 17:16:53-06:00,21600,2013-12-17 12:52:35-06:00,21600,True,False,"['__init__.py', 'test_consistency.py', 'utils.py', '__init__.py', 'test_cluster.py', 'test_connection.py', 'test_factories.py', 'test_metadata.py', 'test_metrics.py', 'test_prepared_statements.py', 'test_query.py', 'test_types.py']",['e467d005a83c485de40dc174332ab2601cf1b0f0'],0,496,496,12,0.20652173913043478,0.20652173913043478,0.9130434782608695
d37b83bd0a09d2e7e0bcb7adac93c25af3564772,Commit pending changes to rebase,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-06 17:29:02-06:00,21600,2013-12-17 12:52:35-06:00,21600,True,False,['test_consistency.py'],['8c51776bdf9fc43200bc7e9f78941990699f134b'],3,5,8,1,0.0,0.0,1.0
fb8aeada275a2a9e878d251487a6fc4ff8e6db6e,ConsistencyTests now work. Added SchemaTests as well.,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-12 19:25:46-06:00,21600,2013-12-17 12:52:35-06:00,21600,True,False,"['metadata.py', '__init__.py', 'test_consistency.py', 'test_schema.py', 'utils.py']",['d37b83bd0a09d2e7e0bcb7adac93c25af3564772'],46,106,152,5,0.19148936170212766,0.7872340425531915,1.0
c41c9f17de8a46e18da00e00f768515168d60c4c,Patch tests to work with recently patched code,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-12 20:03:39-06:00,21600,2013-12-17 12:52:35-06:00,21600,True,False,"['test_metadata.py', 'test_metadata.py', 'test_policies.py']",['fb8aeada275a2a9e878d251487a6fc4ff8e6db6e'],8,8,16,3,,,
9c9ebce1eca9a947fc711cacaf9bb7169dc63140,PyCharm auto-code removal,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-12 20:04:59-06:00,21600,2013-12-17 12:52:35-06:00,21600,True,False,['__init__.py'],['c41c9f17de8a46e18da00e00f768515168d60c4c'],1,0,1,1,,,
98584beb3cabe8f3b1d7194755a4ab98bb127d28,Added policy checks to avoid unexpected exceptions.,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-16 13:39:27-06:00,21600,2013-12-17 12:52:35-06:00,21600,True,False,['cluster.py'],['9c9ebce1eca9a947fc711cacaf9bb7169dc63140'],0,9,9,1,,,
13818a02c5757eb5148b1ea7f00017df4f874149,Add the rest of the CL tests.,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-16 13:39:59-06:00,21600,2013-12-17 12:52:35-06:00,21600,True,False,['test_consistency.py'],['98584beb3cabe8f3b1d7194755a4ab98bb127d28'],1,273,274,1,0.05555555555555555,0.05555555555555555,0.7129629629629629
ed4636b6494eade54b295e79676a4743c93a092e,Modify create_schema to work with NTS.,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-16 13:40:33-06:00,21600,2013-12-17 12:52:35-06:00,21600,True,False,['utils.py'],['13818a02c5757eb5148b1ea7f00017df4f874149'],5,12,17,1,0.0,0.0,0.0
bf0d8a286137b6ac9278df36b5d622683832ee92,Correctly handle replica set->list conversion,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-17 12:46:56-06:00,21600,2013-12-17 12:52:35-06:00,21600,True,False,['metadata.py'],['ed4636b6494eade54b295e79676a4743c93a092e'],5,7,12,1,0.0,0.0,0.0
dda950196b1e88624622304f07c2b5528bf0fef6,Fix unit test breakage from #63,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-17 13:15:36-06:00,21600,2013-12-17 13:15:36-06:00,21600,True,False,['test_control_connection.py'],['e467d005a83c485de40dc174332ab2601cf1b0f0'],0,1,1,1,,,
ce6f9dfe6799d0f99ca55d287445431442be7d88,Polish policy instance error messages,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-17 13:36:55-06:00,21600,2013-12-17 13:36:55-06:00,21600,True,False,['cluster.py'],['bf0d8a286137b6ac9278df36b5d622683832ee92'],3,3,6,1,,,
0f528f69526b94a1a778a32fc22200bb16ce2509,"Use same conn to check schema agreement

Before doing this, the control connection would be used to check
for schema agreement.  The schema check could occasionally complete
before the node that the control connection was open to had even
registered the schema change.  By re-using the connection that the
schema change was performed on, we avoid this race condition.

Fixes PYTHON-33",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-17 14:59:24-06:00,21600,2013-12-17 15:02:18-06:00,21600,True,False,['cluster.py'],['dda950196b1e88624622304f07c2b5528bf0fef6'],1,2,3,1,1.0,1.0,0.0
5d2d738b5bfc8c880fb1d351970ce08494445709,"use nose's fail, instead of raising Exceptions in utils.py",Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-17 15:56:02-06:00,21600,2013-12-17 15:56:02-06:00,21600,True,False,"['test_consistency.py', 'utils.py']",['ce6f9dfe6799d0f99ca55d287445431442be7d88'],46,47,93,2,1.0,1.0,0.0
caf49c92aadcfb7fc5d56bbcfd4e7264cc64087c,Use defaultdict(int) instead of checking and assigning,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-17 16:03:58-06:00,21600,2013-12-17 16:03:58-06:00,21600,True,False,['utils.py'],['5d2d738b5bfc8c880fb1d351970ce08494445709'],5,3,8,1,0.0,0.0,0.0
ae94856b3b5ad704656f9c4d50ecb98e22f58939,Incorporated feedback,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-17 16:11:19-06:00,21600,2013-12-17 16:11:19-06:00,21600,True,False,['utils.py'],['caf49c92aadcfb7fc5d56bbcfd4e7264cc64087c'],7,11,18,1,,1.0,
02fe5792a8d8798b80a8a6f8da1fdf1365c691c8,"Use select backend for libev

It appears that the epoll backend may have been causing the hanging
write requests at the connection level, which appears to be the last
major cause of PYTHON-27, PYTHON-29, and PYTHON-32.  For now, we will
hardcode select as the libev backend; this would be the best choice in
almost all circumstances, in any case.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-18 11:05:03-06:00,21600,2013-12-18 11:05:03-06:00,21600,True,False,['libevwrapper.c'],['0f528f69526b94a1a778a32fc22200bb16ce2509'],1,6,7,1,,,
2766377dfa9c66212c23c3d043c0d9ec6a3380f8,"Preserve milli-precision in non-prepared datetimes

When a datetime was used for a 'timestamp' value in a non-prepared
statement, all sub-second precision was lost.  After this change,
millisecond level precision will be kept.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-18 12:43:53-06:00,21600,2013-12-18 12:43:53-06:00,21600,True,False,"['decoder.py', 'test_types.py']",['02fe5792a8d8798b80a8a6f8da1fdf1365c691c8'],2,4,6,2,1.0,1.0,1.0
d2786f8f791c35fc4a0e3cb9e6cad61a7d7fa137,throwing timestamp options everywhere,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-18 12:19:44-08:00,28800,2013-12-18 12:19:44-08:00,28800,True,False,"['models.py', 'query.py', 'statements.py']",['4e8244022bcf0d3e3012ba8ea9a514a19a66f457'],6,38,44,3,0.2727272727272727,0.45454545454545453,0.45454545454545453
284bb378ff72b09fe5c38fa6a5fa8639cf4819ec,Re-implement previous replica sorting with vnode support,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-18 14:24:27-06:00,21600,2013-12-18 14:24:27-06:00,21600,True,False,['metadata.py'],['ae94856b3b5ad704656f9c4d50ecb98e22f58939'],8,8,16,1,1.0,1.0,0.0
75e63d8a95aa3b9a8ac3a75ac19e2d211448c2fe,Create the CoordinatorStats class,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-18 14:24:47-06:00,21600,2013-12-18 14:24:47-06:00,21600,True,False,"['test_consistency.py', 'utils.py']",['284bb378ff72b09fe5c38fa6a5fa8639cf4819ec'],153,162,315,2,0.2,0.2,0.2
e26da843cc46bb9f58d163f3d3bee90bbb74aa20,Print more in-depth stacktraces,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-18 16:12:38-06:00,21600,2013-12-18 16:12:38-06:00,21600,True,False,['test_consistency.py'],['75e63d8a95aa3b9a8ac3a75ac19e2d211448c2fe'],4,5,9,1,,,
9209bef19edb4eb4e591286b8fa17f7235cc733e,optimize/remove existing bug comments,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-18 16:12:56-06:00,21600,2013-12-18 16:12:56-06:00,21600,True,False,"['test_consistency.py', 'utils.py']",['e26da843cc46bb9f58d163f3d3bee90bbb74aa20'],10,9,19,2,1.0,1.0,0.0
5a64fa2b672fd180e0941aa59362a2ff6dea4aba,Remove last PYTHON-38 workaround,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2013-12-18 16:27:57-06:00,21600,2013-12-18 16:27:57-06:00,21600,True,False,['utils.py'],['c4e879f13ba2557371b86ab720cab2c01713490c'],2,1,3,1,1.0,1.0,0.0
81131ac2af2ab767cbe818f4f41eb7cda34a6423,"added sure library, basic test setup",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-18 16:00:44-08:00,28800,2013-12-18 16:00:44-08:00,28800,True,False,"['statements.py', 'test_timestamp.py', 'requirements.txt']",['d2786f8f791c35fc4a0e3cb9e6cad61a7d7fa137'],0,55,55,3,1.0,0.35,1.0
9640b1c02e99e3ee045a9416e3aba8866d1452a6,better class structure for the billions of tests i'm about to write,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-18 16:15:33-08:00,28800,2013-12-18 16:15:33-08:00,28800,True,False,"['models.py', 'query.py', 'test_timestamp.py']",['81131ac2af2ab767cbe818f4f41eb7cda34a6423'],9,28,37,3,0.875,1.0,1.0
a4c439af10439bea496fc52cf1dadad9de0e713d,ensure we're only operating on a copy of the instance,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-18 16:18:29-08:00,28800,2013-12-18 16:18:29-08:00,28800,True,False,['models.py'],['9640b1c02e99e3ee045a9416e3aba8866d1452a6'],1,4,5,1,1.0,1.0,0.0
74e55366d5ac1bc7ee27316da35fdffba4edaeed,tracking down issues with missing timestamp values,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-18 16:29:41-08:00,28800,2013-12-18 16:29:41-08:00,28800,True,False,"['models.py', 'query.py', 'test_timestamp.py']",['a4c439af10439bea496fc52cf1dadad9de0e713d'],2,10,12,3,0.6666666666666666,0.8333333333333334,1.0
67ccf4ce69eb53ef1d350d17141c0ee6ba21de8f,ensuring we store the timestamp on the insert statement,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-18 16:30:42-08:00,28800,2013-12-18 16:30:42-08:00,28800,True,False,['statements.py'],['74e55366d5ac1bc7ee27316da35fdffba4edaeed'],1,2,3,1,1.0,1.0,0.0
3ecad5814a8d14b7886f5f29b8d93d6a434f0bbe,assignment statement saves the timestamp,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-18 16:32:50-08:00,28800,2013-12-18 16:32:50-08:00,28800,True,False,['statements.py'],['67ccf4ce69eb53ef1d350d17141c0ee6ba21de8f'],0,1,1,1,0.0,1.0,0.0
826b5b78660e472e91cfe848b51e677c1d0e4ccb,standard insert seems to work with custom timestamp,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-18 16:46:13-08:00,28800,2013-12-18 16:46:13-08:00,28800,True,False,['statements.py'],['3ecad5814a8d14b7886f5f29b8d93d6a434f0bbe'],8,15,23,1,1.0,1.0,1.0
3f52742374930c710362dc5d5ee5226569aa15e9,standardizing on _timestamp across the board,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-18 17:18:32-08:00,28800,2013-12-18 17:18:32-08:00,28800,True,False,"['models.py', 'statements.py', 'test_timestamp.py', 'test_ttl.py']",['826b5b78660e472e91cfe848b51e677c1d0e4ccb'],4,28,32,4,1.0,1.0,1.0
44baa39e54c761b60daa3c3b7312d4b1dd86e4fd,"fixed deprecated calls, it seems that timestamp is working but broke batch",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-18 17:38:46-08:00,28800,2013-12-18 17:38:46-08:00,28800,True,False,"['query.py', 'statements.py', 'test_batch_query.py', 'test_timestamp.py']",['3f52742374930c710362dc5d5ee5226569aa15e9'],11,17,28,4,1.0,0.0,1.0
2d62e523f1ea638730d4153f0406e53d0f97f55a,working to fix batches,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-18 17:51:51-08:00,28800,2013-12-18 17:51:51-08:00,28800,True,False,['test_batch_query.py'],['44baa39e54c761b60daa3c3b7312d4b1dd86e4fd'],1,17,18,1,1.0,1.0,1.0
5407f41e951a4a34c483170bf6935fc9b38bdc1a,fixed brokenness...,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-18 17:58:28-08:00,28800,2013-12-18 17:58:28-08:00,28800,True,False,"['models.py', 'test_batch_query.py']",['2d62e523f1ea638730d4153f0406e53d0f97f55a'],6,4,10,2,0.0,0.0,0.6
b090b555f519c89a52e10519f519fe07adcb9101,"Add explicit support for varchar

Fixes PYTHON-40",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-19 10:41:27-06:00,21600,2013-12-19 10:41:27-06:00,21600,True,False,"['cqltypes.py', 'test_types.py']",['2766377dfa9c66212c23c3d043c0d9ec6a3380f8'],6,13,19,2,0.0,1.0,1.0
55cbca4127c396944093219276dc99226be69d1b,delete is pushing timestamp in when it's specified,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-19 12:42:29-08:00,28800,2013-12-19 12:42:29-08:00,28800,True,False,"['models.py', 'query.py', 'statements.py', 'test_timestamp.py']",['5407f41e951a4a34c483170bf6935fc9b38bdc1a'],5,36,41,4,1.0,1.0,1.0
c393d433c1c766b0f2bb2905acd40a7272616d9f,fixed timezone issue.  python must be on same TZ as cassandra when using timedelta and .timestamp,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-19 15:50:42-08:00,28800,2013-12-19 15:50:42-08:00,28800,True,False,"['statements.py', 'test_timestamp.py']",['55cbca4127c396944093219276dc99226be69d1b'],7,6,13,2,,,
a327b462dd9308c01e7ca524780330d90165d6d7,updated changelog,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-19 16:25:50-08:00,28800,2013-12-19 16:25:50-08:00,28800,True,False,"['changelog', 'test_timestamp.py']",['c393d433c1c766b0f2bb2905acd40a7272616d9f'],2,12,14,2,,,
817e386f35c0ea69b9f4e6d99de17a42d7a3a1c5,changelog,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-19 16:26:06-08:00,28800,2013-12-19 16:26:06-08:00,28800,True,False,['changelog'],['a327b462dd9308c01e7ca524780330d90165d6d7'],1,1,2,1,,,
6cb5a6caa3985aa3ff2ae437ad788c5b7213d5f4,fixed batch queries,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-19 17:26:08-08:00,28800,2013-12-19 17:26:08-08:00,28800,True,False,"['changelog', 'query.py', 'test_timestamp.py']",['817e386f35c0ea69b9f4e6d99de17a42d7a3a1c5'],4,20,24,3,0.4,0.0,1.0
97b439bf9507c3f072b1b5a00f41d24102ae33fb,timestamp working in batch mode,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-20 14:37:45-08:00,28800,2013-12-20 14:37:45-08:00,28800,True,False,['test_timestamp.py'],['6cb5a6caa3985aa3ff2ae437ad788c5b7213d5f4'],1,5,6,1,1.0,1.0,1.0
ee4f9af63400faa0753d67b23ec77f9f96316d5e,use a regex instead of simple text match for better error catching,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-20 15:38:46-08:00,28800,2013-12-20 15:38:46-08:00,28800,True,False,['test_timestamp.py'],['97b439bf9507c3f072b1b5a00f41d24102ae33fb'],1,1,2,1,,,
ea203929a4cdcdf6ec47f7d8204ab29da4e3585f,more testing around our query,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-20 15:41:52-08:00,28800,2013-12-20 15:41:52-08:00,28800,True,False,['test_timestamp.py'],['ee4f9af63400faa0753d67b23ec77f9f96316d5e'],1,5,6,1,1.0,1.0,1.0
be20a9a9f03d7b6e80ead12a0bd423d26162ff12,checked batch updates for timestamp,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-20 15:57:19-08:00,28800,2013-12-20 15:57:19-08:00,28800,True,False,['test_timestamp.py'],['ea203929a4cdcdf6ec47f7d8204ab29da4e3585f'],1,9,10,1,1.0,1.0,1.0
ba22b4c9b62618f83e952b0bf60615b8f8dba426,blind deletes function properly,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-20 16:26:25-08:00,28800,2013-12-20 16:26:25-08:00,28800,True,False,"['query.py', 'test_timestamp.py']",['be20a9a9f03d7b6e80ead12a0bd423d26162ff12'],0,23,23,2,1.0,1.0,1.0
c0eb900ede9e6859e888fe137534834b63740e04,"updated docs with timestamp information, test that timestamps in the past work properly",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2013-12-20 16:38:27-08:00,28800,2013-12-20 16:38:27-08:00,28800,True,False,"['test_timestamp.py', 'models.rst', 'queryset.rst']",['ba22b4c9b62618f83e952b0bf60615b8f8dba426'],1,41,42,3,1.0,1.0,1.0
01c19ab3ba800ab4febd54e7a4a9c9df3ff47015,Threadsafe method for updating watcher status,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-26 17:17:52-06:00,21600,2013-12-26 17:17:52-06:00,21600,True,False,"['libevreactor.py', 'libevwrapper.c', 'test_libevreactor.py']",['b090b555f519c89a52e10519f519fe07adcb9101'],33,211,244,3,0.6533333333333333,1.0,0.7333333333333333
8aea9634d6dc241664efab3c0f963aa09a33063d,Check for non-None watcher before stopping,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-26 19:01:37-06:00,21600,2013-12-26 19:01:37-06:00,21600,True,False,['libevreactor.py'],['01c19ab3ba800ab4febd54e7a4a9c9df3ff47015'],2,4,6,1,0.0,0.0,1.0
cdea9e8b1540721f7038792187dc9c487bf4ceeb,Update policy unit test for attribute rename,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-26 19:05:37-06:00,21600,2013-12-26 19:05:37-06:00,21600,True,False,['test_policies.py'],['b090b555f519c89a52e10519f519fe07adcb9101'],1,1,2,1,,,
236e617dac78e9725a46e58d7d7730caeb24f8bc,Handle more watcher == None cases when stopping loop,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-27 10:58:26-06:00,21600,2013-12-27 10:58:26-06:00,21600,True,False,['libevreactor.py'],['241178ce7a3a43feb4efef287b94fda334c67b3f'],2,3,5,1,0.0,0.0,1.0
46fb837843296bde9933eda7b092fc5dca22f7a0,"Hold GIL while setting python error indicator

PyErr_SetFromErrno() will result in PyThreadState_Get() being called,
which explicitly states that the GIL must be held when it is called.
Before this fix, the process could segfault.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-27 11:41:38-06:00,21600,2013-12-27 11:41:38-06:00,21600,True,False,['libevwrapper.c'],['236e617dac78e9725a46e58d7d7730caeb24f8bc'],16,18,34,1,0.0,1.0,0.0
48be621748e9fefc960d0979a242a5473c48f069,Also hold GIL when checking for error indicator,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-27 11:50:11-06:00,21600,2013-12-27 11:50:11-06:00,21600,True,False,['libevwrapper.c'],['46fb837843296bde9933eda7b092fc5dca22f7a0'],2,2,4,1,,,
b6bc523ac02f97c3f653004400f54be467779190,"Raise exc if TokenAware + M3P + no murmur3 ext

Instead of logging a warning, if the TokenAwarePolicy is used with a
cluster that uses the Murmur3Partitioner, but the murmur3 extension has
not been compiled, an exception will be raised when Cluster.connect() is
called.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-27 15:34:21-06:00,21600,2013-12-27 15:34:21-06:00,21600,True,False,"['metadata.py', 'policies.py', 'test_policies.py']",['48be621748e9fefc960d0979a242a5473c48f069'],13,33,46,3,1.0,1.0,1.0
d6b380aee899dbb21f8ef439102322d5908b9449,"Always use Cluster policies in control connection

Before this fix, if the cluster's load_balancing_policy or
reconnection_policy were set after __init__() but before connect(), the
control connection would not observe the change and would continue to
use the wrong policies.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-27 15:36:11-06:00,21600,2013-12-27 15:36:11-06:00,21600,True,False,['cluster.py'],['b6bc523ac02f97c3f653004400f54be467779190'],5,4,9,1,0.0,0.0,1.0
8ed3bff63b56d626b7735b5360861aca70eddc65,"Pass errno to libev read/write handlers on error

Previously, the error would be set for the current thread, so whatever
the next line of Python that was interpreted in that thread was would
see the error.  Instead, this passes the errno to the appropriate
handler function, allowing the connection to be defuncted.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-27 15:38:33-06:00,21600,2013-12-27 15:38:33-06:00,21600,True,False,"['libevreactor.py', 'libevwrapper.c']",['d6b380aee899dbb21f8ef439102322d5908b9449'],23,24,47,2,1.0,0.0,
cea1a5a12597def68d2462c8c3a5e8a957d3a128,Don't re-declare result variable,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-27 15:40:30-06:00,21600,2013-12-27 15:40:30-06:00,21600,True,False,['libevwrapper.c'],['8ed3bff63b56d626b7735b5360861aca70eddc65'],1,1,2,1,,,
ed842e9440826d38a51e25c4fe66d3a699fee69d,Consistency test cleanup,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-27 17:51:53-06:00,21600,2013-12-27 17:51:53-06:00,21600,True,False,"['test_consistency.py', 'utils.py']",['5a64fa2b672fd180e0941aa59362a2ff6dea4aba'],607,169,776,2,1.0,1.0,0.0
83b9df7db694e39bb7c9a3cdaefbc291586bd00e,Update changelog for release in progress,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2013-12-27 18:19:59-06:00,21600,2013-12-27 18:19:59-06:00,21600,True,False,['CHANGELOG.rst'],['a7ce44b8a8d97869549075f64c3d760ec2d44acb'],0,41,41,1,,,
b541d3a420983c4103f82508808189b99bda92ca,making connection test imports play nice with nose,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2013-12-30 14:58:58-08:00,28800,2013-12-30 14:58:58-08:00,28800,True,False,['test_connection_setup.py'],['2810fead112e32f9082aeafee92c10dec441b296'],5,7,12,1,,,
38bd0a7903e96ca5c262c82e7ec0634f3b19cb0b,Use lock when updating prepared stmt cache,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-03 17:38:48-06:00,21600,2014-01-03 17:38:48-06:00,21600,True,False,['cluster.py'],['83b9df7db694e39bb7c9a3cdaefbc291586bd00e'],7,16,23,1,0.14285714285714285,0.14285714285714285,0.8571428571428571
7474e3c48fccdac6d728663587d86ce1a6b950d8,"Avoid raising None on failed set_keyspace

If the connection was already defunct when the set_keyspace
call failed, None would be raised, resulting in a TypeError.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-07 16:04:17-06:00,21600,2014-01-07 16:05:42-06:00,21600,True,False,['connection.py'],['38bd0a7903e96ca5c262c82e7ec0634f3b19cb0b'],4,8,12,1,0.0,0.0,1.0
6761bc2e17a4ca42e25c113cfb80a8770145a58b,"Hold deque lock when popping in asyncore

In multithreaded environments, this could result in corruption of the
deque, leading to malformed messages.

Additionally, this change attempts multiple writes whenever select()
reports that the FD is available for writing, similar to what is already
done for libev.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-07 17:06:10-06:00,21600,2014-01-07 17:06:10-06:00,21600,True,False,['asyncorereactor.py'],['7474e3c48fccdac6d728663587d86ce1a6b950d8'],24,20,44,1,1.0,1.0,0.0
180eca93c463653f87733704a48d5723037ae28e,More control conn debug logs on startup,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-08 11:45:17-06:00,21600,2014-01-08 11:45:17-06:00,21600,True,False,['cluster.py'],['6761bc2e17a4ca42e25c113cfb80a8770145a58b'],0,2,2,1,0.0,0.5,0.5
dcce8643ae6cc914983d5abd03e8591f661f069a,"Optimize NTS replica map building

In the case where one DC used vnodes and the other did not, the previous
algorithm hit a worst-case of O(n^2) on the number of tokens.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-08 15:37:26-06:00,21600,2014-01-08 16:04:06-06:00,21600,True,False,"['metadata.py', 'pool.py', 'test_host_connection_pool.py']",['180eca93c463653f87733704a48d5723037ae28e'],19,40,59,3,0.0,0.0,0.0
bdebe1f3588b0162e181186e849427d3331627c1,New large data tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-01-08 17:22:44-06:00,21600,2014-01-08 17:22:44-06:00,21600,True,False,['test_large_data.py'],['38bd0a7903e96ca5c262c82e7ec0634f3b19cb0b'],0,212,212,1,0.8512396694214877,1.0,0.47107438016528924
3c116aed2b70b3b9fbf3537eca8f098e1a052ff1,Adjust row_factories within create_schema method. Use a longer timeout for wide_tables test.,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-01-08 17:23:48-06:00,21600,2014-01-08 17:23:48-06:00,21600,True,False,['utils.py'],['bdebe1f3588b0162e181186e849427d3331627c1'],1,7,8,1,0.0,1.0,0.0
23a168edaf6a0a2e7740cac120dc3e15b12a97d2,Only build token replica map as needed,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-08 18:23:50-06:00,21600,2014-01-08 18:23:50-06:00,21600,True,False,"['cluster.py', 'metadata.py', 'test_metadata.py']",['dcce8643ae6cc914983d5abd03e8591f661f069a'],60,119,179,3,0.6041666666666666,0.125,0.2916666666666667
70f74ea9f3ff45dd23020ffa411988f805980c3d,Minor PEP-8 fixes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-09 09:40:46-06:00,21600,2014-01-09 09:40:46-06:00,21600,True,False,"['cqltypes.py', 'decoder.py', 'libevreactor.py', 'marshal.py', 'metadata.py', 'metrics.py', 'policies.py', 'query.py', 'util.py']",['23a168edaf6a0a2e7740cac120dc3e15b12a97d2'],1,20,21,9,,,
5cf25b523769a1e3bcbf7f3f4aa2303ac22d6861,"Row format is dict, not namedtuple for schema refresh",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-09 10:23:44-06:00,21600,2014-01-09 10:23:44-06:00,21600,True,False,['metadata.py'],['70f74ea9f3ff45dd23020ffa411988f805980c3d'],1,1,2,1,,,
1316b81e9821f587652ed5c4dc0188acf10169a3,Handle dropped keyspaces correctly,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-09 10:32:35-06:00,21600,2014-01-09 10:32:35-06:00,21600,True,False,['metadata.py'],['5cf25b523769a1e3bcbf7f3f4aa2303ac22d6861'],3,9,12,1,0.0,0.0,0.0
e0b5e6522adb5e21047a61fc93c91590924f494e,Don't make ks recreate test incredibly long,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-09 10:49:16-06:00,21600,2014-01-09 10:49:16-06:00,21600,True,False,['test_schema.py'],['1316b81e9821f587652ed5c4dc0188acf10169a3'],7,7,14,1,0.0,1.0,1.0
cea2d5b5e9f9aa51b64a120efc895f5212e6fd26,Close conns in trash on shutdown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-09 10:52:48-06:00,21600,2014-01-09 10:52:48-06:00,21600,True,False,['pool.py'],['e0b5e6522adb5e21047a61fc93c91590924f494e'],0,3,3,1,1.0,1.0,1.0
188db7d443775e2246c8c23d761f46eedb9dc4bf,Remove __del__ from Connection subclasses,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-09 11:07:31-06:00,21600,2014-01-09 11:07:31-06:00,21600,True,False,"['asyncorereactor.py', 'libevreactor.py']",['cea2d5b5e9f9aa51b64a120efc895f5212e6fd26'],9,0,9,2,0.0,0.0,0.0
993b5752d17e6552249bac9447ee30fd9e1d8d9d,"Avoid double erroring of callbacks

Under certain conditions, when a connection was closed by the server,
the close() method would first be called, followed by the defunct()
method shortly afterwards.  Both of these would error out all callbacks.

This avoids doing ""defunct"" work if the connection is already closed,
and holds a lock to avoid any other race conditions which might result
in erroring all callbacks twice.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-09 13:10:43-06:00,21600,2014-01-09 13:10:43-06:00,21600,True,False,"['asyncorereactor.py', 'libevreactor.py']",['188db7d443775e2246c8c23d761f46eedb9dc4bf'],4,10,14,2,1.0,1.0,1.0
0e7775532ae1326c33aa80383fd25411a83a9b7b,"Ensure in_flight is decremented when ops time out

Internal operations, such as control connection queries and preparing of
statements, use a different method for synchronously executing queries.
If those timed out, the in_flight count for the relevant connection
would not be decremented, leaving the connection to appear more busy
than it actually was.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-09 13:24:59-06:00,21600,2014-01-09 13:24:59-06:00,21600,True,False,"['connection.py', 'asyncorereactor.py', 'libevreactor.py']",['993b5752d17e6552249bac9447ee30fd9e1d8d9d'],13,8,21,3,1.0,1.0,0.0
aab36b62cd1219e9c61e5cff6cecb544e04c8184,"Actually add NullHandler in logging to cassandra

For some reason this was commented out duing the initial implementation",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-09 13:26:57-06:00,21600,2014-01-09 13:26:57-06:00,21600,True,False,['__init__.py'],['0e7775532ae1326c33aa80383fd25411a83a9b7b'],1,1,2,1,,,
ec38b81feb2304f26fd7718bd375700301b7694b,Handle missing/unrecognized replication strategy,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-09 16:34:33-06:00,21600,2014-01-09 16:34:33-06:00,21600,True,False,['metadata.py'],['aab36b62cd1219e9c61e5cff6cecb544e04c8184'],1,4,5,1,1.0,1.0,1.0
c28ec3fab47b41c0580f5a5b7844d2afe5b68d39,accept uuid strings with or without dashes before converting to python UUID type,Mike Hall,michael.aaron.hall@gmail.com,Mike Hall,michael.aaron.hall@gmail.com,2014-01-09 14:44:53-08:00,28800,2014-01-09 14:44:53-08:00,28800,True,False,['columns.py'],['b541d3a420983c4103f82508808189b99bda92ca'],1,1,2,1,,,
a5baef0fef9ae80f0513e68bf005aa5db8e7958b,Use efficient bulk writing,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-01-09 18:10:51-06:00,21600,2014-01-09 18:10:51-06:00,21600,True,False,['test_large_data.py'],['3c116aed2b70b3b9fbf3537eca8f098e1a052ff1'],6,22,28,1,0.0,0.0,0.0
495b01af5eaa4f0c9cda618044574d2fbf3b0ccc,wide-row fix,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-01-09 18:12:32-06:00,21600,2014-01-09 18:12:32-06:00,21600,True,False,['test_large_data.py'],['a5baef0fef9ae80f0513e68bf005aa5db8e7958b'],6,3,9,1,,,
95f18714b0b2df394ef36edf77380f6933a2aff7,string concat optimizations,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-01-09 18:13:27-06:00,21600,2014-01-09 18:13:27-06:00,21600,True,False,['test_large_data.py'],['495b01af5eaa4f0c9cda618044574d2fbf3b0ccc'],22,4,26,1,1.0,0.0,0.7272727272727273
561bf654507ab0ed3176fb4bc1b9e0976ff7c72a,Make whitespace flake8 compliant,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-01-09 18:13:45-06:00,21600,2014-01-09 18:13:45-06:00,21600,True,False,['test_large_data.py'],['95f18714b0b2df394ef36edf77380f6933a2aff7'],6,0,6,1,,,
3770634db53a8d82faa5da22857eb5b4d05020c5,make change to enumerate(),Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-01-09 18:16:01-06:00,21600,2014-01-09 18:16:01-06:00,21600,True,False,['test_large_data.py'],['561bf654507ab0ed3176fb4bc1b9e0976ff7c72a'],5,1,6,1,0.0,0.0,1.0
fb73405e58d14716f2d37b51fe3ea1d41f7cda68,added test for uuids without dashes,Mike Hall,michael.aaron.hall@gmail.com,Mike Hall,michael.aaron.hall@gmail.com,2014-01-10 08:53:32-08:00,28800,2014-01-10 08:53:32-08:00,28800,True,False,['test_validation.py'],['c28ec3fab47b41c0580f5a5b7844d2afe5b68d39'],0,27,27,1,1.0,1.0,1.0
fda6f29306633a778b04ca9d3a9be10ee24749d9,"Defunct connection when internal query fails

Errors that occurred during wait_for_responses(), which is used by the
control connection and for preparing statements, were not causing the
connection to be closed or defuncted.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-10 13:50:09-06:00,21600,2014-01-10 13:50:09-06:00,21600,True,False,"['cluster.py', 'asyncorereactor.py', 'libevreactor.py']",['ec38b81feb2304f26fd7718bd375700301b7694b'],3,14,17,3,0.0,0.0,0.0
97f4856ef5aea2e698169fc573d50b4e6c23f0d0,"Don't log single connection failures at ERROR

If the connection failure is of an expected type, logging at WARN is
sufficient.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-14 12:56:45-06:00,21600,2014-01-14 12:56:45-06:00,21600,True,False,['pool.py'],['fda6f29306633a778b04ca9d3a9be10ee24749d9'],2,5,7,1,1.0,1.0,1.0
cf369e848e6d7e687a22823b66740633f58a3de4,reset ttl and timestamp after save / update,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-01-14 12:18:39-08:00,28800,2014-01-14 12:18:39-08:00,28800,True,False,"['models.py', 'test_timestamp.py']",['c0eb900ede9e6859e888fe137534834b63740e04'],4,21,25,2,0.0,0.8181818181818182,1.0
1a0325443dda9ae94e9ee681d420375faafd84bc,changelog update,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-01-14 12:22:02-08:00,28800,2014-01-14 12:22:02-08:00,28800,True,False,['changelog'],['cf369e848e6d7e687a22823b66740633f58a3de4'],1,2,3,1,,,
cfb8692047a5d11ae598394e33765df8643fcad4,Large data test cleanup and speedup,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-14 16:24:31-06:00,21600,2014-01-14 16:24:31-06:00,21600,True,False,['test_large_data.py'],['3c36f929f1c5b3efea80b25e7c60d6332712f334'],91,59,150,1,0.0,0.0,1.0
7162ad7bf8baccdfee684b9f3a4479b6b5e0203f,Avoid dict change during iteration,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-14 16:33:58-06:00,21600,2014-01-14 16:33:58-06:00,21600,True,False,['cluster.py'],['cfb8692047a5d11ae598394e33765df8643fcad4'],1,1,2,1,,,
66e10039bf251219c3c6fe906dbd07566a867d93,Increase stmt preparation timeout to 5 seconds,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-14 16:36:57-06:00,21600,2014-01-14 16:36:57-06:00,21600,True,False,['cluster.py'],['7162ad7bf8baccdfee684b9f3a4479b6b5e0203f'],1,1,2,1,,,
a8bd56ffea04b9ec102302bce8f58d6570714e0a,Log timeouts of bulk stmt preparation at WARNING,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-14 16:37:23-06:00,21600,2014-01-14 16:37:23-06:00,21600,True,False,['cluster.py'],['66e10039bf251219c3c6fe906dbd07566a867d93'],0,2,2,1,0.0,0.0,1.0
9b2ce2ba76fb3e579400de9eb8d75ab22eaed1b3,Update prepared statement cache if item is missing,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-14 16:45:45-06:00,21600,2014-01-14 16:45:45-06:00,21600,True,False,['cluster.py'],['a8bd56ffea04b9ec102302bce8f58d6570714e0a'],7,7,14,1,,,
77bf3ea22f3ff4e345a858a8fe51313063824e75,"Correctly error callbacks on asyncore reactor

This was broken by this commit: 993b5752d17e6552249bac9447ee30fd9e1d8d9d",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-14 17:07:44-06:00,21600,2014-01-14 17:07:44-06:00,21600,True,False,['asyncorereactor.py'],['9b2ce2ba76fb3e579400de9eb8d75ab22eaed1b3'],1,1,2,1,,,
3e39275ea0631c1b2bbc353c3f19c78ae5e8453d,"Break from handle_write() if nothing was sent

asyncore will return 0 if the socket raised EWOULDBLOCK on the send()
call",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-14 17:55:40-06:00,21600,2014-01-14 17:55:40-06:00,21600,True,False,['asyncorereactor.py'],['77bf3ea22f3ff4e345a858a8fe51313063824e75'],0,2,2,1,0.0,0.0,1.0
5f7e4a9016d5215063b9521b8dfd45b368670c62,Add asyncore unit test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-14 17:56:37-06:00,21600,2014-01-14 17:56:37-06:00,21600,True,False,['test_asyncorereactor.py'],['3e39275ea0631c1b2bbc353c3f19c78ae5e8453d'],0,234,234,1,0.75,1.0,0.8970588235294118
a16599128d839ab38a297c1a2dafd4cd6e134f3e,README: adding —pre to pip since package is still beta,Daniele Salatti,danielesalatti@gmail.com,Daniele Salatti,danielesalatti@gmail.com,2014-01-15 09:50:14+01:00,-3600,2014-01-15 09:50:14+01:00,-3600,True,False,['README.rst'],['5f7e4a9016d5215063b9521b8dfd45b368670c62'],1,1,2,1,,,
488c333b4e86a269bd5b886d10a1605909915d55,Add unittest2 as test req in setup.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-15 12:18:18-06:00,21600,2014-01-15 12:18:18-06:00,21600,True,False,"['setup.py', 'test_metadata.py']",['0cde621290e54c82f190e91f748b2939c39639f8'],2,7,9,2,,,
e9b81997fe610d0373a7f1a8d056003a4714224c,"Add unittest2 and pip to tox deps

This seems to be required for pypy to work correctly",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-15 12:59:41-06:00,21600,2014-01-15 12:59:41-06:00,21600,True,False,['tox.ini'],['488c333b4e86a269bd5b886d10a1605909915d55'],0,2,2,1,,,
e1d24db2737a12f08d5b638a7590b76aa072e26a,Minor fixes for pypy tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-15 13:00:27-06:00,21600,2014-01-15 13:00:27-06:00,21600,True,False,"['query.py', 'test_libevreactor.py', 'test_marshalling.py', 'test_metadata.py']",['e9b81997fe610d0373a7f1a8d056003a4714224c'],16,26,42,4,1.0,1.0,1.0
63156a21a1ff541f7a516c4a17800176847a5669,"Add integration tests to tox, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-15 14:20:26-06:00,21600,2014-01-15 14:20:26-06:00,21600,True,False,"['cluster.py', 'decoder.py', 'setup.py', '__init__.py', 'test_cluster.py', 'test_connection.py', 'test_factories.py', 'test_metadata.py', 'test_metrics.py', 'test_query.py', 'test_types.py', 'test_asyncorereactor.py', 'tox.ini']",['e1d24db2737a12f08d5b638a7590b76aa072e26a'],27,64,91,13,1.0,1.0,1.0
516b16ee5610a32f9926e2d99bebb464f0104e6f,simplified return of the timestamp on the class,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-01-15 12:37:57-08:00,28800,2014-01-15 12:37:57-08:00,28800,True,False,['models.py'],['1a0325443dda9ae94e9ee681d420375faafd84bc'],8,1,9,1,0.0,0.0,0.4
19777eb68e75bab674ccc4e75d6aef2837ef821a,release process,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-01-15 12:42:47-08:00,28800,2014-01-15 12:42:47-08:00,28800,True,False,['RELEASE.txt'],['e3eb367daa21a3f29ecd33960af7bda0eb7ec9b6'],0,7,7,1,,,
074fa6bc94f161cae9db62f71272a983af6e73a8,Whitespace fix,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-15 15:23:45-06:00,21600,2014-01-15 15:23:45-06:00,21600,True,False,['utils.py'],['63156a21a1ff541f7a516c4a17800176847a5669'],0,1,1,1,,,
701099e69db492c081309f3c27243efdf1409136,updated changelog,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-01-15 13:47:32-08:00,28800,2014-01-15 13:47:32-08:00,28800,True,False,['changelog'],['05efc96d32ac662bc9325f0bceb7435303fdde10'],0,1,1,1,,,
3289fcb3b61483d36cc1bde60ee57537132e799f,Increase verbosity in tox tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-15 15:48:23-06:00,21600,2014-01-15 15:48:23-06:00,21600,True,False,['tox.ini'],['074fa6bc94f161cae9db62f71272a983af6e73a8'],1,1,2,1,,,
e3d51d0f928e1bde9af2a01d7c01dc595ae41aad,Add build status to README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-15 15:49:56-06:00,21600,2014-01-15 15:49:56-06:00,21600,True,False,['README.rst'],['3289fcb3b61483d36cc1bde60ee57537132e799f'],0,4,4,1,,,
5a0f945294a1b7120a745727951ed25f52c78e2f,updated changelog with note for dokai's fix to table settings,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-01-15 15:53:07-08:00,28800,2014-01-15 15:53:07-08:00,28800,True,False,['changelog'],['72338bc27d3b3b2290422dced30895666e893317'],0,1,1,1,,,
83d26c2f8d4381fb81ea4c3541f02fe21bc4b734,test around delete consistency #148,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-01-15 15:58:26-08:00,28800,2014-01-15 15:58:26-08:00,28800,True,False,"['models.py', 'test_consistency.py']",['5a0f945294a1b7120a745727951ed25f52c78e2f'],1,17,18,2,1.0,1.0,1.0
e4e4bb7d322c5ad946a7c5e9b89b1630b14903c0,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-01-15 17:30:49-08:00,28800,2014-01-15 17:30:49-08:00,28800,True,False,['VERSION'],['83d26c2f8d4381fb81ea4c3541f02fe21bc4b734'],1,1,2,1,,,
84d105af1eae02753f66898598cdd4022c7dd66f,Only run unit tests in tox for now,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-16 11:37:28-06:00,21600,2014-01-16 11:37:28-06:00,21600,True,False,['tox.ini'],['e3d51d0f928e1bde9af2a01d7c01dc595ae41aad'],1,1,2,1,,,
1a94f1baba0e324f208a1132efb42a6ac3b8518c,Don't error log ConnectionExceptions during handshake,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-16 11:45:05-06:00,21600,2014-01-16 11:45:05-06:00,21600,True,False,['connection.py'],['84d105af1eae02753f66898598cdd4022c7dd66f'],2,8,10,1,0.0,0.0,1.0
db11b411f400437a144e13e8b2fb0910702a6479,Add integration tests for tz-aware datetimes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-16 12:39:17-06:00,21600,2014-01-16 12:39:17-06:00,21600,True,False,['test_types.py'],['1a94f1baba0e324f208a1132efb42a6ac3b8518c'],0,30,30,1,0.0,1.0,1.0
a8dd5f72c98b991330a2363f1a6eb53705994865,Warn when non-datetime timestamps are used in prepared stmts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-16 13:37:03-06:00,21600,2014-01-16 13:39:43-06:00,21600,True,False,['cqltypes.py'],['db11b411f400437a144e13e8b2fb0910702a6479'],0,16,16,1,0.0,1.0,1.0
b918383313ad4c8a31097b9aea9e2db9f39c596c,Update API documentation,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-17 14:16:25-06:00,21600,2014-01-17 14:16:25-06:00,21600,True,False,"['__init__.py', 'cluster.py', 'metadata.py', 'pool.py', 'cassandra.rst', 'cluster.rst', 'connection.rst', 'pool.rst']",['a8dd5f72c98b991330a2363f1a6eb53705994865'],22,189,211,8,0.0,0.0,1.0
5550ee462451debe17b8905615ccde64bc88467d,"Exponential trace fetch backoff, now configurable, test",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-17 15:49:31-06:00,21600,2014-01-17 15:49:31-06:00,21600,True,False,"['cluster.py', 'query.py', 'test_cluster.py', 'test_query.py']",['b918383313ad4c8a31097b9aea9e2db9f39c596c'],13,43,56,4,0.6666666666666666,0.0,1.0
5ae9fbde4d672abcdf04b70b4b38dbf76cfdc9bb,Fix max_trace_wait docstring,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-17 15:52:03-06:00,21600,2014-01-17 15:52:03-06:00,21600,True,False,['cluster.py'],['5550ee462451debe17b8905615ccde64bc88467d'],3,2,5,1,,,
4634a431c44428c471dd1c488881f378ed5baf31,Fix benchmark warning when libev is not available,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-17 15:52:57-06:00,21600,2014-01-17 15:52:57-06:00,21600,True,False,['base.py'],['5ae9fbde4d672abcdf04b70b4b38dbf76cfdc9bb'],4,8,12,1,0.0,1.0,1.0
a78f419aacb062a661a0a2c3dc5ce81233c61800,Fix flake8 warning about global var usage,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-17 15:53:38-06:00,21600,2014-01-17 15:53:38-06:00,21600,True,False,['cqltypes.py'],['4634a431c44428c471dd1c488881f378ed5baf31'],1,1,2,1,,,
ac2dd3aa5bed561e0ca708466d2a991207c83b54,Use validation method to normalize Boolean values.,Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2014-01-22 11:53:34+01:00,-3600,2014-01-22 11:53:34+01:00,-3600,True,False,['columns.py'],['e4e4bb7d322c5ad946a7c5e9b89b1630b14903c0'],2,6,8,1,1.0,1.0,1.0
3d2268c6e8f94d7aa19699efb205643661ddb547,Unquote boolean values when normalizing.,Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2014-01-22 11:54:27+01:00,-3600,2014-01-22 11:54:27+01:00,-3600,True,False,['columns.py'],['ac2dd3aa5bed561e0ca708466d2a991207c83b54'],0,2,2,1,1.0,1.0,1.0
b768b6e6b86f7e790f136c5fa83a9b29352a9b0f,Update changelog.,Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2014-01-22 11:56:57+01:00,-3600,2014-01-22 11:56:57+01:00,-3600,True,False,['changelog'],['3d2268c6e8f94d7aa19699efb205643661ddb547'],1,5,6,1,,,
af8662d87efd37b06f0da0b30b06eeeb03711f9c,Add myself to the list of contributors.,Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2014-01-22 11:57:51+01:00,-3600,2014-01-22 11:57:51+01:00,-3600,True,False,['AUTHORS'],['b768b6e6b86f7e790f136c5fa83a9b29352a9b0f'],1,1,2,1,,,
70d866018d3fc56e960d0f7746a5a6d33f8aadd8,Fixed incompatibilities w/ cassandra 2.0,drewlll2ll,drewii2ii@gmail.com,drewlll2ll,drewii2ii@gmail.com,2014-01-22 11:08:16-05:00,18000,2014-01-22 11:08:16-05:00,18000,True,False,"['columns.py', 'statements.py']",['b541d3a420983c4103f82508808189b99bda92ca'],2,31,33,2,1.0,0.3684210526315789,1.0
c533ae61996447fdc035c9a9561a3a26e546a3ed,Fixed Date column,drewlll2ll,drewii2ii@gmail.com,drewlll2ll,drewii2ii@gmail.com,2014-01-22 11:32:59-05:00,18000,2014-01-22 11:32:59-05:00,18000,True,False,['columns.py'],['70d866018d3fc56e960d0f7746a5a6d33f8aadd8'],5,4,9,1,1.0,1.0,1.0
a2a532aa5aac0c6156d14eed64afedfec082d1aa,Updated get_fields to be 2.0 compatible,drewlll2ll,drewii2ii@gmail.com,drewlll2ll,drewii2ii@gmail.com,2014-01-22 12:11:03-05:00,18000,2014-01-22 12:11:03-05:00,18000,True,False,['management.py'],['c533ae61996447fdc035c9a9561a3a26e546a3ed'],2,8,10,1,1.0,1.0,1.0
74bc38e7e73f3a4a03203052c1fc0b5dc2f3f8d3,Unit test boolean value quoting.,Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2014-01-23 10:46:49+01:00,-3600,2014-01-23 10:46:49+01:00,-3600,True,False,['test_value_io.py'],['af8662d87efd37b06f0da0b30b06eeeb03711f9c'],0,13,13,1,1.0,1.0,1.0
3cd102cdd3d9ac3229d8de06a22614fc8683ec6f,Remove auth/security from TODO in README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-23 15:46:17-06:00,21600,2014-01-23 15:46:17-06:00,21600,True,False,['README.rst'],['a78f419aacb062a661a0a2c3dc5ce81233c61800'],1,0,1,1,,,
21a9defb5d68bedd8988ac3f0679051451f7705a,"Getting started guide.

How to:
 1. Setup a cluster and get a session
 2. Execute queries on that session (with block and async calls)
 3. Understanding how session's execute a query with a load balancing policy",Samuel Toriel,samuel.toriel@rackspace.com,Samuel Toriel,samuel.toriel@rackspace.com,2014-01-23 19:24:23-05:00,18000,2014-01-23 19:29:37-05:00,18000,True,False,"['getting_started.rst', 'index.rst']",['a8dd5f72c98b991330a2363f1a6eb53705994865'],0,53,53,2,,,
c77351dd8f4a09efc598d3d7b91bb5acd9b2ee34,"Installation, more complete Getting Started guide",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-24 15:55:41-06:00,21600,2014-01-24 15:55:41-06:00,21600,True,False,"['getting_started.rst', 'installation.rst']",['496e63d1f87184ef5b0103b0f0f13f8a67c720c8'],35,435,470,2,,,
f16610219e0a921019c3a098a7c9fbd6215b39a1,Update link to docs in README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-24 16:01:27-06:00,21600,2014-01-24 16:01:27-06:00,21600,True,False,"['README.rst', 'index.rst']",['c77351dd8f4a09efc598d3d7b91bb5acd9b2ee34'],1,2,3,2,,,
d25ffbdf87720479e9ed1d3d3c03f689b1467e1d,"Generators map to list collections, not sequences",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-24 16:17:40-06:00,21600,2014-01-24 16:17:40-06:00,21600,True,False,['decoder.py'],['f16610219e0a921019c3a098a7c9fbd6215b39a1'],2,2,4,1,,,
b183202266643806be356485c0eaab92d2e13cba,Update unit test for generator change,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-24 16:23:53-06:00,21600,2014-01-24 16:23:53-06:00,21600,True,False,['test_parameter_binding.py'],['d25ffbdf87720479e9ed1d3d3c03f689b1467e1d'],1,1,2,1,,,
f950bb1b2aff978d94efffade4281aa3e819397e,Reconnect after failed node up under all conditions,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-24 17:16:26-06:00,21600,2014-01-24 17:16:26-06:00,21600,True,False,['cluster.py'],['b183202266643806be356485c0eaab92d2e13cba'],1,4,5,1,0.0,0.0,1.0
7dc3b87441e12fe63efbb537b099cb76a953234e,Fix bad log statement,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-24 17:29:34-06:00,21600,2014-01-24 17:29:34-06:00,21600,True,False,['cluster.py'],['f950bb1b2aff978d94efffade4281aa3e819397e'],1,2,3,1,0.0,0.0,1.0
cda56c117ba77977b9d2f14ba7ca85229445565d,fix (rare) race condition in ConnectionPool.get(),Roey Berman,roey@everything.me,Roey Berman,roey@everything.me,2014-01-27 18:54:43+02:00,-7200,2014-01-27 18:54:43+02:00,-7200,True,False,['connection.py'],['e4e4bb7d322c5ad946a7c5e9b89b1630b14903c0'],6,13,19,1,1.0,1.0,1.0
b2b53bc6dfdab3beb167b58acf9644ce17a0e51e,"Avoid race condition when adding new host

If the futures completed before the original loop did,
we would run _finalize_add twice",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 11:33:04-06:00,21600,2014-01-28 11:33:04-06:00,21600,True,False,['cluster.py'],['7dc3b87441e12fe63efbb537b099cb76a953234e'],1,3,4,1,0.0,1.0,1.0
75486a1c1bcd241795327ed9abca7ead20f3a871,"Don't reference uninitialized conn in finally block

If we failed to get a connection, the finally block
would try to reference an uninitialized variable",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 11:34:47-06:00,21600,2014-01-28 11:34:47-06:00,21600,True,False,['cluster.py'],['b2b53bc6dfdab3beb167b58acf9644ce17a0e51e'],1,3,4,1,0.0,0.0,1.0
3eba956fa0bc37fe9817f74e0bede19c7353dfce,Log unhandled exceptions in scheduled tasks,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 11:36:11-06:00,21600,2014-01-28 11:36:11-06:00,21600,True,False,['cluster.py'],['75486a1c1bcd241795327ed9abca7ead20f3a871'],1,9,10,1,0.8571428571428571,0.8571428571428571,1.0
463898851435b02ed1024734bd78e8ad99df2e43,Check that conn is not None before closing,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 12:21:28-06:00,21600,2014-01-28 12:21:28-06:00,21600,True,False,['pool.py'],['3eba956fa0bc37fe9817f74e0bede19c7353dfce'],1,2,3,1,0.0,0.0,1.0
a22f80b8ae9238d5df3a03d2b093c28a1bee4415,"Ensure reconnector is started on failed node add

Because the node was still marked down, the reconnector
would not be started when we failed to add a connection pool for a
recently added node.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 12:22:39-06:00,21600,2014-01-28 12:22:39-06:00,21600,True,False,['cluster.py'],['463898851435b02ed1024734bd78e8ad99df2e43'],5,6,11,1,0.0,1.0,1.0
601f0f605721c0e6f9e76b16222bff2d916f2ca2,Increase delay before connecting to new nodes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 12:23:44-06:00,21600,2014-01-28 12:23:44-06:00,21600,True,False,['cluster.py'],['a22f80b8ae9238d5df3a03d2b093c28a1bee4415'],1,1,2,1,,,
9dca5a50c9c42830314500d7e096aa71c0cfb7c3,doc changes,Alex Popescu,the.mindstorm@gmail.com,Tyler Hobbs,tyler@datastax.com,2014-01-27 16:09:24-08:00,28800,2014-01-28 12:31:30-06:00,21600,True,False,"['cluster.py', 'connection.py', 'asyncorereactor.py', 'libevreactor.py', 'metadata.py', 'policies.py', 'query.py', 'getting_started.rst', 'installation.rst']",['601f0f605721c0e6f9e76b16222bff2d916f2ca2'],34,45,79,9,,,
42d5c46e16a4dcee9d11109074dc00668ed073cb,Minor doc tweaks,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 12:35:00-06:00,21600,2014-01-28 12:35:00-06:00,21600,True,False,"['cluster.py', 'getting_started.rst']",['9dca5a50c9c42830314500d7e096aa71c0cfb7c3'],3,4,7,2,,,
2410a17a9e6b149bd542ebbc09a1d0c1b189326e,Add requirements.txt,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 13:47:36-06:00,21600,2014-01-28 13:47:36-06:00,21600,True,False,['requirements.txt'],['42d5c46e16a4dcee9d11109074dc00668ed073cb'],0,3,3,1,,,
db6b546628ae21e0e1307704947d8962141ffc5f,Add test-requirements.txt,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 13:53:58-06:00,21600,2014-01-28 13:53:58-06:00,21600,True,False,['test-requirements.txt'],['2410a17a9e6b149bd542ebbc09a1d0c1b189326e'],0,5,5,1,,,
92c89f87a21ed7597c100929b912c22ebad9854c,Remove versions from requirements.txt,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 13:54:26-06:00,21600,2014-01-28 13:54:26-06:00,21600,True,False,['requirements.txt'],['db6b546628ae21e0e1307704947d8962141ffc5f'],3,3,6,1,,,
56823a3dc8335b53f3b916cc6754c06a6d850a44,"Fix location of getting started, installation guides",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 14:02:37-06:00,21600,2014-01-28 14:02:37-06:00,21600,True,False,"['getting_started.rst', 'index.rst', 'installation.rst']",['92c89f87a21ed7597c100929b912c22ebad9854c'],2,2,4,3,,,
3b546c10237c3795f0894e11383a89435b1d474a,Ignore Pycharm and pyenv,Alex Popescu,webaccounts@mypopescu.com,Alex Popescu,webaccounts@mypopescu.com,2014-01-28 12:56:18-08:00,28800,2014-01-28 12:56:18-08:00,28800,True,False,['.gitignore'],['56823a3dc8335b53f3b916cc6754c06a6d850a44'],0,2,2,1,,,
35cc20d47d0a4292cb2bb15ec452c920ab1583a1,Add notes on patterns and their performance,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 15:39:15-06:00,21600,2014-01-28 15:39:49-06:00,21600,True,False,"['index.rst', 'performance.rst']",['3b546c10237c3795f0894e11383a89435b1d474a'],0,272,272,2,,,
02b95cc7612113edf2524587d65b48b3a8128385,Fix bold/link combination,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 15:44:05-06:00,21600,2014-01-28 15:44:05-06:00,21600,True,False,['performance.rst'],['35cc20d47d0a4292cb2bb15ec452c920ab1583a1'],2,2,4,1,,,
5b28939a5c0fdf6b2a1655433ea3e4ed491c1b1f,Fix bad doc indentation,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 15:54:19-06:00,21600,2014-01-28 15:54:19-06:00,21600,True,False,['performance.rst'],['02b95cc7612113edf2524587d65b48b3a8128385'],2,2,4,1,,,
4cfcc6a7f391eebeeb0dcf99e6eb1cd4ccbd74e3,docs/performance.rst,Alex Popescu,the.mindstorm@gmail.com,Alex Popescu,the.mindstorm@gmail.com,2014-01-28 14:28:00-08:00,28800,2014-01-28 14:28:00-08:00,28800,True,False,['performance.rst'],['5b28939a5c0fdf6b2a1655433ea3e4ed491c1b1f'],1,4,5,1,,,
f10693d6a05ffae558d91da8e07dc1cb52a177c4,Fix CQL boolean type in docs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-28 17:24:45-06:00,21600,2014-01-28 17:25:11-06:00,21600,True,False,['getting_started.rst'],['325c3ae819bfb2b52e9c92064ce43d631bbe9968'],1,1,2,1,,,
8208b466fefa3e0e09aa9c6806ba6597e795a63b,"Bump version to 1.0.0, update changelog, setup.py, README

Hooray!",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-29 12:59:28-06:00,21600,2014-01-29 12:59:28-06:00,21600,True,False,"['CHANGELOG.rst', 'README.rst', '__init__.py', 'conf.py', 'setup.py']",['f10693d6a05ffae558d91da8e07dc1cb52a177c4'],99,44,143,5,,,
d38344d6610893e60551121f01cf3244f4c8c8c9,"Remove ""Beta"" from README title",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-29 13:01:41-06:00,21600,2014-01-29 13:01:41-06:00,21600,True,False,['README.rst'],['8208b466fefa3e0e09aa9c6806ba6597e795a63b'],2,2,4,1,,,
6bb0c5375d1aa1047c7bc93e7d8ab8e8b375252e,Bump version for post-release,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-29 13:04:17-06:00,21600,2014-01-29 13:04:17-06:00,21600,True,False,['__init__.py'],['d38344d6610893e60551121f01cf3244f4c8c8c9'],1,1,2,1,,,
ce9d2c8bde208f44427242fb92fef182f23a6643,Guarantee order of maps for unit test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-29 13:45:17-06:00,21600,2014-01-29 13:45:17-06:00,21600,True,False,['test_marshalling.py'],['6bb0c5375d1aa1047c7bc93e7d8ab8e8b375252e'],1,6,7,1,,,
00a82dbfa2b0ce96d983089e34458a0615fc9e2f,Avoid different orderings in param binding unit test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-29 13:50:13-06:00,21600,2014-01-29 13:50:13-06:00,21600,True,False,['test_parameter_binding.py'],['ce9d2c8bde208f44427242fb92fef182f23a6643'],4,13,17,1,1.0,1.0,1.0
ad7c3677911d222cd7c64468c14fc1b67f911007,Add missing space in expected test result,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-29 14:06:43-06:00,21600,2014-01-29 14:06:43-06:00,21600,True,False,['test_parameter_binding.py'],['00a82dbfa2b0ce96d983089e34458a0615fc9e2f'],1,1,2,1,,,
e87f45aad3ddff9bbd362e28994f074103748b62,documentation section,Alex Popescu,the.mindstorm@gmail.com,Alex Popescu,the.mindstorm@gmail.com,2014-01-29 15:15:57-08:00,28800,2014-01-29 15:15:57-08:00,28800,True,False,['README.rst'],['ad7c3677911d222cd7c64468c14fc1b67f911007'],2,9,11,1,,,
6c174d2f39ff35f743395bc364314364cf6ceccb,improved,Alex Popescu,the.mindstorm@gmail.com,Alex Popescu,the.mindstorm@gmail.com,2014-01-29 15:18:16-08:00,28800,2014-01-29 15:18:16-08:00,28800,True,False,['README.rst'],['e87f45aad3ddff9bbd362e28994f074103748b62'],1,1,2,1,,,
f970cc2faaf5018c3b1c49d10015afdea425a0d8,improved documentation section,Alex Popescu,the.mindstorm@gmail.com,Alex Popescu,the.mindstorm@gmail.com,2014-01-29 15:57:18-08:00,28800,2014-01-29 15:57:18-08:00,28800,True,False,['README.rst'],['aa2308cae34053a87e5b52c6826713b5f8f23581'],2,3,5,1,,,
b76cf4be066effe3bdf82b28cbc380d23ce75ff5,added link to SSL setup post,Alex Popescu,the.mindstorm@gmail.com,Alex Popescu,the.mindstorm@gmail.com,2014-01-29 15:57:34-08:00,28800,2014-01-29 15:57:34-08:00,28800,True,False,['installation.rst'],['f970cc2faaf5018c3b1c49d10015afdea425a0d8'],0,4,4,1,,,
a1f39a6c90d18f3fc23b3a0c828815b464ed31d2,Note that core/max conn limits are per-Session,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-31 11:43:02-06:00,21600,2014-01-31 12:46:13-06:00,21600,True,False,['cluster.py'],['21a1818598330ca2768459bb34ea48d00902085f'],12,12,24,1,,,
67be0a1c695d6f2dee862097bab46775aa413ba6,Include table indexes in KSMetadata.export_as_string(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-01-31 12:45:37-06:00,21600,2014-01-31 12:46:13-06:00,21600,True,False,"['CHANGELOG.rst', 'metadata.py', 'test_metadata.py']",['a1f39a6c90d18f3fc23b3a0c828815b464ed31d2'],1,15,16,3,0.0,1.0,1.0
5ce7659075f2b49d704290ed7fd06d41a7116b0c,Fix Token's __hash__ method so that BytesToken instances to be added to token_to_host_owner (currently the driver is broken on ByteOrderedPartitioner),Fred Wulff,frew@cs.stanford.edu,Fred Wulff,frew@cs.stanford.edu,2014-02-02 01:03:45-08:00,28800,2014-02-02 01:03:45-08:00,28800,True,False,['metadata.py'],['67be0a1c695d6f2dee862097bab46775aa413ba6'],1,1,2,1,,,
1b0cbe27d59e1869b8de410de5b52ca06620db15,connection queue - issue non-blocking get to pool queue,Roey Berman,roey@everything.me,Roey Berman,roey@everything.me,2014-02-02 13:46:25+02:00,-7200,2014-02-02 13:46:25+02:00,-7200,True,False,['connection.py'],['cda56c117ba77977b9d2f14ba7ca85229445565d'],2,2,4,1,,,
5381488086e58b4d5f51b0dcb4ee637b58e45d00,"fix callback chaining benchmarking example

if there was an error in any query, callbacks_full_pipeline.py would
hang because ""self.event"" (or ""finished_event"" in the docs) would never
get set. this also fixes some minor pep8 issues.",Greg Banks,gbanks@mybasis.com,Greg Banks,gbanks@mybasis.com,2014-02-04 09:34:41-08:00,28800,2014-02-04 09:34:41-08:00,28800,True,False,"['callback_full_pipeline.py', 'performance.rst']",['d6a755b094ad0509feb9cce1eeb39002f91ae4ab'],29,27,56,2,0.0,0.0,0.0
66d1c324a9aec558d6ad37c92e06f568e7097a48,whoops. fix that typo.,Greg Banks,gbanks@mybasis.com,Greg Banks,gbanks@mybasis.com,2014-02-04 09:41:24-08:00,28800,2014-02-04 09:41:24-08:00,28800,True,False,['callback_full_pipeline.py'],['5381488086e58b4d5f51b0dcb4ee637b58e45d00'],3,3,6,1,,,
5a420f396744778440e5716f8c61dd3e2a953f25,fix it there too.,Greg Banks,gbanks@mybasis.com,Greg Banks,gbanks@mybasis.com,2014-02-04 09:44:01-08:00,28800,2014-02-04 09:44:01-08:00,28800,True,False,['performance.rst'],['66d1c324a9aec558d6ad37c92e06f568e7097a48'],3,3,6,1,,,
79fc15ecd825af9a3884c254407065d32b17c296,Added test to verify limit immutability and deep copy in queryset,Travis Glines,travisglines@gmail.com,Travis Glines,travisglines@gmail.com,2014-02-06 16:04:02-08:00,28800,2014-02-06 16:04:02-08:00,28800,True,False,['test_queryset.py'],['e4e4bb7d322c5ad946a7c5e9b89b1630b14903c0'],0,14,14,1,1.0,1.0,1.0
3cf722a963652dc4f6ac45456521b9e133f95a49,Allow acces to instance columns as if it is a dict.,Kevin Deldycke,kevin@deldycke.com,Kevin Deldycke,kevin@deldycke.com,2014-02-07 16:27:22+01:00,-3600,2014-02-07 16:27:22+01:00,-3600,True,False,"['changelog', 'models.py', 'test_model_io.py']",['e4e4bb7d322c5ad946a7c5e9b89b1630b14903c0'],0,53,53,3,0.5151515151515151,1.0,1.0
ef5745bc5f85f613a663ed1d2102320e1f0acd1b,Fix comment.,Kevin Deldycke,kdeldycke@users.noreply.github.com,Kevin Deldycke,kdeldycke@users.noreply.github.com,2014-02-07 16:31:39+01:00,-3600,2014-02-07 16:31:39+01:00,-3600,True,False,['models.py'],['3cf722a963652dc4f6ac45456521b9e133f95a49'],1,1,2,1,,,
b186ecd8348503348c13cbfb144cd3f0808247a3,"Fix UTF8Type serialization for already-encoded utf8

If your data is already utf-8 encoded by the time it reaches the UTF8Type.serialize() method, the encode() will fail, raising a UnicodeDecodeError.
Explicitly testing the type for Unicode before the .encode() should guarantee it doesn't fail, and in cases where it isn't Unicode, we simply test whether it's already a valid byte-encoded unicode string by attempting to decode it. 
This shouldn't add any significant overhead for strings passed in as Unicode, will prevent unnecessary failures with already-encoded Unicode strings, and raise a UnicodeDecodeError otherwise.",nisanharamati,hanisan@gmail.com,nisanharamati,hanisan@gmail.com,2014-02-07 14:34:12-08:00,28800,2014-02-07 14:34:12-08:00,28800,True,False,['cqltypes.py'],['7cbaf41a74aab9d80e07a80aea9e32fbe4bda564'],1,9,10,1,1.0,1.0,1.0
61a1c71aa9c1930512dc8ce4051253c349df24e2,"try..except on UTF8Type serialize for pre-encoded strings

Wrap ustr.decode() with a try..except block to handle failure to encode strings of already-encoded unicode.",nisanharamati,hanisan@gmail.com,nisanharamati,hanisan@gmail.com,2014-02-07 16:30:21-08:00,28800,2014-02-07 16:30:21-08:00,28800,True,False,['cqltypes.py'],['b186ecd8348503348c13cbfb144cd3f0808247a3'],9,5,14,1,0.0,0.0,0.0
95d99bf35982a75df961522367a0122effec4f24,Implements the ability to blind update add to a set.,Danny Cosson,dcosson@gmail.com,Danny Cosson,dcosson@gmail.com,2014-02-09 14:39:26-05:00,18000,2014-02-09 14:39:26-05:00,18000,True,False,"['query.py', 'statements.py', 'test_updates.py']",['79fc15ecd825af9a3884c254407065d32b17c296'],9,32,41,3,0.5714285714285714,0.47619047619047616,0.9523809523809523
b777f8cfc6977b59cccf6bc8cc7e78a8a5b0e357,Adds a test for a blind update append when the record doesn't exist yet,Danny Cosson,dcosson@gmail.com,Danny Cosson,dcosson@gmail.com,2014-02-09 14:42:39-05:00,18000,2014-02-09 14:42:39-05:00,18000,True,False,['test_updates.py'],['95d99bf35982a75df961522367a0122effec4f24'],0,10,10,1,1.0,1.0,1.0
47b1d2e3cf3619dc86342bc68c73080bbc226ea5,"Adds blind set removal, and a test that it works",Danny Cosson,dcosson@gmail.com,Danny Cosson,dcosson@gmail.com,2014-02-09 14:45:27-05:00,18000,2014-02-09 15:45:16-05:00,18000,True,False,"['statements.py', 'test_updates.py']",['b777f8cfc6977b59cccf6bc8cc7e78a8a5b0e357'],0,13,13,2,1.0,0.8333333333333334,1.0
cc52ad6c6652b2f52a11fcdc075e0f3df27f927f,"Adds a test that removing something that's not in a set just fails
quietly",Danny Cosson,dcosson@gmail.com,Danny Cosson,dcosson@gmail.com,2014-02-09 14:47:42-05:00,18000,2014-02-09 15:45:23-05:00,18000,True,False,['test_updates.py'],['47b1d2e3cf3619dc86342bc68c73080bbc226ea5'],0,13,13,1,1.0,1.0,1.0
57f92c0777d1fe3d48141b5b947f897b1e2ddc76,Adds ability to blind append and prepend to a list,Danny Cosson,dcosson@gmail.com,Danny Cosson,dcosson@gmail.com,2014-02-09 15:42:28-05:00,18000,2014-02-09 15:57:40-05:00,18000,True,False,"['query.py', 'statements.py', 'test_updates.py']",['cc52ad6c6652b2f52a11fcdc075e0f3df27f927f'],5,34,39,3,0.8695652173913043,0.8695652173913043,1.0
e11f53e370e634dc271a18056cd158204971d561,"Updates the prepend to list test to make sure order is preserved when
multiple items are prepended",Danny Cosson,dcosson@gmail.com,Danny Cosson,dcosson@gmail.com,2014-02-10 10:15:52-05:00,18000,2014-02-10 10:35:42-05:00,18000,True,False,['test_updates.py'],['57f92c0777d1fe3d48141b5b947f897b1e2ddc76'],2,3,5,1,,,
9dc55ec54bef7c218ad2d9036228a2555b2b6aa5,"Adds a map __merge update mode, to merge in map with the existing values
on the server.",Danny Cosson,dcosson@gmail.com,Danny Cosson,dcosson@gmail.com,2014-02-10 11:28:03-05:00,18000,2014-02-10 11:28:03-05:00,18000,True,False,"['query.py', 'statements.py', 'test_updates.py']",['e11f53e370e634dc271a18056cd158204971d561'],6,23,29,3,0.9285714285714286,1.0,1.0
c344f1e2742dc49e7d2ea17f4ec5a0632daabef2,"Tries to add a test that doesn't work because of a bug in the underlying
cql library.  So doing an update with a dict __merge with a None value
will not be possible for the time being.",Danny Cosson,dcosson@gmail.com,Danny Cosson,dcosson@gmail.com,2014-02-10 11:54:31-05:00,18000,2014-02-10 11:54:31-05:00,18000,True,False,['test_updates.py'],['9dc55ec54bef7c218ad2d9036228a2555b2b6aa5'],0,19,19,1,1.0,1.0,1.0
a2c7a547ee2a8e0401862f190fafeb3ab9c2d4d4,"QueryException Token values len

I assume these two have to be swapped, otherwise it doesn't make much sense.",Niklas Korz,korz.niklask@gmail.com,Niklas Korz,korz.niklask@gmail.com,2014-02-11 18:53:09+01:00,-3600,2014-02-11 18:53:09+01:00,-3600,True,False,['query.py'],['79fc15ecd825af9a3884c254407065d32b17c296'],1,1,2,1,,,
a32b92165863db3af83240c23fa71811b058558a,removing uneccesary try/except block,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-02-11 11:19:03-08:00,28800,2014-02-11 11:19:03-08:00,28800,True,False,['connection.py'],['8dd1c6b9e28f1e438b0b34876dcee35df0c08aeb'],4,1,5,1,0.0,0.0,0.0
7fa6a6ed9b3dad79e4e7393322b39c1c46b5ff18,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-02-11 11:22:42-08:00,28800,2014-02-11 11:23:56-08:00,28800,True,False,['changelog'],['a32b92165863db3af83240c23fa71811b058558a'],2,3,5,1,,,
3b7413b427f0aff779e1d8c0d47d02b3a1c6c338,Fix pep8 error in example.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-11 17:17:50-06:00,21600,2014-02-11 17:17:50-06:00,21600,True,False,['example.py'],['7cbaf41a74aab9d80e07a80aea9e32fbe4bda564'],0,1,1,1,,,
658551b8362b1c706060497a568d0007db763979,"Skip OPTIONS message if cql_version, compression not set

By default compression is enabled, so the OPTIONS message will typically
be sent. But, if cql_version was not set and either compression was
explicitly disabled or no compressors are locally supported, the driver
will skip the OPTIONS message.

Related: PYTHON-47, CASSANDRA-6663",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-12 11:38:47-06:00,21600,2014-02-12 11:38:47-06:00,21600,True,False,['connection.py'],['3b7413b427f0aff779e1d8c0d47d02b3a1c6c338'],11,28,39,1,1.0,1.0,1.0
7b029c98c908408a7d7ed0f1141773d034db01ac,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-12 11:50:27-06:00,21600,2014-02-12 11:50:27-06:00,21600,True,False,['CHANGELOG.rst'],['658551b8362b1c706060497a568d0007db763979'],0,7,7,1,,,
eb402f6aad6b58f5f20bfbb7dfcfd01b51a45b01,Update unit tests for skipping OPTIONS message,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-12 12:00:23-06:00,21600,2014-02-12 12:00:23-06:00,21600,True,False,"['test_asyncorereactor.py', 'test_libevreactor.py']",['7b029c98c908408a7d7ed0f1141773d034db01ac'],3,3,6,2,,,
f0fc2288fc4f907d3f012f02e0c64a6093b64dfa,"Always close sockets when defuncting connections

Under certain error conditions, this could result in an FD leak for the
socket handles.  (In my testing, they seemed to eventually be GC'ed and
closed, but this behavior is probably not dependable.)

Fixes #80",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-13 12:38:49-06:00,21600,2014-02-13 12:38:49-06:00,21600,True,False,"['CHANGELOG.rst', 'asyncorereactor.py', 'libevreactor.py']",['eb402f6aad6b58f5f20bfbb7dfcfd01b51a45b01'],2,6,8,3,0.0,1.0,1.0
6bd519b8f9558e26c98faa562506d6901d2097be,Handle custom types by full classname lookup,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-13 16:23:49-06:00,21600,2014-02-13 16:23:49-06:00,21600,True,False,"['CHANGELOG.rst', 'decoder.py']",['f0fc2288fc4f907d3f012f02e0c64a6093b64dfa'],3,12,15,2,0.0,1.0,1.0
1db9679cf8f0e2ffed3374a38858952ae83b8c89,"Add version field, setter to Host",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-13 18:13:46-06:00,21600,2014-02-13 18:13:46-06:00,21600,True,False,"['pool.py', 'test_host_connection_pool.py']",['6bd519b8f9558e26c98faa562506d6901d2097be'],0,40,40,2,1.0,1.0,1.0
9918001dde821d49a1c437bf24ce8320f170a723,"Add protocol_version attr to Cluster, use in conns",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-13 18:52:16-06:00,21600,2014-02-13 18:52:16-06:00,21600,True,False,"['cluster.py', 'connection.py', 'decoder.py', 'asyncorereactor.py', 'libevreactor.py', 'test_asyncorereactor.py', 'test_libevreactor.py', 'test_connection.py']",['1db9679cf8f0e2ffed3374a38858952ae83b8c89'],40,28,68,8,1.0,0.0,1.0
2637033899be75214f0cf3c28c64fa6c9f397b8f,Add dict support for bound statements,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-02-15 14:07:22-06:00,21600,2014-02-15 14:07:22-06:00,21600,True,False,['query.py'],['6bd519b8f9558e26c98faa562506d6901d2097be'],1,20,21,1,0.0,0.0,1.0
325d42e6e6213ce91f60707fe8dcafa8bcf459e3,Better logging for dict KeyErrors,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-02-15 14:15:31-06:00,21600,2014-02-15 14:15:31-06:00,21600,True,False,['query.py'],['2637033899be75214f0cf3c28c64fa6c9f397b8f'],1,7,8,1,0.0,0.0,1.0
98a55550302fc0634b72a09ebec20b4b4a371799,Missing period,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-02-15 14:16:55-06:00,21600,2014-02-15 14:16:55-06:00,21600,True,False,['query.py'],['325d42e6e6213ce91f60707fe8dcafa8bcf459e3'],1,1,2,1,,,
49ee7cb4a1d804d83eed42248b27fbca0b4dcbb4,Fix whitespace,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-02-15 14:25:23-06:00,21600,2014-02-15 14:25:23-06:00,21600,True,False,['query.py'],['98a55550302fc0634b72a09ebec20b4b4a371799'],1,0,1,1,,,
59a88ea49dbaca71eb19c718afbd53412467f9a0,Fix token ring wrapping,codesnik,aronaxis@gmail.com,codesnik,aronaxis@gmail.com,2014-02-15 09:22:48+04:00,-14400,2014-02-16 08:33:10+04:00,-14400,True,False,"['metadata.py', 'test_metadata.py']",['7cbaf41a74aab9d80e07a80aea9e32fbe4bda564'],5,3,8,2,0.0,1.0,1.0
ec95133ef43ea6399bac102ba3ba7e614ece5a23,libev: handle EAGAIN when message len matches buffer size,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-18 15:07:43-06:00,21600,2014-02-18 15:07:43-06:00,21600,True,False,"['CHANGELOG.rst', 'libevreactor.py', 'test_libevreactor.py']",['6bd519b8f9558e26c98faa562506d6901d2097be'],2,41,43,3,0.25925925925925924,1.0,1.0
4698155981e3f9c9e95d049bfca49f46537682ad,Add error/host details to OperationTimedOut,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-18 16:15:47-06:00,21600,2014-02-18 16:15:47-06:00,21600,True,False,"['CHANGELOG.rst', '__init__.py', 'cluster.py']",['ec95133ef43ea6399bac102ba3ba7e614ece5a23'],6,23,29,3,0.8333333333333334,0.8333333333333334,0.16666666666666666
95ced181a18c90c90bc155cb78c8fe3c5b2c8ffe,"Fix tracing with non-default row_factory

For PYTHON-49",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-18 17:10:25-06:00,21600,2014-02-18 17:10:54-06:00,21600,True,False,"['CHANGELOG.rst', 'cluster.py', 'query.py', 'test_query.py']",['4698155981e3f9c9e95d049bfca49f46537682ad'],8,47,55,4,0.92,0.92,0.56
dbfaa4145dd15dabf2bf9dba5677d301908fa7eb,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-18 17:29:44-06:00,21600,2014-02-18 17:29:44-06:00,21600,True,False,['CHANGELOG.rst'],['fac3cac4f680d6db227a9b3f34a471e743b7e83e'],0,1,1,1,,,
a109a7f8aee00e9ef49e2a5177629dbf520ebaba,"Fix token-aware routing for tokens before first node

Fixes #82",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-18 17:53:14-06:00,21600,2014-02-18 17:53:14-06:00,21600,True,False,"['CHANGELOG.rst', 'metadata.py', 'test_metadata.py']",['59a88ea49dbaca71eb19c718afbd53412467f9a0'],6,12,18,3,0.0,0.0,1.0
250ee6a6fca90fd2e3ae034302a9a87373193204,"Tolerate null source_elapsed in trace events

For PYTHON-48",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-19 11:20:36-06:00,21600,2014-02-19 11:20:36-06:00,21600,True,False,"['CHANGELOG.rst', 'query.py']",['0cf69b5c04cfcf27c93cc100ab7a33269f52fde1'],1,6,7,2,1.0,1.0,0.0
05f0e699a1881bae6b00df426101b9afd9ba5d50,Increase default timeout for large data integration tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-19 11:45:12-06:00,21600,2014-02-19 11:45:12-06:00,21600,True,False,['test_large_data.py'],['250ee6a6fca90fd2e3ae034302a9a87373193204'],0,1,1,1,1.0,1.0,1.0
169d1e6b97b6b8f67fea36e46c37474349affcf2,Bump version to 1.0.1,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-19 11:46:39-06:00,21600,2014-02-19 11:46:39-06:00,21600,True,False,"['CHANGELOG.rst', '__init__.py']",['05f0e699a1881bae6b00df426101b9afd9ba5d50'],2,2,4,2,,,
781ca401d0a488056587f548cf3974cdd708ce58,Update version to post-release,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-19 11:49:15-06:00,21600,2014-02-19 11:49:15-06:00,21600,True,False,['__init__.py'],['169d1e6b97b6b8f67fea36e46c37474349affcf2'],1,1,2,1,,,
2fd49c251f649db8dcbd77c183b2ae63bb2ff754,Update test-running instructions in README-dev.,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-19 11:53:20-06:00,21600,2014-02-19 11:53:20-06:00,21600,True,False,['README-dev.rst'],['781ca401d0a488056587f548cf3974cdd708ce58'],6,23,29,1,,,
cc1489c925cc48786b8412a84d2231e8874663d7,Also fix EAGAIN handling of large msgs for asyncore,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-21 12:11:11-06:00,21600,2014-02-21 12:11:11-06:00,21600,True,False,"['CHANGELOG.rst', 'asyncorereactor.py', 'test_asyncorereactor.py']",['2fd49c251f649db8dcbd77c183b2ae63bb2ff754'],2,48,50,3,0.25925925925925924,1.0,1.0
ba896f0ed121bc23b3a0af878fd597ad9573371b,Remove ignored tracing_enabled param of SimpleStatement,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-21 12:22:26-06:00,21600,2014-02-21 12:22:26-06:00,21600,True,False,"['CHANGELOG.rst', 'query.py']",['cc1489c925cc48786b8412a84d2231e8874663d7'],3,7,10,2,0.0,0.0,1.0
f5d329d72354f9492b8752631b31a8d0a5aa7ee6,"reverts so we don't need to change the update_context method for map, we
just allow the dict column Quoter to have get() and keys() methods",Danny Cosson,dcosson@gmail.com,Danny Cosson,dcosson@gmail.com,2014-02-21 17:30:51-05:00,18000,2014-02-21 17:30:51-05:00,18000,True,False,"['columns.py', 'statements.py']",['c344f1e2742dc49e7d2ea17f4ec5a0632daabef2'],2,9,11,2,1.0,0.0,1.0
76a8abd11cff544af7e6b4372f151c8d20019c00,Fixes issue because params got re-ordered,Danny Cosson,dcosson@gmail.com,Danny Cosson,dcosson@gmail.com,2014-02-21 17:59:22-05:00,18000,2014-02-21 18:00:19-05:00,18000,True,False,"['query.py', 'statements.py']",['f5d329d72354f9492b8752631b31a8d0a5aa7ee6'],2,3,5,2,0.0,0.0,1.0
dfd8b444286c2ca0bd5a5c57bcced5abe10e0395,updates tests that had broken because of arguments being rearranged,Danny Cosson,dcosson@gmail.com,Danny Cosson,dcosson@gmail.com,2014-02-21 18:08:53-05:00,18000,2014-02-21 18:08:53-05:00,18000,True,False,['test_assignment_clauses.py'],['76a8abd11cff544af7e6b4372f151c8d20019c00'],6,6,12,1,,,
07656200effd8a500c7828fc0491bb778c99bcb0,Decode TimestampType as DateType,Mikhail Stepura,mikhail.stepura@outlook.com,Mikhail Stepura,mikhail.stepura@outlook.com,2014-02-24 12:21:07-08:00,28800,2014-02-24 12:21:07-08:00,28800,True,False,['cqltypes.py'],['ba896f0ed121bc23b3a0af878fd597ad9573371b'],0,2,2,1,,,
a66c9d176535a70b6f6fa74331b83c70fd9bf988,Lowercase KS properties,Mikhail Stepura,mikhail.stepura@outlook.com,Mikhail Stepura,mikhail.stepura@outlook.com,2014-02-24 19:35:36-08:00,28800,2014-02-24 19:35:36-08:00,28800,True,False,['metadata.py'],['ba896f0ed121bc23b3a0af878fd597ad9573371b'],2,2,4,1,,,
df86fd00d10fbdc377c260d33fb382c83cf7e5af,Add docs for setting the CL on prepared statements,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-25 13:41:14-06:00,21600,2014-02-25 13:41:51-06:00,21600,True,False,"['index.rst', 'getting_started.rst', 'index.rst']",['3c1b93a0427b508effe84e5bba3439b28fd1e961'],7,33,40,3,,,
1726230e9dd8e9123c02a8d7751c8753ac9bc624,"Quote uppercase names in CREATE statements

Done for PYTHON-51",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-25 14:54:22-06:00,21600,2014-02-25 14:54:22-06:00,21600,True,False,"['CHANGELOG.rst', 'metadata.py', 'test_metadata.py', 'test_metadata.py']",['df86fd00d10fbdc377c260d33fb382c83cf7e5af'],75,115,190,4,0.6538461538461539,0.8846153846153846,1.0
56018edfdb9e970eee93fa662b259824e38c9391,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-25 14:58:18-06:00,21600,2014-02-25 14:58:18-06:00,21600,True,False,['CHANGELOG.rst'],['1726230e9dd8e9123c02a8d7751c8753ac9bc624'],0,2,2,1,,,
c1dd4b65a95dfdc88ae7b48baf9879493d1f825f,"Also quote column names when needed in CREATE stmts

Done for PYTHON-51",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-25 15:32:31-06:00,21600,2014-02-25 15:32:31-06:00,21600,True,False,"['CHANGELOG.rst', 'metadata.py', 'test_metadata.py']",['56018edfdb9e970eee93fa662b259824e38c9391'],6,15,21,3,0.0,1.0,1.0
e7c8aa4561ea5da94688ee4d85ea890da380f660,"Handle latest table options in CREATE statements

For PYTHON-51",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-25 17:00:07-06:00,21600,2014-02-25 17:00:07-06:00,21600,True,False,"['CHANGELOG.rst', 'metadata.py', 'test_metadata.py']",['c1dd4b65a95dfdc88ae7b48baf9879493d1f825f'],21,44,65,3,1.0,1.0,1.0
fc405a1c0693419f3e6c307367111399782d0922,Fixed the __gte filtering example,Caleb Rackliffe,caleb.rackliffe@gmail.com,Caleb Rackliffe,caleb@shift.com,2014-02-25 17:50:58-08:00,28800,2014-02-25 17:50:58-08:00,28800,True,False,['queryset.rst'],['ee49da05c317d65ce27bed7936eab90c5d1fb71d'],3,3,6,1,,,
bb482fbf837b3506c9fd7870c377e535636cfd4b,Fixed a couple little formatting things pointed out by the inspector...,Caleb Rackliffe,caleb.rackliffe@gmail.com,Caleb Rackliffe,caleb@shift.com,2014-02-26 10:20:55-08:00,28800,2014-02-26 10:20:55-08:00,28800,True,False,"['conf.py', 'connection.rst', 'models.rst']",['fc405a1c0693419f3e6c307367111399782d0922'],10,8,18,3,,,
9d17030ac30901333cead7bd4ae930c2f257b2ad,Ignore setuptools tarball,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-26 15:02:38-06:00,21600,2014-02-26 15:02:38-06:00,21600,True,False,['.gitignore'],['e7c8aa4561ea5da94688ee4d85ea890da380f660'],0,1,1,1,,,
7a33634090d86c11b7a5bb92fd0133088e91d30d,Use TypeError for bad prepared stmt param types,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-26 17:09:23-06:00,21600,2014-02-26 17:09:23-06:00,21600,True,False,"['CHANGELOG.rst', 'query.py', 'test_parameter_binding.py']",['9d17030ac30901333cead7bd4ae930c2f257b2ad'],39,13,52,3,0.5294117647058824,0.0,0.47058823529411764
e235f57f79895268970fb819c27737f1b8db6fe9,More consistent type checking for query params,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-26 17:11:24-06:00,21600,2014-02-26 17:11:24-06:00,21600,True,False,"['CHANGELOG.rst', 'cqltypes.py']",['7a33634090d86c11b7a5bb92fd0133088e91d30d'],5,24,29,2,0.0,1.0,1.0
5cc4db6f4e3569f334271de56fbf325fdc878e04,Integration test for empty strings and Nones,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-26 17:17:13-06:00,21600,2014-02-26 17:17:13-06:00,21600,True,False,['test_types.py'],['e235f57f79895268970fb819c27737f1b8db6fe9'],11,121,132,1,0.0,0.0,1.0
418ae546fd52bb0a7b07f3be3574e899919147c6,Allow returning EMPTY for empty vals for non-string cols,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-26 18:17:00-06:00,21600,2014-02-26 18:17:00-06:00,21600,True,False,"['CHANGELOG.rst', 'cqltypes.py', 'test_types.py']",['5cc4db6f4e3569f334271de56fbf325fdc878e04'],3,48,51,3,0.2,1.0,1.0
26d7cd2a88cc21a41809d66aa211467db7c7584e,"Avoid changing set size during iter in query plan generation

Fixes #87
Fixes PYTHON-54",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 13:02:30-06:00,21600,2014-02-28 13:02:30-06:00,21600,True,False,"['CHANGELOG.rst', 'policies.py', 'test_policies.py']",['418ae546fd52bb0a7b07f3be3574e899919147c6'],22,86,108,3,0.56,1.0,1.0
679755c2d0710ab58cc71da8effacf4409328efe,"Add SERIAL, LOCAL_SERIAL ConsistencyLevel enums",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 13:24:05-06:00,21600,2014-02-28 13:24:05-06:00,21600,True,False,['__init__.py'],['d32f3b53f3f1885fa53364c0fd45003831acec7c'],0,17,17,1,,,
5e6783969a41a41137a55c3605c897729942db9d,"Check proto version for messages, raise UnsupportedOperation",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 13:38:35-06:00,21600,2014-02-28 13:38:35-06:00,21600,True,False,"['__init__.py', 'decoder.py']",['679755c2d0710ab58cc71da8effacf4409328efe'],1,19,20,2,0.0,1.0,0.0
fde2fcc3b3e347a519ff9bf5b4572382b2a73601,Handle OrderedDict import attempt in cassandra.util,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 15:27:07-06:00,21600,2014-02-28 15:27:07-06:00,21600,True,False,"['cqltypes.py', 'decoder.py', 'metadata.py', 'util.py', 'test_factories.py', 'test_types.py', 'test_marshalling.py', 'test_parameter_binding.py']",['5e6783969a41a41137a55c3605c897729942db9d'],158,133,291,8,,,
bdcde818dc0b7979cbd9410d3a1757c5fbd1176f,Move encoders from decoder.py to encoder.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 15:30:24-06:00,21600,2014-02-28 15:30:24-06:00,21600,True,False,"['decoder.py', 'encoder.py', 'query.py']",['fde2fcc3b3e347a519ff9bf5b4572382b2a73601'],98,100,198,3,,,
40bef2e93e032316c8693c0680dca33877e8e73f,Move row factories from c.decoder to c.query,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 15:32:10-06:00,21600,2014-02-28 15:32:10-06:00,21600,True,False,"['cluster.py', 'decoder.py', 'query.py']",['bdcde818dc0b7979cbd9410d3a1757c5fbd1176f'],34,36,70,3,,,
4718b14a03928fc7fe0be10373e3f0245dadc80d,Define BatchType enum,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 15:32:34-06:00,21600,2014-02-28 15:32:34-06:00,21600,True,False,['__init__.py'],['40bef2e93e032316c8693c0680dca33877e8e73f'],0,9,9,1,,,
2e2b212c0af0d1ee2a91c00d9bdc04cd77d14186,Don't ignore encoded names from a TypeString.,Mikhail Stepura,mikhail.stepura@outlook.com,Mikhail Stepura,mikhail.stepura@outlook.com,2014-02-28 15:42:00-08:00,28800,2014-02-28 15:42:00-08:00,28800,True,False,['cqltypes.py'],['26d7cd2a88cc21a41809d66aa211467db7c7584e'],5,6,11,1,0.0,0.0,0.0
aaa2ae2a29bd239cd311fc1f94bb47dbdfb8e746,Fix remaining factory imports in tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 18:24:05-06:00,21600,2014-02-28 18:24:05-06:00,21600,True,False,"['test_factories.py', 'test_query.py', 'test_types.py', 'test_types.py']",['4718b14a03928fc7fe0be10373e3f0245dadc80d'],5,5,10,4,,,
810a2a89e34dfbcb370d3a8348acd93806695aa2,Create BatchStatement class,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 18:25:00-06:00,21600,2014-02-28 18:25:00-06:00,21600,True,False,"['__init__.py', 'query.py']",['aaa2ae2a29bd239cd311fc1f94bb47dbdfb8e746'],9,75,84,2,1.0,1.0,0.23529411764705882
16c2a854775d116a99d842de8c3eec9305de0993,"Cache cass/cql version in tests, accept env variable",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 18:25:27-06:00,21600,2014-02-28 18:25:27-06:00,21600,True,False,['__init__.py'],['810a2a89e34dfbcb370d3a8348acd93806695aa2'],1,12,13,1,0.75,1.0,1.0
2ec4daa28bf64800b44b67e0bd71ecc2d703ac8d,Split bind_params into encode_params and bind_params,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 18:26:06-06:00,21600,2014-02-28 18:26:06-06:00,21600,True,False,['query.py'],['16c2a854775d116a99d842de8c3eec9305de0993'],5,9,14,1,1.0,1.0,1.0
2662c0e9ceb7f43417bb6cfd2bef3bfed1a0dce4,Support v2 parameter passing,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 18:32:40-06:00,21600,2014-02-28 18:32:40-06:00,21600,True,False,['cluster.py'],['2ec4daa28bf64800b44b67e0bd71ecc2d703ac8d'],8,19,27,1,0.125,0.125,0.0
10a46d7c311d1e0eba07adbdfa882b01ebf225be,Basic BatchStatement execution support,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-02-28 18:33:08-06:00,21600,2014-02-28 18:33:08-06:00,21600,True,False,"['cluster.py', 'decoder.py']",['2662c0e9ceb7f43417bb6cfd2bef3bfed1a0dce4'],11,36,47,2,1.0,0.4444444444444444,0.7777777777777778
1938ad44d922f5781d8f4e6f08093e3e0473b0bb,1.0.2 Release,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-04 11:49:14-06:00,21600,2014-03-04 11:49:14-06:00,21600,True,False,"['CHANGELOG.rst', '__init__.py']",['26d7cd2a88cc21a41809d66aa211467db7c7584e'],2,2,4,2,,,
1f9ae57600932f59e54683b4de1e66ec8d9a2354,"Minor doc fixes, raise version to 1.0.2.post",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-04 11:54:43-06:00,21600,2014-03-04 11:54:43-06:00,21600,True,False,"['__init__.py', 'query.rst', 'getting_started.rst']",['1938ad44d922f5781d8f4e6f08093e3e0473b0bb'],6,2,8,3,,,
bf07af6d7f3f1810ab6f9d6b31ec061147689071,"Minor cleanup, add unit test for parsing

Affects #90",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-04 14:59:25-06:00,21600,2014-03-04 14:59:25-06:00,21600,True,False,"['cqltypes.py', 'decoder.py', 'test_types.py']",['2e2b212c0af0d1ee2a91c00d9bdc04cd77d14186'],18,64,82,3,0.2222222222222222,1.0,0.8148148148148148
33b69c06e124e03e8cc4fed68cf7c0d32920fb13,Use unittest2 for tests.unit.test_types,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-04 15:22:57-06:00,21600,2014-03-04 15:22:57-06:00,21600,True,False,['test_types.py'],['bf07af6d7f3f1810ab6f9d6b31ec061147689071'],1,5,6,1,,,
099d3c561d02b61d94e011d20bfb2d3f6b5d6315,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-04 15:24:47-06:00,21600,2014-03-04 15:24:47-06:00,21600,True,False,['CHANGELOG.rst'],['f9d026991e677c8150de5387af0f98e3155b8a55'],0,9,9,1,,,
9867eac8a8ad154bcd19f99a35a91a31627f4c20,Support for static columns,Mikhail Stepura,mikhail.stepura@outlook.com,Mikhail Stepura,mikhail.stepura@outlook.com,2014-03-04 14:18:06-08:00,28800,2014-03-04 14:18:06-08:00,28800,True,False,['metadata.py'],['099d3c561d02b61d94e011d20bfb2d3f6b5d6315'],3,7,10,1,1.0,1.0,0.0
49e90e07dc8896e89c909948056947efcb49f34a,"Docstring update, changelog update for static columns",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-04 16:32:01-06:00,21600,2014-03-04 16:32:01-06:00,21600,True,False,"['CHANGELOG.rst', 'metadata.py']",['9867eac8a8ad154bcd19f99a35a91a31627f4c20'],2,11,13,2,,,
1442b211c98b42e5f032a3a5de9d77339179f0a7,"Handle ""type"" column not being present",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-04 16:38:47-06:00,21600,2014-03-04 16:38:47-06:00,21600,True,False,['metadata.py'],['49e90e07dc8896e89c909948056947efcb49f34a'],1,1,2,1,,,
f0d3903985ea4837f022fc9218218e1a7889df9b,De-duplicate Connection implementations,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-04 18:44:48-06:00,21600,2014-03-04 18:44:48-06:00,21600,True,False,"['connection.py', 'asyncorereactor.py', 'geventreactor.py', 'libevreactor.py', 'test_gevent_connection.py']",['0a321bc9d7b6fbed279fe48966fe4ceebc962f03'],300,113,413,5,0.4154929577464789,0.18309859154929578,0.45774647887323944
94181676dbd38e2440c5af013f2caccab18c3487,"Ignore setuptools eggs, too",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-05 16:24:08-06:00,21600,2014-03-05 16:24:08-06:00,21600,True,False,['.gitignore'],['1442b211c98b42e5f032a3a5de9d77339179f0a7'],0,1,1,1,,,
3387d7d5a0b399d0435e2f74baf0501e5d14bcf1,Fix BatchType enum values,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-05 16:28:50-06:00,21600,2014-03-05 16:28:50-06:00,21600,True,False,['query.py'],['10a46d7c311d1e0eba07adbdfa882b01ebf225be'],2,2,4,1,,,
5e4152b6d48740268a4937535815c561144fdbd5,Fix failing unit test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-05 16:51:54-06:00,21600,2014-03-05 16:51:54-06:00,21600,True,False,['test_connection.py'],['f0d3903985ea4837f022fc9218218e1a7889df9b'],6,2,8,1,0.0,0.0,0.0
dff75adf4422e055a34d1bddda09e66a114f6396,Fixed a typo in the title.,Omer Katz,omer.drow@gmail.com,Omer Katz,omer.drow@gmail.com,2014-03-06 18:39:39+03:00,-10800,2014-03-06 18:39:39+03:00,-10800,True,False,['manage_schemas.rst'],['6f15b382b644fcdbe936c18e4abfa4577239f578'],3,3,6,1,,,
78b47453d31418c454c5089cc72d0293ea905f1c,Default to protocol version 2,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 12:42:21-06:00,21600,2014-03-06 12:42:21-06:00,21600,True,False,['cluster.py'],['3387d7d5a0b399d0435e2f74baf0501e5d14bcf1'],1,1,2,1,,,
4bc59a1207bf526de97e6e0c17bdacf77ee71cea,Switch from class-level params to init args,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 12:50:11-06:00,21600,2014-03-06 12:50:11-06:00,21600,True,False,"['cluster.py', 'decoder.py', 'test_control_connection.py', 'test_response_future.py']",['78b47453d31418c454c5089cc72d0293ea905f1c'],67,105,172,4,1.0,1.0,0.07142857142857142
536dce3651bf3b54e19715b889a0386254b7e7f4,Encode params but don't bind for batch statements,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 13:00:01-06:00,21600,2014-03-06 13:00:01-06:00,21600,True,False,['query.py'],['4bc59a1207bf526de97e6e0c17bdacf77ee71cea'],1,1,2,1,,,
122089c213bc7c35299d533839a6f85392cc1e2f,Pass protocol version to MessageType.send_body(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 13:01:16-06:00,21600,2014-03-06 13:01:16-06:00,21600,True,False,['decoder.py'],['536dce3651bf3b54e19715b889a0386254b7e7f4'],8,8,16,1,,,0.0
09eb5fac9e33b252fc202bd7101745d0bce8782e,Handle unbound params in v2 protocol QueryMessage,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 13:04:03-06:00,21600,2014-03-06 13:04:03-06:00,21600,True,False,['decoder.py'],['122089c213bc7c35299d533839a6f85392cc1e2f'],0,14,14,1,1.0,1.0,0.0
c1ee99f20f2e504655aa1916fb806bb7a158bc0d,Fix BatchMessage sub-query type checking,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 13:04:54-06:00,21600,2014-03-06 13:04:54-06:00,21600,True,False,['decoder.py'],['09eb5fac9e33b252fc202bd7101745d0bce8782e'],5,4,9,1,,,
97f028f3c4d41e1e4fe91945121016fa192f71d4,Basic integration test for BatchStatements,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 13:05:25-06:00,21600,2014-03-06 13:05:25-06:00,21600,True,False,['test_query.py'],['c1ee99f20f2e504655aa1916fb806bb7a158bc0d'],1,25,26,1,1.0,1.0,1.0
723109a81281bc145499f249f1684336d528d730,Switch integration tests to 2.0.5 for now,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 13:06:26-06:00,21600,2014-03-06 13:06:26-06:00,21600,True,False,['__init__.py'],['97f028f3c4d41e1e4fe91945121016fa192f71d4'],1,1,2,1,,,
87b208d66d5804b14916bb468af8908ece5343bb,Correctly clear ccm after changing C* version,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 13:06:45-06:00,21600,2014-03-06 13:06:45-06:00,21600,True,False,['__init__.py'],['723109a81281bc145499f249f1684336d528d730'],2,3,5,1,0.0,1.0,1.0
ca044108ba7c8a97214a5719157b0db590b1d678,Use prepared statements for benchmarks,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 16:22:08-06:00,21600,2014-03-06 16:22:08-06:00,21600,True,False,['base.py'],['94181676dbd38e2440c5af013f2caccab18c3487'],5,3,8,1,1.0,1.0,0.0
fb904b8e571b3847a5cd635e516a5aed25aba64c,"Ignore reference errors in the control conn

These frequently happen when the cluster is being shutdown
and the control connection is refreshing the schema or ring topology",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 16:47:07-06:00,21600,2014-03-06 16:47:07-06:00,21600,True,False,['cluster.py'],['87b208d66d5804b14916bb468af8908ece5343bb'],0,4,4,1,1.0,1.0,0.5
7cf500de2c73e296aacc2ba61f51b62070b6cc9a,"Undo param passing for non-prepared statements

There are a couple of reasons this can't be supported at the moment.

The first, and most serious, is that the passed parameters must be in
their binary form, not a string representation.  For non-prepared
statements, the driver doesn't know what Cassandra types it's dealing
with, so the best it can do is map python types to string formatting
functions (see cql_encoders).  It can't tell if it should convert 123 to
the Int32Type binary representation or the IntegerType binary
representation.  (Likewise for FloatType and DoubleType.)

Second, Cassandra doesn't accept a map of parameter names to parameter
values, so even though there are named placeholders, the driver would
have to parse the query string to handle a dict of parameters.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 16:51:07-06:00,21600,2014-03-06 16:51:07-06:00,21600,True,False,"['cluster.py', 'query.py', 'test_query.py']",['fb904b8e571b3847a5cd635e516a5aed25aba64c'],20,11,31,3,0.8571428571428571,0.8571428571428571,0.8571428571428571
7a78e037b843d343169433cafccf64aade2c0199,Actually fix BatchType enums this time,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 16:54:50-06:00,21600,2014-03-06 16:54:50-06:00,21600,True,False,['query.py'],['7cf500de2c73e296aacc2ba61f51b62070b6cc9a'],3,3,6,1,,,
5cb501d625accddc6b65731f276cacb1a5ac7cfa,Correct v2 ExecuteMessage encoding,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 16:55:21-06:00,21600,2014-03-06 16:55:21-06:00,21600,True,False,['decoder.py'],['7a78e037b843d343169433cafccf64aade2c0199'],24,21,45,1,0.0,0.0,1.0
335e6001f12ec7098f83eb8cb276131137163876,Bind non-prepared batch subqueries client-side,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 16:55:52-06:00,21600,2014-03-06 16:55:52-06:00,21600,True,False,['query.py'],['5cb501d625accddc6b65731f276cacb1a5ac7cfa'],9,9,18,1,0.0,0.0,0.0
dc6180be3ae32cd171b4eef31fb9efc6cd89f761,Silence control conn errors around shutdown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 17:16:03-06:00,21600,2014-03-06 17:16:03-06:00,21600,True,False,['cluster.py'],['335e6001f12ec7098f83eb8cb276131137163876'],3,14,17,1,0.7777777777777778,0.7777777777777778,0.0
aaabb2212375fbff0a27d677f5b09d070a569213,Fix max_compaction_threshold option in metadata,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 17:28:25-06:00,21600,2014-03-06 17:28:25-06:00,21600,True,False,"['CHANGELOG.rst', 'metadata.py']",['ca044108ba7c8a97214a5719157b0db590b1d678'],1,7,8,2,,,
b85ea02222fe7e848e16b44fe36c972285affd76,"Fix compaction, compression options when generating schemas",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 18:33:30-06:00,21600,2014-03-06 18:33:30-06:00,21600,True,False,['metadata.py'],['0e05a66f9b4979b684e9ec5033c0e70eb4780a51'],3,31,34,1,0.0,0.0,1.0
ee6d2cf56fab610ec149f1f1254de9fac8d194cf,"Correctly clear ccm after changing C* version

Conflicts:
	tests/integration/__init__.py",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 13:06:45-06:00,21600,2014-03-06 18:52:46-06:00,21600,True,False,['__init__.py'],['aaabb2212375fbff0a27d677f5b09d070a569213'],2,5,7,1,0.0,1.0,1.0
2503206132faf38ee344bf166979581c964f6345,"Fix compaction, compression options when generating schemas",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 18:33:30-06:00,21600,2014-03-06 18:52:46-06:00,21600,True,False,['metadata.py'],['ee6d2cf56fab610ec149f1f1254de9fac8d194cf'],2,30,32,1,0.0,0.0,1.0
253ce163689489b8c419d977d3283f6443487a79,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 18:52:27-06:00,21600,2014-03-06 18:53:21-06:00,21600,True,False,['CHANGELOG.rst'],['2503206132faf38ee344bf166979581c964f6345'],3,2,5,1,,,
e4e6e705c4ed5233996468cca26bfdf86c6a9d6a,"Ignore reference errors in the control conn

These frequently happen when the cluster is being shutdown
and the control connection is refreshing the schema or ring topology",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 16:47:07-06:00,21600,2014-03-06 18:58:29-06:00,21600,True,False,['cluster.py'],['253ce163689489b8c419d977d3283f6443487a79'],0,4,4,1,1.0,1.0,0.5
9a49fa0a9d746b88d18525bfa86a8623efa83cf1,Silence control conn errors around shutdown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 17:16:03-06:00,21600,2014-03-06 19:00:15-06:00,21600,True,False,['cluster.py'],['e4e6e705c4ed5233996468cca26bfdf86c6a9d6a'],3,14,17,1,0.7777777777777778,0.7777777777777778,0.0
bba3c67a8df67d4dda394390ab5db4f9fcddb421,Update missed unit test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 19:07:07-06:00,21600,2014-03-06 19:07:07-06:00,21600,True,False,['test_control_connection.py'],['9a49fa0a9d746b88d18525bfa86a8623efa83cf1'],0,2,2,1,,,
c0f3c27d7587d63d259652d89f5fc5986a55987b,Lowercase boolean literals when generating schemas,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-07 12:13:25-06:00,21600,2014-03-07 12:13:25-06:00,21600,True,False,"['CHANGELOG.rst', 'metadata.py', 'test_metadata.py']",['bba3c67a8df67d4dda394390ab5db4f9fcddb421'],3,4,7,3,,,
fe4e164077954d107060788fb608d54fb597ef1a,"Ignore setuptools eggs, too",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-05 16:24:08-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,['.gitignore'],['5e4152b6d48740268a4937535815c561144fdbd5'],0,1,1,1,,,
cfecef05b427a6774221235d570127205739e9e0,Use prepared statements for benchmarks,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 16:22:08-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,['base.py'],['fe4e164077954d107060788fb608d54fb597ef1a'],5,3,8,1,1.0,1.0,0.0
e7914e2444b488f1ceb4a8598eb764555f2c579e,Fix max_compaction_threshold option in metadata,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 17:28:25-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,"['CHANGELOG.rst', 'metadata.py']",['cfecef05b427a6774221235d570127205739e9e0'],1,7,8,2,,,
07375db7c99daef20c2f59e6207619bfce4a912d,"Correctly clear ccm after changing C* version

Conflicts:
	tests/integration/__init__.py",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 13:06:45-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,['__init__.py'],['e7914e2444b488f1ceb4a8598eb764555f2c579e'],2,5,7,1,0.0,1.0,1.0
6e1c8f91d99335345051839f93d7dbf753d38e90,"Fix compaction, compression options when generating schemas",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 18:33:30-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,['metadata.py'],['07375db7c99daef20c2f59e6207619bfce4a912d'],2,30,32,1,0.0,0.0,1.0
d446350e258abeaa650cbb987718308d3333ca79,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 18:52:27-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,['CHANGELOG.rst'],['6e1c8f91d99335345051839f93d7dbf753d38e90'],3,2,5,1,,,
977ccc541f67d532ed8e6d918272a4f21e71860c,"Ignore reference errors in the control conn

These frequently happen when the cluster is being shutdown
and the control connection is refreshing the schema or ring topology",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 16:47:07-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,['cluster.py'],['d446350e258abeaa650cbb987718308d3333ca79'],0,4,4,1,1.0,1.0,0.5
8d1ab29b53ff4574a364286d3deeabe0bc5548f9,Silence control conn errors around shutdown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 17:16:03-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,['cluster.py'],['977ccc541f67d532ed8e6d918272a4f21e71860c'],3,14,17,1,0.7777777777777778,0.7777777777777778,0.0
06938dde4e1bbfe6c9f3ffcce4f1f71527a364a0,Update missed unit test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-06 19:07:07-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,['test_control_connection.py'],['8d1ab29b53ff4574a364286d3deeabe0bc5548f9'],0,2,2,1,,,
10004e4cf318828b2fa8736520178e769f4c5364,Lowercase boolean literals when generating schemas,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-07 12:13:25-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,"['CHANGELOG.rst', 'metadata.py', 'test_metadata.py']",['06938dde4e1bbfe6c9f3ffcce4f1f71527a364a0'],3,4,7,3,,,
a352d58c134792d4798e71b8ef2db9537ad65369,Don't specify AsyncoreConnection for cluster test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-07 14:04:17-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,['test_cluster.py'],['10004e4cf318828b2fa8736520178e769f4c5364'],3,1,4,1,0.0,0.0,0.0
fdd4b062257c1b17626e7ece2974632751683990,Add gevent_nosetests command to setup.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-07 15:30:17-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,['setup.py'],['a352d58c134792d4798e71b8ef2db9537ad65369'],10,22,32,1,,,
67d12dda37bead1f7a4cb27621f54a175e25dca3,Minor fixes to GeventConnection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-07 15:35:51-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,['geventreactor.py'],['fdd4b062257c1b17626e7ece2974632751683990'],15,18,33,1,0.0,0.25,1.0
8c5b526ef06595fb874d4f2342ad57cd22e73432,Skip connection tests if monkey patched,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-07 15:50:37-06:00,21600,2014-03-07 15:51:11-06:00,21600,True,False,"['geventreactor.py', 'test_connection.py', 'test_gevent_connection.py']",['67d12dda37bead1f7a4cb27621f54a175e25dca3'],31,12,43,3,1.0,1.0,1.0
e5b751333cfcce22b5f10a0b2067760d5088bb9f,"Ingore SSL_ERROR_WANT_READ/WRITE errors

Before this change, the connection would be defuncted when the error
occurred.  Instead, these can safely be ignored and the recv() call
retried.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-07 16:32:13-06:00,21600,2014-03-07 16:32:13-06:00,21600,True,False,"['CHANGELOG.rst', 'asyncorereactor.py', 'libevreactor.py']",['c0f3c27d7587d63d259652d89f5fc5986a55987b'],2,13,15,3,0.0,0.0,0.5
1ef653da5931b17cbf33fef0d2c9edf221fc2c59,"fix(docs): add `import uuid` for Getting Started

For better copy & paste experience",Daniel,dmg.lab@outlook.com,Daniel,dmg.lab@outlook.com,2014-03-11 14:15:19+01:00,-3600,2014-03-11 14:15:19+01:00,-3600,True,False,['README.md'],['6f15b382b644fcdbe936c18e4abfa4577239f578'],0,1,1,1,,,
1c6660199b3f1b5ab6d054151a39cb3cd8ad73a1,reformatting,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-11 13:08:53-07:00,25200,2014-03-11 13:08:53-07:00,25200,True,False,['test_timestamp.py'],['6b0a4dc3bdba4bd4ca928e0e936b59f8ae3887b5'],11,5,16,1,,,
cc93d45f3cfc050742030b24023d63a6e2125c56,more formatting,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-11 13:27:12-07:00,25200,2014-03-11 13:27:12-07:00,25200,True,False,"['statements.py', 'test_queryset.py']",['1c6660199b3f1b5ab6d054151a39cb3cd8ad73a1'],42,43,85,2,0.0,1.0,1.0
b924eec0be5647783f6d4145cdac53627ce19f8c,adding setitem method to base model,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-11 13:43:16-07:00,25200,2014-03-11 13:47:59-07:00,25200,True,False,"['models.py', 'test_model_io.py']",['cc93d45f3cfc050742030b24023d63a6e2125c56'],0,11,11,2,0.75,1.0,0.25
a8d86c6cfc0d84d979b747daeed4f8761f0d520d,updating the changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-11 13:48:08-07:00,25200,2014-03-11 13:48:08-07:00,25200,True,False,['changelog'],['b924eec0be5647783f6d4145cdac53627ce19f8c'],2,2,4,1,,,
17d24bbab866342104eb8ea4f253940b0be4b121,adding documentation around model dict behavior,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-11 13:49:37-07:00,25200,2014-03-11 13:49:37-07:00,25200,True,False,['models.rst'],['a8d86c6cfc0d84d979b747daeed4f8761f0d520d'],0,21,21,1,,,
ff7a05abec4fc8d45dbcc51c0381e81cf66c8cdc,Better err message when libevwrapper is not found,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-11 19:08:26-05:00,18000,2014-03-11 19:08:26-05:00,18000,True,False,"['CHANGELOG.rst', 'libevreactor.py']",['e5b751333cfcce22b5f10a0b2067760d5088bb9f'],1,11,12,2,,,
877427ee179aab0846f52c4e9e4cae6781f0000f,"renames the map ""merge"" operation to ""update"" to be consistent with
the python dict method",Danny Cosson,dcosson@gmail.com,Danny Cosson,dcosson@gmail.com,2014-03-12 10:27:02-04:00,14400,2014-03-12 10:27:02-04:00,14400,True,False,"['statements.py', 'test_updates.py']",['0c74f37ae1509033a5b248ee42b00a6d6cb16682'],6,6,12,2,,,
83c1f151ef935e4dd0f39b0b986ca115c2e5c7a2,updating dict docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-12 10:50:55-07:00,25200,2014-03-12 10:50:55-07:00,25200,True,False,['models.rst'],['f45ffada1ab433bdbf8f92d0b03efdb0b4ba388f'],1,1,2,1,,,
fc140fcfc53ab3291e62c495949506614da55dd7,making the container update class selection logic more readable,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-12 10:57:24-07:00,25200,2014-03-12 10:57:24-07:00,25200,True,False,['query.py'],['83c1f151ef935e4dd0f39b0b986ca115c2e5c7a2'],6,9,15,1,0.0,0.0,1.0
3383c7171e7160c3c99e5e33e06f86f607122247,Remove unused method in GeventConnection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-12 18:19:49-05:00,18000,2014-03-12 18:19:49-05:00,18000,True,False,['geventreactor.py'],['8c5b526ef06595fb874d4f2342ad57cd22e73432'],4,0,4,1,0.0,0.0,0.0
182e5c5a06620093a7c53c81b9b8e91efb989309,Increment conn errors metrics on send_msg err,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-12 18:20:18-05:00,18000,2014-03-12 18:20:18-05:00,18000,True,False,['cluster.py'],['3383c7171e7160c3c99e5e33e06f86f607122247'],0,2,2,1,0.0,0.0,0.0
71eff2b6a4e4d7dffce4038e286cffed6595f688,adding documentation around blind container updates,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-12 16:28:39-07:00,25200,2014-03-12 16:28:39-07:00,25200,True,False,['queryset.rst'],['fc140fcfc53ab3291e62c495949506614da55dd7'],0,54,54,1,,,
3b05616fc404676f7b569ce337ee58f1782a89b6,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-12 16:30:47-07:00,25200,2014-03-12 16:30:47-07:00,25200,True,False,['changelog'],['71eff2b6a4e4d7dffce4038e286cffed6595f688'],0,1,1,1,,,
cf101be618bcbbfbd93ef3af012191f46717f74c,doing version bump,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-12 16:35:56-07:00,25200,2014-03-12 16:35:56-07:00,25200,True,False,"['changelog', 'VERSION']",['3b05616fc404676f7b569ce337ee58f1782a89b6'],2,2,4,2,,,
270c8ca68357f92999474fbf110fed7b01cdfdf2,Use proper way to access package resources.,Kevin Deldycke,kevin@deldycke.com,Kevin Deldycke,kevin@deldycke.com,2014-03-13 10:31:00+01:00,-3600,2014-03-13 10:31:00+01:00,-3600,True,False,['__init__.py'],['cf101be618bcbbfbd93ef3af012191f46717f74c'],1,4,5,1,,,
23b8b12fa5ecb0797849e65d2631577ef4d88cd1,compare against other instead of self in __eq__,Mike Hall,michael.aaron.hall@gmail.com,Mike Hall,michael.aaron.hall@gmail.com,2014-03-13 09:52:55-07:00,25200,2014-03-13 09:52:55-07:00,25200,True,False,['models.py'],['cf101be618bcbbfbd93ef3af012191f46717f74c'],1,1,2,1,,,
76a2e709a89740c2636924c9e1d04f700f22b4ec,Import Metrics (and scales) only when metrics_enabled == true,Mikhail Stepura,mikhail.stepura@outlook.com,Mikhail Stepura,mikhail.stepura@outlook.com,2014-03-13 11:01:27-07:00,25200,2014-03-13 11:01:27-07:00,25200,True,False,['cluster.py'],['ff7a05abec4fc8d45dbcc51c0381e81cf66c8cdc'],1,1,2,1,,,
c682c3c1004020ca3c027a72e723d449e10e262c,Initial migration to python 3 support,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-14 23:52:48+11:00,-39600,2014-03-14 23:52:48+11:00,-39600,True,False,"['setup.py', 'test_large_data.py', 'utils.py', 'test_metadata.py', 'test_types.py', 'test_asyncorereactor.py', 'test_libevreactor.py', 'test_connection.py', 'test_parameter_binding.py', 'test_policies.py', 'tox.ini']",['ff7a05abec4fc8d45dbcc51c0381e81cf66c8cdc'],21,47,68,11,,,
9b05f970e3ed293b63a279d59bf7400fd5dd0152,removing note about indices on models with multiple primary keys,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-14 14:29:42-07:00,25200,2014-03-14 14:29:42-07:00,25200,True,False,['models.rst'],['cf101be618bcbbfbd93ef3af012191f46717f74c'],2,0,2,1,,,
1c60261c2585730de7e1e15f839476a952051a6a,Tweaks to tox config to ensure that unittest2 is installed for python2.6,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-15 14:17:39+11:00,-39600,2014-03-15 14:17:39+11:00,-39600,True,False,"['.travis.yml', 'tox.ini']",['f0304161ef37f73812c3995641998308cfd6da43'],2,10,12,2,,,
f985e42be7cfbeea0c99b375f6cd3bb88c08fe88,Update to use six.moves for simplify import of libraries that have moved. All tests passing for pythons other than 3,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-17 01:47:48+11:00,-39600,2014-03-17 01:47:48+11:00,-39600,True,False,"['cluster.py', 'connection.py', 'cqltypes.py', 'decoder.py', 'encoder.py', 'asyncorereactor.py', 'libevreactor.py', 'murmur3.c', 'policies.py', 'pool.py', 'query.py', 'util.py', 'requirements.txt', 'setup.py', 'test_asyncorereactor.py', 'test_libevreactor.py', 'test_connection.py', 'test_parameter_binding.py', 'test_policies.py']",['1c60261c2585730de7e1e15f839476a952051a6a'],60,74,134,19,1.0,1.0,1.0
cc503f1bf0857a0c1834d70cf03133bf8aae8679,fixed camelCase naming for container column names,Nati CT,nati@everything.me,Nati CT,nati@everything.me,2014-03-16 16:51:25+02:00,-7200,2014-03-16 16:51:25+02:00,-7200,True,False,"['columns.py', 'test_container_columns.py']",['cf101be618bcbbfbd93ef3af012191f46717f74c'],2,22,24,2,1.0,1.0,1.0
558147698ab406324beb0cdb952785e99594dedf,"Migrate StringIO to six.BytesIO (has fallbacks), made use of more six defined types to simpify mapping",Tim Savage,tims@sakurasky.com,Tim Savage,tims@sakurasky.com,2014-03-17 18:20:44+11:00,-39600,2014-03-17 18:20:44+11:00,-39600,True,False,"['cluster.py', 'connection.py', 'decoder.py', 'encoder.py', 'asyncorereactor.py', 'libevreactor.py']",['f985e42be7cfbeea0c99b375f6cd3bb88c08fe88'],16,20,36,6,,,
324017b707c4b98566be676422958277b383b993,fix prepared statements in batch requests,JeremyOT,jeremyot@gmail.com,JeremyOT,jeremyot@gmail.com,2014-03-17 20:40:32-07:00,25200,2014-03-17 20:40:32-07:00,25200,True,False,"['decoder.py', 'query.py']",['562e2d4e4a326d76f12accc41bf20f4f3ef7fdd9'],6,8,14,2,0.5,0.5,0.0
03e3d3a08915e6cd1693ae98196413a040641bd1,"Fix race condition when setting callbacks

Prevents a race condition that may occur if the future returns
while a callback is being set.",JeremyOT,jeremyot@gmail.com,JeremyOT,jeremyot@gmail.com,2014-03-17 20:34:49-07:00,25200,2014-03-17 22:23:19-07:00,25200,True,False,['cluster.py'],['ff7a05abec4fc8d45dbcc51c0381e81cf66c8cdc'],8,19,27,1,1.0,1.0,0.18181818181818182
62e97f65f898f2e1b8c39e3ce157e6115289598a,"Initial implementation of python 3 decoder, for CQL protocol",Tim Savage,tims@sakurasky.com,Tim Savage,tims@sakurasky.com,2014-03-18 17:51:20+11:00,-39600,2014-03-18 17:51:20+11:00,-39600,True,False,"['__init__.py', 'decoder.py']",['558147698ab406324beb0cdb952785e99594dedf'],0,409,409,2,0.8071065989847716,1.0,0.649746192893401
714ef3234bcb488024bca1e4a8decdd6dce7b951,Migrated casandra23 into cassandra library. Ported more secions.,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-19 01:02:19+11:00,-39600,2014-03-19 01:02:19+11:00,-39600,True,False,"['cluster.py', 'connection.py', 'cqltypes.py', 'decoder.py', 'encoder.py', 'asyncorereactor.py', 'marshal.py', 'metadata.py', 'policies.py', '__init__.py', 'decoder.py', 'test_asyncorereactor.py', 'test_connection.py', 'test_marshalling.py', 'test_metadata.py']",['62e97f65f898f2e1b8c39e3ce157e6115289598a'],549,163,712,15,0.10582010582010581,0.0,0.328042328042328
297b41f294621c587961259805f037ad658f3b53,Add debug logging to node force up/down in tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-18 11:53:10-05:00,18000,2014-03-18 11:53:10-05:00,18000,True,False,['utils.py'],['54d0e9a8385d370a8bdbbb5ec012b22e723f8899'],0,7,7,1,1.0,1.0,0.2857142857142857
a8b2797a20ddb015c1c70695a044fd67bb8d1e9a,Update CHANGELOG,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-18 11:58:30-05:00,18000,2014-03-18 12:05:20-05:00,18000,True,False,['CHANGELOG.rst'],['8dcbd6d507ef6b253a3b07ddc68e049fe6d38231'],0,1,1,1,,,
2f6b9e5ca02d574207573d68d54fd46d0ae25c11,Don't reconnect control conn when Cluster.connect() is called,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-18 12:04:48-05:00,18000,2014-03-18 12:05:20-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['a8b2797a20ddb015c1c70695a044fd67bb8d1e9a'],11,14,25,2,,,
ca936e0f28484b86037c855d189a9ec9fb3afb25,"Update changelog

For issue #95",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-19 12:50:24-05:00,18000,2014-03-19 12:50:24-05:00,18000,True,False,['CHANGELOG.rst'],['755961dc669cea2669479e0c7095bfb031bfef83'],0,2,2,1,,,
1b263b3ee81daec8e5fd11aeb4f57ff6d4269996,"Handle BoundStmts in BatchStmt.add(), unit tests",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-19 13:49:25-05:00,18000,2014-03-19 13:49:25-05:00,18000,True,False,"['query.py', 'test_query.py']",['4425d8aa794eca95c12213991c0c0bc9215bcbde'],18,56,74,2,0.7931034482758621,0.7931034482758621,0.7931034482758621
844cc374826f146ea9b53af50fc4ed7dcb489c97,"Tests for empty params in add(), related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-19 13:57:50-05:00,18000,2014-03-19 13:57:50-05:00,18000,True,False,"['query.py', 'test_query.py']",['1b263b3ee81daec8e5fd11aeb4f57ff6d4269996'],2,17,19,2,1.0,1.0,1.0
a6a5935be33a5a09158f4df29ce8d52acd86ca98,Properly quote keyspace name in Session.set_keyspace(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-19 14:06:19-05:00,18000,2014-03-19 14:06:19-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['ca936e0f28484b86037c855d189a9ec9fb3afb25'],2,4,6,2,,,
ebe958dcfca824967dfe612ef1809c214cbb0d7a,Raise exception if credentials are used with v2 protocol,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-19 14:17:20-05:00,18000,2014-03-19 14:17:20-05:00,18000,True,False,['decoder.py'],['844cc374826f146ea9b53af50fc4ed7dcb489c97'],1,7,8,1,1.0,1.0,0.0
9c717bd7e5d25166779e4c0cf78bd9141a10d49b,Handle params=None when executing prepared stmt,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-19 15:33:55-05:00,18000,2014-03-19 15:33:55-05:00,18000,True,False,['query.py'],['ebe958dcfca824967dfe612ef1809c214cbb0d7a'],0,2,2,1,0.0,0.0,1.0
fadecb1237fd40e13f1b68d3784f99c074ed9ddf,Actually execute batch in integration test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-19 15:35:35-05:00,18000,2014-03-19 15:35:35-05:00,18000,True,False,['test_query.py'],['9c717bd7e5d25166779e4c0cf78bd9141a10d49b'],4,6,10,1,1.0,1.0,1.0
dbcd9a46f856d5b2e850a34a5694205c0612ca0f,Serial consistency level support,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-19 15:52:47-05:00,18000,2014-03-19 15:52:47-05:00,18000,True,False,"['cluster.py', 'decoder.py', 'query.py', 'test_query.py']",['fadecb1237fd40e13f1b68d3784f99c074ed9ddf'],6,137,143,4,0.6875,0.6875,0.65
f7727a6b966f203858a2c56c35ae586d982c65e5,First steps towards auto paging support,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-19 17:14:11-05:00,18000,2014-03-19 17:14:11-05:00,18000,True,False,"['cluster.py', 'decoder.py', 'query.py']",['dbcd9a46f856d5b2e850a34a5694205c0612ca0f'],20,98,118,3,0.03571428571428571,0.05357142857142857,0.17857142857142858
01015ceb096649ada50f34d8d035d012f30b889f,Avoid adding hosts to load balancing policy without DC/rack info,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-19 18:00:59-05:00,18000,2014-03-19 18:00:59-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py', 'metadata.py', 'policies.py', 'pool.py', 'test_control_connection.py']",['a6a5935be33a5a09158f4df29ce8d52acd86ca98'],13,33,46,6,0.75,0.75,0.0
558910e804566a36c16c1d0431b359d3cd1d3db4,"All marshaling is working by supported pythons (26, 27, 33, pypy).

Have taken the approach of replacing methods at module load time (using if six.PY2). Much of this has been required where the assumption has been made that strings are not unicode, this of course is not true of Python 3",Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-21 00:33:05+11:00,-39600,2014-03-21 00:33:05+11:00,-39600,True,False,"['cqltypes.py', 'encoder.py', 'marshal.py', 'metadata.py', 'policies.py', 'query.py', 'test_marshalling.py', 'test_metadata.py', 'test_types.py']",['714ef3234bcb488024bca1e4a8decdd6dce7b951'],112,150,262,9,1.0,1.0,1.0
6440e7f670221cdc2b72af952ee1c35d5e9eacb8,Added a __hash__ method for python 3,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-21 00:56:29+11:00,-39600,2014-03-21 00:56:29+11:00,-39600,True,False,['pool.py'],['4a7361b258dd24bee92f0ffac25da0693ada028c'],0,3,3,1,1.0,1.0,1.0
e6775c5ef1a16ac7be2ba12b1c74b7eb838d6f36,Added workaround in test cases for deprecated  assertItemsEqual method,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-21 01:03:15+11:00,-39600,2014-03-21 01:03:15+11:00,-39600,True,False,['test_metadata.py'],['6440e7f670221cdc2b72af952ee1c35d5e9eacb8'],0,6,6,1,1.0,1.0,1.0
7022758f93df54bb7fea98c238a8b48d0539ecfd,"Added __lt__ method to Host to allow sorted to work in Python 3, fixed __str__ method to return a string.",Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-21 01:12:34+11:00,-39600,2014-03-21 01:12:34+11:00,-39600,True,False,['pool.py'],['e6775c5ef1a16ac7be2ba12b1c74b7eb838d6f36'],1,4,5,1,1.0,1.0,1.0
4a03fce48e69b9c4101a27acd01fd1867f89730a,"Python 3 compatibility, use next method to get next item from generator",Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-21 01:50:25+11:00,-39600,2014-03-21 01:50:25+11:00,-39600,True,False,['pool.py'],['7022758f93df54bb7fea98c238a8b48d0539ecfd'],1,1,2,1,,,
f0990e164ff7d6fcde401c5f19d0706d2cd99d4e,"Replaced final instances of dict.iteritems with six.iteritems wrapper, fixed made  Token sortable",Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-21 02:31:39+11:00,-39600,2014-03-21 02:33:42+11:00,-39600,True,False,"['cluster.py', 'cqltypes.py', 'metadata.py']",['4a03fce48e69b9c4101a27acd01fd1867f89730a'],5,8,13,3,1.0,1.0,1.0
ba7298813595b3ae2466a4167b10a3086d46713f,Fixed missing code block from a bad merge,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-21 02:33:59+11:00,-39600,2014-03-21 02:33:59+11:00,-39600,True,False,['decoder.py'],['f0990e164ff7d6fcde401c5f19d0706d2cd99d4e'],0,4,4,1,0.0,1.0,1.0
1765c3f1e66f48a65c14f7270e6476073c758b0c,Also update control conn node topology correctly,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-20 11:19:06-05:00,18000,2014-03-20 11:19:06-05:00,18000,True,False,['cluster.py'],['01015ceb096649ada50f34d8d035d012f30b889f'],1,3,4,1,0.0,0.0,1.0
2fb3e9e440fc9b4c010cdbae4846a09c5dd0a094,Avoid timeouts on large data tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-20 13:55:11-05:00,18000,2014-03-20 13:55:11-05:00,18000,True,False,['test_large_data.py'],['297b41f294621c587961259805f037ad658f3b53'],4,5,9,1,0.0,0.0,0.0
24f7946b18db5cf7c28842b3dc9dacb5e5258457,"Update changelog, make next version 1.1.0",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-20 14:07:07-05:00,18000,2014-03-20 14:07:07-05:00,18000,True,False,['CHANGELOG.rst'],['4dedcea8c9a319b2709988dbf3b284efedb5a606'],1,2,3,1,,,
79a4494a8f72ddf1deaf4abeed6074d67aadb74c,Add ticket numbers to changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-20 14:13:27-05:00,18000,2014-03-20 14:13:27-05:00,18000,True,False,['CHANGELOG.rst'],['24f7946b18db5cf7c28842b3dc9dacb5e5258457'],1,2,3,1,,,
109c019836c229ee317e4867def49ec2fbe9dde2,adding tests around equality,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-20 16:32:14-07:00,25200,2014-03-20 16:32:14-07:00,25200,True,False,['test_model.py'],['9b05f970e3ed293b63a279d59bf7400fd5dd0152'],0,33,33,1,1.0,1.0,1.0
31d3ae10595ba2e4766f517b8d40dc48c2d53636,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-20 16:38:24-07:00,25200,2014-03-20 16:38:24-07:00,25200,True,False,['changelog'],['8d5bc202081a0185166c904b1eb8f388b09e8bb8'],0,2,2,1,,,
48b33772d6b942c8323d56a51c0ce937974c6f34,removing unused import,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-20 16:46:53-07:00,25200,2014-03-20 16:46:53-07:00,25200,True,False,['__init__.py'],['45f90b79160bd48b67f28972fd55e0c89be74137'],1,0,1,1,,,
2fb3d5abe7897a946e1338ea3d83cbb79b5494f1,updating changelog,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-20 16:48:04-07:00,25200,2014-03-20 16:48:04-07:00,25200,True,False,['changelog'],['48b33772d6b942c8323d56a51c0ce937974c6f34'],0,1,1,1,,,
65f2ef9216609d7b4fd818c5d5fba1b01b7b24e8,updating authors list,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-03-20 17:32:08-07:00,25200,2014-03-20 17:32:08-07:00,25200,True,False,['AUTHORS'],['2fb3d5abe7897a946e1338ea3d83cbb79b5494f1'],2,8,10,1,,,
79219416eb7d391e0e1e42c771c001b4b5700749,"Change approach to adding a metaclass to six.add_metaclass, update metaclasses to not look for NewBase",Tim Savage,tims@sakurasky.com,Tim Savage,tims@sakurasky.com,2014-03-21 11:33:23+11:00,-39600,2014-03-21 11:33:23+11:00,-39600,True,False,"['cqltypes.py', 'decoder.py']",['ba7298813595b3ae2466a4167b10a3086d46713f'],6,9,15,2,,,
3905acf31c91171d71a5daad0940db9a68cd3286,Remove a commented out block used during development to disable exception handling.,Tim Savage,tims@sakurasky.com,Tim Savage,tims@sakurasky.com,2014-03-21 11:45:36+11:00,-39600,2014-03-21 11:45:36+11:00,-39600,True,False,['connection.py'],['79219416eb7d391e0e1e42c771c001b4b5700749'],2,0,2,1,,,
f304b3d456ee854e87cc16d0319e8f1f82873252,document and restructure acceptance,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-20 20:13:16-05:00,18000,2014-03-20 20:13:16-05:00,18000,True,False,['query.py'],['d0c66e0b0515cd110250cf2c84c68440b4157780'],14,27,41,1,0.0,0.0,1.0
9ecd98171a3c7b56eeb04309e27a9e9e8a48c773,Test cases for binding dicts,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-20 21:05:14-05:00,18000,2014-03-20 21:05:14-05:00,18000,True,False,['test_prepared_statements.py'],['7eaba41ffdd13308001849783b9c0988aa3e2159'],0,123,123,1,0.27631578947368424,1.0,1.0
dd7d1c2aee2c1441757361ace91f544bd78207c4,Python 3 support in benchmarks. This is still dependant on the scales library that is not yet python 3 compatible.,Tim Savage,tims@sakurasky.com,Tim Savage,tims@sakurasky.com,2014-03-21 14:27:21+11:00,-39600,2014-03-21 14:27:21+11:00,-39600,True,False,"['base.py', 'callback_full_pipeline.py', 'future_batches.py', 'future_full_pipeline.py', 'future_full_throttle.py', 'sync.py']",['3905acf31c91171d71a5daad0940db9a68cd3286'],14,16,30,6,,,
3fa213362558e46c93df6059434536e97fd561d9,Remove erroneous additional parentheses.,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-21 23:20:13+11:00,-39600,2014-03-21 23:20:13+11:00,-39600,True,False,['base.py'],['dd7d1c2aee2c1441757361ace91f544bd78207c4'],2,2,4,1,,,
e32d79f4519247058cc5603fcc0cd92d4d3c3624,Fixed call to next,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-22 00:09:37+11:00,-39600,2014-03-22 00:09:37+11:00,-39600,True,False,['callback_full_pipeline.py'],['3fa213362558e46c93df6059434536e97fd561d9'],2,2,4,1,,,
d3ecd5a4a601706d1c992ed874ffd6bd155d1144,Updated murmur3 c extension to work with Python 3. Changed murmur3 import to be absolute.,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-22 01:07:21+11:00,-39600,2014-03-22 01:07:21+11:00,-39600,True,False,"['metadata.py', 'murmur3.c']",['e32d79f4519247058cc5603fcc0cd92d4d3c3624'],15,62,77,2,1.0,1.0,0.7333333333333333
47bf482c6b54082c42c34312acf6444d6aa4b578,Server has a valid error code of 0,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-22 10:55:12+11:00,-39600,2014-03-22 10:55:12+11:00,-39600,True,False,['decoder.py'],['d3ecd5a4a601706d1c992ed874ffd6bd155d1144'],1,1,2,1,,,
9b620abb69eb710d07ea10f9cb7b9f81bac9e434,Remove un-used methods,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-22 11:10:10+11:00,-39600,2014-03-22 11:10:10+11:00,-39600,True,False,['marshal.py'],['47bf482c6b54082c42c34312acf6444d6aa4b578'],6,0,6,1,,,
36bdd896750aba96046bd988f73ad4d079cc9113,Added bytes for python 3,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-22 11:10:34+11:00,-39600,2014-03-22 11:10:34+11:00,-39600,True,False,['encoder.py'],['9b620abb69eb710d07ea10f9cb7b9f81bac9e434'],0,1,1,1,,,
b56ad8587dce48314f8f45ed77ef4aecb2946302,Add comments to more explicitly state the process in cql_quote,Tim Savage,tim.savage@poweredbypenguins.org,Tim Savage,tim.savage@poweredbypenguins.org,2014-03-22 11:19:56+11:00,-39600,2014-03-22 11:19:56+11:00,-39600,True,False,['encoder.py'],['36bdd896750aba96046bd988f73ad4d079cc9113'],0,6,6,1,,,
db4a3eacb67e3feea17a0eb738c89b712ae9d783,Update Cassandra test version,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-24 14:16:10-05:00,18000,2014-03-24 14:16:10-05:00,18000,True,False,['__init__.py'],['79a4494a8f72ddf1deaf4abeed6074d67aadb74c'],1,1,2,1,,,
5402efc4718245dba5f7bb2d039fdfbbe02d94f7,Add pytz to tests_require,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-24 15:23:38-05:00,18000,2014-03-24 15:23:38-05:00,18000,True,False,['setup.py'],['f7727a6b966f203858a2c56c35ae586d982c65e5'],1,1,2,1,,,
c38911309b4fcc2f98f8823ec7aa160b14c09f1d,Bump 2.0 Cassandra test version,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-24 15:24:02-05:00,18000,2014-03-24 15:24:02-05:00,18000,True,False,['__init__.py'],['5402efc4718245dba5f7bb2d039fdfbbe02d94f7'],1,1,2,1,,,
549f56c4fe2beafd7f81e52954cf0894dc8e2f58,Use new decoder path,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-24 15:24:37-05:00,18000,2014-03-24 15:24:37-05:00,18000,True,False,['utils.py'],['c38911309b4fcc2f98f8823ec7aa160b14c09f1d'],1,1,2,1,,,
4e8154305f5888000f51b05e4adf4886868512ab,Add pytz to tests_require,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-24 15:23:38-05:00,18000,2014-03-24 15:26:05-05:00,18000,True,False,['setup.py'],['db4a3eacb67e3feea17a0eb738c89b712ae9d783'],1,1,2,1,,,
b1c40aea4875d2d3fa7e125f62b616852aae0b35,Add jenkins visibility,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-24 16:50:48-05:00,18000,2014-03-24 16:50:48-05:00,18000,True,False,['__init__.py'],['549f56c4fe2beafd7f81e52954cf0894dc8e2f58'],0,1,1,1,0.0,1.0,1.0
bd6d474e2e1df1e88bc3b99b2d70e60dff78ec04,Missed factory change,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-24 16:51:07-05:00,18000,2014-03-24 16:51:07-05:00,18000,True,False,['test_large_data.py'],['b1c40aea4875d2d3fa7e125f62b616852aae0b35'],1,1,2,1,,,
50bdeba692c813c081f89cc9247f679fd60b4497,"Fixes #97, error following 'DROP TABLE'.

Following 'DROP TABLE', metadata.py was raising KeyError in line 162,
which resulted in cluster conn being terminated. Resolved this with
checking if the key (the name of the dropped table) exists.",Mik Kocikowski,mkocikowski@gmail.com,Mik Kocikowski,mkocikowski@gmail.com,2014-03-26 02:01:09-07:00,25200,2014-03-26 02:01:09-07:00,25200,True,False,['metadata.py'],['4e8154305f5888000f51b05e4adf4886868512ab'],1,2,3,1,1.0,1.0,0.0
cef38112e15ceb09d7b14170ec46d8c4b069b119,Use pop instead of del if exists,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-26 11:42:50-05:00,18000,2014-03-26 11:42:50-05:00,18000,True,False,['metadata.py'],['50bdeba692c813c081f89cc9247f679fd60b4497'],2,1,3,1,0.0,0.0,1.0
08a46670d440e2425e69df1c7a28e8960a58ede7,"Update changelog

Fixes issues #97 and #98",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-26 11:43:44-05:00,18000,2014-03-26 11:43:44-05:00,18000,True,False,['CHANGELOG.rst'],['cef38112e15ceb09d7b14170ec46d8c4b069b119'],0,2,2,1,,,
010f61fdd8302104f90163ef784a15cc52b76f22,Add debug logging around trace fetching,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-26 14:35:58-05:00,18000,2014-03-26 14:35:58-05:00,18000,True,False,['query.py'],['08a46670d440e2425e69df1c7a28e8960a58ede7'],0,4,4,1,0.0,0.0,1.0
be1b55a2e9f7ca99727cddf90142f3b234e272a7,"assertEquals is deprecated, use assertEqual",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-26 14:53:43-05:00,18000,2014-03-26 14:53:43-05:00,18000,True,False,"['test_cluster.py', 'test_metadata.py', 'test_prepared_statements.py', 'test_query.py', 'test_types.py', 'test_asyncorereactor.py', 'test_libevreactor.py', 'test_parameter_binding.py', 'test_policies.py', 'test_response_future.py', 'test_types.py']",['b56ad8587dce48314f8f45ed77ef4aecb2946302'],66,67,133,11,,,
cd9ec7cc7a8b60e1178b371156363c173f808d78,"Account for CASSANDRA-6942 in tracing tests

Fixes PYTHON-57",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-03-27 11:52:35-05:00,18000,2014-03-27 11:52:35-05:00,18000,True,False,['test_cluster.py'],['010f61fdd8302104f90163ef784a15cc52b76f22'],2,14,16,1,0.5454545454545454,1.0,1.0
0183ef52fc53adaefd4881dd657b152526ec46cd,Create and switch the PROTOCOL_VERSION for tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-27 14:35:06-05:00,18000,2014-03-27 14:35:06-05:00,18000,True,False,"['__init__.py', 'test_consistency.py', 'test_large_data.py', 'test_schema.py', 'test_cluster.py', 'test_connection.py', 'test_factories.py', 'test_metadata.py', 'test_metrics.py', 'test_prepared_statements.py', 'test_query.py', 'test_types.py']",['bd6d474e2e1df1e88bc3b99b2d70e60dff78ec04'],77,105,182,12,0.0,1.0,0.8333333333333334
60ce865712c69313a0fd81ec0bf76dc9822afe5f,Allow PROTOCOL_VERSION to be set by envar,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-27 14:42:57-05:00,18000,2014-03-27 14:42:57-05:00,18000,True,False,['__init__.py'],['0183ef52fc53adaefd4881dd657b152526ec46cd'],2,5,7,1,,,
ab55240eaa48be5d93de00e027950e5735a50d95,Cast PROTOCOL_VERSION to an int when using envars,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-28 13:32:22-05:00,18000,2014-03-28 13:32:22-05:00,18000,True,False,['__init__.py'],['60ce865712c69313a0fd81ec0bf76dc9822afe5f'],1,1,2,1,,,
25f73920c089b65a61b1d670f0aeae706d63a084,Update SkipTest logic to rely on PROTOCOL_VERSION,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-03-28 13:41:12-05:00,18000,2014-03-28 13:41:12-05:00,18000,True,False,['test_query.py'],['60ce865712c69313a0fd81ec0bf76dc9822afe5f'],8,6,14,1,0.0,0.0,0.0
1f5db571fe6dd0a00907a91ff92938e13a013a4a,Basic working query paging,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-02 18:10:17-05:00,18000,2014-04-02 18:10:17-05:00,18000,True,False,"['cluster.py', 'test_response_future.py']",['567655c6b06e8072bc4e52e3d1a07ae11101d7d7'],25,76,101,2,0.46875,0.4375,0.9375
c488c726d02a23fc2e274b0269f4ded63773c8f6,Catch Empty exception on connection id queue properly,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-02 18:10:28-05:00,18000,2014-04-02 18:10:28-05:00,18000,True,False,['connection.py'],['1f5db571fe6dd0a00907a91ff92938e13a013a4a'],3,3,6,1,,,
a84a222bddf98f16944383d268ee41d16563830a,"Correct catch Empty exception on connection id queue

Broken in master, but not in any release",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-02 18:16:58-05:00,18000,2014-04-02 18:16:58-05:00,18000,True,False,['connection.py'],['cd9ec7cc7a8b60e1178b371156363c173f808d78'],3,3,6,1,,,
2b30693ca5b9f44fb29d72dd3b736a01f4e8c58a,Make callback once per page in result,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 11:15:26-05:00,18000,2014-04-03 11:15:26-05:00,18000,True,False,['cluster.py'],['c488c726d02a23fc2e274b0269f4ded63773c8f6'],25,13,38,1,0.0,1.0,0.0
667a5cab50e387fbaec450ce3f0b061c93d17f30,Debian packaging,paul cannon,paul@spacemonkey.com,paul cannon,paul@spacemonkey.com,2014-04-03 11:49:10-06:00,21600,2014-04-03 13:09:05-06:00,21600,True,False,"['changelog', 'compat', 'control', 'copyright', '0001-don-t-use-ez_setup.patch', 'series', 'python-cassandra-driver-dbg.install', 'python-cassandra-driver-doc.docs', 'python-cassandra-driver.install', 'rules', 'format']",['a84a222bddf98f16944383d268ee41d16563830a'],0,145,145,11,,,
6d437f078fd3c514cc3604971ce74a2492693361,Integration tests for query paging,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 14:20:05-05:00,18000,2014-04-03 14:20:05-05:00,18000,True,False,['test_query_paging.py'],['2b30693ca5b9f44fb29d72dd3b736a01f4e8c58a'],0,111,111,1,0.5970149253731343,1.0,0.8955223880597015
f7142c3877a9e2e7fa6f5ce649499184bc6147bf,Documentation for auto paging,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 15:11:13-05:00,18000,2014-04-03 15:11:13-05:00,18000,True,False,"['cluster.py', 'query.py', 'cluster.rst', 'index.rst', 'query_paging.rst']",['6d437f078fd3c514cc3604971ce74a2492693361'],3,141,144,5,,,
510cb59213c2085f0724664911df39e5914ca563,"Add methods for concurrent execution

Fixes #7",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 16:44:08-05:00,18000,2014-04-03 16:44:08-05:00,18000,True,False,"['concurrent.py', 'test_concurrent.py']",['f7142c3877a9e2e7fa6f5ce649499184bc6147bf'],0,261,261,2,0.4859154929577465,0.4859154929577465,0.47183098591549294
f5e24f0059782608e4520b611c2b00eb9f458509,Clear table for query paging test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 16:57:37-05:00,18000,2014-04-03 16:57:37-05:00,18000,True,False,['test_query_paging.py'],['510cb59213c2085f0724664911df39e5914ca563'],0,1,1,1,1.0,1.0,1.0
3115c4bf3b88b41d73a8cd9c2740010fbb732edc,"Add methods for concurrent execution

Fixes #7",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 16:44:08-05:00,18000,2014-04-03 17:05:58-05:00,18000,True,False,"['concurrent.py', 'test_concurrent.py']",['11f865e65e1a5a4fe79c82cf476051960af98eec'],0,261,261,2,0.4859154929577465,0.4859154929577465,0.47183098591549294
23f71e50a884386683c317bec1b3b555853aa258,Use absolute imports in cassandra.cluster,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 17:00:05-05:00,18000,2014-04-03 17:05:58-05:00,18000,True,False,['cluster.py'],['3115c4bf3b88b41d73a8cd9c2740010fbb732edc'],0,1,1,1,,,
ff1532bf7d432e2015c97a492d7bf4f5d61b085a,Make test_concurrent compatible with master,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 17:05:20-05:00,18000,2014-04-03 17:05:58-05:00,18000,True,False,['test_concurrent.py'],['23f71e50a884386683c317bec1b3b555853aa258'],4,2,6,1,,,
858c9358460c0b5959b9ea7abb9cfe1f19eaf5b0,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 17:09:09-05:00,18000,2014-04-03 17:09:09-05:00,18000,True,False,['CHANGELOG.rst'],['ff1532bf7d432e2015c97a492d7bf4f5d61b085a'],0,3,3,1,,,
e76a838158603892a4255136153959615ee10ebf,Docs for cassandra.concurrent,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 17:14:01-05:00,18000,2014-04-03 17:14:01-05:00,18000,True,False,"['concurrent.rst', 'index.rst']",['858c9358460c0b5959b9ea7abb9cfe1f19eaf5b0'],0,9,9,2,,,
79e558ad77b9577cbe8aae630f8a477be38dd91f,Use python3-compactible except syntax,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 17:50:04-05:00,18000,2014-04-03 17:50:04-05:00,18000,True,False,['connection.py'],['9d4c7842c123f68b90ba533b623c9163add64f62'],1,1,2,1,,,
a5f4682b6d91df6ae27a06fae95571f5b64febdb,Use exc_info for logging tracebacks,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 17:52:48-05:00,18000,2014-04-03 17:52:48-05:00,18000,True,False,['connection.py'],['79e558ad77b9577cbe8aae630f8a477be38dd91f'],7,2,9,1,1.0,0.0,0.0
8b84af3c2422ead7ec73ba4958bf1518783fa991,Use sys.get/setswitchinterval on python 3,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 17:56:37-05:00,18000,2014-04-03 17:56:37-05:00,18000,True,False,['test_policies.py'],['a5f4682b6d91df6ae27a06fae95571f5b64febdb'],3,14,17,1,0.0,0.0,1.0
541576aac345ff2f0714d4fe72fa07b51e45bf5c,Handle no nosetests in setup.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 17:57:06-05:00,18000,2014-04-03 17:57:06-05:00,18000,True,False,['setup.py'],['8b84af3c2422ead7ec73ba4958bf1518783fa991'],4,7,11,1,,,
03b8e086536eb6eed2302b95ca03c5a0781c498d,Use log.warning instead of log.warn,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 18:00:21-05:00,18000,2014-04-03 18:00:21-05:00,18000,True,False,"['cluster.py', 'connection.py', 'decoder.py', 'pool.py']",['541576aac345ff2f0714d4fe72fa07b51e45bf5c'],18,18,36,4,,,
52eb86d2de11219521da570f6f5770e66f633c64,Start fixing integration tests for python 3,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-03 19:10:49-05:00,18000,2014-04-03 19:10:49-05:00,18000,True,False,"['concurrent.py', 'cqltypes.py', '__init__.py', 'test_concurrent.py', 'test_query.py', 'test_query_paging.py', 'test_types.py']",['03b8e086536eb6eed2302b95ca03c5a0781c498d'],30,35,65,7,,,
7e512d282714d4c59e44bb17eb9b9665c482d5e2,"Correctly encode blobs for python3, fix related tests",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-04 12:37:47-05:00,18000,2014-04-04 12:37:47-05:00,18000,True,False,"['encoder.py', 'test_types.py']",['52eb86d2de11219521da570f6f5770e66f633c64'],10,23,33,2,1.0,1.0,1.0
7f519a08ebcc2f36a001b9c63dcb47d3c4f8ec76,Use bytes literals for joining routing key components,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-04 12:38:29-05:00,18000,2014-04-04 12:38:29-05:00,18000,True,False,['query.py'],['7e512d282714d4c59e44bb17eb9b9665c482d5e2'],3,3,6,1,,,
74000bbbee9a927c0d5417f6bd28e3b95fa6f316,Handle iterating filter() result in python3,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-04 12:39:01-05:00,18000,2014-04-04 12:39:01-05:00,18000,True,False,['test_metadata.py'],['7f519a08ebcc2f36a001b9c63dcb47d3c4f8ec76'],1,1,2,1,,,
80dd5fe1cba7baec6e217f240cc16edbadb2165d,Stream ID in header is a signed byte,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-04 12:58:04-05:00,18000,2014-04-04 12:58:04-05:00,18000,True,False,['marshal.py'],['74000bbbee9a927c0d5417f6bd28e3b95fa6f316'],2,2,4,1,,,
0350498f0076ecc90f54dd7ad0bf96a11a980529,Replace .next() calls with next() function,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-04 14:00:22-05:00,18000,2014-04-04 14:00:22-05:00,18000,True,False,"['connection.py', 'pool.py', 'util.py']",['80dd5fe1cba7baec6e217f240cc16edbadb2165d'],4,4,8,3,,,
3ea9d674283eb14a25a500f57c70310fc69b52ba,"Longer sleep when waiting for down node, log on sleeps",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-04 14:43:50-05:00,18000,2014-04-04 14:43:50-05:00,18000,True,False,['utils.py'],['0350498f0076ecc90f54dd7ad0bf96a11a980529'],1,3,4,1,1.0,1.0,0.0
3d5e55e85eff68a65a22eca0316fe3aadb94f4fa,Avoid float indexes on python3,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-04 14:44:25-05:00,18000,2014-04-04 14:44:25-05:00,18000,True,False,['test_large_data.py'],['3ea9d674283eb14a25a500f57c70310fc69b52ba'],1,1,2,1,,,
ecd0378ebd7435cab7a053c8f89cb55dd5dee2db,"Don't use columns named ""if""",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-04 14:44:48-05:00,18000,2014-04-04 14:44:48-05:00,18000,True,False,['test_large_data.py'],['3d5e55e85eff68a65a22eca0316fe3aadb94f4fa'],0,2,2,1,1.0,1.0,1.0
41189dfdda55d8cf83f8c3733cb4789d2c10945c,Lower likelihood of server-side timeouts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-04 14:45:25-05:00,18000,2014-04-04 14:45:25-05:00,18000,True,False,['test_large_data.py'],['ecd0378ebd7435cab7a053c8f89cb55dd5dee2db'],16,9,25,1,0.0,0.0,0.0
e056901de1781e7811dee222c43332187154b579,Add six to tox.ini deps,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-04 14:57:29-05:00,18000,2014-04-04 14:57:29-05:00,18000,True,False,['tox.ini'],['41189dfdda55d8cf83f8c3733cb4789d2c10945c'],0,2,2,1,,,
f979435d04d37ffb7a222c3e56fbcea2abb62821,"Update supported languages, platforms in setup.py",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-04 15:02:43-05:00,18000,2014-04-04 15:02:43-05:00,18000,True,False,['setup.py'],['e056901de1781e7811dee222c43332187154b579'],0,4,4,1,0.0,1.0,1.0
944c22ad512c3125061ebd56d36d9a89dd32ceb0,"When creating a new connection use the same query

When a new control connection is made a table is queried multiple times before
the control connection is established. This patch combines the queries to that table
by using ""preloaded"" results. This seemed like a minimal way to make the change, but
might not necessarily be the best way. Let me know if you feel like a different approach
should be used.",Samuel Toriel,samuel.toriel@rackspace.com,Samuel Toriel,samuel.toriel@rackspace.com,2014-04-07 16:39:14-04:00,14400,2014-04-07 20:13:31-04:00,14400,True,False,"['cluster.py', 'test_control_connection.py']",['e76a838158603892a4255136153959615ee10ebf'],40,146,186,2,0.4852941176470588,0.7794117647058824,0.0
4476bda0e782822eedc06122ef5840f2363839a7,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-08 11:41:35-05:00,18000,2014-04-08 11:41:35-05:00,18000,True,False,['CHANGELOG.rst'],['f612f5da07354fe79d46445d00f28a46d45057f2'],0,3,3,1,,,
7c6c24001f62abe86dc546343dcd43461bd966b6,Issue warning log when schema versions don't match,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-08 11:58:23-05:00,18000,2014-04-08 11:58:23-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['4476bda0e782822eedc06122ef5840f2363839a7'],9,15,24,2,0.0,0.0,0.0
69c56bde15a7d6c03fdc91bbc967bf8b6efdfee3,Add loadbalancing tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-03 14:27:35-05:00,18000,2014-04-08 17:38:44-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['7c6c24001f62abe86dc546343dcd43461bd966b6'],0,518,518,1,0.21107266435986158,0.9480968858131488,0.7854671280276817
910d357beb99e2d8fdfda990a24a738ab2353b77,"Multiple cluster support

Conflicts:
	tests/integration/__init__.py",Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-03 14:32:39-05:00,18000,2014-04-08 17:40:40-05:00,18000,True,False,['__init__.py'],['69c56bde15a7d6c03fdc91bbc967bf8b6efdfee3'],4,52,56,1,0.30303030303030304,1.0,1.0
c8431103420cb2ea9392b9848014fc8005e86b6c,decommission and bootstrap ccm commands,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-03 14:33:18-05:00,18000,2014-04-08 17:40:53-05:00,18000,True,False,['utils.py'],['910d357beb99e2d8fdfda990a24a738ab2353b77'],4,32,36,1,0.15,1.0,0.15
1586ce473a6d8739bf298f14fa7e63ec8bcc3303,Spotted small bug in random test,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-03 14:33:34-05:00,18000,2014-04-08 17:41:01-05:00,18000,True,False,['test_metadata.py'],['c8431103420cb2ea9392b9848014fc8005e86b6c'],1,1,2,1,,,
ad7a7dd3e17295ac856408383214e2fc4a056e7d,Remove try/except blocks and use use_*dc() instead,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-03 14:59:15-05:00,18000,2014-04-08 17:41:10-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['1586ce473a6d8739bf298f14fa7e63ec8bcc3303'],29,21,50,1,1.0,0.0,0.0
7ef98cc73e61020cdb36362bb348dc818ba368b0,Increase wait_for_down. Replace log messages.,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-03 18:56:35-05:00,18000,2014-04-08 17:41:18-05:00,18000,True,False,['utils.py'],['ad7a7dd3e17295ac856408383214e2fc4a056e7d'],2,4,6,1,1.0,1.0,0.0
d2306e5d58fd9d24e8f208a4dbfe45780fa46f17,Grab futures before counting coordinators,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-08 18:50:13-05:00,18000,2014-04-08 18:50:13-05:00,18000,True,False,"['__init__.py', 'utils.py']",['7ef98cc73e61020cdb36362bb348dc818ba368b0'],1,2,3,2,1.0,1.0,1.0
648609133dff8352123e5faa149d290740017b4a,Remove double future.result(),Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-08 19:42:54-05:00,18000,2014-04-08 19:42:54-05:00,18000,True,False,['utils.py'],['d2306e5d58fd9d24e8f208a4dbfe45780fa46f17'],1,0,1,1,0.0,0.0,0.0
efeb93a2fcd9192fbfae0dfdc626c37c8f1c680b,Confirm stacktrace,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-08 20:19:26-05:00,18000,2014-04-08 20:19:26-05:00,18000,True,False,"['__init__.py', 'test_loadbalancingpolicies.py']",['648609133dff8352123e5faa149d290740017b4a'],6,7,13,2,,,
c711ccacac4babfda0b1c17b3a42f0949c36c184,Fix DCAware load imbalance due to set orderings,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-09 13:55:25-05:00,18000,2014-04-09 13:56:09-05:00,18000,True,False,"['CHANGELOG.rst', 'policies.py']",['c31d5eca3ce7cdefb7bd71fa72655b06ec2bc5ef'],11,17,28,2,1.0,1.0,1.0
89b465d40e47427bba296f1e56053f8e52eb56ff,Add *.egg to .gitignore,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-09 13:56:53-05:00,18000,2014-04-09 13:56:53-05:00,18000,True,False,['.gitignore'],['c711ccacac4babfda0b1c17b3a42f0949c36c184'],0,1,1,1,,,
fce41227923e4595f5a11a0c788be0ff6bdc5ec7,Cleanup Scheduler at exit,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-09 14:44:29-05:00,18000,2014-04-09 14:44:29-05:00,18000,True,False,['cluster.py'],['f5e24f0059782608e4520b611c2b00eb9f458509'],0,15,15,1,1.0,1.0,1.0
e955fb53fcc298e4435d61075c1c5d387eeddf00,Use execute_concurrent,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-09 14:55:38-05:00,18000,2014-04-09 14:55:38-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['efeb93a2fcd9192fbfae0dfdc626c37c8f1c680b'],1,2,3,1,,,
87cd5d94ddf86430ebb3221838f9dccbb404371b,Add timeout option for push registration,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-09 17:32:29-05:00,18000,2014-04-09 17:32:29-05:00,18000,True,False,"['asyncorereactor.py', 'libevreactor.py']",['fce41227923e4595f5a11a0c788be0ff6bdc5ec7'],8,13,21,2,1.0,1.0,0.0
3dccc2359eb3bdb9f1afab3ec835f55ca415aae1,Base control conn readability on separate flag,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-09 17:36:08-05:00,18000,2014-04-09 17:36:08-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py']",['87cd5d94ddf86430ebb3221838f9dccbb404371b'],7,8,15,2,0.0,0.0,
f5a816f58e1fb836ee68f77bb62f63ca8208ffd6,Cleanup asyncore event loop on interpreter shutdown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-09 17:37:09-05:00,18000,2014-04-09 17:37:09-05:00,18000,True,False,['asyncorereactor.py'],['3dccc2359eb3bdb9f1afab3ec835f55ca415aae1'],4,20,24,1,1.0,0.0,0.875
3a4258e3fa707c80a85ccd8e5040e1ea7e572976,Remove Cluster/Session.__del__,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-09 17:37:39-05:00,18000,2014-04-09 17:37:39-05:00,18000,True,False,['cluster.py'],['f5a816f58e1fb836ee68f77bb62f63ca8208ffd6'],20,0,20,1,0.0,0.0,0.0
bbbbd7bd7ce3a0e0faee283e469bee5d0dd96c62,Use 0 instead of None for immediate scheduling,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-09 17:38:23-05:00,18000,2014-04-09 17:38:23-05:00,18000,True,False,['cluster.py'],['3a4258e3fa707c80a85ccd8e5040e1ea7e572976'],1,1,2,1,,,
092c92ad9188203daa7864688b24415929ed1100,Avoid strong references between ControlConn and Connection,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-09 17:44:45-05:00,18000,2014-04-09 17:44:45-05:00,18000,True,False,"['cluster.py', 'connection.py', 'asyncorereactor.py', 'libevreactor.py']",['bbbbd7bd7ce3a0e0faee283e469bee5d0dd96c62'],9,43,52,4,1.0,1.0,0.7333333333333333
fd9aafa0d5e4918b25880fda744dfe6721196376,Don't log stacktrace for NoConnectionsAvailable,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-09 18:38:49-05:00,18000,2014-04-09 18:38:49-05:00,18000,True,False,['cluster.py'],['89b465d40e47427bba296f1e56053f8e52eb56ff'],1,5,6,1,0.0,0.0,0.0
f3d5a5a5aeeffeacb53081e00e3919bb2740909f,Cleaned up and re-tested test cases,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-10 19:12:29-05:00,18000,2014-04-10 19:12:29-05:00,18000,True,False,"['test_loadbalancingpolicies.py', 'utils.py']",['e0957de9cb5c0306546b1babbb6df85d5d487126'],142,74,216,2,0.0,1.0,0.9464285714285714
f2113b9a1cf4edb6ced07d5e9bbe429f1511f729,Add note about raising trace timeout to error message,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-11 16:40:40-05:00,18000,2014-04-11 16:40:40-05:00,18000,True,False,['query.py'],['fd9aafa0d5e4918b25880fda744dfe6721196376'],1,2,3,1,0.0,0.0,1.0
eea560e4f6330acd9b5a2e3a4e050402861da923,Preserve all exc info when raising in execute_concurrent(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-11 16:41:08-05:00,18000,2014-04-11 16:41:08-05:00,18000,True,False,['concurrent.py'],['f2113b9a1cf4edb6ced07d5e9bbe429f1511f729'],1,6,7,1,0.0,0.0,0.0
9bfd94892fafc9cec89d7625c81614330fa76059,Prettier log message for scheduled retries,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-11 17:05:10-05:00,18000,2014-04-11 17:05:10-05:00,18000,True,False,['pool.py'],['64804b7584c17cf879d018e29b2bda3c95b4d9aa'],1,1,2,1,,,
7186fec6f8a7c7cbf7a6b626d40c1c36f3cb5c1b,Use execute_concurrent_with_args for loadbalancing tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-11 17:23:20-05:00,18000,2014-04-11 17:23:20-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['9bfd94892fafc9cec89d7625c81614330fa76059'],4,3,7,1,0.0,0.0,1.0
a975613979b7ad612c91a6d7ec88d211f0820fbc,PEP-8 fixes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-11 17:23:52-05:00,18000,2014-04-11 17:23:52-05:00,18000,True,False,"['__init__.py', 'test_loadbalancingpolicies.py', 'utils.py']",['7186fec6f8a7c7cbf7a6b626d40c1c36f3cb5c1b'],19,18,37,3,,,
06949a83dc64681a49851c490b7dc87b3350e930,Remove unneeded bind() call in example.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-11 17:24:15-05:00,18000,2014-04-11 17:24:15-05:00,18000,True,False,['example.py'],['a975613979b7ad612c91a6d7ec88d211f0820fbc'],1,1,2,1,,,
ae43b6f2a9a46e88dcc853542fd5a6323cae7ccb,adding callbacks support to BatchQuery,Daniel Dotsenko,ddotsenko@grapheffect.com,Daniel Dotsenko,ddotsenko@grapheffect.com,2014-04-09 13:27:08-07:00,25200,2014-04-13 22:14:00-07:00,25200,True,False,"['query.py', 'test_batch_query.py', 'queryset.rst']",['65f2ef9216609d7b4fd818c5d5fba1b01b7b24e8'],12,239,251,3,0.30985915492957744,0.971830985915493,0.9577464788732394
86ffd6a9741872c3094da22bac63b082e74ffe82,removing `batch` from the list of args passed to BatchQuery callbacks,Daniel Dotsenko,ddotsenko@grapheffect.com,Daniel Dotsenko,ddotsenko@grapheffect.com,2014-04-14 11:56:30-07:00,25200,2014-04-14 11:56:30-07:00,25200,True,False,"['query.py', 'test_batch_query.py', 'queryset.rst']",['ae43b6f2a9a46e88dcc853542fd5a6323cae7ccb'],12,12,24,3,,,
8093ac4bad555bf2f2f06c46b120a0cd7752a945,switching to list as BatchQuery callbacks collection + add_callback() API,Daniel Dotsenko,ddotsenko@grapheffect.com,Daniel Dotsenko,ddotsenko@grapheffect.com,2014-04-14 18:10:48-07:00,25200,2014-04-14 18:10:48-07:00,25200,True,False,"['query.py', 'test_batch_query.py', 'queryset.rst']",['86ffd6a9741872c3094da22bac63b082e74ffe82'],131,68,199,3,1.0,0.0,0.0
0fd15356880df8fa47360c35aa964b0e7f87dfb4,Fix a few Jenkins issues,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-14 20:30:45-05:00,18000,2014-04-14 20:30:45-05:00,18000,True,False,"['__init__.py', 'test_large_data.py', 'utils.py', 'test_metrics.py']",['f5e24f0059782608e4520b611c2b00eb9f458509'],15,103,118,4,0.3225806451612903,0.9838709677419355,0.6935483870967742
78ed5f76653449f3a037c3ce10feaa27c07e7bb4,Add loadbalancingpolicies test to 2.0,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-14 20:32:33-05:00,18000,2014-04-14 20:32:33-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['0fd15356880df8fa47360c35aa964b0e7f87dfb4'],0,439,439,1,0.09580838323353294,0.9550898203592815,0.8083832335329342
4e9b1ff5bbd635352867d43e69dc213894757db2,Handle Jenkins race conditions,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-14 20:37:50-05:00,18000,2014-04-14 20:37:50-05:00,18000,True,False,"['utils.py', 'test_metrics.py']",['06949a83dc64681a49851c490b7dc87b3350e930'],2,5,7,2,0.0,1.0,1.0
90937dba6b93ee656962728e47205824cc4f4bff,Increase wait_for_up's sleep to match master branch,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-14 20:39:18-05:00,18000,2014-04-14 20:39:18-05:00,18000,True,False,['utils.py'],['78ed5f76653449f3a037c3ce10feaa27c07e7bb4'],2,2,4,1,,,
3fe0692be3a2f76f1b025526fda8c77c85f80655,Make loadbalancingtests' protocol_version flexible,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-15 03:36:33-05:00,18000,2014-04-15 03:36:33-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['90937dba6b93ee656962728e47205824cc4f4bff'],11,21,32,1,0.0,1.0,0.9
586c3acec7df24d0064b2f7deae97c5c18e5def7,Log possible exception for Jenkins,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-15 15:18:49-05:00,18000,2014-04-15 15:18:49-05:00,18000,True,False,['__init__.py'],['3fe0692be3a2f76f1b025526fda8c77c85f80655'],0,4,4,1,0.0,0.0,1.0
a82c37f33439e52c0bc288469556337371a398de,Log possible exception for Jenkins,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-15 15:20:21-05:00,18000,2014-04-15 15:20:21-05:00,18000,True,False,['__init__.py'],['06949a83dc64681a49851c490b7dc87b3350e930'],0,4,4,1,0.0,0.0,1.0
fa1ac2a9ebda1ffc3632c9bcdf589ad5157bbea0,tearDown camelcasing,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-15 16:55:38-05:00,18000,2014-04-15 16:55:38-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['586c3acec7df24d0064b2f7deae97c5c18e5def7'],1,1,2,1,,,
5de166b87e75604ddd8ba00599967ae5e183c7fb,tearDownClass after loadbalancing tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-15 16:59:49-05:00,18000,2014-04-15 16:59:49-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['fa1ac2a9ebda1ffc3632c9bcdf589ad5157bbea0'],1,2,3,1,,,
ef4a4e4a0da3594137cf2af5aa57031ad2b19e72,tearDownClass after loadbalancing tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-15 17:02:05-05:00,18000,2014-04-15 17:02:05-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['ca80a11c5e2db4d93b0408805362ca75669601a5'],1,2,3,1,,,
bf47762ba21ddc9b26909a6361dce0f47947c21c,Added a few more paging tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-15 20:07:21-05:00,18000,2014-04-15 20:07:21-05:00,18000,True,False,['test_query_paging.py'],['5de166b87e75604ddd8ba00599967ae5e183c7fb'],0,143,143,1,0.0,0.0,1.0
020455c978da9bef02d4cad806157779b838ce1d,Add License headers,Michael Figuiere,mfiguiere@datastax.com,Michael Figuiere,mfiguiere@datastax.com,2014-04-16 08:01:03-07:00,25200,2014-04-16 08:01:03-07:00,25200,True,False,"['base.py', 'callback_full_pipeline.py', 'future_batches.py', 'future_full_pipeline.py', 'future_full_throttle.py', 'sync.py', '__init__.py', 'cluster.py', 'concurrent.py', 'connection.py', 'cqltypes.py', 'decoder.py', '__init__.py', 'asyncorereactor.py', 'geventreactor.py', 'libevreactor.py', 'marshal.py', 'metadata.py', 'metrics.py', 'policies.py', 'pool.py', 'query.py', 'example.py', 'ez_setup.py', 'setup.py', '__init__.py', '__init__.py', '__init__.py', 'test_consistency.py', 'test_large_data.py', 'test_loadbalancingpolicies.py', 'test_schema.py', 'utils.py', '__init__.py', 'test_cluster.py', 'test_concurrent.py', 'test_connection.py', 'test_factories.py', 'test_metadata.py', 'test_metrics.py', 'test_prepared_statements.py', 'test_query.py', 'test_types.py', '__init__.py', '__init__.py', 'test_asyncorereactor.py', 'test_libevreactor.py', 'test_connection.py', 'test_control_connection.py', 'test_host_connection_pool.py', 'test_marshalling.py', 'test_metadata.py', 'test_parameter_binding.py', 'test_policies.py', 'test_response_future.py', 'test_types.py']",['ef4a4e4a0da3594137cf2af5aa57031ad2b19e72'],0,784,784,56,,,
31143e3cf65199152d2df052e52d82deb8f16eeb,Add License headers,Michael Figuiere,mfiguiere@datastax.com,Michael Figuiere,mfiguiere@datastax.com,2014-04-16 08:14:24-07:00,25200,2014-04-16 08:14:24-07:00,25200,True,False,"['base.py', 'callback_full_pipeline.py', 'future_batches.py', 'future_full_pipeline.py', 'future_full_throttle.py', 'sync.py', '__init__.py', 'cluster.py', 'concurrent.py', 'connection.py', 'cqltypes.py', 'decoder.py', 'encoder.py', '__init__.py', 'asyncorereactor.py', 'geventreactor.py', 'libevreactor.py', 'marshal.py', 'metadata.py', 'metrics.py', 'policies.py', 'pool.py', 'query.py', 'ez_setup.py', 'setup.py', '__init__.py', '__init__.py', '__init__.py', 'test_consistency.py', 'test_large_data.py', 'test_loadbalancingpolicies.py', 'test_schema.py', 'utils.py', '__init__.py', 'test_cluster.py', 'test_concurrent.py', 'test_connection.py', 'test_factories.py', 'test_metadata.py', 'test_metrics.py', 'test_prepared_statements.py', 'test_query.py', 'test_query_paging.py', 'test_types.py', '__init__.py', '__init__.py', 'test_asyncorereactor.py', 'test_libevreactor.py', 'test_connection.py', 'test_control_connection.py', 'test_host_connection_pool.py', 'test_marshalling.py', 'test_metadata.py', 'test_parameter_binding.py', 'test_policies.py', 'test_response_future.py', 'test_types.py']",['5de166b87e75604ddd8ba00599967ae5e183c7fb'],0,798,798,57,,,
628b9aca2ec23b8851e39447bb318b35a71731bf,Fix ez_setup,Michael Figuiere,mfiguiere@datastax.com,Michael Figuiere,mfiguiere@datastax.com,2014-04-16 08:49:48-07:00,25200,2014-04-16 08:49:48-07:00,25200,True,False,['ez_setup.py'],['31143e3cf65199152d2df052e52d82deb8f16eeb'],14,0,14,1,,,
606bb32069e9752049d5f4f7b6e1a9eac624d51f,Fix ez_setup,Michael Figuiere,mfiguiere@datastax.com,Michael Figuiere,mfiguiere@datastax.com,2014-04-16 08:55:27-07:00,25200,2014-04-16 08:55:27-07:00,25200,True,False,['ez_setup.py'],['020455c978da9bef02d4cad806157779b838ce1d'],14,0,14,1,,,
2aff6e03dedab5458a96ce7d85d63b91006bca8c,Handle iterators in execute_concurrent,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-16 11:28:23-05:00,18000,2014-04-16 11:28:23-05:00,18000,True,False,['concurrent.py'],['606bb32069e9752049d5f4f7b6e1a9eac624d51f'],1,8,9,1,0.0,0.0,0.0
ee235afad146d83c34a5dd896897a27f4fe4d3fd,"Make asyncore loop into a class, fix conn set usage",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-16 12:12:57-05:00,18000,2014-04-16 12:12:57-05:00,18000,True,False,['asyncorereactor.py'],['092c92ad9188203daa7864688b24415929ed1100'],61,67,128,1,1.0,1.0,1.0
ec598963fc4add153e8beebb3ae79e2ed977201b,Wait for libev thread to terminate on exit,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-16 12:44:39-05:00,18000,2014-04-16 12:44:39-05:00,18000,True,False,['libevreactor.py'],['ee235afad146d83c34a5dd896897a27f4fe4d3fd'],1,10,11,1,1.0,1.0,1.0
59d09c3705fb47038904e05efbf77f21663fd0cd,Avoid early termination of libev event loop,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-16 14:42:59-05:00,18000,2014-04-16 14:42:59-05:00,18000,True,False,"['libevreactor.py', 'test_libevreactor.py']",['ec598963fc4add153e8beebb3ae79e2ed977201b'],62,61,123,2,0.0,0.0,0.0
072ae3144cedccc4ea134a325c76d00cbf9a77d3,Handle shutdown during schema agreement check,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-16 15:31:17-05:00,18000,2014-04-16 15:31:17-05:00,18000,True,False,['cluster.py'],['17998ef72a2fe2e67d27dd602b6ced33a58ad8ef'],1,10,11,1,0.0,0.0,0.0
feb73eb7f5a987ed959e9de8c2039b1418bab3f4,Fix typo in benchmark insert statement,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-16 16:00:47-05:00,18000,2014-04-16 16:00:47-05:00,18000,True,False,['base.py'],['2aff6e03dedab5458a96ce7d85d63b91006bca8c'],1,1,2,1,,,
9491928ff6d09962d56c600cd07a8c6ae0917f23,Release version 1.1.0,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-16 16:24:27-05:00,18000,2014-04-16 16:24:27-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['feb73eb7f5a987ed959e9de8c2039b1418bab3f4'],2,2,4,2,,,
f9b59182f89ac5a7c0a7e43b0bf0e83f46d23703,Increment version post-release,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-16 16:28:56-05:00,18000,2014-04-16 16:28:56-05:00,18000,True,False,['__init__.py'],['9491928ff6d09962d56c600cd07a8c6ae0917f23'],1,1,2,1,,,
2baca84d15ffd62d0fc2a01a6b656dd0a8c52a91,Added verification tests for batch writes,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-16 18:13:57-05:00,18000,2014-04-16 18:13:57-05:00,18000,True,False,['test_query.py'],['9effa90f8994b7f4526910b0432a833f275adb7d'],0,22,22,1,0.0,1.0,1.0
532f48fde4995abfd67361db6f4d19b662a1e4f2,Use sets when more appropriate,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-16 18:18:09-05:00,18000,2014-04-16 18:18:09-05:00,18000,True,False,['test_query_paging.py'],['bf47762ba21ddc9b26909a6361dce0f47947c21c'],12,9,21,1,1.0,1.0,0.0
fc5fbb8b93559a7ce847041c0816c2788ae6d7e9,More descriptive test titles,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-16 18:51:59-05:00,18000,2014-04-16 18:51:59-05:00,18000,True,False,['test_query_paging.py'],['532f48fde4995abfd67361db6f4d19b662a1e4f2'],3,3,6,1,,,
a9ba35aeea44b55911a8a48261c90a2bbb1b651d,move confirm_results out of tearDown(),Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-16 19:03:58-05:00,18000,2014-04-16 19:03:58-05:00,18000,True,False,['test_query.py'],['2baca84d15ffd62d0fc2a01a6b656dd0a8c52a91'],1,5,6,1,0.75,1.0,1.0
b4a918e4857da7dc662ae1db6f747abefb7c83fe,"Fix unconditional import of nose in setup.py

Fixes #111",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-16 19:06:33-05:00,18000,2014-04-16 19:06:33-05:00,18000,True,False,"['CHANGELOG.rst', 'setup.py']",['f9b59182f89ac5a7c0a7e43b0bf0e83f46d23703'],5,20,25,2,0.0,1.0,1.0
840064a9e27929c5f44ba06b72bfc3e69d905ee6,Release 1.1.1,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-16 19:13:20-05:00,18000,2014-04-16 19:13:20-05:00,18000,True,False,['__init__.py'],['b4a918e4857da7dc662ae1db6f747abefb7c83fe'],1,1,2,1,,,
ea080bd1e7cc2a150466c2ab23fac59da1d7238d,Make version 2.0.0.dev on 2.0 branch,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-16 19:22:37-05:00,18000,2014-04-16 19:22:57-05:00,18000,True,False,['__init__.py'],['5cada691f1ed5b0c1a549820ce53b675c86690e0'],1,1,2,1,,,
3a028b80c3f6cad78a147fc2e458aa4789dec443,Remove gevent from TODO list in readme,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-16 19:23:49-05:00,18000,2014-04-16 19:23:49-05:00,18000,True,False,['README.rst'],['840064a9e27929c5f44ba06b72bfc3e69d905ee6'],1,1,2,1,,,
ac909fb5b17ed46bd647e88144d955b88ad8a107,use PROTOCOL_VERSION for bounded dictionary tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-16 19:43:57-05:00,18000,2014-04-16 19:43:57-05:00,18000,True,False,['test_prepared_statements.py'],['6ce0d8ded79fb66a300597738ec6d3aeb7124b87'],4,4,8,1,,,
540df5829ebad62f6d7b54df302d1abc8f475d6a,Add missing timeout to register_watcher for gevent,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-17 11:00:15-05:00,18000,2014-04-17 11:04:47-05:00,18000,True,False,['geventreactor.py'],['ac909fb5b17ed46bd647e88144d955b88ad8a107'],4,8,12,1,1.0,1.0,0.0
2d22138c0dfa1f115f32d8d308a1dad3a79b0505,"fix for ""ValueError: 'column_name' is not in list"" error on sync_table for models with primary keys only

https://github.com/cqlengine/cqlengine/issues/175",Daniel Dotsenko,ddotsenko@grapheffect.com,Jon Haddad,jon@jonhaddad.com,2014-04-09 10:49:04-07:00,25200,2014-04-17 15:16:47-07:00,25200,True,False,"['management.py', 'test_management.py']",['65f2ef9216609d7b4fd818c5d5fba1b01b7b24e8'],5,41,46,2,0.0,0.0,1.0
97826f038d8906497dfb5e165d24f9657a9063d5,more blah for primary-key-only table sync_table test,Daniel Dotsenko,ddotsenko@grapheffect.com,Jon Haddad,jon@jonhaddad.com,2014-04-16 23:05:44-07:00,25200,2014-04-17 15:16:47-07:00,25200,True,False,['test_management.py'],['2d22138c0dfa1f115f32d8d308a1dad3a79b0505'],2,23,25,1,1.0,1.0,1.0
70e58416d0753a081f35e35f6dfacd841afc222d,cleaning up batch callback docs,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-04-17 15:27:46-07:00,25200,2014-04-17 15:27:46-07:00,25200,True,False,['queryset.rst'],['8093ac4bad555bf2f2f06c46b120a0cd7752a945'],16,4,20,1,,,
b56030b6a27ea51b1964b2d177da975a1c653e9b,Jenkins-ify these test exceptions on the master branch,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-17 18:46:38-05:00,18000,2014-04-17 18:46:38-05:00,18000,True,False,['test_connection.py'],['3a028b80c3f6cad78a147fc2e458aa4789dec443'],6,29,35,1,1.0,1.0,1.0
335acf3e2ea91882e36fd254818a564cf8ded5f8,Update token metadata when a node is removed,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-22 12:00:43-05:00,18000,2014-04-22 12:00:43-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['beb20fe3e77a35cf6f27497e354f8ced08dd1bd6'],0,10,10,2,1.0,1.0,1.0
c0d8a1089bcb6fd9c650f01f794dfd13881e35aa,Update load balancing policy integration test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-22 12:04:01-05:00,18000,2014-04-22 12:04:01-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['335acf3e2ea91882e36fd254818a564cf8ded5f8'],2,5,7,1,,,
a223c3a7d89b878746b4b7841add75f23f74219c,fix loadbalancing fallback tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-22 13:00:45-05:00,18000,2014-04-22 13:00:45-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['c0d8a1089bcb6fd9c650f01f794dfd13881e35aa'],5,17,22,1,0.0,1.0,0.0
cbe3dc9bf18e681a9a293b4f2cc1faa1fea5fc7c,Use python 2.6 sets,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-22 14:37:14-05:00,18000,2014-04-22 14:37:14-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['a223c3a7d89b878746b4b7841add75f23f74219c'],3,3,6,1,,,
b7b49b1db0562d7703cbb0f69cf58eab917861b1,Don't block on killing reader/writer Greenlets,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-22 15:10:26-05:00,18000,2014-04-22 15:10:26-05:00,18000,True,False,"['CHANGELOG.rst', 'geventreactor.py']",['c0d8a1089bcb6fd9c650f01f794dfd13881e35aa'],6,10,16,2,0.0,0.5,1.0
469dd674f3db24a903feebccb200f1b0b6223118,Avoid multiple simultaneous node-up handlers,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-22 16:48:44-05:00,18000,2014-04-22 16:49:29-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['d1ad8a8af5baf0e51686e9d0c02b8f1a7394a2ed'],1,3,4,2,,,
d20db205f1bda260362fd3a2097fa6f4b46c5360,Wait an extra second before handling UP messages,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-22 16:53:59-05:00,18000,2014-04-22 16:53:59-05:00,18000,True,False,['cluster.py'],['469dd674f3db24a903feebccb200f1b0b6223118'],2,2,4,1,,,
d1a72e8e8654af81dc2ced3356b1a0a670a36076,Move #! back to top of example.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-22 18:24:57-05:00,18000,2014-04-22 18:24:57-05:00,18000,True,False,['example.py'],['d20db205f1bda260362fd3a2097fa6f4b46c5360'],2,2,4,1,,,
e9403e562c8651772c1be8960e875ebc4744cb9e,fixed issue with timestamp and DST,Nati CT,nati@everything.me,Jon Haddad,jon@jonhaddad.com,2014-04-22 15:16:12+03:00,-10800,2014-04-22 23:04:34-07:00,25200,True,False,"['query.py', 'statements.py']",['eca27faed01ac39fe083371e682ac25900c003ef'],5,8,13,2,0.0,0.0,1.0
dec7c24bb4ba5d98fa696dde91d2737e6607825b,timestamp as a long wasn't being assigned,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-04-22 23:12:35-07:00,25200,2014-04-22 23:12:35-07:00,25200,True,False,['query.py'],['e9403e562c8651772c1be8960e875ebc4744cb9e'],1,1,2,1,,,
e12272515ff1d16eb1ac115821a216a7d261da30,Removed cql monkey patch in favour of Quoter to allow Bytes support,Nati CT,nati@everything.me,Nati CT,nati@everything.me,2014-04-13 18:46:53+03:00,-10800,2014-04-23 10:23:31+03:00,-10800,True,False,"['columns.py', 'statements.py']",['dec7c24bb4ba5d98fa696dde91d2737e6607825b'],20,6,26,2,0.0,1.0,0.0
c5381ee834e291c827867f832722f63f7df512e9,Tests that adding query with a limit affects the count as expected.,Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2014-04-23 11:04:56+02:00,-7200,2014-04-23 11:04:56+02:00,-7200,True,False,['test_queryset.py'],['65f2ef9216609d7b4fd818c5d5fba1b01b7b24e8'],0,7,7,1,1.0,1.0,1.0
ece104cc99aa77a1d739ff9e76082f21bcd9750a,Added a test to show the problem with Text values and '0x' prefix,Nati CT,nati@everything.me,Nati CT,nati@everything.me,2014-04-23 12:24:05+03:00,-10800,2014-04-23 12:24:05+03:00,-10800,True,False,['test_value_io.py'],['e12272515ff1d16eb1ac115821a216a7d261da30'],0,7,7,1,,,
7d76f0138eac2bd13ea1bcd827d2111213088f84,updating changelog and version,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-04-23 12:45:39-07:00,25200,2014-04-23 12:45:39-07:00,25200,True,False,"['changelog', 'VERSION']",['ece104cc99aa77a1d739ff9e76082f21bcd9750a'],1,8,9,2,,,
061991f2a38fc42d8abf28a41f432819344f67be,Log entire message on failure to decode,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-23 16:02:49-05:00,18000,2014-04-23 16:02:49-05:00,18000,True,False,['connection.py'],['d1a72e8e8654af81dc2ced3356b1a0a670a36076'],1,1,2,1,,,
9c92a5066726e4eccbe4f906b4de022c4c03812c,Adding a few missing code coverage tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-23 20:39:10-05:00,18000,2014-04-23 20:39:10-05:00,18000,True,False,"['test_connection.py', 'test_marshalling.py', 'test_metadata.py', 'test_policies.py', 'test_types.py']",['061991f2a38fc42d8abf28a41f432819344f67be'],2,108,110,5,1.0,1.0,1.0
87ab5bd49959823a89cc6f2b4b8b15e707a8a19e,Check number of elements in collections.,Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2014-04-24 16:40:54+02:00,-7200,2014-04-24 16:40:54+02:00,-7200,True,False,"['changelog', 'columns.py', 'test_container_columns.py']",['7d76f0138eac2bd13ea1bcd827d2111213088f84'],1,39,40,3,1.0,1.0,1.0
b430157605ca661c44eeaafc55ccc0ace224bc86,Fix test layout.,Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2014-04-24 16:41:13+02:00,-7200,2014-04-24 16:41:13+02:00,-7200,True,False,['test_container_columns.py'],['87ab5bd49959823a89cc6f2b4b8b15e707a8a19e'],10,10,20,1,,,
2af6b9b55167e90e0bfa4483a82123db49b1366b,Add support for simple table properties. Closes #181 and #191.,Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kevin@deldycke.com,2014-04-16 16:50:37+02:00,-7200,2014-04-24 19:05:42+02:00,-7200,True,False,"['__init__.py', 'management.py', 'models.py', 'models.rst']",['defc110a0dacac0d00fac3cd5aaa84c7720f00ce'],9,87,96,4,0.0,0.0,1.0
d407d1b2feee6c2671f12dc2972f00e2421bc996,Update changelog.,Kevin Deldycke,kevin@deldycke.com,Kevin Deldycke,kevin@deldycke.com,2014-04-24 19:03:11+02:00,-7200,2014-04-24 19:05:43+02:00,-7200,True,False,['changelog'],['2af6b9b55167e90e0bfa4483a82123db49b1366b'],0,1,1,1,,,
41571e7ef19ce8d4e7319aa05501ce966d614432,Fix references to callback_full_pipeline.py in docs,Dana Powers,dana.powers@rd.io,Dana Powers,dana.powers@rd.io,2014-04-24 11:20:53-07:00,25200,2014-04-24 11:20:53-07:00,25200,True,False,['performance.rst'],['061991f2a38fc42d8abf28a41f432819344f67be'],1,1,2,1,,,
c40a1aa79e4721f7892be787eef3c3fe0f324959,"Retry on received == required_responses in DCRP.on_read_timeout

Fixes PYTHON-55",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-24 14:04:48-05:00,18000,2014-04-24 14:04:48-05:00,18000,True,False,"['CHANGELOG.rst', 'policies.py']",['061991f2a38fc42d8abf28a41f432819344f67be'],1,3,4,2,,,
2850c33b5de5e05dea42f23a7cc87b6aae2e5ede,Make cassandra.__version__ 1.1.1.post,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-24 14:16:26-05:00,18000,2014-04-24 14:16:56-05:00,18000,True,False,['__init__.py'],['888750a67d2fd564757025b29acfa50ead9e3194'],1,1,2,1,,,
ad5c73049b46ef9f330d2ab39459ee0fbeffd904,Use actual ConsistencyLevel for policy unit tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-24 14:23:52-05:00,18000,2014-04-24 14:23:52-05:00,18000,True,False,['test_policies.py'],['2850c33b5de5e05dea42f23a7cc87b6aae2e5ede'],38,39,77,1,,,
aa7d35d19c98f460d371b66f6ac045906ee0748b,"Revert ""Retry on received == required_responses in DCRP.on_read_timeout""

This reverts commit c40a1aa79e4721f7892be787eef3c3fe0f324959.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-24 15:12:58-05:00,18000,2014-04-24 15:12:58-05:00,18000,True,False,"['CHANGELOG.rst', 'policies.py']",['ad5c73049b46ef9f330d2ab39459ee0fbeffd904'],3,1,4,2,,,
ea6209db5749c2456ef7ec7b0b0fc897733ff640,Don't log at ERROR when a conn closes during startup,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-24 15:21:42-05:00,18000,2014-04-24 15:21:42-05:00,18000,True,False,"['CHANGELOG.rst', 'connection.py']",['aa7d35d19c98f460d371b66f6ac045906ee0748b'],0,8,8,2,0.0,0.0,0.0
7db2f3b4129cd3e6642ede0027ff2ba65696055c,test case fixes,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-24 16:21:55-05:00,18000,2014-04-24 16:21:55-05:00,18000,True,False,"['test_policies.py', 'test_types.py']",['9c92a5066726e4eccbe4f906b4de022c4c03812c'],33,11,44,2,0.0,0.0,0.0
47dcfbe9e35482dc948477b4c63fa61507fd1653,Added cassandra.util tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-24 18:57:04-05:00,18000,2014-04-24 18:57:04-05:00,18000,True,False,['test_utils.py'],['7db2f3b4129cd3e6642ede0027ff2ba65696055c'],0,424,424,1,0.797945205479452,1.0,1.0
01bfd3c477d0acd17965b25c189efee358bba4d8,Fix typo in log message,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-25 15:55:05-05:00,18000,2014-04-25 15:55:05-05:00,18000,True,False,['cluster.py'],['ea6209db5749c2456ef7ec7b0b0fc897733ff640'],1,1,2,1,,,
1d2d810d664a57aec966ece646ac473797f6e037,Add schema disagreement checks,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-25 19:23:18-05:00,18000,2014-04-25 19:23:18-05:00,18000,True,False,"['__init__.py', 'test_schema.py']",['01bfd3c477d0acd17965b25c189efee358bba4d8'],2,56,58,2,0.0,1.0,1.0
c2b3bac0338ca92f84b6a48285db32b2d9794e90,Removed tests/unit/test_utils.py,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-04-25 19:27:10-05:00,18000,2014-04-25 19:27:10-05:00,18000,True,False,['test_utils.py'],['47dcfbe9e35482dc948477b4c63fa61507fd1653'],424,0,424,1,0.20205479452054795,0.0,0.0
919729cc98dae1f19719fdbfa22c9e3bc59a2cc7,Clearer log about host being marked up,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-29 11:40:08-05:00,18000,2014-05-02 14:02:15-05:00,18000,True,False,['cluster.py'],['48cb755cb2da900a2a348abcaf3b555d92757952'],1,1,2,1,,,
67c5452dd80dcbc979e212fb35ccb02740bb866f,Log when reconnector is cancelled before starting,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-04-29 11:40:25-05:00,18000,2014-05-02 14:02:15-05:00,18000,True,False,['pool.py'],['919729cc98dae1f19719fdbfa22c9e3bc59a2cc7'],3,1,4,1,1.0,1.0,1.0
ff5d1a4a276c5a598da054e9e059256991517200,"Fix duplicate node-up handling

a22f80b8 introduced a bug where multiple UP notifications
could result in multiple reconnectors being started. It was also
possible for the executor threads to become deadlocked waiting on a
condition that would never be set, which meant that future down and up
node handling would never be executed.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 13:58:50-05:00,18000,2014-05-02 14:02:15-05:00,18000,True,False,"['cluster.py', 'pool.py']",['67c5452dd80dcbc979e212fb35ccb02740bb866f'],24,35,59,2,0.0,0.125,1.0
ca9a8a6e4a2a24f5e705afeff2088252af1f4f57,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 14:02:08-05:00,18000,2014-05-02 14:02:15-05:00,18000,True,False,['CHANGELOG.rst'],['ff5d1a4a276c5a598da054e9e059256991517200'],0,3,3,1,,,
efc8036f44ec3108b0d4e7b3a3fb442f4cc4d6c2,Fixes from merge,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 14:05:42-05:00,18000,2014-05-02 14:05:42-05:00,18000,True,False,"['decoder.py', 'test_types.py']",['aa0798d0f3bac2cfe2479c0a4527c2cb12f80635'],2,3,5,2,,,
612787bf87f01e65287ed3b1d0234e5c046a1843,Update supported versions in setup.py,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 16:00:13-05:00,18000,2014-05-02 16:00:13-05:00,18000,True,False,['setup.py'],['e5457cbad839a8f051d1bbcc751003d9ec3859b8'],2,1,3,1,1.0,0.0,0.0
659f63ac6ede0297c66c673c632376b763d05c48,Use sequence comparison for potentially lazy list,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 16:10:23-05:00,18000,2014-05-02 16:10:23-05:00,18000,True,False,['test_query_paging.py'],['612787bf87f01e65287ed3b1d0234e5c046a1843'],12,12,24,1,,,
9d54cdfdf1dfd4fb7017614e56c65a2ddbc06890,Use six.iteritems,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 16:11:26-05:00,18000,2014-05-02 16:11:26-05:00,18000,True,False,['cluster.py'],['659f63ac6ede0297c66c673c632376b763d05c48'],1,1,2,1,,,
5338f483cf2eac8eb71c0ba3fbd1efabee7cb3f4,merged optimizations,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-05-02 15:13:31-07:00,25200,2014-05-02 15:13:31-07:00,25200,True,False,"['columns.py', 'connection.py', 'models.py', 'test_class_construction.py']",['defc110a0dacac0d00fac3cd5aaa84c7720f00ce'],10,26,36,4,1.0,1.0,1.0
24eb31ef5aef2b80e132221db5acf6b974ecac93,Use six.moves.range for xrange,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 17:36:36-05:00,18000,2014-05-02 17:36:36-05:00,18000,True,False,['test_connection.py'],['9d54cdfdf1dfd4fb7017614e56c65a2ddbc06890'],1,2,3,1,,,
2f04c9cde1fea88b1a75e4725189eb73b7887510,Python3-compatible exception raising,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 17:36:52-05:00,18000,2014-05-02 17:36:52-05:00,18000,True,False,['concurrent.py'],['24eb31ef5aef2b80e132221db5acf6b974ecac93'],2,9,11,1,0.0,0.0,0.0
35df9c811a8c041a7977e279ce61f4df0a7dc4f4,Use six.reraise for proper py3k compatibility,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 17:48:42-05:00,18000,2014-05-02 17:48:42-05:00,18000,True,False,['concurrent.py'],['2f04c9cde1fea88b1a75e4725189eb73b7887510'],2,2,4,1,,,
d41fcb749730a065ab20222b41ed8f403427c249,Register cluster shutdown on interpreter shutdown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 18:00:55-05:00,18000,2014-05-02 18:00:55-05:00,18000,True,False,['cluster.py'],['35df9c811a8c041a7977e279ce61f4df0a7dc4f4'],0,6,6,1,0.75,0.75,1.0
50fb0151ae2a2e6a9e89b405173ee1ed94b86bca,Add pytz to test-requirements.txt,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 18:14:54-05:00,18000,2014-05-02 18:14:54-05:00,18000,True,False,['test-requirements.txt'],['d41fcb749730a065ab20222b41ed8f403427c249'],0,1,1,1,,,
4cfa123da2ccf416e2cb7e4bd9bc0c189a06081b,Add test logger if not added by nose,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 18:34:20-05:00,18000,2014-05-02 18:34:20-05:00,18000,True,False,['__init__.py'],['50fb0151ae2a2e6a9e89b405173ee1ed94b86bca'],0,5,5,1,,,
c37f7705856bd82f5416cef4bb82e1786c3f508c,Add test logger if not added by nose,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-02 18:34:20-05:00,18000,2014-05-02 18:46:13-05:00,18000,True,False,['__init__.py'],['ca9a8a6e4a2a24f5e705afeff2088252af1f4f57'],0,5,5,1,,,
884745224e896da644f4aaebd5a55360d0e38638,Log query (DEBUG level) before execute.,tarzan,hoc3010@gmail.com,tarzan,hoc3010@gmail.com,2014-05-05 10:46:23+07:00,-25200,2014-05-05 10:46:23+07:00,-25200,True,False,['connection.py'],['defc110a0dacac0d00fac3cd5aaa84c7720f00ce'],1,1,2,1,,,
e6d56ba0008c190bf9acc4c1b8dd58455f9afd43,Handle exhausted reconnection schedule correctly,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-06 13:56:17-05:00,18000,2014-05-06 13:56:17-05:00,18000,True,False,"['CHANGELOG.rst', 'pool.py']",['c37f7705856bd82f5416cef4bb82e1786c3f508c'],2,14,16,2,0.0,0.0,1.0
ae55149a45d856ca9406b6122ea03be0dec52670,Set the protocol_version in test_schema tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-05-06 15:04:58-05:00,18000,2014-05-06 15:04:58-05:00,18000,True,False,['test_schema.py'],['f1e7c7106b6437413c6a2178a9927101bf9efebb'],2,2,4,1,,,
95a3497a2eee46f8b00d89e5220bcf91d4fa7d5d,"Fix blob type as string test for C* 1.2, Python 2

In the master version of the test, the string was hex encoded",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-06 15:23:43-05:00,18000,2014-05-06 15:24:19-05:00,18000,True,False,['test_types.py'],['ae55149a45d856ca9406b6122ea03be0dec52670'],0,2,2,1,0.0,1.0,1.0
c0738b0a404a06ea7d647975f6aaf6b4d314f664,Require scales >= 1.0.6,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-06 15:26:08-05:00,18000,2014-05-06 15:26:08-05:00,18000,True,False,"['requirements.txt', 'setup.py']",['95a3497a2eee46f8b00d89e5220bcf91d4fa7d5d'],2,2,4,2,,,
fc00992d05ecad493165399c4fb536e0260e4750,Skip building libev extension on py3k for now,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-06 15:30:22-05:00,18000,2014-05-06 15:30:22-05:00,18000,True,False,['setup.py'],['c0738b0a404a06ea7d647975f6aaf6b4d314f664'],0,5,5,1,,,
3073356a44f62865f7e455709cd640068dc29a95,Rename cassandra.decoder to cassandra.protocol,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-06 15:39:25-05:00,18000,2014-05-06 15:39:25-05:00,18000,True,False,"['cluster.py', 'connection.py', 'asyncorereactor.py', 'geventreactor.py', 'libevreactor.py', 'protocol.py', 'test_connection.py', 'test_asyncorereactor.py', 'test_libevreactor.py', 'test_connection.py', 'test_control_connection.py', 'test_response_future.py', 'test_types.py']",['fc00992d05ecad493165399c4fb536e0260e4750'],34,35,69,13,,,
2b72de6cf85a5b6946212d919590d1ec12bd371f,"Add docs, deprecation warnings for row factory move",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-06 16:09:50-05:00,18000,2014-05-06 16:09:50-05:00,18000,True,False,"['decoder.py', 'query.py', 'decoder.rst', 'query.rst', 'index.rst']",['3073356a44f62865f7e455709cd640068dc29a95'],0,141,141,5,1.0,1.0,1.0
771cb1d456118e081aa648bbaa10dd3ce3b6981f,Start changelog for 2.0.0b1,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-06 16:14:44-05:00,18000,2014-05-06 16:14:44-05:00,18000,True,False,['CHANGELOG.rst'],['2b72de6cf85a5b6946212d919590d1ec12bd371f'],0,19,19,1,,,
cea54f59b2d20d8069446cdb3b8946e206cdf705,Tolerate multiple calls of Cluster.shutdown(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-06 16:33:07-05:00,18000,2014-05-06 16:33:07-05:00,18000,True,False,"['cluster.py', 'test_cluster.py']",['771cb1d456118e081aa648bbaa10dd3ce3b6981f'],15,1,16,2,0.0,0.0,0.0
9fb525ec2ef69b32a3e01f6f903b2d55f200e9b1,More updates to the changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-06 16:38:00-05:00,18000,2014-05-06 16:38:00-05:00,18000,True,False,['CHANGELOG.rst'],['cea54f59b2d20d8069446cdb3b8946e206cdf705'],0,18,18,1,,,
c6eac505a422fff17230a89d188f4d4c1b9f90c1,Release 2.0.0b1,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-06 16:55:44-05:00,18000,2014-05-06 16:55:44-05:00,18000,True,False,"['CHANGELOG.rst', 'README.rst', '__init__.py']",['9fb525ec2ef69b32a3e01f6f903b2d55f200e9b1'],5,4,9,3,,,
4287fdc125b45f769d5b0103b5f4097ed47ef69c,Minor readme and changelog tweaks,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-06 17:07:08-05:00,18000,2014-05-06 17:07:08-05:00,18000,True,False,"['CHANGELOG.rst', 'README.rst', '__init__.py']",['c6eac505a422fff17230a89d188f4d4c1b9f90c1'],5,10,15,3,,,
6b592536e92a959ac1571755533668609c6e95a4,Fix bullets in Changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-06 17:08:07-05:00,18000,2014-05-06 17:08:07-05:00,18000,True,False,['CHANGELOG.rst'],['4287fdc125b45f769d5b0103b5f4097ed47ef69c'],0,1,1,1,,,
7d992b85d5e48691d1d9dfd2637c9747169c576d,"Make scales, blist optional dependencies

Fixes #114",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-07 10:46:00-05:00,18000,2014-05-07 10:46:00-05:00,18000,True,False,"['CHANGELOG.rst', 'metrics.py', 'requirements.txt', 'setup.py', 'test-requirements.txt', 'tox.ini']",['e6d56ba0008c190bf9acc4c1b8dd58455f9afd43'],7,10,17,6,1.0,0.0,0.0
14a2e43eac6bca143231231b10e85c673222beb5,"Prefer lz4 compression, allow specifying compression type

This is related to #1",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-07 11:20:10-05:00,18000,2014-05-07 11:20:10-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py', 'connection.py', 'test_connection.py']",['7d992b85d5e48691d1d9dfd2637c9747169c576d'],17,162,179,4,0.0,0.8817204301075269,1.0
4a702209fdb5273123fa99a7b8923babedd3c895,Minor docstring fixes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-07 11:37:32-05:00,18000,2014-05-07 11:37:32-05:00,18000,True,False,['cluster.py'],['6b592536e92a959ac1571755533668609c6e95a4'],3,3,6,1,,,
a47bf65c825c932cf28ef3f66cbaf0773109b1b5,Add blist to tox dependencies,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-07 11:51:05-05:00,18000,2014-05-07 11:51:05-05:00,18000,True,False,['tox.ini'],['14a2e43eac6bca143231231b10e85c673222beb5'],0,1,1,1,,,
6b660d7f9a1cf38c62938309509448e24540a4b3,Don't make blist a dep for pypy tox test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-07 12:09:10-05:00,18000,2014-05-07 12:09:10-05:00,18000,True,False,['tox.ini'],['a47bf65c825c932cf28ef3f66cbaf0773109b1b5'],0,9,9,1,,,
2e693023bd8f22a0b90015a0c3e9b2bbb592b19e,Add comment about compression ordering,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-07 15:30:25-05:00,18000,2014-05-07 15:30:25-05:00,18000,True,False,['connection.py'],['6b660d7f9a1cf38c62938309509448e24540a4b3'],0,3,3,1,,,
9206341d9d1066c0a8d18c5233b8a5eeb77d560f,Add blist to test-requirements.txt,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-07 16:54:21-05:00,18000,2014-05-07 16:54:21-05:00,18000,True,False,['test-requirements.txt'],['2e693023bd8f22a0b90015a0c3e9b2bbb592b19e'],0,1,1,1,,,
1529f5cc13ab44f4b8624b7576ef92f6a14e08a9,Add blist to tox.ini deps,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-07 17:19:31-05:00,18000,2014-05-07 17:19:31-05:00,18000,True,False,['tox.ini'],['80715767a6092ca042d68a10375e1096059e19b5'],0,1,1,1,,,
d6124b603883321d2fb36222a19da82837dad80d,Use six.string_types instead of basestring,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-07 17:27:35-05:00,18000,2014-05-07 17:27:35-05:00,18000,True,False,['connection.py'],['1529f5cc13ab44f4b8624b7576ef92f6a14e08a9'],1,1,2,1,,,
dce28bd05c02da0e403e83d78dcd47dd8a171593,Changed connection error messages to be more informative,Nati CT,nati@everything.me,Nati CT,nati@everything.me,2014-05-08 11:03:01+03:00,-10800,2014-05-08 11:03:01+03:00,-10800,True,False,['connection.py'],['889a87ba1f1f35b9df273669b71e959b102682d8'],2,2,4,1,,,
7359a87be04ed78293c7fe2947ac2857efa214fc,test to show blind update of empty map causes AttributeError,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-05-08 09:22:34-04:00,14400,2014-05-08 09:22:34-04:00,14400,True,False,['test_container_columns.py'],['889a87ba1f1f35b9df273669b71e959b102682d8'],0,15,15,1,1.0,1.0,1.0
a4143795d22fb7ab177f94aa67554f63eedb2fe6,test to show blind update of empty set causes CQLEngineException,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-05-08 12:55:12-04:00,14400,2014-05-08 12:55:12-04:00,14400,True,False,['test_container_columns.py'],['7359a87be04ed78293c7fe2947ac2857efa214fc'],0,10,10,1,1.0,1.0,1.0
cc26613bdbaa6c375fae62db1cc6f88e766e3f59,Use QUORUM consistency for cassandra.concurrent test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-08 16:18:40-05:00,18000,2014-05-08 16:18:40-05:00,18000,True,False,['test_concurrent.py'],['9206341d9d1066c0a8d18c5233b8a5eeb77d560f'],8,28,36,1,0.0,1.0,1.0
51206c0f18c9ec93438b923a8a428779b4b0bc4c,Release 1.1.2,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-08 16:19:42-05:00,18000,2014-05-08 16:19:42-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['cc26613bdbaa6c375fae62db1cc6f88e766e3f59'],2,2,4,2,,,
5ec9c50e18f450a7ebdd5ce23df0bf236aebb7cb,Make version 1.1.2.post,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-08 16:21:04-05:00,18000,2014-05-08 16:21:04-05:00,18000,True,False,['__init__.py'],['51206c0f18c9ec93438b923a8a428779b4b0bc4c'],1,1,2,1,,,
24e6334017d36285c8da5b65edb310442cb6e9dc,Installation and Getting Started doc improvements,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-08 18:11:17-05:00,18000,2014-05-08 18:11:17-05:00,18000,True,False,"['getting_started.rst', 'installation.rst']",['d6124b603883321d2fb36222a19da82837dad80d'],13,42,55,2,,,
cb953693574e061f3f8d4ca115eef4b9218c735a,Update API docs for batch statements,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-08 18:44:47-05:00,18000,2014-05-08 18:44:47-05:00,18000,True,False,"['cluster.py', 'query.py', 'query.rst']",['24e6334017d36285c8da5b65edb310442cb6e9dc'],3,77,80,3,,,
2ac391ebd8cf196a80686760f88f957254a364e2,Better __str__/__repr__ for BatchType,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-08 18:47:28-05:00,18000,2014-05-08 18:47:28-05:00,18000,True,False,['query.py'],['cb953693574e061f3f8d4ca115eef4b9218c735a'],1,1,2,1,,,
723cd35b0065e5d10c40972c7c975b6784616d10,"Fix supported py versions, dependencies in installation guide",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-08 18:52:49-05:00,18000,2014-05-08 18:52:49-05:00,18000,True,False,['installation.rst'],['2ac391ebd8cf196a80686760f88f957254a364e2'],4,20,24,1,,,
93cfa4a48a194c2c57cc6c5cbbe38db94a108e57,Rearrange optinal steps in installation,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-08 18:56:43-05:00,18000,2014-05-08 18:56:43-05:00,18000,True,False,['installation.rst'],['723cd35b0065e5d10c40972c7c975b6784616d10'],21,21,42,1,,,
fca2d411b7d535a26e0f3c42749391848011105f,"Add installation note about OSX compilation error

Fixes PYTHON-65",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-09 14:40:02-05:00,18000,2014-05-09 14:40:02-05:00,18000,True,False,['installation.rst'],['b3510d9fcffad00d8f53e67a00b4027a4f2de3da'],0,10,10,1,,,
cb51f518ee873f27bde67fd425213c2278a5c861,Fix code formatting on installation guide,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-09 14:43:15-05:00,18000,2014-05-09 14:43:15-05:00,18000,True,False,['installation.rst'],['fca2d411b7d535a26e0f3c42749391848011105f'],2,2,4,1,,,
29007fd516814dc8b10c518a282b625bc024e3a9,"Don't strip trailing _ in column names

Fixes PYTHON-56:",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-09 15:12:31-05:00,18000,2014-05-09 15:12:31-05:00,18000,True,False,"['CHANGELOG.rst', 'decoder.py', 'test_types.py']",['5ec9c50e18f450a7ebdd5ce23df0bf236aebb7cb'],5,23,28,3,1.0,1.0,1.0
8908600c8352cc674d4726506870aa757c5bb11c,"Add default consistency level per-Session

Fixes PYTHON-14",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-09 17:03:49-05:00,18000,2014-05-09 17:03:49-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py', 'query.py', 'test_query.py']",['29007fd516814dc8b10c518a282b625bc024e3a9'],9,26,35,4,0.5,0.5,0.5
a21b0eb395b7778ae81d5d7e65486c27345d7882,"Add 1 second timeout to event loop thread join()

Relates to #24",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-13 11:06:33-05:00,18000,2014-05-13 11:06:33-05:00,18000,True,False,"['CHANGELOG.rst', 'asyncorereactor.py', 'libevreactor.py']",['d83264d3328c926fcd21bf957aaa1d9fccd128eb'],2,18,20,3,1.0,1.0,1.0
92cc32a0f5b7a5a1c361339702669c35276202b7,"Ensure datacenter rf is an int for NTS

Fixes #120",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-14 11:09:23-05:00,18000,2014-05-14 11:09:23-05:00,18000,True,False,"['CHANGELOG.rst', 'metadata.py']",['a21b0eb395b7778ae81d5d7e65486c27345d7882'],2,5,7,2,1.0,1.0,1.0
3abe119862f9f239c8288317cb85acf8724e9b7f,Update unit tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-14 11:23:04-05:00,18000,2014-05-14 11:23:04-05:00,18000,True,False,['test_metadata.py'],['92cc32a0f5b7a5a1c361339702669c35276202b7'],3,3,6,1,,,
e22270cd29ffe96158cd87923f4ad646f0f977f0,Add WhiteListRRPolicy to API docs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-14 12:28:28-05:00,18000,2014-05-14 12:28:28-05:00,18000,True,False,"['policies.py', 'policies.rst']",['3abe119862f9f239c8288317cb85acf8724e9b7f'],1,5,6,2,,,
f48effc89b5f13ffb6f1c111505982d6ac1ca81f,Minor fixes to cassandra.concurrent docs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-14 16:54:02-05:00,18000,2014-05-14 16:54:02-05:00,18000,True,False,['concurrent.py'],['e22270cd29ffe96158cd87923f4ad646f0f977f0'],5,5,10,1,,,
0b588ba1d22b37b4a35f21fcb45e342902e0b669,Start making libevwrapper.c py3k compatible,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-16 18:33:17-05:00,18000,2014-05-16 18:33:17-05:00,18000,True,False,['libevwrapper.c'],['f48effc89b5f13ffb6f1c111505982d6ac1ca81f'],43,65,108,1,0.0,0.0,1.0
ae684f05b431a8a68f149fb3d2295ca873c6a3bc,"Pass WriteType, not str to RetryPolicy.on_write_timeout

Fixes #123",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-20 13:32:58-05:00,18000,2014-05-20 13:32:58-05:00,18000,True,False,"['CHANGELOG.rst', 'decoder.py', 'policies.py']",['8908600c8352cc674d4726506870aa757c5bb11c'],1,13,14,3,,,
dc9b69ef3548ead35ad041176ed821578f464c8a,Fix compilation of libev C extension for py3k,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-20 14:52:34-05:00,18000,2014-05-20 14:52:34-05:00,18000,True,False,"['libevreactor.py', 'libevwrapper.c', 'setup.py']",['0b588ba1d22b37b4a35f21fcb45e342902e0b669'],11,12,23,3,0.4,0.8,0.4
222bc3403fe8fd90176fcb53b27b3a73b8640a98,Update libev unit tests for python3,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-20 14:52:56-05:00,18000,2014-05-20 14:52:56-05:00,18000,True,False,['test_libevreactor.py'],['dc9b69ef3548ead35ad041176ed821578f464c8a'],13,14,27,1,,,
25c201d19d6d38af949d5b3ae48390eeca87e67d,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-20 14:55:31-05:00,18000,2014-05-20 14:55:31-05:00,18000,True,False,['CHANGELOG.rst'],['222bc3403fe8fd90176fcb53b27b3a73b8640a98'],2,6,8,1,,,
a6a774b0fbdaadb48f9985f1ff586ed085519ba0,Handle unset CL on statements when printing/logging,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-21 16:31:29-05:00,18000,2014-05-21 16:31:29-05:00,18000,True,False,['query.py'],['c07fc05868da19355ec54922c968adea2360aac2'],3,3,6,1,,,
37b23c394093d942a35aeb97af438f277f557d7a,Don't submit tasks to executor after shutdown,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-21 16:34:35-05:00,18000,2014-05-21 16:34:35-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['ae684f05b431a8a68f149fb3d2295ca873c6a3bc'],1,7,8,2,1.0,1.0,0.0
161eda98a0ce6eb978649f096541eda0f02ff6aa,Add missing table properties.,Kevin Deldycke,kevin@deldycke.com,Kevin Deldycke,kevin@deldycke.com,2014-05-22 15:33:45+02:00,-7200,2014-05-22 15:33:45+02:00,-7200,True,False,['management.py'],['d407d1b2feee6c2671f12dc2972f00e2421bc996'],2,3,5,1,0.0,0.0,1.0
7ed8fbdb5f0fc5a77cc7296db0f3d3718b00b1da,Uppercase constants. That's how they're normalized by Cassandra.,Kevin Deldycke,kevin@deldycke.com,Kevin Deldycke,kevin@deldycke.com,2014-05-22 15:34:18+02:00,-7200,2014-05-22 15:34:18+02:00,-7200,True,False,['__init__.py'],['161eda98a0ce6eb978649f096541eda0f02ff6aa'],4,4,8,1,,,
44f6ea7bf7c1f82044cf6a0da1f84dc38c553d00,Unit test table properties setting.,Kevin Deldycke,kevin@deldycke.com,Kevin Deldycke,kevin@deldycke.com,2014-05-22 16:13:32+02:00,-7200,2014-05-22 16:13:32+02:00,-7200,True,False,['test_management.py'],['7ed8fbdb5f0fc5a77cc7296db0f3d3718b00b1da'],1,35,36,1,1.0,1.0,1.0
ea9ca3abff15fb9244adbb3227dc0bfe6ba2acfa,Table setting strings needs to be single quoted.,Kevin Deldycke,kevin@deldycke.com,Kevin Deldycke,kevin@deldycke.com,2014-05-22 16:14:24+02:00,-7200,2014-05-22 16:14:24+02:00,-7200,True,False,['management.py'],['44f6ea7bf7c1f82044cf6a0da1f84dc38c553d00'],1,4,5,1,0.0,0.0,1.0
f5eab308167e1a7ae96e0a95eea51ee81011b7c4,Handle mismatching schema table property name.,Kevin Deldycke,kevin@deldycke.com,Kevin Deldycke,kevin@deldycke.com,2014-05-22 16:14:57+02:00,-7200,2014-05-22 16:14:57+02:00,-7200,True,False,['test_management.py'],['ea9ca3abff15fb9244adbb3227dc0bfe6ba2acfa'],0,5,5,1,1.0,1.0,1.0
b7b26fb9454a353f46dc0f501518b9f3bf742246,"Fix mixed declarations and statements.

Starting in Python 3.4, distutils apparently adds
-Werror=declaration-after-statement to the C flags. This causes the
murmur extention build to fail. This patch corrects declarations which
are made after statements.",Colin Stolley,cstolley@hushmail.com,Colin Stolley,cstolley@hushmail.com,2014-05-22 10:02:53-05:00,18000,2014-05-22 10:02:53-05:00,18000,True,False,['murmur3.c'],['f48effc89b5f13ffb6f1c111505982d6ac1ca81f'],9,10,19,1,1.0,1.0,1.0
70d57e8668d54edd08d045e6603384ce4d5c1636,Add Python3.4 to tox and travis configs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-22 11:16:09-05:00,18000,2014-05-22 11:16:39-05:00,18000,True,False,"['.travis.yml', 'tox.ini']",['552f0243d240219bb070d04be2a067ef8b4719eb'],1,13,14,2,,,
19cd578a15e457824f3aa728c6c6b9d527370364,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-22 11:17:41-05:00,18000,2014-05-22 11:17:41-05:00,18000,True,False,['CHANGELOG.rst'],['70d57e8668d54edd08d045e6603384ce4d5c1636'],0,4,4,1,,,
31449d1dbb9662ee6497cbdcffb21f811f92742c,"Fix race condition during connect().

For https://datastax-oss.atlassian.net/browse/PYTHON-68

On python3, we occasionally see connection failures because the socket
is closed before the connect() is attempted. This is caused by the
asyncore event loop thread closing the socket prematurely. I suspect
this bug exists on python2 as well, but happens more often on python3
because of its more responsive thread scheduler. This patch causes the
the socket to be watched by the event loop only after the connect()
completes successfully.",Colin Stolley,cstolley@hushmail.com,Colin Stolley,cstolley@hushmail.com,2014-05-22 19:55:05-05:00,18000,2014-05-22 19:55:05-05:00,18000,True,False,['asyncorereactor.py'],['19cd578a15e457824f3aa728c6c6b9d527370364'],0,8,8,1,0.75,1.0,0.75
9947a67e876a94d66dc81b3ca68519b4f0d58df6,"Support v2 protocol authentication

Fixes #125, PYTHON-73",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-23 14:27:39-05:00,18000,2014-05-23 14:28:44-05:00,18000,True,False,"['CHANGELOG.rst', 'auth.py', 'cluster.py', 'connection.py', 'protocol.py', 'auth.rst', 'index.rst']",['4520c64a29343b7c40f4fe72628bd4e4c45016a0'],14,248,262,7,0.48484848484848486,0.48484848484848486,0.7575757575757576
64fe9ac6bc4b036141311ae269f78ac3763cc755,Add UserDefinedType support,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-23 17:00:24-05:00,18000,2014-05-23 17:00:24-05:00,18000,True,False,"['cqltypes.py', 'protocol.py']",['9947a67e876a94d66dc81b3ca68519b4f0d58df6'],1,43,44,2,0.36,1.0,0.72
2c2c2c48da2eba15d1cdb762d01ef3b1487c3dca,Pass protocol version to ser/deser functions,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-23 17:24:24-05:00,18000,2014-05-23 17:24:24-05:00,18000,True,False,"['cluster.py', 'connection.py', 'cqltypes.py', 'protocol.py', 'query.py']",['64fe9ac6bc4b036141311ae269f78ac3763cc755'],69,91,160,5,1.0,1.0,0.0
e3e6c4040f88f235d948d8a5d1d5d5c270f0f24e,Minor fixes and unit test updates,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-23 17:29:14-05:00,18000,2014-05-23 17:29:14-05:00,18000,True,False,"['cqltypes.py', 'query.py', 'test_marshalling.py', 'test_parameter_binding.py']",['2c2c2c48da2eba15d1cdb762d01ef3b1487c3dca'],9,9,18,4,,,0.0
dd2aa1372f9e0ec0dd572a86d355373127f9025e,Add blist.sortedset to cql encoders,Timor Raiman,timor@everything.me,Timor Raiman,timor@everything.me,2014-05-26 14:03:07+03:00,-10800,2014-05-26 14:03:07+03:00,-10800,True,False,['encoder.py'],['9947a67e876a94d66dc81b3ca68519b4f0d58df6'],0,9,9,1,,,
e0babd88ce43624330b41ae0db2787497fc05963,"Debug log when responding to auth challenge

Relates to #128",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-27 12:47:13-05:00,18000,2014-05-27 12:47:45-05:00,18000,True,False,['connection.py'],['b5de053bc3b1a3e18e69f29d9565aa4bbc42d6f4'],0,1,1,1,0.0,0.0,1.0
1191edf6551023206a02860a949766c84366da74,Fix Cluster._is_shutdown check in decorator,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-27 13:24:26-05:00,18000,2014-05-27 13:24:26-05:00,18000,True,False,['cluster.py'],['37b23c394093d942a35aeb97af438f277f557d7a'],1,1,2,1,,,
cc12ed9505abad81da08d16ba07b8aee0d7d8c1a,Log DC details about discovered hosts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-27 13:25:18-05:00,18000,2014-05-27 13:25:18-05:00,18000,True,False,['cluster.py'],['1191edf6551023206a02860a949766c84366da74'],1,1,2,1,,,
b5fbb206d99006d896e8afcb98927a3a943e94f3,Avoid unneeded rebuild of token replica map,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-27 13:49:39-05:00,18000,2014-05-27 13:49:39-05:00,18000,True,False,"['CHANGELOG.rst', 'metadata.py']",['cc12ed9505abad81da08d16ba07b8aee0d7d8c1a'],6,13,19,2,1.0,1.0,0.0
0bdb5475d99e187ecff21d4908b46f6754d9c16d,Avoid rebuilding token metadata when topology has not changed,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-27 14:05:17-05:00,18000,2014-05-27 14:05:17-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['b5fbb206d99006d896e8afcb98927a3a943e94f3'],4,11,15,2,0.2,0.2,0.0
ec2f3226986ef134bfcb06a8d6167e675697bdd5,Avoid preparing queries against ignored hosts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-27 14:15:13-05:00,18000,2014-05-27 14:15:13-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['0bdb5475d99e187ecff21d4908b46f6754d9c16d'],3,14,17,2,0.0,0.0,1.0
e9668b46dd1ad2bf6d6e09de015b21b2c9371eae,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-27 14:18:22-05:00,18000,2014-05-27 14:18:22-05:00,18000,True,False,['CHANGELOG.rst'],['ec2f3226986ef134bfcb06a8d6167e675697bdd5'],1,1,2,1,,,
663e71645daf005f7a3fd8c3eaf6a1f884b52f9f,Protocol-version specific collection decode/encode,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 11:31:11-05:00,18000,2014-05-28 11:31:11-05:00,18000,True,False,['cqltypes.py'],['e3e6c4040f88f235d948d8a5d1d5d5c270f0f24e'],11,23,34,1,0.0,1.0,0.0
33c523b02cf0405232cc3769db85e1432a0a23ef,Add link to cassandra.concurrent in Performance docs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 11:38:33-05:00,18000,2014-05-28 11:38:33-05:00,18000,True,False,['performance.rst'],['fdfe596dee419ad89a19ce06cb35b95eaa01b9aa'],0,5,5,1,,,
e59fe8503d8fe442064c384ac8e48c3bde8304c9,Move auth_provider validation to attr setter,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 12:10:21-05:00,18000,2014-05-28 12:10:21-05:00,18000,True,False,"['cluster.py', 'test_cluster.py']",['33c523b02cf0405232cc3769db85e1432a0a23ef'],23,48,71,2,1.0,1.0,1.0
d354b66f682f1eb45eb2c5994e21791dd8ce4267,Add Security docs page,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 12:27:27-05:00,18000,2014-05-28 12:27:27-05:00,18000,True,False,"['index.rst', 'security.rst']",['e59fe8503d8fe442064c384ac8e48c3bde8304c9'],0,78,78,2,,,
479786741f59aabce9271e338f28abb81af81550,Create Upgrading section of docs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 14:00:56-05:00,18000,2014-05-28 14:00:56-05:00,18000,True,False,"['index.rst', 'query_paging.rst', 'security.rst', 'upgrading.rst']",['d354b66f682f1eb45eb2c5994e21791dd8ce4267'],0,81,81,4,,,
b22ca0a1a35681dc635fe5e53b20742835e6fae1,Various doc fixes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 14:10:39-05:00,18000,2014-05-28 14:10:39-05:00,18000,True,False,"['cluster.py', 'metrics.py', 'query.py', 'metrics.rst', 'index.rst']",['479786741f59aabce9271e338f28abb81af81550'],7,19,26,5,,,
d1ae7c6f1d8dbe1d4acc8cc5f30f6df6de8f4aa0,Better index page for driver docs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 14:20:58-05:00,18000,2014-05-28 14:20:58-05:00,18000,True,False,['index.rst'],['b22ca0a1a35681dc635fe5e53b20742835e6fae1'],1,48,49,1,,,
3e28e270d7567d64a6d55298afb1b3986817b1c5,"Add missing 'versionadded' directives, minor cleanup",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 14:32:05-05:00,18000,2014-05-28 14:32:05-05:00,18000,True,False,"['cluster.py', 'query.py', 'decoder.rst', 'query.rst', 'upgrading.rst']",['d1ae7c6f1d8dbe1d4acc8cc5f30f6df6de8f4aa0'],11,36,47,5,,,
7835e37a36d68e250ba0b3b452dc09c7ef66d8c8,Make next version in CHANGELOG 2.0.0,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 14:43:28-05:00,18000,2014-05-28 14:43:28-05:00,18000,True,False,['CHANGELOG.rst'],['3e28e270d7567d64a6d55298afb1b3986817b1c5'],2,2,4,1,,,
66a5cca5abe8214e1bfd827e2f2714479ea1e41a,Mention Cluster.shutdown() in the upgrading guide,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 14:53:52-05:00,18000,2014-05-28 14:53:52-05:00,18000,True,False,['upgrading.rst'],['7835e37a36d68e250ba0b3b452dc09c7ef66d8c8'],1,17,18,1,,,
74d030edb2d9c02cd6f4e04f42da56ddcca823da,Release version 2.0.0,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 15:19:20-05:00,18000,2014-05-28 15:19:20-05:00,18000,True,False,"['CHANGELOG.rst', 'README.rst', '__init__.py']",['66a5cca5abe8214e1bfd827e2f2714479ea1e41a'],6,4,10,3,,,
fc974a70d924856a748a646bbd3bbc53f5426271,Make version 2.0.0.post,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 15:21:13-05:00,18000,2014-05-28 15:21:13-05:00,18000,True,False,['__init__.py'],['74d030edb2d9c02cd6f4e04f42da56ddcca823da'],1,1,2,1,,,
e1af5b3fb559e0c0917131ccce508bf5bbb77337,Add missing steps to README-dev for publishing docs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 15:24:28-05:00,18000,2014-05-28 15:24:28-05:00,18000,True,False,['README-dev.rst'],['fc974a70d924856a748a646bbd3bbc53f5426271'],0,2,2,1,,,
09ea6030d91ad38ce8663be0346e4453219ecc74,Use v3 collection serialization inside UDTs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 17:59:55-05:00,18000,2014-05-28 17:59:55-05:00,18000,True,False,['cqltypes.py'],['50f8aa7f0adb5a44247f5e673f980a9776bf1810'],1,3,4,1,,,
e8d6a577565b160c0a0e9953b9bcf283fd18d3d4,Serial consistency level support for BatchStatements,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 18:17:47-05:00,18000,2014-05-28 18:17:47-05:00,18000,True,False,"['cluster.py', 'protocol.py']",['09ea6030d91ad38ce8663be0346e4453219ecc74'],2,10,12,2,0.0,0.0,0.0
3713aa85b47b4453f1e5ba159ff27f3e281bd28d,Support for protocol-level timestamps,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 18:35:49-05:00,18000,2014-05-28 18:35:49-05:00,18000,True,False,"['cluster.py', 'protocol.py']",['e8d6a577565b160c0a0e9953b9bcf283fd18d3d4'],7,51,58,2,0.20689655172413793,0.20689655172413793,0.06896551724137931
84682187d898bde8a2bd0830eba58cba97a311ea,Fix is_shutdown check when running in executor,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 18:37:22-05:00,18000,2014-05-28 18:37:22-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['e1af5b3fb559e0c0917131ccce508bf5bbb77337'],1,10,11,2,,,
ceaece0b6343bc1a951d4760980713ab70c4392c,Release 2.0.1,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 18:38:15-05:00,18000,2014-05-28 18:38:15-05:00,18000,True,False,['__init__.py'],['84682187d898bde8a2bd0830eba58cba97a311ea'],1,1,2,1,,,
5103be2f2cc585289d62cd86f84673d7b9b38b5d,Make version 2.0.1.post,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 18:41:26-05:00,18000,2014-05-28 18:41:26-05:00,18000,True,False,['__init__.py'],['ceaece0b6343bc1a951d4760980713ab70c4392c'],1,1,2,1,,,
47e79ac6686447fa9f8034d2c8e889b16e634ddf,Handle v3 schema change messages,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-28 18:53:45-05:00,18000,2014-05-28 18:53:45-05:00,18000,True,False,['protocol.py'],['a90996759ce5d6ba76db10dcb88625011ba42573'],4,14,18,1,1.0,1.0,0.0
9f9a414ebb1a4f540873c5ed28b5af96baa9fcc5,"Add ""six >=1.6"" to requirements.txt

Fixes PYTHON-77",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-29 10:32:22-05:00,18000,2014-05-29 10:32:22-05:00,18000,True,False,['requirements.txt'],['5103be2f2cc585289d62cd86f84673d7b9b38b5d'],0,1,1,1,,,
420c8f9c960f32c786dda0a8c3cbae5e002aae12,"Fix mixed statements and declarations, memory leak

Cleaned up mixed statements and declarations which offend
-Werror=declaration-after-statement (under python 3.4).

Also fixed memory leak in Async_dealloc().",Colin Stolley,cstolley@hushmail.com,Colin Stolley,cstolley@hushmail.com,2014-05-29 22:29:07-05:00,18000,2014-05-29 22:29:07-05:00,18000,True,False,['libevwrapper.c'],['9f9a414ebb1a4f540873c5ed28b5af96baa9fcc5'],11,17,28,1,0.3333333333333333,0.6666666666666666,0.3333333333333333
d1f579b3ce71a9a62b1de8ad873be3c8c764cba5,Can blind update a map column such that it becomes an empty map.,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-05-30 13:28:46-04:00,14400,2014-05-30 13:28:46-04:00,14400,True,False,"['columns.py', 'statements.py']",['a60cf166db952f6572f386ff66dc79dc8c29034e'],9,21,30,2,1.0,0.0,1.0
011e491d5fa07579749878acb54bdfecd6c617af,Can blind update a set column such that it becomes an empty set.,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-05-30 14:14:28-04:00,14400,2014-05-30 14:14:28-04:00,14400,True,False,['statements.py'],['d1f579b3ce71a9a62b1de8ad873be3c8c764cba5'],0,4,4,1,1.0,0.0,1.0
0f11c430a7f3c74c432db5c2ef99493e6caeff7c,test for blind update of empty list,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-05-30 14:19:25-04:00,14400,2014-05-30 14:19:25-04:00,14400,True,False,['test_container_columns.py'],['011e491d5fa07579749878acb54bdfecd6c617af'],0,14,14,1,1.0,1.0,1.0
635879df6315e5a7f31a1c022dc6c89c68b67dd1,slight change to way blind update to empty handled in MapUpdateClause,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-05-30 14:28:49-04:00,14400,2014-05-30 14:28:49-04:00,14400,True,False,['statements.py'],['0f11c430a7f3c74c432db5c2ef99493e6caeff7c'],10,12,22,1,1.0,1.0,1.0
b00f84e284d9a36d4a827668b8c98fc13d240926,fixing get_context_size for blind update to None in SetUpdateClause,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-05-30 14:30:24-04:00,14400,2014-05-30 14:30:24-04:00,14400,True,False,['statements.py'],['635879df6315e5a7f31a1c022dc6c89c68b67dd1'],0,2,2,1,1.0,0.0,1.0
2695377da9aab231d8e9d2ee3d8767cf3145e0c8,slight fix to MapUpdateClause context size.  Fix MapUpdateClause assignment clause test.,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-05-30 14:37:38-04:00,14400,2014-05-30 14:37:38-04:00,14400,True,False,"['statements.py', 'test_assignment_clauses.py']",['b00f84e284d9a36d4a827668b8c98fc13d240926'],2,2,4,2,,,
98ef13169a1ec3256e122b2152305f98aaee3bc8,2 byte request IDs + queue-less req ID management,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-30 15:41:06-05:00,18000,2014-05-30 15:41:06-05:00,18000,True,False,"['cluster.py', 'connection.py', 'asyncorereactor.py', 'libevreactor.py', 'marshal.py', 'pool.py', 'protocol.py', 'test_asyncorereactor.py', 'test_libevreactor.py', 'test_connection.py', 'test_host_connection_pool.py', 'test_response_future.py']",['47e79ac6686447fa9f8034d2c8e889b16e634ddf'],103,164,267,12,0.0,0.8076923076923077,0.7692307692307693
375283feb8cce1977f456a1e73f9ee11b6adba2d,Don't require proto version to be passed to bind(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-30 16:18:37-05:00,18000,2014-05-30 16:18:37-05:00,18000,True,False,"['cluster.py', 'protocol.py', 'query.py', 'test_connection.py', 'test_parameter_binding.py']",['98ef13169a1ec3256e122b2152305f98aaee3bc8'],16,34,50,5,0.7333333333333333,0.8666666666666667,1.0
e64a45f5ee8335d42ba7775000ad10ab0556b4a0,Avoid KeyError in schema refresh when dropping keyspaces,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-30 16:50:05-05:00,18000,2014-05-30 16:50:05-05:00,18000,True,False,"['CHANGELOG.rst', 'metadata.py']",['9f9a414ebb1a4f540873c5ed28b5af96baa9fcc5'],1,10,11,2,,,
d69b8e62a5205ca76f4124b1994e54fb426f193c,Avoid registering exit cleanups multiple times,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-05-30 17:21:01-05:00,18000,2014-05-30 17:21:01-05:00,18000,True,False,"['CHANGELOG.rst', 'asyncorereactor.py']",['068d0226f9c2a3737959954261df40f4eef7d26e'],7,23,30,2,1.0,1.0,1.0
d075a487c79f73e94414c143ee356e146f0214a8,"A ModelDefinitionException is now thrown from the metaclass at model definition time if the model contains a column whose name conflicts with a built-in attribute or method.

(See https://github.com/cqlengine/cqlengine/issues/193)",Caleb Rackliffe,calebrackliffe@gmail.com,Caleb Rackliffe,caleb@shift.com,2014-06-03 01:55:00-07:00,25200,2014-06-03 01:55:00-07:00,25200,True,False,"['models.py', 'test_model.py']",['aad7e3b648ac9826977a60d2134c6494fbb5249f'],3,24,27,2,0.8333333333333334,0.8333333333333334,0.8333333333333334
d3ca9614fda54ce0539b6fce3eae82a3dbe7e266,"The pip plumbing for the sure library seems to be horribly broken in 1.2.7, so I propose pegging to the stable version and getting the Travis tests working again.

See https://github.com/gabrielfalcao/sure/pull/60",Caleb Rackliffe,caleb.rackliffe@gmail.com,Caleb Rackliffe,caleb@shift.com,2014-06-03 02:26:19-07:00,25200,2014-06-03 02:26:19-07:00,25200,True,False,['requirements.txt'],['aad7e3b648ac9826977a60d2134c6494fbb5249f'],1,1,2,1,,,
b6d45894332498552cb733d5ba7caf9dd1d02945,Move libev loop components into a class,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-03 14:30:36-05:00,18000,2014-06-03 14:30:36-05:00,18000,True,False,"['libevreactor.py', 'test_libevreactor.py']",['d69b8e62a5205ca76f4124b1994e54fb426f193c'],110,128,238,2,0.38461538461538464,1.0,1.0
251188d572cb2ecb378a1936459bd2bbac771280,"Delay initialization of shared connection state

This makes it much simpler to avoid sharing connection state across multiple
processes.

Fixes PYTHON-60",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-03 14:54:07-05:00,18000,2014-06-03 14:54:07-05:00,18000,True,False,"['cluster.py', 'connection.py', 'asyncorereactor.py', 'libevreactor.py', 'test_connection.py', 'test_asyncorereactor.py', 'test_libevreactor.py']",['b6d45894332498552cb733d5ba7caf9dd1d02945'],3,28,31,7,0.9333333333333333,0.9333333333333333,1.0
d7cb0bc0a686bb7223e49bfafbe57080ad3649ba,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-03 14:57:26-05:00,18000,2014-06-03 14:57:26-05:00,18000,True,False,['CHANGELOG.rst'],['251188d572cb2ecb378a1936459bd2bbac771280'],0,2,2,1,,,
a848d3bf81ebcaad4887b0b8c0557bf69c34d8ef,"Update debian dependencies for 2.0.x

Fixes #133",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-03 15:18:10-05:00,18000,2014-06-03 15:18:10-05:00,18000,True,False,"['CHANGELOG.rst', 'changelog', 'control']",['d7cb0bc0a686bb7223e49bfafbe57080ad3649ba'],4,12,16,3,,,
58b3c717d742bdc63b96cb61d5f2cb830fcfec62,"Add debian/control step to README-dev release steps

Relates to #133",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-03 15:20:07-05:00,18000,2014-06-03 15:20:07-05:00,18000,True,False,['README-dev.rst'],['a848d3bf81ebcaad4887b0b8c0557bf69c34d8ef'],0,2,2,1,,,
a6d3c06a2aa98a5014e52bfff2384e25f56383cb,Adding wait_other_notice=True for ccm,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-06-06 20:00:12-05:00,18000,2014-06-06 20:00:12-05:00,18000,True,False,"['__init__.py', 'test_metrics.py']",['58b3c717d742bdc63b96cb61d5f2cb830fcfec62'],3,3,6,2,,,
f8fd7942334775f138323b6478a1b07430b3e2b8,updated changelog,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-09 14:34:15-07:00,25200,2014-06-09 14:34:15-07:00,25200,True,False,['changelog'],['d8fd9571aa0dba7de6f5f829c321d94d99cb82bd'],3,6,9,1,,,
4eb4e74bf7b55d9c0d36cf91cc4bc5fcf93cafae,added native driver to requirements,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-09 15:14:53-07:00,25200,2014-06-09 15:14:53-07:00,25200,True,False,"['requirements.txt', 'setup.py']",['f8fd7942334775f138323b6478a1b07430b3e2b8'],1,2,3,2,,,
6180d5fda323e13c3956ce235b63c57f299755fe,getting native driver setup,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-09 17:49:33-07:00,25200,2014-06-09 17:49:33-07:00,25200,True,False,"['connection.py', 'management.py', 'base.py', 'upgrading.txt']",['4eb4e74bf7b55d9c0d36cf91cc4bc5fcf93cafae'],5,14,19,4,0.0,0.0,0.0
882fffb463240b655da3e08e38a6d370ac5d28fc,Better messages and docs for Read/WriteTimeouts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-10 11:24:23-05:00,18000,2014-06-10 11:24:23-05:00,18000,True,False,"['__init__.py', 'protocol.py']",['a6d3c06a2aa98a5014e52bfff2384e25f56383cb'],2,12,14,2,,,
d0e040d7dde8edcb3e1162a9ed3af63ebb26ba78,"Fix memory leak when destroying libev connections

The IO objects held a reference to their LibevConnection instances
through the callback.  This reference cycle was preventing the
connection from being garbage collected.

Fixes #93",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-10 14:45:38-05:00,18000,2014-06-10 14:45:38-05:00,18000,True,False,"['CHANGELOG.rst', 'libevreactor.py']",['882fffb463240b655da3e08e38a6d370ac5d28fc'],0,6,6,2,0.0,0.0,1.0
db98dde36cc2bdbe6371f35640ee9bbbd5de4269,Minor tweak to Read/WriteTimeout error summaries,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-10 14:49:16-05:00,18000,2014-06-10 14:49:16-05:00,18000,True,False,['protocol.py'],['d0e040d7dde8edcb3e1162a9ed3af63ebb26ba78'],2,2,4,1,,,
616eb26ae9ab7729eab8d0a05447feb7e793bf08,Ensure token map is rebuilt when nodes are removed,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-10 15:57:55-05:00,18000,2014-06-10 15:57:55-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['db98dde36cc2bdbe6371f35640ee9bbbd5de4269'],11,13,24,2,,,
88a7b5993f099197555577fdf3bf810624442e99,Release 2.0.2,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-10 16:22:54-05:00,18000,2014-06-10 16:22:54-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py', 'changelog']",['616eb26ae9ab7729eab8d0a05447feb7e793bf08'],1,8,9,3,,,
04273cde9947de4025e06a74a9d30f9d286b307b,Make version 2.0.2.post,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-10 16:25:00-05:00,18000,2014-06-10 16:25:00-05:00,18000,True,False,['__init__.py'],['88a7b5993f099197555577fdf3bf810624442e99'],1,1,2,1,,,
0ecc91ff25676a9bd1ff6320467520b8a5b8fd70,Fix changelog typo,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-10 16:32:05-05:00,18000,2014-06-10 16:32:05-05:00,18000,True,False,['CHANGELOG.rst'],['04273cde9947de4025e06a74a9d30f9d286b307b'],1,1,2,1,,,
5476e8288553131b4698a46aa7cfb3e533503eff,dict_factory docstring fix,Dmitry Belaventsev,dizpers@gmail.com,Dmitry Belaventsev,dizpers@gmail.com,2014-06-11 11:45:56+07:00,-25200,2014-06-11 11:45:56+07:00,-25200,True,False,['query.py'],['0ecc91ff25676a9bd1ff6320467520b8a5b8fd70'],1,1,2,1,,,
321cf779e849f6d8a1ad2ae73ffb85dd4b68828f,docstring fix,Dmitry Belaventsev,dizpers@gmail.com,Dmitry Belaventsev,dizpers@gmail.com,2014-06-11 11:55:19+07:00,-25200,2014-06-11 11:55:19+07:00,-25200,True,False,['query.py'],['5476e8288553131b4698a46aa7cfb3e533503eff'],1,1,2,1,,,
a199debd2f00c25abdea41faa89509717bf2892c,Document exceptions moving from cassandra.decoder to cassandra.protocol,Stan Hu,stanhu@gmail.com,Stan Hu,stanhu@gmail.com,2014-06-11 00:09:14-07:00,25200,2014-06-11 00:09:14-07:00,25200,True,False,['CHANGELOG.rst'],['0ecc91ff25676a9bd1ff6320467520b8a5b8fd70'],0,3,3,1,,,
43e4ebf40a8046610b274c2b1a1bfaf05870888d,"Added twisted-based event loop

This should address PYTHON-8.

- added unit tests
- import twistedreactor in cluster if libev is not available
- fixed unittest import and added copyright notice",Colin Stolley,cstolley@hushmail.com,Colin Stolley,cstolley@hushmail.com,2014-06-06 23:57:04-05:00,18000,2014-06-11 08:27:49-05:00,18000,True,False,"['cluster.py', 'twistedreactor.py', 'test_twistedreactor.py']",['58b3c717d742bdc63b96cb61d5f2cb830fcfec62'],2,483,485,3,0.822429906542056,0.897196261682243,0.794392523364486
fd3ae26c043bc43d4052f7768dcdadca3c22a84e,"Use six.moves for references to xrange

Fixes #138",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-11 13:12:55-05:00,18000,2014-06-11 13:12:55-05:00,18000,True,False,"['CHANGELOG.rst', 'geventreactor.py', 'libevreactor.py']",['a30e83b9ea23debda817d6bc4e903635200da809'],0,11,11,3,,,
fe9d0f2d26afdb23190f190ceef078c508a35899,"BoundStmt should inherit fetch_size from PreparedStmt

Fixes PYTHON-80",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-11 18:57:45-05:00,18000,2014-06-11 18:57:45-05:00,18000,True,False,"['CHANGELOG.rst', 'query.py', 'test_parameter_binding.py']",['fd3ae26c043bc43d4052f7768dcdadca3c22a84e'],0,21,21,3,1.0,1.0,0.9375
f060384b6adff5cc4443d6a85508c72d3c012203,"Use ev_loop_new and ev_loop_destroy

Related to #141",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-12 13:01:08-05:00,18000,2014-06-12 13:01:08-05:00,18000,True,False,['libevwrapper.c'],['fe9d0f2d26afdb23190f190ceef078c508a35899'],2,3,5,1,1.0,1.0,1.0
c277202ac906961b62061736abca5317cdecaf93,"Cleanup live watchers during libev loop cleanup

Relates to #141",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-12 13:07:33-05:00,18000,2014-06-12 13:07:33-05:00,18000,True,False,['libevreactor.py'],['f060384b6adff5cc4443d6a85508c72d3c012203'],0,10,10,1,0.0,0.0,1.0
cd9ff7077b1ca91e9661f744cab9d20545c788dd,"Add methods for cleaning up after forking

Relates to #141",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-12 13:08:01-05:00,18000,2014-06-12 13:08:01-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'libevreactor.py']",['c277202ac906961b62061736abca5317cdecaf93'],0,20,20,3,1.0,1.0,1.0
5b57a85f82f6b5c50ae7e8842db5ebdf246e0c85,"Detect fork in child proc, reinitialize reactor state",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-12 13:41:22-05:00,18000,2014-06-12 13:41:22-05:00,18000,True,False,"['CHANGELOG.rst', 'asyncorereactor.py', 'libevreactor.py']",['cd9ff7077b1ca91e9661f744cab9d20545c788dd'],0,16,16,3,0.9230769230769231,1.0,1.0
38306470bf0fc3f4499bd7e1c2d1eba987325647,"Replace six.BytesIO with io.BytesIO for speed-up

On python 2.6 and 2.7, six.BytesIO maps to StringIO, which is slow:

https://github.com/kelp404/six/blob/master/six.py#L478

Python 2.6 and 2.7 provide the io module (for compatability with
the Python 3 io module), which defines a faster BytesIO implementation.
cProfile reveals a significant speedup when using the io module. Using
six.BytesIO:

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  ...
  2277792    9.736    0.000   13.088    0.000 /usr/lib64/python2.6/StringIO.py:208(write)

However with io.BytesIO:

  2277792    0.920    0.000    0.920    0.000 {method 'write' of '_bytesio._BytesIO' objects}

This will break on Python 2.5, but I think that's ok.",Colin Stolley,cstolley@hushmail.com,Colin Stolley,cstolley@hushmail.com,2014-06-14 13:09:14-05:00,18000,2014-06-14 13:09:14-05:00,18000,True,False,['protocol.py'],['5b57a85f82f6b5c50ae7e8842db5ebdf246e0c85'],3,5,8,1,,,
5053fb241aed055933cb9d3b6bbde9fa0f715779,removing redundant assignment in MapUpdateClause,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-06-16 08:21:06-04:00,14400,2014-06-16 08:21:06-04:00,14400,True,False,['statements.py'],['f8fd7942334775f138323b6478a1b07430b3e2b8'],1,0,1,1,0.0,0.0,1.0
78d1654478777ec5959b83774d9ff74d696e4b18,removed cqlengine based exceptios in favor of native driver exceptions,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 14:49:14-07:00,25200,2014-06-16 14:49:14-07:00,25200,True,False,"['connection.py', 'base.py', 'test_connection_pool.py', 'test_connection_setup.py', 'upgrading.txt']",['6180d5fda323e13c3956ce235b63c57f299755fe'],49,13,62,5,0.0,0.0,0.0
0bb08e22ea7b95d6095426c7cc421f17cb1c352d,starting to use native driver for syncing tables,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 15:23:49-07:00,25200,2014-06-16 15:23:49-07:00,25200,True,False,"['connection.py', 'management.py']",['78d1654478777ec5959b83774d9ff74d696e4b18'],8,10,18,2,1.0,1.0,0.0
eb19c3e3e722f4bd9fda970bd760a6a8350969e8,creating table with native driver,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 16:25:34-07:00,25200,2014-06-16 16:25:34-07:00,25200,True,False,"['connection.py', 'management.py']",['0bb08e22ea7b95d6095426c7cc421f17cb1c352d'],2,4,6,2,,,
0c011a66d5866d994fa1987723d540af20be4b27,performing table alterations using native driver,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 16:29:13-07:00,25200,2014-06-16 16:29:13-07:00,25200,True,False,['management.py'],['eb19c3e3e722f4bd9fda970bd760a6a8350969e8'],1,1,2,1,,,
bccca12f13e39f13939d6b53681c19f72340dca1,reworking get_fields to use much simpler native driver calls,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 16:45:43-07:00,25200,2014-06-16 16:45:43-07:00,25200,True,False,['management.py'],['0c011a66d5866d994fa1987723d540af20be4b27'],15,6,21,1,1.0,1.0,0.0
bbbb3a1fbb116cef29a196b8360f57faafeb1020,get_fields now using native driver,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 16:51:32-07:00,25200,2014-06-16 16:51:32-07:00,25200,True,False,['management.py'],['bccca12f13e39f13939d6b53681c19f72340dca1'],4,3,7,1,0.0,1.0,0.0
434590cb850c10c6877aebb62da2724b1f08fe97,setting compaction options via native,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 17:15:48-07:00,25200,2014-06-16 17:15:48-07:00,25200,True,False,['management.py'],['bbbb3a1fbb116cef29a196b8360f57faafeb1020'],1,1,2,1,,,
60d58c193044d8498696675af73f67d4382f38c1,delete keyspace now uses native driver,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 17:17:37-07:00,25200,2014-06-16 17:17:37-07:00,25200,True,False,['management.py'],['434590cb850c10c6877aebb62da2724b1f08fe97'],4,3,7,1,0.0,0.0,0.0
f1f2ef0356e24d46db7bd82407e8a23495b4a085,dropping tables natively,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 17:33:55-07:00,25200,2014-06-16 17:33:55-07:00,25200,True,False,['management.py'],['60d58c193044d8498696675af73f67d4382f38c1'],1,1,2,1,,,
2dd3a388a0b659b481ac9d95a73261957bfebe3b,drop table now uses the native driver metadata instead of trying to do crazy raw calls,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 18:15:04-07:00,25200,2014-06-16 18:15:04-07:00,25200,True,False,"['connection.py', 'management.py']",['f1f2ef0356e24d46db7bd82407e8a23495b4a085'],11,15,26,2,,,
232e5e5558b86dd7cac5d9e5d3d3492bcf26a991,switched to cluster metadata for creating keyspaces,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 18:19:08-07:00,25200,2014-06-16 18:19:08-07:00,25200,True,False,['management.py'],['2dd3a388a0b659b481ac9d95a73261957bfebe3b'],24,24,48,1,1.0,1.0,1.0
a5b4535a8c3bf0152c077fa8a62df7b462da6869,removed a bunch of raw CQL calls in favor of the driver,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 18:38:58-07:00,25200,2014-06-16 18:38:58-07:00,25200,True,False,['management.py'],['232e5e5558b86dd7cac5d9e5d3d3492bcf26a991'],7,4,11,1,1.0,1.0,0.0
e4a763ceb3b2bc4526ec7c4da6a6b5e368d6c936,logic for indexes now using native driver and metadata,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-16 19:24:46-07:00,25200,2014-06-16 19:24:46-07:00,25200,True,False,['management.py'],['a5b4535a8c3bf0152c077fa8a62df7b462da6869'],24,13,37,1,1.0,1.0,0.0
2badda4a5aaad4c9b80ae9117b6d5c2c9c81e7ab,#66 IPv6 support in asyncreactor.,Erik Forsberg,forsberg@opera.com,Erik Forsberg,forsberg@opera.com,2014-06-04 14:31:14+02:00,-7200,2014-06-17 09:33:33+02:00,-7200,True,False,['asyncorereactor.py'],['5b57a85f82f6b5c50ae7e8842db5ebdf246e0c85'],2,13,15,1,0.0,0.0,0.0
f53d9b144e793af542b205ea26b73ddc4f4de3fe,#66: Rudimentary IPv6 support for libevreactor.,Erik Forsberg,forsberg@opera.com,Erik Forsberg,forsberg@opera.com,2014-06-05 11:16:20+02:00,-7200,2014-06-17 09:33:33+02:00,-7200,True,False,['libevreactor.py'],['2badda4a5aaad4c9b80ae9117b6d5c2c9c81e7ab'],2,11,13,1,0.0,0.0,0.0
18886ce8b33121f400de8d1b0328e8e5ef4d49a2,#66: Rudimentary IPv6 support for geventreactor.,Erik Forsberg,forsberg@opera.com,Erik Forsberg,forsberg@opera.com,2014-06-16 14:09:51+00:00,0,2014-06-17 09:33:33+02:00,-7200,True,False,['geventreactor.py'],['f53d9b144e793af542b205ea26b73ddc4f4de3fe'],2,14,16,1,0.0,1.0,0.0
48582f447698307725156e9196369dab083c730a,"Use BytesIO for reduced CPU consumption

Relates to #143",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-17 11:02:32-05:00,18000,2014-06-17 11:02:32-05:00,18000,True,False,"['CHANGELOG.rst', 'asyncorereactor.py', 'geventreactor.py', 'libevreactor.py']",['395b74a4d6400189b7fa074500a599f49bc9bab4'],12,16,28,4,,,
cf5dbbda848b243c8df2cba0bec8b1dd367728ce,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-17 09:48:57-07:00,25200,2014-06-17 09:48:57-07:00,25200,True,False,['VERSION'],['f8fd7942334775f138323b6478a1b07430b3e2b8'],1,1,2,1,,,
c9c8bb4b430f758e820b52bf762dd650ea7fcad3,"breaking everything, more or less",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-17 12:27:38-07:00,25200,2014-06-17 12:27:38-07:00,25200,True,False,"['statements.py', 'test_assignment_clauses.py', 'test_delete_statement.py', 'test_insert_statement.py', 'test_update_statement.py', 'test_where_clause.py']",['e4a763ceb3b2bc4526ec7c4da6a6b5e368d6c936'],39,39,78,6,,,
01bd654516e486491852524ff8dae6ded204d934,shouldn't be any more old school statements in there anymore,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-17 12:32:32-07:00,25200,2014-06-17 12:32:32-07:00,25200,True,False,['test_select_statement.py'],['c9c8bb4b430f758e820b52bf762dd650ea7fcad3'],4,4,8,1,,,
5202ec9ad1a97b2fb9f0c86f3d9edf5ac917740b,"Collect UDT info, handle UDT schema change pushes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-17 15:20:11-05:00,18000,2014-06-17 15:20:11-05:00,18000,True,False,"['cluster.py', 'metadata.py']",['4c82e99d8b3d7c50e06b251e3ea804e09d4da210'],59,99,158,2,1.0,1.0,0.0
65dc463d9f8d7db411082b768e1afe9e4dcf3511,Define serializer for UDTs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-17 15:53:36-05:00,18000,2014-06-17 15:53:36-05:00,18000,True,False,['cqltypes.py'],['5202ec9ad1a97b2fb9f0c86f3d9edf5ac917740b'],2,16,18,1,0.8,1.0,0.1
e7187abfb4289e3767faeb84a550100fe2f3e74b,Use io.BytesIO for collection serialization,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-17 15:55:00-05:00,18000,2014-06-17 15:55:00-05:00,18000,True,False,['cqltypes.py'],['48582f447698307725156e9196369dab083c730a'],3,6,9,1,0.0,1.0,1.0
aba577a2f98489a7da2a8c69d52a1e9054fda605,updating the compaction options codepath to use native metadata rather than query system tables,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-17 14:11:54-07:00,25200,2014-06-17 14:11:54-07:00,25200,True,False,['management.py'],['01bd654516e486491852524ff8dae6ded204d934'],17,10,27,1,1.0,0.0,0.0
5c32d6c6aa870031a61fef2a6f16bbf82da2e84e,"removed code for testing connection pool, which is being removed",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-17 14:15:13-07:00,25200,2014-06-17 14:15:13-07:00,25200,True,False,['test_management.py'],['aba577a2f98489a7da2a8c69d52a1e9054fda605'],57,14,71,1,0.0,0.0,0.0
17640917036954fcac017b4c2f0353afaaff31db,Don't share prepared stmt lock across Cluster instances,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-17 16:38:30-05:00,18000,2014-06-17 16:38:30-05:00,18000,True,False,['cluster.py'],['e7187abfb4289e3767faeb84a550100fe2f3e74b'],3,4,7,1,,,
499359afa20bf15bf9fd272cbe0a606d553a3559,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-17 16:39:10-05:00,18000,2014-06-17 16:39:10-05:00,18000,True,False,['CHANGELOG.rst'],['17640917036954fcac017b4c2f0353afaaff31db'],0,2,2,1,,,
c4ef43c26c5b41f5d546a939967e353d9b3c1131,Register classes for UDT deserialization,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-17 17:50:24-05:00,18000,2014-06-17 17:50:24-05:00,18000,True,False,"['cluster.py', 'connection.py', 'cqltypes.py', 'protocol.py', 'test_control_connection.py', 'test_response_future.py']",['dd28b585dca6f042f531ebe97dd9df3389e74518'],53,77,130,6,0.4,0.0,0.0
42b6c8e5a8a8189d7988b44872cd88c36b4660bf,Include keyspace in UDT class cache,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-17 18:10:59-05:00,18000,2014-06-17 18:10:59-05:00,18000,True,False,"['cqltypes.py', 'protocol.py']",['c4ef43c26c5b41f5d546a939967e353d9b3c1131'],4,5,9,2,0.0,0.0,0.0
4875e0a26c9a2a2d3f839b6e59d4d200c4c24674,Use fieldname instead of assuming tuples,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-17 18:18:07-05:00,18000,2014-06-17 18:18:07-05:00,18000,True,False,['cqltypes.py'],['42b6c8e5a8a8189d7988b44872cd88c36b4660bf'],2,2,4,1,,,
9a799c76d9eb2cb03261441623b9902be520cd10,Use io.BytesIO instead of six.BytesIO,Colin Stolley,cstolley@hushmail.com,Colin Stolley,cstolley@hushmail.com,2014-06-18 13:16:20-05:00,18000,2014-06-18 13:16:20-05:00,18000,True,False,['twistedreactor.py'],['3e3ba6752a467a04f69d939a8b5be5bb0fab1511'],1,1,2,1,,,
6bc5f944433e89769e8e4f4bf9afdfbde473b680,Remove unused methods,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 14:03:05-05:00,18000,2014-06-18 14:03:05-05:00,18000,True,False,['twistedreactor.py'],['9a799c76d9eb2cb03261441623b9902be520cd10'],13,0,13,1,0.0,0.0,0.0
ac37c33909e2940059f9397e5c013025c5c24cc0,fixing broken tests,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 12:03:28-07:00,25200,2014-06-18 12:03:28-07:00,25200,True,False,"['management.py', 'test_compaction_settings.py', 'test_management.py']",['5c32d6c6aa870031a61fef2a6f16bbf82da2e84e'],6,9,15,3,0.0,1.0,1.0
e989bcf42fe161427d6c224b880f86effbd78c33,fixing broken tests,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 12:15:11-07:00,25200,2014-06-18 12:15:11-07:00,25200,True,False,['test_compaction_settings.py'],['ac37c33909e2940059f9397e5c013025c5c24cc0'],2,4,6,1,,,
7e4f90c90830dca9f96d0d99750a5a5a3f6df300,Minor refactor of loop state handling,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 14:16:36-05:00,18000,2014-06-18 14:16:36-05:00,18000,True,False,['twistedreactor.py'],['6bc5f944433e89769e8e4f4bf9afdfbde473b680'],21,40,61,1,1.0,1.0,1.0
57a47995f5aca652ffe523f39489fe9058245d13,Defunct where appropriate,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 14:44:40-05:00,18000,2014-06-18 14:44:40-05:00,18000,True,False,['twistedreactor.py'],['7e4f90c90830dca9f96d0d99750a5a5a3f6df300'],2,12,14,1,1.0,1.0,1.0
83c019ea4b7ef5d4d0886a6efc0560f17456ac54,Add twisted reactor to benchmarking tools,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 14:44:55-05:00,18000,2014-06-18 14:44:55-05:00,18000,True,False,['base.py'],['57a47995f5aca652ffe523f39489fe9058245d13'],26,44,70,1,0.1111111111111111,0.0,1.0
f58c315fcd9306751ca03025795ba594483afdd2,Prefer asyncore instead of Twisted,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 14:45:32-05:00,18000,2014-06-18 14:45:32-05:00,18000,True,False,['cluster.py'],['83c019ea4b7ef5d4d0886a6efc0560f17456ac54'],5,2,7,1,,,
0e620db28a61bf8413b89733e10ffb36e5d78fce,Update docs about available reactors,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 14:47:01-05:00,18000,2014-06-18 14:47:01-05:00,18000,True,False,['cluster.py'],['f58c315fcd9306751ca03025795ba594483afdd2'],0,5,5,1,,,
0edfe56d773be0cbfed3e60c58488147ef4a7bac,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 14:48:31-05:00,18000,2014-06-18 14:48:31-05:00,18000,True,False,['CHANGELOG.rst'],['0e620db28a61bf8413b89733e10ffb36e5d78fce'],1,4,5,1,,,
2d425af0699a32b4eecc7d80db6d4602593cf57c,Update twisted reactor unit tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 14:53:37-05:00,18000,2014-06-18 14:53:37-05:00,18000,True,False,['test_twistedreactor.py'],['0edfe56d773be0cbfed3e60c58488147ef4a7bac'],19,14,33,1,1.0,1.0,1.0
f709878577e78739491ce41ea8de98dd417f192b,fixed all management tests,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 12:56:28-07:00,25200,2014-06-18 12:56:28-07:00,25200,True,False,"['management.py', 'test_compaction_settings.py']",['e989bcf42fe161427d6c224b880f86effbd78c33'],2,12,14,2,0.0,1.0,1.0
4cab5851f0a56ca23a1ad7bbd34c8145d2dc37cc,making sure we're 1.2 compatible,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 13:39:40-07:00,25200,2014-06-18 13:39:40-07:00,25200,True,False,"['connection.py', 'management.py', 'query.py', 'test_base_clause.py']",['f709878577e78739491ce41ea8de98dd417f192b'],7,11,18,4,1.0,1.0,0.0
7a838e2350d0da617b4f928e03960aea0914a0d7,Pass user type map to decode fns as necessary,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 16:08:22-05:00,18000,2014-06-18 16:08:22-05:00,18000,True,False,['protocol.py'],['4875e0a26c9a2a2d3f839b6e59d4d200c4c24674'],5,5,10,1,,,
f02692ff27539bc60cab38800f8c05ea62e804fa,switching from the prepared statements to parameterized statements,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 14:19:28-07:00,25200,2014-06-18 14:19:28-07:00,25200,True,False,"['functions.py', 'statements.py', 'test_base_clause.py', 'test_update_statement.py', 'test_where_clause.py']",['4cab5851f0a56ca23a1ad7bbd34c8145d2dc37cc'],18,19,37,5,,,
81081e709ba6a4062602e9734b526bb3b376a626,"fixed select queries, can use params now",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 14:24:12-07:00,25200,2014-06-18 14:24:12-07:00,25200,True,False,['test_select_statement.py'],['f02692ff27539bc60cab38800f8c05ea62e804fa'],4,4,8,1,,,
8480123f4005b7848bbd74d0969e80d92ff7a11c,Use registered UDTs for non-prepared encoding,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 16:29:05-05:00,18000,2014-06-18 16:29:05-05:00,18000,True,False,"['cluster.py', 'protocol.py', 'query.py', 'test_parameter_binding.py']",['7a838e2350d0da617b4f928e03960aea0914a0d7'],29,54,83,4,0.0,0.8888888888888888,0.0
47018ee65dc4e1c9e8ba5056a8501fce0cbc8749,fixing tests,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 14:29:19-07:00,25200,2014-06-18 14:29:19-07:00,25200,True,False,['test_assignment_clauses.py'],['81081e709ba6a4062602e9734b526bb3b376a626'],9,9,18,1,,,
684a605acb03ba11b04ebdba59b20f3c15d27f68,fixed tuple assignment issue,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 14:33:40-07:00,25200,2014-06-18 14:33:40-07:00,25200,True,False,"['statements.py', 'test_assignment_clauses.py']",['47018ee65dc4e1c9e8ba5056a8501fce0cbc8749'],5,5,10,2,,,
43454da71a8bb71d10f563ea45f9696f7eff9c93,fixed issue with counter placeholders,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 14:36:45-07:00,25200,2014-06-18 14:36:45-07:00,25200,True,False,"['statements.py', 'test_assignment_clauses.py']",['684a605acb03ba11b04ebdba59b20f3c15d27f68'],2,2,4,2,,,
84f39e6b4898af11e2c810a2ebbd051af93c3058,fixing counter statements,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 14:41:39-07:00,25200,2014-06-18 14:41:39-07:00,25200,True,False,['test_assignment_clauses.py'],['43454da71a8bb71d10f563ea45f9696f7eff9c93'],2,2,4,1,,,
21d43392b1eea643b5d9290c8f4476f5031a6283,fixed list append,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 14:48:58-07:00,25200,2014-06-18 14:48:58-07:00,25200,True,False,"['statements.py', 'test_assignment_clauses.py']",['84f39e6b4898af11e2c810a2ebbd051af93c3058'],2,2,4,2,,,
0b161a4b9c7843fa25f8e0df9c62215279097873,fixed counter test,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 14:51:22-07:00,25200,2014-06-18 14:51:22-07:00,25200,True,False,['test_assignment_clauses.py'],['21d43392b1eea643b5d9290c8f4476f5031a6283'],1,1,2,1,,,
d66ec78756fdd982ab5b6c78b9144ace8e4dbcbc,fixed string formatting,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 14:52:54-07:00,25200,2014-06-18 14:52:54-07:00,25200,True,False,['statements.py'],['0b161a4b9c7843fa25f8e0df9c62215279097873'],1,1,2,1,,,
52c736b57d2722d1d578086d68fec8ed2bae2cad,fixed update clause,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 15:07:58-07:00,25200,2014-06-18 15:07:58-07:00,25200,True,False,"['test_base_clause.py', 'test_delete_statement.py', 'test_update_statement.py']",['d66ec78756fdd982ab5b6c78b9144ace8e4dbcbc'],4,4,8,3,,,
82ebcac4ddd68b3fb6cad74a51777ba725b0092b,"actually executing against native proto now, need to gut out the remaining connection pool calls",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 15:17:17-07:00,25200,2014-06-18 15:17:17-07:00,25200,True,False,"['connection.py', 'statements.py']",['52c736b57d2722d1d578086d68fec8ed2bae2cad'],2,1,3,2,,,
0761453e402c64a867d86832b6f22d7e74dd241c,trying to rig up the old RowResult,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 15:29:26-07:00,25200,2014-06-18 15:29:26-07:00,25200,True,False,"['connection.py', 'query.py']",['82ebcac4ddd68b3fb6cad74a51777ba725b0092b'],3,7,10,2,1.0,1.0,0.75
91ef3c32f46554fb33d703e391860577fbe30f70,fixed TTL queries,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 16:28:07-07:00,25200,2014-06-18 16:28:07-07:00,25200,True,False,"['connection.py', 'management.py', 'query.py', 'test_insert_statement.py', 'test_ttl.py']",['0761453e402c64a867d86832b6f22d7e74dd241c'],13,30,43,5,0.8571428571428571,0.8571428571428571,0.42857142857142855
f3001d82ada236cd309fe4993cbdb6d13fbd7978,Allow specifying cassandra dir with env variable,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 18:42:46-05:00,18000,2014-06-18 18:42:46-05:00,18000,True,False,['__init__.py'],['f50490a46e4791faf18941cc3aee6d22491ab7dd'],7,18,25,1,0.0,1.0,1.0
901d9a16e4278458befe8303db0860b507705e36,Pushed schema changes are different from responses,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 18:43:56-05:00,18000,2014-06-18 18:43:56-05:00,18000,True,False,['protocol.py'],['f3001d82ada236cd309fe4993cbdb6d13fbd7978'],20,19,39,1,,,0.0
6d806ee4c855ed3e19cc0111ee7617e32f5dcb6b,"Integration tests for UDTs, related fixes",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-18 18:45:39-05:00,18000,2014-06-18 18:45:39-05:00,18000,True,False,"['cluster.py', 'connection.py', 'cqltypes.py', 'metadata.py', 'protocol.py', 'test_udts.py']",['901d9a16e4278458befe8303db0860b507705e36'],26,261,287,6,0.0379746835443038,1.0,0.9873417721518988
fd236ff5d6df040dade65c2829d11b7af6511c51,trying to properly create objects again,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 17:02:21-07:00,25200,2014-06-18 17:02:21-07:00,25200,True,False,"['connection.py', 'management.py', 'test_model_io.py']",['91ef3c32f46554fb33d703e391860577fbe30f70'],8,10,18,3,0.5,0.5,0.5
c359ac918115e636ec9355e19cd6ac55a1964ade,"additional checks for basic io, trying to track down why Rows aren't becoming models",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 17:46:57-07:00,25200,2014-06-18 17:46:57-07:00,25200,True,False,['test_model_io.py'],['fd236ff5d6df040dade65c2829d11b7af6511c51'],1,7,8,1,1.0,1.0,1.0
421119bb69463ba214cb5435f7c98c494d7cb381,"fixed the model construction, cache is broken though",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 18:43:15-07:00,25200,2014-06-18 18:43:15-07:00,25200,True,False,"['connection.py', 'management.py', 'models.py', 'query.py']",['c359ac918115e636ec9355e19cd6ac55a1964ade'],19,24,43,4,0.0,1.0,1.0
7d58249b69082948cc36ad7392dc42a57c80a0f9,starting on fixing value lists,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-18 19:09:02-07:00,25200,2014-06-18 19:09:02-07:00,25200,True,False,['query.py'],['421119bb69463ba214cb5435f7c98c494d7cb381'],6,11,17,1,1.0,1.0,1.0
997c5a85c5bc7cf64f73fa2278d16a6bc8113370,Dumb down table properties unit tests.,Kevin Deldycke,kevin@deldycke.com,Kevin Deldycke,kevin@deldycke.com,2014-06-19 11:59:01+02:00,-7200,2014-06-19 11:59:01+02:00,-7200,True,False,['test_management.py'],['f5eab308167e1a7ae96e0a95eea51ee81011b7c4'],28,67,95,1,0.16129032258064516,1.0,1.0
3c56fec1d8d79d6037d3b83703608d4889994012,Remove dead code and unused imports.,Kevin Deldycke,kevin@deldycke.com,Kevin Deldycke,kevin@deldycke.com,2014-06-19 12:01:29+02:00,-7200,2014-06-19 12:01:29+02:00,-7200,True,False,['test_management.py'],['997c5a85c5bc7cf64f73fa2278d16a6bc8113370'],7,1,8,1,,,
9ee72896faa16a0a5d4151d3634295ffccfb6e52,"Updated Debian-specific patch (failed to apply)

* Kept original patch author's in-line comment for reference
* Updated debian/changelog accordingly, just to make sure
* Added patch validation step to release protocol in README-dev",Oliver Bock,oliver.bock@aei.mpg.de,Oliver Bock,oliver.bock@aei.mpg.de,2014-06-19 15:03:18+02:00,-7200,2014-06-19 15:03:18+02:00,-7200,True,False,"['README-dev.rst', 'changelog', '0001-don-t-use-ez_setup.patch']",['2d425af0699a32b4eecc7d80db6d4602593cf57c'],3,11,14,3,,,
c80d463b8d4f19909e022233fb3412a3b5c21244,note in test so I know what exactly is supposed to come back,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 09:12:49-07:00,25200,2014-06-19 09:12:49-07:00,25200,True,False,['test_clustering_order.py'],['7d58249b69082948cc36ad7392dc42a57c80a0f9'],0,1,1,1,,,
3d7d97528ae9087269defa340cee902d17481caf,fixed docs around values lists while i'm in here,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 09:16:05-07:00,25200,2014-06-19 09:16:05-07:00,25200,True,False,['queryset.rst'],['c80d463b8d4f19909e022233fb3412a3b5c21244'],0,11,11,1,,,
ed2749f235655c8d8d66776671c37492f2e2bfb7,fixed docs error,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 09:22:28-07:00,25200,2014-06-19 09:22:28-07:00,25200,True,False,['queryset.rst'],['3d7d97528ae9087269defa340cee902d17481caf'],1,1,2,1,,,
5f2dce51a5269ba368f5ac71c366c22ea1fea27e,test around clustering order,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 09:30:10-07:00,25200,2014-06-19 09:30:10-07:00,25200,True,False,['test_clustering_order.py'],['6536e8394dd796b816f70ddc5d184d79b5f27807'],2,23,25,1,1.0,1.0,1.0
14594276ce584ce461934515c8e10db79a78f747,Only utf8 encode type names in Python 2,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-19 11:34:04-05:00,18000,2014-06-19 11:34:04-05:00,18000,True,False,['cqltypes.py'],['6d806ee4c855ed3e19cc0111ee7617e32f5dcb6b'],2,6,8,1,1.0,1.0,0.0
4a2d3b9f9ce6b2eaf311daffd47f6c3e92f3ea44,fixed flat query,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 09:35:42-07:00,25200,2014-06-19 09:35:42-07:00,25200,True,False,"['query.py', 'test_clustering_order.py']",['b329b7ddba455b51af4b54ad91947ac7316c55ae'],8,4,12,2,0.0,0.0,0.0
879339c01600fbacb7632705cd97c9835d51d2e3,fixing value lists,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 09:38:21-07:00,25200,2014-06-19 09:38:21-07:00,25200,True,False,"['query.py', 'test_value_lists.py']",['4a2d3b9f9ce6b2eaf311daffd47f6c3e92f3ea44'],1,3,4,2,,,
eed5d3ee7d2b9e31757f89a9ae6cbdde7611aa27,now calling native execute in batch,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 09:51:43-07:00,25200,2014-06-19 09:51:43-07:00,25200,True,False,['query.py'],['879339c01600fbacb7632705cd97c9835d51d2e3'],1,1,2,1,,,
f9baed3d99064b748c54c88bd2779fe117367408,gutting the pool out,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 09:53:36-07:00,25200,2014-06-19 09:53:36-07:00,25200,True,False,"['connection.py', 'test_batch_query.py']",['eed5d3ee7d2b9e31757f89a9ae6cbdde7611aa27'],28,0,28,2,1.0,1.0,1.0
fdf142b19f7069a69cedd230e211aab907028969,"count fixed, mock switched from connection pool to session",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 09:56:50-07:00,25200,2014-06-19 09:56:50-07:00,25200,True,False,"['query.py', 'test_polymorphism.py']",['f9baed3d99064b748c54c88bd2779fe117367408'],5,5,10,2,1.0,1.0,1.0
794e8dfd8450759be0e6ef7e6839414ec1f68025,fixing empty map issue,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 10:11:45-07:00,25200,2014-06-19 10:11:45-07:00,25200,True,False,['statements.py'],['fdf142b19f7069a69cedd230e211aab907028969'],1,1,2,1,,,
4eeed3c2dc55bfa5e4d71b4a817e1b36bb911e79,fix for values list,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 10:30:23-07:00,25200,2014-06-19 10:30:23-07:00,25200,True,False,['query.py'],['794e8dfd8450759be0e6ef7e6839414ec1f68025'],3,6,9,1,1.0,1.0,0.0
1baa2b7faa20b806f773106c52a05465a53301dc,fixed a few fails,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 10:37:57-07:00,25200,2014-06-19 10:37:57-07:00,25200,True,False,"['base.py', 'test_consistency.py', 'test_timestamp.py']",['4eeed3c2dc55bfa5e4d71b4a817e1b36bb911e79'],14,20,34,3,1.0,1.0,1.0
2250762395736d7b620262b36eb9045b36fc0962,fixing batching constructors,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 10:43:52-07:00,25200,2014-06-19 10:43:52-07:00,25200,True,False,"['query.py', 'upgrading.txt']",['1baa2b7faa20b806f773106c52a05465a53301dc'],2,3,5,2,,,
5280d526aaac9d9d16243404b474640968479308,removing connection pool,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 10:45:30-07:00,25200,2014-06-19 10:45:30-07:00,25200,True,False,['test_updates.py'],['2250762395736d7b620262b36eb9045b36fc0962'],2,2,4,1,,,
e30e99c6dcd0c7fdd3397f700c41a1f6d3e10af5,removed connection pool and all references,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 10:47:08-07:00,25200,2014-06-19 10:47:08-07:00,25200,True,False,"['connection.py', 'test_validation.py', 'test_polymorphism.py', 'test_updates.py', 'test_consistency.py', 'test_ttl.py']",['5280d526aaac9d9d16243404b474640968479308'],141,5,146,6,0.5679012345679012,0.2962962962962963,0.4567901234567901
281fe43ea4609b2ce7b6c0a2f8e8013d3d13b940,removed connection pool and all references,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 10:48:27-07:00,25200,2014-06-19 10:48:27-07:00,25200,True,False,['upgrading.txt'],['e30e99c6dcd0c7fdd3397f700c41a1f6d3e10af5'],1,5,6,1,,,
6cfa0df73e9d42013e1fdd2ea7adfd1489bac0f9,removed old context manager,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 12:33:55-07:00,25200,2014-06-19 12:33:55-07:00,25200,True,False,['connection.py'],['281fe43ea4609b2ce7b6c0a2f8e8013d3d13b940'],9,1,10,1,0.0,0.0,0.0
faffdfe912f7b511db47fee319b445de964b8b75,removed unused imports,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 12:46:26-07:00,25200,2014-06-19 12:46:26-07:00,25200,True,False,['connection.py'],['6cfa0df73e9d42013e1fdd2ea7adfd1489bac0f9'],9,1,10,1,,,
1d58e740bd06e6ee68ca325b1ee16ad6a322c3ad,fixing consistency level,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 13:37:57-07:00,25200,2014-06-19 13:37:57-07:00,25200,True,False,"['__init__.py', 'connection.py', 'query.py', 'test_consistency.py', 'upgrading.txt']",['faffdfe912f7b511db47fee319b445de964b8b75'],44,25,69,5,0.0,0.0,1.0
3b6a3a739d8d8028795e8977f951dc4877637a62,fixed multiple broken tests due to simple statement wrapper,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 14:13:17-07:00,25200,2014-06-19 14:13:17-07:00,25200,True,False,"['functions.py', 'test_validation.py', 'test_polymorphism.py']",['1d58e740bd06e6ee68ca325b1ee16ad6a322c3ad'],4,4,8,3,,,
ca2d0e27f850f823f8f68a5476586e1627047e74,fixed brokenness around timeuuids,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 14:23:36-07:00,25200,2014-06-19 14:23:36-07:00,25200,True,False,"['functions.py', 'test_queryoperators.py']",['3b6a3a739d8d8028795e8977f951dc4877637a62'],4,4,8,2,,,
40061ce45cd9f42584d828496ef0b2dd8b947b5b,fixed timeuuid.  again,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 14:24:58-07:00,25200,2014-06-19 14:24:58-07:00,25200,True,False,['test_queryoperators.py'],['ca2d0e27f850f823f8f68a5476586e1627047e74'],1,1,2,1,,,
2416d91a28b8796f6ccf36131cea1141daf51686,fixed batch consistency,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 14:43:31-07:00,25200,2014-06-19 14:43:31-07:00,25200,True,False,"['connection.py', 'test_consistency.py', 'test_timestamp.py', 'test_ttl.py']",['40061ce45cd9f42584d828496ef0b2dd8b947b5b'],8,12,20,4,1.0,1.0,0.0
bcec8a4d22b49d115d9941c8fc4d1c3426c2076c,fixed install requirements,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 14:45:14-07:00,25200,2014-06-19 14:45:14-07:00,25200,True,False,['setup.py'],['2416d91a28b8796f6ccf36131cea1141daf51686'],1,1,2,1,,,
24d8989069aea101d46c7c2b0a63324b4422c27d,fixed the last of the broken tests,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-19 14:57:18-07:00,25200,2014-06-19 14:57:18-07:00,25200,True,False,['test_timestamp.py'],['bcec8a4d22b49d115d9941c8fc4d1c3426c2076c'],3,3,6,1,,,
e5353dc1b1238530291e66f987436ac582098dbb,Log when refreshing schema due to schema change,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-20 11:21:57-05:00,18000,2014-06-20 11:21:57-05:00,18000,True,False,['cluster.py'],['14594276ce584ce461934515c8e10db79a78f747'],0,2,2,1,1.0,1.0,0.0
47f74ca323dc78bff30c67d340cb6e4282e09631,Handle UDT deletion correctly,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-20 11:22:25-05:00,18000,2014-06-20 11:22:25-05:00,18000,True,False,['metadata.py'],['e5353dc1b1238530291e66f987436ac582098dbb'],2,6,8,1,1.0,1.0,0.0
60d4787f2155d203aea7bed994981e177196ed1a,Update schema change handling for CASSANDRA-7413,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-20 11:22:57-05:00,18000,2014-06-20 11:22:57-05:00,18000,True,False,['protocol.py'],['47f74ca323dc78bff30c67d340cb6e4282e09631'],4,1,5,1,0.0,0.0,1.0
b7e2631abfbf466d7bd63eb062dc9a5f65fee0db,Remove sleeps in UDT integration tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-20 11:23:50-05:00,18000,2014-06-20 11:23:50-05:00,18000,True,False,['test_udts.py'],['60d4787f2155d203aea7bed994981e177196ed1a'],12,12,24,1,0.0,1.0,1.0
de57f366a86b0334377d7ad135bab54e828aeda9,removed bool quoter,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-20 11:00:32-07:00,25200,2014-06-20 11:00:32-07:00,25200,True,False,"['columns.py', 'test_value_io.py']",['24d8989069aea101d46c7c2b0a63324b4422c27d'],30,0,30,2,0.0,0.0,0.0
6c4c6f1a3f7e0846667e860b3ec30d5c09fb2c59,kwargs on setup,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-23 12:06:01-07:00,25200,2014-06-23 12:06:01-07:00,25200,True,False,"['connection.py', 'management.py', 'query.py', 'test_validation.py']",['de57f366a86b0334377d7ad135bab54e828aeda9'],20,22,42,4,1.0,1.0,0.0
41072658b9c7bee68f24d63eae62ea8e17cb2a4b,removed dead code,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-23 12:11:02-07:00,25200,2014-06-23 12:11:02-07:00,25200,True,False,"['connection.py', 'query.py']",['6c4c6f1a3f7e0846667e860b3ec30d5c09fb2c59'],12,1,13,2,0.0,0.0,0.0
7779a032066360f86b5b2e505618f206298c0f5f,fixes for consistency and setup -> native driver passthrough,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-23 12:27:46-07:00,25200,2014-06-23 12:27:46-07:00,25200,True,False,"['connection.py', 'upgrading.txt']",['41072658b9c7bee68f24d63eae62ea8e17cb2a4b'],8,13,21,2,1.0,0.0,0.0
cae504681f2794f31ffa1de8f108203a0cd7b72a,removed old fields,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-23 14:38:20-07:00,25200,2014-06-23 14:38:20-07:00,25200,True,False,['connection.py'],['7779a032066360f86b5b2e505618f206298c0f5f'],5,1,6,1,,,
82f3d4ed11396bff254028136c0e279d2be3af5b,fixing docs,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-23 14:43:07-07:00,25200,2014-06-23 14:43:07-07:00,25200,True,False,['connection.py'],['cae504681f2794f31ffa1de8f108203a0cd7b72a'],4,1,5,1,,,
41b4cf10aec623ca244a4c173d83465f88a6ac49,updated documentation,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-23 14:45:51-07:00,25200,2014-06-23 14:45:51-07:00,25200,True,False,"['index.rst', 'connection.rst']",['82f3d4ed11396bff254028136c0e279d2be3af5b'],11,7,18,2,,,
877a89d09a42872b28539dc59fa575079c659a4b,adding protocol version as option in tests.  need to get 1.2 working properly,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-23 15:03:26-07:00,25200,2014-06-23 15:03:26-07:00,25200,True,False,"['base.py', 'index.rst']",['41b4cf10aec623ca244a4c173d83465f88a6ac49'],1,6,7,2,,,
e2e144053083770ad67422f6d7b3f35f2c1ede35,fixed sync issue with 1.2,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-23 15:26:32-07:00,25200,2014-06-23 15:26:32-07:00,25200,True,False,['management.py'],['877a89d09a42872b28539dc59fa575079c659a4b'],1,1,2,1,,,
e38d02bbb31c0bb8a018740c4b9fa89979a4aff2,fixed readme,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-23 16:24:27-07:00,25200,2014-06-23 16:24:27-07:00,25200,True,False,['README.md'],['e2e144053083770ad67422f6d7b3f35f2c1ede35'],1,4,5,1,,,
71b1613d24f92f12a961d62362abe32fac550f5d,"Fix v1 protocol authentication example

Relates to #128",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 12:14:10-05:00,18000,2014-06-24 12:15:26-05:00,18000,True,False,['security.rst'],['c1fa1bfc426a9be8d3353485ce1d901f0cce122c'],4,7,11,1,,,
0c9ef2c15dbf28625429740ce35489ff49804d0e,Fix CompositeType column spec in CREATE TABLE stmts,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 13:52:04-05:00,18000,2014-06-24 13:52:04-05:00,18000,True,False,"['CHANGELOG.rst', 'cqltypes.py']",['71b1613d24f92f12a961d62362abe32fac550f5d'],2,11,13,2,1.0,1.0,1.0
4567f2d610fc47b0b0ce584443705c93ee06d932,Add support for tuple type,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 14:46:21-05:00,18000,2014-06-24 14:46:21-05:00,18000,True,False,"['cluster.py', 'cqltypes.py', 'encoder.py', 'test_types.py']",['f1d143cdfe8d93b2f6f0adaefc1f1e3902647eeb'],24,78,102,4,0.4166666666666667,1.0,0.6944444444444444
6bb41fca2eb296007cf016824dfc616ee013eab9,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-24 13:36:56-07:00,25200,2014-06-24 13:37:03-07:00,25200,True,False,['VERSION'],['1f63215fa8442b2218395cc186dfc623f1424baf'],1,1,2,1,,,
b57a91fa29bd96ef6496c93c115f06f876dd1264,Fix UDT deserialization,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 16:21:51-05:00,18000,2014-06-24 16:21:51-05:00,18000,True,False,['cqltypes.py'],['4567f2d610fc47b0b0ce584443705c93ee06d932'],1,18,19,1,0.0,1.0,0.0
2949a36554490840c600d77b3f9dca012cbc8cad,Register type code for tuple type,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 16:23:57-05:00,18000,2014-06-24 16:23:57-05:00,18000,True,False,['protocol.py'],['b57a91fa29bd96ef6496c93c115f06f876dd1264'],1,2,3,1,,,
db3d4b0e421809234f92c8011d93731a99d30f58,Simpler host connections for v3 protocol,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 16:36:25-05:00,18000,2014-06-24 16:36:25-05:00,18000,True,False,"['cluster.py', 'pool.py']",['2949a36554490840c600d77b3f9dca012cbc8cad'],5,157,162,2,0.6086956521739131,1.0,0.5978260869565217
8f43c80cfce918852bba93d1295adc833852fd91,Add protocol version option to benchmarks,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 16:40:31-05:00,18000,2014-06-24 16:40:31-05:00,18000,True,False,['base.py'],['db3d4b0e421809234f92c8011d93731a99d30f58'],2,7,9,1,0.0,0.0,1.0
dd245bf5795b7bf1fff00c6d81eabf3732160c4d,Adjust concurrency based on protocol version,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 16:44:53-05:00,18000,2014-06-24 16:44:53-05:00,18000,True,False,"['base.py', 'callback_full_pipeline.py']",['8f43c80cfce918852bba93d1295adc833852fd91'],3,11,14,2,0.7142857142857143,0.7142857142857143,0.8571428571428571
496674d04c3c2ea140956caf7a4cd370524f7dfe,Document setting Session.default_fetch_size to None,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 17:00:41-05:00,18000,2014-06-24 17:00:41-05:00,18000,True,False,['cluster.py'],['dd245bf5795b7bf1fff00c6d81eabf3732160c4d'],2,4,6,1,,,
82477e20ac90f28b835e9ddac9b04f067dfae27c,Don't set min/max/core requests/conns if using v3 protocol,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 17:03:46-05:00,18000,2014-06-24 17:03:46-05:00,18000,True,False,"['test_cluster.py', 'test_concurrent.py', 'test_query.py', 'test_query_paging.py']",['496674d04c3c2ea140956caf7a4cd370524f7dfe'],4,10,14,4,0.6666666666666666,1.0,1.0
fce517d87fd18e39d3d0b17c45ccebbc48f876b9,Correct collection packing for v3 protocol,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 18:24:11-05:00,18000,2014-06-24 18:24:11-05:00,18000,True,False,['cqltypes.py'],['82477e20ac90f28b835e9ddac9b04f067dfae27c'],5,7,12,1,0.5,1.0,0.0
9bb087415b435b8e9f049fa64d30b86caa1c3807,Add missing TupleType handling,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 18:25:01-05:00,18000,2014-06-24 18:25:01-05:00,18000,True,False,['protocol.py'],['fce517d87fd18e39d3d0b17c45ccebbc48f876b9'],0,4,4,1,0.0,0.0,0.0
720df07c88cf6a3d8bbe14058effe79db1b40433,BatchMessage flags were in the wrong place for v3,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 18:25:35-05:00,18000,2014-06-24 18:25:35-05:00,18000,True,False,['protocol.py'],['9bb087415b435b8e9f049fa64d30b86caa1c3807'],11,12,23,1,,,
7dd45c0a64a35e848a99644de784f61acf09c355,Handle different error message in 2.1,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-24 18:29:07-05:00,18000,2014-06-24 18:29:07-05:00,18000,True,False,['test_types.py'],['720df07c88cf6a3d8bbe14058effe79db1b40433'],1,4,5,1,0.0,0.0,1.0
19b8e84caea8c47bfd1a70f4fd9377afe5b75184,fixed default keyspace,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-25 07:37:32-07:00,25200,2014-06-25 07:37:32-07:00,25200,True,False,['connection.py'],['6bb41fca2eb296007cf016824dfc616ee013eab9'],0,4,4,1,1.0,1.0,0.0
130f554e49a068d66822c9f1dd93e6a06b82d09e,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-25 07:37:52-07:00,25200,2014-06-25 07:37:52-07:00,25200,True,False,['VERSION'],['19b8e84caea8c47bfd1a70f4fd9377afe5b75184'],1,1,2,1,,,
af9abb4cb69277979efc34e1295104e4ab49661d,"added old cql package back in, will need to be removed in next release",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-25 10:01:39-07:00,25200,2014-06-25 10:01:39-07:00,25200,True,False,"['VERSION', 'setup.py']",['130f554e49a068d66822c9f1dd93e6a06b82d09e'],2,2,4,2,,,
704824ea83829a73ce504a7468e607e1d32e926a,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-25 12:30:29-05:00,18000,2014-06-25 12:30:29-05:00,18000,True,False,['CHANGELOG.rst'],['7dd45c0a64a35e848a99644de784f61acf09c355'],13,21,34,1,,,
c74434370b563b5de1558bb0fd437851b0cea1ad,removed dead code and tests,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-25 10:50:20-07:00,25200,2014-06-25 10:50:20-07:00,25200,True,False,"['columns.py', 'test_container_columns.py']",['130f554e49a068d66822c9f1dd93e6a06b82d09e'],262,0,262,2,0.5962732919254659,0.7080745341614907,0.6645962732919255
a8a45c0fa6471e506c4fa842cbeaa4535fb64b44,fixed boolean defaults,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-25 11:11:33-07:00,25200,2014-06-25 11:11:33-07:00,25200,True,False,"['columns.py', 'test_validation.py']",['97aff39a4b5c28adf2bbe989a96cd59b12869f59'],2,21,23,2,1.0,1.0,1.0
cb335d9be01f3ce3a4f99bfcf031d1da9cbfac3d,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-25 11:11:47-07:00,25200,2014-06-25 11:11:47-07:00,25200,True,False,['VERSION'],['a8a45c0fa6471e506c4fa842cbeaa4535fb64b44'],1,1,2,1,,,
6055df24d010c243e222a515039f5777aff26b1c,"Fix cassandra.concurrent behavior with automatic paging

Fixes PYTHON-81",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-25 13:57:13-05:00,18000,2014-06-25 13:57:13-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py', 'concurrent.py', 'test_query_paging.py']",['704824ea83829a73ce504a7468e607e1d32e926a'],9,45,54,4,0.6956521739130435,0.6956521739130435,0.6956521739130435
5d75a339a96a324e09e84299fe869c5e8f1c3aaa,using native driver libs for decoding,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-25 12:08:37-07:00,25200,2014-06-25 12:08:37-07:00,25200,True,False,['columns.py'],['cb335d9be01f3ce3a4f99bfcf031d1da9cbfac3d'],3,2,5,1,,,
469799385e3fa8f820506feac651697b09f21590,used quoter in native driver,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-25 12:10:52-07:00,25200,2014-06-25 12:10:52-07:00,25200,True,False,['statements.py'],['5d75a339a96a324e09e84299fe869c5e8f1c3aaa'],1,1,2,1,,,
65975ccf77abdf5ce0e6b2f07362080caf724bd4,"version bump, removed old cql",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-25 12:11:30-07:00,25200,2014-06-25 12:11:30-07:00,25200,True,False,"['VERSION', 'setup.py']",['469799385e3fa8f820506feac651697b09f21590'],2,2,4,2,,,
380ddc5a03b9e086a2edabf6b8f5399c809c71e2,removed last cql.query reference,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-25 12:12:44-07:00,25200,2014-06-25 12:12:44-07:00,25200,True,False,['statements.py'],['65975ccf77abdf5ce0e6b2f07362080caf724bd4'],1,1,2,1,,,
3fa7148dea870adeee511feabd9de88ace715262,removed last instance of cql.quote,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-25 12:13:03-07:00,25200,2014-06-25 12:13:03-07:00,25200,True,False,['VERSION'],['380ddc5a03b9e086a2edabf6b8f5399c809c71e2'],1,1,2,1,,,
392288aa2b1940882c102665bd4ce2b2e20341b7,Properly defunct connections after protocol errors,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-26 14:05:36-05:00,18000,2014-06-26 14:05:36-05:00,18000,True,False,"['CHANGELOG.rst', 'connection.py']",['6055df24d010c243e222a515039f5777aff26b1c'],4,9,13,2,0.0,0.0,0.0
9468f6bd8fcff4630901d7179c5855bbd3119cc1,"Avoid UnicodeDecodeError when query string is unicode

Fixes PYTHON-76",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-06-26 16:47:02-05:00,18000,2014-06-26 16:47:02-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py', 'test_types.py']",['392288aa2b1940882c102665bd4ce2b2e20341b7'],1,11,12,3,0.7142857142857143,0.7142857142857143,0.7142857142857143
2c58106e87e0aa325e456f1bb8eefbca4666d677,LIMIT can be used in count queries,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-26 16:18:00-07:00,25200,2014-06-26 16:18:00-07:00,25200,True,False,"['statements.py', 'test_queryset.py', 'test_select_statement.py']",['10be802c84a05594cffef4a391d8ab85ae18a9df'],4,5,9,3,1.0,1.0,1.0
d6ae786bc56e5669356e0a180462a92a6d569241,removed default cqlengine keyspace #217,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-26 16:30:21-07:00,25200,2014-06-26 16:30:21-07:00,25200,True,False,"['connection.py', 'models.py']",['2c58106e87e0aa325e456f1bb8eefbca4666d677'],2,2,4,2,,,
36c98d3f9502f42a7060140b5a22685356a9b240,make sure setup before querying,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-26 16:35:44-07:00,25200,2014-06-26 16:35:44-07:00,25200,True,False,['connection.py'],['d6ae786bc56e5669356e0a180462a92a6d569241'],0,4,4,1,0.0,0.0,0.0
96d91793eb8a77505b7608ee0b1253e28196c74e,not allowing non-models to be passed to sync_table,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-26 17:42:14-07:00,25200,2014-06-26 17:42:14-07:00,25200,True,False,"['connection.py', 'management.py', 'test_management.py']",['36c98d3f9502f42a7060140b5a22685356a9b240'],3,15,18,3,0.6,0.6,1.0
e824a239362f861636055ff85e16407054922e29,"added faq, needs formatting",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-26 19:37:14-07:00,25200,2014-06-26 19:37:14-07:00,25200,True,False,"['statements.py', 'faq.rst']",['96d91793eb8a77505b7608ee0b1253e28196c74e'],0,11,11,2,,,
3d036f2e0ca562fdef07df1cceedbec595c71fa8,formatting for faq,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-26 19:40:04-07:00,25200,2014-06-26 19:40:04-07:00,25200,True,False,"['index.rst', 'faq.rst']",['e824a239362f861636055ff85e16407054922e29'],0,2,2,2,,,
0d3dbbed6c93b18d7e655cd1fdb51ac3f726d267,document named table,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-26 19:57:08-07:00,25200,2014-06-26 19:57:08-07:00,25200,True,False,['queryset.rst'],['3d036f2e0ca562fdef07df1cceedbec595c71fa8'],1,21,22,1,,,
1ccc7e64fb1676cf9ec2e76ec96473f77879b3b0,load test,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-26 21:23:05-07:00,25200,2014-06-26 21:23:05-07:00,25200,True,False,['test_load.py'],['0d3dbbed6c93b18d7e655cd1fdb51ac3f726d267'],0,33,33,1,1.0,1.0,1.0
5a6f9c89ad69f70ce27e1331fc3e8976d83e1323,"fixed issue #162, allows non equality filtering with allow_filtering",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 11:04:01-07:00,25200,2014-06-27 11:04:01-07:00,25200,True,False,"['query.py', 'test_queryset.py']",['1ccc7e64fb1676cf9ec2e76ec96473f77879b3b0'],2,26,28,2,1.0,1.0,1.0
8e18ab025029f20afb8549d6a7f2a96a4e1a0da0,fixed changelog,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 12:50:38-07:00,25200,2014-06-27 12:50:38-07:00,25200,True,False,['changelog'],['726a4755c3978deb5ad180a496641de43f92411b'],5,9,14,1,,,
36c3ae905b3f5c79e2a458d6593c782344797c1a,disallow None as a value in a filter #172,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 13:36:25-07:00,25200,2014-06-27 13:36:25-07:00,25200,True,False,"['models.py', 'query.py', 'test_model_io.py']",['8e18ab025029f20afb8549d6a7f2a96a4e1a0da0'],21,43,64,3,0.8333333333333334,0.8333333333333334,0.8333333333333334
393e2029a69eee48d5f21a53bb06a266adf0c478,create_table > sync_table,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 13:53:47-07:00,25200,2014-06-27 13:53:47-07:00,25200,True,False,['test_class_construction.py'],['36c3ae905b3f5c79e2a458d6593c782344797c1a'],4,4,8,1,,,
17811251f6fc22aa95fe8398c77b989cef9e3d36,delete_table no more,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 13:54:13-07:00,25200,2014-06-27 13:54:13-07:00,25200,True,False,['test_class_construction.py'],['393e2029a69eee48d5f21a53bb06a266adf0c478'],2,2,4,1,,,
dc80fb9912eda98c2e152eae2f2e6dd8833eb5e1,removed deprecated calls,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 13:57:48-07:00,25200,2014-06-27 13:57:48-07:00,25200,True,False,['test_validation.py'],['17811251f6fc22aa95fe8398c77b989cef9e3d36'],11,11,22,1,,,
2c9b49ab805a086eefcb8130c312b315d85edfff,removing deprecated calls,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 13:58:40-07:00,25200,2014-06-27 13:58:40-07:00,25200,True,False,['test_counter_column.py'],['dc80fb9912eda98c2e152eae2f2e6dd8833eb5e1'],4,4,8,1,,,
bc466895f02a47d82d84bef2cd19b11a756ea593,removed deprecated calls,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 14:00:15-07:00,25200,2014-06-27 14:00:15-07:00,25200,True,False,['test_queryset.py'],['2c9b49ab805a086eefcb8130c312b315d85edfff'],9,9,18,1,,,
5e856f8bc9b8ba01c68332ba031083fa5bd9eb9f,more deprecation removal,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 14:20:56-07:00,25200,2014-06-27 14:20:56-07:00,25200,True,False,['test_value_io.py'],['bc466895f02a47d82d84bef2cd19b11a756ea593'],4,4,8,1,,,
578764a3fa5e00223539fd5a72623e8d4629e65a,deprecation cleanup,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 14:22:38-07:00,25200,2014-06-27 14:22:38-07:00,25200,True,False,['test_equality_operations.py'],['5e856f8bc9b8ba01c68332ba031083fa5bd9eb9f'],4,4,8,1,,,
a7c908db7b45fc7f86da291452e4b49c37ddad15,removed cql requirement,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 14:23:21-07:00,25200,2014-06-27 14:23:21-07:00,25200,True,False,['requirements.txt'],['578764a3fa5e00223539fd5a72623e8d4629e65a'],1,0,1,1,,,
6d8f77c740b497c07c53c27b10455c4b4b55848a,updated docs,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 14:24:36-07:00,25200,2014-06-27 14:24:36-07:00,25200,True,False,['manage_schemas.rst'],['a7c908db7b45fc7f86da291452e4b49c37ddad15'],4,4,8,1,,,
bbae559c3288e9f3a80eb0e4b50d3a6364789146,removed last of deprecated code,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 14:26:16-07:00,25200,2014-06-27 14:26:16-07:00,25200,True,False,"['test_datetime_queries.py', 'manage_schemas.rst']",['6d8f77c740b497c07c53c27b10455c4b4b55848a'],5,5,10,2,,,
39e752cb25709eb7d4a1195e4963d8e9a7ced3bc,#218 create_table and delete_table are fully deprecated,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-06-27 14:30:47-07:00,25200,2014-06-27 14:30:47-07:00,25200,True,False,['management.py'],['bbae559c3288e9f3a80eb0e4b50d3a6364789146'],5,3,8,1,0.0,0.0,0.0
8834ec6392884cc020101f30f36b911a9850eea7,delayed connect. use setup(delayed_connect=True),Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-06-28 20:42:47-04:00,14400,2014-06-28 20:42:47-04:00,14400,True,False,['connection.py'],['3fa7148dea870adeee511feabd9de88ace715262'],1,20,21,1,0.0,0.9230769230769231,0.6153846153846154
533ab80060030701a8ab0e2108fe1632272f502f,"'IF NOT EXISTS' for insert statement

The usage is just like 'ttl'.",mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-07-01 18:48:58+08:00,-28800,2014-07-01 18:48:58+08:00,-28800,True,False,"['models.py', 'query.py', 'statements.py', 'test_checkexist.py']",['3fa7148dea870adeee511feabd9de88ace715262'],5,184,189,4,0.8144329896907216,0.979381443298969,0.7525773195876289
fe28679e7bf826f1e058e76ff24fd49749ec0b9d,"Fix dclocal_read_repair_chance table metadata

Fixes PYTHON-84",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-01 12:05:54-05:00,18000,2014-07-01 12:05:54-05:00,18000,True,False,"['CHANGELOG.rst', 'metadata.py']",['9468f6bd8fcff4630901d7179c5855bbd3119cc1'],1,14,15,2,1.0,1.0,1.0
f5d1f8432b7936bb0db6b2d1cddb3e376b968fef,delayed_connect is now lazy_connect,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-07-01 16:09:31-04:00,14400,2014-07-01 16:09:31-04:00,14400,True,False,['connection.py'],['8834ec6392884cc020101f30f36b911a9850eea7'],15,15,30,1,,,
88069cab8f6e2c0071b885f2a2a3ad4f42f08ac0,rename all 'check_exist' related things to 'if_not_exists',mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-07-02 12:53:22+08:00,-28800,2014-07-02 12:53:22+08:00,-28800,True,False,"['models.py', 'query.py', 'statements.py', 'test_ifnotexists.py']",['533ab80060030701a8ab0e2108fe1632272f502f'],56,56,112,4,,,
39efc92fa24a47fbc5f9289d3956224a0411050c,"Fix typo in dclocal_read_repair_chance

Relates to PYTHON-84",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-02 10:26:37-05:00,18000,2014-07-02 10:26:37-05:00,18000,True,False,['metadata.py'],['fe28679e7bf826f1e058e76ff24fd49749ec0b9d'],1,1,2,1,,,
1893dadc452e1aba1964d8f6101c362841d70cd3,delayed connect. use setup(delayed_connect=True),Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-06-28 20:42:47-04:00,14400,2014-07-02 14:21:02-04:00,14400,True,False,['connection.py'],['39e752cb25709eb7d4a1195e4963d8e9a7ced3bc'],1,20,21,1,0.0,0.9230769230769231,0.6153846153846154
4a8d19f01628048e0be7cb900a54b679e49f47df,delayed_connect is now lazy_connect,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-07-01 16:09:31-04:00,14400,2014-07-02 14:21:23-04:00,14400,True,False,['connection.py'],['1893dadc452e1aba1964d8f6101c362841d70cd3'],15,15,30,1,,,
8f847245fa244a2e23de34a6a29ba0e6e121eb0c,Fix bad request ID management from 2.1 support changes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-02 16:02:03-05:00,18000,2014-07-02 16:02:03-05:00,18000,True,False,"['connection.py', 'pool.py', 'test_asyncorereactor.py', 'test_libevreactor.py']",['39efc92fa24a47fbc5f9289d3956224a0411050c'],32,58,90,4,0.375,0.875,0.375
b5924f38a44c9ebb2e6936206188fe83d6e4e06a,trying to get travis to use nose instead of py.test,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-02 14:06:29-07:00,25200,2014-07-02 14:06:29-07:00,25200,True,False,['.travis.yml'],['86cae3f7f03a6f76f8ba0cd1428294df055f60ea'],2,4,6,1,,,
8372825687f5bb62adf5f5efed9489b60e21c24a,setting up tox for python 2 + 3 testing,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-02 16:47:45-07:00,25200,2014-07-02 16:47:45-07:00,25200,True,False,['tox.ini'],['b5924f38a44c9ebb2e6936206188fe83d6e4e06a'],0,6,6,1,,,
0ced4896fa2313db399d2387aa2edd0b536f2ef4,use current version of the dev libraries,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-02 17:16:12-07:00,25200,2014-07-02 17:16:12-07:00,25200,True,False,['requirements.txt'],['8372825687f5bb62adf5f5efed9489b60e21c24a'],4,4,8,1,,,
2bfdfcc495a0bc2ba3626d345388afd9abf98677,changelog,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-02 17:31:48-07:00,25200,2014-07-02 17:31:48-07:00,25200,True,False,['changelog'],['0ced4896fa2313db399d2387aa2edd0b536f2ef4'],6,22,28,1,,,
752960ef5a0dcc7caa29c069a897bfdbc64b1930,"'IF NOT EXISTS' for insert statement

The usage is just like 'ttl'.",mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-07-01 18:48:58+08:00,-28800,2014-07-03 13:54:33+08:00,-28800,True,False,"['models.py', 'query.py', 'statements.py', 'test_checkexist.py']",['2bfdfcc495a0bc2ba3626d345388afd9abf98677'],5,184,189,4,0.8144329896907216,0.979381443298969,0.7525773195876289
708f09a4cd9900c80e3fd5dd1a783fbda1ddc6c5,rename all 'check_exist' related things to 'if_not_exists',mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-07-02 12:53:22+08:00,-28800,2014-07-03 13:54:33+08:00,-28800,True,False,"['models.py', 'query.py', 'statements.py', 'test_ifnotexists.py']",['752960ef5a0dcc7caa29c069a897bfdbc64b1930'],56,56,112,4,,,
dd878240dc84c79885fd1de6afaf7c0b3ae41d68,rename keyspace for testing,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-07-03 14:27:48+08:00,-28800,2014-07-03 14:27:48+08:00,-28800,True,False,['test_ifnotexists.py'],['26ef6389c9eb30a9f6573cbc7ddb070899a87fb6'],1,1,2,1,,,
7a381327219f582aae6802e407a1094153c805cb,update docs,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-07-03 14:41:37+08:00,-28800,2014-07-03 14:41:37+08:00,-28800,True,False,['models.rst'],['dd878240dc84c79885fd1de6afaf7c0b3ae41d68'],0,6,6,1,,,
82195877b4e1871b10677944a4831c1c9aedd9ae,rewording FAQ item,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-07-03 11:40:32-07:00,25200,2014-07-03 11:40:32-07:00,25200,True,False,['faq.rst'],['2bfdfcc495a0bc2ba3626d345388afd9abf98677'],2,2,4,1,,,
cae022209fada866c2943b71f13a5a78a65fb705,"adding warning when keyspaces are undefined. Since a default keyspace can be set on the setup function, we can't throw an exception, because it may not have been called by the time the model class is created",Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-07-03 13:25:01-07:00,25200,2014-07-03 13:25:01-07:00,25200,True,False,"['models.py', 'test_class_construction.py']",['82195877b4e1871b10677944a4831c1c9aedd9ae'],1,36,37,2,0.5909090909090909,0.5909090909090909,0.5909090909090909
d3ce856f91343dc2cbea6cf9e879c2dd43038ddb,adding explicit keyspaces to ALL of the test models,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-07-03 15:10:01-07:00,25200,2014-07-03 15:10:01-07:00,25200,True,False,"['test_container_columns.py', 'test_counter_column.py', 'test_validation.py', 'test_value_io.py', 'test_compaction_settings.py', 'test_management.py', 'test_class_construction.py', 'test_equality_operations.py', 'test_model.py', 'test_model_io.py', 'test_polymorphism.py', 'test_updates.py', 'test_value_lists.py', 'test_batch_query.py', 'test_datetime_queries.py', 'test_queryoperators.py', 'test_queryset.py', 'test_updates.py', 'test_batch_query.py', 'test_consistency.py', 'test_load.py', 'test_timestamp.py', 'test_ttl.py']",['cae022209fada866c2943b71f13a5a78a65fb705'],0,91,91,23,0.0,1.0,1.0
f03bd5b2e534de0b394d095a606d17091b24535d,documenting the removal of the cqlengine keyspace,Blake Eggleston,bdeggleston@gmail.com,Blake Eggleston,bdeggleston@gmail.com,2014-07-03 15:38:04-07:00,25200,2014-07-03 15:38:04-07:00,25200,True,False,"['README.md', 'index.rst', 'models.rst']",['d3ce856f91343dc2cbea6cf9e879c2dd43038ddb'],5,7,12,3,,,
912ecb1131d3142549b0655909abae8d80281e3c,"setup has retry_connect, which will retry connect on next execute if Cassandra was down during setup.",Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-07-04 03:50:50-04:00,14400,2014-07-04 03:51:28-04:00,14400,True,False,['connection.py'],['86cae3f7f03a6f76f8ba0cd1428294df055f60ea'],5,19,24,1,0.0,0.0,0.0
8edb27bdc87611a9b39b762b20823c8b56d7896e,fixed pagedresult issue,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-07 14:19:28-07:00,25200,2014-07-07 14:19:28-07:00,25200,True,False,"['connection.py', 'exceptions.py', 'models.py', 'query.py', 'test_class_construction.py', 'test_queryset.py']",['90176ef63014fa7e2594be7663096f792672c523'],26,33,59,6,1.0,1.0,1.0
73ea42d932bd76d0104ee780ef4dacc408478dde,updated changelog,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-07 14:27:05-07:00,25200,2014-07-07 14:27:05-07:00,25200,True,False,['changelog'],['8edb27bdc87611a9b39b762b20823c8b56d7896e'],0,1,1,1,,,
2610fd782be8da812fe5f92e57b9db72d403936f,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-07 14:27:22-07:00,25200,2014-07-07 14:27:22-07:00,25200,True,False,['VERSION'],['73ea42d932bd76d0104ee780ef4dacc408478dde'],1,1,2,1,,,
bf58fdf30e4ea7f1de4e1f45bd8429ede86d1820,Update copyright on murmur3.c,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-08 09:18:26-05:00,18000,2014-07-08 09:18:26-05:00,18000,True,False,['murmur3.c'],['8f847245fa244a2e23de34a6a29ba0e6e121eb0c'],0,1,1,1,,,
7c5a608418d43f15ebd2089e0f71509595fd0ef6,reorder session check in execute to allow lazy connect,Michael Cyrulnik,lifto@mac.com,Michael Cyrulnik,lifto@mac.com,2014-07-08 11:20:43-04:00,14400,2014-07-08 11:20:43-04:00,14400,True,False,['connection.py'],['2cff48eef124d453daf24c8a3dcbd61bde7e1c24'],5,2,7,1,,,
831b4a2ab9ae4ffb7d8605e62cae433426e17e7c,"version bump, makefile for releasing",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-08 09:14:43-07:00,25200,2014-07-08 09:14:43-07:00,25200,True,False,"['Makefile', 'VERSION']",['2610fd782be8da812fe5f92e57b9db72d403936f'],1,15,16,2,,,
d0988232edd47e72d061edca07e1d35c7f9125bb,"Fix typo in Getting Started import

Fixes #148",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-08 11:34:26-05:00,18000,2014-07-08 11:34:26-05:00,18000,True,False,['getting_started.rst'],['bf58fdf30e4ea7f1de4e1f45bd8429ede86d1820'],1,1,2,1,,,
1fca5e0a027bf23e760864517033d6e02b3f0432,Fix unit tests that may break under gevent,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-08 12:12:33-05:00,18000,2014-07-08 12:12:33-05:00,18000,True,False,"['setup.py', 'test_asyncorereactor.py', 'test_libevreactor.py']",['d0988232edd47e72d061edca07e1d35c7f9125bb'],4,10,14,3,1.0,1.0,1.0
60ded354a9d0dbf39eeb8a549f1f05adcf97be7a,"Fix v3 proto header reading w/ gevent, twisted reactors

Fixes PYTHON-87",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-08 14:03:11-05:00,18000,2014-07-08 14:03:11-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'geventreactor.py', 'libevreactor.py', 'twistedreactor.py']",['1fca5e0a027bf23e760864517033d6e02b3f0432'],149,45,194,5,1.0,0.9830508474576272,0.3728813559322034
9dc31d00e87e23bde952e3df8981a1fade779c39,Avoid asyncore race condition on write availability,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-08 17:13:27-05:00,18000,2014-07-08 17:13:27-05:00,18000,True,False,"['CHANGELOG.rst', 'asyncorereactor.py']",['60ded354a9d0dbf39eeb8a549f1f05adcf97be7a'],7,8,15,2,,,
8ea861a60061ec3d3d5074cdcf4519c3b0209668,Bump ccm version to 2.0.9,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-09 10:59:45-05:00,18000,2014-07-09 10:59:45-05:00,18000,True,False,['__init__.py'],['9dc31d00e87e23bde952e3df8981a1fade779c39'],1,1,2,1,,,
02e92d6f34bcc08dac1951ef554859e8e633a4de,"Build partitioner, token map when contact_points == cluster

Fixes PYTHON-90",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-09 11:38:58-05:00,18000,2014-07-09 11:41:11-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['8ea861a60061ec3d3d5074cdcf4519c3b0209668'],1,7,8,2,,,
d8e802d6971e610f6d2327efa4e632ed80ed489d,"Make MM3 hash match C*'s hash for all values

Fixes #147
Fixes PYTHON-89",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-09 14:55:14-05:00,18000,2014-07-09 14:55:14-05:00,18000,True,False,"['CHANGELOG.rst', 'murmur3.c', 'test_metadata.py']",['02e92d6f34bcc08dac1951ef554859e8e633a4de'],40,51,91,3,1.0,1.0,1.0
9be7b48e23944a445965fef6db28c07a9e63277f,Fix mm3 hash tests under python3,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-09 15:35:30-05:00,18000,2014-07-09 15:35:30-05:00,18000,True,False,['test_metadata.py'],['d8e802d6971e610f6d2327efa4e632ed80ed489d'],3,3,6,1,,,
1ae4b82fac6c7136696f1740d5282a577d5dfc36,Avoid unnecessary ccm cluster switches in tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-09 17:02:59-05:00,18000,2014-07-09 17:02:59-05:00,18000,True,False,['__init__.py'],['9be7b48e23944a445965fef6db28c07a9e63277f'],1,11,12,1,0.5714285714285714,1.0,1.0
25a7acf5f930f2675ae50b31b45914ed6ae7c30d,Don't reconnect to IGNORED hosts when marked down,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-09 18:29:49-05:00,18000,2014-07-09 18:29:49-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py', 'test_loadbalancingpolicies.py']",['1ae4b82fac6c7136696f1740d5282a577d5dfc36'],2,14,16,3,0.4,1.0,0.6
d8aa5ff4881f630c857366be753b616ffe5aba2c,"Fix lazy_connect, call handle_lazy_connect before checking session existence",lenolib,engnutt@gmail.com,lenolib,engnutt@gmail.com,2014-07-10 11:29:41+02:00,-7200,2014-07-10 11:29:41+02:00,-7200,True,False,['connection.py'],['831b4a2ab9ae4ffb7d8605e62cae433426e17e7c'],1,2,3,1,,,
9bd8146f40211ae896e2f0e3c5bc9c78c55d3563,"Add CAS WriteType, avoiding KeyError on CAS write timeout

Fixes PYTHON-91",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-11 14:31:22-05:00,18000,2014-07-11 14:31:22-05:00,18000,True,False,['policies.py'],['25a7acf5f930f2675ae50b31b45914ed6ae7c30d'],0,6,6,1,,,
72259aab4bb294a8036b911a2b62802d593db766,Release version 2.1.0b1,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-11 15:35:50-05:00,18000,2014-07-11 15:35:50-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['9bd8146f40211ae896e2f0e3c5bc9c78c55d3563'],4,4,8,2,,,
ec36406dbd7fccf75a3085dc5f78f54fdda082eb,Correct version for 2.1.0b2,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-11 15:40:24-05:00,18000,2014-07-11 15:40:24-05:00,18000,True,False,['__init__.py'],['72259aab4bb294a8036b911a2b62802d593db766'],1,1,2,1,,,
4fd8498ca9bda4ee0d6bc481695a23426a6764be,Make version 2.1.0b1.post,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-11 15:46:18-05:00,18000,2014-07-11 15:46:18-05:00,18000,True,False,['__init__.py'],['ec36406dbd7fccf75a3085dc5f78f54fdda082eb'],1,1,2,1,,,
168d52b5521be4d58ed9c8d5828b5935d9a249bb,fixed docs,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-15 09:12:14-07:00,25200,2014-07-15 09:12:14-07:00,25200,True,False,['conf.py'],['2610fd782be8da812fe5f92e57b9db72d403936f'],4,4,8,1,,,
5b3f11b8cebb379bdb5e1b0082e55cf7a807874c,Add more test and benchmark instructions to README-dev.rst,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-15 14:29:58-05:00,18000,2014-07-15 14:29:58-05:00,18000,True,False,['README-dev.rst'],['4fd8498ca9bda4ee0d6bc481695a23426a6764be'],0,43,43,1,,,
ec097f113142358cb928339af81859c39f508592,Fix UDT column types in CREATE TABLE statements,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-15 17:10:56-05:00,18000,2014-07-15 17:11:24-05:00,18000,True,False,"['CHANGELOG.rst', 'cqltypes.py', 'protocol.py']",['5b3f11b8cebb379bdb5e1b0082e55cf7a807874c'],6,29,35,3,1.0,1.0,0.0
1ef8f3331fb5d33d6e35fbbca947ae2109a736cd,Return list columns as lists instead of tuples,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-15 17:57:16-05:00,18000,2014-07-15 17:57:16-05:00,18000,True,False,"['CHANGELOG.rst', 'cqltypes.py', 'test_types.py', 'test_marshalling.py']",['ec097f113142358cb928339af81859c39f508592'],7,13,20,4,1.0,1.0,0.0
4bf5a41595a90ea1b3cd0673b7f6366ae9753dff,Log when using CASSANDRA_DIR for integration tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-15 18:04:43-05:00,18000,2014-07-15 18:04:43-05:00,18000,True,False,['__init__.py'],['1ef8f3331fb5d33d6e35fbbca947ae2109a736cd'],2,4,6,1,0.0,0.0,1.0
e95f74b825841dfe89a61c0b165939b25321e0ef,Start building test for PYTHON-96,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-15 19:55:50-05:00,18000,2014-07-15 19:55:50-05:00,18000,True,False,['test_metadata.py'],['4bf5a41595a90ea1b3cd0673b7f6366ae9753dff'],1,40,41,1,0.0,1.0,1.0
3929b72aecfb1982da0c9748821c0c39fb7169fa,added clustering_order,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-15 20:01:06-07:00,25200,2014-07-15 20:01:06-07:00,25200,True,False,['models.rst'],['f7d4a899b8894460f274cc5150dae9a844e62db5'],0,3,3,1,,,
93586e48f2e12614dd767ebcd61efb37806eced0,clustering keys example,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-15 20:05:39-07:00,25200,2014-07-15 20:05:39-07:00,25200,True,False,['models.rst'],['3929b72aecfb1982da0c9748821c0c39fb7169fa'],0,12,12,1,,,
cbc5f205500e1c8353907732164e80fc53e90655,clustering example,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-15 20:08:11-07:00,25200,2014-07-15 20:08:11-07:00,25200,True,False,['models.rst'],['93586e48f2e12614dd767ebcd61efb37806eced0'],0,11,11,1,,,
011dc2508d14b817176ebe856dc0b1f35f0dd54b,"examples, plural",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-15 20:08:34-07:00,25200,2014-07-15 20:08:34-07:00,25200,True,False,['models.rst'],['cbc5f205500e1c8353907732164e80fc53e90655'],2,2,4,1,,,
2d92a702805dd755fb24476413e8b70b12696634,syncing examples,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-15 20:10:41-07:00,25200,2014-07-15 20:10:41-07:00,25200,True,False,['models.rst'],['011dc2508d14b817176ebe856dc0b1f35f0dd54b'],0,9,9,1,,,
b92bf2021bb0c6ae80544d041576487b7bcaa925,fixed code block,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-15 20:11:19-07:00,25200,2014-07-15 20:11:19-07:00,25200,True,False,['models.rst'],['2d92a702805dd755fb24476413e8b70b12696634'],2,2,4,1,,,
efa680c2f3da62e3c5f19d41de48c0a6b4c2b021,Add table_meta.export_as_string() test inf,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-16 11:55:33-05:00,18000,2014-07-16 11:55:33-05:00,18000,True,False,['test_metadata.py'],['e95f74b825841dfe89a61c0b165939b25321e0ef'],0,3,3,1,0.0,1.0,1.0
c662a8864fd95146b09924575ccb4e676f17f9dd,Use get_server_versions() for version checks,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-16 12:03:40-05:00,18000,2014-07-16 12:03:40-05:00,18000,True,False,['test_metadata.py'],['efa680c2f3da62e3c5f19d41de48c0a6b4c2b021'],3,3,6,1,,,
d67699db26d39b81584a2837073fd91dbf10034c,Check CASSANDRA_HOME as well during testing,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-16 13:06:29-05:00,18000,2014-07-16 13:06:29-05:00,18000,True,False,['__init__.py'],['4bf5a41595a90ea1b3cd0673b7f6366ae9753dff'],0,3,3,1,0.0,0.0,1.0
3cdde4840052c81fece9984c7eaad6661499d5e8,"Avoid moving retry to next host when request ID == 0

Fixes PYTHON-88",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-16 17:59:12-05:00,18000,2014-07-16 17:59:36-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['d67699db26d39b81584a2837073fd91dbf10034c'],1,2,3,2,,,
12d11fe8e938288d6bf8e954d6110206c3ae3d2e,"Add UserType.as_cql_query, unit test coverage",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-16 18:20:45-05:00,18000,2014-07-16 18:20:45-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['3cdde4840052c81fece9984c7eaad6661499d5e8'],1,69,70,2,0.41379310344827586,0.41379310344827586,1.0
da5109a20bea2b67f8284ecb84e01304be07d54f,Set fetch_size correctly in Statement.__init__,Usman Masood,usmanm@locu.com,Usman Masood,usmanm@locu.com,2014-07-17 00:04:47+00:00,0,2014-07-17 00:04:47+00:00,0,True,False,['query.py'],['12d11fe8e938288d6bf8e954d6110206c3ae3d2e'],1,1,2,1,,,
d8973e7eca8331b3a28e3f3e3f337db1ab013d74,"Fix disabling paging on a per-statement basis

Relates to #151
Fixes PYTHON-93",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-17 15:57:52-05:00,18000,2014-07-17 15:57:52-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py', 'query.py', 'test_query_paging.py']",['2d5754d110994655b27fcbf3b2da4d9a3fe7c365'],8,93,101,4,0.017857142857142856,1.0,0.9821428571428571
1e99ac643802e029a504abd5793c2e0b5b18182b,Add a few extra tests for tuples,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-17 18:24:24-05:00,18000,2014-07-17 18:24:24-05:00,18000,True,False,['test_types.py'],['d67699db26d39b81584a2837073fd91dbf10034c'],4,67,71,1,0.0,1.0,1.0
2532e4ffb9644ec687db647155eac463ee058a4e,Added datatype_utils file,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-17 18:26:42-05:00,18000,2014-07-17 18:26:42-05:00,18000,True,False,['datatype_utils.py'],['1e99ac643802e029a504abd5793c2e0b5b18182b'],0,106,106,1,0.05,0.05,1.0
944c35de4bcd11108b0271854b326bb216713639,work in progress with UDT tests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2014-07-17 18:20:11-07:00,25200,2014-07-17 18:20:11-07:00,25200,True,False,['test_udts.py'],['d8973e7eca8331b3a28e3f3e3f337db1ab013d74'],1,99,100,1,0.02127659574468085,1.0,1.0
66d67a9758e80ab1a80b3cf49af495093400a58a,Minor tuple test adjustments,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-17 21:45:55-05:00,18000,2014-07-17 21:45:55-05:00,18000,True,False,['test_types.py'],['2532e4ffb9644ec687db647155eac463ee058a4e'],9,8,17,1,,,
4b946a7074e28d95202202f2327b7c8f7dbd14bb,"Fix typo in getting started guide

Fixes #154",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-18 11:02:48-05:00,18000,2014-07-18 11:03:08-05:00,18000,True,False,['getting_started.rst'],['6aee68e8cc19fc52c547b643fece7ff36e9b2ade'],1,1,2,1,,,
09f737b2048f4a150f05ebfe3bc88cbdb9d3642e,Docs and example for Cluster.register_user_type,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-18 11:50:25-05:00,18000,2014-07-18 11:50:25-05:00,18000,True,False,['cluster.py'],['4b946a7074e28d95202202f2327b7c8f7dbd14bb'],0,47,47,1,,,
1dd1bce344a1c043a7708d311903de413120b88f,Update API doc methods,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-18 11:57:38-05:00,18000,2014-07-18 11:57:38-05:00,18000,True,False,['cluster.rst'],['09f737b2048f4a150f05ebfe3bc88cbdb9d3642e'],0,6,6,1,,,
e38f8580d1b691ddd0c561d54c209abc221e58f3,Friendlier exception when user type does not exist,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-18 12:36:54-05:00,18000,2014-07-18 12:36:54-05:00,18000,True,False,"['cluster.py', 'cluster.rst', 'test_udts.py']",['1dd1bce344a1c043a7708d311903de413120b88f'],2,28,30,3,1.0,1.0,0.4
45a3a04458c5aa08ebdfbd2467e0835d527294ef,implemented udt datatype tests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2014-07-18 13:20:53-07:00,25200,2014-07-18 13:20:53-07:00,25200,True,False,['test_udts.py'],['944c35de4bcd11108b0271854b326bb216713639'],61,45,106,1,0.0,1.0,1.0
1e17e70892dd0b4f88736b99156d4e165074cd54,Add comments for recently submitted tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-18 15:22:13-05:00,18000,2014-07-18 15:22:13-05:00,18000,True,False,"['datatype_utils.py', 'test_types.py']",['e38f8580d1b691ddd0c561d54c209abc221e58f3'],0,33,33,2,,,
b80387e32e06d1794f59150f30d80cad8f552eda,Docs for cassandra.encoder,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-18 15:27:31-05:00,18000,2014-07-18 15:45:00-05:00,18000,True,False,"['encoder.py', 'encoder.rst', 'metrics.rst', 'index.rst']",['1e17e70892dd0b4f88736b99156d4e165074cd54'],1,99,100,4,,,
f41d05d539d619a1ff8032c14328ac8c7aee1380,Document Session.encoders,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-18 15:35:32-05:00,18000,2014-07-18 15:45:00-05:00,18000,True,False,['cluster.py'],['b80387e32e06d1794f59150f30d80cad8f552eda'],2,24,26,1,,,
871ae525fd3c59477f4b2bb64cc6d0f2210f1c25,Don't depend on v3 protocol for reading UDTs,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-18 15:44:31-05:00,18000,2014-07-18 15:45:00-05:00,18000,True,False,"['cluster.py', 'connection.py', 'pool.py', 'test_host_connection_pool.py']",['f41d05d539d619a1ff8032c14328ac8c7aee1380'],59,65,124,4,0.0,0.0,0.0
d9a3b409c1b8c7113527d9ce78a4fe73ce856b3b,cleanup,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2014-07-18 13:48:34-07:00,25200,2014-07-18 13:48:34-07:00,25200,True,False,['test_udts.py'],['45a3a04458c5aa08ebdfbd2467e0835d527294ef'],7,6,13,1,0.0,0.0,0.0
b4fa897fb29e31ef0d0a5a46d82c190589fbb899,shortened params using*,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2014-07-18 14:12:09-07:00,25200,2014-07-18 14:12:09-07:00,25200,True,False,['test_udts.py'],['969fe9e1c6f83481395c8ddc215b08e33bd967ff'],16,2,18,1,1.0,0.0,0.0
9121cb1b2f9295a30dc117c46387656875f01b99,Add nested tuple tests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-18 17:03:12-05:00,18000,2014-07-18 17:03:12-05:00,18000,True,False,['test_types.py'],['871ae525fd3c59477f4b2bb64cc6d0f2210f1c25'],2,65,67,1,0.2857142857142857,1.0,1.0
ea4006b096bff59d35754c2d0a87ed9b1282647e,programmatically create data and insert,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2014-07-18 17:28:01-07:00,25200,2014-07-18 17:28:01-07:00,25200,True,False,['test_udts.py'],['b4fa897fb29e31ef0d0a5a46d82c190589fbb899'],20,21,41,1,1.0,0.0,0.0
5f5beda4c68cb6212ee9ac4893e2c42f155e3068,Correct import in example for `tuple_factory`.,Andrew J Lenards,andrew.lenards@gmail.com,Andrew J Lenards,andrew.lenards@gmail.com,2014-07-20 09:07:00-07:00,25200,2014-07-20 09:07:00-07:00,25200,True,False,['query.py'],['871ae525fd3c59477f4b2bb64cc6d0f2210f1c25'],1,1,2,1,,,
5981a16499e875930b876cf5ada64601936b2e2a,programmatically automated type creation,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2014-07-21 11:32:20-07:00,25200,2014-07-21 11:32:20-07:00,25200,True,False,['test_udts.py'],['ea4006b096bff59d35754c2d0a87ed9b1282647e'],28,13,41,1,1.0,0.0,0.0
938237f6f6197281c04506c4134f66fd98252cbe,"enumerate, instead of separate var",Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2014-07-21 11:48:38-07:00,25200,2014-07-21 11:48:38-07:00,25200,True,False,['test_udts.py'],['5981a16499e875930b876cf5ada64601936b2e2a'],4,3,7,1,1.0,0.0,0.0
164a73087d1bf482314768047cdeb287a5e682b4,Add a test for tuples with non-primitive subtypes,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-21 16:44:15-05:00,18000,2014-07-21 16:44:15-05:00,18000,True,False,['test_types.py'],['871ae525fd3c59477f4b2bb64cc6d0f2210f1c25'],4,86,90,1,0.0,0.0,1.0
1692c375f71d266e162c131022f6a96e83782a68,tests for non-primitive datatypes for UDTs,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2014-07-21 16:50:21-07:00,25200,2014-07-21 16:50:21-07:00,25200,True,False,"['datatype_utils.py', 'test_udts.py']",['938237f6f6197281c04506c4134f66fd98252cbe'],5,87,92,2,0.23404255319148937,0.23404255319148937,1.0
14c42c97252ad0f6706e40efb13234b13199cb33,Test Nested UDTs,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-21 18:52:51-05:00,18000,2014-07-21 18:52:51-05:00,18000,True,False,['test_udts.py'],['871ae525fd3c59477f4b2bb64cc6d0f2210f1c25'],0,83,83,1,0.175,1.0,0.875
19ce62aa4adb109ed3ff340abf16a9ebe71b3b92,Add value to the namedtuple,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-21 19:21:41-05:00,18000,2014-07-21 19:21:41-05:00,18000,True,False,['test_udts.py'],['14c42c97252ad0f6706e40efb13234b13199cb33'],1,1,2,1,,,
70741481d3f5fceb2753a9a32d0b11221ac37952,Test for ensuring extra-lengthy udts are handled correctly.,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-22 12:02:20-05:00,18000,2014-07-22 12:02:20-05:00,18000,True,False,['test_udts.py'],['871ae525fd3c59477f4b2bb64cc6d0f2210f1c25'],0,44,44,1,0.0,0.0,1.0
4fa6279c345284d3ce0835641ead9fa31c518fbe,Remove unused import,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-22 12:03:12-05:00,18000,2014-07-22 12:03:12-05:00,18000,True,False,['test_udts.py'],['70741481d3f5fceb2753a9a32d0b11221ac37952'],1,0,1,1,,,
136cf57acb286c5ee2a1b6593bf95fe356eccd2a,Update future test case descriptions,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-22 14:09:28-05:00,18000,2014-07-22 14:09:28-05:00,18000,True,False,['test_udts.py'],['19ce62aa4adb109ed3ff340abf16a9ebe71b3b92'],2,10,12,1,1.0,1.0,1.0
8bee26d6d6a0631eb8e0c8b7ff1413504d42f688,"Handle custom encoders in nested data types

The root of the problem was that nested data types would use the default
encoders for subitems.  When the encoders were customized, they would
not be used for those nested items.

This fix moves the encoder functions into a class so that collections,
tuples, and UDTs will use the customized mapping when encoding subitems.

Fixes PYTHON-100.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-22 14:21:04-05:00,18000,2014-07-22 14:21:04-05:00,18000,True,False,"['cluster.py', 'encoder.py', 'query.py', 'cluster.rst', 'encoder.rst', 'query.rst', 'test_query.py', 'test_types.py', 'test_parameter_binding.py']",['9121cb1b2f9295a30dc117c46387656875f01b99'],244,233,477,9,0.0,1.0,1.0
4ef673942627c198b632e6d803e4c8eef3f7cc42,nonprims iterate over all prims,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2014-07-22 12:26:24-07:00,25200,2014-07-22 12:26:24-07:00,25200,True,False,"['datatype_utils.py', 'test_udts.py']",['1692c375f71d266e162c131022f6a96e83782a68'],18,22,40,2,0.375,0.0,1.0
9a391e7d79aeeb3195b126391caf096a4cf67026,Update parameter binding unit test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-22 14:35:22-05:00,18000,2014-07-22 14:35:22-05:00,18000,True,False,['test_parameter_binding.py'],['8bee26d6d6a0631eb8e0c8b7ff1413504d42f688'],10,10,20,1,,,
a9b2de07d68960094704e5cce52d51c4bd5a414b,"Raise ValueError when tuples have extra items

Fixes PYTHON-98",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-22 15:04:46-05:00,18000,2014-07-22 15:04:46-05:00,18000,True,False,"['CHANGELOG.rst', 'cqltypes.py', 'test_types.py']",['871ae525fd3c59477f4b2bb64cc6d0f2210f1c25'],0,9,9,3,0.75,1.0,0.25
7924f732fce5b9c98a8e2c8fbd5e85152465ca67,Tweaks to UDT data type tests,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-22 15:29:42-05:00,18000,2014-07-22 15:29:42-05:00,18000,True,False,['test_udts.py'],['4ef673942627c198b632e6d803e4c8eef3f7cc42'],9,11,20,1,0.0,0.0,1.0
6e9c4bbd7db900046eddee539c7d4d682657e9d4,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-22 15:58:19-05:00,18000,2014-07-22 15:58:19-05:00,18000,True,False,['CHANGELOG.rst'],['c56c6b5112f28ee91337a135fc31c141f978ab38'],0,1,1,1,,,
10bebded784e8559dda8164c7c392873f6c9b321,Add note about dch to README-dev.rst,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-23 13:06:34-05:00,18000,2014-07-23 13:06:34-05:00,18000,True,False,['README-dev.rst'],['597c68f2377fbbf4da9514506bcd9aeb29718298'],0,4,4,1,,,
8e63506c38a94a9e89e67478ee8ec30017828b3a,Fix method definition for udt registration,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-23 15:37:11-05:00,18000,2014-07-23 15:37:11-05:00,18000,True,False,['cluster.py'],['38d757fafb0d92f40e2fe09936b9dcd10e9dbd7d'],2,2,4,1,,,
e97c119fb44d4156bc206bf94af27c5ab2bf825f,Fix typo in tuple error message,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-23 16:36:40-05:00,18000,2014-07-23 16:36:40-05:00,18000,True,False,['cqltypes.py'],['c49c731cd61fd3a211027e2e5a7ffec3d2727049'],1,1,2,1,,,
a4c1e1a10c470937d299456962bab3fe14df6c7b,Reorder test helper methods,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-24 13:33:10-05:00,18000,2014-07-24 13:33:10-05:00,18000,True,False,['test_types.py'],['e97c119fb44d4156bc206bf94af27c5ab2bf825f'],20,20,40,1,,,
f53018d079f0ff532c8d63e6660e27adb0a395fa,Output User Defined Types in keyspace meta,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-07-24 14:28:45-07:00,25200,2014-07-24 16:56:11-07:00,25200,True,False,"['CHANGELOG.rst', 'metadata.py', 'test_metadata.py']",['a4c1e1a10c470937d299456962bab3fe14df6c7b'],14,75,89,3,0.32,1.0,0.84
1b92546320526f45df5b5e3ecce0d97b7d5e7b15,type checking for contact_points in Cluster constructor,Adrian Lange,alange@thebrighttag.com,Adrian Lange,alange@thebrighttag.com,2014-07-24 11:28:39-05:00,18000,2014-07-25 11:00:34-05:00,18000,True,False,['cluster.py'],['e97c119fb44d4156bc206bf94af27c5ab2bf825f'],1,6,7,1,,,
7bf95a0203d64a093014b181e9a3d313caf8e418,Update changelog,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-25 11:15:08-05:00,18000,2014-07-25 11:15:23-05:00,18000,True,False,['CHANGELOG.rst'],['12b229043834baa7e289d9b4225cbc6ffdebc455'],0,1,1,1,,,
e6af8bfc38f8fbe92afdd859b7e1d9702f1c928e,Log contact points and protocol version in Cluster.connect(),Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-25 11:55:34-05:00,18000,2014-07-25 11:55:34-05:00,18000,True,False,['cluster.py'],['3e2795550a9d3a1136ef1071a2e39ca557a9dc05'],0,2,2,1,0.0,0.0,1.0
bcde7c1553f81f74331c84bc42c12ca9f0f31df1,Avoid setting fetch_size when unset with v1 protocol,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-25 12:08:56-05:00,18000,2014-07-25 12:08:56-05:00,18000,True,False,['cluster.py'],['e6af8bfc38f8fbe92afdd859b7e1d9702f1c928e'],0,2,2,1,0.0,0.0,0.0
0fc4dd3c7d9d7119533283d4608045586cf315dc,Avoid setting fetch_size for v1 protocol,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-25 12:14:08-05:00,18000,2014-07-25 12:14:08-05:00,18000,True,False,['cluster.py'],['bcde7c1553f81f74331c84bc42c12ca9f0f31df1'],1,1,2,1,,,
14cb2459de1413e64d5e3b680b71c71c023dd4c1,Updated test case after PYTHON-96 has been implemented,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-25 13:29:09-05:00,18000,2014-07-25 13:29:09-05:00,18000,True,False,['test_metadata.py'],['ac3e50298566dd988c350568cdb25363b54cb5f2'],2,54,56,1,0.0,1.0,1.0
5876f2a887d97123fee61d19379d5cada89a203b,logging queries,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-07-25 12:14:34-07:00,25200,2014-07-25 12:14:34-07:00,25200,True,False,['connection.py'],['b92bf2021bb0c6ae80544d041576487b7bcaa925'],1,2,3,1,0.0,0.0,0.0
ef81fa602cda0261c3db0569a6729dd9a5b5667b,Test UDTs with different namedtuple variables,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-25 16:00:05-05:00,18000,2014-07-25 16:00:05-05:00,18000,True,False,['test_udts.py'],['0fc4dd3c7d9d7119533283d4608045586cf315dc'],7,66,73,1,0.0,1.0,1.0
6d749a3e6fe5569428266d4b37715c13c51a2b47,WIP unregistered nested udts,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2014-07-25 14:25:26-07:00,25200,2014-07-25 14:25:26-07:00,25200,True,False,['test_udts.py'],['0fc4dd3c7d9d7119533283d4608045586cf315dc'],2,57,59,1,0.0,1.0,1.0
8dae35d4f546add88f22a04b76c77dd77e3ebc1e,Test for PYTHON-98,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-25 16:36:38-05:00,18000,2014-07-25 16:36:38-05:00,18000,True,False,['test_types.py'],['0fc4dd3c7d9d7119533283d4608045586cf315dc'],0,5,5,1,0.0,1.0,1.0
68c98bcf5a73e6c1dfd4c39f3f506de5c2b163af,Release 2.1.0c1,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-25 17:04:12-05:00,18000,2014-07-25 17:04:12-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['14cb2459de1413e64d5e3b680b71c71c023dd4c1'],2,2,4,2,,,
a074f6a5e9417c5ee29cec2adef60ebb14f62515,Make version 2.1.0c1.post,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-25 17:06:30-05:00,18000,2014-07-25 17:06:30-05:00,18000,True,False,['__init__.py'],['68c98bcf5a73e6c1dfd4c39f3f506de5c2b163af'],1,1,2,1,,,
34bd741b63699d3ce707391e25165c83ccae5042,"Add notes about beta, rc versions to README-dev.rst",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-25 17:08:57-05:00,18000,2014-07-25 17:08:57-05:00,18000,True,False,['README-dev.rst'],['a074f6a5e9417c5ee29cec2adef60ebb14f62515'],0,4,4,1,,,
41fe3e1fcb65605b0d0bf82d06c99fa5364d54a7,More README-dev improvements,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-25 17:11:14-05:00,18000,2014-07-25 17:11:14-05:00,18000,True,False,['README-dev.rst'],['34bd741b63699d3ce707391e25165c83ccae5042'],0,7,7,1,,,
f67c6d741bf2b268cdc7146cdfd129b120acdc40,Fix README-dev formatting,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-25 17:16:31-05:00,18000,2014-07-25 17:16:31-05:00,18000,True,False,['README-dev.rst'],['41fe3e1fcb65605b0d0bf82d06c99fa5364d54a7'],0,4,4,1,,,
48caee439101de1410af2b8142e271036d70f965,implemented nested unregistered udts,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2014-07-25 15:17:15-07:00,25200,2014-07-25 15:17:15-07:00,25200,True,False,['test_udts.py'],['6d749a3e6fe5569428266d4b37715c13c51a2b47'],5,3,8,1,,,
8dd2c8d50cbb49a920d7a993fc3cd05ce9b7d760,Update README-dev,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-30 14:18:14-05:00,18000,2014-07-30 14:18:14-05:00,18000,True,False,['README-dev.rst'],['f67c6d741bf2b268cdc7146cdfd129b120acdc40'],0,1,1,1,,,
6c03b320d1c241db3b15d6475360fe0c3417e63f,Reverted the changes I made as everything I had done is in the code base now.,Greg Doermann,gdoermann@gmail.com,Greg Doermann,gdoermann@gmail.com,2014-07-30 18:17:28-06:00,21600,2014-07-30 18:17:28-06:00,21600,True,False,"['__init__.py', 'columns.py', 'functions.py', 'models.py']",['27b0a27d03f8e754f5b0b24d5654543a559b0340'],34,13,47,4,0.0,0.0,0.0
0f827bc5e32ed06af4db3f1ef75382b5f3840a12,Allow for a default TTL.,Greg Doermann,gdoermann@gmail.com,Greg Doermann,gdoermann@gmail.com,2014-07-30 19:28:28-06:00,21600,2014-07-30 19:28:28-06:00,21600,True,False,"['models.py', 'query.py']",['6c03b320d1c241db3b15d6475360fe0c3417e63f'],4,4,8,2,,,
804dea349f95aabee8126fba980712f7d9a944de,"Update include, lib dirs for libevwrapper

Changes to allow extension to build against ""brew install libev"" on Mac.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-07-31 09:58:28-05:00,18000,2014-07-31 09:58:28-05:00,18000,True,False,['setup.py'],['8dd2c8d50cbb49a920d7a993fc3cd05ce9b7d760'],2,3,5,1,,,
3ae0d633b26f9efc3a4fbd8da24d6737802d898e,Changed DEFAULT_TTL to __default_ttl__ and added tests.,Greg Doermann,gdoermann@gmail.com,Greg Doermann,gdoermann@gmail.com,2014-07-31 10:15:06-06:00,21600,2014-07-31 10:15:06-06:00,21600,True,False,"['models.py', 'query.py', 'test_ttl.py']",['0f827bc5e32ed06af4db3f1ef75382b5f3840a12'],5,67,72,3,1.0,1.0,1.0
b8dd705c4a5b0162634ebc26ca78c687213c427e,Added docs around __default_ttl__,Greg Doermann,gdoermann@gmail.com,Greg Doermann,gdoermann@gmail.com,2014-07-31 10:19:50-06:00,21600,2014-07-31 10:19:50-06:00,21600,True,False,['models.rst'],['3ae0d633b26f9efc3a4fbd8da24d6737802d898e'],0,5,5,1,,,
59d24373674fc6153ec9785b41f80d056d42cccc,Never reuse clusters within loadbalancingpolicytests,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-07-31 12:38:16-05:00,18000,2014-07-31 12:38:16-05:00,18000,True,False,"['__init__.py', 'test_loadbalancingpolicies.py']",['804dea349f95aabee8126fba980712f7d9a944de'],24,15,39,2,0.42857142857142855,0.0,0.0
bbbd861dc19c24f3e9443e71bf723b3d4224e25e,"Update API docs, upgrade guide for 2.1",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-31 16:43:57-05:00,18000,2014-07-31 16:44:26-05:00,18000,True,False,"['cluster.py', 'metadata.py', 'query.py', 'geventreactor.rst', 'twistedreactor.rst', 'index.rst', 'getting_started.rst', 'upgrading.rst', 'example.py', 'setup.py']",['604c80bc9206410ae898bc7f3fb8a3049504406c'],21,183,204,10,1.0,1.0,0.0
e4866ed5ad507af4b01c7f2fcbff5255d79f97a8,"Fix harmless off-by-one error

This is harmless because with the v1/v2 protocol, the connection will
never issue new request IDs (like it does for v3).",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-31 16:44:46-05:00,18000,2014-07-31 16:44:46-05:00,18000,True,False,['connection.py'],['bbbd861dc19c24f3e9443e71bf723b3d4224e25e'],1,1,2,1,,,
208c3cef817a6e1af07317ac71f92c75a920714b,Link to cqlengine in README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-07-31 16:50:49-05:00,18000,2014-07-31 16:50:49-05:00,18000,True,False,['README.rst'],['e4866ed5ad507af4b01c7f2fcbff5255d79f97a8'],0,5,5,1,,,
def4e46d8a8ccdb8e2680b0928555a42b6f460f9,"(De)serialize null values in tuples & udts correctly

Fixes PYTHON-110",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-08-01 13:17:32-05:00,18000,2014-08-01 13:17:32-05:00,18000,True,False,"['CHANGELOG.rst', 'cqltypes.py', 'test_types.py', 'test_udts.py']",['208c3cef817a6e1af07317ac71f92c75a920714b'],10,97,107,4,0.1206896551724138,0.603448275862069,0.7758620689655172
d100066f753de07e164257b88713d41845d99349,Remove redundant prepares in tuple test,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-08-01 14:03:59-05:00,18000,2014-08-01 14:03:59-05:00,18000,True,False,['test_types.py'],['def4e46d8a8ccdb8e2680b0928555a42b6f460f9'],4,0,4,1,1.0,0.0,0.0
28bf0acb114a94d3ebbd5a145a8790ee4ded826e,Add docstrings to new test methods,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-08-01 15:00:22-05:00,18000,2014-08-01 15:00:22-05:00,18000,True,False,"['test_types.py', 'test_udts.py']",['d100066f753de07e164257b88713d41845d99349'],0,6,6,2,,,
12ceb2c4ba8c05d53db2a337fa30c4e1154dfe1c,Remove unintentional print,Joaquin Casares,joaquin@datastax.com,Joaquin Casares,joaquin@datastax.com,2014-08-04 09:24:17-05:00,18000,2014-08-04 09:24:17-05:00,18000,True,False,['test_udts.py'],['ef81fa602cda0261c3db0569a6729dd9a5b5667b'],1,0,1,1,1.0,0.0,0.0
a19a3ed0523df8e2a323b0d058809ee1874c434d,"Include /opt/local for setup include/lib dirs.

This allows the libevwrapper extension to build against mac port
installs.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-08-04 14:16:31-05:00,18000,2014-08-04 14:16:31-05:00,18000,True,False,['setup.py'],['804dea349f95aabee8126fba980712f7d9a944de'],2,2,4,1,,,
11904ed9c329810538bc741395d9ad9ad333f686,"Add docs section for UDTs

Fixes PYTHON-114",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-08-05 14:31:03-05:00,18000,2014-08-05 14:31:03-05:00,18000,True,False,"['index.rst', 'upgrading.rst', 'user_defined_types.rst']",['c7288aae8c30c15b198424e46071e469a9708b62'],0,96,96,3,,,
db216c4cb07909f5dffc0adfad52c1662ccb302d,Fix caching documentation.,Kevin Deldycke,kdeldycke@users.noreply.github.com,Kevin Deldycke,kdeldycke@users.noreply.github.com,2014-08-06 09:37:04+02:00,-7200,2014-08-06 09:37:04+02:00,-7200,True,False,['models.rst'],['5876f2a887d97123fee61d19379d5cada89a203b'],2,2,4,1,,,
297c39cfbd126f178a966047abbc17da079f954f,Update ez_setup debian patch,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-08-07 11:33:58-05:00,18000,2014-08-07 11:33:58-05:00,18000,True,False,['0001-don-t-use-ez_setup.patch'],['fe16669e4a28162ebeb040955dff487b10e15a16'],11,8,19,1,,,
dee2996e769938ec32173d9eebe26af59b77dff7,Test for PYTHON-91,Irina Kaplounova,irina.kaplounova@datastax.com,Irina Kaplounova,irina.kaplounova@datastax.com,2014-08-07 09:51:05-07:00,25200,2014-08-07 09:51:05-07:00,25200,True,False,"['__init__.py', 'test_query.py']",['297c39cfbd126f178a966047abbc17da079f954f'],3,82,85,2,0.20930232558139536,0.20930232558139536,1.0
d994ee3f9bb6069270bd3e6ec480cf118e234568,Addressing code review comments,Irina Kaplounova,irina.kaplounova@datastax.com,Irina Kaplounova,irina.kaplounova@datastax.com,2014-08-07 11:21:07-07:00,25200,2014-08-07 11:21:07-07:00,25200,True,False,"['__init__.py', 'test_query.py']",['dee2996e769938ec32173d9eebe26af59b77dff7'],14,10,24,2,1.0,1.0,0.0
cb0b5d0e2790b231611ae4dac7318c7d9a945189,Make LWT timeout test require timeouts to succeed.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-08-07 13:49:52-05:00,18000,2014-08-07 13:49:52-05:00,18000,True,False,['test_query.py'],['d994ee3f9bb6069270bd3e6ec480cf118e234568'],9,6,15,1,1.0,1.0,0.0
73a3a6f32e9bd858ecb9eecf2500e53ac310f623,Release 2.1.0,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-08-07 19:31:33+00:00,0,2014-08-07 19:31:33+00:00,0,True,False,"['CHANGELOG.rst', '__init__.py', 'changelog']",['66aac0f1c0c57b06f86ed869584a72a35f470d0c'],1,11,12,3,,,
5f61f65f7580eddad3bcd7e72eb483eadda66a59,post release version update,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-08-07 20:35:43+00:00,0,2014-08-07 20:35:43+00:00,0,True,False,['__init__.py'],['73a3a6f32e9bd858ecb9eecf2500e53ac310f623'],1,1,2,1,,,
3d866ddf898cbde16933438f5332f87d50e1cb60,Add note about version support to README,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-08-07 15:58:42-05:00,18000,2014-08-07 15:58:42-05:00,18000,True,False,['README.rst'],['5f61f65f7580eddad3bcd7e72eb483eadda66a59'],1,1,2,1,,,
b1fe5eb65f85f94ff4563e6456dc89441ec1a886,"Emphasize ""version added"" in docs",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-08-07 16:32:41-05:00,18000,2014-08-07 16:32:41-05:00,18000,True,False,"['conf.py', 'custom.css_t', 'theme.conf']",['3d866ddf898cbde16933438f5332f87d50e1cb60'],2,15,17,3,,,
be8ec75086b7ad5e6c4b3994e76a914e07606129,updated changelog and comment on setup,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-08 11:01:07-07:00,25200,2014-08-08 11:01:07-07:00,25200,True,False,"['changelog', 'connection.py']",['086f859fdbad296af1dcd2084ea634e02a9eb415'],0,8,8,2,,,
c4955060554c1eb1520194c037fe20acdd6630fa,added caching docs to changelog,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-08 11:03:29-07:00,25200,2014-08-08 11:03:29-07:00,25200,True,False,['changelog'],['be8ec75086b7ad5e6c4b3994e76a914e07606129'],0,2,2,1,,,
9b2009830e0acfaf2177edf010805b1bb72ab60d,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-08 11:20:20-07:00,25200,2014-08-08 11:20:20-07:00,25200,True,False,['VERSION'],['c4955060554c1eb1520194c037fe20acdd6630fa'],1,1,2,1,,,
a9f2cc25a8ec3a7497548342031ebfc42828aa0a,"Tweaks to PR #144

- Handle ipv6 *any* rpc_address
- Try all resolved addresses for libev, asyncore connects
- Normalize error reports and put endpoints in error",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-08-08 17:29:30-05:00,18000,2014-08-08 17:29:30-05:00,18000,True,False,"['cluster.py', 'asyncorereactor.py', 'geventreactor.py', 'libevreactor.py', 'test_connection.py']",['acaa663c1a0d15ef86e5c398bdd2c33196f684fe'],39,38,77,5,0.0,0.0,0.0
ec0b19b4e4b6bcd098ac2d98789355e2a52efcf0,integration test for ipv6 connections,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-08-08 17:32:56-05:00,18000,2014-08-08 17:32:56-05:00,18000,True,False,['test_ipv6.py'],['a9f2cc25a8ec3a7497548342031ebfc42828aa0a'],0,128,128,1,0.543859649122807,1.0,1.0
5305d2fd186d602835f5342866eb1ec5bdae6bd5,"Fix NetworkTopologyStrategy.export_for_schema()

Fixes PYTHON-120",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-08-08 17:54:50-05:00,18000,2014-08-08 17:54:50-05:00,18000,True,False,"['CHANGELOG.rst', 'metadata.py', 'test_metadata.py']",['b1fe5eb65f85f94ff4563e6456dc89441ec1a886'],3,12,15,3,1.0,1.0,1.0
40eb10ce2f113e069d3a80faba9353321a76dd70,added primary key to examples,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 16:10:32-07:00,25200,2014-08-12 16:10:32-07:00,25200,True,False,['models.rst'],['9b2009830e0acfaf2177edf010805b1bb72ab60d'],0,2,2,1,,,
927e3ad28eaa54f99c6f71dfa4c60e86826c4e71,fixed example setup() call,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 16:20:41-07:00,25200,2014-08-12 16:20:41-07:00,25200,True,False,['index.rst'],['40eb10ce2f113e069d3a80faba9353321a76dd70'],2,2,4,1,,,
db892d011e56137c2bd50341cd7a371c6b5651d0,fixed example,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 16:22:58-07:00,25200,2014-08-12 16:22:58-07:00,25200,True,False,['connection.rst'],['927e3ad28eaa54f99c6f71dfa4c60e86826c4e71'],0,3,3,1,,,
25ed60b2a82a43c86d889d7272e5f5c4cadabef4,fixed readme,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 16:24:06-07:00,25200,2014-08-12 16:24:06-07:00,25200,True,False,['README.md'],['db892d011e56137c2bd50341cd7a371c6b5651d0'],1,1,2,1,,,
856fd29bdd8f0bbf50437d48e59ee70c13f24768,fixed readme,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 16:25:20-07:00,25200,2014-08-12 16:25:20-07:00,25200,True,False,['README.md'],['25ed60b2a82a43c86d889d7272e5f5c4cadabef4'],3,3,6,1,,,
89026db90d41392a754ea58de8c4aca412aca639,bumped required driver version to 2.1,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 16:59:44-07:00,25200,2014-08-12 16:59:44-07:00,25200,True,False,"['requirements.txt', 'setup.py']",['856fd29bdd8f0bbf50437d48e59ee70c13f24768'],2,2,4,2,,,
860a8f830e698ca3151dcc7e60bd09cd785d5939,inet address support,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 17:18:49-07:00,25200,2014-08-12 17:18:49-07:00,25200,True,False,"['columns.py', 'test_validation.py']",['89026db90d41392a754ea58de8c4aca412aca639'],0,26,26,2,1.0,1.0,1.0
610a49ba4f65ca65ef2dff0f887aa506d38984a4,added python 3.4 support and working to figure out how to get multiple verisions of Cassandra,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 17:45:54-07:00,25200,2014-08-12 17:45:54-07:00,25200,True,False,['.travis.yml'],['860a8f830e698ca3151dcc7e60bd09cd785d5939'],0,9,9,1,,,
21f5437b2a6e0c19081f59118400032440ecb44b,updating travis to use debian repos for C testing,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 18:26:05-07:00,25200,2014-08-12 18:26:05-07:00,25200,True,False,['.travis.yml'],['610a49ba4f65ca65ef2dff0f887aa506d38984a4'],4,12,16,1,,,
cfc0c32596237fd83f8c59e2f6528b4ac46a6c58,sudo everywhere apparently travis doesn't use root by default,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 18:28:37-07:00,25200,2014-08-12 18:28:37-07:00,25200,True,False,['.travis.yml'],['21f5437b2a6e0c19081f59118400032440ecb44b'],8,8,16,1,,,
5084d9770389752b4e1fdc678dbac15942740641,apparently travis doesn't like the ubuntu sources.list.d,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 18:31:26-07:00,25200,2014-08-12 18:31:26-07:00,25200,True,False,['.travis.yml'],['cfc0c32596237fd83f8c59e2f6528b4ac46a6c58'],2,2,4,1,,,
0e6511b68789beefa57a5071d7c51b12cc15c17e,tee instead of redire,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 18:33:49-07:00,25200,2014-08-12 18:33:49-07:00,25200,True,False,['.travis.yml'],['5084d9770389752b4e1fdc678dbac15942740641'],2,2,4,1,,,
731be3c246a6f1242e9c67b48f6d2c7a7ce68ea7,MOAR SUDO,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 18:37:08-07:00,25200,2014-08-12 18:37:08-07:00,25200,True,False,['.travis.yml'],['0e6511b68789beefa57a5071d7c51b12cc15c17e'],1,1,2,1,,,
32600a80753846d2c49b21a20f1ba3dbd8f18325,remove the existing limits file,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 18:51:45-07:00,25200,2014-08-12 18:51:45-07:00,25200,True,False,['.travis.yml'],['731be3c246a6f1242e9c67b48f6d2c7a7ce68ea7'],0,1,1,1,,,
4c3c20425dd02a236a8ef0a6fc4387b0bc9c073f,trying to get travis to clean out it's cassandra version,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 18:55:32-07:00,25200,2014-08-12 18:55:32-07:00,25200,True,False,['.travis.yml'],['32600a80753846d2c49b21a20f1ba3dbd8f18325'],1,2,3,1,,,
7e3c0b57472fdcf877cfbeaa68bb5219b2604894,testing auto accept conf settings...,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 18:58:21-07:00,25200,2014-08-12 18:58:21-07:00,25200,True,False,['.travis.yml'],['4c3c20425dd02a236a8ef0a6fc4387b0bc9c073f'],2,1,3,1,,,
d4aa54d54c8dcb8a1b8b26c72d82087f54c23c18,lets just go right into the nose tests,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 19:04:40-07:00,25200,2014-08-12 19:04:40-07:00,25200,True,False,['.travis.yml'],['7e3c0b57472fdcf877cfbeaa68bb5219b2604894'],1,1,2,1,,,
6857602675d7dd0e197fdcdd5c59b4d47292c0d9,trying to fix protocol version issue,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-12 19:27:02-07:00,25200,2014-08-12 19:27:02-07:00,25200,True,False,['.travis.yml'],['d4aa54d54c8dcb8a1b8b26c72d82087f54c23c18'],7,1,8,1,,,
f30390a3a167d586e4c355c3bb50b5c1f03c4687,changed the sorted() calls to use assertItemsEqual,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 07:57:59-07:00,25200,2014-08-13 07:57:59-07:00,25200,True,False,['test_model_io.py'],['9b2009830e0acfaf2177edf010805b1bb72ab60d'],1,2,3,1,,,
0dfe9c991a08a951aaefccb90202e8f7c64330d2,added big int,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 10:11:36-07:00,25200,2014-08-13 10:11:36-07:00,25200,True,False,['models.rst'],['71783912e812e17f645a565fa5e0f9267dad2ad8'],0,1,1,1,,,
8df170e549604085f6dcdbc6828dc445b47f6a49,added test runner,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 10:26:39-07:00,25200,2014-08-13 10:26:39-07:00,25200,True,False,['test.py'],['0dfe9c991a08a951aaefccb90202e8f7c64330d2'],0,8,8,1,,,
260037750b5b791e18d2894077fac6509184b60b,"upgrading testing to use bin/test.py, which will let me do some beautiful magic",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 10:33:42-07:00,25200,2014-08-13 10:33:42-07:00,25200,True,False,"['.gitignore', '.travis.yml', 'test_management.py']",['8df170e549604085f6dcdbc6828dc445b47f6a49'],7,6,13,3,,,
2ad4808c9749229cc59c9aeaeeee83f72c91985e,moving setup into the bin/test.py,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 10:50:35-07:00,25200,2014-08-13 10:50:35-07:00,25200,True,False,"['test.py', 'base.py']",['260037750b5b791e18d2894077fac6509184b60b'],10,20,30,2,,,
30dbc6e4d97f25a358268377d4e1c085fbde18c0,fixes for different C versions,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 13:06:14-07:00,25200,2014-08-13 13:06:14-07:00,25200,True,False,"['base.py', 'test_management.py']",['2ad4808c9749229cc59c9aeaeeee83f72c91985e'],21,26,47,2,1.0,1.0,1.0
503e2d1ecfa04669a70c1d7b84e8bfc5dc18c4f7,fixing protocol version,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 13:22:08-07:00,25200,2014-08-13 13:22:08-07:00,25200,True,False,['test.py'],['30dbc6e4d97f25a358268377d4e1c085fbde18c0'],6,10,16,1,,,
381d8fbb8843cdb82dde24295ecb19eab96e00b8,fixing c 1.2,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 13:48:25-07:00,25200,2014-08-13 13:48:25-07:00,25200,True,False,"['test.py', 'base.py', 'tox.ini']",['503e2d1ecfa04669a70c1d7b84e8bfc5dc18c4f7'],3,2,5,3,,,
545275fdb2261a50c3703befaa2e9c9585546215,fixing environment var,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 14:09:58-07:00,25200,2014-08-13 14:09:58-07:00,25200,True,False,"['test.py', 'base.py']",['381d8fbb8843cdb82dde24295ecb19eab96e00b8'],2,1,3,2,,,
d6743df00a76883d56a91d84cca5d6c50a06349c,fix for python 3 print,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 14:12:33-07:00,25200,2014-08-13 14:12:33-07:00,25200,True,False,['test.py'],['545275fdb2261a50c3703befaa2e9c9585546215'],1,1,2,1,,,
9411dc7cebe976ad58606cc8d29cd1594c185617,moved certain management options into block reserved for c > 2.0,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 14:33:31-07:00,25200,2014-08-13 14:33:31-07:00,25200,True,False,['test_management.py'],['d6743df00a76883d56a91d84cca5d6c50a06349c'],4,4,8,1,,,
733025e5e93ac03068c297e779167ee5c673d10f,getting ready for python 3,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 15:09:53-07:00,25200,2014-08-13 15:09:53-07:00,25200,True,False,"['columns.py', 'test_management.py', 'setup.py']",['9411dc7cebe976ad58606cc8d29cd1594c185617'],28,31,59,3,0.0,1.0,1.0
666a4570ae56ff479f2e40a8008b06f011a86abd,introduced six as well as using the python3 version of sorted() which no longer takes a cmp function,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 15:46:52-07:00,25200,2014-08-13 15:46:52-07:00,25200,True,False,"['columns.py', 'models.py']",['733025e5e93ac03068c297e779167ee5c673d10f'],2,7,9,2,,,
6f2d013e0254095d316de6bb59222475977e190c,dealing with itemsview,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 15:55:07-07:00,25200,2014-08-13 15:55:07-07:00,25200,True,False,['models.py'],['666a4570ae56ff479f2e40a8008b06f011a86abd'],1,1,2,1,,,
284e9cf2b0a1268c1a4a283093d87edcf745e704,using the six basestring,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 16:10:57-07:00,25200,2014-08-13 16:10:57-07:00,25200,True,False,"['columns.py', 'connection.py', 'models.py']",['6f2d013e0254095d316de6bb59222475977e190c'],3,4,7,3,,,
5c67bc8cb99b111a63a82922221599fbf8f9c7c6,removing the unicode() calls in favor of the six library,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 16:49:48-07:00,25200,2014-08-13 16:49:48-07:00,25200,True,False,['statements.py'],['284e9cf2b0a1268c1a4a283093d87edcf745e704'],20,22,42,1,0.0,0.0,0.0
e2be28246b9d91f0ce17ba15a16e6e76f6eeef7d,removing more __str__ in favor of the mixin,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 17:06:17-07:00,25200,2014-08-13 17:06:17-07:00,25200,True,False,"['columns.py', 'operators.py']",['5c67bc8cb99b111a63a82922221599fbf8f9c7c6'],5,23,28,2,0.0,0.0,0.0
1093ac4890f2753e4f7f19afd680eb3043bb19ef,no need for long(),Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 17:19:33-07:00,25200,2014-08-13 17:19:33-07:00,25200,True,False,['columns.py'],['e2be28246b9d91f0ce17ba15a16e6e76f6eeef7d'],4,4,8,1,,,
e64a7de36d665d0b673813726c11eb8c50338f9a,fixed arg count,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 17:38:49-07:00,25200,2014-08-13 17:38:49-07:00,25200,True,False,['query.py'],['1093ac4890f2753e4f7f19afd680eb3043bb19ef'],1,1,2,1,,,
9486baa300bcf2c3009223edbd253074029b66c4,"fixed a whole bunch of unicode references, fixed incorrect encoding of clauses",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 17:55:42-07:00,25200,2014-08-13 17:55:42-07:00,25200,True,False,"['functions.py', 'query.py', 'test_where_operators.py', 'test_delete_statement.py', 'test_insert_statement.py', 'test_select_statement.py', 'test_update_statement.py', 'test_where_clause.py']",['e64a7de36d665d0b673813726c11eb8c50338f9a'],32,44,76,8,,,
2010128d73cd664bd460ed46cfe95c806f711595,fixed long type checking,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-13 18:04:42-07:00,25200,2014-08-13 18:04:42-07:00,25200,True,False,"['query.py', 'statements.py']",['9486baa300bcf2c3009223edbd253074029b66c4'],5,5,10,2,,,
5300d231c9887d07e7cf4aa7865f70a1e067ea9e,Keep the timeout for paged results,Samuel Charron,samuel.charron@data-publica.com,Samuel Charron,samuel.charron@data-publica.com,2014-08-14 17:40:32+02:00,-7200,2014-08-14 17:40:32+02:00,-7200,True,False,['cluster.py'],['b6dab9956154d6a421c83a3f71e0538a04a5b576'],4,5,9,1,1.0,1.0,0.0
6f358cdd11eebc0c391ea9a47829b6fca1baffa2,Improve ipv6 integration test robustness,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-08-14 16:54:20+00:00,0,2014-08-14 16:54:20+00:00,0,True,False,['test_ipv6.py'],['ec0b19b4e4b6bcd098ac2d98789355e2a52efcf0'],2,3,5,1,,,
6093ec425c73e6623331189b84a53bc2ea384361,fixed a bunch of unicode issues,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 10:30:50-07:00,25200,2014-08-14 10:30:50-07:00,25200,True,False,['query.py'],['2010128d73cd664bd460ed46cfe95c806f711595'],12,9,21,1,0.0,0.0,0.0
edad4342b0a5482c1e573c4f2783d8df33962d30,six transitions,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 11:19:39-07:00,25200,2014-08-14 11:19:39-07:00,25200,True,False,"['columns.py', 'management.py', 'models.py', 'query.py']",['6093ec425c73e6623331189b84a53bc2ea384361'],6,7,13,4,,,
a93a41ee1bc257759c6b5427685d4374da856f2a,removing longs and fixing iterators,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 12:11:35-07:00,25200,2014-08-14 12:11:35-07:00,25200,True,False,"['functions.py', 'query.py', 'test_container_columns.py']",['edad4342b0a5482c1e573c4f2783d8df33962d30'],4,5,9,3,,,
d6ed6073f72bce0fd111343e6969c16b0b8d31c6,fixed iterators,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 12:22:36-07:00,25200,2014-08-14 12:22:36-07:00,25200,True,False,"['test_named.py', 'test_queryset.py']",['a93a41ee1bc257759c6b5427685d4374da856f2a'],4,4,8,2,,,
b4318bf580114050ebef88699474e36b640c7bdf,"Tweaks to #182. Set default timeout, add test.

Add default timeout for PagedResult class
Add integration test for concurrent with PagedResult
Minor comment correction",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-08-14 15:02:40-05:00,18000,2014-08-14 15:02:40-05:00,18000,True,False,"['cluster.py', 'concurrent.py', 'test_concurrent.py']",['5300d231c9887d07e7cf4aa7865f70a1e067ea9e'],4,29,33,3,0.0,1.0,1.0
ce6c9a69e20b2678525a25541a3ff59b2e61f573,putting assertItemsEqual on the base test class for python > 3,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 13:36:52-07:00,25200,2014-08-14 13:36:52-07:00,25200,True,False,"['base.py', 'test_class_construction.py']",['d6ed6073f72bce0fd111343e6969c16b0b8d31c6'],1,7,8,2,1.0,1.0,0.0
c6b7c38635c8eb65ee77dd191d81b3ac987cf2f2,removal of maxint in python 3,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 13:41:33-07:00,25200,2014-08-14 13:41:33-07:00,25200,True,False,['test_validation.py'],['ce6c9a69e20b2678525a25541a3ff59b2e61f573'],1,2,3,1,,,
bd9ad65c7e5721e22fa1d450825cee685f3af267,removing sys.maxint,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 13:51:11-07:00,25200,2014-08-14 13:51:11-07:00,25200,True,False,['test_validation.py'],['c6b7c38635c8eb65ee77dd191d81b3ac987cf2f2'],1,3,4,1,,,
70bab4ffeb233fe572cb2e0031c4f99626b09b34,listify the range,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 14:20:23-07:00,25200,2014-08-14 14:20:23-07:00,25200,True,False,['test_container_columns.py'],['bd9ad65c7e5721e22fa1d450825cee685f3af267'],1,1,2,1,,,
fd71963ccc13640b58aef561cd98cd172d5a110a,"fixing up the bytes column, now blob",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 17:05:54-07:00,25200,2014-08-14 17:05:54-07:00,25200,True,False,['columns.py'],['70bab4ffeb233fe572cb2e0031c4f99626b09b34'],9,8,17,1,0.0,0.0,0.0
770c1009d1cf80004b5aedfe4866ca1a24659aa4,bytes column explicitly only accepts bytes now,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 18:08:13-07:00,25200,2014-08-14 18:08:13-07:00,25200,True,False,"['columns.py', 'test_value_io.py']",['fd71963ccc13640b58aef561cd98cd172d5a110a'],5,6,11,2,,,
899c2907799b95b1d0ccf2fa85e79f13f701c7b0,fixed test which wasn't providing a specific encoding on a bytearray,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 18:22:05-07:00,25200,2014-08-14 18:22:05-07:00,25200,True,False,['test_validation.py'],['770c1009d1cf80004b5aedfe4866ca1a24659aa4'],1,1,2,1,,,
6fc8b7cfd53790df6b90625f6f1c0c92a4081ca9,fixed python 3 print,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 18:24:41-07:00,25200,2014-08-14 18:24:41-07:00,25200,True,False,['test_load.py'],['899c2907799b95b1d0ccf2fa85e79f13f701c7b0'],2,2,4,1,,,
d4518f4d1f7498403399c6d36cd2f61e4464b452,documentation around development,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 18:47:12-07:00,25200,2014-08-14 18:47:12-07:00,25200,True,False,['development.rst'],['6fc8b7cfd53790df6b90625f6f1c0c92a4081ca9'],0,34,34,1,,,
e116f134152b61f52debbd4ca1ef8272e945ae35,updated documentation index,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 18:49:36-07:00,25200,2014-08-14 18:49:36-07:00,25200,True,False,['index.rst'],['d4518f4d1f7498403399c6d36cd2f61e4464b452'],0,1,1,1,,,
afec245a8ec752bd837a1e309dde30ef75ed0557,moved dev up in index,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 18:49:58-07:00,25200,2014-08-14 18:49:58-07:00,25200,True,False,['index.rst'],['e116f134152b61f52debbd4ca1ef8272e945ae35'],1,1,2,1,,,
2d442691a7b9dded25a61f951639c090f5b48a31,fixing documentation errors,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 18:51:13-07:00,25200,2014-08-14 18:51:13-07:00,25200,True,False,"['index.rst', 'development.rst']",['afec245a8ec752bd837a1e309dde30ef75ed0557'],3,7,10,2,,,
05e681b5328c0acde7381dc402eca304c9008f09,"pull requests, contributing guidelines",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 18:52:47-07:00,25200,2014-08-14 18:52:47-07:00,25200,True,False,['development.rst'],['2d442691a7b9dded25a61f951639c090f5b48a31'],1,10,11,1,,,
4cf88cf6e4819b2042f06edaa40b0d75bf718876,formatting fix,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 18:53:28-07:00,25200,2014-08-14 18:53:28-07:00,25200,True,False,['development.rst'],['05e681b5328c0acde7381dc402eca304c9008f09'],1,1,2,1,,,
20ece79adfc833d38a7144b011e4fca6ce74c0cc,updated development docs with travis location,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 18:59:59-07:00,25200,2014-08-14 18:59:59-07:00,25200,True,False,['development.rst'],['4cf88cf6e4819b2042f06edaa40b0d75bf718876'],1,1,2,1,,,
689f1ed23c826d4d7cfa47fb604280b5bf816bce,starting on external resources,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 19:05:02-07:00,25200,2014-08-14 19:05:02-07:00,25200,True,False,['external_resources.rst'],['20ece79adfc833d38a7144b011e4fca6ce74c0cc'],0,20,20,1,,,
fc2d4ea8cbda9c59b61325b867ca2925ce928750,table polymorphism blog posts,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 19:06:13-07:00,25200,2014-08-14 19:06:13-07:00,25200,True,False,['external_resources.rst'],['689f1ed23c826d4d7cfa47fb604280b5bf816bce'],1,3,4,1,,,
0096d3764cca9143eceb7830c0dd7ba6d6de84ed,external resources added to index,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 19:13:54-07:00,25200,2014-08-14 19:13:54-07:00,25200,True,False,['index.rst'],['fc2d4ea8cbda9c59b61325b867ca2925ce928750'],0,1,1,1,,,
a270d08e88d1c622443843423e893a5d288714b4,attribution to blake for blog post,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 19:35:25-07:00,25200,2014-08-14 19:35:25-07:00,25200,True,False,['external_resources.rst'],['0096d3764cca9143eceb7830c0dd7ba6d6de84ed'],1,1,2,1,,,
bde67148eb109af63a3f6242d15909d6d5331329,related projects page,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-14 19:42:53-07:00,25200,2014-08-14 19:42:53-07:00,25200,True,False,"['index.rst', 'related_projects.rst']",['a270d08e88d1c622443843423e893a5d288714b4'],0,23,23,2,,,
28d3b0b56cd08c573415ad5db1bbe0066422f7bb,if not exist only supported by cassandra 2.0 or later.,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-15 11:48:31+08:00,-28800,2014-08-15 11:48:31+08:00,-28800,True,False,['test_ifnotexists.py'],['7917b87e779a29f0a03a59e26572968b292f1bc5'],17,22,39,1,1.0,1.0,1.0
97e6426468fe065d21b1ae04ab86daca7baa58b3,if not exist is a new feature of cassandra 2.0,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-15 11:59:44+08:00,-28800,2014-08-15 11:59:44+08:00,-28800,True,False,['models.rst'],['28d3b0b56cd08c573415ad5db1bbe0066422f7bb'],0,2,2,1,,,
23edc1410208d4b508308b7e72af507ce9840332,docs around unlogged batches,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 08:24:23-07:00,25200,2014-08-15 08:24:23-07:00,25200,True,False,['queryset.rst'],['bde67148eb109af63a3f6242d15909d6d5331329'],0,15,15,1,,,
499d1aa3121a8bd724a4f07d4104aebc3ca4dc3f,improved documentation around blind updates,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 08:40:23-07:00,25200,2014-08-15 08:40:23-07:00,25200,True,False,['queryset.rst'],['23edc1410208d4b508308b7e72af507ce9840332'],4,23,27,1,,,
6b68c32b972eb263a2ddc726db9191fee76660ff,linking to blind updates from instance update,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 09:20:51-07:00,25200,2014-08-15 09:20:51-07:00,25200,True,False,"['models.rst', 'queryset.rst']",['499d1aa3121a8bd724a4f07d4104aebc3ca4dc3f'],0,4,4,2,,,
79b57bc2a8e45347f261aac806eb117027de653b,improved queryset docs,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 09:43:40-07:00,25200,2014-08-15 09:43:40-07:00,25200,True,False,['queryset.rst'],['6b68c32b972eb263a2ddc726db9191fee76660ff'],0,49,49,1,,,
051ab7bf4a4a01161108d5e8327a75ce558e8fbc,added static column support,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 11:59:39-07:00,25200,2014-08-15 11:59:39-07:00,25200,True,False,"['columns.py', 'models.py', 'test_management.py', 'test_model.py', 'queryset.rst']",['79b57bc2a8e45347f261aac806eb117027de653b'],6,38,44,5,0.05,1.0,0.9
caddded43a2a0ee6566a6c8308c046a326faf19b,docs for shared columns,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 12:02:19-07:00,25200,2014-08-15 12:02:19-07:00,25200,True,False,['models.rst'],['051ab7bf4a4a01161108d5e8327a75ce558e8fbc'],0,3,3,1,,,
3f6c5993a259a004d1c74e8cb263e4b0ba293945,master travis ci badge,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 12:13:18-07:00,25200,2014-08-15 12:13:18-07:00,25200,True,False,['README.md'],['caddded43a2a0ee6566a6c8308c046a326faf19b'],0,2,2,1,,,
dc09912b1c90abc6dfe454fb68303a37fc09efdc,fixed travis image,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 12:14:57-07:00,25200,2014-08-15 12:14:57-07:00,25200,True,False,['README.md'],['3f6c5993a259a004d1c74e8cb263e4b0ba293945'],1,1,2,1,,,
30c4a4c91e7965ab2d8e360abd987971eb06b03e,"updating readme, changelog",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 13:47:35-07:00,25200,2014-08-15 13:47:35-07:00,25200,True,False,"['README.md', 'changelog']",['dc09912b1c90abc6dfe454fb68303a37fc09efdc'],1,11,12,2,,,
59077a0289c609ef8a9173248785e1a0db48d2c4,"script to generate changelog information, changelog update",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 14:55:47-07:00,25200,2014-08-15 14:55:47-07:00,25200,True,False,['changelog'],['30c4a4c91e7965ab2d8e360abd987971eb06b03e'],1,14,15,1,,,
0824fa45ea065f9a4c4294b5756804d868619df4,script to update changelog,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 14:55:58-07:00,25200,2014-08-15 14:55:58-07:00,25200,True,False,['get_changelog.py'],['59077a0289c609ef8a9173248785e1a0db48d2c4'],0,18,18,1,,,
7c296474aa9abfc110e55225d0f993ec61506858,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 15:38:56-07:00,25200,2014-08-15 15:38:56-07:00,25200,True,False,['VERSION'],['0824fa45ea065f9a4c4294b5756804d868619df4'],1,1,2,1,,,
fa2aabaec9c1aa7c9634ca074c522dc5223610c3,improvements to manifest to exclude pyc and __pycache__,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 16:10:33-07:00,25200,2014-08-15 16:10:33-07:00,25200,True,False,['MANIFEST.in'],['7c296474aa9abfc110e55225d0f993ec61506858'],0,7,7,1,,,
d573b8201a76f94a0e7ebc9703352cd17f2f6065,added pypi version,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 19:51:54-07:00,25200,2014-08-15 19:51:54-07:00,25200,True,False,['README.md'],['fa2aabaec9c1aa7c9634ca074c522dc5223610c3'],0,1,1,1,,,
845ac396312d153e30340de644f5139ccb69bc08,monthly downloads,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-15 19:52:46-07:00,25200,2014-08-15 19:52:46-07:00,25200,True,False,['README.md'],['d573b8201a76f94a0e7ebc9703352cd17f2f6065'],0,1,1,1,,,
0803424b0bc6fefe27c737914162f331c63bb8a6,removing parameter of if_not_exists in QuerySet,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-16 11:28:16+08:00,-28800,2014-08-16 11:28:16+08:00,-28800,True,False,"['query.py', 'test_ifnotexists.py']",['97e6426468fe065d21b1ae04ab86daca7baa58b3'],6,6,12,2,,,
63fcae6a4ad451ccfbc592d3a228d5505178f2f5,refine code with skipUnless,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-16 11:36:14+08:00,-28800,2014-08-16 11:36:14+08:00,-28800,True,False,['test_ifnotexists.py'],['0803424b0bc6fefe27c737914162f331c63bb8a6'],20,23,43,1,0.0,0.0,0.0
fdd04857e5c2616990bd6c5388433a3b8db2875b,add test case for batch query,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-16 22:06:53+08:00,-28800,2014-08-16 22:06:53+08:00,-28800,True,False,['test_ifnotexists.py'],['63fcae6a4ad451ccfbc592d3a228d5505178f2f5'],12,49,61,1,1.0,1.0,1.0
463c5c8007c6ef78c256dce15fc239d34b1eb8e4,refine doc,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-16 23:32:12+08:00,-28800,2014-08-16 23:32:12+08:00,-28800,True,False,['models.rst'],['fdd04857e5c2616990bd6c5388433a3b8db2875b'],2,2,4,1,,,
eece3131e1051241ca325a10e3b0c841886b3f64,add note on statement ordering in batch query,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-16 23:46:05+08:00,-28800,2014-08-16 23:46:05+08:00,-28800,True,False,['faq.rst'],['bde67148eb109af63a3f6242d15909d6d5331329'],1,43,44,1,,,
0bf4ee1fc68ea366a5288d945cda13db4961b3dc,PYTHON-118: Set 60 sec timeout for  SELECT and CREATE TYPE queries to avoid test failure on slow systems.,Irina Kaplounova,irina.kaplounova@datastax.com,Irina Kaplounova,irina.kaplounova@datastax.com,2014-08-17 13:43:26-07:00,25200,2014-08-17 13:43:26-07:00,25200,True,False,['test_udts.py'],['b6dab9956154d6a421c83a3f71e0538a04a5b576'],4,6,10,1,0.0,0.0,1.0
3e6e94dcb03af7981890e2c14c8c2c0e33ca76f7,fix for bytearray being passed to blob column,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-18 09:23:42-07:00,25200,2014-08-18 09:23:42-07:00,25200,True,False,"['changelog', 'columns.py', 'test_value_io.py']",['845ac396312d153e30340de644f5139ccb69bc08'],2,12,14,3,,,
86b6666195939e53d6ca4a9616fc6dd64a214ce1,updated changelog,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-18 09:50:09-07:00,25200,2014-08-18 09:50:09-07:00,25200,True,False,['changelog'],['3e6e94dcb03af7981890e2c14c8c2c0e33ca76f7'],0,1,1,1,,,
86bc6203ccdc1891cc91762c0f26da9c57fd7bf5,bug fix bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-08-18 09:50:28-07:00,25200,2014-08-18 09:50:28-07:00,25200,True,False,['VERSION'],['86b6666195939e53d6ca4a9616fc6dd64a214ce1'],1,1,2,1,,,
c323d4ba7079b83c8b32dfcd53ed079d95ae2429,PYTHON-118: Set 60 sec timeout for  SELECT and CREATE TYPE queries to avoid test failure on slow systems.,Irina Kaplounova,irina.kaplounova@datastax.com,Irina Kaplounova,irina.kaplounova@datastax.com,2014-08-18 09:53:51-07:00,25200,2014-08-18 09:53:51-07:00,25200,True,False,['test_udts.py'],['0bf4ee1fc68ea366a5288d945cda13db4961b3dc'],4,5,9,1,0.0,0.0,1.0
921c5245231994d280a4c2362ff006524fda4c79,"fix updating static column only exception

fix updating static column only exception due to extra clustering key
in where clause",Andy Zhao,andyzhao888@gmail.com,Andy Zhao,andyzhao888@gmail.com,2014-08-19 22:55:32-04:00,14400,2014-08-19 22:55:32-04:00,14400,True,False,"['query.py', 'test_static_column.py']",['488a75b115d101a195a52ed2b9eecf71a2e1f6af'],2,63,65,2,0.875,0.875,1.0
d986b0f7e6360ff83cf1a01d928bc10392e9d8cb,"skip test if protocol version < 2

Skip static column only update unit test if cassandra protocol version
< 2",andy8zhao,andy@AndyMBP.local,andy8zhao,andy@AndyMBP.local,2014-08-21 16:25:24-04:00,14400,2014-08-21 16:25:24-04:00,14400,True,False,"['test_static_column.py', 'cqlout']",['921c5245231994d280a4c2362ff006524fda4c79'],1,5,6,2,,,
68c06ae304ae2895dcfbec935a9129201a914807,"remove unwanted file

remove unwanted file",andy8zhao,andy@AndyMBP.local,andy8zhao,andy@AndyMBP.local,2014-08-21 16:32:02-04:00,14400,2014-08-21 16:32:02-04:00,14400,True,False,['cqlout'],['d986b0f7e6360ff83cf1a01d928bc10392e9d8cb'],0,0,0,1,,,
ad318166b2154efba84b7c2285b9a905b8197c3e,"skip test if protocol < 2

skip test if protocol < 2",andy8zhao,andy@AndyMBP.local,andy8zhao,andy@AndyMBP.local,2014-08-21 17:03:52-04:00,14400,2014-08-21 17:03:52-04:00,14400,True,False,['test_static_column.py'],['68c06ae304ae2895dcfbec935a9129201a914807'],2,3,5,1,1.0,1.0,1.0
0319cfc23d88add5f2e3c6807788c2bdb7200bfd,"fix static container column sync_table bug

For static container column, ""static"" keyword is missing from cql
""create table"" statement.",andy8zhao,andy@AndyMBP.local,andy8zhao,andy@AndyMBP.local,2014-08-22 00:04:07-04:00,14400,2014-08-22 00:04:07-04:00,14400,True,False,['columns.py'],['ad318166b2154efba84b7c2285b9a905b8197c3e'],3,4,7,1,1.0,1.0,1.0
3f39854e8718d654e345b73481aa6c26bb7fa635,"Ignore iPython left-overs

A `Untitled0.ipynb` file was left in the [cqlengine-0.18.1.tar.gz](https://pypi.python.org/packages/source/c/cqlengine/cqlengine-0.18.1.tar.gz#md5=a9cb831315c8a5f2e370a7d32fc77cb5) archive on PyPi.",Kevin Deldycke,kdeldycke@users.noreply.github.com,Kevin Deldycke,kdeldycke@users.noreply.github.com,2014-08-27 10:52:14+02:00,-7200,2014-08-27 10:52:14+02:00,-7200,True,False,['.gitignore'],['488a75b115d101a195a52ed2b9eecf71a2e1f6af'],0,3,3,1,,,
aa96cdc89eca65598058679946086a1b45132905,WIP: 1st working draft,Mikhail Stepura,mikhail.stepura@outlook.com,Mikhail Stepura,mikhail.stepura@outlook.com,2014-08-27 14:29:19-07:00,25200,2014-08-27 14:29:19-07:00,25200,True,False,"['cluster.py', 'metadata.py']",['472675c61664afa99d2c9eb6c32424c846c1a367'],12,71,83,2,0.3548387096774194,0.3548387096774194,0.0
6dadbdce33e4e96d13e8fce06086349a030f5f23,Print as CQL,Mikhail Stepura,mikhail.stepura@outlook.com,Mikhail Stepura,mikhail.stepura@outlook.com,2014-08-27 14:42:46-07:00,25200,2014-08-27 14:50:14-07:00,25200,True,False,['metadata.py'],['aa96cdc89eca65598058679946086a1b45132905'],2,13,15,1,1.0,1.0,1.0
babe153327dbac79a1c1d32c7b948e5728f75930,"Fix multiple bugs related to control connection timeout and schema refresh.

1. The Cluster's class-level 'control_connection_timeout' variable was never used
2. ControlConnection.wait_for_schema_agreement() ignored the timeout passed from Cluster and always used hard-coded 2.0
3. Still wait_for_schema_agreement() if an OperationTimeoutError occurred there was no sleep between attempts, which caused test_refresh_schema_timeout() to hang because it used FakeTime and no FakeTime ever elapsed. It is also very tight busy waiting, which is sub-optimal.

My changes are:

1. Use the Cluster's class level 'control_connection_timeout' as the default for the __init__() argument
2. In wait_for_schema_agreement() use the self._timeout (passed  from Cluster) to compute the actual timeout
3. Added poll_interval = 0.2, and sleep when an operation times out before attempting again (fixes the test and makes the busy waiting more relaxed)",Gigi,gigi.sayfan@aclimalabs.com,Gigi,gigi.sayfan@aclimalabs.com,2014-08-28 11:25:55-07:00,25200,2014-08-28 11:25:55-07:00,25200,True,False,['cluster.py'],['472675c61664afa99d2c9eb6c32424c846c1a367'],6,9,15,1,0.0,0.0,0.0
0ca407bef32c0ff9938bf81c2bb068aab90fadb5,Deal with Cassandra 1.2,Mikhail Stepura,mikhail.stepura@outlook.com,Mikhail Stepura,mikhail.stepura@outlook.com,2014-08-28 16:37:49-07:00,25200,2014-08-28 16:37:49-07:00,25200,True,False,['cluster.py'],['6dadbdce33e4e96d13e8fce06086349a030f5f23'],2,9,11,1,0.0,0.0,0.0
067cf96cce1d20e8ad91c0e17b5e71503f9697ea,Deal with Cassandra 1.2 for existing tables as well,Mikhail Stepura,mikhail.stepura@outlook.com,Mikhail Stepura,mikhail.stepura@outlook.com,2014-08-29 15:23:42-07:00,25200,2014-08-29 15:23:42-07:00,25200,True,False,['cluster.py'],['0ca407bef32c0ff9938bf81c2bb068aab90fadb5'],4,11,15,1,0.8333333333333334,0.8333333333333334,0.8333333333333334
fe151651082cb00c1c8717dd8807d70fa6fc4152,Add frozen<> modifier to UDTs and tuples,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-09-02 13:11:17-05:00,18000,2014-09-02 13:11:17-05:00,18000,True,False,"['CHANGELOG.rst', 'cqltypes.py', 'test_metadata.py', 'test_udts.py', 'test_metadata.py']",['472675c61664afa99d2c9eb6c32424c846c1a367'],40,50,90,5,0.75,0.75,1.0
f4812df23826a87cc86d1469dc31a1d3584708ff,Properly handle non-InvalidRequest exceptions,Mikhail Stepura,mikhail.stepura@outlook.com,Mikhail Stepura,mikhail.stepura@outlook.com,2014-09-02 14:20:56-07:00,25200,2014-09-02 14:20:56-07:00,25200,True,False,['cluster.py'],['067cf96cce1d20e8ad91c0e17b5e71503f9697ea'],3,3,6,1,,,
2a4c91179c520bb4b51d405511d1a60ca3559848,Update changelog and simplify failure logic,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-09-02 18:00:19-05:00,18000,2014-09-02 18:00:19-05:00,18000,True,False,"['CHANGELOG.rst', 'cluster.py']",['f4812df23826a87cc86d1469dc31a1d3584708ff'],4,12,16,2,0.0,0.0,0.0
1fedfd1a5d88f6032e66807abc9b3d32ddca08ca,"PYTHON-124 Repeated inserts may exhaust all connections causing NoConnectionsAvailable, in_flight never decreased.",Irina Kaplounova,irina.kaplounova@datastax.com,Irina Kaplounova,irina.kaplounova@datastax.com,2014-09-04 00:06:58-07:00,25200,2014-09-04 00:06:58-07:00,25200,True,False,"['cluster.py', 'test_multi_inserts.py']",['2a4c91179c520bb4b51d405511d1a60ca3559848'],4,87,91,2,0.3902439024390244,0.3902439024390244,1.0
bac0673eaf665973ea438fc18b1ec1136dc22323,"'IF NOT EXISTS' for insert statement

The usage is just like 'ttl'.",mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-07-01 18:48:58+08:00,-28800,2014-09-04 16:56:41+08:00,-28800,True,False,"['models.py', 'query.py', 'statements.py', 'test_checkexist.py']",['5f8a46a7f4c858d78bcdda48df336316b4bb7c25'],5,184,189,4,0.8144329896907216,0.979381443298969,0.7525773195876289
b4f8e3ac8fefacd7e48932764cdf13426fb3a3b7,rename all 'check_exist' related things to 'if_not_exists',mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-07-02 12:53:22+08:00,-28800,2014-09-04 16:56:41+08:00,-28800,True,False,"['models.py', 'query.py', 'statements.py', 'test_ifnotexists.py']",['bac0673eaf665973ea438fc18b1ec1136dc22323'],56,56,112,4,,,
df4eb5dc4f1b79e34d0f280764eb05868998e8c1,"'IF NOT EXISTS' for insert statement

The usage is just like 'ttl'.",mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-07-01 18:48:58+08:00,-28800,2014-09-04 16:57:58+08:00,-28800,True,False,['test_checkexist.py'],['b4f8e3ac8fefacd7e48932764cdf13426fb3a3b7'],0,129,129,1,1.0,1.0,1.0
400c2174d955d06353779b713528c40bc0e59c00,rename all 'check_exist' related things to 'if_not_exists',mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-07-02 12:53:22+08:00,-28800,2014-09-04 16:57:58+08:00,-28800,True,False,['test_checkexist.py'],['df4eb5dc4f1b79e34d0f280764eb05868998e8c1'],129,0,129,1,0.0,0.0,0.0
1be4e1a3d0810e0aab28f3ba2cb1c74c8bfda229,update docs,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-07-03 14:41:37+08:00,-28800,2014-09-04 16:58:20+08:00,-28800,True,False,['models.rst'],['400c2174d955d06353779b713528c40bc0e59c00'],0,6,6,1,,,
bd97775b2b71b7ed29c9f6576eb660efc6379176,if not exist only supported by cassandra 2.0 or later.,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-15 11:48:31+08:00,-28800,2014-09-04 16:58:20+08:00,-28800,True,False,['test_ifnotexists.py'],['1be4e1a3d0810e0aab28f3ba2cb1c74c8bfda229'],17,22,39,1,1.0,1.0,1.0
e25b8af9a98de4b1450bd259ba06ecedd6007520,if not exist is a new feature of cassandra 2.0,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-15 11:59:44+08:00,-28800,2014-09-04 16:58:20+08:00,-28800,True,False,['models.rst'],['bd97775b2b71b7ed29c9f6576eb660efc6379176'],0,2,2,1,,,
05c9b17f2f9caffb2836b4a2f965273baab78c17,removing parameter of if_not_exists in QuerySet,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-16 11:28:16+08:00,-28800,2014-09-04 16:58:20+08:00,-28800,True,False,"['query.py', 'test_ifnotexists.py']",['e25b8af9a98de4b1450bd259ba06ecedd6007520'],6,6,12,2,,,
aa586dee0360cdd0f16da8c79c403bd0f530c586,refine code with skipUnless,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-16 11:36:14+08:00,-28800,2014-09-04 16:58:20+08:00,-28800,True,False,['test_ifnotexists.py'],['05c9b17f2f9caffb2836b4a2f965273baab78c17'],20,23,43,1,0.0,0.0,0.0
2b076264e70e8de2a762f2623aed0bfa4eb0cf79,add test case for batch query,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-16 22:06:53+08:00,-28800,2014-09-04 16:58:20+08:00,-28800,True,False,['test_ifnotexists.py'],['aa586dee0360cdd0f16da8c79c403bd0f530c586'],12,49,61,1,1.0,1.0,1.0
15e40374f932f9ac58b639ddcd472f0c1306ed22,refine doc,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-08-16 23:32:12+08:00,-28800,2014-09-04 16:58:20+08:00,-28800,True,False,['models.rst'],['2b076264e70e8de2a762f2623aed0bfa4eb0cf79'],2,2,4,1,,,
8f1692fe875b24ef6893dc6c4b633b0fbf8e1f2f,Use simplified table to encourage race in test_multi_inserts,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-09-05 18:35:01+00:00,0,2014-09-05 18:35:01+00:00,0,True,False,"['cluster.py', 'test_multi_inserts.py']",['1fedfd1a5d88f6032e66807abc9b3d32ddca08ca'],34,17,51,2,0.6363636363636364,0.6363636363636364,0.0
c1dea70a59590b7555e84dbd4cd98d72fd99fbf0,CHANGELOG update,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-09-05 22:34:15+00:00,0,2014-09-05 22:34:15+00:00,0,True,False,['CHANGELOG.rst'],['86556b8e22a28d304d485cc456de9a4b1e0cd861'],1,4,5,1,,,
e6beb346473d15295ec1abbc64b472f13da79095,fix static column detection,Tommaso Barbugli,tbarbugli@gmail.com,Tommaso Barbugli,tbarbugli@gmail.com,2014-09-07 19:26:44+02:00,-7200,2014-09-07 19:26:44+02:00,-7200,True,False,['management.py'],['5f8a46a7f4c858d78bcdda48df336316b4bb7c25'],3,2,5,1,1.0,1.0,1.0
74bf5c9f162bf561042c9485ec2f1027b5e69c5d,add LWTException when insertion is not applied.,mission.liao,missionaryliao@gmail.com,mission.liao,missionaryliao@gmail.com,2014-09-08 18:19:20+08:00,-28800,2014-09-08 18:19:20+08:00,-28800,True,False,"['exceptions.py', 'query.py', 'test_ifnotexists.py', 'models.rst']",['bd9e71c701b2984983b981989fa7ff81d3894922'],6,37,43,4,0.9,0.9,1.0
3245b89e48f4e7e7d73786b49e03b3245525c81d,Update test_types integration test for frozen keyword.,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-09-08 22:15:22+00:00,0,2014-09-08 22:15:22+00:00,0,True,False,['test_types.py'],['c1dea70a59590b7555e84dbd4cd98d72fd99fbf0'],11,11,22,1,,,
db5ec3e523696aeee4afd7e67a34ce1ed31cf289,Update UDT doc examples for frozen keyword.,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-09-09 17:00:15+00:00,0,2014-09-09 17:00:15+00:00,0,True,False,['user_defined_types.rst'],['3245b89e48f4e7e7d73786b49e03b3245525c81d'],4,4,8,1,,,
cde1aec23f3084702e2033afb63937209c1f6372,Release 2.1.1,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-09-09 17:30:30+00:00,0,2014-09-09 17:30:30+00:00,0,True,False,"['CHANGELOG.rst', '__init__.py', 'changelog']",['db5ec3e523696aeee4afd7e67a34ce1ed31cf289'],6,12,18,3,,,
bacce7e269e05c1630d7b597e0e5d23ad7df9b7e,making sure we're not altering a table when we apply sync_table twice with static colummn,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-09-10 09:57:01-07:00,25200,2014-09-10 09:57:01-07:00,25200,True,False,['test_management.py'],['e6beb346473d15295ec1abbc64b472f13da79095'],0,11,11,1,0.0,1.0,1.0
91c19ec242ee33eb34e78ddb42c201dfa8b4c5c1,trying to id why 1.2 is failing,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-09-10 10:12:13-07:00,25200,2014-09-10 10:12:13-07:00,25200,True,False,['.travis.yml'],['bacce7e269e05c1630d7b597e0e5d23ad7df9b7e'],1,1,2,1,,,
813008d125b17245bd93bb7d7e28f474531fc0fd,debugging travis,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-09-10 10:16:57-07:00,25200,2014-09-10 10:16:57-07:00,25200,True,False,['.travis.yml'],['91c19ec242ee33eb34e78ddb42c201dfa8b4c5c1'],1,1,2,1,,,
259bc7a068ad299657fa0048ef94c1fa7d8734a6,more debug,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-09-10 11:50:04-07:00,25200,2014-09-10 11:50:04-07:00,25200,True,False,['.travis.yml'],['813008d125b17245bd93bb7d7e28f474531fc0fd'],1,2,3,1,,,
32d1cf78e7be7c02a88be9ec97ceca572757efae,Post release version,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-09-11 14:44:51+00:00,0,2014-09-11 14:44:51+00:00,0,True,False,['__init__.py'],['cde1aec23f3084702e2033afb63937209c1f6372'],1,1,2,1,,,
3211e8b0be14ac3def96133098e104de07f288bb,"Handle Unauthorized message on schema_triggers query

For PYTHON-155, workaround CASSANDRA-7967",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-09-18 10:38:40-05:00,18000,2014-09-18 10:38:40-05:00,18000,True,False,['cluster.py'],['32d1cf78e7be7c02a88be9ec97ceca572757efae'],1,6,7,1,0.0,0.0,0.0
133185e495e645d40f0d3dd1d1e10cc5f43a1efd,Makes execute_concurrent function compatible with Python 2.6,Victor Godoy Poluceno,victorpoluceno@gmail.com,Victor Godoy Poluceno,victorpoluceno@gmail.com,2014-09-22 16:53:50-03:00,10800,2014-09-22 16:53:50-03:00,10800,True,False,['concurrent.py'],['d76d48ee15ed76d25aca4171c4fafc5e4f19f869'],1,1,2,1,,,
185547e4a8a4566c6ca273c61c98e914311ed3e5,PYTHON-155 + authentication test,Irina Kaplounova,irina.kaplounova@datastax.com,Irina Kaplounova,irina.kaplounova@datastax.com,2014-10-05 12:00:23-07:00,25200,2014-10-05 12:00:23-07:00,25200,True,False,['test_authentication.py'],['ad2f61f8655eb29b2009a680259311ec33862344'],0,495,495,1,0.75,0.8289473684210527,0.9692982456140351
99e582bcab045b45516a9dd4816bb5caa8ce4bd7,cassandra 2.1 travis testing,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-05 16:14:05-07:00,25200,2014-10-05 16:14:05-07:00,25200,True,False,['.travis.yml'],['474c95d4d7c81343fdd87fe87e841ea60fe382f2'],0,1,1,1,,,
a332c0ca8997dd570262d7ef9da33c9c303a8224,Test should skip if run with PROTOCOL_VERSION=1,Irina Kaplounova,irina.kaplounova@datastax.com,Irina Kaplounova,irina.kaplounova@datastax.com,2014-10-06 22:21:24-07:00,25200,2014-10-06 22:21:24-07:00,25200,True,False,['test_authentication.py'],['185547e4a8a4566c6ca273c61c98e914311ed3e5'],1,7,8,1,1.0,1.0,1.0
dfac16e4dfca76dbed5badac90c256ddd5fb5e31,maybe fixed connection issue,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-07 12:37:30-07:00,25200,2014-10-07 12:37:30-07:00,25200,True,False,['.travis.yml'],['99e582bcab045b45516a9dd4816bb5caa8ce4bd7'],1,3,4,1,,,
1902f225c78867e66755b3fa52b4cf5308e56027,get running list of procs matching cassandra,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-07 12:58:44-07:00,25200,2014-10-07 12:58:44-07:00,25200,True,False,['.travis.yml'],['dfac16e4dfca76dbed5badac90c256ddd5fb5e31'],0,1,1,1,,,
16c919bcb060597c60a33700dc7104dfc8873636,get the output,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-07 13:02:31-07:00,25200,2014-10-07 13:02:31-07:00,25200,True,False,['.travis.yml'],['1902f225c78867e66755b3fa52b4cf5308e56027'],0,1,1,1,,,
e2917ff1ad3946808100d6cfd142ca6ee64ea1fa,netstat to debug,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-07 13:08:27-07:00,25200,2014-10-07 13:08:27-07:00,25200,True,False,['.travis.yml'],['16c919bcb060597c60a33700dc7104dfc8873636'],0,1,1,1,,,
78749272dbe96ec79dc77734d6cc18903b67f48a,more debug,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-07 13:28:15-07:00,25200,2014-10-07 13:28:15-07:00,25200,True,False,['.travis.yml'],['e2917ff1ad3946808100d6cfd142ca6ee64ea1fa'],0,1,1,1,,,
4404134352448d0f82d53d7842871d53e6c41e88,remove old data files which are causing 1.2 build to fail,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-07 13:32:45-07:00,25200,2014-10-07 13:32:45-07:00,25200,True,False,['.travis.yml'],['78749272dbe96ec79dc77734d6cc18903b67f48a'],0,2,2,1,,,
ce8d6cfb706176376528426ca3049a480cf8d566,removed debugging code,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-07 13:39:07-07:00,25200,2014-10-07 13:39:07-07:00,25200,True,False,['.travis.yml'],['4404134352448d0f82d53d7842871d53e6c41e88'],7,0,7,1,,,
e6b6e5c7d598fdcc24b3484ed4f2489e45281dbd,"updated dev requirements, skipping static column test in < 2.0",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-07 14:03:11-07:00,25200,2014-10-07 14:03:11-07:00,25200,True,False,"['test_management.py', 'requirements-dev.txt', 'requirements.txt']",['ce8d6cfb706176376528426ca3049a480cf8d566'],9,7,16,3,1.0,0.0,0.0
95ad0f0f3b18493975f681e72f31653c4f7dbb68,"Python SortedSet for platforms without blist

Fixes PYTHON-104
Fixes PYTHON-167
Addresses CASSANDRA-8030

For nested UDTs and collections, the set we return must accommodate
non-hashable objects (built-in set does not).",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-07 16:57:27-05:00,18000,2014-10-07 16:57:27-05:00,18000,True,False,"['cqltypes.py', 'encoder.py', 'util.py', 'test_types.py', 'test_marshalling.py', 'test_sortedset.py']",['ad2f61f8655eb29b2009a680259311ec33862344'],43,466,509,6,0.6913183279742765,0.842443729903537,1.0
1d561a80ea96ebc71cb136291591b7936bd9eca8,some settings were removed in C 2.1,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-07 18:18:46-07:00,25200,2014-10-07 18:18:46-07:00,25200,True,False,['test_management.py'],['10810942a4d8e85e8b2e43f8fd5160df05fa0859'],6,14,20,1,0.0,1.0,1.0
a2759ddd974482b3053e7c183cd9d437ef2b8f6b,only check caching on c < 2.1,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-07 20:31:03-07:00,25200,2014-10-07 20:31:03-07:00,25200,True,False,['test_management.py'],['1d561a80ea96ebc71cb136291591b7936bd9eca8'],2,2,4,1,,,
691ec35d89ae889a109a1756f6cdc42730eb9a9c,updated commit log,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-07 20:50:23-07:00,25200,2014-10-07 20:50:23-07:00,25200,True,False,['changelog'],['a2759ddd974482b3053e7c183cd9d437ef2b8f6b'],0,6,6,1,,,
accafd2eedd6991a33e493c4a8edfaf4ed8287d6,updated version,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-10-07 20:51:34-07:00,25200,2014-10-07 20:51:34-07:00,25200,True,False,['VERSION'],['691ec35d89ae889a109a1756f6cdc42730eb9a9c'],1,1,2,1,,,
7abba76e74b14fd1a461737321523d5cf6db5e9b,Initial attempt…,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-08 12:24:47-04:00,14400,2014-10-08 12:24:47-04:00,14400,True,False,"['models.py', 'query.py', 'statements.py', 'test_transaction_statements.py']",['5f8a46a7f4c858d78bcdda48df336316b4bb7c25'],3,154,157,4,0.3522727272727273,0.5454545454545454,0.42045454545454547
5ad9759b4a3c5bcc36a09dfa25dca9dee4ab8919,"Change to 'sortedset' to match cqlsh type mapping.

also made eq, ne comparisons more robust for other types",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-08 11:36:13-05:00,18000,2014-10-08 11:36:13-05:00,18000,True,False,"['cqltypes.py', 'encoder.py', 'util.py', 'test_types.py', 'test_marshalling.py', 'test_sortedset.py']",['95ad0f0f3b18493975f681e72f31653c4f7dbb68'],72,80,152,6,1.0,1.0,1.0
44a518100947702eca15d258a6258d2ca17b7c62,Bug fixes,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-08 14:48:35-04:00,14400,2014-10-08 14:48:35-04:00,14400,True,False,"['models.py', 'query.py', 'statements.py', 'test_transaction_statements.py']",['7abba76e74b14fd1a461737321523d5cf6db5e9b'],23,52,75,4,0.7916666666666666,0.8333333333333334,1.0
dc2cdf629642bdaddbe94a2ed7d3a6ef9a17a52c,Handle CUSTOM index meta and string export,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-08 14:22:01-05:00,18000,2014-10-08 14:22:01-05:00,18000,True,False,['metadata.py'],['ad2f61f8655eb29b2009a680259311ec33862344'],8,22,30,1,1.0,1.0,0.7272727272727273
9618dd984301553f3dac90d65ffb3ff2a36eca38,Changelog catch-up,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-08 14:29:39-05:00,18000,2014-10-08 14:29:39-05:00,18000,True,False,['CHANGELOG.rst'],['dc2cdf629642bdaddbe94a2ed7d3a6ef9a17a52c'],0,11,11,1,,,
f9874c7787393dac617c00321ac58246610df4a4,Added a thrown exception when a transaction fails to be applied,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-08 17:11:19-04:00,14400,2014-10-08 17:11:19-04:00,14400,True,False,"['.gitignore', 'exceptions.py', 'query.py']",['44a518100947702eca15d258a6258d2ca17b7c62'],1,11,12,3,1.0,0.0,1.0
0488813522e47dd8b06e881f5351b00992036549,Added support for PROTOCOL_VERSION=1,Irina Kaplounova,irina.kaplounova@datastax.com,Irina Kaplounova,irina.kaplounova@datastax.com,2014-10-08 23:24:05-07:00,25200,2014-10-08 23:24:05-07:00,25200,True,False,['test_authentication.py'],['a332c0ca8997dd570262d7ef9da33c9c303a8224'],55,64,119,1,1.0,1.0,0.0
263481f95962a1ab554e9dd4f4e272cd98cf77b0,"Allow DCAware LB to default local_dc based on contact_points

PYTHON-148",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-09 15:33:43-05:00,18000,2014-10-09 15:33:43-05:00,18000,True,False,"['cluster.py', 'policies.py']",['ad2f61f8655eb29b2009a680259311ec33862344'],28,49,77,2,0.029411764705882353,0.0,0.0
0fded4feb23138b0e68407abc70be0fd9cbc743d,"Set routing key in BatchStatement.add() if none specified

PYTHON-126",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-09 16:31:52-05:00,18000,2014-10-09 16:31:52-05:00,18000,True,False,['query.py'],['ad2f61f8655eb29b2009a680259311ec33862344'],6,12,18,1,0.5,0.5,0.5
a0ff7ff2727e3f60cdfbac67c7988068408e8372,More changelog catch-up,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-09 16:52:22-05:00,18000,2014-10-09 16:52:22-05:00,18000,True,False,['CHANGELOG.rst'],['9618dd984301553f3dac90d65ffb3ff2a36eca38'],0,7,7,1,,,
f8d183e25d8666f589b2e7c1fa48d0f3f0ffb7fb,"Error handling for bad column names in named tuple

Emit warning with workarounds when named_tuple_factory is used with
result column names that can't be used in namedtuple.
Try to return results with renamed, positional column names.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-10 09:52:00-05:00,18000,2014-10-10 09:52:00-05:00,18000,True,False,['query.py'],['ad2f61f8655eb29b2009a680259311ec33862344'],1,11,12,1,1.0,1.0,1.0
6bfc0e8d2d64264f7c46ea4b0fd6009b5a59ebdb,"Improve documentation of function with explicit args

Makes it explicit that concurrency and raise_on_first_error are
supported by this alternate function.",Paul McNett,p@ulmcnett.com,Paul McNett,p@ulmcnett.com,2014-10-13 05:59:35-07:00,25200,2014-10-13 05:59:35-07:00,25200,True,False,['concurrent.py'],['58f734b0b81e42617b8fd51c3c2eeceb82bc09a5'],4,4,8,1,,,
98350bbd0f6ea6c3a869ddea414e691002bf57ff,"Trivial: fix typos; improve docstring example

It's not explicit that the alternate function accepts all the arguments
of execute_concurrent until looking at the source code. I think that
adding the concurrency=50 argument to the example in the docstring
satisfies this.

My first idea was to explicitly name the concurrency and
exit_on_first_error args, but then we'd have to maintain two functions
in the future instead of of one.",Paul McNett,p@ulmcnett.com,Paul McNett,p@ulmcnett.com,2014-10-13 08:07:39-07:00,25200,2014-10-13 08:07:39-07:00,25200,True,False,['concurrent.py'],['6bfc0e8d2d64264f7c46ea4b0fd6009b5a59ebdb'],3,3,6,1,,,
387fa14df0198d89ba47cc29e7f05b4cceacc265,"Use alredy generated hosts list in assignment.

Code review tweaks",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-13 12:32:00-05:00,18000,2014-10-13 12:32:00-05:00,18000,True,False,['policies.py'],['263481f95962a1ab554e9dd4f4e272cd98cf77b0'],3,2,5,1,,1.0,
99b4872ba503409e8dc8a0b720fc454364c73f97,Copy internal ist for sortedset::copy,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-13 13:11:17-05:00,18000,2014-10-13 13:11:17-05:00,18000,True,False,['util.py'],['5ad9759b4a3c5bcc36a09dfa25dca9dee4ab8919'],1,1,2,1,,,
a7b48ca6e67f748bdbac6f8e0fff6e9f7c1de40d,Normalize test class names.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-14 20:20:43-05:00,18000,2014-10-14 20:20:43-05:00,18000,True,False,"['test_marshalling.py', 'test_metadata.py', 'test_policies.py', 'test_sortedset.py']",['025c16581d35b78c929ae101bf4cd47e12ba5a4a'],9,9,18,4,,,
a639afa6bf71b4b83ee520d0e7aaab7d5d8f2a3b,Remove superfluous mock spec arguments for DCA LBP,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-14 20:22:58-05:00,18000,2014-10-14 20:22:58-05:00,18000,True,False,['test_policies.py'],['a7b48ca6e67f748bdbac6f8e0fff6e9f7c1de40d'],8,8,16,1,,,
5ca7eab0ae64bac096be3c47c0c4bf68c723f300,Test for DCAware default DC (PYTHON-148),Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-14 21:19:00-05:00,18000,2014-10-14 21:19:00-05:00,18000,True,False,['test_policies.py'],['a639afa6bf71b4b83ee520d0e7aaab7d5d8f2a3b'],0,39,39,1,0.0,1.0,1.0
4fe15f6a6f08efdeef04d5f0a897b0f98bd565f8,Test for PYTHON-122,Irina Kaplounova,irina.kaplounova@datastax.com,Irina Kaplounova,irina.kaplounova@datastax.com,2014-10-14 20:19:21-07:00,25200,2014-10-14 20:20:42-07:00,25200,True,False,['test_query.py'],['5ca7eab0ae64bac096be3c47c0c4bf68c723f300'],2,50,52,1,1.0,1.0,1.0
423dccd6fa544a38c52982997b1c7e572331c48d,Reverted tests to original,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-15 09:31:05-04:00,14400,2014-10-15 09:31:05-04:00,14400,True,False,"['VERSION', 'test_management.py', 'test_transaction_statements.py', 'setup.py']",['f9874c7787393dac617c00321ac58246610df4a4'],63,36,99,4,0.0,0.0,0.0
7a1646a1854c17aa12b9e443a9e4302b593d18b2,Normalize standard integration test class names.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-15 08:41:34-05:00,18000,2014-10-15 08:41:34-05:00,18000,True,False,"['test_connection.py', 'test_factories.py', 'test_metadata.py', 'test_query.py']",['4fe15f6a6f08efdeef04d5f0a897b0f98bd565f8'],8,8,16,4,,,
073f4a155b83a3edbd63e5114da2d82cbb5cafa3,Move NamedTupleFactoryAndNumericColNamesTests to row_factories tests.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-15 08:47:16-05:00,18000,2014-10-15 08:47:16-05:00,18000,True,False,"['test_query.py', 'test_row_factories.py']",['7a1646a1854c17aa12b9e443a9e4302b593d18b2'],50,50,100,2,,,
1df07ce1519bf9b0eff9baeb33a4a31338944df8,Add test for CUSTOM index meta (PYTHON-165),Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-15 09:21:23-05:00,18000,2014-10-15 09:21:23-05:00,18000,True,False,['test_metadata.py'],['073f4a155b83a3edbd63e5114da2d82cbb5cafa3'],1,22,23,1,1.0,1.0,1.0
4ece815c29b6f28de901c8b7241e2559e3a59237,Test for PYTHON-126,Irina Kaplounova,irina.kaplounova@datastax.com,Irina Kaplounova,irina.kaplounova@datastax.com,2014-10-15 11:21:19-07:00,25200,2014-10-15 11:21:19-07:00,25200,True,False,['test_query.py'],['5ca7eab0ae64bac096be3c47c0c4bf68c723f300'],0,152,152,1,0.41836734693877553,1.0,1.0
65b0185958373b98faa63a3aaa02c1689ee4885c,"Added SSL support in GeventConnection

* Calling ssl.wrap_socket() if ssl_options are given
* Removed useless select() code in the read and write greenlets, that
  was causing weird deadlocks in SSL mode",Luper Rouch,luper.rouch@gmail.com,Luper Rouch,luper.rouch@gmail.com,2014-10-15 20:59:13+02:00,-7200,2014-10-15 20:59:13+02:00,-7200,True,False,['geventreactor.py'],['1df07ce1519bf9b0eff9baeb33a4a31338944df8'],23,6,29,1,1.0,1.0,0.0
def165264cbefd412e9e94769db8c23df14be04e,Update ConnectionTests setup name,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-15 14:48:36-05:00,18000,2014-10-15 14:48:36-05:00,18000,True,False,['test_connection.py'],['1df07ce1519bf9b0eff9baeb33a4a31338944df8'],2,2,4,1,,,
85854f23a92da61b6d16c4b2b9d8052d59f80938,Test simplification and normalize test names.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-10-15 16:05:49-05:00,18000,2014-10-15 16:05:49-05:00,18000,True,False,['test_query.py'],['94ac4d4eec6ad58e1dff9059eca3646bbedfc8cf'],100,35,135,1,1.0,0.0,0.0
aa88282fdf62428a4a43664db39bfccf6d179ce6,Add third party integration guide. Refs #237 & #238.,Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2014-10-16 13:46:37+02:00,-7200,2014-10-16 13:46:37+02:00,-7200,True,False,"['index.rst', 'third_party.rst']",['accafd2eedd6991a33e493c4a8edfaf4ed8287d6'],0,68,68,2,,,
68895a08fc586b4b3fb1c5e6a8ea6808e91996e0,put back select() calls in gevent read/write loops,Luper Rouch,luper.rouch@gmail.com,Luper Rouch,luper.rouch@gmail.com,2014-10-16 14:19:40+02:00,-7200,2014-10-16 14:19:40+02:00,-7200,True,False,['geventreactor.py'],['65b0185958373b98faa63a3aaa02c1689ee4885c'],2,25,27,1,0.0,0.0,1.0
401adb6741f0e8c14c089584649eaae6f4b443fa,properly drain pending data on SSL socket in the gevent reactor,Luper Rouch,luper.rouch@gmail.com,Luper Rouch,luper.rouch@gmail.com,2014-10-16 15:03:08+02:00,-7200,2014-10-16 15:03:08+02:00,-7200,True,False,['geventreactor.py'],['68895a08fc586b4b3fb1c5e6a8ea6808e91996e0'],0,10,10,1,0.0,0.0,0.6666666666666666
70f1886a3e1e13e6d17bc19274d00bd996d4d08e,cleanup,Luper Rouch,luper.rouch@gmail.com,Luper Rouch,luper.rouch@gmail.com,2014-10-16 15:04:01+02:00,-7200,2014-10-16 15:04:01+02:00,-7200,True,False,['geventreactor.py'],['401adb6741f0e8c14c089584649eaae6f4b443fa'],5,1,6,1,1.0,1.0,0.0
6e4dc3afdfbba5253218c7bc9565c6666bebe410,Small fixes and tests added,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-16 12:18:56-04:00,14400,2014-10-16 12:18:56-04:00,14400,True,False,"['connection.py', 'models.py', 'query.py', 'statements.py', 'base.py']",['423dccd6fa544a38c52982997b1c7e572331c48d'],22,23,45,5,0.0,1.0,0.0
de18d562962741818fa0591e8c08c0342406ba87,Reverted test base to original,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-16 12:19:54-04:00,14400,2014-10-16 12:19:54-04:00,14400,True,False,['base.py'],['6e4dc3afdfbba5253218c7bc9565c6666bebe410'],7,5,12,1,0.0,0.0,0.0
281fb84a1551763ad68c7b11778e7bcdc67a6862,Added tests for real.,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-16 13:32:02-04:00,14400,2014-10-16 13:32:02-04:00,14400,True,False,"['.gitignore', 'test_transaction_statement.py', 'test_ifnotexists.py', 'test_transaction.py']",['de18d562962741818fa0591e8c08c0342406ba87'],3,286,289,4,1.0,1.0,1.0
57454bd55419cc99bca9870eaf1e1a6bec8061d3,Updates for 2.1.2 release.,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-10-16 18:34:41+00:00,0,2014-10-16 18:34:41+00:00,0,True,False,"['CHANGELOG.rst', '__init__.py', 'changelog']",['85854f23a92da61b6d16c4b2b9d8052d59f80938'],2,9,11,3,,,
ebf5bf87165d95c7157bd2372f5226302ac2af77,Post-release version update,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-10-16 18:45:12+00:00,0,2014-10-16 18:45:12+00:00,0,True,False,['__init__.py'],['57454bd55419cc99bca9870eaf1e1a6bec8061d3'],1,1,2,1,,,
ddf9c789818f1e915d5cb709c7dd0f52722706fd,Qualify except branch around namedtuple construction.,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-10-17 14:11:49+00:00,0,2014-10-17 14:11:49+00:00,0,True,False,['query.py'],['ebf5bf87165d95c7157bd2372f5226302ac2af77'],1,1,2,1,,,
09427f4d75cb1c87409f9d7768354bd9a56a72a6,Initial attempt…,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-08 12:24:47-04:00,14400,2014-10-20 10:01:31-04:00,14400,True,False,"['models.py', 'query.py', 'statements.py', 'test_transaction_statements.py']",['66aa65be6e3da3c66816f62d2c762b2f6d6596c1'],3,154,157,4,0.17045454545454544,0.5454545454545454,0.42045454545454547
874a63cdbcc658023c3d0f5c22c57b472d00cd68,Bug fixes,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-08 14:48:35-04:00,14400,2014-10-20 10:06:21-04:00,14400,True,False,"['models.py', 'query.py', 'statements.py', 'test_transaction_statements.py']",['09427f4d75cb1c87409f9d7768354bd9a56a72a6'],21,45,66,4,0.8,0.85,1.0
adc49ac5d231899bc1baf981fc51d6ce8ac79ee7,Added a thrown exception when a transaction fails to be applied,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-08 17:11:19-04:00,14400,2014-10-20 10:07:57-04:00,14400,True,False,"['.gitignore', 'exceptions.py', 'query.py']",['874a63cdbcc658023c3d0f5c22c57b472d00cd68'],1,14,15,3,1.0,0.0,1.0
f70b59d860f28749be6e6636a9f983bef3f17f5c,Reverted tests to original,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-15 09:31:05-04:00,14400,2014-10-20 10:10:11-04:00,14400,True,False,['test_transaction_statements.py'],['adc49ac5d231899bc1baf981fc51d6ce8ac79ee7'],45,0,45,1,0.0,0.0,0.0
8e7fe5518bc78adde6af539bb711f4f8fe41be6b,Small fixes and tests added,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-16 12:18:56-04:00,14400,2014-10-20 10:10:51-04:00,14400,True,False,"['connection.py', 'models.py', 'query.py', 'statements.py', 'base.py']",['f70b59d860f28749be6e6636a9f983bef3f17f5c'],22,27,49,5,0.0,1.0,0.0
043982eb42af925cb9677ea8ee26931e5ecaa6b0,Reverted test base to original,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-16 12:19:54-04:00,14400,2014-10-20 10:10:51-04:00,14400,True,False,['base.py'],['8e7fe5518bc78adde6af539bb711f4f8fe41be6b'],7,5,12,1,0.0,0.0,0.0
1d71f8c9d2223d59b8399abbf92c0b4b759e3784,Added tests for real.,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-16 13:32:02-04:00,14400,2014-10-20 10:10:51-04:00,14400,True,False,"['.gitignore', 'test_transaction_statement.py', 'test_transaction.py']",['043982eb42af925cb9677ea8ee26931e5ecaa6b0'],3,108,111,3,1.0,1.0,1.0
7f733f09d616d928cafd74e719b991192223e0ab,Removed transaction from insert statement,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-20 10:24:28-04:00,14400,2014-10-20 10:24:28-04:00,14400,True,False,['statements.py'],['ca3915aeb614f7bf1f66732f85f1f49f6b958ed7'],30,43,73,1,1.0,1.0,0.0
e7182dfcf4029dc71340ebfbbbe550acfa4a55c4,Converted .transaction() to .iff(),timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-20 10:30:59-04:00,14400,2014-10-20 10:30:59-04:00,14400,True,False,"['models.py', 'query.py', 'statements.py', 'test_transaction_statement.py', 'test_transaction.py']",['7f733f09d616d928cafd74e719b991192223e0ab'],51,17,68,5,0.07692307692307693,0.07692307692307693,0.07692307692307693
2ba9a99dca2ea155f0df8e9c18491e44fcb8c358,"Added documentation.  Changed .transaction() to .iff(), removed
TransactionException and replaced with LWTException",timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-20 11:05:34-04:00,14400,2014-10-20 11:05:34-04:00,14400,True,False,"['connection.py', 'exceptions.py', 'models.py', 'query.py', 'base.py', 'test_transaction.py', 'models.rst']",['e7182dfcf4029dc71340ebfbbbe550acfa4a55c4'],22,20,42,7,0.5,1.0,0.5
d6eb32fccc6e2e1aa2607b441374ef52ed3a6402,Small bug fixes to .iff(),timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-20 11:43:32-04:00,14400,2014-10-20 11:43:32-04:00,14400,True,False,"['query.py', 'statements.py', 'test_transaction_statement.py', 'test_transaction.py']",['2ba9a99dca2ea155f0df8e9c18491e44fcb8c358'],19,45,64,4,1.0,1.0,1.0
1fc6c6422fbcc94e74b638e74cc7a38a1c2fdaff,Included code sample in docs for iff,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-20 11:47:03-04:00,14400,2014-10-20 11:47:03-04:00,14400,True,False,['models.rst'],['d6eb32fccc6e2e1aa2607b441374ef52ed3a6402'],0,7,7,1,,,
d65bb7919751b2662fb85ac06868c804f33d963f,Weird…,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-20 11:51:31-04:00,14400,2014-10-20 11:51:31-04:00,14400,True,False,['VERSION'],['1fc6c6422fbcc94e74b638e74cc7a38a1c2fdaff'],4,0,4,1,,,
92c5ce317a1c7ae009a7a80e1b0b8af885290942,Small cleanups,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-20 11:55:42-04:00,14400,2014-10-20 11:55:42-04:00,14400,True,False,"['connection.py', 'query.py', 'base.py', 'setup.py']",['d65bb7919751b2662fb85ac06868c804f33d963f'],9,6,15,4,1.0,1.0,1.0
5f2f1f7d2353fd8f3940ab20c6ab575dcf7df265,Removed unnecessary import statement,timmartin19,martin@Tims-MacBook-Pro.local,timmartin19,martin@Tims-MacBook-Pro.local,2014-10-20 12:02:04-04:00,14400,2014-10-20 12:02:04-04:00,14400,True,False,['connection.py'],['92c5ce317a1c7ae009a7a80e1b0b8af885290942'],1,0,1,1,,,
72a17063bf9eb1e2ac9b46866d09b93bfa3e8d88,Fix to documentation of BatchQuery,Alon Diamant,alon@everything.me,Alon Diamant,alon@everything.me,2014-10-27 13:44:19+02:00,-7200,2014-10-27 13:44:19+02:00,-7200,True,False,['query.py'],['66aa65be6e3da3c66816f62d2c762b2f6d6596c1'],1,1,2,1,,,
fa82a8755f070318cec3df476e4046fbc1fbcdd8,"Fixes select schema peers query

Extends select schema peers query so it selects 'peer' field
and it can be used if rpc_address='0.0.0.0'",Andrei V. Ostapenko,Andrey_Ostapenko@symantec.com,Andrei V. Ostapenko,Andrey_Ostapenko@symantec.com,2014-11-04 17:53:03+02:00,-7200,2014-11-04 17:53:03+02:00,-7200,True,False,['cluster.py'],['ddf9c789818f1e915d5cb709c7dd0f52722706fd'],1,1,2,1,,,
bb7a3379816bd240f2bab9f72ed13233bd72ceac,adds tests for preserving None in bool validation,Lucas Chi,lucas.chi@venmo.com,Lucas Chi,lucas.chi@venmo.com,2014-11-07 15:31:25-05:00,18000,2014-11-07 16:21:07-05:00,18000,True,False,['test_validation.py'],['66aa65be6e3da3c66816f62d2c762b2f6d6596c1'],0,15,15,1,1.0,1.0,1.0
c8d68bb5053abb6da846505057ad46599a88c5e6,none check before coercing to bool,Lucas Chi,lucas.chi@venmo.com,Lucas Chi,lucas.chi@venmo.com,2014-11-07 16:26:18-05:00,18000,2014-11-07 16:26:18-05:00,18000,True,False,['columns.py'],['bb7a3379816bd240f2bab9f72ed13233bd72ceac'],1,5,6,1,1.0,1.0,1.0
cdcb78d378c51b5c0721b4f6051a48c1d2e500e9,Fix typo in getting started guide.,Andreas Stührk,andy@hammerhartes.de,Andreas Stührk,a.stuehrk@gini.net,2014-11-12 12:50:21+01:00,-3600,2014-11-12 12:50:21+01:00,-3600,True,False,['getting_started.rst'],['ddf9c789818f1e915d5cb709c7dd0f52722706fd'],1,1,2,1,,,
0dc60487da94f618832121d579d7ec72a47fcfed,fixes blind set add w/ empty set,Lucas Chi,lucas.chi@venmo.com,Lucas Chi,lucas.chi@venmo.com,2014-11-12 16:22:25-05:00,18000,2014-11-12 16:22:25-05:00,18000,True,False,"['statements.py', 'test_update_statement.py']",['66aa65be6e3da3c66816f62d2c762b2f6d6596c1'],10,29,39,2,0.0,0.47058823529411764,1.0
ccf694c20142e41034b43e5e33bf373e107adba3,remove unused import,Lucas Chi,lucas.chi@venmo.com,Lucas Chi,lucas.chi@venmo.com,2014-11-12 16:22:46-05:00,18000,2014-11-12 16:22:46-05:00,18000,True,False,['test_validation.py'],['0dc60487da94f618832121d579d7ec72a47fcfed'],2,0,2,1,,,
c388365236ceee4184b42a91c470202afafb6657,fix list append and prepend with empty lists,Lucas Chi,lucas.chi@venmo.com,Lucas Chi,lucas.chi@venmo.com,2014-11-12 17:03:37-05:00,18000,2014-11-12 17:03:37-05:00,18000,True,False,"['statements.py', 'test_update_statement.py']",['ccf694c20142e41034b43e5e33bf373e107adba3'],6,19,25,2,1.0,1.0,1.0
c2590b46b85cdae1a6e1431481f05ba92b373221,add set removal test and update test names,Lucas Chi,lucas.chi@venmo.com,Lucas Chi,lucas.chi@venmo.com,2014-11-12 17:07:55-05:00,18000,2014-11-12 17:07:55-05:00,18000,True,False,['test_update_statement.py'],['c388365236ceee4184b42a91c470202afafb6657'],1,6,7,1,1.0,1.0,1.0
65c7680e56cbe66065a6f2d5faa4df6d35f3a615,allow for multiple callback and errbacks,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-11-13 16:56:20-08:00,28800,2014-11-13 16:56:20-08:00,28800,True,False,['cluster.py'],['b6dab9956154d6a421c83a3f71e0538a04a5b576'],10,15,25,1,0.0,1.0,0.0
9a1b1f0230727c061185f3c34f925a0633e0e0bf,"Fix routing key encoding for compound primary keys

- make component size big-endian
- include component string size in format string",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-11-14 12:04:52-06:00,21600,2014-11-14 12:04:52-06:00,21600,True,False,['query.py'],['026eedd5ee80aa417d8d4b3279e84b5f57267368'],1,2,3,1,0.0,1.0,1.0
e9b69a62b24d731c0425d5d52a774fa6334b6217,Added LOCAL_ONE consistency level constant,Alon Diamant,alon@everything.me,Alon Diamant,alon@everything.me,2014-11-14 20:06:13+02:00,-7200,2014-11-14 20:06:13+02:00,-7200,True,False,['__init__.py'],['72a17063bf9eb1e2ac9b46866d09b93bfa3e8d88'],0,1,1,1,,,
c3151ee4acf95b5518aff08c3b7d321573568ba8,for some reason int_map was hard coded,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-11-14 12:31:25-08:00,28800,2014-11-14 12:31:25-08:00,28800,True,False,['statements.py'],['0ecd2181bc8cd4dea293d5690202e028129a57a6'],1,1,2,1,,,
df6aa48696face08f024e4034b3a08b90aa47f68,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2014-11-18 12:05:02-08:00,28800,2014-11-18 12:05:02-08:00,28800,True,False,['VERSION'],['c3151ee4acf95b5518aff08c3b7d321573568ba8'],1,1,2,1,,,
df5790f8225c5d4aa38050cb496ae2847f196ff8,"Temporary fix for CASSANDRA-8326

This has not been reviewed or well tested.  It's a temporary fix until a
proper patch can be put together and tested.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-11-18 15:35:14-06:00,21600,2014-11-18 15:35:14-06:00,21600,True,False,['metadata.py'],['9a1b1f0230727c061185f3c34f925a0633e0e0bf'],6,45,51,1,0.0,0.0,0.0
738f166cec6604105894dc3dd7ae9d1755a179c3,add query timeout feature,Roey Berman,roey@everything.me,Roey Berman,roey@everything.me,2014-08-11 16:58:23+03:00,-10800,2014-11-19 13:56:32+02:00,-7200,True,False,"['connection.py', 'models.py', 'query.py', 'test_batch_query.py', 'test_queryset.py', 'queryset.rst']",['c3151ee4acf95b5518aff08c3b7d321573568ba8'],35,171,206,6,0.9571428571428572,0.9857142857142858,0.9428571428571428
29b10562f6de9aeca3a0fc6f74d0aaf618de9672,docs for timeout - use create() instead of save(),Roey Berman,roey@everything.me,Roey Berman,roey@everything.me,2014-10-27 11:42:38+02:00,-7200,2014-11-19 13:56:34+02:00,-7200,True,False,['queryset.rst'],['738f166cec6604105894dc3dd7ae9d1755a179c3'],3,3,6,1,,,
b3f64e16b0bfd79e9300b06002309d8aa4e20116,fix docs for per query timeout,Roey Berman,roey@everything.me,Roey Berman,roey@everything.me,2014-11-20 18:51:33+02:00,-7200,2014-11-20 18:51:33+02:00,-7200,True,False,['queryset.rst'],['d3533713c75a438a30b55d457a1aa81eff1b5a2e'],0,5,5,1,,,
542e7f6573470aa8d6ec262583d06d162cf4c5f8,Fixes typo in docstring.,Anthony Yim,anthony.yim@venmo.com,Anthony Yim,anthony.yim@venmo.com,2014-11-21 17:18:29-05:00,18000,2014-11-21 17:18:29-05:00,18000,True,False,['models.py'],['6e834a2b0112e418e6f6ab7a30bb19c25f6c00dd'],1,1,2,1,,,
623216ef1a33367831fd1cef69ac1dcb430f6cd0,"Update installation.rst

Add note to help with issues as reported here: http://stackoverflow.com/questions/27085384/c-extension-for-murmur3partitioner-was-not-compiled",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-11-24 10:56:11-06:00,21600,2014-11-24 10:56:11-06:00,21600,True,False,['installation.rst'],['9a1b1f0230727c061185f3c34f925a0633e0e0bf'],1,3,4,1,,,
7488ec065ab6d66cb535259380e977da08d11a59,"generalized read loop in favor of ssl-only 'drain'

tweaking gevent ssl PR WIP",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-11-24 12:34:55-06:00,21600,2014-11-24 12:34:55-06:00,21600,True,False,"['geventreactor.py', 'libevwrapper.sox']",['6e1154d6d5d3f90dab5cf9e2cf67446a81054695'],12,5,17,2,1.0,1.0,0.5
34cc31e02395965260a330c265bef3bb65cbc5d3,Added SaslAuthProvider and SaslAuthenticator for kerberos support,Mike Adamson,madamson@datastax.com,Mike Adamson,madamson@datastax.com,2014-11-24 18:17:17+00:00,0,2014-11-24 18:42:23+00:00,0,True,False,"['auth.py', 'connection.py', 'protocol.py']",['623216ef1a33367831fd1cef69ac1dcb430f6cd0'],2,45,47,3,1.0,1.0,0.7272727272727273
5bade68a6513bb0cd47912456f03bc007927de75,"Info log when connections established to 'up' nodes

PYTHON-116",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-11-24 13:37:48-06:00,21600,2014-11-24 13:37:48-06:00,21600,True,False,['cluster.py'],['623216ef1a33367831fd1cef69ac1dcb430f6cd0'],0,1,1,1,0.0,0.0,0.0
07a4a7c403ce01e7290821af7e2b4439f04f5580,"Don't try to connect to peers with incomplete meta

PYTHON-163",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-11-24 16:49:12-06:00,21600,2014-11-24 16:49:12-06:00,21600,True,False,['cluster.py'],['623216ef1a33367831fd1cef69ac1dcb430f6cd0'],5,11,16,1,0.0,0.0,0.0
f37bc2c5fd1c60e52550227db20e0fafa92e041e,Import error handling for SaslAuthProvider,Mike Adamson,madamson@datastax.com,Mike Adamson,madamson@datastax.com,2014-11-26 11:14:28+00:00,0,2014-11-26 11:14:28+00:00,0,True,False,['auth.py'],['34cc31e02395965260a330c265bef3bb65cbc5d3'],2,6,8,1,1.0,1.0,1.0
d600e5144c0fb33a1c7cb3b2ed1a8943a953a639,"Remove ./debian directory

Based on recommendation of Debian OpenStack maintainer, in accordance with https://wiki.debian.org/UpstreamGuide#Pristine_Upstream_Source",Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-11-26 18:34:23+00:00,0,2014-11-26 18:34:23+00:00,0,True,False,"['changelog', 'compat', 'control', 'copyright', '0001-don-t-use-ez_setup.patch', 'series', 'python-cassandra-driver-dbg.install', 'python-cassandra-driver-doc.docs', 'python-cassandra-driver.install', 'rules', 'format']",['9b5b4bd3053ae57dc12a898bf829bc02429bcd9f'],179,0,179,11,,,
cee2f673c0594aa631f4fe0ef08c23ee146c3fb9,Remove debian references from release procedure.,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-11-26 18:38:46+00:00,0,2014-11-26 18:38:46+00:00,0,True,False,['README-dev.rst'],['d600e5144c0fb33a1c7cb3b2ed1a8943a953a639'],7,0,7,1,,,
ca4d5b0303f21e108d34000b9e7b0cbf99b343ed,"Copy keyspace meta tables on refresh

PYTHON-173",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-11-26 15:26:05-06:00,21600,2014-11-26 15:26:05-06:00,21600,True,False,['metadata.py'],['9b5b4bd3053ae57dc12a898bf829bc02429bcd9f'],0,1,1,1,0.0,1.0,0.0
cdfa7a7a241ed080e9218d1cfc98e2b8a2fa3765,"Select and use peer address for schema agreement

PYTHON-166
Fixes a problem with schema agreement which manifests when rpc_address =
0.0.0.0",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-11-26 16:05:04-06:00,21600,2014-11-26 16:05:04-06:00,21600,True,False,['cluster.py'],['623216ef1a33367831fd1cef69ac1dcb430f6cd0'],7,8,15,1,0.0,0.0,0.0
382d2229c85379c2ef8d6a1a75adc210a858c88e,"Specify ""compression = {}"" when compression is disabled

This was brought up in CASSANDRA-8288",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-11-26 16:25:24-06:00,21600,2014-11-26 16:35:20-06:00,21600,True,False,"['metadata.py', 'test_metadata.py']",['cee2f673c0594aa631f4fe0ef08c23ee146c3fb9'],3,9,12,2,1.0,1.0,1.0
f32831fdf0e88520300777a5cafe2a646bfb30c7,Treat control_connection_timeout like other cluster attributes.,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-01 16:23:22+00:00,0,2014-12-01 16:23:22+00:00,0,True,False,['cluster.py'],['6ca3628ea8d6ce60e4ca335e472c6750a0721e2c'],5,4,9,1,,,
1d924f1e44de2dbff28bc843a0e7b9ee94244bb6,Don't sleep following a timeout in schema wait.,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-01 16:24:34+00:00,0,2014-12-01 16:24:34+00:00,0,True,False,['cluster.py'],['f32831fdf0e88520300777a5cafe2a646bfb30c7'],3,1,4,1,1.0,1.0,1.0
18c31d673f7ee132ef4cc413d8fbdedb2e654b18,"Make test_refresh_schema_timeout test work

previously a failed assertion in bad_wait_for_responses was causing the test to take an unexpected path, failing silently",Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-01 18:52:56+00:00,0,2014-12-01 18:52:56+00:00,0,True,False,['test_control_connection.py'],['1d924f1e44de2dbff28bc843a0e7b9ee94244bb6'],7,8,15,1,1.0,1.0,1.0
7a7e1172d7437857dec90eed6ae7083045a619e4,"Use session default_timeout waiting on prepare futures

PYTHON-179; fixes issue where prepare phase can hang indefinitely if peers are unreachable.",Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-01 22:45:46+00:00,0,2014-12-01 22:45:46+00:00,0,True,False,['cluster.py'],['cee2f673c0594aa631f4fe0ef08c23ee146c3fb9'],2,2,4,1,,,
c875016c6ace6fdbd60dc7d1a02063ad8517d8e5,"Avoid TokenAware failure when keyspace not set

PYTHON-181; fixes KeyError when routing_key set with no keyspace",Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-02 16:44:37+00:00,0,2014-12-02 16:44:37+00:00,0,True,False,['policies.py'],['cee2f673c0594aa631f4fe0ef08c23ee146c3fb9'],1,1,2,1,,,
b7d66a3951fc114ee48e44e56bfb0b33394a9f43,"Print CL name, instead of enum, in error messages

PYTHON-180",Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-01 23:10:53+00:00,0,2014-12-02 19:52:32-06:00,21600,True,False,"['__init__.py', 'protocol.py']",['cee2f673c0594aa631f4fe0ef08c23ee146c3fb9'],7,15,22,2,1.0,1.0,0.0
37572a939f42df779d865f945dfb32038c6cc5a1,"Make keyspace settable on all statement types

Change Statement.keyspace to be handled more like routing_key:
- now settable on simplestatements
- now set implicitly along with routing key in batch statements

Also:
- changed BoundStatement.bind to raise if not enough parameters for routing key
- fixed minor typo in example in comments",Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-02 19:17:53+00:00,0,2014-12-03 01:57:48+00:00,0,True,False,"['cluster.py', 'query.py', 'test_query.py', 'test_policies.py']",['c875016c6ace6fdbd60dc7d1a02063ad8517d8e5'],43,51,94,4,0.0,0.0,0.0
8f0e72f484df077ad08012bd2011bddd313be655,"Assign key aliases from json, restore guard against empty string",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-03 13:18:20-06:00,21600,2014-12-03 13:18:20-06:00,21600,True,False,['metadata.py'],['91913dce9900b4568a97ceac5d6ebfecc9ba3e97'],3,3,6,1,,,
101e2653f3b355ed4801703109cc869c46486d01,"Lookup cf_col_rows once, with a default value

fixes a problem trying to iterate 'None' when the cf has no rows in col_rows",Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-03 21:06:45+00:00,0,2014-12-03 21:06:45+00:00,0,True,False,['metadata.py'],['8f0e72f484df077ad08012bd2011bddd313be655'],8,8,16,1,,,
0a33575b24596d730aac448de96d7f097760d7af,Disambiguate row parameter in list comprehensions from function argument,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-03 21:24:39+00:00,0,2014-12-03 21:24:39+00:00,0,True,False,['metadata.py'],['101e2653f3b355ed4801703109cc869c46486d01'],8,8,16,1,,,
1e4655a2452d9737e5a137a9007b4c3c7d24b7e2,Disambiguate row parameter in list comprehensions from function argument,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-03 21:57:58+00:00,0,2014-12-03 21:57:58+00:00,0,True,False,['metadata.py'],['0a33575b24596d730aac448de96d7f097760d7af'],1,1,2,1,,,
b0bb243db5d8f5d121c6d870e43c16509ec4055b,Minor doc clarification about concurrency limits,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2014-12-03 16:10:05-06:00,21600,2014-12-03 16:10:43-06:00,21600,True,False,"['concurrent.py', 'performance.rst']",['92439a1c0e525111a96300bef53d6a37d49ace00'],3,8,11,2,,,
e677ee510f1c7559170e59ba327e7f50eb67ac69,"Set PreparedStatement.values in init

peer review input",Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-03 22:18:29+00:00,0,2014-12-03 22:18:29+00:00,0,True,False,['query.py'],['37572a939f42df779d865f945dfb32038c6cc5a1'],1,2,3,1,1.0,1.0,0.0
e5edc89b59c1595bdc65435e72c4dfba2ba45c63,Stop using strange dict(dict) for routing key test.,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-03 22:19:14+00:00,0,2014-12-03 22:19:14+00:00,0,True,False,['test_query.py'],['e677ee510f1c7559170e59ba327e7f50eb67ac69'],2,6,8,1,1.0,1.0,1.0
5b0eb474aac716b7508a6b3f45447a198d1522dc,"Reuse local variable schema_ver

peer review input",Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-03 22:51:26+00:00,0,2014-12-03 22:51:26+00:00,0,True,False,['cluster.py'],['cdfa7a7a241ed080e9218d1cfc98e2b8a2fa3765'],1,1,2,1,,,
4f7dfe330716ab683f83d1bc6b04c2169b95dadb,"Bail on host with not metadata before adding/removing

peer review input",Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-03 23:17:04+00:00,0,2014-12-03 23:17:04+00:00,0,True,False,['cluster.py'],['07a4a7c403ce01e7290821af7e2b4439f04f5580'],10,8,18,1,1.0,1.0,1.0
f723c7c26cc123405be6b7fa4b4d44718ddf73a8,Remove extraneous file from git.,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-03 23:19:45+00:00,0,2014-12-03 23:19:45+00:00,0,True,False,['libevwrapper.sox'],['7488ec065ab6d66cb535259380e977da08d11a59'],0,0,0,1,,,
1e1d97efbd321127ee62164ce739a15275e4c6a8,"Fix response future callback tests

Assertions on callback were being swallowed because result and final
exception are both set by the time result() was called.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-04 11:33:19-06:00,21600,2014-12-04 11:33:19-06:00,21600,True,False,['test_response_future.py'],['7746c487baa06d643d2edd3688c6a789e70cc2e1'],6,18,24,1,0.5,1.0,1.0
b0bcaccbb3f7652fc3d8a74a452b0609693fce82,"Tests for multiple callbacks, errbacks

PYTHON-182
github #214",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-04 11:58:33-06:00,21600,2014-12-04 11:58:33-06:00,21600,True,False,['test_response_future.py'],['1e1d97efbd321127ee62164ce739a15275e4c6a8'],1,58,59,1,0.0,1.0,1.0
00ae05c63ce6f39b39c25d45e29a5af20cf7b170,"Timestamp deserialization workaround for Windows

PYTHON-119
Fixes Windows-specific problem forming datetime from timestamps < -43200
(1969-12-31 12:00:00)",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-05 10:03:19-06:00,21600,2014-12-05 10:06:54-06:00,21600,True,False,['cqltypes.py'],['f07940d01bf5766b6396c2c528daa2fa54661ae0'],2,8,10,1,1.0,1.0,1.0
4f613a9a34883d92021c0841c26583120e56a835,DateType timestamp deserialization test for PYTHON-119,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-10 15:11:18-06:00,21600,2014-12-10 15:11:18-06:00,21600,True,False,"['cqltypes.py', 'test_types.py']",['40669108f7adaf87a99dabe5bee579a66fedd15b'],17,35,52,2,1.0,1.0,1.0
7e09f19e08319314897bfb97f8e5ea9cba9e1221,"Don't use 'long' in unit tests.

breaks python 3",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-10 16:12:32-06:00,21600,2014-12-10 16:12:32-06:00,21600,True,False,['test_types.py'],['4f613a9a34883d92021c0841c26583120e56a835'],1,1,2,1,,,
398ae7e697227e48bad829e7468a085128beb658,Test for PYTHON-173,Irina Kaplounova,irina.kaplounova@datastax.com,Irina Kaplounova,irina.kaplounova@datastax.com,2014-12-11 00:37:40-08:00,28800,2014-12-11 00:37:40-08:00,28800,True,False,['test_metadata.py'],['7e09f19e08319314897bfb97f8e5ea9cba9e1221'],0,34,34,1,1.0,1.0,1.0
6cc069b10ae7700b7528a3ab721e060f5202103d,"Skip alias test when < 2.0, only create table once",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-11 11:44:41-06:00,21600,2014-12-11 11:44:41-06:00,21600,True,False,['test_row_factories.py'],['7e09f19e08319314897bfb97f8e5ea9cba9e1221'],16,18,34,1,1.0,1.0,1.0
d12896c540b0e39170bef1ace2f0f3c6c86f7ea0,"Skip paging test for protocol v1

also fix wording in some skip messages",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-11 12:17:40-06:00,21600,2014-12-11 12:17:40-06:00,21600,True,False,"['test_concurrent.py', 'test_query.py', 'test_query_paging.py']",['6cc069b10ae7700b7528a3ab721e060f5202103d'],2,7,9,3,0.0,1.0,1.0
c8bb01825f6cc478d694ea4a5223b843f4405b5d,Correct consistency assignment in Unavailable.__init__,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-12 13:52:05-06:00,21600,2014-12-12 13:52:05-06:00,21600,True,False,['__init__.py'],['d12896c540b0e39170bef1ace2f0f3c6c86f7ea0'],1,1,2,1,,,
4723a86f098196738722990954eaa97d34d6a7b4,"Update integration tests to CCM 2.0 API

Also changed how modules interact with the package ccm cluster,
making it more efficient, and hopefully robust.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-12 16:05:38-06:00,21600,2014-12-12 16:05:38-06:00,21600,True,False,"['test-requirements.txt', '__init__.py', 'test_consistency.py', 'test_ipv6.py', 'test_large_data.py', 'test_loadbalancingpolicies.py', 'test_multi_inserts.py', 'test_schema.py', 'test_authentication.py', 'test_cluster.py', 'test_concurrent.py', 'test_connection.py', 'test_metadata.py', 'test_metrics.py', 'test_prepared_statements.py', 'test_query.py', 'test_query_paging.py', 'test_row_factories.py', 'test_types.py', 'test_udts.py']",['c8bb01825f6cc478d694ea4a5223b843f4405b5d'],583,250,833,20,0.625,0.2556818181818182,0.0
56267768f292c3fb9d9366e8361f548f6ec1c993,Add logging statements to trace cluster changes in integration tests,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-12 16:30:43-06:00,21600,2014-12-12 16:30:43-06:00,21600,True,False,['__init__.py'],['4723a86f098196738722990954eaa97d34d6a7b4'],0,2,2,1,0.0,0.0,0.0
e316560582032350f772552a494edf100b0011e7,Make create statement in test_udt_sizes use timeout,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-15 12:15:28-06:00,21600,2014-12-15 12:15:28-06:00,21600,True,False,['test_udts.py'],['56267768f292c3fb9d9366e8361f548f6ec1c993'],1,1,2,1,,,
9c8d7737db2df5d2bc59909e00ea653686344485,"TokenAware statement keyspace tests.

PYTHON-181",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-15 14:27:10-06:00,21600,2014-12-15 14:27:10-06:00,21600,True,False,"['test_parameter_binding.py', 'test_policies.py']",['e316560582032350f772552a494edf100b0011e7'],0,78,78,2,0.0,1.0,1.0
40d9e3f26f12be7e5635e34691d08d2476a81080,"Put a few more checks around test_metadata keyspace alteration test

PYTHON-173",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-15 15:05:43-06:00,21600,2014-12-15 15:05:43-06:00,21600,True,False,['test_metadata.py'],['1cde103309de151a6e4f6508d663dafe42523a4f'],3,9,12,1,1.0,1.0,1.0
21d49a6645639f2b8c8504eb82bcc160ab8ea9e7,"Handle schema meta when column meta missing

workaround for CASSANDRA-8487",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-15 16:05:22-06:00,21600,2014-12-15 16:05:22-06:00,21600,True,False,['metadata.py'],['40d9e3f26f12be7e5635e34691d08d2476a81080'],7,13,20,1,0.0,0.0,0.0
ddf0eb9d10dd58de0f2b9f50de7815ce346b3c7b,Test for PYTHON-180,Irina Kaplounova,irina.kaplounova@datastax.com,Irina Kaplounova,irina.kaplounova@datastax.com,2014-12-16 01:13:17-08:00,28800,2014-12-16 01:13:17-08:00,28800,True,False,['test_exception.py'],['21d49a6645639f2b8c8504eb82bcc160ab8ea9e7'],0,56,56,1,1.0,1.0,1.0
524e71795489e94cf7c2361f027c965e9b19541b,"Routing key test including compound keys.

PYTHON-184",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-16 09:24:57-06:00,21600,2014-12-16 09:24:57-06:00,21600,True,False,"['__init__.py', 'test_routing.py']",['21d49a6645639f2b8c8504eb82bcc160ab8ea9e7'],0,100,100,2,1.0,1.0,0.8222222222222222
632f1c1cfb3b26a30a81a23a77550dd95d63b5fa,Clarifiy registered types user_defined_types.rst,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-16 10:30:10-06:00,21600,2014-12-16 10:30:10-06:00,21600,True,False,['user_defined_types.rst'],['43ce29e74e1cac2efad777d25de31321febffcce'],1,3,4,1,,,
6483ba61e4ae789bead2e410f96e514fe9a50079,Escape asterisk user_defined_types.rst,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-16 10:41:37-06:00,21600,2014-12-16 10:41:37-06:00,21600,True,False,['user_defined_types.rst'],['632f1c1cfb3b26a30a81a23a77550dd95d63b5fa'],1,1,2,1,,,
9ad8c97a0ab37e74ac5f5288ab4a547024dc4717,changelog update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-16 11:51:01-06:00,21600,2014-12-16 11:51:01-06:00,21600,True,False,['CHANGELOG.rst'],['632f1c1cfb3b26a30a81a23a77550dd95d63b5fa'],0,24,24,1,,,
e577577f1c1ac3d4da18086f9c669b21e1569fed,PYTHON-191 Add support for custom replication strategies.,Jeremiah Jordan,jeremiah@datastax.com,Jeremiah Jordan,jeremiah@datastax.com,2014-12-11 13:47:34-06:00,21600,2014-12-16 13:18:34-06:00,21600,True,False,"['metadata.py', 'test_metadata.py']",['57454bd55419cc99bca9870eaf1e1a6bec8061d3'],35,72,107,2,1.0,1.0,0.6842105263157895
d9e90740b93163fbf4633da2c98fb86e3feb6626,Release version,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-16 21:26:30+00:00,0,2014-12-16 21:26:30+00:00,0,True,False,['__init__.py'],['fcfb0af6ebddc18bd4aa45648d8bbf09807064d5'],1,1,2,1,,,
f1163a9a9aac4ab5de937533fc9693b58e7da121,post release version,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2014-12-16 21:32:41+00:00,0,2014-12-16 21:32:41+00:00,0,True,False,['__init__.py'],['d9e90740b93163fbf4633da2c98fb86e3feb6626'],1,1,2,1,,,
1726f6a0cb0b764dc5af927d6b1a613ea21fb863,"SaslAuth docstring update, additional ctor guard

copy/paste error
not sure on release version yet",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-18 14:07:26-06:00,21600,2014-12-18 14:07:26-06:00,21600,True,False,['auth.py'],['7eaff08a9301d4d8372f2b2de1c5ee79d4689cbf'],5,7,12,1,1.0,1.0,0.0
cf330df53cf1eff04520cbd21f69aa8c8329dc1d,"Added SaslAuth test for #215

PYTHON-109",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-18 14:08:57-06:00,21600,2014-12-18 14:08:57-06:00,21600,True,False,['test_authentication.py'],['1726f6a0cb0b764dc5af927d6b1a613ea21fb863'],29,27,56,1,1.0,1.0,0.0
fd2db2f9011843fdd3b57f5cb78bf5af805f92a3,"Remove int type requirement, revert TypeError in favor of None return

also update tests",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-18 15:29:10-06:00,21600,2014-12-18 15:29:10-06:00,21600,True,False,"['metadata.py', 'test_metadata.py']",['e577577f1c1ac3d4da18086f9c669b21e1569fed'],11,16,27,2,1.0,1.0,0.0
e52ed1e60e91d846cc3f1ca329466c0d5bbc97e8,Don't use Exception.message in warn log (python3),Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-18 16:13:54-06:00,21600,2014-12-18 16:13:54-06:00,21600,True,False,['metadata.py'],['fd2db2f9011843fdd3b57f5cb78bf5af805f92a3'],5,11,16,1,,,
509ac79712cd4c6a85518c5a533fc9d450dc679d,"Correct meta logic for composite comparators, compact storage

PYTHON-192",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-22 11:48:08-06:00,21600,2014-12-22 11:48:08-06:00,21600,True,False,['metadata.py'],['cf330df53cf1eff04520cbd21f69aa8c8329dc1d'],4,5,9,1,,,
61b4fad6995c6b1810cb5c04b443ef0378abacd4,"Prevent NIE when unknown repl strategy with TA LBP

Unknown replication strategies would raise if token aware load balancing
used.
Also fixes a more general issue where TokenAware blows up with
strategies returning an empty mapping (i.e. LocalStrategy, and Unknown).",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-22 16:00:20-06:00,21600,2014-12-22 16:00:20-06:00,21600,True,False,['metadata.py'],['e52ed1e60e91d846cc3f1ca329466c0d5bbc97e8'],1,4,5,1,1.0,1.0,0.0
dca76010ed6322f4e8d079aa97e779714d031578,"Improved var name in ReplicationStrategy

review input",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-22 16:03:07-06:00,21600,2014-12-22 16:03:07-06:00,21600,True,False,['metadata.py'],['61b4fad6995c6b1810cb5c04b443ef0378abacd4'],5,5,10,1,,,
55ae64c1f0508b35d2dcfa217784068ef1733cd9,Changelog update for interim tickets.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-22 16:40:00-06:00,21600,2014-12-22 16:40:00-06:00,21600,True,False,['CHANGELOG.rst'],['896624660b5208b198dc41611278374ae9195261'],0,12,12,1,,,
584bf0204cd7c8dd772a7b84419cc668e040aae6,"Add test for variations on tables created with cli

PYTHON-192",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-23 15:38:27-06:00,21600,2014-12-23 15:38:27-06:00,21600,True,False,['test_metadata.py'],['55ae64c1f0508b35d2dcfa217784068ef1733cd9'],0,246,246,1,0.0,1.0,1.0
0d9bf65691657fefe30c3c216ff9eb82921f0472,expand test for UnknownReplicationStrategy,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-23 15:55:10-06:00,21600,2014-12-23 15:55:10-06:00,21600,True,False,['test_metadata.py'],['584bf0204cd7c8dd772a7b84419cc668e040aae6'],0,4,4,1,0.0,1.0,1.0
f739fda8bc35fe17f33441252b58abd7b5a903b0,"Add a test for TokenAware against a local table.

Fixed in 61b4fad, would previously blow up with KeyError",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2014-12-23 16:17:35-06:00,21600,2014-12-23 16:17:35-06:00,21600,True,False,['test_loadbalancingpolicies.py'],['0d9bf65691657fefe30c3c216ff9eb82921f0472'],0,13,13,1,1.0,1.0,1.0
d6b8a57d5f10e80a73d5aef2e10c92182f7fec10,bump cassandra version to 1.2 in puppet manifest,Amy Hanlon,amyehanlon@gmail.com,Amy Hanlon,amyehanlon@gmail.com,2014-12-27 16:00:15-05:00,18000,2014-12-27 16:00:15-05:00,18000,True,False,['default.pp'],['3b81177a87840c8076f8a3d193e595be91e40187'],3,3,6,1,,,
54311fae5b903ec29ba5a68675a7e04f9c6694aa,fix codeblock formatting,Amy Hanlon,amyehanlon@gmail.com,Amy Hanlon,amyehanlon@gmail.com,2014-12-27 16:43:14-05:00,18000,2014-12-27 16:43:14-05:00,18000,True,False,['development.rst'],['3b81177a87840c8076f8a3d193e595be91e40187'],4,4,8,1,,,
13208895444eea7ff3abf66f3138774d1994b9b3,"Fix travis gpg error

This commit fixes failing travis build as advised here: https://github.com/travis-ci/travis-ci/issues/2934#issuecomment-61806248",Rafał Furmański,r.furmanski@gmail.com,Rafał Furmański,r.furmanski@gmail.com,2014-12-28 22:56:19+01:00,-3600,2014-12-28 22:56:19+01:00,-3600,True,False,['.travis.yml'],['9b44a3c8574a857523d6e71b7df0178a333d749a'],0,1,1,1,,,
a74c44501f2a46f468bcecea15fc889c6d4a2185,add test for assigning an empty set,amygdalama,amyehanlon@gmail.com,Amy Hanlon,amyehanlon@gmail.com,2014-12-22 22:47:56-05:00,18000,2015-01-04 13:24:30-05:00,18000,True,False,['test_assignment_clauses.py'],['4a89d77b6c15258d39ef3cd89f49c4fd3f7c8efa'],0,18,18,1,1.0,1.0,1.0
f4873ed6244c1787313a15f6ce21bf9c9a11647f,return a context size of 1 when assigning the empty set,amygdalama,amyehanlon@gmail.com,Amy Hanlon,amyehanlon@gmail.com,2014-12-22 22:52:05-05:00,18000,2015-01-04 13:24:30-05:00,18000,True,False,['statements.py'],['a74c44501f2a46f468bcecea15fc889c6d4a2185'],1,1,2,1,,,
849b569bb6e6a558c9ffacd69393d39e4c302bc4,add setup_package for running nosetests,Amy Hanlon,amyehanlon@gmail.com,Amy Hanlon,amyehanlon@gmail.com,2014-12-28 17:51:58-05:00,18000,2015-01-04 17:54:18-05:00,18000,True,False,['__init__.py'],['4a89d77b6c15258d39ef3cd89f49c4fd3f7c8efa'],0,25,25,1,0.0,1.0,1.0
3d06858b8058ffb600e5e1612b1e21459ef1b18a,use a constant to get protocol_version instead of module-level calls to get_cluster,Amy Hanlon,amyehanlon@gmail.com,Amy Hanlon,amyehanlon@gmail.com,2015-01-04 17:56:17-05:00,18000,2015-01-04 17:56:17-05:00,18000,True,False,"['base.py', 'test_static_column.py', 'test_management.py', 'test_queryset.py', 'test_ifnotexists.py']",['849b569bb6e6a558c9ffacd69393d39e4c302bc4'],19,17,36,5,,,
038a11914ae972076e8e5e3ad5b3ceac17b6cd35,remove connecting to cassandra in test script since nose handles it in setup_package,Amy Hanlon,amyehanlon@gmail.com,Amy Hanlon,amyehanlon@gmail.com,2015-01-04 17:59:19-05:00,18000,2015-01-04 17:59:19-05:00,18000,True,False,['test.py'],['3d06858b8058ffb600e5e1612b1e21459ef1b18a'],24,0,24,1,,,
f04284810e0ace64ae22d20d09f3e78d3d926893,pip should install the dev requirements when provisioning,Amy Hanlon,amyehanlon@gmail.com,Amy Hanlon,amyehanlon@gmail.com,2015-01-04 18:15:25-05:00,18000,2015-01-04 18:15:25-05:00,18000,True,False,['default.pp'],['4a89d77b6c15258d39ef3cd89f49c4fd3f7c8efa'],1,1,2,1,,,
767bcf34d25f0088e2b3f34cd4079dc720679e4f,"Properly handle unhexlify argument type and return type in Python 3

When the schema contains user defined types, binascii.uhexlify gets called.
In Python 3 unhexlify accepts ""only bytestring or bytearray objects as input""
and returns bytes too. This caused apply_parameters to crash.
Now for Python 3 there'a a wrapper than accepts str or bytes and returns str.",Michał Kandulski,michal.kandulski@gmail.com,Michał Kandulski,michal.kandulski@gmail.com,2015-01-05 13:05:09+01:00,-3600,2015-01-05 13:05:09+01:00,-3600,True,False,['cqltypes.py'],['f739fda8bc35fe17f33441252b58abd7b5a903b0'],2,14,16,1,1.0,1.0,1.0
907a6c8a3c787d3d9c3eae27d208498ef37f3499,use nosetests command to run tests in travis,Amy Hanlon,amyehanlon@gmail.com,Amy Hanlon,amyehanlon@gmail.com,2015-01-05 22:22:47-05:00,18000,2015-01-05 22:22:47-05:00,18000,True,False,['.travis.yml'],['038a11914ae972076e8e5e3ad5b3ceac17b6cd35'],1,1,2,1,,,
b4fb4468660105be76e0ab3347f971a2c8580a8a,"Decode column names from composite types (x=><type>)

PYTHON-192 follow-on",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-06 11:01:46-06:00,21600,2015-01-06 11:01:46-06:00,21600,True,False,['cqltypes.py'],['f739fda8bc35fe17f33441252b58abd7b5a903b0'],5,5,10,1,0.0,0.0,1.0
1a54d402c3c799a96cea25836d455073bac15508,"Use composite type col names, don't display incompatible tables.

PYTHON-192 follow-on",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-06 11:02:32-06:00,21600,2015-01-06 11:02:32-06:00,21600,True,False,"['metadata.py', 'test_metadata.py']",['b4fb4468660105be76e0ab3347f971a2c8580a8a'],9,51,60,2,0.4482758620689655,0.9310344827586207,0.9310344827586207
bdc4259c493f62143e0de7e7f8276050bfbea58f,"Remove implicit timestamp scaling from DateType

PYTHON-204",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-06 11:26:57-06:00,21600,2015-01-06 11:26:57-06:00,21600,True,False,"['cqltypes.py', 'test_types.py']",['f739fda8bc35fe17f33441252b58abd7b5a903b0'],23,7,30,2,1.0,0.0,0.0
a68b1de613c41266d5547c6ce8a2f2e118b173ad,Better diff error messages for test_metadata strings,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-06 14:11:34-06:00,21600,2015-01-06 14:11:34-06:00,21600,True,False,['test_metadata.py'],['f739fda8bc35fe17f33441252b58abd7b5a903b0'],4,12,16,1,1.0,1.0,0.0
1545984aa6a7949c91ee31060b57c371c647201b,"Build schema meta in face of schema disagreements at startup.

Also, setting max_schema_agreement_wait <= 0 bypasses wait in all cases.

PYTHON-205",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-06 16:48:01-06:00,21600,2015-01-06 16:48:01-06:00,21600,True,False,['cluster.py'],['a68b1de613c41266d5547c6ce8a2f2e118b173ad'],4,14,18,1,0.0,0.42857142857142855,0.42857142857142855
67a8b8edaeb434e2d1e2e7075cd21415992f1b34,Added column name to ValidateError messages,Christopher Bradford,cbradford@opensourceconnections.com,Christopher Bradford,cbradford@opensourceconnections.com,2015-01-07 09:12:54-05:00,18000,2015-01-07 09:12:54-05:00,18000,True,False,['columns.py'],['89ebd646907fb60368330b2c793cfb607c7d3330'],15,15,30,1,,,
9364fa825b2ba69a6e6453ee6e95a8c843df6fb6,"Add Cluster.refresh_schema for explicit, synchronous refresh.

PYTHON-205",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-07 11:28:58-06:00,21600,2015-01-07 11:28:58-06:00,21600,True,False,['cluster.py'],['1545984aa6a7949c91ee31060b57c371c647201b'],9,26,35,1,0.75,0.75,0.0
07051753cdeb0b4e2826f7dbffd3a9634bd0cb1d,simplify ControlConnection._handle_schema_change,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-07 11:39:06-06:00,21600,2015-01-07 11:39:06-06:00,21600,True,False,['cluster.py'],['9364fa825b2ba69a6e6453ee6e95a8c843df6fb6'],2,2,4,1,,,
e4707b0ada557c3c5d8131fee3788253d2a01cf7,log.warn() --> log.warning(),Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-07 11:46:24-06:00,21600,2015-01-07 11:46:24-06:00,21600,True,False,"['cluster.py', 'metadata.py', 'pool.py', 'query.py']",['07051753cdeb0b4e2826f7dbffd3a9634bd0cb1d'],16,17,33,4,1.0,1.0,1.0
ee8453a552077b5be0f894e2298ac9e4b4447490,Only run test_metadata/test_legacy_tables for 2.1.0+,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-07 12:07:42-06:00,21600,2015-01-07 12:07:42-06:00,21600,True,False,['test_metadata.py'],['e4707b0ada557c3c5d8131fee3788253d2a01cf7'],0,3,3,1,0.0,1.0,1.0
4a911ef9ac6231d36ff37b3e5fd0cea4a4ee6786,"Doc improvements:
- Explain prerequisites needed for benchmark examples
- Minor spelling and other fixes",Brian Cantoni,brian.cantoni@datastax.com,Brian Cantoni,brian.cantoni@datastax.com,2015-01-07 18:32:29-08:00,28800,2015-01-07 18:32:29-08:00,28800,True,False,"['getting_started.rst', 'index.rst', 'installation.rst', 'performance.rst', 'upgrading.rst', 'user_defined_types.rst']",['a68b1de613c41266d5547c6ce8a2f2e118b173ad'],14,25,39,6,,,
49465e4e21a36032224c291de590debc82982438,generate unique request_id when sending AuthResponse,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-08 12:29:27-06:00,21600,2015-01-08 12:29:27-06:00,21600,True,False,['connection.py'],['a68b1de613c41266d5547c6ce8a2f2e118b173ad'],1,1,2,1,,,
2d3eab2c2c58c830c7b63000a0b23065c6f7cadb,Raise Exception instead of Warning in Cluster.refresh_schema,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-08 14:02:58-06:00,21600,2015-01-08 14:02:58-06:00,21600,True,False,['cluster.py'],['ee8453a552077b5be0f894e2298ac9e4b4447490'],2,2,4,1,,,
21ac88035b30b508512092933dfafed185a65365,Minor fix to example script,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2015-01-09 14:47:25-06:00,21600,2015-01-09 14:47:25-06:00,21600,True,False,['example.py'],['1da2a5122aa280fceb1d47833199445be2caec2f'],1,2,3,1,0.0,1.0,1.0
4f3e51672d9691b7a7919ed074b75907750f606c,skip transaction tests when running cassandra 1.2,Amy Hanlon,amyehanlon@gmail.com,Amy Hanlon,amyehanlon@gmail.com,2015-01-11 15:28:32-05:00,18000,2015-01-11 15:28:32-05:00,18000,True,False,['test_transaction.py'],['d713345a69ffbb142f07102900110fe9101dab52'],1,5,6,1,,,
26d2471390424c38d06e59877b2cf1d43c23eebc,add amy to authors,Amy Hanlon,amyehanlon@gmail.com,Amy Hanlon,amyehanlon@gmail.com,2015-01-12 22:03:53-05:00,18000,2015-01-12 22:03:53-05:00,18000,True,False,['AUTHORS'],['a841c7ab02ece67cb1439cb19523ee7f38535267'],1,2,3,1,,,
46315504e567b8e8f24dffade22e3867fb5b6cf3,"Add idle connection heartbeats.

PYTHON-197",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-12 17:46:52-06:00,21600,2015-01-13 09:23:07-06:00,21600,True,False,"['cluster.py', 'connection.py', 'pool.py']",['6b1cb95e5e13500433157de0841b2f933d59f6b0'],10,145,155,3,0.41237113402061853,0.5670103092783505,0.7938144329896907
d2f3875599ccb702070c2fdfcf602b3e1b795cc9,cleanup; Remove unneeded member checks in Cluster,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-12 17:59:16-06:00,21600,2015-01-13 09:23:07-06:00,21600,True,False,['cluster.py'],['46315504e567b8e8f24dffade22e3867fb5b6cf3'],18,13,31,1,1.0,1.0,0.0
8562fd0e6848d8c117af96e77ae9564e9c0e53dd,adding date and time types for CASSANDRA-7523,Joshua McKenzie,Josh.McKenzie@datastax.com,Joshua McKenzie,jmckenzie@apache.org,2014-09-14 12:35:15-07:00,25200,2015-01-13 13:28:28-06:00,21600,True,False,"['cqltypes.py', 'protocol.py', 'test_types.py', 'test_marshalling.py', 'test_types.py']",['21ac88035b30b508512092933dfafed185a65365'],28,195,223,5,0.3469387755102041,0.7653061224489796,1.0
4bb8b313c0d684b286904cbe4ac962fdf73b5dd1,"made create_keyspace more sane, fixed broken tests.

create_keyspace no longer has defaults for SimpleStrategy and
replication factor.  changed tests to use the default keyspace,
cqlengine_test for all tests.  Not sure why other keyspaces were being
used.",Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2015-01-14 08:35:37-08:00,28800,2015-01-14 08:35:37-08:00,28800,True,False,"['management.py', '__init__.py', 'test_container_columns.py', 'test_counter_column.py', 'test_static_column.py', 'test_validation.py', 'test_value_io.py', 'test_compaction_settings.py', 'test_management.py', 'test_class_construction.py', 'test_equality_operations.py', 'test_model.py', 'test_model_io.py', 'test_polymorphism.py', 'test_updates.py', 'test_value_lists.py', 'test_batch_query.py', 'test_datetime_queries.py', 'test_queryoperators.py', 'test_queryset.py', 'test_updates.py', 'test_batch_query.py', 'test_consistency.py', 'test_ifnotexists.py', 'test_load.py', 'test_timestamp.py', 'test_transaction.py', 'test_ttl.py']",['672af0eb6a273977fcc8199fa0ce8e38092d72e5'],115,109,224,28,0.9459459459459459,0.05405405405405406,0.0
1122018f4546c4a4de1b5f90593e2b0538eec6a6,"raise exception when if_not_exists is not capable.

raise exception when calling if_not_exists for table with counter
columns. refer to cqlengine#302 for details.",Mission Liao,missionaryliao@gmail.com,Mission Liao,missionaryliao@gmail.com,2015-01-15 10:50:54+08:00,-28800,2015-01-15 10:50:54+08:00,-28800,True,False,"['exceptions.py', 'query.py', 'test_ifnotexists.py']",['4bb8b313c0d684b286904cbe4ac962fdf73b5dd1'],3,36,39,3,1.0,1.0,1.0
00f322a20451a49ad389d53df7ea0f25e4ac2e75,"New OrderedMap type in support of nested collections

PYTHON-186
Updated existing tests, still need to add tests for nested collections.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-14 17:42:39-06:00,21600,2015-01-15 09:52:37-06:00,21600,True,False,"['cqltypes.py', 'encoder.py', 'util.py', 'test_marshalling.py']",['6b1cb95e5e13500433157de0841b2f933d59f6b0'],11,81,92,4,0.9795918367346939,0.46938775510204084,0.5306122448979592
e824331d9b5aaed2b44b37329b41c0f8177bef2e,"Unit test for ordered map.

PYTHON-186",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-15 09:52:07-06:00,21600,2015-01-15 09:52:37-06:00,21600,True,False,['test_orderedmap.py'],['00f322a20451a49ad389d53df7ea0f25e4ac2e75'],0,127,127,1,1.0,1.0,1.0
0a51e23aa8ddcba8d8b9ffdc1ea9f35adb6b6ce6,Update existing integration test for new map type.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-15 11:19:08-06:00,21600,2015-01-15 11:19:08-06:00,21600,True,False,"['util.py', 'test_types.py']",['e824331d9b5aaed2b44b37329b41c0f8177bef2e'],3,6,9,2,1.0,1.0,1.0
0c40ccf1cfb21917e43065939c3df842b727d8f4,version bump,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2015-01-15 14:45:23-08:00,28800,2015-01-15 14:45:23-08:00,28800,True,False,['VERSION'],['3b083a4f9afee2055b65b0dda084ba16a37d6070'],1,1,2,1,,,
ab61fe9ecb026e42a9ab4be5a0b25b8cc3dc901e,updated changelog,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2015-01-15 15:02:01-08:00,28800,2015-01-15 15:02:01-08:00,28800,True,False,['changelog'],['0c40ccf1cfb21917e43065939c3df842b727d8f4'],0,12,12,1,,,
56638346b8759a35b55c7c819e4e41c21d65ca9f,Python 3 syntax,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-15 19:40:45-06:00,21600,2015-01-15 19:40:45-06:00,21600,True,False,['test_authentication.py'],['21ac88035b30b508512092933dfafed185a65365'],1,1,2,1,,,
de8ae577a22643d429a2a129601ec323ca434cb3,"Updates to 'date' and 'time' type handling.

datetime.date --> 'date'
datetime.time --> 'time'

datetime.time seemed to be the best native type for time, but it doesn't
have nanosecond resolution. Clients must use int types for that.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-15 20:19:14-06:00,21600,2015-01-15 20:19:14-06:00,21600,True,False,"['cqltypes.py', 'encoder.py', 'test_types.py', 'test_marshalling.py', 'test_types.py']",['8562fd0e6848d8c117af96e77ae9564e9c0e53dd'],125,159,284,5,1.0,1.0,1.0
7fb59a6f08e8f0e0e0dfcc4429264bd6ee4aa598,Scale interpreted timestamp for DateType,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-15 20:49:14-06:00,21600,2015-01-15 20:49:14-06:00,21600,True,False,['cqltypes.py'],['bdc4259c493f62143e0de7e7f8276050bfbea58f'],1,2,3,1,,,
fbeecbb1ebb7da04388aaf109062d145aca3dc5f,"Expanded desc for OrderedMap, updated __str__

code review input",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-15 21:07:09-06:00,21600,2015-01-15 21:07:09-06:00,21600,True,False,['util.py'],['0a51e23aa8ddcba8d8b9ffdc1ea9f35adb6b6ce6'],3,5,8,1,,,
1988a487a5b155019afc2f0ac18c39a2d130a8ab,Add OrderedMap to API docs,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-16 08:40:16-06:00,21600,2015-01-16 08:40:16-06:00,21600,True,False,"['util.py', 'util.rst', 'index.rst']",['fbeecbb1ebb7da04388aaf109062d145aca3dc5f'],4,31,35,3,,,
9af1cec1621d3568dd8d10329ca5bf70d05854e5,"Events do not return flag state in python 2.6

review updates",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-16 08:54:59-06:00,21600,2015-01-16 08:54:59-06:00,21600,True,False,['connection.py'],['d2f3875599ccb702070c2fdfcf602b3e1b795cc9'],3,5,8,1,0.5,0.5,1.0
8433378c9e5c6a75d670a2740f95e9fb42394060,"Stop hearbeat before conn close, Heartbeat idle in_flight check.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-16 09:27:52-06:00,21600,2015-01-16 09:27:52-06:00,21600,True,False,"['cluster.py', 'connection.py']",['9af1cec1621d3568dd8d10329ca5bf70d05854e5'],8,12,20,2,1.0,1.0,0.0
752c3fe5e31cc5734742d9e859b282c1c659f3eb,"Return connection to pool after set keyspace

PYTHON-195
Fixes a problem where connection.in_flight count leaks when keyspace
changes due to session.set_keyspace or 'USE' statements.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-16 09:59:06-06:00,21600,2015-01-16 09:59:06-06:00,21600,True,False,['pool.py'],['6b1cb95e5e13500433157de0841b2f933d59f6b0'],0,2,2,1,1.0,1.0,1.0
1139dd87cea713cd07f586d4f0b543091ededb26,"Simplify hex name decoding

PYTHON-208",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-16 11:33:50-06:00,21600,2015-01-16 11:33:50-06:00,21600,True,False,['cqltypes.py'],['916af14a786eddab6aee6eda2f0d2ac65a75efbf'],14,7,21,1,0.0,0.0,0.0
6bfbe325b6a36dd5e423e1d4a0d4e2086e621d12,"Explicitly turn type_classes into a list for UserTypes

Fixes a problem in python3, where a map generator is passed into
UserType, resulting in empty parameter list in 'as_cql_query'",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-16 11:34:22-06:00,21600,2015-01-16 11:34:22-06:00,21600,True,False,['metadata.py'],['1139dd87cea713cd07f586d4f0b543091ededb26'],1,1,2,1,,,
fe6cfc1e8c0f12eac24df098641ae7c5568a51f8,removed references to create_missing_keyspace #323,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2015-01-16 10:15:37-08:00,28800,2015-01-16 10:15:37-08:00,28800,True,False,"['changelog', 'management.py', 'manage_schemas.rst']",['ab61fe9ecb026e42a9ab4be5a0b25b8cc3dc901e'],8,8,16,3,,,
32811f13334f688900fa70b5ce5b5251b8064597,updated readme,Jon Haddad,jon@jonhaddad.com,Jon Haddad,jon@jonhaddad.com,2015-01-16 10:22:08-08:00,28800,2015-01-16 10:22:08-08:00,28800,True,False,['README.md'],['fe6cfc1e8c0f12eac24df098641ae7c5568a51f8'],1,5,6,1,,,
23cf630116b20fcec529ac28dd95f577df82a9c2,Correct parenthesis for util.OrderedMap.__repr__,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-16 16:36:28-06:00,21600,2015-01-16 16:36:28-06:00,21600,True,False,['util.py'],['1988a487a5b155019afc2f0ac18c39a2d130a8ab'],1,1,2,1,,,
418947cd619afcfc541c00403f131a18a17c66c2,"Add eventlet reactor, with integration test

This is based on code found from the magnetodb project

Eventlet needs monkey patching, which must be done early (like gevent).
So the integration tests are run by specifying eventlet_nosetests",Justin Santa Barbara,justin@fathomdb.com,Justin Santa Barbara,justin@fathomdb.com,2015-01-17 18:12:37-05:00,18000,2015-01-18 10:27:12-05:00,18000,True,False,"['cluster.py', 'eventletreactor.py', 'setup.py', 'test_connection.py']",['208b4cf83349d59a8e45da63243a60f3e8312094'],7,235,242,4,0.42028985507246375,0.43478260869565216,0.6086956521739131
53d93ddb4f23242952ba64155a353d9c2383c4af,"Fixed docstring typo

A small typo fix for `set_max_connections_per_host`'s docstring.",Wu Jiang,wu@minus.com,Wu Jiang,wu@minus.com,2015-01-20 13:33:29-05:00,18000,2015-01-20 13:33:29-05:00,18000,True,False,['cluster.py'],['208b4cf83349d59a8e45da63243a60f3e8312094'],1,1,2,1,,,
f92df5b750db212d208642c2d18ea68d7bc147fc,Make import style match project.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-20 13:32:52-06:00,21600,2015-01-20 13:32:52-06:00,21600,True,False,['eventletreactor.py'],['418947cd619afcfc541c00403f131a18a17c66c2'],29,27,56,1,0.75,0.75,0.25
2e905f843e0b80c1f48c0e97882ef5be746cad20,"is_monkey_patched as a common function, use in asyncore unit test.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-20 13:33:46-06:00,21600,2015-01-20 13:33:46-06:00,21600,True,False,"['__init__.py', 'test_connection.py', 'test_asyncorereactor.py']",['f92df5b750db212d208642c2d18ea68d7bc147fc'],16,25,41,3,1.0,1.0,1.0
2337cc09092e7a84602d66937b5f0e9028a4686b,Add EventletConnection to API docs.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-20 13:55:32-06:00,21600,2015-01-20 13:55:32-06:00,21600,True,False,"['eventletreactor.rst', 'index.rst']",['2e905f843e0b80c1f48c0e97882ef5be746cad20'],0,8,8,2,,,
0ddf694a8c446f7c3f4a31eb84dd8d56fcb4ef69,Refine DateType unit test,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-20 14:23:46-06:00,21600,2015-01-20 14:23:46-06:00,21600,True,False,['test_types.py'],['8778e913c4a53e1bdc0564278d9c64ee4d159f92'],4,7,11,1,0.0,1.0,1.0
a44d1e40017fed0e6acdd458735c86803ae54fb6,Make refresh schema wait parameter match name in Cluster init,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-20 17:22:46-06:00,21600,2015-01-20 17:22:46-06:00,21600,True,False,['cluster.py'],['0ddf694a8c446f7c3f4a31eb84dd8d56fcb4ef69'],4,4,8,1,,,
4eeb5bced922fc428648b97a4d3080a873232e92,Tests around Cluster.refresh_schema,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-20 17:23:42-06:00,21600,2015-01-20 17:23:42-06:00,21600,True,False,['test_cluster.py'],['a44d1e40017fed0e6acdd458735c86803ae54fb6'],4,155,159,1,0.32407407407407407,1.0,1.0
bb1155e18077da36276cd9545de1bdc4d1a0ff7e,"1) fix save/update/delete for static column changes only when clustering key is null, and 2) allow null clustering key for create() when setting static column values only",andy8zhao,andyzhao888@gmail.com,andy8zhao,andyzhao888@gmail.com,2015-01-21 09:07:30-05:00,18000,2015-01-21 09:07:30-05:00,18000,True,False,"['columns.py', 'models.py', 'query.py', 'test_container_columns.py', 'test_static_column.py']",['32811f13334f688900fa70b5ce5b5251b8064597'],14,51,65,5,0.0,0.52,0.96
b45ecabc2c729d65d3a2e6fd8967b74262a48e2a,changed test case,andy8zhao,andyzhao888@gmail.com,andy8zhao,andyzhao888@gmail.com,2015-01-21 09:22:15-05:00,18000,2015-01-21 09:22:15-05:00,18000,True,False,['test_static_column.py'],['bb1155e18077da36276cd9545de1bdc4d1a0ff7e'],1,1,2,1,,,
fcad88871ecb5a75e85c4db7c83c2a49dcbbae75,ConnectionHeartbeat unit tests,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-21 13:47:38-06:00,21600,2015-01-21 13:47:38-06:00,21600,True,False,"['connection.py', 'test_connection.py']",['4eeb5bced922fc428648b97a4d3080a873232e92'],7,159,166,2,0.47058823529411764,1.0,0.8991596638655462
d5e5572eeec7f7439a1d36365f245be449514432,Minor cleanup,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-21 13:50:50-06:00,21600,2015-01-21 13:50:50-06:00,21600,True,False,['cluster.py'],['fcad88871ecb5a75e85c4db7c83c2a49dcbbae75'],2,3,5,1,,,
2acfcbe885a402759e853ac1d8e75b4f3570b84b,rollback unwanted changes to test cases,andy8zhao,andyzhao888@gmail.com,andy8zhao,andyzhao888@gmail.com,2015-01-21 16:22:02-05:00,18000,2015-01-21 16:22:02-05:00,18000,True,False,['test_static_column.py'],['b45ecabc2c729d65d3a2e6fd8967b74262a48e2a'],8,2,10,1,,,
badad6d40fb8e39999d7ae252d862db0212029c9,Integration tests for idle connection heartbeat.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-21 15:38:21-06:00,21600,2015-01-21 15:38:21-06:00,21600,True,False,['test_cluster.py'],['d5e5572eeec7f7439a1d36365f245be449514432'],0,93,93,1,0.19607843137254902,0.2549019607843137,1.0
a67d58a5a6c56cf08bb2962ca6fcfac68a7f6201,refine usage of assertRaises,Mission Liao,missionaryliao@gmail.com,Mission Liao,missionaryliao@gmail.com,2015-01-22 10:07:41+08:00,-28800,2015-01-22 10:07:41+08:00,-28800,True,False,['test_ifnotexists.py'],['1122018f4546c4a4de1b5f90593e2b0538eec6a6'],9,7,16,1,0.0,0.0,0.0
61a0ec316065d07f806b6c27d36ab67cd626380d,six.moves.range in place of xrange,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-22 08:30:41-06:00,21600,2015-01-22 08:30:41-06:00,21600,True,False,['protocol.py'],['badad6d40fb8e39999d7ae252d862db0212029c9'],2,2,4,1,,,
a2ed58e72dae184f7c43461b36fdf762efb1ce5e,"Improve message on bind type error.

Also updated integration/standard/test_types to work in python3",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-22 09:24:10-06:00,21600,2015-01-22 09:24:10-06:00,21600,True,False,"['query.py', 'test_types.py']",['61a0ec316065d07f806b6c27d36ab67cd626380d'],5,5,10,2,,,
ad920171d769524c6b031f6438b7592a82940505,"Register udt namedtuple types in cassandra.cqltypes

This provides type visibility for pickling when deserializing
unregistered udts as keys to maps.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-22 17:59:04-06:00,21600,2015-01-22 17:59:04-06:00,21600,True,False,['cqltypes.py'],['a2ed58e72dae184f7c43461b36fdf762efb1ce5e'],9,22,31,1,0.0,1.0,0.0
d6aa371202054f2a3b4a69cdb880ad9937f2367b,Nested collections and UDTs integration test,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-22 18:00:49-06:00,21600,2015-01-22 18:00:49-06:00,21600,True,False,['test_types.py'],['ad920171d769524c6b031f6438b7592a82940505'],0,65,65,1,0.1,1.0,0.9
81811d2aae803c2bccd75b23bcac1313bf0cd07f,"quiescent pool state tests

tests for in_flight == 0 after various cluster operations
related to PYTHON-195

also changes pool.get_state to return a dict of properties (instead of a
string) for easier testing",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-23 11:19:19-06:00,21600,2015-01-23 11:19:19-06:00,21600,True,False,"['pool.py', 'test_cluster.py', 'util.py']",['d6aa371202054f2a3b4a69cdb880ad9937f2367b'],5,71,76,3,0.28125,0.90625,1.0
83a79cbfd4047b98eaea1a74c23cc05df58fdbaf,"Test request id management around authentication

related to PYTHON-210",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-23 11:57:22-06:00,21600,2015-01-23 11:57:22-06:00,21600,True,False,"['test_authentication.py', 'util.py']",['81811d2aae803c2bccd75b23bcac1313bf0cd07f'],1,26,27,2,0.15789473684210525,0.15789473684210525,0.9473684210526315
63af8010bb07cf12370d4b6ea08094358219b66a,"Bail on some tests for python3, where static string depend on dict
ordering",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-23 17:40:46-06:00,21600,2015-01-23 17:40:46-06:00,21600,True,False,"['setup.py', 'test_cluster.py', 'test_metadata.py']",['83a79cbfd4047b98eaea1a74c23cc05df58fdbaf'],20,14,34,3,1.0,1.0,0.0
3db158951c609c183adbd3ef21621ff07c103992,Add note about using protocol v3 with nested collections,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-26 15:10:26-06:00,21600,2015-01-26 15:10:26-06:00,21600,True,False,['util.py'],['63af8010bb07cf12370d4b6ea08094358219b66a'],1,5,6,1,,,
98e0e3259e108c032c2f3b7b48b06a84eaaa7e9e,Update saslauth added ver. Add SaslAuth to API docs.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-26 15:21:05-06:00,21600,2015-01-26 15:21:05-06:00,21600,True,False,"['auth.py', 'auth.rst']",['3db158951c609c183adbd3ef21621ff07c103992'],4,13,17,2,,,
1f1a66419efc70ec13a150636c72fc3f6014bca7,Add cluster idle_heartbeat_interval and refresh_schema to docs,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-26 15:37:45-06:00,21600,2015-01-26 15:37:45-06:00,21600,True,False,"['cluster.py', 'cluster.rst']",['98e0e3259e108c032c2f3b7b48b06a84eaaa7e9e'],1,9,10,2,,,
6d8eb3ccc43ea1347fd635cc99dbbc4f95601d69,Mention SaslAuthProvider in doc security section.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-26 15:54:01-06:00,21600,2015-01-26 15:54:01-06:00,21600,True,False,['security.rst'],['1f1a66419efc70ec13a150636c72fc3f6014bca7'],3,5,8,1,,,
817c49988a5fadf0e84a12583b619c9f021ca19f,Changelog update for 2.1.4,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-26 16:02:29-06:00,21600,2015-01-26 16:02:29-06:00,21600,True,False,['CHANGELOG.rst'],['6d8eb3ccc43ea1347fd635cc99dbbc4f95601d69'],2,10,12,1,,,
e2c93c5376ed7193da57e6971d9e85df067ce193,Version update for release.,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2015-01-26 22:10:50+00:00,0,2015-01-26 22:10:50+00:00,0,True,False,['__init__.py'],['817c49988a5fadf0e84a12583b619c9f021ca19f'],1,1,2,1,,,
7b503df63116ef335a2cddeffc375e5593a62921,Post-release version update,Adam Holmberg,adam.holmberg@datastax.com,Adam Holmberg,adam.holmberg@datastax.com,2015-01-26 22:21:27+00:00,0,2015-01-26 22:21:27+00:00,0,True,False,['__init__.py'],['e2c93c5376ed7193da57e6971d9e85df067ce193'],1,1,2,1,,,
18c33ff30d124fdc4f372ab8c4c0d31f5de9de3d,Prevent node refresh on node discovery during node refresh.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-28 10:45:49-06:00,21600,2015-01-28 10:45:49-06:00,21600,True,False,['cluster.py'],['7b503df63116ef335a2cddeffc375e5593a62921'],10,11,21,1,1.0,1.0,0.0
ae20e9977b2a84788293794e6b7a3637f9797769,"Randomize meta refresh on events. Add config options for refresh window.

Changes to mitigate 'thundering herd' problem on events in deployments
with large C*->Client fanout.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-28 13:36:29-06:00,21600,2015-01-28 16:23:40-06:00,21600,True,False,['cluster.py'],['18c33ff30d124fdc4f372ab8c4c0d31f5de9de3d'],21,88,109,1,0.75,0.75,0.25
39fbdfb3848c7ee57a5579b8ce04b61ff6f2f5cf,"Add API for disabling all meta refresh.

Also a synchronous node refresh call.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-28 14:38:35-06:00,21600,2015-01-28 16:25:16-06:00,21600,True,False,['cluster.py'],['ae20e9977b2a84788293794e6b7a3637f9797769'],6,42,48,1,1.0,1.0,0.631578947368421
69830d3bf534b1336326768b14664c1c72300be7,Add new api attributes and functions to docs.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-28 15:56:24-06:00,21600,2015-01-28 16:25:26-06:00,21600,True,False,"['cluster.py', 'cluster.rst']",['39fbdfb3848c7ee57a5579b8ce04b61ff6f2f5cf'],0,12,12,2,,,
5a9174f309322cbbb38cbf93f77554053669f2bc,Update unit test,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-29 08:51:40-06:00,21600,2015-01-29 08:51:40-06:00,21600,True,False,['test_control_connection.py'],['69830d3bf534b1336326768b14664c1c72300be7'],9,16,25,1,0.2857142857142857,1.0,1.0
8cdc36fb68c21590090fd87ba709ec68cf67c435,"Return connection to owner if closed during heartbeat.

This makes the driver notice nodes down even if it is the control
connection and there is no request traffic hitting the pool.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-29 10:27:08-06:00,21600,2015-01-29 10:27:08-06:00,21600,True,False,['connection.py'],['5a9174f309322cbbb38cbf93f77554053669f2bc'],8,12,20,1,0.0,0.0,1.0
3a59deda4e8f19aa5f369755b5c01da99b05b254,"Sleep for auth test, allowing C* to setup internally",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-29 11:20:17-06:00,21600,2015-01-29 11:20:17-06:00,21600,True,False,['test_authentication.py'],['8cdc36fb68c21590090fd87ba709ec68cf67c435'],1,5,6,1,1.0,1.0,1.0
453e3738d70febe66b5986997e2ffa25feee5bb9,enable collections inside UDTs via freezing Tuple,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-01-30 13:52:25-08:00,28800,2015-01-30 13:52:25-08:00,28800,True,False,['test_udts.py'],['63db78be8617c45ca8734f5423cfb947d2b1a2d7'],1,3,4,1,0.0,0.0,1.0
5acb8cd5bd3729fbb1dd92483ca2c65ea624d5cb,"Improved handling of Time type.

still needs test, doc update",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-01-30 17:58:07-06:00,21600,2015-01-30 17:58:07-06:00,21600,True,False,"['cqltypes.py', 'encoder.py', 'util.py']",['0cf8b8ec234783b48c4f5d6a4c9f69ce218676df'],44,104,148,3,0.9696969696969697,1.0,1.0
74faba63e4913a8956068a00146d7333e9f709c1,"Fix OrderedMap init from built-in dict.

also make __getitem__ KeyError return friendly key instead of pickled
value",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-02 15:35:59-06:00,21600,2015-02-02 15:35:59-06:00,21600,True,False,"['util.py', 'test_orderedmap.py']",['5acb8cd5bd3729fbb1dd92483ca2c65ea624d5cb'],3,11,14,2,1.0,1.0,1.0
91e5afbe72e6491833af1df5bcce14e011c6f0b7,Make c.util.Time comparable to integer types.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-02 15:40:11-06:00,21600,2015-02-02 15:40:11-06:00,21600,True,False,"['util.py', 'test_marshalling.py', 'test_types.py']",['74faba63e4913a8956068a00146d7333e9f709c1'],6,9,15,3,1.0,1.0,1.0
586720a886c778785a159a670c63f5aadb646d53,"date, time conditional in 'type' integration test",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-02 16:46:49-06:00,21600,2015-02-02 16:46:49-06:00,21600,True,False,['test_types.py'],['91e5afbe72e6491833af1df5bcce14e011c6f0b7'],247,204,451,1,1.0,0.0,0.0
52cccb79d3f4c5fef0003aa99b821980698ec1b5,"Tests for disabling control connection meta refresh

PYTHON-202",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-03 11:22:04-06:00,21600,2015-02-03 11:22:04-06:00,21600,True,False,['test_control_connection.py'],['63db78be8617c45ca8734f5423cfb947d2b1a2d7'],5,52,57,1,0.0,1.0,1.0
f35d3735501bdb438579f6990df80aa9912d8fd5,ignore Mac .DS_Store files,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-03 12:00:35-06:00,21600,2015-02-03 12:00:35-06:00,21600,True,False,['.gitignore'],['52cccb79d3f4c5fef0003aa99b821980698ec1b5'],0,3,3,1,,,
df2009d18d5d45732089f333fa67608a8b4569d7,assertEquals --> assertEqual,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-03 12:28:13-06:00,21600,2015-02-03 12:28:13-06:00,21600,True,False,"['test_query_paging.py', 'test_types.py']",['f35d3735501bdb438579f6990df80aa9912d8fd5'],12,11,23,2,1.0,0.0,0.0
0ded875003526a0757178dcd66e992b654306f73,Move cqlengine to cassandra package,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-03 16:00:00-06:00,21600,2015-02-03 16:00:00-06:00,21600,True,False,"['__init__.py', 'columns.py', 'connection.py', 'exceptions.py', 'functions.py', 'management.py', 'models.py', 'named.py', 'operators.py', 'query.py', 'statements.py', '__init__.py', 'base.py', '__init__.py', 'test_container_columns.py', 'test_counter_column.py', 'test_static_column.py', 'test_validation.py', 'test_value_io.py', '__init__.py', '__init__.py', 'test_compaction_settings.py', 'test_management.py', '__init__.py', 'test_class_construction.py', 'test_equality_operations.py', 'test_model.py', 'test_model_io.py', 'test_polymorphism.py', 'test_updates.py', 'test_validation.py', 'test_value_lists.py', '__init__.py', 'test_assignment_operators.py', 'test_base_operator.py', 'test_where_operators.py', '__init__.py', 'test_batch_query.py', 'test_datetime_queries.py', 'test_named.py', 'test_queryoperators.py', 'test_queryset.py', 'test_updates.py', '__init__.py', 'test_assignment_clauses.py', 'test_assignment_statement.py', 'test_base_clause.py', 'test_base_statement.py', 'test_delete_statement.py', 'test_insert_statement.py', 'test_quoter.py', 'test_select_statement.py', 'test_update_statement.py', 'test_where_clause.py', 'test_batch_query.py', 'test_consistency.py', 'test_ifnotexists.py', 'test_load.py', 'test_timestamp.py', 'test_transaction.py', 'test_ttl.py', 'VERSION', '__init__.py']",['778ef61c52c78d82ad0ea4bd2099e9b9cdbcd28d'],95,61,156,63,,,
46985097277fd491c30f833bc4024b7deb9dac01,"Reloate cqlengine tests to integration tests, update imports

Not integrated with existing integration ccm operation.
There is a handful of failing cqlengine tests in the commit, that worked
before the move.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-04 11:56:19-06:00,21600,2015-02-04 11:56:19-06:00,21600,True,False,"['__init__.py', '__init__.py', 'base.py', '__init__.py', 'test_container_columns.py', 'test_counter_column.py', 'test_static_column.py', 'test_validation.py', 'test_value_io.py', '__init__.py', '__init__.py', 'test_compaction_settings.py', 'test_management.py', '__init__.py', 'test_class_construction.py', 'test_equality_operations.py', 'test_model.py', 'test_model_io.py', 'test_polymorphism.py', 'test_updates.py', 'test_validation.py', 'test_value_lists.py', '__init__.py', 'test_assignment_operators.py', 'test_base_operator.py', 'test_where_operators.py', '__init__.py', 'test_batch_query.py', 'test_datetime_queries.py', 'test_named.py', 'test_queryoperators.py', 'test_queryset.py', 'test_updates.py', '__init__.py', 'test_assignment_clauses.py', 'test_assignment_statement.py', 'test_base_clause.py', 'test_base_statement.py', 'test_delete_statement.py', 'test_insert_statement.py', 'test_quoter.py', 'test_select_statement.py', 'test_update_statement.py', 'test_where_clause.py', 'test_batch_query.py', 'test_consistency.py', 'test_ifnotexists.py', 'test_load.py', 'test_timestamp.py', 'test_transaction.py', 'test_ttl.py']",['0ded875003526a0757178dcd66e992b654306f73'],304,269,573,51,1.0,0.0,0.0
1a9199ea5f276f519bd9a5aeec79ad686154f429,"Make cqlengine tests work in present state, following relocation.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-04 13:07:05-06:00,21600,2015-02-04 13:07:05-06:00,21600,True,False,"['query.py', 'test_compaction_settings.py', 'test_management.py', 'test_named.py', 'test_consistency.py']",['46985097277fd491c30f833bc4024b7deb9dac01'],20,20,40,5,,,
f1efeaca9b306860e2eff6c50c103bd9924e7445,"Add a mechanism to run with an existing, external ccm cluster.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-04 16:26:16-06:00,21600,2015-02-04 16:26:16-06:00,21600,True,False,['__init__.py'],['1a9199ea5f276f519bd9a5aeec79ad686154f429'],18,48,66,1,0.75,0.75,0.75
426664d3e1322b8eaf11ccae22cc4328ef780b2f,typo,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-04 16:27:23-06:00,21600,2015-02-04 16:27:23-06:00,21600,True,False,['test_management.py'],['f1efeaca9b306860e2eff6c50c103bd9924e7445'],1,1,2,1,,,
3171119cc12717e0a856531949fda514d38d2ea4,Make cqlengine tests invoke ccm.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-04 16:49:40-06:00,21600,2015-02-04 16:49:40-06:00,21600,True,False,"['__init__.py', '__init__.py']",['426664d3e1322b8eaf11ccae22cc4328ef780b2f'],2,5,7,2,0.5,0.5,0.5
53777da01f1858a5775df1395d5fa5351979c598,"Remove cqlengine project artifacts, update existing README",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-05 11:41:41-06:00,21600,2015-02-05 11:41:41-06:00,21600,True,False,"['AUTHORS', 'CONTRIBUTING.md', 'Makefile', 'README.rst', 'RELEASE.txt', 'Vagrantfile', 'get_changelog.py', 'test.py', 'changelog', 'default.pp', 'cassandra.upstart', 'requirements-dev.txt', 'test-requirements.txt', 'upgrading.txt']",['3171119cc12717e0a856531949fda514d38d2ea4'],509,9,518,14,,,
c13f047f45756bcf6613e21b3dd6067ce2de7a41,Rearrange cqlengine docs,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-05 12:21:51-06:00,21600,2015-02-05 12:21:51-06:00,21600,True,False,"['README.md', 'columns.rst', 'connection.rst', 'development.rst', 'external_resources.rst', 'faq.rst', 'manage_schemas.rst', 'models.rst', 'queryset.rst', 'related_projects.rst', 'third_party.rst']",['53777da01f1858a5775df1395d5fa5351979c598'],96,0,96,11,,,
5a22c2d7e460b61a947092755e87152c4cc801a2,"cqlengine integration: split docs into code, divide api docs

Still more to be done in object_mapper.rst cqlengine",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-06 17:03:53-06:00,21600,2015-02-06 17:03:53-06:00,21600,True,False,"['columns.py', 'models.py', 'query.py', 'cluster.rst', 'columns.rst', 'models.rst', 'query.rst', 'index.rst', 'conf.py', 'batches.rst', 'columns.rst', 'connection.rst', 'models.rst', 'queryset.rst', 'index.rst', 'object_mapper.rst']",['c13f047f45756bcf6613e21b3dd6067ce2de7a41'],900,1034,1934,16,,,
077b876fdd38af097ef4bc1ea99c86d7f4a5376d,Fix index target for collection indexes,Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2015-02-06 18:53:43-06:00,21600,2015-02-06 18:53:43-06:00,21600,True,False,"['cqltypes.py', 'metadata.py', 'test_metadata.py']",['df2009d18d5d45732089f333fa67608a8b4569d7'],1,62,63,3,0.0,0.2894736842105263,0.8421052631578947
d7a5f0a3f596b4f04c620e77f6c283968bbaa58e,Further reorg of cqlengine documentation,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-09 14:31:39-06:00,21600,2015-02-09 14:31:39-06:00,21600,True,False,"['connection.py', 'management.py', 'connection.rst', 'management.rst', 'models.rst', 'index.rst', 'conf.py', 'columns.rst', 'connection.rst', 'development.rst', 'external_resources.rst', 'faq.rst', 'manage_schemas.rst', 'models.rst', 'queryset.rst', 'related_projects.rst', 'object_mapper.rst']",['5a22c2d7e460b61a947092755e87152c4cc801a2'],415,86,501,17,0.0,0.0,0.0
a9a0dd5e7cdaef707e99e8381d8c3b7bdeb4caa4,Add note about different version support in cqlengine,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-09 14:37:52-06:00,21600,2015-02-09 14:37:52-06:00,21600,True,False,['index.rst'],['d7a5f0a3f596b4f04c620e77f6c283968bbaa58e'],1,1,2,1,,,
9b508b610656f79ba981ce3cd37a70f06642cf9c,Add cqlengine package and test requirements to setup script,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-09 14:38:24-06:00,21600,2015-02-09 14:38:24-06:00,21600,True,False,['setup.py'],['a9a0dd5e7cdaef707e99e8381d8c3b7bdeb4caa4'],2,2,4,1,,,
cf29b3972900d4a2149f751261e85a7802f57ddb,Make unit tests work with latest version of pypy,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-09 16:00:08-06:00,21600,2015-02-09 16:00:08-06:00,21600,True,False,"['test_policies.py', 'test_types.py']",['9b508b610656f79ba981ce3cd37a70f06642cf9c'],4,6,10,2,0.0,0.0,1.0
b3243f78b5bf14095db6a7f1f48134a23c579fc2,Integrate cqlengine tests into tox.ini,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-09 17:20:35-06:00,21600,2015-02-09 17:20:35-06:00,21600,True,False,"['__init__.py', '__init__.py', '__init__.py', 'tox.ini']",['cf29b3972900d4a2149f751261e85a7802f57ddb'],45,30,75,4,0.0,0.0,0.0
023bd1075f4645584ecda9610fbad523163d4d4e,Update cql collection links to more recent docs,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-10 10:18:20-06:00,21600,2015-02-10 10:18:20-06:00,21600,True,False,['columns.py'],['b3243f78b5bf14095db6a7f1f48134a23c579fc2'],3,3,6,1,,,
f078e23935947050d0070d2db15c8382c72364c8,"Make Cluster link internal reference

also tweak FAQ",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-10 10:23:46-06:00,21600,2015-02-10 10:23:46-06:00,21600,True,False,"['connection.py', 'faq.rst']",['023bd1075f4645584ecda9610fbad523163d4d4e'],2,2,4,2,,,
62c25d60e9937bc1c9faf2d1e6445d029543db5d,PEP-8 cleanup,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-10 11:47:22-06:00,21600,2015-02-10 11:47:22-06:00,21600,True,False,"['columns.py', 'connection.py', 'exceptions.py', 'functions.py', 'management.py', 'models.py', 'named.py', 'operators.py', 'query.py', 'statements.py']",['f078e23935947050d0070d2db15c8382c72364c8'],202,283,485,10,0.7804878048780488,0.6341463414634146,1.0
3419631439b900cdd6946a048eadcd4f20592647,Update copyright in core files,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-10 12:02:01-06:00,21600,2015-02-10 12:02:01-06:00,21600,True,False,"['README.rst', 'base.py', 'callback_full_pipeline.py', 'future_batches.py', 'future_full_pipeline.py', 'future_full_throttle.py', 'sync.py', '__init__.py', 'auth.py', 'cluster.py', 'concurrent.py', 'connection.py', 'cqltypes.py', 'decoder.py', 'encoder.py', '__init__.py', 'asyncorereactor.py', 'eventletreactor.py', 'geventreactor.py', 'libevreactor.py', 'twistedreactor.py', 'marshal.py', 'metadata.py', 'metrics.py', 'policies.py', 'pool.py', 'protocol.py', 'query.py', 'example.py', 'setup.py', '__init__.py', '__init__.py', 'datatype_utils.py', '__init__.py', 'test_consistency.py', 'test_ipv6.py', 'test_large_data.py', 'test_loadbalancingpolicies.py', 'test_schema.py', 'utils.py', '__init__.py', 'test_authentication.py', 'test_cluster.py', 'test_concurrent.py', 'test_connection.py', 'test_metadata.py', 'test_metrics.py', 'test_prepared_statements.py', 'test_query.py', 'test_query_paging.py', 'test_routing.py', 'test_row_factories.py', 'test_types.py', 'test_udts.py', 'util.py', '__init__.py', '__init__.py', 'test_asyncorereactor.py', 'test_libevreactor.py', 'test_twistedreactor.py', 'test_connection.py', 'test_control_connection.py', 'test_host_connection_pool.py', 'test_marshalling.py', 'test_metadata.py', 'test_orderedmap.py', 'test_parameter_binding.py', 'test_policies.py', 'test_response_future.py', 'test_sortedset.py', 'test_types.py']",['62c25d60e9937bc1c9faf2d1e6445d029543db5d'],72,72,144,71,,,
28ca35cd7b38f55103dd6b270bbc469efc2ca7da,Prepend license to cqlengine artifacts,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-10 12:03:42-06:00,21600,2015-02-10 12:03:42-06:00,21600,True,False,"['__init__.py', 'columns.py', 'connection.py', 'exceptions.py', 'functions.py', 'management.py', 'models.py', 'named.py', 'operators.py', 'query.py', 'statements.py', '__init__.py', 'base.py', '__init__.py', 'test_container_columns.py', 'test_counter_column.py', 'test_static_column.py', 'test_validation.py', 'test_value_io.py', '__init__.py', '__init__.py', 'test_compaction_settings.py', 'test_management.py', '__init__.py', 'test_class_construction.py', 'test_equality_operations.py', 'test_model.py', 'test_model_io.py', 'test_polymorphism.py', 'test_updates.py', 'test_validation.py', 'test_value_lists.py', '__init__.py', 'test_assignment_operators.py', 'test_base_operator.py', 'test_where_operators.py', '__init__.py', 'test_batch_query.py', 'test_datetime_queries.py', 'test_named.py', 'test_queryoperators.py', 'test_queryset.py', 'test_updates.py', '__init__.py', 'test_assignment_clauses.py', 'test_assignment_statement.py', 'test_base_clause.py', 'test_base_statement.py', 'test_delete_statement.py', 'test_insert_statement.py', 'test_quoter.py', 'test_select_statement.py', 'test_update_statement.py', 'test_where_clause.py', 'test_batch_query.py', 'test_consistency.py', 'test_ifnotexists.py', 'test_load.py', 'test_timestamp.py', 'test_transaction.py', 'test_ttl.py']",['3419631439b900cdd6946a048eadcd4f20592647'],0,854,854,61,,,
b2a5cb9348de66241ccf1b0fc4a4d91edd07c189,Columns doc corrections,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-10 13:22:32-06:00,21600,2015-02-10 13:22:32-06:00,21600,True,False,"['columns.py', 'columns.rst']",['28ca35cd7b38f55103dd6b270bbc469efc2ca7da'],9,9,18,2,,,
46ba8061faa72fb98ac87069be424c5dec06026e,"Additional methods for setting up mapper session.

default - use localhost connection
set_session - use a session bootstrapped in a different context",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-10 13:57:36-06:00,21600,2015-02-10 13:57:36-06:00,21600,True,False,"['connection.py', 'connection.rst']",['b2a5cb9348de66241ccf1b0fc4a4d91edd07c189'],2,23,25,2,1.0,1.0,1.0
1e9d11dbd0fa5a185291cac629cc914e1abb10fa,cqlengine.management create keyspace API with explicit strategies,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-10 14:01:09-06:00,21600,2015-02-10 14:01:09-06:00,21600,True,False,"['management.py', 'management.rst']",['46ba8061faa72fb98ac87069be424c5dec06026e'],27,34,61,2,1.0,0.0,1.0
44f061c3b12e47e5144da1b1217633d2b8738a80,"delete_keyspace --> drop_keyspace

make verb match CQL",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-10 14:04:09-06:00,21600,2015-02-10 14:04:09-06:00,21600,True,False,"['management.py', 'management.rst']",['1e9d11dbd0fa5a185291cac629cc914e1abb10fa'],5,5,10,2,,,
cfd8091b478b780c3317683385ff5e5f486f3cec,Deprecation warnings for old management functions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-10 14:52:21-06:00,21600,2015-02-10 14:52:21-06:00,21600,True,False,['management.py'],['44f061c3b12e47e5144da1b1217633d2b8738a80'],0,55,55,1,0.2,1.0,0.2
13cc0ea14b721c22c71200f858f07a22509ed687,"Add mapper example at root, rename existing example",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-10 16:47:41-06:00,21600,2015-02-10 16:47:41-06:00,21600,True,False,"['connection.py', 'example_core.py', 'example_mapper.py']",['cfd8091b478b780c3317683385ff5e5f486f3cec'],0,113,113,3,0.2,0.2,1.0
ef1472b3303ad22c3dc1aad2a7d63c229eb5d061,Added some additional logging around connection setup and schema management.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-11 11:46:26-06:00,21600,2015-02-11 11:46:26-06:00,21600,True,False,"['connection.py', 'exceptions.py', 'management.py', 'models.py']",['13cc0ea14b721c22c71200f858f07a22509ed687'],3,28,31,4,0.5,0.42857142857142855,0.8571428571428571
4e348952e84d0d8c9488e8a5de6aec60cd97bbab,Deprecate 'polymorphic' model API attributes.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-11 14:42:00-06:00,21600,2015-02-11 14:42:00-06:00,21600,True,False,"['columns.py', 'models.py', 'columns.rst', 'models.rst', 'models.rst', 'test_polymorphism.py']",['ef1472b3303ad22c3dc1aad2a7d63c229eb5d061'],58,103,161,6,0.0,0.5,0.0
e9702534bca24af8163c508fc675b6d3634dc6d4,"Reorganize exceptions, centralize UnicodeMixin",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-11 15:44:28-06:00,21600,2015-02-11 15:44:28-06:00,21600,True,False,"['__init__.py', 'columns.py', 'connection.py', 'exceptions.py', 'functions.py', 'management.py', 'models.py', 'named.py', 'operators.py', 'query.py', 'statements.py', 'test_class_construction.py', 'test_polymorphism.py', 'test_datetime_queries.py', 'test_ifnotexists.py', 'test_transaction.py']",['4e348952e84d0d8c9488e8a5de6aec60cd97bbab'],88,65,153,16,,,
44c3b2c25192bcf9290660632cec502119a85726,"raise if getting cluster without setting up connection

Better error feedback if management functions called before connection
setup.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-11 15:52:50-06:00,21600,2015-02-11 15:52:50-06:00,21600,True,False,['connection.py'],['e9702534bca24af8163c508fc675b6d3634dc6d4'],0,2,2,1,1.0,1.0,1.0
f753c30c541e52acf5fcd55517e62da7c54bc36f,Expand cqlengine keyspace management tests to include new functions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-11 16:32:33-06:00,21600,2015-02-11 16:32:33-06:00,21600,True,False,"['__init__.py', 'test_management.py']",['44c3b2c25192bcf9290660632cec502119a85726'],16,45,61,2,0.0,1.0,1.0
192a959706da49a78c8ff28754cd750db9cf2beb,remove vacated cqlengine/exceptions module,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-11 16:35:06-06:00,21600,2015-02-11 16:35:06-06:00,21600,True,False,['exceptions.py'],['f753c30c541e52acf5fcd55517e62da7c54bc36f'],23,0,23,1,,,
ecb90de5456b3dff3ecc0864408cab435bc78dc0,Add install warning when cqlengine present,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-12 10:53:34-06:00,21600,2015-02-12 10:53:34-06:00,21600,True,False,['setup.py'],['192a959706da49a78c8ff28754cd750db9cf2beb'],0,14,14,1,,,
74fdfd76a83703022fb6553c22b9d8a5e7f3c3e8,ENVAR warning around cqlengine schema management functions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-12 11:44:26-06:00,21600,2015-02-12 11:44:26-06:00,21600,True,False,"['management.py', '__init__.py']",['ecb90de5456b3dff3ecc0864408cab435bc78dc0'],0,29,29,2,0.7777777777777778,0.0,0.7777777777777778
8f076e966a772f9e71f4b09f8375a63c5f548a92,Make sure column types with add'l init args are documented,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-12 15:11:49-06:00,21600,2015-02-12 15:11:49-06:00,21600,True,False,"['columns.py', 'columns.rst', 'conf.py', 'test_validation.py']",['74fdfd76a83703022fb6553c22b9d8a5e7f3c3e8'],34,24,58,4,1.0,1.0,1.0
7f03f079b9e03be4347d6ce15cc550b0eef9e3ca,Remove schema mgnt warning for all cqlengine tests,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-12 15:12:42-06:00,21600,2015-02-12 15:12:42-06:00,21600,True,False,"['__init__.py', '__init__.py']",['8f076e966a772f9e71f4b09f8375a63c5f548a92'],7,3,10,2,0.0,0.0,0.0
790374ede42634111d1c7a0fbf79f82195312145,"Add support for CASSANDRA-7660

This experimentally adds support for CASSANDRA-7660, which returns the
indexes of bind markers that correspond to partition key columns in
prepared statement response metadata.",Tyler Hobbs,tyler@datastax.com,Tyler Hobbs,tyler@datastax.com,2015-02-13 15:49:59-06:00,21600,2015-02-13 15:49:59-06:00,21600,True,False,"['cluster.py', 'protocol.py', 'query.py']",['077b876fdd38af097ef4bc1ea99c86d7f4a5376d'],26,56,82,3,0.0,0.0,0.0
08c2a043d99b7b41bd5fbc976cc288e81a94c1f7,"Add HostConnectionPool.open_connections prop

this property required when metrics enabled with protocol_version=3",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-18 17:00:44-06:00,21600,2015-02-18 17:00:44-06:00,21600,True,False,['pool.py'],['077b876fdd38af097ef4bc1ea99c86d7f4a5376d'],0,4,4,1,1.0,1.0,1.0
304a05beab8ce2c1917cedf53904ce69cc1a9ec1,"Join thread when stopping heartbeat, add short-circuits to loop

Fixes a reported shutdown issue with the thread, even though it's 'daemon =
True':

""Exception in thread Connection heartbeat (most likely raised during
interpreter shutdown):""",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-19 14:12:14-06:00,21600,2015-02-19 14:12:14-06:00,21600,True,False,['connection.py'],['08c2a043d99b7b41bd5fbc976cc288e81a94c1f7'],0,14,14,1,0.4,0.4,1.0
b428008219b4be7e177f4b2e854d98cad25589ab,Update unit tests to work with heartbeat short-circuit,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-19 14:46:03-06:00,21600,2015-02-19 14:46:03-06:00,21600,True,False,['test_connection.py'],['304a05beab8ce2c1917cedf53904ce69cc1a9ec1'],8,9,17,1,0.0,,1.0
89d07149aca05f679ce581585bfa5eaca09c1410,"cqlengine: format collection db_type on init, remove redundant
get_column_def",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-02-20 14:36:24-06:00,21600,2015-02-20 14:36:24-06:00,21600,True,False,['columns.py'],['7f03f079b9e03be4347d6ce15cc550b0eef9e3ca'],27,5,32,1,0.0,0.0,0.0
b7e5c6b999fbac9afb7435a912181565c4b45759,"Use utcfromttimestamp workaround in SimpleDateType

Also improve datetime_from_timesstamp perf by always using timedelta
math.
Always using timedelta math  also addresses the utcfromtimestamp rounding
differences noted in PYTHON-230.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-02 08:42:49-06:00,21600,2015-03-02 08:42:49-06:00,21600,True,False,['cqltypes.py'],['586720a886c778785a159a670c63f5aadb646d53'],6,6,12,1,0.0,0.0,0.0
ef72d2fa752fd8ca644678d0a8631ccbdf203feb,Removed unused members in cqlengine.AbstractQuerySet,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-02 13:01:18-06:00,21600,2015-03-02 13:01:18-06:00,21600,True,False,['query.py'],['89d07149aca05f679ce581585bfa5eaca09c1410'],7,0,7,1,0.4,1.0,0.0
ae568b4b7eb1f184d4a20ea4ecdc1e9b6f87c0e1,"Add User Definted Types to mapper.

First pass; requires tests, further documentation",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-03 13:02:35-06:00,21600,2015-03-03 13:02:35-06:00,21600,True,False,"['columns.py', 'connection.py', 'management.py', 'models.py', 'query.py', 'usertype.py', 'management.rst', 'usertype.rst', 'index.rst', 'faq.rst']",['ef72d2fa752fd8ca644678d0a8631ccbdf203feb'],18,343,361,10,0.620253164556962,0.620253164556962,0.5822784810126582
c7590c90622d2d2b2f74a620b57833c54ce54dce,Remove superfluous test after member cleanup in ef72d2f,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-03 14:21:55-06:00,21600,2015-03-03 14:21:55-06:00,21600,True,False,['test_queryset.py'],['ef72d2fa752fd8ca644678d0a8631ccbdf203feb'],17,0,17,1,0.0,0.0,0.0
b9d35045d806b59a09ab5adcc412675a1785b7e1,"Don't reverse lists in prepend context.

This rolls out workaround for a previous bug in Cassandra.
https://issues.apache.org/jira/browse/CASSANDRA-8733
If you rely on list prepend and are using this version of
the mapper with C* < [2.0.13|2.1.3], the prepended list will need to be
reversed in the application context.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-03 14:43:27-06:00,21600,2015-03-03 14:43:27-06:00,21600,True,False,"['statements.py', 'test_assignment_clauses.py']",['6930fb6f1d7858be0358425759bd88408352119c'],11,4,15,2,,,
20e0cd9025a5c069cf9b8eab6ddf978b93feed2a,"Make integration tests cleanup cluster/sessions

Fixes an issue where integration suites were timing out in later tests,
due to eariler tests leaking resources.

Root cause is PYTHON-135, which points out that cluster and session
objects do not clean up properly when passing from scope. Until that is
fixed, proper cleanup will avoid these leaks.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-04 12:10:44-06:00,21600,2015-03-04 12:10:44-06:00,21600,True,False,"['test_consistency.py', 'test_large_data.py', 'test_loadbalancingpolicies.py', 'test_cluster.py', 'test_concurrent.py', 'test_metadata.py', 'test_metrics.py', 'test_prepared_statements.py', 'test_query.py', 'test_query_paging.py', 'test_row_factories.py', 'test_types.py', 'test_udts.py']",['f3938d76e1671f1c17512ddacbb8e12e31c66f46'],54,145,199,13,0.4716981132075472,0.9622641509433962,0.9245283018867925
9e2e256ba34eae6d6c766cd39941030f0e0275e0,"Use cass type for key serlz when materializing map from DB

Addresses issue where key types with strings were not comparing in an
'encoding-agnostic' way (PYTHON-321).",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-05 17:01:46-06:00,21600,2015-03-05 17:01:46-06:00,21600,True,False,"['cqltypes.py', 'util.py']",['f7e014a1fb4d5edf91147ee3bff80b1c8510e875'],13,34,47,2,0.8571428571428571,1.0,0.0
2dba082da6f728c50ffc2b29fa4f2695495118cc,Make unit tests work with latest version of pypy,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-06 08:48:34-06:00,21600,2015-03-06 08:48:34-06:00,21600,True,False,"['test_policies.py', 'test_types.py']",['9e2e256ba34eae6d6c766cd39941030f0e0275e0'],4,6,10,2,0.0,0.0,1.0
8d40400beb1065d63c8ba846737065ea39cfc942,"Collect time functions in util, add uuid_from_time and min/max functions

PYTHON-99

Conflicts:
	cassandra/cqltypes.py
	cassandra/util.py",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-09 11:38:19-05:00,18000,2015-03-09 11:55:57-05:00,18000,True,False,"['cqltypes.py', 'util.py']",['f7e014a1fb4d5edf91147ee3bff80b1c8510e875'],19,146,165,2,0.45714285714285713,1.0,0.45714285714285713
d2f5335fdf7e0d5e43b3b960f921299ddfe4068a,cassandra.util doc update to include time functions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-09 11:58:19-05:00,18000,2015-03-09 11:58:19-05:00,18000,True,False,['util.rst'],['8d40400beb1065d63c8ba846737065ea39cfc942'],4,2,6,1,,,
2d5466f8a2cb384ec96abc1720c8418faa542cd3,Add Read and WriteFailure error classes,Tyler Hobbs,tylerhobbs@apache.org,Tyler Hobbs,tylerhobbs@apache.org,2015-03-09 16:58:58-05:00,18000,2015-03-09 16:58:58-05:00,18000,True,False,['protocol.py'],['f7e014a1fb4d5edf91147ee3bff80b1c8510e875'],0,29,29,1,1.0,1.0,1.0
56b8a1463c61e8f0859941b7ae62a37a55470a2d,Added WriteFailure and ReadFailure exceptions,Stefania Alborghetti,stefania.alborghetti@datastax.com,Stefania Alborghetti,stefania.alborghetti@datastax.com,2015-03-10 11:56:13+08:00,-28800,2015-03-10 11:56:13+08:00,-28800,True,False,"['__init__.py', 'protocol.py']",['2d5466f8a2cb384ec96abc1720c8418faa542cd3'],0,77,77,2,1.0,1.0,0.2
2662ec95971e64eb584bef06a0df0f09a95d6123,Add read support for CompositeType,Tyler Hobbs,tylerhobbs@apache.org,Tyler Hobbs,tylerhobbs@apache.org,2015-03-10 14:56:23-05:00,18000,2015-03-10 14:56:23-05:00,18000,True,False,"['cqltypes.py', 'test_types.py']",['f7e014a1fb4d5edf91147ee3bff80b1c8510e875'],0,37,37,2,1.0,1.0,0.6
253279e0c6017a55b5c926645006288b4369817f,"Review tweaks

PYTHON-231",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-12 14:48:50-05:00,18000,2015-03-12 14:48:50-05:00,18000,True,False,"['cqltypes.py', 'test_policies.py']",['2dba082da6f728c50ffc2b29fa4f2695495118cc'],5,6,11,2,,,
fae9abde7a6da4620cc8fd336623253b3d65c8e9,"Test DateType from timestamp rounding anomaly workaround

PYTHON-230",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-12 15:10:22-05:00,18000,2015-03-12 15:10:22-05:00,18000,True,False,['test_types.py'],['f7e014a1fb4d5edf91147ee3bff80b1c8510e875'],0,5,5,1,0.0,1.0,1.0
dd1b0ed60c29ca63dafc81ac7743dc887583c396,"Simplify uuid time scale float literal

PYTHON-99 peer review",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-13 13:36:50-05:00,18000,2015-03-13 13:36:50-05:00,18000,True,False,['util.py'],['d2f5335fdf7e0d5e43b3b960f921299ddfe4068a'],1,1,2,1,,,
dce4d17828b3a368172006a0946e2843993dace9,"Use polymorphism for OrderedMap type when key type is known

PYTHON-231 peer review",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-13 13:38:42-05:00,18000,2015-03-13 13:38:42-05:00,18000,True,False,"['cqltypes.py', 'util.py', 'test_marshalling.py']",['253279e0c6017a55b5c926645006288b4369817f'],29,25,54,3,1.0,1.0,1.0
4f3c77c970e10774243e7ad7baed2d41c06c4790,Introduce Date type to accomodate ranges outside datetime.[MIN|MAX}YEAR,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-13 15:02:31-05:00,18000,2015-03-13 15:02:31-05:00,18000,True,False,"['cqltypes.py', 'util.py', 'test_marshalling.py', 'test_types.py']",['33f30777128ffb314e321dba4fa522eeec18bdf2'],24,85,109,4,1.0,1.0,1.0
d2fe776106c46df7eeb38a6b0b898ec9bb9bf693,Expanded unit tests around cassandra.util.Date,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-16 10:46:13-05:00,18000,2015-03-16 10:46:13-05:00,18000,True,False,"['util.py', 'test_types.py']",['4f3c77c970e10774243e7ad7baed2d41c06c4790'],19,52,71,2,0.0,1.0,1.0
41175831d1671704e332d109999f39ce988318b0,grammar correction,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-16 10:51:55-05:00,18000,2015-03-16 10:51:55-05:00,18000,True,False,['util.py'],['d2fe776106c46df7eeb38a6b0b898ec9bb9bf693'],2,2,4,1,,,
760b1958199e50b8ec2971e9c5bc207031e40afb,Use repr for inner types in ...util.OrderedMap.__str__,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-16 11:55:52-05:00,18000,2015-03-16 11:55:52-05:00,18000,True,False,['util.py'],['6d07f89831cbff287328c71a0c197d7a36338046'],1,1,2,1,,,
46b2474728f219b61f155828880f7a7c8bda72f5,"Test OrderedMapSerializedKey

PYTHON-231",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-16 13:17:50-05:00,18000,2015-03-16 13:17:50-05:00,18000,True,False,['test_orderedmap.py'],['760b1958199e50b8ec2971e9c5bc207031e40afb'],40,76,116,1,0.3333333333333333,1.0,1.0
8409730775501fb733e435adc20d9a2607fadc16,Change arg order in uuid_from_time to match uuid.uuid1(),Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-16 14:38:52-05:00,18000,2015-03-16 15:13:21-05:00,18000,True,False,['util.py'],['46b2474728f219b61f155828880f7a7c8bda72f5'],9,8,17,1,1.0,0.0,1.0
66791fd9f6e222773a51d2430d086ea5cead945c,Bounds checking for uuid clock_seq,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-16 15:14:19-05:00,18000,2015-03-16 15:14:19-05:00,18000,True,False,['util.py'],['8409730775501fb733e435adc20d9a2607fadc16'],0,4,4,1,0.0,1.0,0.0
ba5db699ca39b1b7a9a05646fc58d7c30a2ad3f4,"time utility function tests

PYTHON-99",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 08:19:56-05:00,18000,2015-03-17 08:19:56-05:00,18000,True,False,['test_time_util.py'],['66791fd9f6e222773a51d2430d086ea5cead945c'],0,119,119,1,0.4727272727272727,1.0,1.0
7ad219962d6978f32b93c0d6282887ad8b1459cd,Better coverage for util.Time,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 08:31:29-05:00,18000,2015-03-17 08:31:29-05:00,18000,True,False,['test_types.py'],['ba5db699ca39b1b7a9a05646fc58d7c30a2ad3f4'],0,15,15,1,0.0,1.0,1.0
af15b8aa0f42b22093df08d1e395da9456e99a91,Make time uuid tests work in Python 3,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 09:16:59-05:00,18000,2015-03-17 09:16:59-05:00,18000,True,False,['test_time_util.py'],['7ad219962d6978f32b93c0d6282887ad8b1459cd'],7,6,13,1,0.0,0.0,0.0
d4b462e01bdff8b8cbfc6f07bed3e23b36798a7f,Make time comparisons AlmostEqual to account for differing precision,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 09:41:50-05:00,18000,2015-03-17 09:41:50-05:00,18000,True,False,['test_time_util.py'],['af15b8aa0f42b22093df08d1e395da9456e99a91'],6,8,14,1,,,
bde53b908c1e0c4b7a11716f2e6fa97516478c8f,remove debug print statement,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 10:57:28-05:00,18000,2015-03-17 10:57:28-05:00,18000,True,False,['usertype.py'],['50a314da856e804e71fa7c2a8af06c95e19ef272'],1,0,1,1,0.0,0.0,0.0
3fa3f8daaf86d4f63098dd27e58cb204c3f292a8,"Update imports for moved exceptions, in cqlengine tests",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 11:16:19-05:00,18000,2015-03-17 11:16:19-05:00,18000,True,False,"['test_compaction_settings.py', 'test_management.py', 'test_model_io.py', 'test_updates.py', 'test_updates.py']",['bde53b908c1e0c4b7a11716f2e6fa97516478c8f'],41,31,72,5,0.0,0.0,0.0
fa49e9e26ea0e157051d62ee0c393e2b7c8193af,assertEquals --> assertEqual in cqlengine (deprecated),Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 11:22:27-05:00,18000,2015-03-17 11:22:27-05:00,18000,True,False,"['test_class_construction.py', 'test_model_io.py', 'test_value_lists.py', 'test_queryoperators.py', 'test_ifnotexists.py']",['3fa3f8daaf86d4f63098dd27e58cb204c3f292a8'],26,26,52,5,,,
1df92a9ea5a6544840462717b9cf65dd0b196de4,assertNotEquals --> assertNotEqual in cqlengine (deprecated),Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 11:24:46-05:00,18000,2015-03-17 11:24:46-05:00,18000,True,False,['test_class_construction.py'],['fa49e9e26ea0e157051d62ee0c393e2b7c8193af'],1,1,2,1,,,
527df352e530e76b85a6f51544c9ef074904d1fd,log.warn --> log.warning in cqlengine (deprecated),Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 12:01:59-05:00,18000,2015-03-17 12:01:59-05:00,18000,True,False,"['columns.py', 'connection.py', 'management.py', 'models.py']",['1df92a9ea5a6544840462717b9cf65dd0b196de4'],8,8,16,4,,,
addbf10547a82628c6c641050a225953624feca3,log.warn --> log.warning in cqltypes.py (deprecated),Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 12:03:28-05:00,18000,2015-03-17 12:03:28-05:00,18000,True,False,['cqltypes.py'],['527df352e530e76b85a6f51544c9ef074904d1fd'],2,2,4,1,,,
35f1fbbe39012e42804bca20f45dd9e973bd2baa,test init: select from system.local instead of setting keyspace,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 12:04:34-05:00,18000,2015-03-17 12:04:34-05:00,18000,True,False,['__init__.py'],['addbf10547a82628c6c641050a225953624feca3'],2,1,3,1,0.0,0.0,0.0
0f6e2bc408564829121f7302211f70af3a495d67,assertDictContainsSubset is deprecated,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 12:04:39-05:00,18000,2015-03-17 12:04:39-05:00,18000,True,False,['test_management.py'],['35f1fbbe39012e42804bca20f45dd9e973bd2baa'],2,5,7,1,0.0,0.0,1.0
98f466bdad70e4a376aaa6e608488dfd76f229c0,Add tests for inherited model 'discriminator' attributes,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 13:08:15-05:00,18000,2015-03-17 13:08:15-05:00,18000,True,False,['test_polymorphism.py'],['0f6e2bc408564829121f7302211f70af3a495d67'],3,230,233,1,1.0,1.0,1.0
b39daa128e3fe9d84c8c8cfc11f82c7524ae4a34,Add warning when list prepend is used.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-17 16:03:20-05:00,18000,2015-03-17 16:03:20-05:00,18000,True,False,['statements.py'],['98f466bdad70e4a376aaa6e608488dfd76f229c0'],0,9,9,1,0.0,1.0,1.0
e1dbefcdac297cc6112a47443a40b4d6eb7bd75f,"Raise exception for models defining discriminator value, but no column",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-18 09:20:45-05:00,18000,2015-03-18 09:20:45-05:00,18000,True,False,"['models.py', 'test_polymorphism.py']",['b39daa128e3fe9d84c8c8cfc11f82c7524ae4a34'],0,13,13,2,0.8,0.8,0.8
2bbe76e59b2c17e56b87d64b645f69cba0c81f81,Add an upgrade guide for cqlengine,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-18 11:13:42-05:00,18000,2015-03-18 11:13:42-05:00,18000,True,False,"['upgrade_guide.rst', 'object_mapper.rst']",['e1dbefcdac297cc6112a47443a40b4d6eb7bd75f'],0,140,140,2,,,
28b2fb9fa2dca01f68939f013d23cdc374cfbdef,Update changelog,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-18 15:27:21-05:00,18000,2015-03-18 15:27:21-05:00,18000,True,False,['CHANGELOG.rst'],['2bbe76e59b2c17e56b87d64b645f69cba0c81f81'],0,20,20,1,,,
ff17f4d146206cac5b299f58771c438f1f62c91f,Merge cqlengine travis config,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-18 16:30:12-05:00,18000,2015-03-18 16:30:12-05:00,18000,True,False,['.travis.yml'],['28b2fb9fa2dca01f68939f013d23cdc374cfbdef'],37,21,58,1,,,
30495d3c783af464dc37b231ececada29eeb7406,Change C* version in travis matrix to avoid integration test conflict,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-19 10:57:52-05:00,18000,2015-03-19 10:57:52-05:00,18000,True,False,['.travis.yml'],['ff17f4d146206cac5b299f58771c438f1f62c91f'],9,9,18,1,,,
08adcc76f3ad5fb250820db580a7e42acf217975,protocol v1 for test get_server_ver because we don't know yet,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-19 11:01:35-05:00,18000,2015-03-19 11:01:35-05:00,18000,True,False,['__init__.py'],['30495d3c783af464dc37b231ececada29eeb7406'],1,1,2,1,,,
fa2e4c77e9d5719e801730a854264d914a7a71d5,Don't try to sync table with static if test will be skipped,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-19 11:01:39-05:00,18000,2015-03-19 11:01:39-05:00,18000,True,False,['test_static_column.py'],['08adcc76f3ad5fb250820db580a7e42acf217975'],2,6,8,1,1.0,1.0,1.0
82df9cf07522c699bd79b2b4119c8a2abf8f49f6,"Conditional test around C* list prepend bug, which is not in 1.2.x",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-19 11:56:27-05:00,18000,2015-03-19 11:56:27-05:00,18000,True,False,"['__init__.py', 'test_container_columns.py', 'test_updates.py']",['fa2e4c77e9d5719e801730a854264d914a7a71d5'],12,28,40,3,1.0,1.0,1.0
aa74a4a81c039c02fad59a52a1219996238ddad7,add str function to UserType,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-19 15:02:58-05:00,18000,2015-03-19 15:02:58-05:00,18000,True,False,['usertype.py'],['82df9cf07522c699bd79b2b4119c8a2abf8f49f6'],5,3,8,1,1.0,1.0,1.0
dcb94500584a318f046cee71d7ab9fc8439c749e,explicit type refresh on sync for proto v2,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-19 15:03:30-05:00,18000,2015-03-19 15:03:30-05:00,18000,True,False,['management.py'],['aa74a4a81c039c02fad59a52a1219996238ddad7'],0,1,1,1,0.0,0.0,0.0
e49c57857cf9b43b6a7fc63becadd131c222e6ee,don't blow up if we are connected but type is not sync'd,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-19 15:04:15-05:00,18000,2015-03-19 15:04:15-05:00,18000,True,False,['connection.py'],['dcb94500584a318f046cee71d7ab9fc8439c749e'],1,4,5,1,1.0,1.0,0.0
4cd60dcadb54fb5e8896234cca40f6e9953da82e,cqle: add documentation for User Defined Type models,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-19 16:51:06-05:00,18000,2015-03-19 16:51:06-05:00,18000,True,False,"['columns.py', 'usertype.py', 'columns.rst', 'models.rst']",['e49c57857cf9b43b6a7fc63becadd131c222e6ee'],1,67,68,4,,,
dafddfb4cc13d6fa049b3f6c84f7ec420fba5e3e,"cqle: add UDTValueManager to detect sub-field updatees

UDTs are still updated en masse when changed. This aligns
with concept of 'frozen' types.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-20 09:30:02-05:00,18000,2015-03-20 09:30:02-05:00,18000,True,False,"['columns.py', 'usertype.py']",['4cd60dcadb54fb5e8896234cca40f6e9953da82e'],0,19,19,2,1.0,1.0,1.0
9cb1d7efc2e3d4031c86811246bcf4d4a01b2208,Don't require ccm for USE_CASS_EXTERNAL,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-20 11:37:12-05:00,18000,2015-03-20 11:37:12-05:00,18000,True,False,['__init__.py'],['dafddfb4cc13d6fa049b3f6c84f7ec420fba5e3e'],5,6,11,1,,,
8b7beb3966156857eb94b0dd0f65e731300311e0,"Don't require ccm for USE_CASS_EXTERNAL, for real",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-20 12:11:23-05:00,18000,2015-03-20 12:11:23-05:00,18000,True,False,['__init__.py'],['9cb1d7efc2e3d4031c86811246bcf4d4a01b2208'],1,1,2,1,,,
8c98eb22d022f6385281edfd8d4836ea0ee7e59a,cqle: repr for Model prints all cols. str prints keys,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-20 14:55:52-05:00,18000,2015-03-20 14:55:52-05:00,18000,True,False,['models.py'],['8b7beb3966156857eb94b0dd0f65e731300311e0'],2,7,9,1,1.0,1.0,1.0
79bd4fac173297c970d921e619569c96004c84b5,cqle: add dict access sugar to UserType,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-20 15:33:30-05:00,18000,2015-03-20 15:33:30-05:00,18000,True,False,['usertype.py'],['8c98eb22d022f6385281edfd8d4836ea0ee7e59a'],1,37,38,1,1.0,1.0,0.7777777777777778
4f7db5cd55cf4e3174628a2846bbaf3ecf2acf60,UDT cqlengine integration tests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-03-20 14:32:01-07:00,25200,2015-03-20 14:32:01-07:00,25200,True,False,['test_udts.py'],['79bd4fac173297c970d921e619569c96004c84b5'],0,248,248,1,0.047337278106508875,1.0,1.0
7542c896021e933da41b1ba2b7bc74b11108196e,Avoid version query: Hack to make tests.integration load in python3,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-20 16:52:17-05:00,18000,2015-03-20 16:52:17-05:00,18000,True,False,['__init__.py'],['79bd4fac173297c970d921e619569c96004c84b5'],3,15,18,1,,,
95b3a8ad3d8e476293de4a33b4725da9b6f1fc62,don't require UDT fields when CQL encoding registered type,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-20 17:50:10-05:00,18000,2015-03-20 17:50:10-05:00,18000,True,False,['cluster.py'],['4f7db5cd55cf4e3174628a2846bbaf3ecf2acf60'],1,1,2,1,,,
067b2c42411a63ec63dd226cee9c1b7ad9ea859d,cqle: remove pytz as dependency of test_udts,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-23 09:22:16-05:00,18000,2015-03-23 09:22:16-05:00,18000,True,False,['test_udts.py'],['df68ebb4fdf3650313292a120cd86d19c7508876'],3,2,5,1,,,
e4c4c675f6b16b7007586aeb716e2e69148b42e3,Evict cached UDT class when new type is registered.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-23 10:52:40-05:00,18000,2015-03-23 10:52:40-05:00,18000,True,False,"['cluster.py', 'cqltypes.py']",['067b2c42411a63ec63dd226cee9c1b7ad9ea859d'],0,11,11,2,1.0,1.0,0.0
6a49d9dcd03f5378ba09819389a87bef067b1142,CQL encode floats with repr to preserve precision.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-23 10:53:14-05:00,18000,2015-03-23 10:53:14-05:00,18000,True,False,['encoder.py'],['e4c4c675f6b16b7007586aeb716e2e69148b42e3'],1,7,8,1,1.0,1.0,1.0
bb4f050c46b694a212531c80d2ad5395765b3e41,Test float precision in CQL encoding,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-23 11:07:36-05:00,18000,2015-03-23 11:07:36-05:00,18000,True,False,['test_parameter_binding.py'],['6a49d9dcd03f5378ba09819389a87bef067b1142'],0,4,4,1,1.0,1.0,1.0
becb61b380042d48d70ed31506266952d78f4c27,changelog update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-23 11:08:59-05:00,18000,2015-03-23 11:08:59-05:00,18000,True,False,['CHANGELOG.rst'],['bb4f050c46b694a212531c80d2ad5395765b3e41'],0,1,1,1,,,
e708babb48fbad7d564289fe559cb632fab6034e,cqle: skip UDT tests for earlier versions of C*,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-23 12:05:32-05:00,18000,2015-03-23 12:05:32-05:00,18000,True,False,['test_udts.py'],['becb61b380042d48d70ed31506266952d78f4c27'],0,4,4,1,,,
0e55a218eb5ba8ee79486561f8b8eded138d08d0,"cqle: defer get_server_version until UserDefinedTypeTests class setup

I don't know why, but the select query hangs when run inside of
nosetests for python 3.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-23 14:30:26-05:00,18000,2015-03-23 14:30:26-05:00,18000,True,False,['test_udts.py'],['e708babb48fbad7d564289fe559cb632fab6034e'],2,6,8,1,1.0,1.0,1.0
f272723277c62ffd80b9485fb3b92244b1f53c6c,Update mapper doc link in README,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-23 14:31:28-05:00,18000,2015-03-23 14:31:28-05:00,18000,True,False,['README.rst'],['0e55a218eb5ba8ee79486561f8b8eded138d08d0'],1,1,2,1,,,
cea17aaf1fe364c8b77e85e7d852bee047cef19d,remove obsolete cqlengine tests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-03-23 15:23:34-07:00,25200,2015-03-23 15:23:34-07:00,25200,True,False,"['test_container_columns.py', 'test_class_construction.py', 'test_validation.py', 'test_assignment_operators.py', 'test_updates.py', 'test_quoter.py']",['f272723277c62ffd80b9485fb3b92244b1f53c6c'],105,10,115,6,1.0,1.0,1.0
1c57b2b32a8fc58ac9b355d8f8679bb77d931e97,cqle: remove outdated comment about test failing,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-23 17:31:36-05:00,18000,2015-03-23 17:31:36-05:00,18000,True,False,['test_updates.py'],['cea17aaf1fe364c8b77e85e7d852bee047cef19d'],4,0,4,1,,,
90bf4a3a19fdd7af2805b702fd5d4de84f328c9a,"Add new date, time to CQL literal encoding table.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-24 16:04:21-05:00,18000,2015-03-24 16:04:21-05:00,18000,True,False,['getting_started.rst'],['1c57b2b32a8fc58ac9b355d8f8679bb77d931e97'],2,5,7,1,,,
064dc0b652730716738f9f0541e1cae362ea2108,"Expand code doc for util.Date, util.Time",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-24 16:04:39-05:00,18000,2015-03-24 16:04:39-05:00,18000,True,False,['util.py'],['90bf4a3a19fdd7af2805b702fd5d4de84f328c9a'],1,34,35,1,,,
56be4cbac28354a9357e01d2ff09c9460dc4c980,release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-30 14:29:26-05:00,18000,2015-03-30 14:29:26-05:00,18000,True,False,['__init__.py'],['064dc0b652730716738f9f0541e1cae362ea2108'],1,1,2,1,,,
d15dd85b94f8899ee55d6be3bffaee3ebfe70443,post-release version update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-03-30 15:04:12-05:00,18000,2015-03-30 15:04:12-05:00,18000,True,False,['__init__.py'],['56be4cbac28354a9357e01d2ff09c9460dc4c980'],1,1,2,1,,,
7a6e72d79177ed3ae8a551bca488dacdf098abb9,CASSANDRA-7814: Added indexes to table and ks metadata and export_as_string() to IndexMetadata,Stefania Alborghetti,stefania.alborghetti@datastax.com,Stefania Alborghetti,stefania.alborghetti@datastax.com,2015-03-20 11:35:13+08:00,-28800,2015-04-01 08:33:43+08:00,-28800,True,False,['metadata.py'],['d15dd85b94f8899ee55d6be3bffaee3ebfe70443'],4,39,43,1,0.16666666666666666,1.0,0.1111111111111111
5dcc569c98a75c1746ea4adcb8c338e7c984540c,"Better documentation around timeouts and retries

PYTHON-74",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-01 11:12:42-05:00,18000,2015-04-01 11:12:42-05:00,18000,True,False,"['cluster.py', 'policies.py']",['d15dd85b94f8899ee55d6be3bffaee3ebfe70443'],9,25,34,2,,,
521ab1a116f25bbb34a33b278c897eec03018454,refactored MetricsTests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-02 20:49:48-07:00,25200,2015-04-02 20:49:48-07:00,25200,True,False,['test_metrics.py'],['5dcc569c98a75c1746ea4adcb8c338e7c984540c'],61,64,125,1,1.0,0.0,0.0
73ec60f606d793200b360bcac314aecaec3bf9b9,Refactored TypeTests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-07 13:27:16-07:00,25200,2015-04-07 13:27:16-07:00,25200,True,False,"['datatype_utils.py', 'test_types.py']",['521ab1a116f25bbb34a33b278c897eec03018454'],391,369,760,2,0.8133333333333334,0.25333333333333335,0.06666666666666667
e2dcc133bdf658b35e3a3ed922b886fc76952358,Refactored UDTTests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-07 17:02:53-07:00,25200,2015-04-07 17:02:53-07:00,25200,True,False,['test_udts.py'],['73ec60f606d793200b360bcac314aecaec3bf9b9'],234,238,472,1,1.0,1.0,0.0
e89a23a91b0c5de6b84c75884aaf61b65f68d6c9,add pure-sasl as a test-requirement for SaslAuthenticatorTests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-07 17:20:09-07:00,25200,2015-04-07 17:20:09-07:00,25200,True,False,['test-requirements.txt'],['e2dcc133bdf658b35e3a3ed922b886fc76952358'],0,1,1,1,,,
79c89ed67c60aed3c6e2ff67fd8469eb93873fc6,Add C* 3.0/v4 to integration test default protocol,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-08 11:26:33-05:00,18000,2015-04-08 11:26:33-05:00,18000,True,False,['__init__.py'],['3ab8b992699c0331c2b9d60ddf41f1d07caa7d79'],1,3,4,1,,,
37677993faee7ec4c31da651cf67b13a7b34db03,Add a test for prepared statements with no column meta,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-08 12:42:51-05:00,18000,2015-04-08 12:42:51-05:00,18000,True,False,['test_prepared_statements.py'],['79c89ed67c60aed3c6e2ff67fd8469eb93873fc6'],0,25,25,1,0.0,1.0,1.0
5dfc8b688d22d6fd8c309aee8e253947f3f667db,Change R/W failure exception base to CoordinationFailure,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-08 15:30:49-05:00,18000,2015-04-08 15:30:49-05:00,18000,True,False,['__init__.py'],['aebe78f51761d47e61b52184d15c787e75508d2d'],8,8,16,1,,,
275a2663aa9e466b517729324d32765d17eae1bd,Add FunctionFailure error message and exception,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-08 15:31:40-05:00,18000,2015-04-08 15:31:40-05:00,18000,True,False,"['__init__.py', 'protocol.py']",['5dfc8b688d22d6fd8c309aee8e253947f3f667db'],1,45,46,2,1.0,1.0,0.6153846153846154
d5626750b184047a9f2f50465fd6edbb3a1b77cc,Add new request exceptions to docs,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-08 16:47:56-05:00,18000,2015-04-08 16:47:56-05:00,18000,True,False,"['__init__.py', 'cassandra.rst']",['275a2663aa9e466b517729324d32765d17eae1bd'],1,10,11,2,,,
4136a42601ce453de51862ac9368b84e05b95c98,Populate QueryTrace.client for C* 3.0+,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-09 11:58:52-05:00,18000,2015-04-09 11:58:52-05:00,18000,True,False,['query.py'],['37677993faee7ec4c31da651cf67b13a7b34db03'],0,9,9,1,0.0,0.0,1.0
c381fa0f04dbeb9ac389fa017bac8d9cc2ded0be,"Make query use time uuid function from util

previous entry point deprecated",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-09 12:06:18-05:00,18000,2015-04-09 12:06:18-05:00,18000,True,False,['query.py'],['5dcc569c98a75c1746ea4adcb8c338e7c984540c'],1,1,2,1,,,
96d4a485ada62247796857467cbdf7db6735d9a0,Retrive UDF metadata,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-09 16:40:53-05:00,18000,2015-04-09 16:40:53-05:00,18000,True,False,"['cluster.py', 'metadata.py']",['37677993faee7ec4c31da651cf67b13a7b34db03'],4,132,136,2,0.6530612244897959,0.6530612244897959,0.2857142857142857
6b509718039635be9b8d3f4b3da76b4d540bda15,"Handle function schema_change events; basic tests

Possibly still some server-side issues to iron out",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-10 14:20:54-05:00,18000,2015-04-10 14:20:54-05:00,18000,True,False,"['cluster.py', 'metadata.py', 'protocol.py', 'test_metadata.py']",['96d4a485ada62247796857467cbdf7db6735d9a0'],14,113,127,4,0.5846153846153846,0.8769230769230769,0.6307692307692307
1e420158a9dd6124f449205a3fe9424b86076288,improve and expond function metadata tests,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-10 16:19:24-05:00,18000,2015-04-10 16:19:24-05:00,18000,True,False,['test_metadata.py'],['6b509718039635be9b8d3f4b3da76b4d540bda15'],30,70,100,1,1.0,1.0,0.75
fd9df7bd58f68b6f05dd85d1d0fcad090890af75,commit to called_on_null_input schema for CASSANDRA-8374,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-10 16:20:59-05:00,18000,2015-04-10 16:20:59-05:00,18000,True,False,['metadata.py'],['1e420158a9dd6124f449205a3fe9424b86076288'],3,7,10,1,0.0,1.0,1.0
527c6c05bca436c6f84651a333872e5cf5ea5c8d,Handle overloaded user functions with differing type signatures,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-13 14:19:37-05:00,18000,2015-04-13 14:19:37-05:00,18000,True,False,"['__init__.py', 'cluster.py', 'metadata.py', 'protocol.py']",['fd9df7bd58f68b6f05dd85d1d0fcad090890af75'],17,51,68,4,0.0,0.9230769230769231,0.46153846153846156
d2a0931c7db658d590030361f1887e61d510d3fb,"Finalize user function meta integration tests

- handle signatures
- new signature overload test
- proper called_on_null regex",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-13 14:22:05-05:00,18000,2015-04-13 14:22:05-05:00,18000,True,False,['test_metadata.py'],['527c6c05bca436c6f84651a333872e5cf5ea5c8d'],19,37,56,1,1.0,1.0,1.0
446a10687d0ef5b2b30482e3c37d57cf76b3a752,User function API docs,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-13 15:12:48-05:00,18000,2015-04-13 15:26:05-05:00,18000,True,False,"['__init__.py', 'cluster.py', 'cassandra.rst']",['d2a0931c7db658d590030361f1887e61d510d3fb'],31,61,92,3,1.0,0.25,0.0
bd51fb978663cee3ec77295dad9ca3b233a69564,Add meta handling for AGGREGATE,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-14 16:51:38-05:00,18000,2015-04-14 16:51:38-05:00,18000,True,False,"['__init__.py', 'cluster.py', 'metadata.py', 'protocol.py']",['446a10687d0ef5b2b30482e3c37d57cf76b3a752'],47,223,270,4,0.4,0.4,0.25333333333333335
a0482216e8df887d3aa1276703cd3d87239f8148,Doc update for function and aggregate metadata,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-14 16:52:21-05:00,18000,2015-04-14 16:52:21-05:00,18000,True,False,"['cassandra.rst', 'metadata.rst']",['bd51fb978663cee3ec77295dad9ca3b233a69564'],0,14,14,2,,,
cf486b48ce4cae7716d4347d3d171447f40ff6ad,fixed typo,Anthony Cervantes,anthony.cervantes@rackspace.com,Anthony Cervantes,anthony.cervantes@rackspace.com,2015-04-14 19:08:41-05:00,18000,2015-04-14 19:08:41-05:00,18000,True,False,['models.py'],['c381fa0f04dbeb9ac389fa017bac8d9cc2ded0be'],1,1,2,1,,,
37eb549b06a2bbd1f42ca26353a5f83a162c4109,Fix class attribute name.,Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2015-04-15 16:33:06+02:00,-7200,2015-04-15 16:33:06+02:00,-7200,True,False,['upgrade_guide.rst'],['f99a1abe51f0b969c963c0f8a3c960b17bd167e5'],1,1,2,1,,,
e5943882f2b99b920bbbff2d06920b01e09354bb,Remove trailing spaces.,Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2015-04-15 16:33:17+02:00,-7200,2015-04-15 16:33:17+02:00,-7200,True,False,['upgrade_guide.rst'],['37eb549b06a2bbd1f42ca26353a5f83a162c4109'],4,4,8,1,,,
3ab95f0adf09ff2ebcbb37271ca28ac418217aa2,"Add OrderedMapSerializedKey to cql encoder mapping

This is to correctly encode values that are originally returned from a
query.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-16 09:23:45-05:00,18000,2015-04-16 09:23:45-05:00,18000,True,False,['encoder.py'],['a0482216e8df887d3aa1276703cd3d87239f8148'],1,3,4,1,0.0,1.0,1.0
e17c0fe2ee09f300141bb5d7d323e61e88c89c59,"Reorder aggregate args to match grammar order, not table column order.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-16 09:25:55-05:00,18000,2015-04-16 09:25:55-05:00,18000,True,False,['metadata.py'],['3ab95f0adf09ff2ebcbb37271ca28ac418217aa2'],8,8,16,1,,,
5e5deb17419e4eb3fdefe490c765e536c66f69a8,Aggregate metadata integration tests,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-16 09:46:54-05:00,18000,2015-04-16 09:46:54-05:00,18000,True,False,"['cluster.py', 'test_metadata.py']",['e17c0fe2ee09f300141bb5d7d323e61e88c89c59'],27,199,226,2,0.32592592592592595,0.8296296296296296,0.8888888888888888
51d0a53c4c05696dc3dba2e562b1ea63ada69e88,Remove link to disabled cqlengine issues,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-16 10:37:32-05:00,18000,2015-04-16 10:37:32-05:00,18000,True,False,['third_party.rst'],['d68ccc727f6a7e77f8067c9bdb69c1e28d456a92'],3,0,3,1,,,
f5d5f905e7cb7db97b4c06cbd314728c2acf410b,Removed unused parameters from PreparedStatement init,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-16 15:34:42-05:00,18000,2015-04-16 15:34:42-05:00,18000,True,False,"['query.py', 'test_parameter_binding.py']",['37677993faee7ec4c31da651cf67b13a7b34db03'],12,6,18,2,0.16666666666666666,0.0,0.8333333333333334
8772e753cdf06a49822a9cf0f9a3819faf7f890b,Don't run collection index tests on C* < 2.1,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-16 14:55:26-07:00,25200,2015-04-16 14:55:26-07:00,25200,True,False,['test_metadata.py'],['9fc5db1c98f84a9b4e115b5b579af6cbe0fa2715'],37,9,46,1,0.0,0.0,0.0
41d9394c077dccba4146d334b675a22fd4a682df,Don't change blob params for assertion in C* 1.2,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-16 15:25:14-07:00,25200,2015-04-16 15:25:14-07:00,25200,True,False,['test_types.py'],['8772e753cdf06a49822a9cf0f9a3819faf7f890b'],7,9,16,1,0.0,0.0,1.0
aa2be65810e0aa2675e760df83296a366fcc094b,Remove operation timeouts for write timeout metrics test,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-16 15:41:58-07:00,25200,2015-04-16 15:41:58-07:00,25200,True,False,['test_metrics.py'],['41d9394c077dccba4146d334b675a22fd4a682df'],1,1,2,1,,,
b2514a898a05b93a9085ea7c7528e5a425b85c86,Give extra time for auth setup on C* 1.2 tests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-16 17:53:28-07:00,25200,2015-04-16 17:53:28-07:00,25200,True,False,['test_authentication.py'],['aa2be65810e0aa2675e760df83296a366fcc094b'],1,1,2,1,,,
80e952b298cc26ff3199e320b7d97626eff1f5e9,"Custom payloads for protocol v4

PYTHON-280",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-17 10:22:37-05:00,18000,2015-04-17 15:46:38-05:00,18000,True,False,"['CHANGELOG.rst', 'auth.py', 'cluster.py', 'protocol.py', 'query.py']",['f5d5f905e7cb7db97b4c06cbd314728c2acf410b'],21,128,149,5,0.4339622641509434,0.0,0.2830188679245283
21ad7ad679d1e6be3e2cd0701881e25ae74af505,"Fixed IPv6 tests, and streamlined cluster removal",Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-17 14:34:21-07:00,25200,2015-04-17 14:34:21-07:00,25200,True,False,['__init__.py'],['7672b379066f4248bdab968ba76665683420e7cf'],4,10,14,1,0.0,0.0,0.6
f4191903b7e85e82849c20401d5e776bf45d2a9e,Docs for custom_payload,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-17 16:51:52-05:00,18000,2015-04-17 16:51:52-05:00,18000,True,False,"['cluster.py', 'query.py', 'index.rst']",['80e952b298cc26ff3199e320b7d97626eff1f5e9'],15,14,29,3,,,
567f9b0216f51c9e80ea7d8ec5af96ba6acf1850,"Fix variable rename bug

Peer reveiw input",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-20 10:08:20-05:00,18000,2015-04-20 10:08:20-05:00,18000,True,False,['metadata.py'],['5e5deb17419e4eb3fdefe490c765e536c66f69a8'],1,1,2,1,,,
2c062213fde00a0c30b3dcbddd2e4dea6d7c210e,Add the missing protocol doc file,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-20 14:22:09-05:00,18000,2015-04-20 14:22:09-05:00,18000,True,False,['protocol.rst'],['f4191903b7e85e82849c20401d5e776bf45d2a9e'],0,11,11,1,,,
35c6ce5365345571832028d5bdb97efd1a4a0435,Refactor redundant Connection factory methods to base,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-20 15:58:44-05:00,18000,2015-04-20 16:26:49-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'eventletreactor.py', 'geventreactor.py', 'libevreactor.py', 'twistedreactor.py']",['c10f8f87124ab27b1491279ca2b1e27c1b09ebdc'],70,18,88,6,0.0,0.0,1.0
833feeb9a06c00fb5afb1f80d6880799a5ec451f,"Deprecate cqlengine.Float(double_precision=True)

Overload deprecated in favor of distinct Float, Double types

PYTHON-246",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-20 15:31:48-05:00,18000,2015-04-20 16:50:33-05:00,18000,True,False,"['columns.py', 'columns.rst', 'test_value_io.py', 'test_udts.py']",['c10f8f87124ab27b1491279ca2b1e27c1b09ebdc'],22,69,91,4,1.0,1.0,0.5
67eaa36776018e453042ce81f9c3645235fd9ca8,"Catch OperationTimedOut exception, removed sleeps",Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-20 16:41:47-07:00,25200,2015-04-20 16:41:47-07:00,25200,True,False,"['test_consistency.py', 'test_loadbalancingpolicies.py', 'utils.py']",['c10f8f87124ab27b1491279ca2b1e27c1b09ebdc'],24,40,64,3,0.0,0.17647058823529413,0.0
290334be53dd660083878871c97ad313915969ee,typo fix to enable TestCodeCoverage,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-20 17:05:51-07:00,25200,2015-04-20 17:05:51-07:00,25200,True,False,['test_metadata.py'],['ac9340c2673a7cf919002eb12ef44d3a572d22b9'],2,2,4,1,,,
b0f130b1c903cb600afd09ff994f9a9db4f01a4d,add twisted as a test dependency,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-20 17:24:24-07:00,25200,2015-04-20 17:24:24-07:00,25200,True,False,['test-requirements.txt'],['290334be53dd660083878871c97ad313915969ee'],0,1,1,1,,,
86436847aadabd3efd09d863ff76df8438876a83,catch OperationTimedOut in consistency tests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-20 18:36:09-07:00,25200,2015-04-20 18:36:09-07:00,25200,True,False,"['test_consistency.py', 'utils.py']",['037cfce19ce9c4d5e0f070fe68fec65a4d444ab4'],4,13,17,2,1.0,1.0,0.0
7b15fae5c80093ae479c3a04aaa8db2da3d45f1d,CASSANDRA-7814: code review comments,Stefania Alborghetti,stefania.alborghetti@datastax.com,Stefania Alborghetti,stefania.alborghetti@datastax.com,2015-04-21 09:46:52+08:00,-28800,2015-04-21 09:46:52+08:00,-28800,True,False,['metadata.py'],['7a6e72d79177ed3ae8a551bca488dacdf098abb9'],21,17,38,1,1.0,0.3333333333333333,1.0
86944d70868522803508343c52ebc45412e9dd07,"Updates to index metadata indexes.

Make indexes follow table alter
Make keyspace meta clear indexes on table drop
Add tests for this feature

PYTHON-241",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-21 13:30:17-05:00,18000,2015-04-21 13:30:17-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['7b15fae5c80093ae479c3a04aaa8db2da3d45f1d'],9,103,112,2,0.34285714285714286,1.0,1.0
b94e31be846c8366b3ab58dc8cb838fa5448db10,"Add connect_timeout to cluster and Connection.factory

PYTHON-206",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-21 14:55:37-05:00,18000,2015-04-21 14:55:37-05:00,18000,True,False,"['cluster.py', 'connection.py', 'test_connection.py']",['35c6ce5365345571832028d5bdb97efd1a4a0435'],8,17,25,3,0.0,0.0,0.0
a84d4c0796da4550aa37c006cf1a66efcf62c428,six.iteritems for newly added index dict,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-22 13:28:25-05:00,18000,2015-04-22 13:28:25-05:00,18000,True,False,['metadata.py'],['86944d70868522803508343c52ebc45412e9dd07'],1,1,2,1,,,
d0ee3bc5470aea7fa67d5b80189e51cb68ec64b6,"Make DCAware LBP tolerate DC changes during query plan

Fixes a RuntimeError that would raise if the DCAwareRoundRobinPolicy
DC:host map changed during generation.

PYTHON-297",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-22 12:58:50-05:00,18000,2015-04-23 15:01:37-05:00,18000,True,False,"['policies.py', 'test_policies.py']",['56be4cbac28354a9357e01d2ff09c9460dc4c980'],5,159,164,2,0.0,0.0,1.0
8fe0fa5f7fadd9dad2a545dde6da79e118882639,"Remove race when adding new host during node/token rebuild

Fixes an issue where a race could cause None return from
Cluster.add_host during node/token list rebuild.

This would cause None to be inserted into the Token map,
and subsequently blow up TokenAware LBP creating a query plan.

PYTHON-298",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-23 10:03:18-05:00,18000,2015-04-23 15:12:47-05:00,18000,True,False,"['cluster.py', 'metadata.py', 'test_metadata.py']",['d0ee3bc5470aea7fa67d5b80189e51cb68ec64b6'],30,27,57,3,0.2,0.0,1.0
25f10a574c1cbb789eaeb19c16b30dfd92bb7d90,Update unit test for new Metadata init signature.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-23 10:47:34-05:00,18000,2015-04-23 15:13:19-05:00,18000,True,False,['test_metadata.py'],['8fe0fa5f7fadd9dad2a545dde6da79e118882639'],1,1,2,1,,,
c2b999c5ee1f6931f581d0e77517287f4ed7935d,"Ensure serial consistency gets set on statements and messages

PYTHON-299",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-23 12:47:23-05:00,18000,2015-04-23 15:13:37-05:00,18000,True,False,"['query.py', 'test_query.py']",['25f10a574c1cbb789eaeb19c16b30dfd92bb7d90'],6,39,45,2,0.0,1.0,1.0
28c870daf60ecacd96c4855d8d43a4ede0a14832,"Release ver and changelog update for 2.5.1

Conflicts:
	cassandra/__init__.py",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-23 13:54:00-05:00,18000,2015-04-23 15:17:55-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['c2b999c5ee1f6931f581d0e77517287f4ed7935d'],1,11,12,2,,,
931337b4a253d89a0ac309b305f38f6c8af0ce10,"Update date/time datatype tests to run on C* 3.0

As per CASSANDRA-7523, the new date and time types have been pushed back to C* 3.0 / protocol v4.",Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-23 18:06:39-07:00,25200,2015-04-23 18:06:39-07:00,25200,True,False,['datatype_utils.py'],['25a09dc88d3d2df50250250e7810e870d02c4aa7'],1,1,2,1,,,
9f0ca79a700ea06881ae67bd6a401adb31cef4df,Add docs for ResponseFuture.custom_paylaod,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-24 10:24:37-05:00,18000,2015-04-24 10:24:37-05:00,18000,True,False,"['cluster.py', 'cluster.rst']",['2c062213fde00a0c30b3dcbddd2e4dea6d7c210e'],0,13,13,2,,,
3f2a51ac0d12304a38031543c2c6afff31e9d5f1,handle Timeout errors in LargeDataTests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-24 13:41:50-07:00,25200,2015-04-24 13:41:50-07:00,25200,True,False,['test_large_data.py'],['95b6c13ef4c855558dca2d029350c93dcc55d4c7'],2,19,21,1,0.0,0.0,0.0
e67e215df51f74d2032090253daaf0c1158f1e9b,Refactored SchemaTests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-24 14:50:03-07:00,25200,2015-04-24 14:50:03-07:00,25200,True,False,['test_schema.py'],['3f2a51ac0d12304a38031543c2c6afff31e9d5f1'],64,61,125,1,1.0,0.0,0.0
2d8ee3cae0486da39749cb6c93b83150db5e42cc,Handle ReadTimeout in LightweightTransactionTests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-24 15:11:54-07:00,25200,2015-04-24 15:11:54-07:00,25200,True,False,['test_query.py'],['e67e215df51f74d2032090253daaf0c1158f1e9b'],9,10,19,1,0.0,0.0,1.0
6423e938a45f1261e8fc8b7431c0efdce188cbe9,handle OperationTimedOut in SchemaTests,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-24 19:16:46-07:00,25200,2015-04-24 19:16:46-07:00,25200,True,False,['test_schema.py'],['cd0cb98efe9d8ebe534036a9140e638642ac9c25'],10,22,32,1,0.0,0.0,1.0
1cffc9168e336e7d27d402b8abd34dca28fbd377,Handle OperationTimedOut in SchemaMetadataTests in TearDown,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-04-24 20:10:19-07:00,25200,2015-04-24 20:10:19-07:00,25200,True,False,['test_metadata.py'],['6423e938a45f1261e8fc8b7431c0efdce188cbe9'],5,13,18,1,1.0,1.0,1.0
7c03eacf70b3b203fe4d819a3e62e8b7a82bbe5e,Fix cqlengine UDT example in docs,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-27 09:37:31-05:00,18000,2015-04-27 09:37:31-05:00,18000,True,False,['models.rst'],['056b6ae51741cea1aa56da1ba962a5af367b2f1c'],4,2,6,1,,,
d3d60206d49fc0ffde71daa1b75b8e1f07d1ade9,"Basic timer management, and timer impl for Asyncore",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-30 10:42:36-05:00,18000,2015-04-30 10:42:36-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py']",['7c03eacf70b3b203fe4d819a3e62e8b7a82bbe5e'],27,85,112,2,1.0,1.0,0.7142857142857143
4a9e08ed7a12c0bd59c7aa96292c8c69a1a163ac,Timer for libevreactor,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-30 10:43:55-05:00,18000,2015-04-30 10:43:55-05:00,18000,True,False,"['libevreactor.py', 'libevwrapper.c']",['d3d60206d49fc0ffde71daa1b75b8e1f07d1ade9'],9,166,175,2,0.5625,0.9,0.4875
109d6bb8abe02789e5b78e46af5557e13bca73d5,"Update ResponseFutures to use reactor timers

PYTHON-108
avoids sleep in Event.wait, which contributes to latency
when using synchronous execution",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-30 10:44:14-05:00,18000,2015-04-30 15:10:00-05:00,18000,True,False,"['cluster.py', 'query.py', 'test_response_future.py']",['4a9e08ed7a12c0bd59c7aa96292c8c69a1a163ac'],44,50,94,3,1.0,1.0,0.0
6ea1504e72f2ba83c4ab9d114dba214d593c265b,Refactor redundant register_watcher[s] to Connection,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-30 11:16:18-05:00,18000,2015-04-30 15:10:00-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'eventletreactor.py', 'geventreactor.py', 'libevreactor.py', 'twistedreactor.py']",['109d6bb8abe02789e5b78e46af5557e13bca73d5'],80,19,99,6,0.0,0.0,0.9545454545454546
4d653576953fa2dffd901a009116730009974706,Gevent timer implementation,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-30 15:09:13-05:00,18000,2015-04-30 15:10:00-05:00,18000,True,False,"['connection.py', 'geventreactor.py']",['6ea1504e72f2ba83c4ab9d114dba214d593c265b'],4,37,41,2,1.0,1.0,0.7222222222222222
e3fdffb55cdb5176d22f5962594d30fee7616237,Catch and log exceptions during timeout servicing,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-30 16:08:32-05:00,18000,2015-04-30 16:08:32-05:00,18000,True,False,['connection.py'],['4d653576953fa2dffd901a009116730009974706'],1,4,5,1,1.0,1.0,1.0
87028134b1824ad767d511f6503c86a029cd7cb1,refactor connected_event to Connection init,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-04-30 16:09:51-05:00,18000,2015-04-30 16:09:51-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'geventreactor.py', 'libevreactor.py', 'twistedreactor.py']",['e3fdffb55cdb5176d22f5962594d30fee7616237'],9,4,13,5,0.6666666666666666,1.0,1.0
3489813bf7e66d39f51199c2c755e990a7d5c197,"Eventlet timer using eventlet.event.NOT_USED.

This works with the current implementation, but there is no guarantee
about the stability of this mechanism in eventlet events. Probably need
to synchronize Event management.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-01 09:32:24-05:00,18000,2015-05-01 09:32:24-05:00,18000,True,False,['eventletreactor.py'],['87028134b1824ad767d511f6503c86a029cd7cb1'],4,29,33,1,1.0,1.0,0.75
c44365c8b204edb778e2046d31e9f2ff193bb8a9,"Use threading.Event for eventlet timeouts

Removes Eventlet Events, which are more difficult to use",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-01 10:42:06-05:00,18000,2015-05-01 10:42:06-05:00,18000,True,False,['eventletreactor.py'],['3489813bf7e66d39f51199c2c755e990a7d5c197'],7,6,13,1,0.0,0.0,0.0
6ffca60cd1291277fd05967b9dbeecd764b9c615,test for python-206 connect timeouts,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-01 16:29:02-07:00,25200,2015-05-01 16:29:02-07:00,25200,True,False,['test_cluster.py'],['ce8765a527ed529e29ad45ad41a0f980b35e5706'],1,26,27,1,1.0,1.0,1.0
afe2e5ae8eabc101ae044869b21464d2733a4a14,Twisted timer implementation,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-04 11:00:03-05:00,18000,2015-05-04 11:00:03-05:00,18000,True,False,['twistedreactor.py'],['c44365c8b204edb778e2046d31e9f2ff193bb8a9'],4,33,37,1,1.0,1.0,0.8095238095238095
7f5e9df1b6f27629e280e0d9947950565d55af90,self-->cls in create_timer classmethods,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-04 11:00:39-05:00,18000,2015-05-04 11:00:39-05:00,18000,True,False,"['asyncorereactor.py', 'libevreactor.py']",['afe2e5ae8eabc101ae044869b21464d2733a4a14'],4,4,8,2,,,
67e19aad0b7ce13764bb1c7460366392c20fef1f,Refactor _callbacks and _push_watchers init to Connection,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-04 12:01:16-05:00,18000,2015-05-04 12:01:16-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'eventletreactor.py', 'geventreactor.py', 'libevreactor.py', 'twistedreactor.py', 'test_connection.py']",['7f5e9df1b6f27629e280e0d9947950565d55af90'],12,1,13,7,0.625,0.75,0.75
d7c68f9e18178c9d1f07e3c49348b27f94d1afe8,Allow ResponseFutures without a timeout,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-04 13:23:29-05:00,18000,2015-05-04 13:23:29-05:00,18000,True,False,['cluster.py'],['67e19aad0b7ce13764bb1c7460366392c20fef1f'],1,2,3,1,1.0,1.0,1.0
4b2f046452826119b03ed17b110bc49e6af30e0f,"Remove deprecated, unused import from cqlengine getting started",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-04 13:24:21-05:00,18000,2015-05-04 13:24:21-05:00,18000,True,False,['object_mapper.rst'],['d7c68f9e18178c9d1f07e3c49348b27f94d1afe8'],1,1,2,1,,,
0356f85c06570ca755ac9ae3f2e83c7db8b84888,tests for PYTHON-246,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-04 15:02:59-07:00,25200,2015-05-04 15:02:59-07:00,25200,True,False,"['test_model_io.py', 'test_udts.py']",['ce8765a527ed529e29ad45ad41a0f980b35e5706'],22,151,173,2,0.0,1.0,1.0
7cb178ff0190b785369747d42604eee64ad6bbaf,Adding tests for PYTHON-235,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-05-05 17:24:40-05:00,18000,2015-05-05 17:49:00-05:00,18000,True,False,['test_query.py'],['02a1c7f3f221d211643ec900388b226c2a50b1de'],1,39,40,1,0.0,1.0,1.0
60f59ce7f29f4d23fba974b4fb022adb3acf8465,Allow canceled timers to finish ahead of end time.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-06 10:50:05-05:00,18000,2015-05-06 10:50:05-05:00,18000,True,False,['connection.py'],['4b2f046452826119b03ed17b110bc49e6af30e0f'],10,11,21,1,1.0,1.0,1.0
c17e6e45e3d5b18961f59ccccd38ce71eee2cf0a,"libev: service timeouts before updating loop timer.

Also, never start a timer with zero repeat (this causes it to stop,
rather than timeout immediately).",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-06 10:52:04-05:00,18000,2015-05-06 10:52:04-05:00,18000,True,False,"['libevreactor.py', 'libevwrapper.c']",['60f59ce7f29f4d23fba974b4fb022adb3acf8465'],1,4,5,2,1.0,1.0,1.0
bca2a69392175a1b15f2a8c32bf1fc6c67f3d758,Fixing test for PYTHON-235,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-05-06 13:07:06-05:00,18000,2015-05-06 13:07:06-05:00,18000,True,False,['test_query.py'],['7cb178ff0190b785369747d42604eee64ad6bbaf'],27,30,57,1,,,
9d8c50bb980f3611cb5e4705adbb3e036e48ef11,Deprecate ResponseFuture.result timeout,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-06 14:53:07-05:00,18000,2015-05-06 14:53:07-05:00,18000,True,False,['cluster.py'],['c17e6e45e3d5b18961f59ccccd38ce71eee2cf0a'],5,14,19,1,1.0,1.0,1.0
70478e62fd7d98823c1ad2dd9e6dcb96dd4c0601,Remove unused 'timeout' in ..cluster.PagedResult,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-06 15:01:14-05:00,18000,2015-05-06 15:01:14-05:00,18000,True,False,['cluster.py'],['9d8c50bb980f3611cb5e4705adbb3e036e48ef11'],3,2,5,1,0.0,0.0,1.0
7f2e992d768fbcfee57e493ded850a9299f9408c,Minor tweaks on trace client integration test,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-06 16:16:40-05:00,18000,2015-05-06 16:16:40-05:00,18000,True,False,['test_query.py'],['bca2a69392175a1b15f2a8c32bf1fc6c67f3d758'],2,1,3,1,,,
087293050b322b736a7468ae70c2044d1510c47a,Update unit tests for new refresh_schema signature.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-06 16:29:23-05:00,18000,2015-05-06 16:29:23-05:00,18000,True,False,"['test_control_connection.py', 'test_response_future.py']",['7f2e992d768fbcfee57e493ded850a9299f9408c'],4,4,8,2,,,
b10d945886a84e73b9542f389d9a46a8e717775c,"Synchronize, and short circuit CC._signal_error during shutdown

Addresses an issue where a failed executor-scheduled refresh_schema
logs an error because self._connection is removed during shutdown.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-07 15:59:35-05:00,18000,2015-05-07 15:59:35-05:00,18000,True,False,"['cluster.py', '__init__.py']",['b8c3f2ff4b92da4d7cc38b398a1b5a1c131e2c66'],17,21,38,2,1.0,1.0,1.0
36492777b32aecf358892144b4aca1159a907428,"load_balancing_policy defaults to TokeanAware(DCAware)

PYTHON-160",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-07 16:32:04-05:00,18000,2015-05-07 16:32:04-05:00,18000,True,False,['cluster.py'],['b10d945886a84e73b9542f389d9a46a8e717775c'],6,27,33,1,1.0,1.0,1.0
ce15713f0898fdff2f4b5006c55b9e8c00b3458a,"Remove noop from Timer class, use flag.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-07 16:51:07-05:00,18000,2015-05-07 16:51:07-05:00,18000,True,False,['connection.py'],['70478e62fd7d98823c1ad2dd9e6dcb96dd4c0601'],8,8,16,1,0.0,0.0,0.0
fab252154efa23adceecef1f0403c69f0d937813,Explanation of eventletreactor service_timeouts routine,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-08 10:04:58-05:00,18000,2015-05-08 10:04:58-05:00,18000,True,False,['eventletreactor.py'],['ce15713f0898fdff2f4b5006c55b9e8c00b3458a'],1,6,7,1,,,
2d3e33068071142c59bdaed8c1c6b18152d43d62,Explain TwistedLoop add_timer thread interaction,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-08 11:01:51-05:00,18000,2015-05-08 11:01:51-05:00,18000,True,False,['twistedreactor.py'],['fab252154efa23adceecef1f0403c69f0d937813'],0,2,2,1,,,
7e70d5543d08035ff7a4a94a7e9564f5ffc7281c,Coarse locking on TimerManager.service_timeouts,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-11 09:53:18-05:00,18000,2015-05-11 09:53:18-05:00,18000,True,False,['connection.py'],['2d3e33068071142c59bdaed8c1c6b18152d43d62'],14,19,33,1,1.0,1.0,1.0
03068041882c054c27435cd02405ab2072ceb158,Remove lock in TimerManager,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-11 11:41:47-05:00,18000,2015-05-11 11:41:47-05:00,18000,True,False,['connection.py'],['7e70d5543d08035ff7a4a94a7e9564f5ffc7281c'],14,20,34,1,0.0,1.0,1.0
dd737915a9710b779157c7484a2d9dcc9db3ed32,Timer queue is now tuple instead of using __lt__ on objects,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-11 11:53:33-05:00,18000,2015-05-11 11:53:33-05:00,18000,True,False,['connection.py'],['03068041882c054c27435cd02405ab2072ceb158'],9,5,14,1,1.0,0.0,0.0
8f08a885d8c1e4500f914b88c53279238d4251da,"populate ResponseFuture OpterationTimedOut with errors, host",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-11 12:47:17-05:00,18000,2015-05-11 12:47:17-05:00,18000,True,False,['cluster.py'],['dd737915a9710b779157c7484a2d9dcc9db3ed32'],1,1,2,1,,,
7ab74a7f1a7cc03bb3a8cada6fb257d0750bf36b,Remove outdated note about no errback on timeout,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-11 13:06:27-05:00,18000,2015-05-11 13:06:27-05:00,18000,True,False,['cluster.py'],['8f08a885d8c1e4500f914b88c53279238d4251da'],5,3,8,1,0.0,1.0,1.0
5a235c46ffad7119e2dd6fff46861ef26d80d0f2,Make unit test for large DateType work on 32-bit platforms,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-11 14:41:18-05:00,18000,2015-05-11 14:41:18-05:00,18000,True,False,['test_types.py'],['b8c3f2ff4b92da4d7cc38b398a1b5a1c131e2c66'],1,1,2,1,,,
f4434944b2d4b8045bbb7892195d32ce7d3c2966,Convert errors on re-prepare to API exceptions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-11 14:57:02-05:00,18000,2015-05-11 14:57:02-05:00,18000,True,False,['cluster.py'],['5a235c46ffad7119e2dd6fff46861ef26d80d0f2'],1,4,5,1,0.0,0.0,1.0
2464085bccd62fefe1e8e9734be9bb1363da4f00,"Pass host through to Auth instance in SaslAuthProvider.new_authenticator

PYTHON-300",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-12 08:08:17-05:00,18000,2015-05-12 08:08:17-05:00,18000,True,False,"['auth.py', 'test_authentication.py']",['5a235c46ffad7119e2dd6fff46861ef26d80d0f2'],5,18,23,2,1.0,1.0,1.0
3825c3a9120040050c20e7e80b905ebc65bb03d6,length validation for custom payload map,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-12 09:06:22-05:00,18000,2015-05-12 09:06:22-05:00,18000,True,False,['protocol.py'],['087293050b322b736a7468ae70c2044d1510c47a'],0,2,2,1,1.0,1.0,1.0
58536f57467db9998417eff57304ef40562f5975,Add trace_id to statement,Carl Yeksigian,carl@apache.org,Carl Yeksigian,carl@apache.org,2015-04-27 17:28:47-04:00,14400,2015-05-12 11:56:55-04:00,14400,True,False,"['cluster.py', 'query.py']",['5a235c46ffad7119e2dd6fff46861ef26d80d0f2'],0,8,8,2,0.0,0.0,1.0
bc3ea9b1bc6ff03811332b7923a3eec3f8abde7d,"Test for trace_id on query

PYTHON-302",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-12 11:19:51-05:00,18000,2015-05-12 11:19:51-05:00,18000,True,False,['test_query.py'],['58536f57467db9998417eff57304ef40562f5975'],0,15,15,1,1.0,1.0,1.0
90e2ace36f56080a77a940fe59a662c89334599b,"cqle: Protect ks/cf identifiers that use keywords

PYTHON-244",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-12 15:04:43-05:00,18000,2015-05-12 15:04:43-05:00,18000,True,False,"['management.py', 'models.py', 'test_model.py']",['bc3ea9b1bc6ff03811332b7923a3eec3f8abde7d'],26,69,95,3,0.1724137931034483,1.0,1.0
5c19ad507ceba7731494ddbe8fff06d146e8c789,Fixing timeout issues,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-05-07 16:42:42-05:00,18000,2015-05-13 11:03:41-05:00,18000,True,False,['test_large_data.py'],['b8c3f2ff4b92da4d7cc38b398a1b5a1c131e2c66'],12,74,86,1,0.0,0.8095238095238095,0.8095238095238095
c841c412995788c8ea6e5c96365839e6a28acf01,cqle: Make sure user type is registered on sync even if no change is made.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-13 14:59:10-05:00,18000,2015-05-13 15:02:45-05:00,18000,True,False,['management.py'],['bc3ea9b1bc6ff03811332b7923a3eec3f8abde7d'],2,2,4,1,,,
d9cbb6e2689a31ffcb6cd5d243d2945c6233b697,"cqle: Correct CQL encoding for collections with nested types.

PYTHON-311

Removes superfluous quoting mechanism, allowing collections to correctly
encode contents (instead of being implicitly strinified).",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-13 14:59:53-05:00,18000,2015-05-13 15:04:33-05:00,18000,True,False,"['columns.py', 'statements.py', 'test_container_columns.py', 'test_value_io.py', 'test_update_statement.py']",['c841c412995788c8ea6e5c96365839e6a28acf01'],86,15,101,5,0.0,0.0,0.0
28359d5ec873ac24388d99f031aa5734dfdbad4d,potential fix to travis unit test errors,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-05-13 15:49:35-05:00,18000,2015-05-13 15:49:35-05:00,18000,True,False,['tox.ini'],['8164a3bc4cc9bd86a2fe011a6e339e683a8641d2'],1,1,2,1,,,
45a09d36f979f031e8132572f6bdaa929d3124f7,"Synchronize reconnection_handler cancelation in CC shutdown

Fixes a possible race where ControlConnection._reconnection_handler
could be removed during shutdown.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-13 15:56:47-05:00,18000,2015-05-13 15:56:47-05:00,18000,True,False,['cluster.py'],['36492777b32aecf358892144b4aca1159a907428'],4,5,9,1,1.0,1.0,1.0
e9b948b87577d3882add31d6a82b9ce468670617,fixed typo in test harness detecting C* versions,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-13 16:34:33-07:00,25200,2015-05-13 16:34:33-07:00,25200,True,False,['__init__.py'],['fe4d2eaf2dd34809d823ab319a0cf82e4bd0bfa6'],2,2,4,1,,,
cef495e8563a36152cf23e3b71646d2b7f15b121,fixed typo in test harness detecting C* 3.0 version,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-13 16:53:44-07:00,25200,2015-05-13 16:53:44-07:00,25200,True,False,['__init__.py'],['3825c3a9120040050c20e7e80b905ebc65bb03d6'],3,3,6,1,,,
536300ddb9973a1378a2f7b9c6b304dfe5f1c2f9,"For DefaultConnection, default to gevent only if actually patched.

PYTHON-244
Fixes an issue where gevent is chosen based on module loaded, not monkey
patching.
In some debuggers, (PyCharm, for example), this would cause connecting
to timeout because gevent reactor is used without monkey patching.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-13 20:02:48-05:00,18000,2015-05-14 08:25:42-05:00,18000,True,False,['cluster.py'],['f879700dee6045b0c748a233253cf06bcce625e1'],1,7,8,1,1.0,1.0,1.0
c4bfe375bab678210cd3826c3eb7e471b81a79c1,"Warn when UDT registered, but protocol_version < 3

PYTHON-305",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-14 10:25:08-05:00,18000,2015-05-14 10:25:08-05:00,18000,True,False,['cluster.py'],['f879700dee6045b0c748a233253cf06bcce625e1'],0,5,5,1,1.0,1.0,0.0
7718544a626c7188725c1738f80ed06e48cbdb31,"Deprecate Cluster.refresh_schema and submit_refresh_schema

PYTHON-291
Use Cluster.refresh_*_metadata instead",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-14 11:05:18-05:00,18000,2015-05-14 11:05:18-05:00,18000,True,False,"['cluster.py', 'cluster.rst']",['f879700dee6045b0c748a233253cf06bcce625e1'],0,65,65,2,1.0,1.0,0.16666666666666666
12bb183d367bd2d96b8e52639246effefa5712d2,Add support for byte and smallint types,blerer,benjamin.lerer@datastax.com,blerer,benjamin.lerer@datastax.com,2015-05-12 10:18:09+02:00,-7200,2015-05-15 13:45:38+02:00,-7200,True,False,"['cqltypes.py', 'protocol.py', 'datatype_utils.py', 'test_marshalling.py', 'test_types.py']",['6f6ef9d5f2cf77c1aa510b78ebae7eb7a750e85e'],4,45,49,5,0.5555555555555556,0.7777777777777778,1.0
dfa91b8bd5d6dcfe13ce3f4caf4eb721a7dd3d18,"Revert ""Merge pull request #298 from datastax/PYTHON-108""

Taking out timers in the interest of accelerating C* 2.2 features for a
release.

This reverts commit f879700dee6045b0c748a233253cf06bcce625e1, reversing
changes made to fe4d2eaf2dd34809d823ab319a0cf82e4bd0bfa6.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-15 14:46:06-05:00,18000,2015-05-15 14:46:06-05:00,18000,True,False,"['cluster.py', 'connection.py', 'asyncorereactor.py', 'eventletreactor.py', 'geventreactor.py', 'libevreactor.py', 'libevwrapper.c', 'twistedreactor.py', 'query.py', 'object_mapper.rst', 'test_connection.py', 'test_response_future.py']",['6f6ef9d5f2cf77c1aa510b78ebae7eb7a750e85e'],459,201,660,12,0.0,0.0,0.10077519379844961
0dcfa5e24fc3b6b0b95f71e4c13adaed01e50f67,Change Cassandra 3.0 references to Cassandra 2.2,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-15 15:34:25-05:00,18000,2015-05-15 15:34:25-05:00,18000,True,False,"['cluster.py', 'metadata.py', 'query.py', '__init__.py', 'test_query.py']",['264fab97ef5ca7b068df4bff44c266c31c62851d'],21,21,42,5,,,
0646d15fa1c5cff5247750edcf2935ab62242dec,"Remove is_deterministic from function meta

It was removed in the final version of the server changes.

Also skipping legacy table test for 2.2, which does not have
cassandra-cli",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-15 16:25:52-05:00,18000,2015-05-15 16:25:52-05:00,18000,True,False,"['metadata.py', '__init__.py', 'test_metadata.py']",['0dcfa5e24fc3b6b0b95f71e4c13adaed01e50f67'],29,13,42,3,1.0,0.0,1.0
ebfa77c19d98c5a5a90a31db493794aee295af45,"refresh_type_metadata -> refresh_user_type_metadata

code review input",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-15 16:47:20-05:00,18000,2015-05-15 16:47:20-05:00,18000,True,False,"['cluster.py', 'cluster.rst']",['7718544a626c7188725c1738f80ed06e48cbdb31'],2,2,4,2,,,
f05921a583a84c0c749f01f5a596c8240315cab4,"cqle: Make CQL UPPER in management.drop_table

code review input",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-15 16:49:37-05:00,18000,2015-05-15 16:49:37-05:00,18000,True,False,['management.py'],['90e2ace36f56080a77a940fe59a662c89334599b'],1,1,2,1,,,
ffaaddcf133fb770528611670bca4fd13350feb9,Unbreak tests by disabling UDFs in cassandra.yaml,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-15 16:16:07-07:00,25200,2015-05-15 16:16:07-07:00,25200,True,False,['__init__.py'],['0646d15fa1c5cff5247750edcf2935ab62242dec'],2,3,5,1,0.0,0.0,0.0
830958952b40e2ae972e5fecde3c0358d905fc00,"temporarily synchronously refresh the schema metadata, for IndexMapTests",Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-15 16:51:03-07:00,25200,2015-05-15 16:51:03-07:00,25200,True,False,['test_metadata.py'],['ffaaddcf133fb770528611670bca4fd13350feb9'],0,4,4,1,0.0,1.0,1.0
dcb41c3c9a18eb7aa6eafd5f59f9083fdcf1e9b2,"Unbreak UDF metadata tests, run only if protocol v 4+",Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-15 17:18:33-07:00,25200,2015-05-15 17:18:33-07:00,25200,True,False,['test_metadata.py'],['792b8538b60fd47944b173553c275c915239cec1'],39,48,87,1,0.75,1.0,1.0
b004dc6ff0669d12806cca53b4db38cf27c2ffc2,remove extra printline in TestCodeCoverage,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-15 17:43:02-07:00,25200,2015-05-15 17:43:02-07:00,25200,True,False,['test_metadata.py'],['f223f6a7e5285104828c387a4ecbd2f1c48fad5d'],1,0,1,1,1.0,0.0,0.0
9b940d25933a5bb4fd633ad388a77bf28b3e1044,Correct expected values for Small|TinyInt unit tests,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-18 08:22:58-05:00,18000,2015-05-18 08:22:58-05:00,18000,True,False,['test_marshalling.py'],['c2368d77f148039e2d49466c2cff628e6fb72ab5'],3,3,6,1,,,
65d14ddb7b9c119feae59c760a43fa5b459c48ea,Added tests for custom payloads. Fixed formatting in tracing tests.,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-05-12 00:29:49-05:00,18000,2015-05-18 09:02:20-05:00,18000,True,False,"['__init__.py', 'test_custom_payload.py', 'test_query.py', 'tox.ini']",['3825c3a9120040050c20e7e80b905ebc65bb03d6'],23,223,246,4,0.7288135593220338,1.0,0.9152542372881356
8d68dc2c905232a1bf7ab0aff9eb05e6d287735c,Documentation fixes,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-05-18 09:30:43-05:00,18000,2015-05-18 09:30:43-05:00,18000,True,False,['test_query.py'],['65d14ddb7b9c119feae59c760a43fa5b459c48ea'],1,1,2,1,,,
16f377cbfc21dda65698ecd942db437458db4d1a,"Handle server warnings in protocol v4+

PYTHON-315",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-18 10:06:56-05:00,18000,2015-05-18 10:06:56-05:00,18000,True,False,"['cluster.py', 'protocol.py']",['9b940d25933a5bb4fd633ad388a77bf28b3e1044'],0,37,37,2,0.25,0.25,0.3125
c8235aade9e75931ba2b0e1e6850df62caf4e5d8,"Remove warn log from Session.execute

logging remains in protocol",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-18 16:54:08-05:00,18000,2015-05-18 16:54:08-05:00,18000,True,False,['cluster.py'],['16f377cbfc21dda65698ecd942db437458db4d1a'],2,0,2,1,1.0,1.0,1.0
bc947d0d60b69410d4ed48175c83ec0166d44f76,"Fixed DESCRIBE names for small and tiny ints, added column names",Stefania Alborghetti,stefania.alborghetti@datastax.com,Stefania Alborghetti,stefania.alborghetti@datastax.com,2015-05-19 11:38:42+08:00,-28800,2015-05-19 11:38:42+08:00,-28800,True,False,"['columns.py', 'cqltypes.py', 'protocol.py']",['8dbbd113885f098b2ca1234ed26fa9434050bd9d'],6,20,26,3,,,
9b04537f969ce822a3c2ba099f4bbf12e23d72e6,Update unit tests for corrected small/tiny int types,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-19 08:52:35-05:00,18000,2015-05-19 08:52:35-05:00,18000,True,False,"['test_marshalling.py', 'test_types.py']",['bc947d0d60b69410d4ed48175c83ec0166d44f76'],9,9,18,2,,,
c40c1da558e11f6ed4bd3854cdadf7f6cbd7a989,[PYTHON-244] Update docs for test,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-20 11:50:17-07:00,25200,2015-05-20 11:50:17-07:00,25200,True,False,['test_model.py'],['427dfd95b6ef0d900dd3ea7aa83e3e2eff080a50'],2,21,23,1,,,
8b8993c810e26938e3da92cddca17ae6dfba7548,"Use a namedtuple for prepared column meta.

Improve {maintain, read}ability",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-20 14:19:10-05:00,18000,2015-05-21 08:59:53-05:00,18000,True,False,"['protocol.py', 'query.py', 'test_parameter_binding.py']",['074650bba7f84746b2065dbb4b2df52e072d328b'],26,22,48,3,1.0,1.0,0.0
0b8b37ba89930b08a8fb29a6a2f064656dedad6c,"Distinguish btw NULL and UNSET when binding, proto v4+

PYTHON-317",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-20 16:55:13-05:00,18000,2015-05-21 08:59:54-05:00,18000,True,False,"['protocol.py', 'query.py', 'query.rst', 'test_prepared_statements.py']",['8b8993c810e26938e3da92cddca17ae6dfba7548'],32,93,125,4,0.0,0.5925925925925926,1.0
f0f3d3191bb58ccfd7613a9bf837d8c947994129,Fix typo in Function meta argument_names attribute.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-21 09:08:25-05:00,18000,2015-05-21 09:08:25-05:00,18000,True,False,['metadata.py'],['074650bba7f84746b2065dbb4b2df52e072d328b'],1,1,2,1,,,
2302a7848fa1259a6d9a207dbc1c8553db7fd5c6,"Add documentation for connection pool settings

PYTHON-304",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-21 13:42:18-05:00,18000,2015-05-21 13:42:18-05:00,18000,True,False,"['cluster.py', 'cluster.rst']",['074650bba7f84746b2065dbb4b2df52e072d328b'],0,26,26,2,,,
a5ca5ee96b213f94df94b8a7d93c55f6389b999a,"Add synchronous refresh mehtods for UDF, UDA",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-21 15:15:41-05:00,18000,2015-05-21 15:15:41-05:00,18000,True,False,"['__init__.py', 'cluster.py', 'cluster.rst']",['f0f3d3191bb58ccfd7613a9bf837d8c947994129'],3,29,32,3,1.0,1.0,0.0
7d628a2b4feae23e63c25807afe4653b6525975e,[PYTHON-291] Tests for refresh schema metadata,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-21 15:19:07-07:00,25200,2015-05-21 15:19:07-07:00,25200,True,False,"['test_cluster.py', 'test_metadata.py']",['a5ca5ee96b213f94df94b8a7d93c55f6389b999a'],14,270,284,2,0.4090909090909091,1.0,1.0
e4d39fbf6f5a8c7d125dc68c4aada665f810bd0b,[PYTHON-207] Test for automatic repreparation error,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-21 17:05:40-07:00,25200,2015-05-21 17:05:40-07:00,25200,True,False,['test_prepared_statements.py'],['a5ca5ee96b213f94df94b8a7d93c55f6389b999a'],0,28,28,1,1.0,1.0,1.0
44016c8136a79c82d6ce133f210a02127c22e3af,"Add FAQ section to docs

PYTHON-115",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-22 09:51:08-05:00,18000,2015-05-22 09:51:08-05:00,18000,True,False,"['faq.rst', 'faq.rst', 'index.rst']",['a5ca5ee96b213f94df94b8a7d93c55f6389b999a'],4,93,97,3,,,
88e927fd299e22d669d1906bbbb53aad2a09c350,Remove dead conditional in BoundStatement.bind,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-22 13:03:04-05:00,18000,2015-05-22 13:03:04-05:00,18000,True,False,['query.py'],['0b8b37ba89930b08a8fb29a6a2f064656dedad6c'],9,2,11,1,1.0,1.0,0.16666666666666666
effd1a9fc4c0186b1ca6a2677a0a1d44982eef11,Unit tests for binding NULL vs UNSET in protocol v4,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-22 13:03:35-05:00,18000,2015-05-22 13:03:35-05:00,18000,True,False,['test_parameter_binding.py'],['88e927fd299e22d669d1906bbbb53aad2a09c350'],39,100,139,1,1.0,1.0,1.0
43f1ea748ceb52d4aebfcb12f18c43583c2a46ac,"Integration test for binding UNSET values in v4+

PYTHON-317",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-22 14:12:25-05:00,18000,2015-05-22 14:12:25-05:00,18000,True,False,['test_prepared_statements.py'],['effd1a9fc4c0186b1ca6a2677a0a1d44982eef11'],1,49,50,1,0.0,1.0,1.0
5bd44a97c32d587412389fa1148ff01fba615951,"Fix test for wrong dict values passed to bind

PYTHON-317",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-22 14:21:44-05:00,18000,2015-05-22 14:21:44-05:00,18000,True,False,['test_prepared_statements.py'],['43f1ea748ceb52d4aebfcb12f18c43583c2a46ac'],2,7,9,1,0.0,1.0,1.0
09505e65974af138763f46ac0bfdf24fa738a040,"[PYTHON-238] Added tests for protocol v4 Exceptions, and MISC test cleanup",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-05-21 17:51:43-05:00,18000,2015-05-22 16:23:15-05:00,18000,True,False,"['test_failure_types.py', 'test_query.py']",['ff1d75a506cb1c49ad54bb2076274135c928e034'],2,285,287,2,0.3858267716535433,1.0,0.84251968503937
7aa8f3037538b786814ec870ce8282e7f3c534db,Check if max_attempts is None,Tom Lin,lintao.im@gmail.com,Tom Lin,lintao.im@gmail.com,2015-05-25 16:11:35+08:00,-28800,2015-05-25 16:11:35+08:00,-28800,True,False,['policies.py'],['ff1d75a506cb1c49ad54bb2076274135c928e034'],2,4,6,1,1.0,1.0,1.0
b43a947d4a7a88e395939b370bd616f396dee6a1,"cqle: introduce 'date' and 'time' column types

PYTHON-245",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-19 16:27:48-05:00,18000,2015-05-26 09:33:40-05:00,18000,True,False,"['columns.py', 'cqltypes.py', 'util.py', 'columns.rst']",['ccd7e460e28c7289046473cbe6467e408831ea61'],40,63,103,4,0.0,0.0,0.0
f23cc3a46a3372b2f6984c5e96a6852c4fa60964,Add Date type to CQL encoder,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-26 10:57:24-05:00,18000,2015-05-26 10:57:24-05:00,18000,True,False,['encoder.py'],['b43a947d4a7a88e395939b370bd616f396dee6a1'],2,10,12,1,0.6666666666666666,1.0,1.0
d3626fb8cd50358969250d934662e40b45c6b2a7,"cqle: tweak existing Date tests to expect Date type

PYTHON-245",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-26 10:58:05-05:00,18000,2015-05-26 10:58:05-05:00,18000,True,False,"['test_validation.py', 'test_value_io.py', 'test_model_io.py', 'test_udts.py']",['f23cc3a46a3372b2f6984c5e96a6852c4fa60964'],22,23,45,4,0.0,0.0,0.0
0d2a8b4727eef3f863b8273a1f37c111b5898133,"Test infinite max attempts for ConstantReconnectionPolicy

PYTHON-325",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-26 12:10:28-05:00,18000,2015-05-26 12:10:28-05:00,18000,True,False,['test_policies.py'],['47f1988988704117508b11ccbb94da884f8b9b19'],0,8,8,1,1.0,1.0,1.0
3cd9d50b1637f48ca8c10657e38fded3dd72f76b,[PYTHON-160] Test for default loadbalancing policy,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-26 10:32:46-07:00,25200,2015-05-26 10:32:46-07:00,25200,True,False,['test_loadbalancingpolicies.py'],['47f1988988704117508b11ccbb94da884f8b9b19'],0,25,25,1,1.0,1.0,1.0
330349ae572a7c8f06f27b992e1d53c27293c6fe,Update type tests,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-26 16:16:19-05:00,18000,2015-05-26 16:16:19-05:00,18000,True,False,"['util.py', 'datatype_utils.py', 'test_types.py']",['93b56a6291189b4ab45d6d8a9eb47a9f26d44775'],96,82,178,3,1.0,0.0,
abdbf454190f86baeaec72cfe0753db779ac3dc2,"UNSET Prepared test updates

peer review input",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-26 16:28:01-05:00,18000,2015-05-26 16:28:01-05:00,18000,True,False,"['test_prepared_statements.py', 'test_parameter_binding.py']",['5bd44a97c32d587412389fa1148ff01fba615951'],25,26,51,2,0.0,1.0,1.0
05b60071fb713b5229015ec7c640207f2156bbf9,[PYTHON-311] Test for inserting collections of UDTs,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-05-26 13:59:29-05:00,18000,2015-05-26 17:34:19-05:00,18000,True,False,['test_udts.py'],['93b56a6291189b4ab45d6d8a9eb47a9f26d44775'],1,41,42,1,0.0,1.0,1.0
dca25dac784bb6657422e959392b4ba5765d522e,"[PYTHON-245] Tests for Date, Time, SmallInt, TinyInt in cqlengine",Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-26 15:49:22-07:00,25200,2015-05-26 15:49:22-07:00,25200,True,False,"['test_model_io.py', 'test_udts.py']",['4bf695b7b4314391022abc660d6217a28db9765c'],25,37,62,2,0.0,1.0,1.0
c0b8c1351aefc254893ed69e92906bf319c43c59,Fix failing cqlengine tests related to protocol v4 datatypes,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-26 20:35:40-07:00,25200,2015-05-26 20:35:40-07:00,25200,True,False,"['test_validation.py', 'test_value_io.py', 'test_model_io.py', 'test_udts.py']",['8412d866ef26536b430bb42ad1856aa22e8957f1'],71,197,268,4,0.5128205128205128,1.0,1.0
f00e5ea350a41d5aa72d21a7c25d218259244bd0,"Run with Mirroring query handler if C* >= 2.2

moved custom payload tests to .../standard",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-22 15:26:20-05:00,18000,2015-05-27 11:38:43-05:00,18000,True,False,"['__init__.py', 'test_custom_payload.py']",['93b56a6291189b4ab45d6d8a9eb47a9f26d44775'],39,11,50,2,0.0,0.0,0.0
0eb6476aafa5f219c1718210374850227d5f923f,"Integration test for client warning

PYTHON-315",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-26 09:03:26-05:00,18000,2015-05-27 11:38:43-05:00,18000,True,False,['test_client_warnings.py'],['f00e5ea350a41d5aa72d21a7c25d218259244bd0'],0,124,124,1,1.0,1.0,1.0
9b149b30925355da94bf1eb1cab17196c2dc4fcd,"Don't skipTest in unittest.TestCase.setUpClass

resolves an issue where skipping from class setup errors in unittest2
This is reported fixed in unittest2 0.4.2, but seems to be still
happening in 1.0.1
https://pypi.python.org/pypi/unittest2#id9",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-27 13:35:28-05:00,18000,2015-05-27 13:35:28-05:00,18000,True,False,"['test_client_warnings.py', 'test_custom_payload.py']",['0eb6476aafa5f219c1718210374850227d5f923f'],7,12,19,2,1.0,1.0,1.0
f04a14d5728492c1cc7df72210bbe26b6a597755,Adding documentation for metadata tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-05-27 14:41:56-05:00,18000,2015-05-27 14:41:56-05:00,18000,True,False,['test_metadata.py'],['1ba07f18d038fa733391056b79baca4f45896b3f'],9,143,152,1,,,
c843e6886f3b2b17645117a8d8f1c8187078a254,"Add windows inet_pton for python versions that do not have the socket routine

Fixes an issue with inet addresses in the protocol (PYTHON-309)
Adds IPv6 support for Windows (PYTHON-20)",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-27 15:48:46-05:00,18000,2015-05-27 16:18:01-05:00,18000,True,False,"['cqltypes.py', 'protocol.py', 'util.py']",['1ba07f18d038fa733391056b79baca4f45896b3f'],18,92,110,3,0.0,1.0,1.0
2e4fbba38e235952630f5c9d1b7860e2aec53295,Jenkins stabilization fixes,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-27 16:03:35-07:00,25200,2015-05-27 16:03:35-07:00,25200,True,False,"['test_container_columns.py', 'test_udts.py', 'test_types.py']",['1ba07f18d038fa733391056b79baca4f45896b3f'],17,37,54,3,1.0,1.0,1.0
2216c3105327ba84a3be69c6f7e83272ed3481c9,change overlapping table names in cqle test v4 test,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-05-27 18:38:00-07:00,25200,2015-05-27 18:38:00-07:00,25200,True,False,['test_model_io.py'],['c6361d020ab95fb2489ecfff9216ed3885f06966'],5,5,10,1,,,
33c71799c8c7b29734be15297578f7f75d9ff9be,"Update CQL keywords, expose in API docs.

PYTHON-319
PYTHON-324",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-28 11:06:37-05:00,18000,2015-05-28 11:06:37-05:00,18000,True,False,"['metadata.py', 'metadata.rst', 'test_metadata.py']",['7f11d7207c4b3b191c66bf38d67efeff788fa4ce'],14,48,62,3,,,
6b6d31cf5622f94eddae3eb31a0a0373b22e934d,cqle: replace deprecated refresh_schema with new fn,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-28 12:53:08-05:00,18000,2015-05-28 12:53:08-05:00,18000,True,False,['management.py'],['471da89cdbeef833acc7bf5fcd1284f303fab72b'],1,1,2,1,,,
58676ac9a25c943ac1420a3fddd8dd7b46767e1f,Use inbuilt UUID for validation,Kracekumar Ramaraju,me@kracekumar.com,Kracekumar Ramaraju,me@kracekumar.com,2015-05-29 12:11:40+05:30,-19800,2015-05-29 12:11:40+05:30,-19800,True,False,"['columns.py', 'test_validation.py']",['1ba07f18d038fa733391056b79baca4f45896b3f'],6,13,19,2,1.0,1.0,1.0
8e565d06ab94de13ac43e00a81d9741d9250f2e8,"ValidationError for invalid UUID types

Follow-on to #335. Fixes issue where non-string or UUID types would
return None from UUID.validate.
Also removed test that did not do what it purported (previously
inserting None for key instead of value, and failing for Validation of
UUID and not key).",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-29 11:03:39-05:00,18000,2015-05-29 11:03:39-05:00,18000,True,False,"['columns.py', 'test_container_columns.py']",['b194fec0e0fd44187321dcfa2b61d1e41d79ce78'],9,7,16,2,,,
101a4ab76e4b39d0759471f2e2d3f52dc4edd744,Exclude the libevwrapper extention for Windows,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-29 12:59:02-05:00,18000,2015-05-29 12:59:02-05:00,18000,True,False,['setup.py'],['8e565d06ab94de13ac43e00a81d9741d9250f2e8'],3,21,24,1,,,
f247df78764b10440b61bc8e9fbe2ef1ad6f42c6,cqle: add Float/Double overload deprecation to upgrade guide,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-29 13:30:41-05:00,18000,2015-05-29 13:30:41-05:00,18000,True,False,"['columns.rst', 'upgrade_guide.rst']",['101a4ab76e4b39d0759471f2e2d3f52dc4edd744'],1,7,8,2,,,
b945fa6fe508a020589f04a2b5a32c8257d852de,Add link to platform/runtime survey,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-29 13:45:30-05:00,18000,2015-05-29 13:45:30-05:00,18000,True,False,['README.rst'],['f247df78764b10440b61bc8e9fbe2ef1ad6f42c6'],0,2,2,1,,,
f00bfe746d3b8c8d97c7332e5ebeb5973391a231,Changelog update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-29 14:23:43-05:00,18000,2015-05-29 14:23:43-05:00,18000,True,False,['CHANGELOG.rst'],['f247df78764b10440b61bc8e9fbe2ef1ad6f42c6'],0,38,38,1,,,
38705c229ab4c1b4a047f8b140408b1ef456c49f,cqle: Note about Date type in upgrade guide,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-05-29 15:09:15-05:00,18000,2015-05-29 15:09:15-05:00,18000,True,False,"['columns.rst', 'upgrade_guide.rst']",['f00bfe746d3b8c8d97c7332e5ebeb5973391a231'],3,13,16,2,,,
dc433b91e6d03f2cecce36cebd1a50fd8e0fdf3e,Add comment about dual-use socket struct util.sockaddr,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-01 09:23:10-05:00,18000,2015-06-01 09:23:10-05:00,18000,True,False,['util.py'],['c843e6886f3b2b17645117a8d8f1c8187078a254'],4,10,14,1,,,
6fec9d17a4ab91a15ad6f86ddddd450573f725ae,Add Cluster.connect_timeout to api doc,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-01 12:52:39-05:00,18000,2015-06-01 12:52:39-05:00,18000,True,False,['cluster.rst'],['d252212d75c6b47cde78fc1d165427114c023c09'],0,2,2,1,,,
2b7d9bc8ab36e0b806476451a40e8b70b7ee0b19,Add cluster.ResponseFuture.warnings to api doc,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-01 13:20:21-05:00,18000,2015-06-01 13:20:21-05:00,18000,True,False,['cluster.rst'],['6fec9d17a4ab91a15ad6f86ddddd450573f725ae'],0,2,2,1,,,
a15729c74c2a3982fdccf0501b144a2614e4e173,cqle: Tighten-up columns class docs with inheritied init,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-01 13:20:48-05:00,18000,2015-06-01 13:20:48-05:00,18000,True,False,['columns.rst'],['2b7d9bc8ab36e0b806476451a40e8b70b7ee0b19'],3,3,6,1,,,
c967f10fc201b44743526455d69c79a1df6284ec,Update CHANGELOG.rst,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-01 13:49:10-05:00,18000,2015-06-01 13:49:10-05:00,18000,True,False,['CHANGELOG.rst'],['6fec9d17a4ab91a15ad6f86ddddd450573f725ae'],1,1,2,1,,,
03c2b2ae1f5abbd8ea0383130ada2db1f40f86c8,Update README.rst,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-01 15:44:26-05:00,18000,2015-06-01 15:44:26-05:00,18000,True,False,['README.rst'],['f90c84da923ca74ab72a4854f60123b95808d65e'],4,14,18,1,,,
c050a96bc711006ee33cec24ca13c84687a8420b,Update README.rst,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-01 15:46:49-05:00,18000,2015-06-01 15:46:49-05:00,18000,True,False,['README.rst'],['03c2b2ae1f5abbd8ea0383130ada2db1f40f86c8'],1,3,4,1,,,
f7fac976d875304b92a9894f7e85a70ffc2f7fbb,"cqle: backport cqlengine to support Python 2.6

https://datastax-oss.atlassian.net/browse/PYTHON-288

Add Python 2.6 compliancy:
- Remove dict/set comprehensions.
- Use cassandra's OrderedDict.
- Replace str.format() implicit placeholders ('{}') with
  explicit ones ('{0} {1} ...').
- Implement cqlengine.functions.get_total_seconds() as alternative to
  timedelta.total_seconds().

cqlengine integration tests remain to be backported.",jpuerta,ernesto.puerta@gmail.com,jpuerta,ernesto.puerta@gmail.com,2015-06-01 10:42:47+01:00,-3600,2015-06-02 16:12:54+01:00,-3600,True,False,"['README.rst', 'columns.py', 'functions.py', 'management.py', 'models.py', 'named.py', 'operators.py', 'query.py', 'statements.py', 'usertype.py']",['c050a96bc711006ee33cec24ca13c84687a8420b'],136,145,281,10,1.0,1.0,1.0
8bfcfb8824ce46f0d1cfc2735f70d916cabceb81,"cqle: Fix minor issues added in previous commit

Changes:
- Extra whitespace added during merge
- Replace (k, v) syntax in dict comprehension with k, v
- Discriminator column for polymorphic key",jpuerta,ernesto.puerta@gmail.com,jpuerta,ernesto.puerta@gmail.com,2015-06-01 11:33:43+01:00,-3600,2015-06-02 16:12:54+01:00,-3600,True,False,"['columns.py', 'models.py']",['f7fac976d875304b92a9894f7e85a70ffc2f7fbb'],3,3,6,2,,,
be0d0037ea0227897e665be1f522ab66e20ad084,cqle: Fix minor issues with polymorphic models,jpuerta,ernesto.puerta@gmail.com,jpuerta,ernesto.puerta@gmail.com,2015-06-02 16:29:12+01:00,-3600,2015-06-02 16:29:12+01:00,-3600,True,False,['models.py'],['8bfcfb8824ce46f0d1cfc2735f70d916cabceb81'],3,3,6,1,,,
8949200222343407ba6201a59f10169f089be2de,"Update custom payload value encoding for CASSADNRA-9515

https://issues.apache.org/jira/browse/CASSANDRA-9515",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-02 12:11:32-05:00,18000,2015-06-02 12:11:32-05:00,18000,True,False,['protocol.py'],['c050a96bc711006ee33cec24ca13c84687a8420b'],7,2,9,1,0.0,0.0,0.0
ec241de0feb2c888a59b7c3a935f0562d8084716,fix unicode encoding issue for query.bind_params,Ashwin Rajeev,ashwin@inzyte.com,Ashwin Rajeev,ashwin@inzyte.com,2015-06-04 12:52:38+05:30,-19800,2015-06-04 12:52:38+05:30,-19800,True,False,"['cluster.py', 'query.py']",['911c6a19159c35465f8c7249c2124e3843262b55'],2,2,4,2,1.0,0.0,
cf1432683265bc2e232ec8f060171be7ef0bc1b3,Finalize changelog for 2.6.0c1,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-04 09:06:58-05:00,18000,2015-06-04 09:06:58-05:00,18000,True,False,['CHANGELOG.rst'],['911c6a19159c35465f8c7249c2124e3843262b55'],1,2,3,1,,,
0dc0d584de0a8201ea249572cbf33a6b589e7fdc,2.6.0c1 version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-04 09:08:33-05:00,18000,2015-06-04 09:08:33-05:00,18000,True,False,['__init__.py'],['cf1432683265bc2e232ec8f060171be7ef0bc1b3'],1,1,2,1,,,
db9bf9b7973441282217a03001dbbcb8b6c0d8a5,Fix cassandra.protocol API docs,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-04 09:57:51-05:00,18000,2015-06-04 09:57:51-05:00,18000,True,False,['protocol.rst'],['0dc0d584de0a8201ea249572cbf33a6b589e7fdc'],2,8,10,1,,,
48ec3ebee2bfecefb1689f1864da063dd115128c,Correct release version in changelog,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-04 11:35:43-05:00,18000,2015-06-04 11:35:43-05:00,18000,True,False,['CHANGELOG.rst'],['db9bf9b7973441282217a03001dbbcb8b6c0d8a5'],1,1,2,1,,,
f5c8aa952255c6196c6acfeec448889915305172,Post release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-04 11:59:13-05:00,18000,2015-06-04 11:59:13-05:00,18000,True,False,['__init__.py'],['48ec3ebee2bfecefb1689f1864da063dd115128c'],1,1,2,1,,,
be0333626bf1c20a0ea85f359035d69b59efca2d,Add custom_payload to Session.execute doc annotation,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-04 13:04:17-05:00,18000,2015-06-04 13:04:17-05:00,18000,True,False,['cluster.rst'],['f5c8aa952255c6196c6acfeec448889915305172'],2,2,4,1,,,
088a546e5281096a9628b07ec2a5602793bc5db2,"Write timeouts being ignored with 0 responses

DowngradingConsistencyRetryPolicy was ignoring write timeouts for
WriteTypes SIMPLE, BATCH and COUNTER even if responses received
was equal to 0.
It is valid to ignore the failure only if at least one response was
received.",Ricardo Sancho,ricardo.sancho@ist.utl.pt,Ricardo Sancho,ricardo.sancho@ist.utl.pt,2015-06-06 11:41:31+01:00,-3600,2015-06-06 11:41:31+01:00,-3600,True,False,"['policies.py', 'test_policies.py']",['be0333626bf1c20a0ea85f359035d69b59efca2d'],1,9,10,2,0.0,0.0,1.0
b48944ec61a83b4a914da803c187a526cf8a7982,"Remove warning on missing blist

Warning is not required, especially since benchmarks show the pure
Python impl is faster for most core use cases.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-08 08:54:09-05:00,18000,2015-06-08 08:54:09-05:00,18000,True,False,['util.py'],['be0333626bf1c20a0ea85f359035d69b59efca2d'],7,0,7,1,,,
015a0e18efef8a06d218028c189d373dcf52b3c1,"Automatically downgrading protocol version on control connection

PYTHON-240",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-08 17:45:26-05:00,18000,2015-06-09 08:26:31-05:00,18000,True,False,"['cluster.py', 'connection.py', 'asyncorereactor.py', 'eventletreactor.py', 'geventreactor.py', 'libevreactor.py', 'twistedreactor.py', 'protocol.py', 'test_asyncorereactor.py', 'test_libevreactor.py', 'test_twistedreactor.py', 'test_connection.py']",['b48944ec61a83b4a914da803c187a526cf8a7982'],165,178,343,12,1.0,1.0,0.7777777777777778
7abad89169c213e1edc1e9cc03625afa3aa041d6,"Change return conversion for murmur3 ext

PYTHON-331
Fixes an issue where the hash value was cast to a four-byte type on some
platforms.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-09 12:21:07-05:00,18000,2015-06-09 12:21:07-05:00,18000,True,False,['murmur3.c'],['b48944ec61a83b4a914da803c187a526cf8a7982'],1,1,2,1,,,
57f3b0f6a70d7fe7cf0c8272301e8cee9d1dc244,Don't default to TokenAware LBP is murmur3 ext. is not present.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-10 10:14:05-05:00,18000,2015-06-10 10:14:05-05:00,18000,True,False,['cluster.py'],['b48944ec61a83b4a914da803c187a526cf8a7982'],2,4,6,1,1.0,1.0,1.0
0ca97eaf4335f7a89b133ecdcfe9e7dab1419733,"cqle: deprecate cqle.columns.TimeUUID.from_datetime

Prefer utility function in core instead.
Resolves an issue with rounding in the cqle function, manifesting on Windows
PYTHON-341",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-10 10:14:36-05:00,18000,2015-06-10 10:14:36-05:00,18000,True,False,['columns.py'],['57f3b0f6a70d7fe7cf0c8272301e8cee9d1dc244'],24,4,28,1,1.0,0.0,0.0
04b69b96d348e9313d6c4727719ea2c5f98cdc8b,"Don't wait for schema agreement during startup.

Fixes an issue where connect will stall when connecting to mixed version
clusters.
Should not affect model consistency since we are already registered for
schema_change events.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-10 11:18:50-05:00,18000,2015-06-10 11:18:50-05:00,18000,True,False,"['cluster.py', 'test_cluster.py']",['b48944ec61a83b4a914da803c187a526cf8a7982'],5,2,7,2,1.0,0.0,0.0
434014e355ae3a4a8ba24838c131786ae7fb4645,"Refactor socket creation to Connection base

PYTHON-322
Fixes an issue where AsyncoreConnection could not be used with SSL in
Python 2.6 (ssl did not implement connect_ex).
Refactored socket connect to common routine, and simplified
AsyncoreConnection by using that and initializing the dispatcher with
the connected socket.
Also adds ssl support to EventletConnection.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-10 17:14:18-05:00,18000,2015-06-10 17:14:18-05:00,18000,True,False,"['connection.py', 'asyncorereactor.py', 'eventletreactor.py', 'geventreactor.py', 'libevreactor.py', 'twistedreactor.py']",['b48944ec61a83b4a914da803c187a526cf8a7982'],140,55,195,6,1.0,1.0,1.0
2b3a72efcc47479a7bd3adef3a522d6550047ae1,"cqle: use integer division for converting timedelta to seconds

Emulates the timedelta.total_seconds() function in python 2.7+",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-11 11:47:08-05:00,18000,2015-06-11 11:47:08-05:00,18000,True,False,['functions.py'],['2967bc7ca84e484107d0fe4d141856b60a891212'],1,4,5,1,,,
b47cbd627924fc574660fa81c67b175f733b98d1,cqle: Update docs reflecting new 2.6 compatibility,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-11 11:49:34-05:00,18000,2015-06-11 11:49:34-05:00,18000,True,False,"['README.rst', 'index.rst']",['2b3a72efcc47479a7bd3adef3a522d6550047ae1'],3,1,4,2,,,
2f6d11208e76bcf8975f4b08129254b2bc165e24,"cqle: Make integration tests run in Python 2.6

PYTHON-288",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-11 16:33:20-05:00,18000,2015-06-11 16:33:20-05:00,18000,True,False,"['columns.py', 'functions.py', 'base.py', 'test_container_columns.py', 'test_counter_column.py', 'test_static_column.py', 'test_validation.py', 'test_value_io.py', '__init__.py', 'test_compaction_settings.py', 'test_management.py', 'test_equality_operations.py', 'test_model.py', 'test_model_io.py', 'test_udts.py', 'test_base_operator.py', 'test_batch_query.py', 'test_datetime_queries.py', 'test_queryoperators.py', 'test_queryset.py', 'test_updates.py', 'test_assignment_clauses.py', 'test_assignment_statement.py', 'test_base_statement.py', 'test_insert_statement.py', 'test_select_statement.py', 'test_update_statement.py', 'test_where_clause.py', 'test_batch_query.py', 'test_ifnotexists.py', 'test_load.py', 'test_timestamp.py', 'test_transaction.py', 'tox.ini']",['b47cbd627924fc574660fa81c67b175f733b98d1'],256,280,536,34,0.0,0.0,0.0
09f258bdba2710a016cf134336adbac77f22d35b,"Make tox only install unittest2 in python2.6

fixes some issues around test skipping caused by unittest2 in Python
2.7+",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-11 17:17:58-05:00,18000,2015-06-11 17:17:58-05:00,18000,True,False,['tox.ini'],['2f6d11208e76bcf8975f4b08129254b2bc165e24'],1,5,6,1,,,
d3c9d10a4fa8b9fededd6c3f0917887f01b24655,Make meta use CQL $$ quoting for Function body,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-11 17:38:43-05:00,18000,2015-06-11 17:38:43-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['09f258bdba2710a016cf134336adbac77f22d35b'],3,4,7,2,,,
b941b1a2f56f3c694ed27d164949e530b60c37a8,cqle: don't depend on iter order for model attr access test,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-11 17:42:50-05:00,18000,2015-06-11 17:42:50-05:00,18000,True,False,['test_model_io.py'],['09f258bdba2710a016cf134336adbac77f22d35b'],1,1,2,1,,,
d101d3ce60a0abe77cccba3fc5cde42f640e23c7,cqle test: improve value comparison for reading model values,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-12 10:02:19-05:00,18000,2015-06-12 10:02:19-05:00,18000,True,False,['test_model_io.py'],['b941b1a2f56f3c694ed27d164949e530b60c37a8'],1,1,2,1,,,
5ea3f2242fc5af974d4fe119e04f05c4ff8e2ace,doc: add note about not blocking in future callbacks,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-12 10:28:00-05:00,18000,2015-06-12 10:28:00-05:00,18000,True,False,['cluster.py'],['d101d3ce60a0abe77cccba3fc5cde42f640e23c7'],0,5,5,1,,,
f2403d0380cee0a0b670d26784b055c392aa6dca,cqle doc: deprecated TimeUUID.from_datetime,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-12 10:40:44-05:00,18000,2015-06-12 10:40:44-05:00,18000,True,False,"['columns.py', 'columns.rst', 'upgrade_guide.rst']",['5ea3f2242fc5af974d4fe119e04f05c4ff8e2ace'],1,11,12,3,,,
fa1cb6809377f9f41643d4e44fb986ef94f2c692,Windows testing support and stabilizations,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-06-12 16:16:19-07:00,25200,2015-06-12 16:16:19-07:00,25200,True,False,"['__init__.py', '__init__.py', 'test_validation.py', 'test_udts.py', 'test_queryset.py', 'test_consistency.py', 'test_failure_types.py', 'test_ipv6.py', 'test_loadbalancingpolicies.py', 'test_schema.py', 'utils.py', 'test_cluster.py', 'test_concurrent.py', 'test_metadata.py', 'test_metrics.py', 'test_query.py', 'test_types.py', 'test_udts.py', 'test_load.py', 'test_multi_inserts.py', 'test_asyncorereactor.py', 'test_libevreactor.py', 'test_time_util.py']",['f2403d0380cee0a0b670d26784b055c392aa6dca'],254,347,601,23,0.64,1.0,0.22666666666666666
b4a13d4bf0f34702fdd721f1a4bb27e4079e172c,Cqlengine fixes to skip tests properly,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-06-12 17:24:55-07:00,25200,2015-06-12 17:24:55-07:00,25200,True,False,"['test_validation.py', 'test_management.py', 'test_model_io.py', 'test_udts.py', 'test_queryset.py']",['0c23abd439a3170ba196af0bc8a435ac07ef6e6b'],37,52,89,5,0.8571428571428571,1.0,1.0
b3027786239ec1c397aa7b4e06a5b157f8f07f44,"Set models.DEFAULT_KEYSPACE when calling set_session()

Sets the default keyspace for cqlengine models when passing in an
existing session to cqlengine.connection.set_session() if the session's
keyspace is set and models.DEFAULT_KEYSPACE isn't. Without this, the
user will see an error when trying to perform Cassandra interactions
with a Model instance like ""Keyspace none does not exist"" unless they
explicitly set models.DEFAULT_KEYSPACE themselves ahead of time or have
a __keyspace__ attribute set on the model.
Also no longer raising an exception in cqlengine.connection.setup() if
default_keyspace isn't set since individual models might still have
__keyspace__ set.",Mike Okner,mike@mikeokner.com,Mike Okner,mike@mikeokner.com,2015-06-12 14:30:47-05:00,18000,2015-06-15 14:38:09-05:00,18000,True,False,['connection.py'],['1b7d7eb1f82c5155ef53d1c8218919351792f9b0'],3,5,8,1,1.0,1.0,1.0
be6337ee82fa30a53cd873e88d07838a8a3d0932,"Do not try to access an empty token map.

Fixes an issue where multiple queries, with routing key set, to a
keyspace without tokens_to_hosts, would raise a key error.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-15 15:32:53-05:00,18000,2015-06-15 15:32:53-05:00,18000,True,False,['metadata.py'],['1b7d7eb1f82c5155ef53d1c8218919351792f9b0'],12,12,24,1,,,
beb14443d4688cc2c126afe91c193d127f5d1eed,Adding integration tests for protocol negotiation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-06-15 18:19:58-05:00,18000,2015-06-15 18:19:58-05:00,18000,True,False,['test_cluster.py'],['015a0e18efef8a06d218028c189d373dcf52b3c1'],1,37,38,1,1.0,1.0,1.0
2f3e0424698c1e8593ba3ef44169d68bd16e6038,Adding basic integration test for PYTHON-322,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-06-16 15:48:59-05:00,18000,2015-06-16 15:48:59-05:00,18000,True,False,"['cassandra.crt', 'driver_ca_cert.pem', 'keystore.jks', 'test_ssl.py']",['434014e355ae3a4a8ba24838c131786ae7fb4645'],0,127,127,4,1.0,1.0,1.0
0b6e25077b80747161ad759675b0a51944b20a47,Updating protocol negotiation for better validation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-06-17 09:38:55-05:00,18000,2015-06-17 09:38:55-05:00,18000,True,False,['test_cluster.py'],['beb14443d4688cc2c126afe91c193d127f5d1eed'],6,12,18,1,0.0,1.0,1.0
3315da86e68ad47638b253a8ddbf1da499ae9fe5,"Remove superfluous schema retry in CC connect

Now that we're not waiting for agreement in the first place, this retry
should not be needed.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-17 09:46:52-05:00,18000,2015-06-17 09:46:52-05:00,18000,True,False,['cluster.py'],['84769eac7c58b25e1fbc8c1afc924e03eb4cd276'],3,0,3,1,1.0,0.0,0.0
37cc21fd063ee9258db322ed0ec39edbc1b0633f,Make benchmark setup/teardown use minimal protocol version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-17 10:47:22-05:00,18000,2015-06-17 10:47:22-05:00,18000,True,False,['base.py'],['b1f2a4e5834197a2851da4a0bfd4e94786e44ad3'],2,2,4,1,,,
675e287a427c699c24b8ea24050519a7c7d858a6,"Explicitly import gevent.sll in reactor impl

Fixes an issue where ssl is not available at the package level,
depending on what has executed thus far.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-17 13:02:32-05:00,18000,2015-06-17 13:02:32-05:00,18000,True,False,['geventreactor.py'],['37cc21fd063ee9258db322ed0ec39edbc1b0633f'],1,2,3,1,,,
df41a349f5a0883683be5ce1f543c5243caeb4b8,retry cluster connection in SSL test,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-06-17 18:51:15-07:00,25200,2015-06-17 18:51:15-07:00,25200,True,False,['test_ssl.py'],['2880a6f84a3bc4b0fa9de7d85da89babfdcf0804'],28,28,56,1,0.0,1.0,1.0
2cb42b307b3dd5b3b4bec7239cd8b7bc3039db47,"benchmarks: Raise log level for cassandra package

Reduce node discovery noise in default output.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-18 11:29:20-05:00,18000,2015-06-18 11:29:20-05:00,18000,True,False,['base.py'],['d29d1db809759ed1206cc7ba52b17509530f5be6'],0,2,2,1,,,
d7929bcd2e0a865c758d001578d36cb3cbff5fbf,more fixes for jenkins test stabilization,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-06-18 16:50:54-07:00,25200,2015-06-18 16:50:54-07:00,25200,True,False,"['test_failure_types.py', 'test_ssl.py', 'test_cluster.py', 'test_metadata.py']",['2cb42b307b3dd5b3b4bec7239cd8b7bc3039db47'],8,21,29,4,1.0,1.0,0.0
93331e0e2243a3d21d3cd515757ce8ebadb7047d,a few more test stabilizations,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-06-18 18:58:44-07:00,25200,2015-06-18 18:58:44-07:00,25200,True,False,"['test_types.py', 'test_udts.py']",['d776b1ed054691409f815aea996d7ee6ace1d188'],13,13,26,2,,,
ee2243c217e6ada6275845f3cb8f5c3f8a7e8e7b,"Revert ""Revert ""Merge pull request #298 from datastax/PYTHON-108""""

This reverts commit dfa91b8bd5d6dcfe13ce3f4caf4eb721a7dd3d18.

Conflicts:
	cassandra/cluster.py
	cassandra/connection.py
	cassandra/io/asyncorereactor.py
	cassandra/io/eventletreactor.py
	cassandra/io/geventreactor.py
	cassandra/io/libevreactor.py
	cassandra/io/twistedreactor.py
	cassandra/query.py",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-19 10:08:48-05:00,18000,2015-06-19 10:10:17-05:00,18000,True,False,"['cluster.py', 'connection.py', 'asyncorereactor.py', 'eventletreactor.py', 'geventreactor.py', 'libevreactor.py', 'libevwrapper.c', 'twistedreactor.py', 'query.py', 'object_mapper.rst', 'test_connection.py', 'test_response_future.py']",['da7727b905d186d71fc77bac460bb95410a0cc4b'],196,460,656,12,1.0,1.0,0.90625
f779da72d8374c7306ccdf81cc731af2a5323381,"For callback chaining, use old pattern of no-timeouts

Avoids the overhead of timer management when using the callback chaining
pattern.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-19 13:01:10-05:00,18000,2015-06-19 13:01:10-05:00,18000,True,False,"['callback_full_pipeline.py', 'concurrent.py']",['ee2243c217e6ada6275845f3cb8f5c3f8a7e8e7b'],3,3,6,2,,,
a327ab13a56077e007f4f74de99b950b99d66f73,micro-optimize no timer case,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-19 13:12:02-05:00,18000,2015-06-19 13:12:02-05:00,18000,True,False,"['connection.py', 'libevreactor.py']",['f779da72d8374c7306ccdf81cc731af2a5323381'],25,20,45,2,0.0,0.0,0.0
1ffd5190a77e59f15c1037c70ce60872b85d07b9,"For meta export, don't copy in default min/max compaction thresholds

Fixes an issue where table meta export would contain min/max_threshold
settings, even for compaction strategies that do not accept those.
Resulting CQL would cause ""ConfigurationException ... code=2300 ...
Properties specified [min_threshold, max_threshold] are not
understood by [some compaction strategy]""",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-22 09:55:06-05:00,18000,2015-06-22 09:55:06-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['da7727b905d186d71fc77bac460bb95410a0cc4b'],19,38,57,2,1.0,1.0,1.0
22b92df9f970784968abdd4eed656a491f443c88,"Add protocol_hander_class to allow extension, serdes specialization",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-22 17:11:43-05:00,18000,2015-06-22 17:11:43-05:00,18000,True,False,"['cluster.py', 'connection.py', 'protocol.py', 'cluster.rst', 'protocol.rst', '__init__.py']",['a327ab13a56077e007f4f74de99b950b99d66f73'],82,151,233,6,0.16666666666666666,0.5,0.0
0acb459da2f05bc65f9e3243bfaa66ef6681f6a4,"Cluster._make_connection_kwargs accept overrides for internal defaults

Make CC use protocol.ProtocolHandler for internal connections, to avoid
specialized implementations.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-23 11:36:50-05:00,18000,2015-06-23 11:36:50-05:00,18000,True,False,['cluster.py'],['22b92df9f970784968abdd4eed656a491f443c88'],12,13,25,1,,,
59d4612aaccfbc56e530aff6ad4ef191c8bc0c94,"cqle: Update invalid inet test with a string that won't parse

Cassandra seems to be accepting various bad strings and inserting
'92.242.140.2' (for many different strings). Need to follow up on that.
Meanwhile, this string does induce an Invalid request.

Side note: I'm not sure this test is worth having, unless there is
supposed to be some kind of local validation. We're not testing the
server here.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-25 08:49:47-05:00,18000,2015-06-25 08:49:47-05:00,18000,True,False,['test_validation.py'],['7d53516c9b6fd8f39f9b42a7908900f0f9d3f017'],1,2,3,1,,,
08f768aa2230c50c546dcb877fce305740bdfe00,Changelog and release version update.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-25 08:52:41-05:00,18000,2015-06-25 08:52:41-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['59d4612aaccfbc56e530aff6ad4ef191c8bc0c94'],2,21,23,2,,,
1d9df6cafe2e0777647d76ca2d971234c37537d6,"Post release version update

also removing travis status widget until the install/setup can be
stabilized",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-25 09:01:25-05:00,18000,2015-06-25 09:01:25-05:00,18000,True,False,"['README.rst', '__init__.py']",['08f768aa2230c50c546dcb877fce305740bdfe00'],4,1,5,2,,,
0fca6e59a335bad455282f6661353348c9731b6f,"Multi-col COMPACT tables are incompatible if there are clustering cols

If there are not any clustering columns, a COMPACT STORAGE table can
have any number of non-PRIMARY KEY columns and still be CQL-compatible.

See: https://issues.apache.org/jira/browse/CASSANDRA-9647

Done for https://datastax-oss.atlassian.net/browse/PYTHON-360",Tyler Hobbs,tylerlhobbs@gmail.com,Tyler Hobbs,tylerlhobbs@gmail.com,2015-06-30 11:53:26-05:00,18000,2015-06-30 11:53:26-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['1d9df6cafe2e0777647d76ca2d971234c37537d6'],3,30,33,2,1.0,1.0,1.0
0a1e472ec45b66bb6309ca753643dd192911a42f,"Connection server_version property

Lazily queried, set preemptively whenever a topo query is performed.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-29 15:31:28-05:00,18000,2015-07-01 16:58:40-05:00,18000,True,False,"['cluster.py', 'connection.py']",['9f69d53af28cc81ed8511c2d1691eb6cc110126d'],2,16,18,2,0.8888888888888888,0.8888888888888888,0.8888888888888888
28f8887b992183f347bea76b3167cb8a485cca47,"Refactor schema query/build into cassandra.metadata

Changes in anticipation of supporting modernized schema tables
(CASSANDRA-6717)

- schema change response/events normalized according to protocol spec
  keywords
-- events propagate with intrinsic keywords
- Parsing is defined by connection server version
- option to specialize query/parsing by earlier server versions (not
  implemented -- currently just refactored current conditional logic)",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-01 10:58:22-05:00,18000,2015-07-01 16:58:40-05:00,18000,True,False,"['__init__.py', 'cluster.py', 'metadata.py', 'protocol.py', 'test_metadata.py', 'test_control_connection.py', 'test_metadata.py', 'test_response_future.py']",['0a1e472ec45b66bb6309ca753643dd192911a42f'],635,764,1399,8,1.0,1.0,1.0
c7690aaefa5e90e71576740f2a008e183fc32513,"Don't use change_type in schema refresh.

Was hoping to use change_type to avoid a query on DROPPED. However, this
introduces issues when the async drop event coincides with a create or
updatee on the same schema element.

Always querying makes sure the refresh sees the new element, assuming
schema agreement wait is enabled.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-01 14:14:05-05:00,18000,2015-07-01 16:58:40-05:00,18000,True,False,"['__init__.py', 'metadata.py']",['28f8887b992183f347bea76b3167cb8a485cca47'],20,19,39,2,1.0,0.0,1.0
483d7d366d44380c748aec01abe688e07a911f3e,Refactor common query row/build meta functionality,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-01 15:00:04-05:00,18000,2015-07-01 16:58:40-05:00,18000,True,False,['metadata.py'],['c7690aaefa5e90e71576740f2a008e183fc32513'],34,24,58,1,0.0,0.0,0.5555555555555556
179d0b6503028e54af6b4b5da509cce2e04fe21a,"integration test setup: use cluster meta instead of selecting directly.

Required for version-dependent schema parsing.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-01 16:44:41-05:00,18000,2015-07-01 16:58:40-05:00,18000,True,False,['__init__.py'],['483d7d366d44380c748aec01abe688e07a911f3e'],3,1,4,1,1.0,1.0,0.0
5c585e2304e9d987528742e88b999176623be1cd,"Initial SchemaParser for C* 3

- select from new 'system_schema' tables
- use new keyspaces 'replication' config map",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-01 16:45:46-05:00,18000,2015-07-01 16:58:40-05:00,18000,True,False,['metadata.py'],['179d0b6503028e54af6b4b5da509cce2e04fe21a'],21,28,49,1,1.0,1.0,1.0
5eb47f3dd2957ca50649d70fac85f703146dae29,format strings for Python 2.6 in test_udt integration test,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-07 13:52:19-05:00,18000,2015-07-07 13:52:19-05:00,18000,True,False,['test_udts.py'],['a327ab13a56077e007f4f74de99b950b99d66f73'],11,11,22,1,,,
a15dac726feb4e6c9b5ba2f1f387a9bcb46c267b,Make integration test_udts work in Python3,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-07 15:08:43-05:00,18000,2015-07-07 15:08:43-05:00,18000,True,False,['test_udts.py'],['5eb47f3dd2957ca50649d70fac85f703146dae29'],4,4,8,1,1.0,0.0,0.0
3cb1b603af7c538132315ca12bd82f2b9ea67a7a,Make integration test_custom_payload work in Python3,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-07 15:36:55-05:00,18000,2015-07-07 15:36:55-05:00,18000,True,False,['test_custom_payload.py'],['a15dac726feb4e6c9b5ba2f1f387a9bcb46c267b'],7,9,16,1,,,
858a26879c8f8ae2b3d7dba44fe4d5e5bbbd8501,Mkae integration test_client_warnings work in Python3,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-07 16:59:31-05:00,18000,2015-07-07 16:59:31-05:00,18000,True,False,['test_client_warnings.py'],['3cb1b603af7c538132315ca12bd82f2b9ea67a7a'],3,2,5,1,,,
9de29a76650c4198a86fe09a913d6594ff1f03af,Add optional cythonized core driver files.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-08 09:46:00-05:00,18000,2015-07-08 09:46:00-05:00,18000,True,False,"['.gitignore', 'marshal.py', 'setup.py']",['858a26879c8f8ae2b3d7dba44fe4d5e5bbbd8501'],10,27,37,3,1.0,1.0,1.0
d14c627a7683f56fdd305e02b737c9df3b9827ef,"Reorganize conditional extensions for windows

also, don't pass gcc-specific compile options when building cython modules for windows",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-08 11:56:59-05:00,18000,2015-07-08 11:56:59-05:00,18000,True,False,['setup.py'],['9de29a76650c4198a86fe09a913d6594ff1f03af'],22,19,41,1,,,
0ef3f6701d577e0f4d6a7e6753143bf485d674b6,"cqle: don't depend on position of keyword argument in mock call assertions

Makes tests more robust, and able to run when core is cythonized

Also removed autospec; autospec introspection introduced in Python 3.4
did not play well with cython method.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-09 11:49:14-05:00,18000,2015-07-09 11:49:14-05:00,18000,True,False,"['test_batch_query.py', 'test_queryset.py']",['d14c627a7683f56fdd305e02b737c9df3b9827ef'],16,16,32,2,,,
71342f6c9db6e1592620c438bf0cdc27eefc4a22,"Make tox unit tests run from alternate directory

Ensures that build, installed extensions are used, instead of relying on
what is inplace for the package under test.

This allows us to test differing combinations of optional extensions
(cython) without any assumptions about the local package state.

Also:
- consolidate py26 section and place unittest2 as conditional dep
- introduce conditional cython dep, based on env var",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-09 11:51:40-05:00,18000,2015-07-09 11:51:40-05:00,18000,True,False,['tox.ini'],['0ef3f6701d577e0f4d6a7e6753143bf485d674b6'],11,7,18,1,,,
aa328356605cfefe54903f8b1396b01befa85937,Add travis env configs to test optional cython extensions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-09 11:54:36-05:00,18000,2015-07-09 11:54:36-05:00,18000,True,False,['.travis.yml'],['71342f6c9db6e1592620c438bf0cdc27eefc4a22'],0,4,4,1,,,
376cb0c10c2a8a77eb4d7df944c18e314012aeef,print instead of warn when not building cython extensions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-09 12:44:49-05:00,18000,2015-07-09 12:44:49-05:00,18000,True,False,['setup.py'],['aa328356605cfefe54903f8b1396b01befa85937'],1,1,2,1,,,
5030c35d5312c55b238e191112ef586d53498329,release procedure: add step to update cassandra-test branch,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-09 14:12:48-05:00,18000,2015-07-09 14:12:48-05:00,18000,True,False,['README-dev.rst'],['9f69d53af28cc81ed8511c2d1691eb6cc110126d'],0,5,5,1,,,
e9719ae24ef4161ada02d8f8fbf41a3ed1df5cfc,"Swallow KeyErr for meta DROP updates with missing keyspace

Makes control connection robust against out-of-order async events when
it doesn't matter (if KS is already gone, sub-component is dropped).",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-09 16:07:39-05:00,18000,2015-07-09 16:07:39-05:00,18000,True,False,['metadata.py'],['a327ab13a56077e007f4f74de99b950b99d66f73'],7,13,20,1,1.0,1.0,0.0
5777c204698543e1c18870173a2b3417f668324e,"Attempt to process correlated events the order in which the arrive

Events are mostly processed in order. ""mostly"" because there is still a
race by way of the cluster thread pool executor. Meta class should be
robust against this.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-09 16:53:51-05:00,18000,2015-07-09 16:53:51-05:00,18000,True,False,"['cluster.py', 'metadata.py', 'test_control_connection.py']",['e9719ae24ef4161ada02d8f8fbf41a3ed1df5cfc'],17,28,45,3,1.0,1.0,0.0
fafb29d622d3baa79aef0cee96a5c8e03e27d3e8,"Limit mock dependency to version 1.0.1

1.1.0 dropped Python 2.6 support, and at least one call assert function
currently used by tests.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-10 09:52:48-05:00,18000,2015-07-10 09:52:48-05:00,18000,True,False,"['setup.py', 'test-requirements.txt', 'tox.ini']",['5777c204698543e1c18870173a2b3417f668324e'],3,3,6,3,,,
870d76946b90de2fdec887ac238ecf71f1145c20,"Limit mock dependency to version 1.0.1

1.1.0 dropped Python 2.6 support, and at least one call assert function
currently used by tests.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-10 09:52:48-05:00,18000,2015-07-10 10:07:15-05:00,18000,True,False,"['setup.py', 'test-requirements.txt', 'tox.ini']",['5030c35d5312c55b238e191112ef586d53498329'],3,3,6,3,,,
1f0c6c312bce36d0892e18725baace3a0ae02a28,"Limit mock dependency to version 1.0.1

1.1.0 dropped Python 2.6 support, and at least one call assert function
currently used by tests.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-10 09:52:48-05:00,18000,2015-07-10 10:12:31-05:00,18000,True,False,"['setup.py', 'test-requirements.txt', 'tox.ini']",['a327ab13a56077e007f4f74de99b950b99d66f73'],3,3,6,3,,,
6be945b6e9061ddf416970a398a7c2ae9355dced,"Initial version of generator-based concurrent executor

not fully tested",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-10 17:06:33-05:00,18000,2015-07-10 17:06:33-05:00,18000,True,False,['concurrent.py'],['1f0c6c312bce36d0892e18725baace3a0ae02a28'],6,80,86,1,1.0,0.8064516129032258,0.41935483870967744
6eebdebd64de676188f8c158f6b620b8dba9cbad,"Another iteration on updated schema

This version parses the new tables schema. API is a little messy -- I
would like to revisit that.

PYTHON-276",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-13 17:40:11-05:00,18000,2015-07-13 17:40:11-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['5c585e2304e9d987528742e88b999176623be1cd'],48,134,182,2,0.425531914893617,0.1702127659574468,0.3191489361702128
dc24bf1d0ea23c5a6713f3c30988c09446a8fa01,"schema meta: make sure columns added in key order

also modify table build based on compact static condition",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-14 11:26:10-05:00,18000,2015-07-14 11:26:10-05:00,18000,True,False,['metadata.py'],['6eebdebd64de676188f8c158f6b620b8dba9cbad'],13,32,45,1,0.0,0.0,0.0
46222fa5b01d98dd7a3413a545f6aa2a3d65df5b,"Allow generator for inputs and outputs of execute_concurrent

PYTHON-123",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-14 16:13:50-05:00,18000,2015-07-14 16:13:50-05:00,18000,True,False,['concurrent.py'],['6be945b6e9061ddf416970a398a7c2ae9355dced'],145,91,236,1,1.0,1.0,1.0
f7c0bd312df6ac105173969c8b57ee4b8bd9c664,"Enable C extensions on pypy and add pypy3 support

Conflicts:
	tox.ini",John Anderson,sontek@gmail.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-25 10:59:57-07:00,25200,2015-07-15 11:09:19-05:00,18000,True,False,"['murmur3.c', 'setup.py', 'tox.ini']",['376cb0c10c2a8a77eb4d7df944c18e314012aeef'],5,20,25,3,,,
e08fefc9822d7d8594262e2735fa79e80d6b59f7,Make tests.unit.io.test_twistedreactor work in Python3,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-15 14:48:43-05:00,18000,2015-07-15 14:48:43-05:00,18000,True,False,['test_twistedreactor.py'],['f7c0bd312df6ac105173969c8b57ee4b8bd9c664'],9,9,18,1,,,
cf7e6683d3c036b70e17de9fa187ec8e01bf7e6e,Whitelist murmur3 extension for PyPy runtime,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-15 15:15:08-05:00,18000,2015-07-15 15:15:08-05:00,18000,True,False,['setup.py'],['e08fefc9822d7d8594262e2735fa79e80d6b59f7'],5,16,21,1,,,
5391a206343deb129db34a252348f56f8c45a451,"Limit mock dependency to version 1.0.1

1.1.0 dropped Python 2.6 support, and at least one call assert function
currently used by tests.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-10 09:52:48-05:00,18000,2015-07-15 15:15:53-05:00,18000,True,False,"['setup.py', 'test-requirements.txt', 'tox.ini']",['cf7e6683d3c036b70e17de9fa187ec8e01bf7e6e'],3,3,6,3,,,
be47fce1c13a2c574a07bdef5dcead2d966acac7,"Make tox pypy commands use absolute path to unit tests

follows from new setdir",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-15 15:29:23-05:00,18000,2015-07-15 15:29:23-05:00,18000,True,False,['tox.ini'],['5391a206343deb129db34a252348f56f8c45a451'],4,2,6,1,,,
0d9cfbd77c2035ce091b032362ab33121cb938d1,Removed unused cassandra.protocol._message_types_by_name,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-15 16:47:55-05:00,18000,2015-07-15 16:47:55-05:00,18000,True,False,['protocol.py'],['0acb459da2f05bc65f9e3243bfaa66ef6681f6a4'],2,0,2,1,0.0,0.0,1.0
d5b7f9264295dd16345e09e843f2ca1fdb4428b5,Add pypy3 config to .travis.yml,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-16 11:16:17-05:00,18000,2015-07-16 11:16:17-05:00,18000,True,False,['.travis.yml'],['be47fce1c13a2c574a07bdef5dcead2d966acac7'],1,3,4,1,,,
ef07a9ec4826cc950574d496fa65d5b4488d068a,"Type code ""enum"" in protocol",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-16 11:48:48-05:00,18000,2015-07-16 11:48:48-05:00,18000,True,False,['protocol.py'],['0d9cfbd77c2035ce091b032362ab33121cb938d1'],28,30,58,1,,,
c9fb54ada1df6a7324c858818182ad04b542fb0a,Deeply nested tuples can cause a stack overflow on the C* when using small stack sizes. This manifested it's self with Java 8. Reducing the depth of nested tuples in the test to ensure we don't run into this problem.,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-07-16 11:49:58-05:00,18000,2015-07-16 11:49:58-05:00,18000,True,False,['test_types.py'],['1f0c6c312bce36d0892e18725baace3a0ae02a28'],3,3,6,1,,,
7dcabd744a419dd9b3b9345d3854373e0ade37e6,"Use real locks, not mocks, when dealing with threads in unit tests",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-16 14:35:21-05:00,18000,2015-07-16 14:35:21-05:00,18000,True,False,['test_host_connection_pool.py'],['ef07a9ec4826cc950574d496fa65d5b4488d068a'],3,3,6,1,,,
ab9f690707b6a1a76dbd6521e907bfdf7283d8c4,Isolate custom protocol handling to client requests.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-16 15:13:19-05:00,18000,2015-07-16 15:18:56-05:00,18000,True,False,"['cluster.py', 'connection.py', 'asyncorereactor.py', 'eventletreactor.py', 'geventreactor.py', 'libevreactor.py', 'twistedreactor.py', 'test_twistedreactor.py', 'test_connection.py', 'test_response_future.py']",['7dcabd744a419dd9b3b9345d3854373e0ade37e6'],58,61,119,10,1.0,0.5,1.0
49357dec114fad411f6b712dda4fa5ddc3e72736,"Simplify logic in Downgrading write timeout, and test",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-16 16:08:47-05:00,18000,2015-07-16 16:08:47-05:00,18000,True,False,"['policies.py', 'test_policies.py']",['be479b95d6a779eb32dbdf2e903e815ac83c91d4'],13,15,28,2,1.0,0.0,0.0
53c17166642c018446aa42d6eab2a9329fa9f184,"cqlengine example tweaks

moved import, added a LWT example, set schema management var to avoid
warning",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-17 13:46:16-05:00,18000,2015-07-17 13:46:16-05:00,18000,True,False,['example_mapper.py'],['870d76946b90de2fdec887ac238ecf71f1145c20'],7,21,28,1,0.0,0.0,1.0
1a480f196ade42798596f5257d2cbeffcadf154f,Test updates removing refs to schema tables.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-17 16:14:30-05:00,18000,2015-07-17 16:14:30-05:00,18000,True,False,"['test_cluster.py', 'test_types.py']",['dc24bf1d0ea23c5a6713f3c30988c09446a8fa01'],6,5,11,2,,,
b95bb9fefd5b53d85eaf20c7f92dfd68108e6f9c,2.6 changelog update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-20 12:45:46-05:00,18000,2015-07-20 12:45:46-05:00,18000,True,False,['CHANGELOG.rst'],['53c17166642c018446aa42d6eab2a9329fa9f184'],0,8,8,1,,,
536d7c36ee69ebb7273edfbe78babd40849e620a,2.6.0 release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-20 12:48:56-05:00,18000,2015-07-20 12:48:56-05:00,18000,True,False,['__init__.py'],['b95bb9fefd5b53d85eaf20c7f92dfd68108e6f9c'],1,1,2,1,,,
64c95a7ab1453dd56759b08d42cd1ae8e0292f4a,"doc: remove rtype from util functions

was being used as x-ref and linking into cqlengine attributes",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-20 13:54:23-05:00,18000,2015-07-20 13:54:23-05:00,18000,True,False,['util.py'],['536d7c36ee69ebb7273edfbe78babd40849e620a'],8,0,8,1,,,
0dfcbcabf6dbb720eb27fcdf8b84936571a8c0fc,post release version update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-20 14:15:39-05:00,18000,2015-07-20 14:15:39-05:00,18000,True,False,['__init__.py'],['64c95a7ab1453dd56759b08d42cd1ae8e0292f4a'],1,1,2,1,,,
f7ef27e006c72049fd99a25db61f8a31f1997907,"Adding timer tests for async, libev, and twisted. Added integration tests. All for PYTHON-108",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-07-02 18:02:29-05:00,18000,2015-07-20 17:16:36-05:00,18000,True,False,"['__init__.py', 'test_failure_types.py', 'eventlet_utils.py', 'gevent_utils.py', 'test_asyncorereactor.py', 'test_eventletreactor.py', 'test_geventreactor.py', 'test_libevreactor.py', 'test_libevtimer.py', 'test_twistedreactor.py', 'utils.py', 'tox.ini']",['1f0c6c312bce36d0892e18725baace3a0ae02a28'],18,632,650,12,0.8165137614678899,0.926605504587156,0.8761467889908257
ea27ef120176c7ee13f6a61026e3a949193f7790,Adding tests for python-313,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-07-15 16:49:14-05:00,18000,2015-07-20 18:05:51-05:00,18000,True,False,"['test_custom_protocol_handler.py', 'tox.ini']",['ab9f690707b6a1a76dbd6521e907bfdf7283d8c4'],1,219,220,2,0.7435897435897436,0.8461538461538461,0.7692307692307693
3b7f879514cc472eee56683113e6e29b30c2a0b6,Adding Extended SSL tests for client authentication,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-06-26 17:25:08-05:00,18000,2015-07-20 19:31:02-05:00,18000,True,False,"['driver_ca_cert.pem', 'python_driver.crt', 'python_driver.jks', 'python_driver.key', 'python_driver.pem', 'python_driver_bad.pem', 'python_driver_no_pass.key', 'server_cert.pem', 'server_keystore.jks', 'server_trust.jks', 'test_ssl.py']",['1d9df6cafe2e0777647d76ca2d971234c37537d6'],10,252,262,11,0.2033898305084746,1.0,1.0
04bbff3d3b5666636de94edb9c33549bb0043af6,"Unlock while yielding execute concurrent generator results

Fixes an issue where the event thread could be held up on the executor
lock while the client thread waits for a paged result to return.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-21 14:54:24-05:00,18000,2015-07-21 14:54:24-05:00,18000,True,False,['concurrent.py'],['cee1a8c2ad619b0a65dabf18b00d2f518e8c51d2'],0,2,2,1,1.0,0.0,1.0
791f44c6ddd7eac44013e887e38c6f21de4d5dd7,Adding unit and integration tests for PYTHON-123.,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-07-20 14:19:47-05:00,18000,2015-07-21 15:48:15-05:00,18000,True,False,"['test_concurrent.py', 'test_concurrent.py']",['04bbff3d3b5666636de94edb9c33549bb0043af6'],4,310,314,2,0.6917293233082706,0.6917293233082706,0.706766917293233
17f2bc13c2fda731e9de8217790730b151f962ec,"Unit-tests CQLengine's previous value tracking.

Test previous_value of an already-persisted object as well as one that
was just instanciated.

Refs PYTHON-348.",Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2015-07-22 15:10:54+02:00,-7200,2015-07-22 15:10:54+02:00,-7200,True,False,['test_model_io.py'],['a2366a2b09d8b625628e5acf2db66bd61c482db3'],0,74,74,1,0.0,1.0,1.0
03d20d28cdb04f64035165a08bb93c203bc1a4ba,"don't build embedded extensions for gevent in tox

config was failing on these for some reason

also, not bothering with eventlet dep since it can't run without monkey
patching",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-22 11:58:49-05:00,18000,2015-07-22 11:58:49-05:00,18000,True,False,['tox.ini'],['d8a2d15dd19527ebc3203007304416496638ef8a'],2,3,5,1,,,
94b8f4d15dd6def3d600e1e6a329a4f81d3984c5,"doc: Add smallint, tinyint to getting started types table",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-22 14:48:33-05:00,18000,2015-07-22 14:48:33-05:00,18000,True,False,['getting_started.rst'],['e0ecfa6f7d057594022db6c1c001809c8e8a4cef'],0,2,2,1,,,
33e9a99627878e448b8ca40dce71c8a61cb071c8,"Remove unused CassandraType init, validate",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-17 13:34:48-05:00,18000,2015-07-22 15:08:42-05:00,18000,True,False,"['cqltypes.py', 'test_types.py', 'test_util_types.py']",['94b8f4d15dd6def3d600e1e6a329a4f81d3984c5'],209,149,358,3,1.0,0.0,0.0
6056b36bc8b92cc106576af44c25ebae0a524eec,"for RoundRobin return iterator instead of materialized list

Most of time, only first element will be consumed.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-17 14:29:25-05:00,18000,2015-07-22 15:08:42-05:00,18000,True,False,['policies.py'],['33e9a99627878e448b8ca40dce71c8a61cb071c8'],1,1,2,1,,,
c4abf2031325df100e202f9e71e7d03b09d2080a,Changing tests to be cross python compatible,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-07-22 16:18:54-05:00,18000,2015-07-22 16:36:30-05:00,18000,True,False,"['test_custom_protocol_handler.py', 'test_concurrent.py']",['94b8f4d15dd6def3d600e1e6a329a4f81d3984c5'],6,8,14,2,,,
8afd853ae984bd5ef0fd2369dbd7d2a7c604e01f,Add typecodes to module with Cython-compatible .pxd file,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-07-23 15:43:57+01:00,-3600,2015-07-23 15:43:57+01:00,-3600,True,False,"['protocol.py', 'typecodes.pxd', 'typecodes.py']",['2e75b467a779c31d8fd122933bccde2e9165217e'],31,93,124,3,,,
f0b360a9c718b5d7c74604788a6092870242efcb,Cythonize marshalling code,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-07-23 15:45:28+01:00,-3600,2015-07-23 15:45:28+01:00,-3600,True,False,"['marshal.pxd', 'marshal.pyx']",['8afd853ae984bd5ef0fd2369dbd7d2a7c604e01f'],0,230,230,2,,,
ad7e4e08481b8cd48c5724256c955604713101eb,Start on Cython version of ProtocolHandler,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-07-23 15:47:04+01:00,-3600,2015-07-23 15:47:04+01:00,-3600,True,False,"['bytesio.pxd', 'bytesio.pyx', 'cython_protocol_handler.pyx']",['f0b360a9c718b5d7c74604788a6092870242efcb'],0,217,217,3,,,
39af4e15698081348dc97acdcaa4ffcd284f6ae2,Add Cython modules to setup.py,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-07-23 16:03:23+01:00,-3600,2015-07-23 16:03:23+01:00,-3600,True,False,"['bytesio.pyx', 'cython_protocol_handler.pyx', 'marshal.pyx', 'setup.py']",['ad7e4e08481b8cd48c5724256c955604713101eb'],5,6,11,4,,,
92457198cca1a3832455fbefcc81e3fed351b33d,Use return type void for swap_order,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-07-23 16:18:19+01:00,-3600,2015-07-23 16:18:19+01:00,-3600,True,False,['marshal.pyx'],['39af4e15698081348dc97acdcaa4ffcd284f6ae2'],1,1,2,1,,,
fe67aec185f63576e093d82a0491789a64301467,Make sure swap_order uses no PyObjects,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-07-23 16:27:17+01:00,-3600,2015-07-23 16:27:17+01:00,-3600,True,False,['marshal.pyx'],['92457198cca1a3832455fbefcc81e3fed351b33d'],2,2,4,1,,,
2b7997830a3073a2e73942d36f2e3b22f7443a6c,Check endianness before byte-swapping,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-07-23 16:31:44+01:00,-3600,2015-07-23 16:33:18+01:00,-3600,True,False,['marshal.pyx'],['fe67aec185f63576e093d82a0491789a64301467'],9,11,20,1,,,
d3f7c17674f8263860c1b7acffb53629ac01c77e,"izip values in BoundStatement.bind

small optimization",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-20 11:51:10-05:00,18000,2015-07-23 12:42:30-05:00,18000,True,False,['query.py'],['6056b36bc8b92cc106576af44c25ebae0a524eec'],1,1,2,1,,,
c87159b6be399732e5614afcac4379cee8b8cf67,"Optimize Connection._read_frame_header

no seek, read in-place",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-20 11:51:38-05:00,18000,2015-07-23 12:42:30-05:00,18000,True,False,['connection.py'],['d3f7c17674f8263860c1b7acffb53629ac01c77e'],10,15,25,1,1.0,1.0,0.0
fad1535b5d37e4c5fadc0812c172fc81d749548d,construct new IO buffer with remainder of previous,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-20 12:39:00-05:00,18000,2015-07-23 12:42:30-05:00,18000,True,False,['connection.py'],['c87159b6be399732e5614afcac4379cee8b8cf67'],3,1,4,1,0.0,0.0,0.0
5e69140c990f38371ae78da6147deb65e17e2bef,Adding integration and unit tests for PYTHON-358,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-07-23 19:18:02-05:00,18000,2015-07-24 10:33:50-05:00,18000,True,False,"['test_control_connection.py', 'test_control_connection.py']",['2e75b467a779c31d8fd122933bccde2e9165217e'],0,112,112,2,0.6595744680851063,1.0,1.0
5a22bf816267b1e9713f75eabf0c666418de3be6,connection._Frame equality function to fix unit test,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-24 11:46:57-05:00,18000,2015-07-24 11:46:57-05:00,18000,True,False,['connection.py'],['fad1535b5d37e4c5fadc0812c172fc81d749548d'],6,17,23,1,1.0,0.0,1.0
4764b341d5a269e6183816e8f6823a437f38212f,Fix Connection._read_fram_header update for Python3,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-24 12:50:46-05:00,18000,2015-07-24 12:50:46-05:00,18000,True,False,['connection.py'],['5a22bf816267b1e9713f75eabf0c666418de3be6'],1,6,7,1,1.0,1.0,1.0
4a79c748319f6dc477f7bccf7cb4da42ce1f6d3e,cython as optional extra for setup,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-24 14:10:38-05:00,18000,2015-07-24 14:10:38-05:00,18000,True,False,['setup.py'],['0de2ed119308858766cd0619f23000c6ef07ab78'],0,1,1,1,0.0,1.0,1.0
f2e9bb36b96947739c29f9392daa69292f563df7,"Upate performance notes doc: +cython, -numbers

remove outdated, specific numbers

Having numbers for contrived workloads sometimes confuses people or
leads to impressions of false claims.

Unified benchmarks at DataStax will replace these.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-24 16:26:46-05:00,18000,2015-07-24 16:26:46-05:00,18000,True,False,['performance.rst'],['4a79c748319f6dc477f7bccf7cb4da42ce1f6d3e'],271,28,299,1,,,
6a00db265bd25fe4e87d8b2164164b836bd7b7e2,Fix a typo in cqlengine query docs,Ash Hoover,strixcuriosus@gmail.com,Ash Hoover,strixcuriosus@gmail.com,2015-07-24 15:45:45-07:00,25200,2015-07-24 15:45:45-07:00,25200,True,False,['query.rst'],['f2e9bb36b96947739c29f9392daa69292f563df7'],1,1,2,1,,,
8c79bc5d6030e0371d9ece42930d97fb84a64231,added doxyfile for Doxygen,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-07-27 16:35:48-07:00,25200,2015-07-27 16:35:48-07:00,25200,True,False,['doxyfile_python'],['a10c4e628f1b25ff1d1f88326836567d93c35397'],0,2337,2337,1,,,
81ff98efc2cdc6cb256789806ff5bbbdd3c46e90,Start on pluggable row parsers (e.g. tuple vs numpy record),Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-07-29 10:38:15+01:00,-3600,2015-07-29 10:38:15+01:00,-3600,True,False,"['bytesio.pyx', 'cython_protocol_handler.pyx', 'datatypes.pxd', 'datatypes.pyx', 'ioutils.pyx', 'marshal.pyx', 'rowparser.pxd', 'rowparser.pyx', 'setup.py']",['2b7997830a3073a2e73942d36f2e3b22f7443a6c'],108,318,426,9,,,
1a6534b575b3b8f19a81f3f88a9583807b5cacc3,(Optional) NumPy row parser,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,markflorisson88@gmail.com,2015-07-30 17:02:27+01:00,-3600,2015-07-30 17:02:27+01:00,-3600,True,False,"['datatypes.pxd', 'datatypes.pyx', 'marshal.pyx', 'numpyparser.pyx', 'util.py']",['81ff98efc2cdc6cb256789806ff5bbbdd3c46e90'],29,158,187,5,,,
7796a9e9cb95a897e03606c5da4726a75bac68cd,Some more work on NumPy row parsing and array allocation,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,markflorisson88@gmail.com,2015-07-30 17:51:49+01:00,-3600,2015-07-30 17:51:49+01:00,-3600,True,False,['numpyparser.pyx'],['1a6534b575b3b8f19a81f3f88a9583807b5cacc3'],35,64,99,1,,,
c7c50c973de4f6924fd99060fe40d8118c3b995a,Fix wrong attribute access,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,markflorisson88@gmail.com,2015-07-30 17:58:21+01:00,-3600,2015-07-30 17:58:21+01:00,-3600,True,False,['numpyparser.pyx'],['7796a9e9cb95a897e03606c5da4726a75bac68cd'],1,1,2,1,,,
ed4efd2a66b5631dfa814d502f255db3a3364848,Disable use of deprecated NumPy API,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,markflorisson88@gmail.com,2015-07-30 17:59:01+01:00,-3600,2015-07-30 17:59:01+01:00,-3600,True,False,['numpyFlags.h'],['c7c50c973de4f6924fd99060fe40d8118c3b995a'],0,1,1,1,,,
43779022eceb7921973c01976a642a14a223f8cb,Clean up some Cython deserialization code,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,markflorisson88@gmail.com,2015-07-31 10:32:53+01:00,-3600,2015-07-31 10:32:53+01:00,-3600,True,False,"['cython_protocol_handler.pyx', 'numpyparser.pyx', 'objparser.pxd', 'objparser.pyx']",['ed4efd2a66b5631dfa814d502f255db3a3364848'],24,10,34,4,,,
b65ea0b9794a70d3535134915e783bd7b0cc6f68,Add lazy and list-based column deserializers,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,markflorisson88@gmail.com,2015-07-31 13:37:16+01:00,-3600,2015-07-31 13:37:16+01:00,-3600,True,False,"['cython_protocol_handler.pyx', 'objparser.pxd', 'objparser.pyx']",['43779022eceb7921973c01976a642a14a223f8cb'],23,89,112,3,,,
7fbc6aa731eca509e19d739e6277de6a09f2bcc9,Some fixes to numpy and object deserializers,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,markflorisson88@gmail.com,2015-07-31 15:51:20+01:00,-3600,2015-07-31 15:51:20+01:00,-3600,True,False,"['cython_protocol_handler.pyx', 'datatypes.pxd', 'datatypes.pyx', 'numpyparser.pyx', 'objparser.pxd', 'objparser.pyx', 'parsing.pxd', 'parsing.pyx']",['b65ea0b9794a70d3535134915e783bd7b0cc6f68'],139,157,296,8,,,
51e090cc61a4a2ace3772556a109ac1968602d30,Experiment with various optimizations,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,markflorisson88@gmail.com,2015-07-31 17:49:24+01:00,-3600,2015-07-31 17:49:24+01:00,-3600,True,False,"['datatypes.pyx', 'marshal.pyx', 'numpyparser.pyx']",['7fbc6aa731eca509e19d739e6277de6a09f2bcc9'],42,41,83,3,,,
d2f673f78d4930cc7cfab5bf0e5a19befc11daeb,"First attempt at fixing previous value tracking.

I reused the global '_is_persisted' flag on models to tell the value
manager about the origin of the previous value. Previous value is kept
aligned to the provided value only if the model instance is persisted,
else it is reset to None.

If I succeed, I propose to rename 'previous_value' to 'persisted_value'
then.",Kevin Deldycke,kdeldycke@ocs.online.net,Kevin Deldycke,kdeldycke@ocs.online.net,2015-08-03 20:38:35+02:00,-7200,2015-08-03 20:38:35+02:00,-7200,True,False,"['columns.py', 'models.py', 'usertype.py']",['17f2bc13c2fda731e9de8217790730b151f962ec'],18,18,36,3,1.0,0.5,0.0
7d67dbfd26121f3d3d9a2d10bd44b1669227e6e3,Warn once for deprecated ResponseFuture.result timeout,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-03 14:17:49-05:00,18000,2015-08-03 14:17:49-05:00,18000,True,False,['cluster.py'],['f830925ad9bc7109113474e944bf2ca395c8d09b'],1,4,5,1,0.0,0.0,1.0
24e03f7f1409b7edb7b5f96025159c83608d6710,Clean up some old code,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-04 10:56:28+01:00,-3600,2015-08-04 10:56:28+01:00,-3600,True,False,"['bytesio.pyx', 'cython_protocol_handler.pyx', 'ioutils.pyx']",['51e090cc61a4a2ace3772556a109ac1968602d30'],120,0,120,3,,,
e671354ebfa887d9dafcea24819ae529aa0a52c8,Improve error handling for deserialization,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-04 11:11:56+01:00,-3600,2015-08-04 11:11:56+01:00,-3600,True,False,"['bytesio.pxd', 'bytesio.pyx', 'ioutils.pyx', 'numpyparser.pyx', 'objparser.pyx']",['24e03f7f1409b7edb7b5f96025159c83608d6710'],21,16,37,5,,,
9a72f8d5cddffd8a5e8e3dc5878683623079535e,Start on unit tests for Cython code,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-04 14:21:39+01:00,-3600,2015-08-04 14:21:39+01:00,-3600,True,False,"['bytesio.pyx', 'datatypes.pyx', 'setup.py', '__init__.py', 'bytesio_testhelper.pyx', 'dummy_module.pyx', 'test_bytesio.py', 'utils.py']",['e671354ebfa887d9dafcea24819ae529aa0a52c8'],28,85,113,8,1.0,1.0,1.0
27e3505ececf009dd915b0c299036ed54e45aa6d,Fix some issues with integration tests,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-04 14:41:02+01:00,-3600,2015-08-04 14:41:02+01:00,-3600,True,False,"['__init__.py', '__init__.py']",['9a72f8d5cddffd8a5e8e3dc5878683623079535e'],1,7,8,2,,,
99dea50c735d2ca3296f20ee0bbc208de5a4e881,Add cython protocol integration test,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-04 16:50:29+01:00,-3600,2015-08-04 16:50:29+01:00,-3600,True,False,"['.gitignore', 'test_custom_protocol_handler.py', 'test_cython_protocol_handlers.py']",['27e3505ececf009dd915b0c299036ed54e45aa6d'],40,82,122,3,1.0,1.0,1.0
5996aa622da9dc3404bd1bdefbc0d941595e8a6e,Some fixes to cython integration test,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-04 17:29:23+01:00,-3600,2015-08-04 17:29:23+01:00,-3600,True,False,"['test_custom_protocol_handler.py', 'test_cython_protocol_handlers.py']",['99dea50c735d2ca3296f20ee0bbc208de5a4e881'],9,8,17,2,0.0,0.0,0.0
2fbf695efe5e7f536658672be6fb12e86f1021a8,"At pool level, only signal connection failure once per connection

Makes defuncting more efficient when there are many concurrent requests.

Also corrects signalling semantics - only accrue one connection error
per instance (not one per requests * instance).",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-04 14:22:10-05:00,18000,2015-08-04 14:22:10-05:00,18000,True,False,"['connection.py', 'pool.py']",['7d67dbfd26121f3d3d9a2d10bd44b1669227e6e3'],9,15,24,2,0.0,0.0,1.0
1a01f118240e5d9af009653cfff80cdb67ee0999,"Only start timer if request is actually issued.

PYTHON-367

Prevents unnecessary expansion of the timer heap during full outage,
preventing resource explosion for pathological applications.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-04 16:49:53-05:00,18000,2015-08-04 16:49:53-05:00,18000,True,False,['cluster.py'],['2fbf695efe5e7f536658672be6fb12e86f1021a8'],2,7,9,1,1.0,1.0,1.0
519230292e9878812ea30262ed39f12f46c5783b,"Optionally error callbacks in thread when defuncting connections

Prevents the event loop thread from being tied up too long when there
are many concurrent requests on a broken connection.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-04 16:51:49-05:00,18000,2015-08-04 16:51:49-05:00,18000,True,False,"['connection.py', 'test_host_connection_pool.py']",['1a01f118240e5d9af009653cfff80cdb67ee0999'],3,30,33,2,0.0,1.0,1.0
1879d9be31a0faa32e90780f26c016b328b7ea6c,Start on deserializers for cqltypes,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-05 18:42:40+01:00,-3600,2015-08-05 18:42:40+01:00,-3600,True,False,"['buffer.pxd', 'buffer.pyx', 'bytesio.pxd', 'cython_protocol_handler.pyx', 'datatypes.pxd', 'datatypes.pyx', 'deserializers.pxd', 'deserializers.pyx', 'ioutils.pyx', 'marshal.pyx', 'numpyparser.pyx', 'objparser.pyx', 'parsing.pxd']",['5996aa622da9dc3404bd1bdefbc0d941595e8a6e'],95,185,280,13,,,
ae7c4b2e81ba35f455f80b67d5fa109b88b541b7,Forgot to add test utility module,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-05 18:49:19+01:00,-3600,2015-08-05 18:49:19+01:00,-3600,True,False,['utils.py'],['1879d9be31a0faa32e90780f26c016b328b7ea6c'],0,46,46,1,1.0,1.0,1.0
d667b16e36f647ed69ad212234421ee86c4c19f2,"Update README.rst

This asterisk is no longer needed. It was for a footnote that was deleted in b47cbd627924fc574660fa81c67b175f733b98d1",Jeremy Schlatter,jeremy.schlatter@gmail.com,Jeremy Schlatter,jeremy.schlatter@gmail.com,2015-08-05 10:51:00-07:00,25200,2015-08-05 10:51:00-07:00,25200,True,False,['README.rst'],['b574111d67ac2e78b133ca5ab9ead4d86848ae00'],1,1,2,1,,,
26ef8682244fcafb573f841ba7b43551725bb078,Some small fixes to deserializers,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-05 20:09:06+01:00,-3600,2015-08-05 20:09:06+01:00,-3600,True,False,['deserializers.pyx'],['ae7c4b2e81ba35f455f80b67d5fa109b88b541b7'],4,7,11,1,,,
ddeb7536623ebbd916c0d5af4130e99742578d99,Some more small fixes,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-05 20:21:31+01:00,-3600,2015-08-05 20:21:31+01:00,-3600,True,False,"['numpyparser.pyx', 'objparser.pyx', 'parsing.pxd', 'parsing.pyx']",['26ef8682244fcafb573f841ba7b43551725bb078'],11,5,16,4,,,
d97562d506b035e3072f83cbd8d88a4c73be54f7,"Pure python murmur3 fallback initial implementation

TBD:
- Python 3
- Possibly some profiling and optimization",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-05 15:54:54-05:00,18000,2015-08-05 15:54:54-05:00,18000,True,False,"['murmur3.c', 'murmur3.py', 'setup.py']",['a10c4e628f1b25ff1d1f88326836567d93c35397'],278,121,399,3,0.16216216216216217,0.16216216216216217,1.0
bb788957f09660cc2e955506098364cd452f6dbe,"Add missing cmurmur3.c, update .gitignore",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-05 17:30:59-05:00,18000,2015-08-05 17:30:59-05:00,18000,True,False,"['.gitignore', 'cmurmur3.c']",['d97562d506b035e3072f83cbd8d88a4c73be54f7'],1,276,277,2,0.5185185185185185,0.5185185185185185,0.48148148148148145
e78bd4c48b2a21b665491339d7d7191a40470ada,"Update for Python 3

just using struct; arrays had no discernable performance advantage in
this case",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-05 17:34:07-05:00,18000,2015-08-05 17:34:07-05:00,18000,True,False,['murmur3.py'],['bb788957f09660cc2e955506098364cd452f6dbe'],24,15,39,1,0.0,0.0,0.0
2d8ad6ad3a53fd22e16302e03334a4dd8f5fe6b7,More Cython-based object deserializers,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-06 13:45:23+01:00,-3600,2015-08-06 13:45:23+01:00,-3600,True,False,"['buffer.pxd', 'buffer.pyx', 'cython_protocol_handler.pyx', 'cython_utils.pyx', 'deserializers.pxd', 'deserializers.pyx', 'ioutils.pyx', 'marshal.pyx', 'parsing.pxd']",['ddeb7536623ebbd916c0d5af4130e99742578d99'],74,275,349,9,,,
88c380a7b37a0e1eced36bbe5b7d662c75835fe2,"Protect singular partition key name in composite key CQL output

PYTHON-375",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-06 09:07:51-05:00,18000,2015-08-06 09:07:51-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['cc5b650f6aaf55872cfa322f4b248143e03d138b'],8,20,28,2,1.0,1.0,1.0
4725abccc27751ee1a9c8056a4430f13f5d0cfec,"Update tests to cover both cmurmur3 and pure python impl

Also fix key inputs to use proper binary type for pypy3",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-06 09:41:37-05:00,18000,2015-08-06 09:41:37-05:00,18000,True,False,['test_metadata.py'],['e78bd4c48b2a21b665491339d7d7191a40470ada'],11,44,55,1,1.0,1.0,1.0
758ab324db1a2fc6848a2aef232caec03a9f5c89,Add Cython-based MapType deserializer,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-06 15:51:51+01:00,-3600,2015-08-06 15:51:51+01:00,-3600,True,False,"['cqltypes.py', 'deserializers.pyx']",['2d8ad6ad3a53fd22e16302e03334a4dd8f5fe6b7'],60,112,172,2,,,
e2820de2ba8e6760eb86ab22344b40bc9b4fc20f,Add Cython-based tuple deserializer,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-06 16:19:57+01:00,-3600,2015-08-06 16:19:57+01:00,-3600,True,False,"['deserializers.pyx', 'objparser.pyx']",['758ab324db1a2fc6848a2aef232caec03a9f5c89'],3,55,58,2,,,
80c5a1931d664e8fa01784d93d48fefbce9a6114,Simply UserType deserialization in cqltypes.py,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-06 18:02:50+01:00,-3600,2015-08-06 18:02:50+01:00,-3600,True,False,['cqltypes.py'],['e2820de2ba8e6760eb86ab22344b40bc9b4fc20f'],21,1,22,1,1.0,1.0,1.0
e160ec11d7a20b1757404e66c3e20c74676c7f56,Abstract over CPython tuple API,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-06 18:18:19+01:00,-3600,2015-08-06 18:18:19+01:00,-3600,True,False,['tuple.pxd'],['80c5a1931d664e8fa01784d93d48fefbce9a6114'],0,27,27,1,,,
9e3dbcb034282c22d9c836eab19eec5bc54eeb35,Use cleaner tuple API,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-06 18:21:50+01:00,-3600,2015-08-06 18:21:50+01:00,-3600,True,False,"['deserializers.pyx', 'objparser.pyx']",['e160ec11d7a20b1757404e66c3e20c74676c7f56'],28,6,34,2,,,
a7887a17ebebcc69b713768f1d828f0143f0d8bf,Composite type deserialization,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-06 18:31:44+01:00,-3600,2015-08-06 18:31:44+01:00,-3600,True,False,['deserializers.pyx'],['9e3dbcb034282c22d9c836eab19eec5bc54eeb35'],9,55,64,1,,,
74fa1ad4736c44d2ff81c7651929ac26d87dad68,Deserialization for ReveredType and FrozenType,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-06 18:37:12+01:00,-3600,2015-08-06 18:37:12+01:00,-3600,True,False,['deserializers.pyx'],['a7887a17ebebcc69b713768f1d828f0143f0d8bf'],6,20,26,1,,,
ddebc448529372a0b65a0d99b0cc50844a1d250c,Minor code cleanup,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-06 18:57:32+01:00,-3600,2015-08-06 18:57:32+01:00,-3600,True,False,['cython_utils.pyx'],['74fa1ad4736c44d2ff81c7651929ac26d87dad68'],7,0,7,1,,,
333b3c585cb6580342aef895656268d2a808a4df,3.0.0a1 version update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-06 13:41:19-05:00,18000,2015-08-06 13:41:19-05:00,18000,True,False,['__init__.py'],['dc24bf1d0ea23c5a6713f3c30988c09446a8fa01'],1,1,2,1,,,
3393c23baa2696c12d7e206c72369fcae8c0733c,post release version update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-06 13:44:13-05:00,18000,2015-08-06 13:44:13-05:00,18000,True,False,['__init__.py'],['333b3c585cb6580342aef895656268d2a808a4df'],1,1,2,1,,,
07b22a35d575dacdd89d52d83b1ebb3cce41e71f,"Limit mock dependency to version 1.0.1

1.1.0 dropped Python 2.6 support, and at least one call assert function
currently used by tests.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-07-10 09:52:48-05:00,18000,2015-08-06 14:01:57-05:00,18000,True,False,"['setup.py', 'test-requirements.txt', 'tox.ini']",['3f45da9a60a37f1188af35d5b166c44e139be21f'],3,3,6,3,,,
2f4a2d480fd9e97982a5b0dfc8ebfcc7b3472d19,Take more care with empty and negative sizes of binary data,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-06 21:45:07+01:00,-3600,2015-08-06 21:45:07+01:00,-3600,True,False,"['cython_protocol_handler.pyx', 'deserializers.pxd', 'deserializers.pyx', 'ioutils.pyx', 'numpyparser.pyx', 'objparser.pyx']",['ddebc448529372a0b65a0d99b0cc50844a1d250c'],114,74,188,6,,,
7ce8e3a3c17450589dc253b3387053cd8c6efa5e,Use Cython-based deserializers whenever available,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-06 21:45:49+01:00,-3600,2015-08-06 21:45:49+01:00,-3600,True,False,"['cython_deps.py', 'protocol.py', 'rowparser.pyx', 'test_cython_protocol_handlers.py']",['2f4a2d480fd9e97982a5b0dfc8ebfcc7b3472d19'],12,102,114,4,0.19047619047619047,1.0,1.0
e4e98e7e9fb30dac5815c05c0d008ab37dec2986,Some small optimizations to deserializers,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-06 21:59:07+01:00,-3600,2015-08-06 21:59:07+01:00,-3600,True,False,['deserializers.pyx'],['7ce8e3a3c17450589dc253b3387053cd8c6efa5e'],4,7,11,1,,,
a3c73f6670e34ec96423b213b2a14e78fb96ec24,Forgot to initialize datetime C API,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-07 09:22:33+01:00,-3600,2015-08-07 09:22:33+01:00,-3600,True,False,"['cython_utils.pyx', 'deserializers.pyx']",['e4e98e7e9fb30dac5815c05c0d008ab37dec2986'],5,12,17,2,,,
56a25df0fce5d438a06042e7072c1ee3ddf85d43,Don't lose out on microseconds when creating datetime,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-07 10:16:47+01:00,-3600,2015-08-07 10:16:47+01:00,-3600,True,False,"['cython_utils.pyx', 'deserializers.pyx', 'test_container_columns.py']",['a3c73f6670e34ec96423b213b2a14e78fb96ec24'],8,8,16,3,0.0,1.0,1.0
8462e865f7c2d089884aa061b39275323605f43a,Squash little bug in cython decimal deserializer,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-07 10:38:16+01:00,-3600,2015-08-07 10:38:16+01:00,-3600,True,False,"['deserializers.pyx', 'marshal.pyx']",['56a25df0fce5d438a06042e7072c1ee3ddf85d43'],1,7,8,2,,,
0cec7fef76287f710bab39b3bb2888b4621a5ad3,Some more small bug fixes to Cython-based deserializers,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-07 12:03:54+01:00,-3600,2015-08-07 12:03:54+01:00,-3600,True,False,"['deserializers.pyx', 'test_queryset.py']",['8462e865f7c2d089884aa061b39275323605f43a'],2,11,13,2,,,
e4e0e219ee8123e42dc032483bb3bd036535a064,Forgot pxd file for cython_utils,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-07 14:22:58+01:00,-3600,2015-08-07 14:22:58+01:00,-3600,True,False,['cython_utils.pxd'],['0cec7fef76287f710bab39b3bb2888b4621a5ad3'],0,2,2,1,,,
f31772e8778bc23cc3102f01c58f9fa95037284a,Fix bug in integration test test_types,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-07 14:55:49+01:00,-3600,2015-08-07 14:55:54+01:00,-3600,True,False,['util.py'],['e4e0e219ee8123e42dc032483bb3bd036535a064'],2,5,7,1,1.0,1.0,1.0
302d7ab1d1a517d5a5669bf25e90c371c087634e,Forgot to initialize flags in string types to support empty strings,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-07 15:34:06+01:00,-3600,2015-08-07 15:34:06+01:00,-3600,True,False,['deserializers.pyx'],['f31772e8778bc23cc3102f01c58f9fa95037284a'],0,9,9,1,,,
0baf6965204c15a27d34d4ef9973e1662f9a624e,Fix use of next() in test_concurrent,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-07 15:46:04+01:00,-3600,2015-08-07 15:46:04+01:00,-3600,True,False,['test_concurrent.py'],['302d7ab1d1a517d5a5669bf25e90c371c087634e'],1,3,4,1,,,
f3e2295457fd19099d32f897114dc37d2dfb2269,Python 3 compatibility for stress tests,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-07 16:12:06+01:00,-3600,2015-08-07 16:12:06+01:00,-3600,True,False,['test_multi_inserts.py'],['0baf6965204c15a27d34d4ef9973e1662f9a624e'],1,1,2,1,,,
3b6b720c4be2a84d815a768c86ac4209603ed8cb,Be more careful how optional values are decoded,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-07 17:06:30+01:00,-3600,2015-08-07 17:06:30+01:00,-3600,True,False,"['deserializers.pxd', 'ioutils.pyx', 'test_updates.py']",['f3e2295457fd19099d32f897114dc37d2dfb2269'],26,36,62,3,,,
9d0a17c7fabd2f37d4c90c3377d5f2e334a4230d,"exec concurrent gen: reacquire lock no matter what

resolves a (non-impactful) RuntimeError emitted if a generator is
collected without having been consumed",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-07 16:37:39-05:00,18000,2015-08-07 16:37:39-05:00,18000,True,False,['concurrent.py'],['88c380a7b37a0e1eced36bbe5b7d662c75835fe2'],5,7,12,1,1.0,0.0,1.0
e5cd4a742802295bfc71c462e878cb7cbfa32f22,"Minor cleanup in integration...test_concurrent.py

Update next for Python 3
Assert generator throws stop
remove unused variables in a couple tests",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-07 16:39:30-05:00,18000,2015-08-07 16:39:30-05:00,18000,True,False,['test_concurrent.py'],['9d0a17c7fabd2f37d4c90c3377d5f2e334a4230d'],3,3,6,1,1.0,0.0,0.0
53b2b48f582b2079b48b5336a06aeb97089fe042,Be more careful when Cython is available but NumPy is not,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-08 12:28:53+01:00,-3600,2015-08-08 12:28:53+01:00,-3600,True,False,"['cython_deps.py', 'protocol.py', 'utils.py']",['3b6b720c4be2a84d815a768c86ac4209603ed8cb'],13,18,31,3,,,
0b81f4068bdeb9d09259b0db255660e13e12b1fd,"Forgot BytesDeserializer, fix small empty string issue",Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-08 12:31:53+01:00,-3600,2015-08-08 12:31:53+01:00,-3600,True,False,['deserializers.pyx'],['53b2b48f582b2079b48b5336a06aeb97089fe042'],15,16,31,1,,,
8d45880acb5834275708b358bfa4304455e04b00,Python 3 compatibility for test_schema,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-08 12:39:05+01:00,-3600,2015-08-08 12:39:05+01:00,-3600,True,False,['test_schema.py'],['0b81f4068bdeb9d09259b0db255660e13e12b1fd'],4,4,8,1,,,
edd5463e7b56a805a1b4eaa86cc6ccdbbfc8fad2,Add test to illustrate non-deterministic query test failure,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-08 12:55:20+01:00,-3600,2015-08-08 12:55:20+01:00,-3600,True,False,['test_query.py'],['8d45880acb5834275708b358bfa4304455e04b00'],2,7,9,1,1.0,1.0,1.0
c8dfc48ff231e0b9793965790c623daa9402f482,More comprehensive cython and numpy deserializer tests,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-08 15:58:53+01:00,-3600,2015-08-08 15:58:58+01:00,-3600,True,False,"['numpyparser.pyx', 'test_custom_protocol_handler.py', 'test_cython_protocol_handlers.py', 'utils.py', 'utils.py']",['edd5463e7b56a805a1b4eaa86cc6ccdbbfc8fad2'],44,114,158,5,0.5555555555555556,0.6388888888888888,0.1111111111111111
919ece20f3710289a161bd92841bbbe642e7ce28,Small performance optimization,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-10 10:50:30+01:00,-3600,2015-08-10 10:50:30+01:00,-3600,True,False,"['deserializers.pyx', 'numpyparser.pyx']",['c8dfc48ff231e0b9793965790c623daa9402f482'],4,14,18,2,,,
07327ea91586a04ac4a93cfb9b4387a59d59b194,Clean up setup.py,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-10 13:34:56+01:00,-3600,2015-08-10 13:34:56+01:00,-3600,True,False,['setup.py'],['919ece20f3710289a161bd92841bbbe642e7ce28'],9,5,14,1,,,
8d28473695e2be14e77e9db190fe73fd18a3baa2,Remove leftover dummy module,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-10 13:37:10+01:00,-3600,2015-08-10 13:37:10+01:00,-3600,True,False,['dummy_module.pyx'],['07327ea91586a04ac4a93cfb9b4387a59d59b194'],2,0,2,1,,,
d71b6e769c87025582adc2842cadaee6a434eb91,Disable non-cython extension modules,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-10 20:19:12+01:00,-3600,2015-08-10 20:19:12+01:00,-3600,True,False,['setup.py'],['8d28473695e2be14e77e9db190fe73fd18a3baa2'],8,8,16,1,,,
40422563492b8c94ef13add47d77f96f4dc92ff1,Do boundschecking when accessing buffer memory,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-10 20:20:00+01:00,-3600,2015-08-10 20:20:00+01:00,-3600,True,False,"['buffer.pxd', 'cython_marshal.pyx', 'deserializers.pyx', 'ioutils.pyx', 'marshal.pxd', 'objparser.pyx']",['d71b6e769c87025582adc2842cadaee6a434eb91'],127,121,248,6,,,
564d2fdd0fa54194f189abb3eef2c5993084d743,Make sure to propagate exceptions from unpacking functions,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-10 21:33:54+01:00,-3600,2015-08-10 21:33:54+01:00,-3600,True,False,"['cython_marshal.pyx', 'deserializers.pyx']",['40422563492b8c94ef13add47d77f96f4dc92ff1'],26,40,66,2,,,
4956b12acace35e0db7718e9e5632fb1a978d896,Include Cython sources in sdist,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-11 11:19:48+01:00,-3600,2015-08-11 11:19:48+01:00,-3600,True,False,['MANIFEST.in'],['564d2fdd0fa54194f189abb3eef2c5993084d743'],0,1,1,1,,,
93df7945d09eec8976ad7fa6d9d8e4e4dfc4190e,"test: Make results verification use CL.ALL

Fixes intermittent fail in  BatchStatementTests.test_no_parameters due
to eventual consistency.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-11 10:47:07-05:00,18000,2015-08-11 10:47:07-05:00,18000,True,False,['test_query.py'],['e5cd4a742802295bfc71c462e878cb7cbfa32f22'],1,4,5,1,1.0,1.0,1.0
d91731734c26392b0fd1655912ae3c7adf4fd931,Clean up some leftover code,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-11 21:04:18+01:00,-3600,2015-08-11 21:04:18+01:00,-3600,True,False,"['buffer.pxd', 'cython_marshal.pyx', 'cython_utils.pyx', 'deserializers.pyx', 'numpyparser.pyx', 'typecodes.py', 'utils.py']",['4956b12acace35e0db7718e9e5632fb1a978d896'],117,18,135,7,,,
2a568d1ebb967b406ebd63a8414a3e527470c6da,Use underscore to break up long module names,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-11 21:09:53+01:00,-3600,2015-08-11 21:09:53+01:00,-3600,True,False,"['numpy_parser.pyx', 'obj_parser.pyx', 'protocol.py', 'row_parser.pyx', 'type_codes.pxd', 'type_codes.py']",['d91731734c26392b0fd1655912ae3c7adf4fd931'],9,9,18,6,,,
9240c71c02c27a6f20c73870a92ccdafab238df7,Add license to top of new files,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-11 21:20:45+01:00,-3600,2015-08-11 21:20:45+01:00,-3600,True,False,"['buffer.pxd', 'bytesio.pxd', 'bytesio.pyx', 'cython_utils.pyx', 'deserializers.pxd', 'deserializers.pyx', 'ioutils.pyx', 'numpy_parser.pyx', 'obj_parser.pyx', 'parsing.pxd', 'parsing.pyx', 'protocol.py', 'row_parser.pyx', 'tuple.pxd', 'type_codes.pxd', 'util.py', '__init__.py', 'bytesio_testhelper.pyx', 'test_bytesio.py', 'utils.py']",['2a568d1ebb967b406ebd63a8414a3e527470c6da'],7,264,271,20,,,
02be9f441ae4731d3247120084b9b2d3003732ee,Add some API documentation for Cython-based deserializers,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-11 21:30:32+01:00,-3600,2015-08-11 21:30:32+01:00,-3600,True,False,"['protocol.py', 'protocol.rst']",['9240c71c02c27a6f20c73870a92ccdafab238df7'],1,15,16,2,,,
0924df80d8a8bbff9c69cef3feb6840a34d9b8e3,Also include .pxd files in sdist,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-11 21:34:50+01:00,-3600,2015-08-11 21:34:50+01:00,-3600,True,False,['MANIFEST.in'],['02be9f441ae4731d3247120084b9b2d3003732ee'],0,1,1,1,,,
c821333fb721ffb96e1456604c985c584aa02cc0,Re-enable cythonized pure-python modules,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-11 21:38:00+01:00,-3600,2015-08-11 21:38:00+01:00,-3600,True,False,['setup.py'],['0924df80d8a8bbff9c69cef3feb6840a34d9b8e3'],8,8,16,1,,,
dd76d15b5db5d24214e5e7457bff6fd4b6841599,Remove leftover TODO comments,Mark Florisson,markflorisson88@gmail.com,Mark Florisson,markflorisson88@gmail.com,2015-08-11 21:41:48+01:00,-3600,2015-08-11 21:41:48+01:00,-3600,True,False,['protocol.py'],['c821333fb721ffb96e1456604c985c584aa02cc0'],2,0,2,1,,,
282143d7df90188a78147a38714f4ecda3b1a0ec,test: Another UDF config option introduced in C* 3.0,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-11 16:15:28-05:00,18000,2015-08-11 16:15:28-05:00,18000,True,False,['__init__.py'],['07b22a35d575dacdd89d52d83b1ebb3cce41e71f'],0,2,2,1,0.0,0.0,0.0
3e8621f0925964c71dc457e64c720c43682589d6,schema 3.0: 2i moved to distinct schema table,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-11 16:16:01-05:00,18000,2015-08-11 16:16:01-05:00,18000,True,False,['metadata.py'],['282143d7df90188a78147a38714f4ecda3b1a0ec'],35,154,189,1,0.40540540540540543,1.0,0.581081081081081
fade6487e9d859e087be067d7a375b82bfa3eeca,Add cython unit tests to sdist,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-12 10:40:08+01:00,-3600,2015-08-12 10:40:08+01:00,-3600,True,False,['MANIFEST.in'],['dd76d15b5db5d24214e5e7457bff6fd4b6841599'],0,1,1,1,,,
1f985cf1a1e2f821e57a44f2b2a2e83b93a03c46,Fix typo in import,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-12 12:13:09+01:00,-3600,2015-08-12 12:13:09+01:00,-3600,True,False,"['cython_deps.py', 'deserializers.pyx']",['fade6487e9d859e087be067d7a375b82bfa3eeca'],2,4,6,2,,,
ccc7c8b19ee8895ebf85050a7d37e644c71e6b83,Reduce some noise in valgrind,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2015-08-12 14:28:25+01:00,-3600,2015-08-12 14:28:25+01:00,-3600,True,False,['deserializers.pyx'],['1f985cf1a1e2f821e57a44f2b2a2e83b93a03c46'],2,3,5,1,,,
18e20f9637e7055d2698c504e511a18ca8061411,"Raise exception for unexpected ResultMessage ""kind""",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-12 13:10:03-05:00,18000,2015-08-12 13:10:03-05:00,18000,True,False,['protocol.py'],['93df7945d09eec8976ad7fa6d9d8e4e4dfc4190e'],0,2,2,1,0.0,0.0,0.0
85595e235bdc47fbab6710d64a4daf210c0c2f0b,Better error message for message decoding exceptions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-12 13:10:32-05:00,18000,2015-08-12 13:10:32-05:00,18000,True,False,['connection.py'],['18e20f9637e7055d2698c504e511a18ca8061411'],2,6,8,1,1.0,1.0,1.0
90a797eeb9b1c3592d6aab8352acfc329fd82f0d,"schema 3.0: ""index_options"" --> ""options""",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-12 14:07:06-05:00,18000,2015-08-12 14:07:06-05:00,18000,True,False,['metadata.py'],['3e8621f0925964c71dc457e64c720c43682589d6'],1,1,2,1,,,
677c351cff16ac5cf64068460d6b93732140429d,murmur3: add some code comments following peer review,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-12 15:55:12-05:00,18000,2015-08-12 15:55:12-05:00,18000,True,False,['murmur3.py'],['4725abccc27751ee1a9c8056a4430f13f5d0cfec'],0,3,3,1,,,
7efd95b85e9f15a7ba7df85a4b905ed7bbc4c148,Typo.,Kevin Deldycke,kevin@deldycke.com,Kevin Deldycke,kevin@deldycke.com,2015-08-13 11:32:11+02:00,-7200,2015-08-13 11:32:11+02:00,-7200,True,False,['columns.py'],['d3117b3bb731d859e1966b572a37d1a35ac595f5'],1,1,2,1,,,
e25035318e2bd1295c4c771654fede3fc2cbc3e2,"Cython required for setup

Abandoning Cython 'extra' in favor of getting it during setup.

As an extra, there was no way of making sure it is present while the
driver build is executed.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-13 17:06:10-05:00,18000,2015-08-13 17:06:10-05:00,18000,True,False,"['setup.py', 'tox.ini']",['e75e667e77776004216a937c636630a2cc661a26'],4,4,8,2,1.0,0.0,0.0
133e597d7e01552f01a0990db50fba7d1d3529f5,"pyximport for test helper cython extensions

Allows cython extension to be built for unit tests without having it in
the setup.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-13 19:00:38-05:00,18000,2015-08-13 19:00:38-05:00,18000,True,False,"['setup.py', 'utils.py', 'tox.ini']",['e25035318e2bd1295c4c771654fede3fc2cbc3e2'],1,5,6,3,,,
fdf577c33f5f05558b543978fd5f6b98804696af,travis-ci: Switch CYTHON_DEP tox env for setup env var,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-14 09:00:07-05:00,18000,2015-08-14 09:00:07-05:00,18000,True,False,"['.travis.yml', 'libevreactor.py']",['133e597d7e01552f01a0990db50fba7d1d3529f5'],10,8,18,2,1.0,1.0,0.0
c8d38436685ce23f5ad0948a0b2c9b7592c926b1,"Revert ""travis-ci: Switch CYTHON_DEP tox env for setup env var""

This reverts commit fdf577c33f5f05558b543978fd5f6b98804696af.
(inadvertently included other changes, now separating)",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-14 09:26:57-05:00,18000,2015-08-14 09:26:57-05:00,18000,True,False,"['.travis.yml', 'libevreactor.py']",['fdf577c33f5f05558b543978fd5f6b98804696af'],8,10,18,2,0.0,0.0,1.0
341e63146666ace93a49d0b7378bbda3416237bf,travis-ci: Switch CYTHON_DEP tox env for setup env var,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-14 09:28:25-05:00,18000,2015-08-14 09:28:25-05:00,18000,True,False,['.travis.yml'],['c8d38436685ce23f5ad0948a0b2c9b7592c926b1'],8,8,16,1,,,
8d36b5ca14690d519a3d1048db44aec6cf278401,"Do not del libev IO wrappers while thread is still running

fixes an issue where the runtime would occasionally segfault when
exiting without cluster shutdown. This is because the IO object was
deacllocated while the thread was running and might still enter the IO
callback.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-14 09:28:34-05:00,18000,2015-08-14 09:28:34-05:00,18000,True,False,['libevreactor.py'],['341e63146666ace93a49d0b7378bbda3416237bf'],2,0,2,1,1.0,1.0,0.0
c21b5a69f54d7ae43f5490a4a11e4ed58439334e,"refactor setup.py to generate extensions on build_ext

This ensures that Cython is installed (setup_requires) ahead of trying
to import Cython...cythonize",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-14 12:19:57-05:00,18000,2015-08-14 12:19:57-05:00,18000,True,False,['setup.py'],['8d36b5ca14690d519a3d1048db44aec6cf278401'],94,87,181,1,0.0,0.05,1.0
1bf4a05853fcc0af5501d5165673936bc3477779,Don't include test artifacts in MANIFEST.in,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-14 14:12:51-05:00,18000,2015-08-14 14:12:51-05:00,18000,True,False,['MANIFEST.in'],['c21b5a69f54d7ae43f5490a4a11e4ed58439334e'],1,0,1,1,,,
e145485bbcace4bcce4fa58d2197e11332220377,Dummy module to ensure our build_ext is called during setup,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-14 14:13:12-05:00,18000,2015-08-14 14:13:12-05:00,18000,True,False,['setup.py'],['1bf4a05853fcc0af5501d5165673936bc3477779'],1,2,3,1,0.0,0.0,1.0
387689da005389dd7de28477bfe9273e691234b2,Parallel build mechanisms for faster dev builds,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-14 14:49:05-05:00,18000,2015-08-14 14:49:05-05:00,18000,True,False,['setup.py'],['e145485bbcace4bcce4fa58d2197e11332220377'],1,13,14,1,0.875,0.875,1.0
1289a00251db0a7625b7fdb365d857ee19dad451,Fix forgot to initialize HostConnection._is_replacing,Roman Khanenko,rqx@users.noreply.github.com,Roman Khanenko,rqx@users.noreply.github.com,2015-08-16 13:38:31+03:00,-10800,2015-08-16 13:38:31+03:00,-10800,True,False,['pool.py'],['387689da005389dd7de28477bfe9273e691234b2'],0,1,1,1,0.0,1.0,0.0
1553c77dca4d6682b311155d7724bab83590d4f9,"Use connect_timeout for socket connect in addition to negotiation

PYTHON-381",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-17 11:55:49-05:00,18000,2015-08-17 11:55:49-05:00,18000,True,False,"['connection.py', 'twistedreactor.py', 'test_connection.py']",['a9fb0278643f5bb91db1afe1e8626528e28c6091'],7,20,27,3,0.9,1.0,0.6
f92d6e4e8d46454ea51f59a20484f59ad0d54a4d,"Contain and log schema metadata parsing exceptions.

PYTHON-370
Allows the driver to connect even if there is unexpected/inconsistent
schema metadata.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-17 15:17:07-05:00,18000,2015-08-17 15:17:07-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['a9fb0278643f5bb91db1afe1e8626528e28c6091'],148,277,425,2,0.76,0.67,0.89
57f6e9802c56d5fa8856c45dcfdc167b235820a5,Futures from pypi isn't py3 compatible,John Anderson,sontek@gmail.com,John Anderson,sontek@gmail.com,2015-08-17 17:59:28-07:00,25200,2015-08-17 17:59:28-07:00,25200,True,False,['setup.py'],['a9fb0278643f5bb91db1afe1e8626528e28c6091'],1,7,8,1,0.0,1.0,1.0
0f04f86353c673c29fc94c77134d36eea73d16db,"Properly seek stream pos after copying parital message from io buf

Fixes an input buffer management issue.
Symptoms: protocol or decode errors as messages collide in the buffer.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-18 13:35:35-05:00,18000,2015-08-18 13:35:35-05:00,18000,True,False,['connection.py'],['a9fb0278643f5bb91db1afe1e8626528e28c6091'],0,1,1,1,1.0,1.0,1.0
7f86142957bc8802e32b27dcba5c2b3ac5dcffe3,Python 2.6 did not have io.SEEK_END,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-18 14:28:55-05:00,18000,2015-08-18 14:28:55-05:00,18000,True,False,['connection.py'],['0f04f86353c673c29fc94c77134d36eea73d16db'],1,1,2,1,,,
f0e03345f0d3815fed7d55585891fbadf7a2da56,Fixing a few minor bugs in our tests for 2.7 release,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-08-18 16:45:34-05:00,18000,2015-08-18 16:45:34-05:00,18000,True,False,"['test_control_connection.py', 'test_metadata.py']",['0f04f86353c673c29fc94c77134d36eea73d16db'],2,6,8,2,1.0,1.0,1.0
f211f191d83e10d270b1638730b68b5a67a78203,"Make tuple before indexing

Fixes an issue with indexing when blist sorted set is not in use.
Symptom: ""TypeError(""'sortedset' object does not support indexing"",)""",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-19 11:07:19-05:00,18000,2015-08-19 11:07:19-05:00,18000,True,False,"['metadata.py', '__init__.py']",['90a797eeb9b1c3592d6aab8352acfc329fd82f0d'],3,3,6,2,,,
555c2fdf614b5f3190dea7656f5648d9668dce5d,__getitem__ for pure python sortedset,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-19 11:41:09-05:00,18000,2015-08-19 11:41:09-05:00,18000,True,False,['util.py'],['f211f191d83e10d270b1638730b68b5a67a78203'],0,3,3,1,1.0,1.0,1.0
c3ff4384a199130a9f3f3011abd02357edfd5da6,Normalize post version string,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-19 13:45:14-05:00,18000,2015-08-19 13:45:14-05:00,18000,True,False,"['README-dev.rst', '__init__.py']",['e7a8e6804ce67645fdb463d1b12095755a41687e'],4,4,8,2,,,
8734a77194fe16509eaf27b0387fc7778fb8e651,Doc updates around client proto handler and deserializers,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-19 13:48:52-05:00,18000,2015-08-19 13:48:52-05:00,18000,True,False,"['cluster.py', 'protocol.py', 'cluster.rst', 'protocol.rst']",['c3ff4384a199130a9f3f3011abd02357edfd5da6'],18,21,39,4,,,
3f43c85141e9904063a59d8e3cb78f67bb8d8833,doc: tweak formatting in concurrent.execute_concurrent,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-19 14:14:18-05:00,18000,2015-08-19 14:14:18-05:00,18000,True,False,['concurrent.py'],['8734a77194fe16509eaf27b0387fc7778fb8e651'],6,6,12,1,,,
aaf06792ec7bb685e17bbb53fc674795c00dcd7a,doc: Windows installation notes,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-19 16:20:24-05:00,18000,2015-08-19 16:20:24-05:00,18000,True,False,['installation.rst'],['3f43c85141e9904063a59d8e3cb78f67bb8d8833'],0,22,22,1,,,
7ec8d390074826377d2c4d5aa34ce0ba09c84c51,doc: add cython extensions to installation page,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-19 16:21:02-05:00,18000,2015-08-19 16:21:02-05:00,18000,True,False,['installation.rst'],['aaf06792ec7bb685e17bbb53fc674795c00dcd7a'],13,32,45,1,,,
9840d322d0fb3d3d0619f3e11fb764c6bd7d4f60,doc: Cython built regardless of virtualenv; add xref to installation,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-19 16:24:05-05:00,18000,2015-08-19 16:24:05-05:00,18000,True,False,['performance.rst'],['7ec8d390074826377d2c4d5aa34ce0ba09c84c51'],5,2,7,1,,,
79690f3a2425a53e16f8006173682c00756fed53,CHANGELOG tickets for 2.7,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-19 16:53:35-05:00,18000,2015-08-19 16:53:35-05:00,18000,True,False,['CHANGELOG.rst'],['9840d322d0fb3d3d0619f3e11fb764c6bd7d4f60'],0,23,23,1,,,
2aa41a1c742a1abec169dd2ba81f4a55db5c6551,More descriptive mention of Cython intro in CHANGELOG,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-20 10:59:58-05:00,18000,2015-08-20 10:59:58-05:00,18000,True,False,['CHANGELOG.rst'],['79690f3a2425a53e16f8006173682c00756fed53'],1,2,3,1,,,
a05b292f4e363db932919e6449331682c8420f3c,doc: typo in installation page,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-20 11:00:42-05:00,18000,2015-08-20 11:00:42-05:00,18000,True,False,['installation.rst'],['2aa41a1c742a1abec169dd2ba81f4a55db5c6551'],1,1,2,1,,,
99428c0ee26be990e31877cdb711f8498faf7d4d,add associated issue to 2.7 changelog,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-20 14:10:23-05:00,18000,2015-08-20 14:10:23-05:00,18000,True,False,['CHANGELOG.rst'],['a05b292f4e363db932919e6449331682c8420f3c'],0,1,1,1,,,
002ff27a1b3a6ee9a0e3a6365d4e51ff3ecd1ce2,"Handle multiple secondary indexes per column

Also started working toward multiple-column indexes, but I don't think
the server-side metadata is there yet.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-21 15:13:35-05:00,18000,2015-08-21 15:13:35-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['555c2fdf614b5f3190dea7656f5648d9668dce5d'],90,68,158,2,0.0,0.0,0.875
d4fe85520590cd3cbabc777b925874b48b9634b8,doc: clarify description of cython deserializers,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-21 16:43:08-05:00,18000,2015-08-21 16:43:08-05:00,18000,True,False,['protocol.rst'],['99428c0ee26be990e31877cdb711f8498faf7d4d'],3,9,12,1,,,
e683b106fb6e6becfd7ed9c77d3c7aa2ecaa09b7,3.0.0a2 version update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-24 08:32:52-05:00,18000,2015-08-24 08:32:52-05:00,18000,True,False,['__init__.py'],['002ff27a1b3a6ee9a0e3a6365d4e51ff3ecd1ce2'],1,1,2,1,,,
9d3a3a9fc3b09bfabe1e42151a999d3847511923,"modernize system_schema.columns table

PYTHON-276",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-24 13:03:56-05:00,18000,2015-08-24 13:03:56-05:00,18000,True,False,['metadata.py'],['002ff27a1b3a6ee9a0e3a6365d4e51ff3ecd1ce2'],6,15,21,1,1.0,1.0,1.0
334b8633dd0caafd1ffe17646f4f8a06495d597e,"schema 3.0: rename trigger_options -> options

PYTHON-276",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-24 13:05:03-05:00,18000,2015-08-24 13:05:03-05:00,18000,True,False,['metadata.py'],['9d3a3a9fc3b09bfabe1e42151a999d3847511923'],0,7,7,1,1.0,1.0,1.0
db87202cea00372867dfb17ca7a151e0b07cd54f,"test: use Cluster proto downgrade in get_server_versions

Can no longer connect to C* 3.0 using protocol < 3",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-24 13:05:36-05:00,18000,2015-08-24 13:05:36-05:00,18000,True,False,['__init__.py'],['334b8633dd0caafd1ffe17646f4f8a06495d597e'],1,1,2,1,,,
38317dd34283b2f365be3e89e0f0ef686f989381,no such thing as 'clustering_key' column 'kind',Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-24 13:22:46-05:00,18000,2015-08-24 13:22:46-05:00,18000,True,False,['metadata.py'],['db87202cea00372867dfb17ca7a151e0b07cd54f'],1,1,2,1,,,
c213a3af731d1f41acbb8fde2b32261f1bd98967,2.7.0 release version and changelog update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-25 14:46:43-05:00,18000,2015-08-25 14:46:43-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['d4fe85520590cd3cbabc777b925874b48b9634b8'],1,3,4,2,,,
c3c0216e90bf1afe506db7ab98909cd441c3aab8,doc: Note about blist removal,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-25 14:58:02-05:00,18000,2015-08-25 14:58:02-05:00,18000,True,False,['installation.rst'],['c213a3af731d1f41acbb8fde2b32261f1bd98967'],2,3,5,1,,,
7b54ee3e9ef0bcc3f033afd1ec8de300ec2beb4c,post-release version update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-25 15:41:54-05:00,18000,2015-08-25 15:41:54-05:00,18000,True,False,['__init__.py'],['c3c0216e90bf1afe506db7ab98909cd441c3aab8'],1,1,2,1,,,
d30a00bde6330580ca5f2cdeaddfe534ebbbbf90,"patch release 2.7.1

resolves an issue where extension sources were not being included in
source distribution

Since the extension list is now dynamic, they are not implicitly
included when processing the manifest template.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-08-25 17:31:33-05:00,18000,2015-08-25 17:31:33-05:00,18000,True,False,"['CHANGELOG.rst', 'MANIFEST.in', '__init__.py']",['7b54ee3e9ef0bcc3f033afd1ec8de300ec2beb4c'],1,12,13,3,,,
5a2f491023b2c28523815fcdedd59541b9499302,"metadata: properly handle non-frozen collection types

empty, non-frozen collection types cannot be assumed to return a
collection

PYTHON-392",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-03 11:50:55-05:00,18000,2015-09-03 11:50:55-05:00,18000,True,False,['metadata.py'],['d30a00bde6330580ca5f2cdeaddfe534ebbbbf90'],3,6,9,1,,,
e626d63ab53c803a91858556116f383d2fdc3ca0,"test functions with no arguments

PYTHON-392",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-03 14:37:49-05:00,18000,2015-09-03 14:37:49-05:00,18000,True,False,['test_metadata.py'],['5a2f491023b2c28523815fcdedd59541b9499302'],1,22,23,1,1.0,1.0,1.0
41d885ab01ada9840842cc4942de73a44e74b873,simplify setup version determination,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-03 15:30:11-05:00,18000,2015-09-03 15:30:11-05:00,18000,True,False,['setup.py'],['266aaa50b64c9faaf75c62da712c5f31b868ed3c'],2,1,3,1,,,
5c871ac84ac08054548a68d3c7bdd98e93620837,pin futures at 2.2.0 and explain,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-04 10:18:13-05:00,18000,2015-09-04 10:18:13-05:00,18000,True,False,['requirements.txt'],['41d885ab01ada9840842cc4942de73a44e74b873'],1,5,6,1,,,
836eaae07aacce73dc6d4805991027fe61a46037,version update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-04 17:09:59-05:00,18000,2015-09-04 17:09:59-05:00,18000,True,False,['__init__.py'],['124b81b4dc4435064ece8db1c4cda66cbbd221ee'],1,1,2,1,,,
9cb140c488c112ed1d030ee66183541742773647,"The default protocol version seems to be 4, not 2

But I imagine paging is also enabled when for protocol version 4?",Berk Birand,bbirand@users.noreply.github.com,Berk Birand,bbirand@users.noreply.github.com,2015-09-07 15:30:52+02:00,-7200,2015-09-07 15:30:52+02:00,-7200,True,False,['query_paging.rst'],['d30a00bde6330580ca5f2cdeaddfe534ebbbbf90'],1,1,2,1,,,
4ba510402394f3e25f57eee114c03a12073be8ac,"Require Cython 0.21+ for build

This version required for closures in cdefs in cython_marshal.pyx

see PYTHON-396",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-08 14:39:03-05:00,18000,2015-09-08 14:39:03-05:00,18000,True,False,['setup.py'],['29e1252418a2069f2fd17753e1f7c37bc7845c7a'],2,2,4,1,,,
5f4d205f3bdcfe335456fe71a44377a276ed8e78,"Only have pyximport installed while importing test modules

Fixes an issue where some module builds were being attempted at load
time. This was a problem for cassandra/numpy_parser, which requires a
header file not necessarily on the inlucde search path.

PYTHON-398",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-08 17:29:28-05:00,18000,2015-09-08 17:29:28-05:00,18000,True,False,['utils.py'],['29e1252418a2069f2fd17753e1f7c37bc7845c7a'],10,6,16,1,,,
f3d080fba70e8da870a0b0ed985aeb084565a410,Adding requirements for gevent and eventlet in test,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-09-08 15:49:04-05:00,18000,2015-09-09 09:29:38-05:00,18000,True,False,['test-requirements.txt'],['29e1252418a2069f2fd17753e1f7c37bc7845c7a'],0,2,2,1,,,
cda3f0bbef8075d06c5fd682ce3cd39a1228beb9,"Remove 'closure' (generator comprehension) from cdef

Makes the extension compatible with Cython < 0.21
PYTHON-396",vagrant,vagrant@precise64.(none),vagrant,vagrant@precise64.(none),2015-09-10 19:39:40+00:00,0,2015-09-10 19:39:40+00:00,0,True,False,['cython_marshal.pyx'],['4b923bbb651ba8c4bf765e08916fecdf964e8b4b'],1,1,2,1,,,
ac25d94ecd6654ec748a22b58fdfa282e9832099,"relax Cython req, make build work with old setuptools

see diff for explanation of old setuptools issue
PYTHON-396",vagrant,vagrant@precise64.(none),Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-10 19:42:24+00:00,0,2015-09-10 15:27:17-05:00,18000,True,False,['setup.py'],['cda3f0bbef8075d06c5fd682ce3cd39a1228beb9'],2,23,25,1,0.8571428571428571,0.8571428571428571,0.14285714285714285
cc80d543e65e9f7c701f52722551965ae9fe055e,key typo in metadata parsing,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-11 09:10:51-05:00,18000,2015-09-11 09:10:51-05:00,18000,True,False,['metadata.py'],['836eaae07aacce73dc6d4805991027fe61a46037'],1,1,2,1,,,
c2daeff35d13ab068495252acad4e1af8960a761,Adding cython to test-requirements.txt,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-09-11 11:55:29-05:00,18000,2015-09-11 11:55:29-05:00,18000,True,False,['test-requirements.txt'],['126952aa9d745a1c9185982a703bafcfbffded7f'],1,2,3,1,,,
9ac8d09a1b2064b1dec3dd6386b9408098346ab3,add keywords 'is' 'materialized' 'view',Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-09 15:31:31-05:00,18000,2015-09-14 10:49:38-05:00,18000,True,False,['metadata.py'],['cc80d543e65e9f7c701f52722551965ae9fe055e'],3,3,6,1,,,
3e31867ada40199d0e55ae6e9717b47a872afd30,"Original MV meta impl

on cassandra-3.0, before CASSANDRA-9921",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-11 14:18:37-05:00,18000,2015-09-14 10:53:08-05:00,18000,True,False,['metadata.py'],['9ac8d09a1b2064b1dec3dd6386b9408098346ab3'],26,160,186,1,0.475,0.625,0.725
09d68357db4abdaf0ebb17c25f7d19611d7f515c,Changelog and version update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-14 13:13:35-05:00,18000,2015-09-14 13:13:35-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['c2daeff35d13ab068495252acad4e1af8960a761'],1,12,13,2,,,
5b6456937be8d0c35ce1f73eda1e0a6ca27ce76c,note about row_factory in protocol handler section,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-14 13:17:19-05:00,18000,2015-09-14 13:17:19-05:00,18000,True,False,['protocol.rst'],['09d68357db4abdaf0ebb17c25f7d19611d7f515c'],0,2,2,1,,,
3d04d48c27d200ccdc0faf75262587724c6c5a05,post-release version update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-14 13:54:13-05:00,18000,2015-09-14 13:54:13-05:00,18000,True,False,['__init__.py'],['5b6456937be8d0c35ce1f73eda1e0a6ca27ce76c'],1,1,2,1,,,
36b884dc1d5c9ceb3c3b192131b8b6f24f04b63c,Split materialized view meta into distinct table,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-14 16:07:23-05:00,18000,2015-09-14 16:07:23-05:00,18000,True,False,['metadata.py'],['3e31867ada40199d0e55ae6e9717b47a872afd30'],136,168,304,1,1.0,1.0,0.0
156a5b2f09e9f629dfde6828f4be51bb6744931f,Changed doxyfile out/input directories,Clint Ascencio,clint.ascencio@datastax.com,Clint Ascencio,clint.ascencio@datastax.com,2015-09-15 06:29:44-05:00,18000,2015-09-15 06:29:44-05:00,18000,True,False,['doxyfile'],['d30a00bde6330580ca5f2cdeaddfe534ebbbbf90'],9,11,20,1,,,
96883eb8b61753bd704a087717f2d556980bf4d2,export_as_string for MV metadata,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-15 09:23:46-05:00,18000,2015-09-15 09:23:46-05:00,18000,True,False,['metadata.py'],['36b884dc1d5c9ceb3c3b192131b8b6f24f04b63c'],0,3,3,1,1.0,1.0,1.0
3e75da2f3fa395a5742b86a41d087943608e5387,"Remove target type from index metadata

PYTHON-400
(C* 3.0 udpate)",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-15 14:10:34-05:00,18000,2015-09-15 14:10:34-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['cc80d543e65e9f7c701f52722551965ae9fe055e'],73,111,184,2,0.14814814814814814,0.9629629629629629,0.8518518518518519
ec572c518cce960034403b62b29edf0e5ce27e9c,Adding yaml for job builder automation. Fixing up some timing issues in unit tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-08-14 12:00:20-05:00,18000,2015-09-15 14:48:55-05:00,18000,True,False,"['build.yaml', 'test_metadata.py']",['e11c575ae198507f9836827e7113839d06b87d4d'],6,55,61,2,,,
e36c94bed1f10718d5661a1628e6002aafb8aafe,"Don't parse target; values(collection_col) is supported

PYTHON-400",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-15 15:22:06-05:00,18000,2015-09-15 15:22:06-05:00,18000,True,False,['metadata.py'],['3e75da2f3fa395a5742b86a41d087943608e5387'],3,0,3,1,1.0,0.0,0.0
083aaaa409e64656f488d4673625c64f1d373fb0,Properly sort key components by 'position',Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-16 15:15:22-05:00,18000,2015-09-16 15:15:22-05:00,18000,True,False,['metadata.py'],['5dedd0d37162999ce173e977be1d73eee7123f60'],2,2,4,1,,,
9f91a6da05e67c297e7ed94a136abac7427748c1,"get clustering order from ss.tables.clustering_order in 3.0+

PYTHON-402
CASSANDRA-6717",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-17 11:29:44-05:00,18000,2015-09-17 11:29:44-05:00,18000,True,False,"['cqltypes.py', 'metadata.py']",['083aaaa409e64656f488d4673625c64f1d373fb0'],5,18,23,2,0.8333333333333334,0.8333333333333334,0.6666666666666666
b927f091d26a630b04b7651b16c4c0b1e4d4261a,"Remove view meta from table views on drop

previously only removed from keyspace index",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-17 12:28:33-05:00,18000,2015-09-17 12:28:33-05:00,18000,True,False,['metadata.py'],['083aaaa409e64656f488d4673625c64f1d373fb0'],1,7,8,1,1.0,0.0,1.0
4a276550900391aad331661d102543ac8a151c3e,Move semi to MaterializedView.export_as_string,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-17 12:29:16-05:00,18000,2015-09-17 12:29:16-05:00,18000,True,False,['metadata.py'],['b927f091d26a630b04b7651b16c4c0b1e4d4261a'],2,2,4,1,,,
42b0dd3a46d16349fb99543236e212a7db327f0a,fixing client warnings test to use different threshold with batch warnings,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-09-16 16:50:19-05:00,18000,2015-09-17 15:20:46-05:00,18000,True,False,['test_client_warnings.py'],['197b9f29b5dd7eb3c58163a328eb9d1e8b52413b'],1,1,2,1,,,
c2842228ef07bf4ce38499dc1b11e13ec3335d5a,work around for session issue with setting schema versions,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-09-16 16:53:14-05:00,18000,2015-09-17 15:20:47-05:00,18000,True,False,['test_cluster.py'],['42b0dd3a46d16349fb99543236e212a7db327f0a'],4,4,8,1,0.0,1.0,1.0
4af508333f7bcd4de4c8f2bc77a67480b44102de,Rework BadMetaTest to avoid messing with server metadata,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-17 16:38:23-05:00,18000,2015-09-17 17:18:02-05:00,18000,True,False,['test_metadata.py'],['2091fcdfb3d9c35a91b82f9f1ed1821fbab8b4cf'],69,72,141,1,1.0,,1.0
bc2a947c115d8740f4a48a0e855f8ddd32d5767c,Make test_replicas Py3-compatible,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-17 16:39:35-05:00,18000,2015-09-17 17:18:02-05:00,18000,True,False,['test_metadata.py'],['4af508333f7bcd4de4c8f2bc77a67480b44102de'],2,2,4,1,,,
fd3bb4ed7ad3ecc94070adee9884977c41086621,test: version Conditional target value for collection indexes,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-17 17:00:47-05:00,18000,2015-09-17 17:18:02-05:00,18000,True,False,['test_metadata.py'],['bc2a947c115d8740f4a48a0e855f8ddd32d5767c'],1,2,3,1,0.0,1.0,1.0
bc0fe4423e83877f7831c40a2e6fdd4c0e36c553,"Don't run cql compatibility test for cassandra 3.0+

Nothing should be cql-incompatible",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-17 17:01:07-05:00,18000,2015-09-17 17:18:02-05:00,18000,True,False,['test_metadata.py'],['fd3bb4ed7ad3ecc94070adee9884977c41086621'],0,3,3,1,1.0,1.0,1.0
7166f3de0105c7a0f3c77647b05712519539ac4f,test: compression enabled: false is explicit in C* 3+,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-17 17:23:07-05:00,18000,2015-09-17 17:23:07-05:00,18000,True,False,['test_metadata.py'],['bc0fe4423e83877f7831c40a2e6fdd4c0e36c553'],1,2,3,1,1.0,1.0,1.0
40c4807c56f8f103bf3c496a983cb8d1e17c157f,"test: don't compare CQL we don't care about, that might change by
version",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-17 17:45:37-05:00,18000,2015-09-17 17:45:37-05:00,18000,True,False,['test_metadata.py'],['7166f3de0105c7a0f3c77647b05712519539ac4f'],32,15,47,1,1.0,0.0,0.0
15b8b2595fc1b79b142da6a58defe899e02c20ea,Changing tests to use version neutral metadata for keyspace deletion,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-09-17 18:15:11-05:00,18000,2015-09-17 18:15:11-05:00,18000,True,False,"['test_consistency.py', 'test_large_data.py', 'test_loadbalancingpolicies.py', 'utils.py']",['40c4807c56f8f103bf3c496a983cb8d1e17c157f'],20,17,37,4,1.0,0.0,1.0
1e954277283f3e80132f9f2a26e50a9694d8e60b,Fixing prepared statement test to work with changes made for  CASSANDRA-6237,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-09-17 20:32:18-05:00,18000,2015-09-17 20:32:18-05:00,18000,True,False,['test_prepared_statements.py'],['15b8b2595fc1b79b142da6a58defe899e02c20ea'],29,40,69,1,1.0,1.0,1.0
eea8b59c7f7d7f3293ee71312a667f4a2baa1113,Updating keyspace removal logic to be 3.0 compatible,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-09-18 10:06:21-05:00,18000,2015-09-18 10:06:21-05:00,18000,True,False,['test_schema.py'],['1e954277283f3e80132f9f2a26e50a9694d8e60b'],3,1,4,1,1.0,0.0,0.0
379729d9524fb06eeda493b9dd53806f6a0098f3,add crc_check_chance to 3.0 options,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-18 15:04:04-05:00,18000,2015-09-18 15:04:04-05:00,18000,True,False,['metadata.py'],['eea8b59c7f7d7f3293ee71312a667f4a2baa1113'],0,1,1,1,,,
2803bb734dbd941fb0bb125003d53ab20fbdb0c3,"Add where_clause to system_schema.views

PYTHON-399",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-14 17:03:59-05:00,18000,2015-09-18 17:07:51-05:00,18000,True,False,['metadata.py'],['379729d9524fb06eeda493b9dd53806f6a0098f3'],4,9,13,1,1.0,1.0,0.0
921bb984297fb90c90f4376739a5a0ecd73423b1,[PYTHON-371] Tests for materialized view metadata,Kishan Karunaratne,kishan@karu.io,Kishan Karunaratne,kishan@karu.io,2015-09-18 15:15:59-07:00,25200,2015-09-18 15:15:59-07:00,25200,True,False,['test_metadata.py'],['eea8b59c7f7d7f3293ee71312a667f4a2baa1113'],1,133,134,1,1.0,1.0,1.0
b398d778c046b1ebb09646e2ad73d1aff11cf238,Adding MV metadata tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-09-18 19:14:11-05:00,18000,2015-09-18 19:14:11-05:00,18000,True,False,['test_metadata.py'],['fc9ff5f88b8a344df54a9787d659bb9eb615313b'],1,196,197,1,0.0,1.0,1.0
232e3f07317afd20c9726f95a4d677567d9cb7c2,Making CQL compatible for 1.2.x,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-09-19 14:55:42-05:00,18000,2015-09-19 14:55:42-05:00,18000,True,False,['test_metadata.py'],['b398d778c046b1ebb09646e2ad73d1aff11cf238'],2,2,4,1,,,
a1574e0297d52f2b910514476d827f4f7045b416,Changing to test setup to use protocol V1 instead of protocol downgrade logic,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-09-20 11:25:29-05:00,18000,2015-09-20 11:25:29-05:00,18000,True,False,['__init__.py'],['232e3f07317afd20c9726f95a4d677567d9cb7c2'],1,1,2,1,,,
5e7807c167f64dd57fed55fb88a5147aa68fbeb1,"cqle: Update for 3.0 compatibility WIP

Mostly needs test updates",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-18 17:06:05-05:00,18000,2015-09-21 07:55:54-07:00,25200,True,False,"['management.py', 'models.py', 'metadata.py', 'test_compaction_settings.py', 'test_ttl.py']",['3ea270b78be029e0810c2633d6a56e72cf6ebd22'],200,66,266,5,0.5846153846153846,0.15384615384615385,0.0
6f38f1b950a74f469825323121b954ecdbba1d91,cqle: more mgmt changes and test upates for updated options api,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-21 07:49:51-07:00,25200,2015-09-21 07:55:54-07:00,25200,True,False,"['__init__.py', 'management.py', 'metadata.py', 'test_compaction_settings.py', 'test_management.py', 'test_polymorphism.py']",['5e7807c167f64dd57fed55fb88a5147aa68fbeb1'],234,132,366,6,1.0,0.125,0.0
033670f72bfa94a36be9191fa5cbdfd2bfe5e170,3.0.0a3 version update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-21 08:32:05-07:00,25200,2015-09-21 08:32:05-07:00,25200,True,False,['__init__.py'],['6f38f1b950a74f469825323121b954ecdbba1d91'],1,1,2,1,,,
a56a4c98d026a7fe34aa4fb1d793bd78673fab9a,post-release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-21 08:34:59-07:00,25200,2015-09-21 08:34:59-07:00,25200,True,False,['__init__.py'],['033670f72bfa94a36be9191fa5cbdfd2bfe5e170'],1,1,2,1,,,
5a45a0fb70c24c98a406117969e07d4be2e4b139,Making mv metadata tests python 3 compatible,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-09-22 15:34:48-07:00,25200,2015-09-22 15:34:48-07:00,25200,True,False,['test_metadata.py'],['a56a4c98d026a7fe34aa4fb1d793bd78673fab9a'],2,2,4,1,,,
c6d1b8f35e6cfcc0f93299885e7bd7c938206bb1,"Proper exc_info handling for Connection.defunct debug log

Fixes an issue where exc_info can cause formatting failures when defunct
is called while not actually handling an exception.

PYTHON-409",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-29 17:05:59-05:00,18000,2015-09-29 17:05:59-05:00,18000,True,False,['connection.py'],['5a45a0fb70c24c98a406117969e07d4be2e4b139'],2,8,10,1,0.0,1.0,1.0
849f52e5f976e5f6238d1aa0eeb33e6deb2b401e,"Revert ""Changing to test setup to use protocol V1 instead of protocol downgrade logic""

This reverts commit a1574e0297d52f2b910514476d827f4f7045b416.

Following fix for negotiation in nosetest context for Python 3
PYTHON-409",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-29 17:09:06-05:00,18000,2015-09-29 17:09:06-05:00,18000,True,False,['__init__.py'],['c6d1b8f35e6cfcc0f93299885e7bd7c938206bb1'],1,1,2,1,,,
be4e1db9b3ab0ee7ad185d882add97a18a75d425,"cqle: Remove invalid test on limit with count.

Limit does not apply to rows counted, but rather returned rows. It was
incorrect in earlier versions of Cassandra.

See https://issues.apache.org/jira/browse/CASSANDRA-10380",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-30 12:27:56-05:00,18000,2015-09-30 12:27:56-05:00,18000,True,False,['test_queryset.py'],['12b12137945c2d9ee4b8935ae21330dc1c65275e'],8,0,8,1,0.0,0.0,0.0
1048f33604fbc48bd9e476fd7e7ae57b4a6f3032,cqle: test cleanup following options refactor,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-30 14:15:46-05:00,18000,2015-09-30 14:15:46-05:00,18000,True,False,['test_compaction_settings.py'],['6611ae9e5f9b1acde2c8841723f621edeab0bfc3'],12,5,17,1,,,
75ddc514617304797626cc69957eb6008695be1e,cqle: update docs for new __options__ model attribute,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-30 14:15:51-05:00,18000,2015-09-30 14:15:51-05:00,18000,True,False,['models.rst'],['1048f33604fbc48bd9e476fd7e7ae57b4a6f3032'],72,24,96,1,,,
0f06126a0ae13804c16ed6f29c122a3630b2f97f,Adding tests for python-419,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-09-30 16:08:19-05:00,18000,2015-09-30 16:08:19-05:00,18000,True,False,['test_metadata.py'],['75ddc514617304797626cc69957eb6008695be1e'],0,54,54,1,0.0,1.0,1.0
4ce576f9bb0abf63c18c28d1255152ce3d6bf021,doc: adding MaterializedViewMeta to docs,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-30 16:11:41-05:00,18000,2015-09-30 16:11:41-05:00,18000,True,False,['metadata.rst'],['75ddc514617304797626cc69957eb6008695be1e'],0,3,3,1,,,
a82f25e0b94da79afdf4fc00387a697c339733fa,"Unify IndexMetadat model btw C* 3 and earlier.

PYTHON-404",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-30 16:16:29-05:00,18000,2015-09-30 16:16:29-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['4ce576f9bb0abf63c18c28d1255152ce3d6bf021'],112,61,173,2,0.30434782608695654,0.30434782608695654,0.21739130434782608
9c200be78a69a10f4ff3f8d447f59cff17006a4d,"TestCase.assertRegex is only present in unittest2, not std lib",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-09-30 16:23:02-05:00,18000,2015-09-30 16:23:02-05:00,18000,True,False,['test_metadata.py'],['a82f25e0b94da79afdf4fc00387a697c339733fa'],2,2,4,1,,,
3dfac5326edc326bc55caec17ef34ce5ece6ada3,"meta: transfer views to new table on table update event

Resolves an issue where materialized views were dropped from meta model
on table update events.

PYTHON-419",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-01 13:00:03-05:00,18000,2015-10-01 13:00:03-05:00,18000,True,False,['metadata.py'],['0f06126a0ae13804c16ed6f29c122a3630b2f97f'],3,15,18,1,1.0,0.0,1.0
185f906db5f14c0c3242b3776caf9fef5279a63c,"Materialized view test cleanup/improvement

test_create_mv_changes still fails due to Cassandra issue (noted in
code)",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-01 13:00:50-05:00,18000,2015-10-01 13:00:50-05:00,18000,True,False,['test_metadata.py'],['3dfac5326edc326bc55caec17ef34ce5ece6ada3'],11,12,23,1,0.0,1.0,1.0
f27d7db0270b7f7884227fa8a69c9ecdce45cc2d,"meta: export_as_string for UserType

PYTHON-405",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-01 13:56:55-05:00,18000,2015-10-01 13:56:55-05:00,18000,True,False,['metadata.py'],['75ddc514617304797626cc69957eb6008695be1e'],2,5,7,1,1.0,1.0,1.0
dfe97db082799a925f7203054b5adc33a28cf987,"meta: export_as_string for Function and Aggregate

PYTHON-405",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-01 14:08:55-05:00,18000,2015-10-01 14:08:55-05:00,18000,True,False,['metadata.py'],['f27d7db0270b7f7884227fa8a69c9ecdce45cc2d'],3,9,12,1,1.0,1.0,1.0
bfa75d6c2d7a85b0bab27c9ed2f97c7e753c812e,meta: improved format for Function and Aggregate CQL,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-01 14:10:01-05:00,18000,2015-10-01 14:10:01-05:00,18000,True,False,['metadata.py'],['dfe97db082799a925f7203054b5adc33a28cf987'],2,2,4,1,,,
1395401898f47d62d9bfebe858a1d5d288ca3169,meta: export_as_string for Trigger,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-01 14:52:42-05:00,18000,2015-10-01 14:52:42-05:00,18000,True,False,['metadata.py'],['bfa75d6c2d7a85b0bab27c9ed2f97c7e753c812e'],0,3,3,1,1.0,1.0,1.0
5a09737f9ba6daa3c785224b1d82fcca49390b57,popitem for util.OrderedMap,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-02 12:30:40-05:00,18000,2015-10-02 12:30:40-05:00,18000,True,False,"['util.py', 'test_orderedmap.py']",['75ddc514617304797626cc69957eb6008695be1e'],0,14,14,2,1.0,1.0,1.0
15269484df11bde5c436f2ca0a4362858f227552,"Handle UDTs with non-pythonic identifiers (WIP - needs testing)

Fixes issues forming meta types and deserializing UDTs with names or
field names which are not valid Python identifiers.

PYTHON-413",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-02 13:05:38-05:00,18000,2015-10-02 13:05:38-05:00,18000,True,False,"['cqltypes.py', 'protocol.py', 'test_metadata.py']",['5a09737f9ba6daa3c785224b1d82fcca49390b57'],26,87,113,3,0.875,0.95,0.525
ce0ab6196aa770e51e12b4ca65428cb689e68a1c,Must read complete UDT (even if known type) to advance stream.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-05 10:39:55-05:00,18000,2015-10-05 10:39:55-05:00,18000,True,False,['protocol.py'],['15269484df11bde5c436f2ca0a4362858f227552'],2,3,5,1,0.0,0.0,0.0
72aebca30141b7b362ae2199955efac2f7241373,"namedtuple does not support rename in Python 2.6

also fixing an issue passing the wrong name down to _make_udt_type_type",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-05 10:40:35-05:00,18000,2015-10-05 10:40:35-05:00,18000,True,False,"['cqltypes.py', 'query.py', 'util.py', 'test_metadata.py']",['ce0ab6196aa770e51e12b4ca65428cb689e68a1c'],5,21,26,4,1.0,0.0,1.0
047049c305314f8efff1cf4726644875d7ae56a4,Avoid building tuple type when it can be None,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-05 10:54:40-05:00,18000,2015-10-05 10:54:40-05:00,18000,True,False,['cqltypes.py'],['72aebca30141b7b362ae2199955efac2f7241373'],2,3,5,1,1.0,1.0,0.0
319a3807bcb33f11f79a2b4a5a621f28c446852e,Extract actual keyspace name when applying parameters of UDT types,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-05 10:55:43-05:00,18000,2015-10-05 10:55:43-05:00,18000,True,False,['cqltypes.py'],['047049c305314f8efff1cf4726644875d7ae56a4'],1,1,2,1,,,
68a5ed7ca3ab6255f0cc9bdf988231482dc60deb,test: make format strings Python 2.6 compatible,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-05 12:48:23-05:00,18000,2015-10-05 12:48:23-05:00,18000,True,False,['test_types.py'],['319a3807bcb33f11f79a2b4a5a621f28c446852e'],3,3,6,1,,,
438c72a26792bc16bb7095be49f8a42674b0225d,test: clean up keyspaces in test_udts to allow test rerun,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-05 12:49:15-05:00,18000,2015-10-05 12:49:15-05:00,18000,True,False,['test_udts.py'],['68a5ed7ca3ab6255f0cc9bdf988231482dc60deb'],0,9,9,1,0.0,1.0,1.0
a96b4b8fbe02d8264dd243f7212e28cfb8813436,"user type map set for each request

Makes type mapping work even if the type is cached already.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-05 13:02:45-05:00,18000,2015-10-05 13:02:45-05:00,18000,True,False,"['cqltypes.py', 'protocol.py']",['438c72a26792bc16bb7095be49f8a42674b0225d'],4,4,8,2,,,
5fc175473489d1499b75005ea4e74f99f861605d,make udt class cache consider field names/types,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-05 13:59:25-05:00,18000,2015-10-05 13:59:25-05:00,18000,True,False,"['cqltypes.py', 'protocol.py']",['a96b4b8fbe02d8264dd243f7212e28cfb8813436'],27,10,37,2,0.25,0.0,1.0
048964be20d8fd8ade0d6fa0295d32ae5a062a33,Move non-alphanum UDT tests to test_udts,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-05 14:56:38-05:00,18000,2015-10-05 14:56:38-05:00,18000,True,False,"['test_metadata.py', 'test_udts.py']",['5fc175473489d1499b75005ea4e74f99f861605d'],32,30,62,2,0.3333333333333333,0.0,0.0
4805dfcde96174e1d3094e639f7f024de32d8c3b,Add UDT type alteration test,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-05 14:57:01-05:00,18000,2015-10-05 14:57:01-05:00,18000,True,False,['test_udts.py'],['048964be20d8fd8ade0d6fa0295d32ae5a062a33'],0,32,32,1,0.0,1.0,1.0
031ebb0ba9785b4e70c6ba6fda041fdcf5e86d38,Remove deprecated ResponseFuture timeout parameter,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-06 09:55:02-05:00,18000,2015-10-06 09:55:02-05:00,18000,True,False,"['cluster.py', 'test_custom_payload.py', 'test_query.py']",['75ddc514617304797626cc69957eb6008695be1e'],30,7,37,3,1.0,1.0,0.0
419fcdf9beb0090136593935ab683f5a0f8d5f8e,Remove deprecated Cluster.refresh_schema,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-06 10:10:37-05:00,18000,2015-10-06 10:14:50-05:00,18000,True,False,"['cluster.py', 'cluster.rst']",['031ebb0ba9785b4e70c6ba6fda041fdcf5e86d38'],42,0,42,2,0.0,0.0,1.0
574266d1bf13e56ab4e527fd2cfd209a1a906ffe,Remove deprecated Cluster.submit_schema_refresh,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-06 10:14:12-05:00,18000,2015-10-06 10:14:51-05:00,18000,True,False,"['cluster.py', 'test_cluster.py']",['419fcdf9beb0090136593935ab683f5a0f8d5f8e'],48,0,48,2,1.0,0.0,0.32142857142857145
bb984eedbaa80275041ea9d77b4208878b6444d0,"Remove deprecated cqltypes time/date functions

Moved to util",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-06 10:27:02-05:00,18000,2015-10-06 10:27:02-05:00,18000,True,False,['cqltypes.py'],['574266d1bf13e56ab4e527fd2cfd209a1a906ffe'],16,1,17,1,0.0,0.0,0.0
e16a07351092de3ee4404899c0a41bb260d6b6c9,remove deprecated decoder module,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-06 10:28:43-05:00,18000,2015-10-06 10:28:43-05:00,18000,True,False,['decoder.py'],['bb984eedbaa80275041ea9d77b4208878b6444d0'],58,0,58,1,0.0,0.0,0.0
cc9407366abd5afd4015ee38a3f2dc27956c74be,Remove deprecated TableMetadata.keyspace attribute,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-06 11:47:16-05:00,18000,2015-10-06 12:05:16-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['e16a07351092de3ee4404899c0a41bb260d6b6c9'],14,4,18,2,0.5,0.5,0.0
96489ccc835d153c18b745792627f89ba60217be,Remove deprecated cqlengine.columns.TimeUUID.from_datetime,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-06 12:19:15-05:00,18000,2015-10-06 14:38:36-05:00,18000,True,False,"['columns.py', 'columns.rst']",['cc9407366abd5afd4015ee38a3f2dc27956c74be'],21,1,22,2,0.0,0.0,0.0
a2d3a9862ff80d225b93605e38097d473e22df41,Remove deprecated cqlengine.columns.Float(double_precision) parameter,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-06 13:01:08-05:00,18000,2015-10-06 14:38:36-05:00,18000,True,False,"['columns.py', 'test_value_io.py', 'test_model_io.py', 'test_udts.py']",['96489ccc835d153c18b745792627f89ba60217be'],38,11,49,4,0.2857142857142857,0.0,0.5714285714285714
4bd590960a2c5c0fcd2da1c436f535d85ce85b53,Remove deprecated cqlengine keyspace management functions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-06 14:05:41-05:00,18000,2015-10-06 14:38:36-05:00,18000,True,False,"['management.py', 'test_management.py']",['a2d3a9862ff80d225b93605e38097d473e22df41'],80,8,88,2,1.0,0.5945945945945946,0.5945945945945946
9d98c8e633d54c052a188adac053637bfd2ab1ed,Remove deprecated cqlengine.Model.__polymorphic_*__ attributes,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-06 14:34:44-05:00,18000,2015-10-06 14:38:36-05:00,18000,True,False,"['columns.py', 'models.py', 'columns.rst', 'models.rst', 'test_polymorphism.py']",['4bd590960a2c5c0fcd2da1c436f535d85ce85b53'],275,4,279,5,0.096,0.048,0.096
79efe97787f8aa443d8d4115b7c35f59620243a3,Remove list prepend warning from cqlengine.statements,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-06 14:41:53-05:00,18000,2015-10-06 15:23:43-05:00,18000,True,False,['statements.py'],['9d98c8e633d54c052a188adac053637bfd2ab1ed'],9,0,9,1,1.0,0.0,0.0
f80c1ae714ce9de111e4b5d321dfad78635d1245,"Fix timeout in geventreactor

Fix timeout in geventreactor",yi719,emotional_etc@msn.com,yi719,emotional_etc@msn.com,2015-10-03 09:49:55+08:00,-28800,2015-10-07 10:08:57+08:00,-28800,True,False,['geventreactor.py'],['75ddc514617304797626cc69957eb6008695be1e'],1,2,3,1,1.0,1.0,1.0
a9116ac4be286c3dba858c87509c3861fbdfcf42,always return ResultSet for query results,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-07 16:34:03-05:00,18000,2015-10-07 16:34:03-05:00,18000,True,False,"['cluster.py', 'concurrent.py', 'cluster.rst', 'test_loadbalancingpolicies.py', 'test_concurrent.py', 'test_custom_protocol_handler.py', 'test_metrics.py', 'test_query.py', 'test_query_paging.py', 'test_row_factories.py', 'test_udts.py']",['75ddc514617304797626cc69957eb6008695be1e'],76,86,162,11,1.0,1.0,0.6
6402f71547cb2774263f37746b670b2c0c6337c2,"Make ResultSet list mode explicit

PYTHON-368",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-08 16:56:59-05:00,18000,2015-10-08 16:56:59-05:00,18000,True,False,"['cluster.py', 'test_concurrent.py']",['a9116ac4be286c3dba858c87509c3861fbdfcf42'],11,23,34,2,1.0,1.0,1.0
1862c7a0c4bf1447095977b08abfa738f045b8eb,Add unit test for cluster.ResultSet,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-08 16:59:51-05:00,18000,2015-10-08 16:59:51-05:00,18000,True,False,['test_resultset.py'],['6402f71547cb2774263f37746b670b2c0c6337c2'],0,160,160,1,0.5591397849462365,1.0,1.0
a5c433fc75cc018bd71f36a8f59e1699a2d4c9c6,test: further simplify MV meta compaction assertions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-09 09:43:40-05:00,18000,2015-10-09 09:43:40-05:00,18000,True,False,['test_metadata.py'],['185f906db5f14c0c3242b3776caf9fef5279a63c'],4,3,7,1,0.0,0.0,0.0
a063421cf48b3c202bc4f61667b987f648619041,Correct comment typo on peer review,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-09 09:46:44-05:00,18000,2015-10-09 09:46:44-05:00,18000,True,False,['util.py'],['4805dfcde96174e1d3094e639f7f024de32d8c3b'],1,1,2,1,,,
7dbe87b39a81deb12b2a38c377fb175252e6c219,"Don't run cqlengine tests in Travis

They are covered similarly in our Jenkins CI integration tests, and the
seutp here occasionally causes false negatives.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-09 10:15:08-05:00,18000,2015-10-09 10:15:08-05:00,18000,True,False,"['.travis.yml', 'tox.ini']",['920046a5379d251dccade79d428775133baf049b'],30,2,32,2,,,
07e61b20dee03ce658f2c3bfe21b3adb7f19a70a,Adding improved metadata tests. Added additional infrastructure for setup and teardown. Fixed various timing issues in tests.,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-02 16:30:16-05:00,18000,2015-10-09 10:36:09-05:00,18000,True,False,"['build.yaml', '__init__.py', 'test_ttl.py', 'test_cluster.py', 'test_metadata.py', 'test_query.py', 'test_row_factories.py']",['920046a5379d251dccade79d428775133baf049b'],117,429,546,7,0.25888324873096447,1.0,0.9441624365482234
97bf563b7ec30fed5a1158d815a352b0fbd75a55,"default CL is now LOCAL_QUORUM

PYTHON-416",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-09 13:03:14-05:00,18000,2015-10-09 13:03:14-05:00,18000,True,False,"['cluster.py', 'cluster.rst', 'getting_started.rst']",['7dbe87b39a81deb12b2a38c377fb175252e6c219'],3,14,17,3,,,
3fdf3fb451f237549b79f00fd9295e31c8b11215,"cqle: Handle and return descriptive error for unknown table option

PYTHON-406",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-09 15:02:59-05:00,18000,2015-10-09 15:02:59-05:00,18000,True,False,"['management.py', 'test_management.py']",['c0087da8f862f9c20571927900057c1f25d82818'],1,13,14,2,0.7272727272727273,0.7272727272727273,1.0
bd0a8647f2492d98bc6af5543a5d7540ef3f95d3,Changing MV tests to work around async metadata updates,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-09 15:32:32-05:00,18000,2015-10-09 15:32:32-05:00,18000,True,False,['test_metadata.py'],['3fdf3fb451f237549b79f00fd9295e31c8b11215'],14,58,72,1,0.0,1.0,1.0
827f6a2c7974f0c158933b54b281a9ff8de63e97,"remove blist sortedset as soft dependency

PYTHON-385",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-12 11:09:37-05:00,18000,2015-10-12 11:09:37-05:00,18000,True,False,"['util.py', 'tox.ini']",['c0087da8f862f9c20571927900057c1f25d82818'],167,194,361,2,1.0,1.0,0.9166666666666666
d5ae0d0395fb28ee68457eb2058c90451c95cc20,doc: remove blist section from installation page,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-12 11:10:25-05:00,18000,2015-10-12 11:10:25-05:00,18000,True,False,['installation.rst'],['827f6a2c7974f0c158933b54b281a9ff8de63e97'],13,0,13,1,,,
4eacbd58c16838e4c0457bf1ea904ea5a60ac5de,test: expand sortedset test covering new methods,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-12 11:10:46-05:00,18000,2015-10-12 11:10:46-05:00,18000,True,False,['test_sortedset.py'],['d5ae0d0395fb28ee68457eb2058c90451c95cc20'],0,115,115,1,0.42391304347826086,1.0,1.0
bd0563048b7e76a7592f512ee4b5335887b2e9bb,test: update metadata unit test reflecting change in TableMetadata,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-12 11:28:35-05:00,18000,2015-10-12 11:28:35-05:00,18000,True,False,['test_metadata.py'],['092d227d359dc7e8e7dd2c77fadaa3676e3d5c09'],1,1,2,1,,,
6ae9533e6273e9f7f2427f486937c1a4580daae7,"Added test for Python-402, changed schmema metadata tests to use common setup/teardown.",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-12 12:52:02-05:00,18000,2015-10-12 12:52:02-05:00,18000,True,False,['test_metadata.py'],['bd0563048b7e76a7592f512ee4b5335887b2e9bb'],89,95,184,1,0.0,0.0,0.0
97adeca31f40ec73546bde5e41a20b739f34f5bc,"surface query trace in ResultSet API

PYTHON-318",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-12 15:02:30-05:00,18000,2015-10-13 11:46:20-05:00,18000,True,False,['cluster.py'],['1862c7a0c4bf1447095977b08abfa738f045b8eb'],1,34,35,1,1.0,1.0,0.5714285714285714
7f7b8cc280fed6332ad73a85a51d3594b8ce3433,"always return ResultSet, even for non-row responses",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-12 15:21:49-05:00,18000,2015-10-13 11:46:20-05:00,18000,True,False,['cluster.py'],['97adeca31f40ec73546bde5e41a20b739f34f5bc'],8,3,11,1,1.0,1.0,0.0
9ca9985f703a872cf6bada1ed4949bf70f04d9c0,Trace info is now attached to ResultSet,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-13 11:42:35-05:00,18000,2015-10-13 11:46:21-05:00,18000,True,False,"['cluster.py', 'concurrent.py', 'test_cluster.py', 'test_concurrent.py', 'test_query.py', 'test_row_factories.py', 'test_concurrent.py', 'test_response_future.py']",['7f7b8cc280fed6332ad73a85a51d3594b8ce3433'],74,69,143,8,0.0,0.0,1.0
ead4f2fc8a478bc7bd85f2fcb82699fb7aaff593,ignore generated test artifact,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-13 11:43:05-05:00,18000,2015-10-13 11:46:21-05:00,18000,True,False,['.gitignore'],['9ca9985f703a872cf6bada1ed4949bf70f04d9c0'],0,1,1,1,,,
932a1d5272d075f945ea5659a2a642e3e3cdcb58,"Remove trace, trace_id from Statement",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-13 11:43:23-05:00,18000,2015-10-13 11:46:23-05:00,18000,True,False,"['cluster.py', 'query.py']",['ead4f2fc8a478bc7bd85f2fcb82699fb7aaff593'],14,0,14,2,1.0,1.0,0.0
183c8edb16f7509d956e63b13d4c321e104f0438,"query trace tracing all in ResponseFuture

also add manual page fetching for ResultSet",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-13 17:03:23-05:00,18000,2015-10-13 17:03:23-05:00,18000,True,False,['cluster.py'],['932a1d5272d075f945ea5659a2a642e3e3cdcb58'],45,38,83,1,0.0,0.0,1.0
0f3d56cbf7a85c60d3a307fc698d7392c8271cab,Added tests for PYTHON-406. NamedTable tests with materialized views.,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-13 16:37:39-05:00,18000,2015-10-14 09:42:16-05:00,18000,True,False,['test_named.py'],['fd9dfbb41c863cd220d52ce59eae6cebad499e16'],1,86,87,1,0.0,1.0,1.0
88f0afe9b4c1774f3caf9173ef40412da10fcd10,Add ResultSet get_*query*trace* pass-through to future,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-14 10:15:33-05:00,18000,2015-10-14 10:15:33-05:00,18000,True,False,['cluster.py'],['183c8edb16f7509d956e63b13d4c321e104f0438'],1,17,18,1,1.0,1.0,1.0
5957a65ec12167cd83eda10a06ff87c24f3db7ae,ResponseFuture doc updates,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-14 10:18:05-05:00,18000,2015-10-14 10:18:05-05:00,18000,True,False,['cluster.rst'],['88f0afe9b4c1774f3caf9173ef40412da10fcd10'],0,2,2,1,,,
385baa1659df81d95b81a6582a10c455f25a181e,Trace test updates for PYTHON-318,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-14 10:18:23-05:00,18000,2015-10-14 10:18:23-05:00,18000,True,False,"['test_client_warnings.py', 'test_cluster.py', 'test_resultset.py']",['5957a65ec12167cd83eda10a06ff87c24f3db7ae'],11,14,25,3,,,
f6026d9ffece229fc8b488c14262f0b0dba294dd,"Handle Infinity and NaN in cql string encoding

PYTHON-282",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-14 11:24:57-05:00,18000,2015-10-14 11:24:57-05:00,18000,True,False,['encoder.py'],['9455aa6b176c15bd2505a299ef791ff71424fa65'],1,7,8,1,1.0,1.0,1.0
d1391d82cc5e2680c25654da839cd32453f92650,"Integration test for inf and nan float values

PYTHON-282",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-14 11:25:29-05:00,18000,2015-10-14 11:25:29-05:00,18000,True,False,['test_types.py'],['f6026d9ffece229fc8b488c14262f0b0dba294dd'],0,37,37,1,1.0,1.0,1.0
3b228cb73a6a8f9878e70903da05b4df99457296,Fixing issue with ; delimeter on as_cql_query for keyspace. Changing all_as_cql to internal method to avoid confusion,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-14 15:33:40-05:00,18000,2015-10-14 15:33:40-05:00,18000,True,False,['metadata.py'],['1395401898f47d62d9bfebe858a1d5d288ca3169'],5,5,10,1,,,
30f2a2a895ba8bcdd69d684810743a88f874337a,semicolon following keyspace CQL in export_as_string,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-15 09:26:08-05:00,18000,2015-10-15 09:26:08-05:00,18000,True,False,['metadata.py'],['3b228cb73a6a8f9878e70903da05b4df99457296'],1,1,2,1,,,
c43f65e1cbc2c334e0de3dc8be4d009fd1230f9a,test: update udt meta string test following PYTHON-405,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-15 09:53:53-05:00,18000,2015-10-15 09:53:53-05:00,18000,True,False,['test_metadata.py'],['56732e4e811f4bf22eaaeae5ffcaf8182d28a17e'],3,3,6,1,,,
eb8914f4c8833e0bee51c1152447dcd08e255dd7,Fixing name collision in integration tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-15 09:56:26-05:00,18000,2015-10-15 09:56:26-05:00,18000,True,False,['test_named.py'],['c43f65e1cbc2c334e0de3dc8be4d009fd1230f9a'],6,6,12,1,,,
803e5742fcc2a901a40695a5d5dab81202bf668a,Fixing issue with default_keyspace being over-ridden in cqlengine tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-15 15:02:09-05:00,18000,2015-10-15 15:02:09-05:00,18000,True,False,['test_named.py'],['eb8914f4c8833e0bee51c1152447dcd08e255dd7'],1,8,9,1,1.0,1.0,1.0
53222eec541205c7a9ebc529e14a025e56fb1e9c,"Make bind ignore extra keys in dict values

PYTHON-178",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-15 15:30:16-05:00,18000,2015-10-15 15:30:16-05:00,18000,True,False,"['query.py', 'test_parameter_binding.py']",['eb8914f4c8833e0bee51c1152447dcd08e255dd7'],10,11,21,2,1.0,1.0,0.0
55ebfdccc1275a687fdca653d333316b50cb20f5,"Update integration tests allowing unbound keys in dict

PYTHON-178",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-15 16:17:50-05:00,18000,2015-10-15 16:17:50-05:00,18000,True,False,['test_prepared_statements.py'],['53222eec541205c7a9ebc529e14a025e56fb1e9c'],5,5,10,1,,,
938150d3bdca146ad22be2e1bdd54906045f1a23,Adding test for multiple indicies metadata,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-15 16:33:30-05:00,18000,2015-10-15 16:33:30-05:00,18000,True,False,['test_metadata.py'],['803e5742fcc2a901a40695a5d5dab81202bf668a'],0,31,31,1,0.0,1.0,1.0
1107c5c2ebdbb6e8c49e65d980ff93b54e829227,Skipping mv tests in cqlengine if c* version is less than 3.0,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-16 13:14:38-05:00,18000,2015-10-16 13:14:38-05:00,18000,True,False,['test_named.py'],['803e5742fcc2a901a40695a5d5dab81202bf668a'],2,11,13,1,1.0,1.0,1.0
d4c380cb010fc3396e6217597ead1ef6024be723,"Make ResultSet handle more than just list results

for use with custom ProtocolHandlers providing different ResultMessage deserialization

PYTHON-430",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-16 13:56:36-05:00,18000,2015-10-16 14:45:42-05:00,18000,True,False,"['cluster.py', 'obj_parser.pyx', 'protocol.py']",['385baa1659df81d95b81a6582a10c455f25a181e'],3,17,20,3,1.0,1.0,1.0
795acbd254987c1f11ff41a78f42ecb26a3fb0f4,"test: new tests covering paging for Lazy and NumPy parsers

PYTHON-430",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-16 13:57:36-05:00,18000,2015-10-16 14:45:42-05:00,18000,True,False,['test_cython_protocol_handlers.py'],['d4c380cb010fc3396e6217597ead1ef6024be723'],7,65,72,1,0.43243243243243246,1.0,1.0
9e6ee6fcde72681090513206804005d8114ca15f,cython deser: Handle tuple fallback for non-alpha ids in udts,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-16 15:23:56-05:00,18000,2015-10-16 15:23:56-05:00,18000,True,False,['deserializers.pyx'],['1107c5c2ebdbb6e8c49e65d980ff93b54e829227'],1,3,4,1,,,
e6e4bba3508c261319954e0c7f821dcfdf0e172e,Adding tests for PYTHON-416,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-19 10:37:43-05:00,18000,2015-10-19 10:37:43-05:00,18000,True,False,['test_connection.py'],['2764da92b671d200c449e8b1b21ce14d7b895a89'],1,20,21,1,1.0,1.0,1.0
62558919ac81709fb9128fe5f7729d72afd79b13,Making local quorum default cl for clqengine,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-19 10:51:35-05:00,18000,2015-10-19 10:51:35-05:00,18000,True,False,['connection.py'],['e6e4bba3508c261319954e0c7f821dcfdf0e172e'],1,1,2,1,,,
8e18d2774911bb33c62c408be49fa8d7cc47442d,First pass at moving travis over to the new infrastructure,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-19 15:00:53-05:00,18000,2015-10-19 15:00:53-05:00,18000,True,False,['.travis.yml'],['2764da92b671d200c449e8b1b21ce14d7b895a89'],5,9,14,1,,,
dd4df431b277a27c205766482f6bce6cea2fdad8,"cqle: make default CL based on core default

+ test updates

PYTHON-416",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-20 10:13:47-05:00,18000,2015-10-20 10:13:47-05:00,18000,True,False,"['connection.py', '__init__.py', 'test_consistency.py', 'test_connection.py']",['62558919ac81709fb9128fe5f7729d72afd79b13'],29,19,48,4,1.0,1.0,1.0
8ecb8d483a41d4ae8fc6470cce410f934861db3e,Added space back in condition,Michael Penick,mpenick@users.noreply.github.com,Michael Penick,mpenick@users.noreply.github.com,2015-10-20 11:50:59-07:00,25200,2015-10-20 11:50:59-07:00,25200,True,False,['cluster.py'],['385baa1659df81d95b81a6582a10c455f25a181e'],1,1,2,1,,,
2ade38b5b90aa923be7393c526af1f32426ffdb6,Fixing a few broken integration tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-20 14:44:50-05:00,18000,2015-10-20 14:44:50-05:00,18000,True,False,"['test_loadbalancingpolicies.py', 'test_metadata.py']",['32407d7a1f093e4bb318f6e3d49ed8fa83b62b27'],2,5,7,2,0.0,1.0,1.0
6fd3ee34dac695f7bb357cb4ea7d987b74f5ed23,test: remove print statement,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-20 16:23:12-05:00,18000,2015-10-20 16:23:12-05:00,18000,True,False,['test_types.py'],['3fd410fc8801c47cd658765e1cef8f2a3f158b66'],1,0,1,1,0.0,0.0,0.0
393f257ca4c3946906f6baf1daca431995a6b982,test: fix materialized view test errors,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-20 16:23:25-05:00,18000,2015-10-20 16:23:25-05:00,18000,True,False,['test_query.py'],['6fd3ee34dac695f7bb357cb4ea7d987b74f5ed23'],10,10,20,1,,,
8a52b876856fdca38a83f0a150457c8181131611,Setting up default CLs for both TokenAware tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-21 13:29:47-05:00,18000,2015-10-21 13:29:47-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['393f257ca4c3946906f6baf1daca431995a6b982'],2,2,4,1,0.0,0.0,0.0
915dc94b7ce9668795f418c81c3f5851da88b76c,setup: remove cython extensions and build io for proper docs,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-21 14:19:38-05:00,18000,2015-10-21 14:20:30-05:00,18000,True,False,['setup.py'],['8a52b876856fdca38a83f0a150457c8181131611'],0,17,17,1,0.0,0.0,1.0
db58ba704273240484b2d4cd8f124faf4a3324ff,doc: mention gevent/eventlet patching assumptions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-21 14:19:43-05:00,18000,2015-10-21 14:20:30-05:00,18000,True,False,"['cluster.py', 'eventletreactor.py', 'geventreactor.py']",['915dc94b7ce9668795f418c81c3f5851da88b76c'],7,9,16,3,,,
26f2fafd703df46fe670b167d75b102ee4c46e40,"test: relax timeout commparison

Was occasionally failing in Travis CI because of platform slowness.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-22 09:27:32-05:00,18000,2015-10-22 09:27:32-05:00,18000,True,False,['utils.py'],['db58ba704273240484b2d4cd8f124faf4a3324ff'],11,9,20,1,,,
13f11a1c7c027fcd9d6f9456f568f51007edcb57,setup: correct inaccurate comment,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-22 09:31:58-05:00,18000,2015-10-22 09:31:58-05:00,18000,True,False,['setup.py'],['26f2fafd703df46fe670b167d75b102ee4c46e40'],1,1,2,1,,,
27f98d93e9693abdf9cf50622c11468e1e6275b1,Updating test documentation for python-282,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-22 11:28:57-05:00,18000,2015-10-22 11:28:57-05:00,18000,True,False,['test_types.py'],['13f11a1c7c027fcd9d6f9456f568f51007edcb57'],1,7,8,1,,,
06c8318b4594d0c72120b76c32d2fa922a8bf096,ResponseFuture.get_query_trace_ids for getting ids without fetching,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-22 11:36:23-05:00,18000,2015-10-22 11:36:23-05:00,18000,True,False,['cluster.py'],['27f98d93e9693abdf9cf50622c11468e1e6275b1'],0,6,6,1,1.0,1.0,1.0
f43fd8d41cc037a8c370d51c08c2e7a0157ef499,Add option to populate parital QueryTrace,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-22 12:01:06-05:00,18000,2015-10-22 12:01:06-05:00,18000,True,False,['query.py'],['27f98d93e9693abdf9cf50622c11468e1e6275b1'],4,11,15,1,0.0,0.0,0.0
4bf233efbec8e856cfccac242369a6c3d012d427,typo in docstring,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-22 15:22:08-05:00,18000,2015-10-22 15:22:08-05:00,18000,True,False,['cluster.py'],['06c8318b4594d0c72120b76c32d2fa922a8bf096'],1,1,2,1,,,
95c6008acf4ee2460d5ab1a357fc594d8ef9d69d,Adding skip to test for auto paging and protocol v1,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-22 17:06:51-05:00,18000,2015-10-22 17:06:51-05:00,18000,True,False,"['__init__.py', 'test_cython_protocol_handlers.py']",['4bf233efbec8e856cfccac242369a6c3d012d427'],1,4,5,2,,,
80316f81b66435f6d3b3d89d2c16869f6a3f5209,Skipping non applicable tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-23 17:01:36-05:00,18000,2015-10-23 17:01:36-05:00,18000,True,False,"['test_cython_protocol_handlers.py', 'test_types.py']",['95c6008acf4ee2460d5ab1a357fc594d8ef9d69d'],1,3,4,2,,,
6d17e2ca91cea7760de0dcd06e7ec9633a61c0ac,"exclude dense surrogate columns from metadata

https://datastax-oss.atlassian.net/browse/JAVA-873?focusedCommentId=23630&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-23630",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-26 10:41:50-05:00,18000,2015-10-26 10:44:26-05:00,18000,True,False,"['cqltypes.py', 'metadata.py']",['80316f81b66435f6d3b3d89d2c16869f6a3f5209'],7,13,20,2,0.0,0.0,0.0
56508430985f8ce4b2ff0640e73ffc5f0aa4d6b1,"exclude unnamed dense surrogate columns from metadata

https://datastax-oss.atlassian.net/browse/JAVA-873",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-26 10:48:07-05:00,18000,2015-10-26 10:48:07-05:00,18000,True,False,['metadata.py'],['6d17e2ca91cea7760de0dcd06e7ec9633a61c0ac'],5,6,11,1,0.0,0.0,0.0
046cf3d15723440837ff825cd25ada8665711699,"Attach column names to ResultSet

PYTHON-439",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-26 13:48:59-05:00,18000,2015-10-26 13:51:09-05:00,18000,True,False,['cluster.py'],['56508430985f8ce4b2ff0640e73ffc5f0aa4d6b1'],0,3,3,1,0.5,0.5,0.5
6188d7d7c74c8b4270d16c195e9d244d57602bd7,"Fix unit tests following ResultSet update setting col names

PYTHON-439",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-26 15:36:08-05:00,18000,2015-10-26 15:36:08-05:00,18000,True,False,['test_concurrent.py'],['046cf3d15723440837ff825cd25ada8665711699'],0,1,1,1,,,
21ccd5c1e7bc43032cf9fcba74bb5ba7991d8f14,Handling async materialized view metadata updates in integration tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-10-27 16:02:09-05:00,18000,2015-10-27 16:02:09-05:00,18000,True,False,['test_metadata.py'],['56508430985f8ce4b2ff0640e73ffc5f0aa4d6b1'],1,6,7,1,0.0,1.0,1.0
17d50e80bfd663b7b1c315054dc442084213d89a,"Schema meta types as CQL (WIP)

First pass at CASSANDRA-10365/PYTHON-422

Does not handle deserialization of system_schema.aggregates.initcond
No testing outside of metadata integration.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-27 17:11:36-05:00,18000,2015-10-28 11:22:02-05:00,18000,True,False,"['__init__.py', 'cqltypes.py', 'metadata.py', 'test_metadata.py']",['21ccd5c1e7bc43032cf9fcba74bb5ba7991d8f14'],138,168,306,4,1.0,0.75,0.0
644263bfe69b1d1820c1f4d1a79f65dbf7831035,Use a single CQL encoder for metadata module.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-28 11:16:48-05:00,18000,2015-10-28 11:22:17-05:00,18000,True,False,['metadata.py'],['17d50e80bfd663b7b1c315054dc442084213d89a'],12,10,22,1,0.0,0.0,1.0
394992ab25582705057dfe20c554459b8bd858f7,"cython: fix shift overflow issue in varint unpack

PYTHON-433",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-28 14:10:06-05:00,18000,2015-10-28 14:10:06-05:00,18000,True,False,['cython_marshal.pyx'],['21ccd5c1e7bc43032cf9fcba74bb5ba7991d8f14'],8,10,18,1,,,
619c56ca57aaacdcbaaa3652018f6b0bf3da48de,"Add synchronous meta refresh for materialized views

PYTHON-407",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-28 14:31:39-05:00,18000,2015-10-28 14:31:39-05:00,18000,True,False,"['cluster.py', 'test_metadata.py']",['21ccd5c1e7bc43032cf9fcba74bb5ba7991d8f14'],1,18,19,2,0.0,1.0,0.6666666666666666
1a74af426c0f2cd5135065f8e7ca1b0cfbfb3fe7,"encode UDT field names to avoid implicit conversion in formatting

PYTHON-353",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-29 10:29:41-05:00,18000,2015-10-29 10:29:41-05:00,18000,True,False,['cluster.py'],['21ccd5c1e7bc43032cf9fcba74bb5ba7991d8f14'],1,7,8,1,0.0,1.0,0.0
114c051cd3390d986d284aa4ebf818fc9048f7af,cqle: test for None overriding default,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-29 14:41:02-05:00,18000,2015-10-29 15:00:09-05:00,18000,True,False,['test_model_io.py'],['d12732b01a043d48c0e6f3eb399cec606cbe935a'],0,15,15,1,1.0,1.0,1.0
4bd472d1a4aa125e231cb27784138416ae49b4ae,Reintroduce explicit value flag,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-29 15:01:13-05:00,18000,2015-10-29 15:01:13-05:00,18000,True,False,"['columns.py', 'models.py', 'usertype.py']",['114c051cd3390d986d284aa4ebf818fc9048f7af'],8,6,14,3,,,1.0
699460f658775a2ad2755e743054512bf7029101,"cqle: refactor model persisted flag

removes previous change adding flag to initializer
consolidates valuemanager updates and flag setting
removes need of value manager to know about persistence

PYTHON-348",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-29 15:52:32-05:00,18000,2015-10-29 15:52:32-05:00,18000,True,False,"['columns.py', 'models.py', 'usertype.py', 'test_model_io.py']",['4bd472d1a4aa125e231cb27784138416ae49b4ae'],21,15,36,4,1.0,1.0,1.0
8842b6a63113511f61eb65d97a9a873307fb62cd,cqle test: don't setup cqlengine connection in individual test,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-29 16:21:25-05:00,18000,2015-10-29 16:21:25-05:00,18000,True,False,['test_named.py'],['699460f658775a2ad2755e743054512bf7029101'],13,10,23,1,0.0,,
7fc41a3e6ed9976cacd21d24b3bf036550a64429,"split aggregate parsing for C* 3+, update tests",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-10-30 13:22:22-05:00,18000,2015-10-30 13:22:22-05:00,18000,True,False,"['metadata.py', 'test_metadata.py', 'test_metadata.py']",['644263bfe69b1d1820c1f4d1a79f65dbf7831035'],45,38,83,3,0.4,0.0,0.4
3e3baa626f931ef78857e9aa56ef0f3227d5928b,accept datetime.date when serializing DateType,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-02 10:50:17-06:00,21600,2015-11-02 11:17:50-06:00,21600,True,False,"['cqltypes.py', 'test_marshalling.py']",['21ccd5c1e7bc43032cf9fcba74bb5ba7991d8f14'],5,13,18,2,1.0,1.0,1.0
eff319bbd363f0636c316382836b8f527a82bd51,consider rack for NTS replica placement,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-02 16:47:08-06:00,21600,2015-11-02 16:47:08-06:00,21600,True,False,['metadata.py'],['21ccd5c1e7bc43032cf9fcba74bb5ba7991d8f14'],10,25,35,1,0.0,0.0,0.0
88c6103282be62cbe463409c890ec86c9d7a249e,test: expand NTS testing to cover multi-rack case,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-03 11:20:40-06:00,21600,2015-11-03 11:58:49-06:00,21600,True,False,['test_metadata.py'],['eff319bbd363f0636c316382836b8f527a82bd51'],2,43,45,1,0.0,1.0,1.0
3b10ce56911c411abe5c9013cab13cc3fe21a39f,"Properly serdes nested collections when proto < 3

Inner types are always serialized with v3 + encoding.

PYTHON-215",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-03 15:12:00-06:00,21600,2015-11-03 15:12:00-06:00,21600,True,False,['cqltypes.py'],['d852d2ce1ddc3a35908d1449b4ed8a99614b4062'],6,10,16,1,0.25,1.0,0.0
5efef3013921c07999659225f86e5971e37519ad,"cqle: fix broken UDT management following metadata api update

PYTHON-422",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-04 10:16:08-06:00,21600,2015-11-04 10:16:08-06:00,21600,True,False,['management.py'],['a9839232aeb07eaa2760776673000177b952d601'],1,1,2,1,,,
109a6af03ab1b0c8cbb82d00480d34c08e717f80,Handle case where the query trace returns no entries without throwing exception,Carl Yeksigian,carl@apache.org,Carl Yeksigian,carl@apache.org,2015-11-04 13:17:02-05:00,18000,2015-11-04 13:17:02-05:00,18000,True,False,['query.py'],['d852d2ce1ddc3a35908d1449b4ed8a99614b4062'],1,1,2,1,,,
4ea3c72d809e92d2b554415b9f35945fbd573d18,tighten up whitespace in collection cql encoders,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-04 12:34:02-06:00,21600,2015-11-04 12:34:02-06:00,21600,True,False,"['encoder.py', 'test_parameter_binding.py']",['5efef3013921c07999659225f86e5971e37519ad'],9,9,18,2,,,
c6f59c1e754e7666121d36ac23c8e95da41dda0d,"correct col type for compact value alias

PYTHON-422",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-06 10:22:46-06:00,21600,2015-11-06 10:22:46-06:00,21600,True,False,['metadata.py'],['4ea3c72d809e92d2b554415b9f35945fbd573d18'],1,2,3,1,0.0,0.0,0.0
ca959de212cae920c69cee19a80d41e82e68a1a2,"Adding a skip where needed, fixing issue with cross test pollution in cqlengine",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-03 18:32:43-06:00,21600,2015-11-06 11:37:06-06:00,21600,True,False,"['__init__.py', 'test_named.py', 'test_consistency.py', 'test_cython_protocol_handlers.py']",['c6f59c1e754e7666121d36ac23c8e95da41dda0d'],20,24,44,4,1.0,1.0,1.0
42dcf04479d53f71b3c1142748e9767885ee3ecc,Removing long tests and setting ccm dependency explicitly,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-05 11:57:32-06:00,21600,2015-11-06 11:37:06-06:00,21600,True,False,"['build.yaml', 'test-requirements.txt']",['ca959de212cae920c69cee19a80d41e82e68a1a2'],4,1,5,2,,,
76712df0ce0a34e820f8bfe7539bd6ebf9a6ff5e,removing 3.0 from run configuraiton,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-05 12:03:02-06:00,21600,2015-11-06 11:37:06-06:00,21600,True,False,['build.yaml'],['42dcf04479d53f71b3c1142748e9767885ee3ecc'],1,0,1,1,,,
c91615a931ae501a8c94c731fc4c983c79b8be5f,"First Pass at hardening test harness, against leaky session and adding and removal issues",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-05 17:21:47-06:00,21600,2015-11-06 11:37:06-06:00,21600,True,False,"['__init__.py', 'test_cluster.py', 'test_custom_protocol_handler.py', 'test_cython_protocol_handlers.py', 'test_metadata.py', 'test_metrics.py']",['76712df0ce0a34e820f8bfe7539bd6ebf9a6ff5e'],58,76,134,6,1.0,1.0,0.0
4c0ce059a35d64fbaff32c2270f175c5ad496fe3,Changing PreparedStatementTests over to use common setup and teardown methods to prevent session leaks,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-05 17:30:52-06:00,21600,2015-11-06 11:37:06-06:00,21600,True,False,['test_prepared_statements.py'],['c91615a931ae501a8c94c731fc4c983c79b8be5f'],99,52,151,1,0.7741935483870968,0.0,0.0
43cc46710dadcadf9e279343c1fa954ab1d42437,Expanding test cases in build.yaml,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-05 21:09:36-06:00,21600,2015-11-06 11:37:06-06:00,21600,True,False,['build.yaml'],['4c0ce059a35d64fbaff32c2270f175c5ad496fe3'],0,4,4,1,,,
3e4ecf1b583d7c60ec9bfafe9b2c59511fc120d4,"Changing ccm to use installed version of ccm, rather then pypy",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-06 11:51:03-06:00,21600,2015-11-06 11:51:03-06:00,21600,True,False,"['build.yaml', 'test-requirements.txt']",['43cc46710dadcadf9e279343c1fa954ab1d42437'],1,2,3,2,,,
badc600d8a3449a098116b57e3c3f7ac2c7525e1,docstrings for ResultSet methods,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-06 13:21:58-06:00,21600,2015-11-06 13:21:58-06:00,21600,True,False,['cluster.py'],['4ea3c72d809e92d2b554415b9f35945fbd573d18'],0,9,9,1,,,
78635fa7b47d4e099ad3b9932cb12129a8f82f0e,pre 3.0c1 changelog update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-06 13:22:29-06:00,21600,2015-11-06 13:22:29-06:00,21600,True,False,['CHANGELOG.rst'],['badc600d8a3449a098116b57e3c3f7ac2c7525e1'],0,22,22,1,,,
6e6d3d8aabb77bc459bc10e7923a298c1ef16d07,"Remove overlooked ColumnMetadata.index attr

PYTHON-276",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-06 13:43:42-06:00,21600,2015-11-06 13:43:42-06:00,21600,True,False,"['metadata.py', 'test_metadata.py']",['6ab04f1f82d4cbaf05d3d67ed28f79ee4f60951c'],10,0,10,2,0.6666666666666666,0.3333333333333333,0.6666666666666666
ebbe4198fbba05c8d23101819bcd4b5557a9a831,3.0 upgrade guide,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-06 14:04:39-06:00,21600,2015-11-06 14:04:39-06:00,21600,True,False,['upgrading.rst'],['6e6d3d8aabb77bc459bc10e7923a298c1ef16d07'],0,116,116,1,,,
9536eee7b633afb632c1e5ba72db0bedf9b60ae3,add a note about tcp_nodelay,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-06 14:27:05-06:00,21600,2015-11-06 14:27:05-06:00,21600,True,False,['cluster.py'],['ebbe4198fbba05c8d23101819bcd4b5557a9a831'],0,4,4,1,,,
83d6f6a87651c428b0e4fb8db47b1acca0cb7da4,Updating build.yaml to reduce c* version scope,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-09 11:24:40-06:00,21600,2015-11-09 11:24:40-06:00,21600,True,False,['build.yaml'],['ef65e399a20cb970dd965ef3a0399697a804b70c'],1,0,1,1,,,
a1d3dfaac8403cb3ff46f31f783cb28f67991bd8,post-release version update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-09 14:56:59-06:00,21600,2015-11-09 14:56:59-06:00,21600,True,False,"['CHANGELOG.rst', '__init__.py']",['83d6f6a87651c428b0e4fb8db47b1acca0cb7da4'],1,2,3,2,0.0,0.0,0.8805970149253731
c552b85d8b11048b5e4a7023040d9e7532ad4f8f,"Update PEP version reference

PEP 440 replaces 386, has different specification for RC releases.
386 obsolete because setuptools now normalizes the version when registering",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-09 14:57:28-06:00,21600,2015-11-09 14:57:28-06:00,21600,True,False,['README-dev.rst'],['a1d3dfaac8403cb3ff46f31f783cb28f67991bd8'],1,1,2,1,,,
15dff70b28aee8a804aced91cc56a11c5ed64b0b,correct changelog to reflect normalized version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-09 15:03:41-06:00,21600,2015-11-09 15:03:41-06:00,21600,True,False,['CHANGELOG.rst'],['a76049fd03e7c3d2cf2c96e755e977a5c64a90ce'],2,2,4,1,,,
1ee8cd15f4916da475ef6ace5578865c010f44c3,close the string,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-09 15:06:30-06:00,21600,2015-11-09 15:06:30-06:00,21600,True,False,['__init__.py'],['15dff70b28aee8a804aced91cc56a11c5ed64b0b'],1,1,2,1,1.0,1.0,0.11940298507462686
03781ecb5b8c862d7649473673ea191024725d45,another tweak to version guidance,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-09 15:41:32-06:00,21600,2015-11-09 15:41:32-06:00,21600,True,False,['README-dev.rst'],['1ee8cd15f4916da475ef6ace5578865c010f44c3'],1,1,2,1,,,
8b5b0c2dffc6cb1afdda4bc23d3b0067e07448b2,"Don't reference cython genexp from core modules

Fixes a not-well-understood issue that would cause segfualts when
building with Cython < 0.22",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-10 16:09:47-06:00,21600,2015-11-10 16:09:47-06:00,21600,True,False,"['cluster.py', 'obj_parser.pyx', 'protocol.py']",['03781ecb5b8c862d7649473673ea191024725d45'],13,8,21,3,1.0,1.0,1.0
81eddb89faa8654e2ffaed30887fb82fd3c78730,Updating build.yaml for current supported c* versions.,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-10 16:56:36-06:00,21600,2015-11-10 16:57:37-06:00,21600,True,False,['build.yaml'],['03781ecb5b8c862d7649473673ea191024725d45'],1,1,2,1,,,
403a0cda2018954bb11c5df8d896c9fcec9c6966,Fixing issue where sessions can leak upon test failure. Improving validation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-12 11:59:05-06:00,21600,2015-11-12 13:07:08-06:00,21600,True,False,['test_metadata.py'],['81eddb89faa8654e2ffaed30887fb82fd3c78730'],8,21,29,1,0.0,1.0,1.0
e76c142c2701afc332af537a63e66f42af8e89e5,"concurrent: raise error even if no wait on condition

Fixes an issue where execute concurrent with raise_on_first_error=True would not raise if all results were back before going to wait for results.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-12 16:12:00-06:00,21600,2015-11-12 16:12:00-06:00,21600,True,False,['concurrent.py'],['b74fd953731d3593ca55d163b549a11d84c872fb'],0,2,2,1,1.0,0.0,1.0
699801ad9d8a57e62854b83663630e111e44245a,"NTS: remove extra vars; eliminate unnecessary map copy

peer review PYHTON-378",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-12 16:20:28-06:00,21600,2015-11-12 16:20:28-06:00,21600,True,False,['metadata.py'],['88c6103282be62cbe463409c890ec86c9d7a249e'],6,3,9,1,1.0,1.0,1.0
8c3d0b468026b9bcb757074307da6e2fa4e09640,Adding test for PYTHON-353,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-12 17:45:05-06:00,21600,2015-11-12 17:45:05-06:00,21600,True,False,['test_udts.py'],['b74fd953731d3593ca55d163b549a11d84c872fb'],0,35,35,1,1.0,1.0,1.0
af7f4449acf64cdaf488bc17b77fd84acd0141d8,"Added multi-fields to previous value tests. Misc cleanup.

Cleaned up pep8 issues, refactored tests to use unit asserts.",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-12 16:00:27-06:00,21600,2015-11-13 10:12:05-06:00,21600,True,False,['test_model_io.py'],['b74fd953731d3593ca55d163b549a11d84c872fb'],68,90,158,1,0.0,1.0,1.0
d1273b416bd803da91a2415c2e49d29c380114d6,3.0 changelog update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-13 12:35:22-06:00,21600,2015-11-13 12:35:22-06:00,21600,True,False,['CHANGELOG.rst'],['55bd28ddb6457eaf8c5feedab4763c1085dd7e13'],0,21,21,1,,,
b902ec42e98699bb50a78687cb93a1c46915936c,doc: tweak previous supported wording,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-13 15:09:21-06:00,21600,2015-11-13 15:09:21-06:00,21600,True,False,['upgrading.rst'],['d1273b416bd803da91a2415c2e49d29c380114d6'],1,1,2,1,,,
114a8e06cc70f1a6bd62ecdb34d0bc8821209d3e,doc: upgrade guide formatting,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-13 15:12:55-06:00,21600,2015-11-13 15:12:55-06:00,21600,True,False,['upgrading.rst'],['b902ec42e98699bb50a78687cb93a1c46915936c'],0,4,4,1,,,
7f85c7d506a43c1c00e2ab00c275d62aeb4e3f41,Adding test for python-334,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-13 14:25:39-06:00,21600,2015-11-13 16:14:31-06:00,21600,True,False,['test_query.py'],['d1273b416bd803da91a2415c2e49d29c380114d6'],2,51,53,1,1.0,1.0,1.0
e2319577ec56bc36437cedca07c2f35e298155f8,"Added tests for Python-215, 226, 212, 439. Refactoring tests to use common setup and teardown. Fixing broken testcases.",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-16 13:13:48-06:00,21600,2015-11-20 12:13:57-06:00,21600,True,False,"['__init__.py', 'test_named.py', 'test_cython_protocol_handlers.py', 'test_query.py', 'test_types.py', 'test_udts.py']",['d3b9d4b276736aba94d715feafefb7d133449e34'],117,284,401,6,0.4246575342465753,1.0,0.9863013698630136
b0bb19bd5eff8f2d0f56140bd7d6833f08c2ff0f,"Fix nested type deserialization for proto < 3 in cython

PYTHON-215",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-23 11:14:12-06:00,21600,2015-11-23 11:14:12-06:00,21600,True,False,['deserializers.pyx'],['293a5cac53e895f6a3594cb24a91de1d25fbca76'],1,2,3,1,,,
47b842cc3dac1e36dbb53ff4777872366b05bd6c,Removing superfluous debug statements in test case,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-23 12:35:21-06:00,21600,2015-11-23 12:35:21-06:00,21600,True,False,"['__init__.py', 'test_types.py']",['b0bb19bd5eff8f2d0f56140bd7d6833f08c2ff0f'],11,1,12,2,1.0,0.0,0.0
223709aaae876580f938b651b94134f4a9af26b9,default consistency is now LOCAL_ONE,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-24 11:24:56-06:00,21600,2015-11-24 11:24:56-06:00,21600,True,False,"['cluster.py', 'cluster.rst', 'getting_started.rst', 'upgrading.rst', 'test_consistency.py']",['47b842cc3dac1e36dbb53ff4777872366b05bd6c'],13,9,22,5,,,
e9ac05b549ea1cda4b97cbc2a3e74609ee3811cb,mention default CL in changelog,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-24 11:27:22-06:00,21600,2015-11-24 11:27:22-06:00,21600,True,False,['CHANGELOG.rst'],['223709aaae876580f938b651b94134f4a9af26b9'],0,1,1,1,,,
4e42780f30399fd52c68df5363685486ab93364f,Adding test for python-438,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-24 11:34:57-06:00,21600,2015-11-24 11:34:57-06:00,21600,True,False,"['__init__.py', 'test_query.py']",['e9ac05b549ea1cda4b97cbc2a3e74609ee3811cb'],2,39,41,2,1.0,1.0,1.0
eda07cf6c56ea844261139a6d510ec7f11baabae,Additional verification for partial trace session,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-24 11:55:34-06:00,21600,2015-11-24 11:55:34-06:00,21600,True,False,['test_query.py'],['4e42780f30399fd52c68df5363685486ab93364f'],15,20,35,1,0.0,1.0,1.0
6af642dc6ad34c927f4c13c6c632e5f13a0b4dbe,finalize changelog and version for 3.0 release,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-24 14:39:55-06:00,21600,2015-11-24 14:39:55-06:00,21600,True,False,"['CHANGELOG.rst', '__init__.py']",['eda07cf6c56ea844261139a6d510ec7f11baabae'],1,2,3,2,,,
cbbd024e14985af258eeeadaadb5d5dff6b1bce8,post-release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-24 14:46:36-06:00,21600,2015-11-24 14:46:36-06:00,21600,True,False,['__init__.py'],['6af642dc6ad34c927f4c13c6c632e5f13a0b4dbe'],1,1,2,1,,,
c488c57e005c3aff29946c52cabb3c327ca9ac25,Add instructions for bundling driver for Cassandra,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-25 10:03:11-06:00,21600,2015-11-25 10:03:11-06:00,21600,True,False,['README-dev.rst'],['cbbd024e14985af258eeeadaadb5d5dff6b1bce8'],0,14,14,1,,,
bbba912a886c1b2437bfef45511fec7ff83a307e,skipping bad keyspace metadata until python-440 is resolved,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-11-25 12:15:50-06:00,21600,2015-11-25 12:15:50-06:00,21600,True,False,"['test_metadata.py', 'utils.py']",['c488c57e005c3aff29946c52cabb3c327ca9ac25'],1,4,5,2,,,
1e857176e44e168e4e613fd9d42676557f2ca307,"capture exc_info early in keyspace meta handling

Resolves an issue where exc_info is being cleared in nosetest context,
causing tests to fail.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-11-25 14:34:20-06:00,21600,2015-11-25 14:34:20-06:00,21600,True,False,"['metadata.py', 'test_metadata.py']",['bbba912a886c1b2437bfef45511fec7ff83a307e'],3,2,5,2,,,
1f46791fa502c80149b9e6f17386d013dc054066,First Python support for DSE Graph.,Kevin Gallardo,kevin.gallardo@datastax.com,Kevin Gallardo,kevin.gallardo@datastax.com,2015-11-20 15:02:45+00:00,0,2015-11-30 17:36:32+00:00,0,True,False,"['cluster.py', 'query.py']",['1e857176e44e168e4e613fd9d42676557f2ca307'],2,54,56,2,1.0,1.0,0.46153846153846156
8618bf9e1484669595d6e62cc39658645b1756d3,additional setup envvar disabling all extensions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-02 15:09:32-06:00,21600,2015-12-02 15:09:32-06:00,21600,True,False,['setup.py'],['1e857176e44e168e4e613fd9d42676557f2ca307'],1,1,2,1,,,
4cbf170d42a0ecadee5d09ae2b327521b348b814,doc: more detail about ways to skip cython,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-02 15:52:31-06:00,21600,2015-12-02 15:52:31-06:00,21600,True,False,"['cluster.py', 'installation.rst']",['8618bf9e1484669595d6e62cc39658645b1756d3'],3,20,23,2,,,
d8fff462863104a8b883612f80f91e8e20699f40,"short-circuit setup_requires for egg_info in pip context

PYTHON-448",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-02 15:56:14-06:00,21600,2015-12-02 15:56:14-06:00,21600,True,False,['setup.py'],['4cbf170d42a0ecadee5d09ae2b327521b348b814'],0,1,1,1,,,
1ff7eb37e5b23c1cfa4c2e2b7a9487244cf98ed5,Twisted gave up on Python 2.6 and 3.3. Lock down for testing,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-02 16:34:37-06:00,21600,2015-12-02 16:34:37-06:00,21600,True,False,['tox.ini'],['d8fff462863104a8b883612f80f91e8e20699f40'],1,1,2,1,,,
5ce7dbee305dee92a4b0145cf33015c32ac28a7d,Moved Graph components in the dse module.,Kevin Gallardo,kevin.gallardo@datastax.com,Kevin Gallardo,kevin.gallardo@datastax.com,2015-12-04 11:06:58+00:00,0,2015-12-04 11:06:58+00:00,0,True,False,"['cluster.py', 'query.py', '__init__.py', 'graph.py']",['1f46791fa502c80149b9e6f17386d013dc054066'],56,59,115,4,,,
7e31136c3a527374504c65891a0cee1f9ce62ba3,"Added AbstractGraphStatement, to add more statement classes (Prepared, Bound)",Kevin Gallardo,kevin.gallardo@datastax.com,Kevin Gallardo,kevin.gallardo@datastax.com,2015-12-04 19:07:05+00:00,0,2015-12-04 19:10:18+00:00,0,True,False,['graph.py'],['5ce7dbee305dee92a4b0145cf33015c32ac28a7d'],16,43,59,1,1.0,1.0,1.0
5c6cd5f9b77fe99f6906b785e332f74df260ce74,Added some documentation about the new classes.,Kevin Gallardo,kevin.gallardo@datastax.com,Kevin Gallardo,kevin.gallardo@datastax.com,2015-12-07 14:02:51+00:00,0,2015-12-07 14:14:44+00:00,0,True,False,['graph.py'],['7e31136c3a527374504c65891a0cee1f9ce62ba3'],2,8,10,1,,,
4bdf8a7632a2309d8097cee1f1b4df01c94b3f70,doc: missing ')' in code block,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-07 08:26:31-06:00,21600,2015-12-07 08:26:31-06:00,21600,True,False,['getting_started.rst'],['1e857176e44e168e4e613fd9d42676557f2ca307'],1,1,2,1,,,
2bc5548c27f0c7bfd30c40db17be0ee4d729a3e6,Twisted gave up on Python 2.6 and 3.3. Lock down for testing,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-02 16:34:37-06:00,21600,2015-12-07 09:11:36-06:00,21600,True,False,['tox.ini'],['4bdf8a7632a2309d8097cee1f1b4df01c94b3f70'],1,1,2,1,,,
a53af681ad1832e9cfcaa8a9169b45623340fd92,"Added PreparedGraphStatement and BoundGraphStatement classes.

- Once DSE Graph adds the possibility to prepare Gremlin queries, these classes should allow preparing, binding and executing binded statements. Tested with a sort of mock prepared statement, the behaviour of Prepared and BoundGraphStatements is validated in the sense that they serialize the parameters in the expected way defined in the specs, and returns results of the executions.
- Minor GraphResultSet method signature change.",Kevin Gallardo,kevin.gallardo@datastax.com,Kevin Gallardo,kevin.gallardo@datastax.com,2015-12-09 18:12:34+00:00,0,2015-12-09 18:12:34+00:00,0,True,False,['graph.py'],['5c6cd5f9b77fe99f6906b785e332f74df260ce74'],5,72,77,1,1.0,1.0,0.5128205128205128
6412db55cd793fa0d5fdd94c9feeccb517529983,"Docs for all public fields and methods, misc code changes.",Kevin Gallardo,kevin.gallardo@datastax.com,Kevin Gallardo,kevin.gallardo@datastax.com,2015-12-10 14:13:11+00:00,0,2015-12-10 14:21:23+00:00,0,True,False,['graph.py'],['a53af681ad1832e9cfcaa8a9169b45623340fd92'],35,92,127,1,,,1.0
c1e0b88c9a17214119bc4361316703788c17a064,BoundStatement copies graph_options from PreparedStatement.,Kevin Gallardo,kevin.gallardo@datastax.com,Kevin Gallardo,kevin.gallardo@datastax.com,2015-12-10 16:00:38+00:00,0,2015-12-10 16:00:38+00:00,0,True,False,['graph.py'],['6412db55cd793fa0d5fdd94c9feeccb517529983'],1,3,4,1,1.0,1.0,0.0
6a0a4371bcee7568dda13ebc543d7906d68421d1,"Added file dse/changes.md, summary of the API for Graph.",Kevin Gallardo,kevin.gallardo@datastax.com,Kevin Gallardo,kevin.gallardo@datastax.com,2015-12-10 16:56:06+00:00,0,2015-12-10 16:56:06+00:00,0,True,False,['changes.md'],['c1e0b88c9a17214119bc4361316703788c17a064'],0,106,106,1,,,
a001257c55372571e133fbaa56f5585d9eddb345,"cqle: correct exception message for INE with counters

PYTHON-453",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-11 09:00:43-06:00,21600,2015-12-11 09:00:43-06:00,21600,True,False,['query.py'],['2bc5548c27f0c7bfd30c40db17be0ee4d729a3e6'],1,1,2,1,,,
de1273af07423732cc509fff2f4db39490ce25c2,doc: remove timeout parameter from ResponseFuture.result,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-14 11:25:32-06:00,21600,2015-12-14 11:25:32-06:00,21600,True,False,['cluster.rst'],['a001257c55372571e133fbaa56f5585d9eddb345'],1,1,2,1,,,
379f6a3aa740f7830fc486bc5835cd725819e3df,"Fixing timing, dependency and CL issues in tests.",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2015-12-03 13:53:19-06:00,21600,2015-12-14 16:09:53-06:00,21600,True,False,"['build.yaml', 'test-requirements.txt', 'test_named.py', 'test_prepared_statements.py', 'test_query.py']",['a001257c55372571e133fbaa56f5585d9eddb345'],11,24,35,5,1.0,1.0,0.0
2be8840bffe467d0dfdb37943438d9770aea496d,PYTHON-454 Pass authenticator class name to Authenticator implementations,Mike Adamson,madamson@datastax.com,Mike Adamson,madamson@datastax.com,2015-12-15 12:48:57+00:00,0,2015-12-15 12:48:57+00:00,0,True,False,"['auth.py', 'connection.py']",['be4e1db9b3ab0ee7ad185d882add97a18a75d425'],3,3,6,2,1.0,1.0,1.0
3891595b2eecac71d6db33c470d19c2a20ff4146,Send simple statements parameters through the protocol.,Kevin Gallardo,kevin.gallardo@datastax.com,Kevin Gallardo,kevin.gallardo@datastax.com,2015-12-15 15:16:22+00:00,0,2015-12-15 15:16:22+00:00,0,True,False,"['cluster.py', 'protocol.py']",['6a0a4371bcee7568dda13ebc543d7906d68421d1'],4,12,16,2,0.2,0.2,0.0
6c1329eb98e97fbba429a3c74f1a59b245daf347,Added simple Statements with parameters.,Kevin Gallardo,kevin.gallardo@datastax.com,Kevin Gallardo,kevin.gallardo@datastax.com,2015-12-15 15:25:27+00:00,0,2015-12-15 15:25:27+00:00,0,True,False,['graph.py'],['3891595b2eecac71d6db33c470d19c2a20ff4146'],5,20,25,1,1.0,1.0,0.0
1eb9a8456a2bb8ecc66a694904224ad98700f80b,Forgot to add the graph options from the GraphStatement constructor to the statement.,Kevin Gallardo,kevin.gallardo@datastax.com,Kevin Gallardo,kevin.gallardo@datastax.com,2015-12-16 17:15:46+00:00,0,2015-12-16 17:15:46+00:00,0,True,False,['graph.py'],['6c1329eb98e97fbba429a3c74f1a59b245daf347'],0,2,2,1,1.0,1.0,0.0
3355bf9a1243b908a9459809b70ee71fb8ce2b02,"Make server auth string a class attribute, add test

PYTHON-454",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-16 13:58:34-06:00,21600,2015-12-16 13:58:34-06:00,21600,True,False,"['auth.py', 'connection.py', 'test_authentication.py']",['2357a94d610d8226615e99172b916435ec36e773'],12,20,32,3,0.0,1.0,1.0
45fdb57dcc96c99d5d8810a4b5853ecfb0eebac8,PYTHON-454 Pass authenticator class name to Authenticator implementations,Mike Adamson,madamson@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-16 16:48:11-06:00,21600,2015-12-16 16:48:11-06:00,21600,True,False,['dseauth.py'],['3355bf9a1243b908a9459809b70ee71fb8ce2b02'],0,66,66,1,1.0,1.0,0.6976744186046512
693463e5ab1eb1f7a26eb9ded2ba15ca76d3efa8,dseauth to separate package,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-16 16:50:30-06:00,21600,2015-12-16 16:50:30-06:00,21600,True,False,"['__init__.py', 'auth.py']",['45fdb57dcc96c99d5d8810a4b5853ecfb0eebac8'],0,0,0,2,,,
5fe962b6075a355812ecceb8afd59c2e5ef6f1bb,pep8,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-16 16:51:22-06:00,21600,2015-12-16 16:51:22-06:00,21600,True,False,['auth.py'],['693463e5ab1eb1f7a26eb9ded2ba15ca76d3efa8'],5,9,14,1,,,
7d555d6e9e6c4a5688f504d914fadff1c361779f,"Test for DSE Authenticator

PYTHON-455",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-16 16:52:50-06:00,21600,2015-12-16 16:52:50-06:00,21600,True,False,['test_authentication.py'],['5fe962b6075a355812ecceb8afd59c2e5ef6f1bb'],0,16,16,1,1.0,1.0,0.7142857142857143
2937df853c8bf908ccdb449360676c2ad9d3ad7e,Make parameter transform more pythonic,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-18 15:20:47-06:00,21600,2015-12-18 15:20:47-06:00,21600,True,False,['graph.py'],['276cf21fd2d5ea61fc83afba90611cd7e73afd01'],10,4,14,1,0.0,0.0,0.0
e7561d1b0a8ee0768519959ace71bdda5ff97638,"Add common graph options to GraphStatement

Also abandoned prepared graph statement until the simple API is settled",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-21 11:21:56-06:00,21600,2015-12-21 11:21:56-06:00,21600,True,False,['graph.py'],['2937df853c8bf908ccdb449360676c2ad9d3ad7e'],147,41,188,1,0.0,0.0,0.2857142857142857
2515b705442b62f0385e69b21fc6d3bbcc24d1d6,"Use core ResultSet, introduce some graph result row factories",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-21 13:51:07-06:00,21600,2015-12-21 13:51:07-06:00,21600,True,False,['graph.py'],['e7561d1b0a8ee0768519959ace71bdda5ff97638'],27,52,79,1,1.0,1.0,0.7333333333333333
717736cd27c010bda629916f1370f312b4b979b9,"Restore simple statement CQL binding, inject params for graph",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-21 14:43:48-06:00,21600,2015-12-21 14:43:48-06:00,21600,True,False,"['cluster.py', 'protocol.py', 'graph.py']",['2515b705442b62f0385e69b21fc6d3bbcc24d1d6'],20,24,44,3,0.0,0.3333333333333333,0.0
18a7214406b79748676e1d9b1c2ea3c34c0c51a2,Additional parameters for GraphSession.execute,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-21 15:36:41-06:00,21600,2015-12-21 15:36:41-06:00,21600,True,False,['graph.py'],['717736cd27c010bda629916f1370f312b4b979b9'],6,10,16,1,0.0,1.0,0.0
da81b887dbd4d4539d43539c36cbf3949c639fb1,cleanup,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-21 15:41:20-06:00,21600,2015-12-21 15:41:20-06:00,21600,True,False,['graph.py'],['18a7214406b79748676e1d9b1c2ea3c34c0c51a2'],7,5,12,1,,,
0bbd64b8373648332f1531cace2b8d396e7e49c7,Remove change notes,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-21 15:42:08-06:00,21600,2015-12-21 15:42:08-06:00,21600,True,False,['changes.md'],['da81b887dbd4d4539d43539c36cbf3949c639fb1'],106,0,106,1,,,
2c35335c64c996a1336f74497078466f2499f0dd,Fix graph Result str to handle varying value types.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-12-22 13:47:32-06:00,21600,2015-12-22 13:47:32-06:00,21600,True,False,['graph.py'],['0bbd64b8373648332f1531cace2b8d396e7e49c7'],1,1,2,1,,,
82a690965dda24b8ad64c5e555c93b310588baaa,PYTHON-460: correct docs around default paging behavior,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-05 09:26:43-06:00,21600,2016-01-05 09:26:43-06:00,21600,True,False,['query_paging.rst'],['201d2c68a741e00c297b7e8ef3b04ffe92188ecd'],2,2,4,1,,,
f77173522692a00ee7756a4d27e996a43b5e14c3,"cython: fix offset overflow in large collections

PYTHON-459",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-06 12:05:58-06:00,21600,2016-01-06 12:05:58-06:00,21600,True,False,['deserializers.pyx'],['82a690965dda24b8ad64c5e555c93b310588baaa'],26,18,44,1,,,
f2c3e240cf04446025a9a94fbd277ea3fb83f3e6,"geo types with deserialization

PYTHON-456",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-06 13:33:07-06:00,21600,2016-01-06 13:33:07-06:00,21600,True,False,"['cqltypes.py', 'marshal.py', 'util.py']",['7d555d6e9e6c4a5688f504d914fadff1c361779f'],0,119,119,3,0.6833333333333333,1.0,0.8833333333333333
0ad44f9bbfbc11ca078c26ccb1ae1fc45c9f3bec,"geo type binary serialization

PYTHON-456",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-06 16:35:39-06:00,21600,2016-01-06 16:35:39-06:00,21600,True,False,"['cqltypes.py', 'marshal.py']",['f2c3e240cf04446025a9a94fbd277ea3fb83f3e6'],5,51,56,2,1.0,1.0,1.0
bcfa8123c165143ae3296085cac8f149cec9ea07,"improve ExponentialReconnectionPolicy,now can custom max attempts time",root,root@videoseg1.cs1cloud.internal,root,vipjml@gmail.com,2016-01-01 13:19:53+08:00,-28800,2016-01-07 10:34:14+08:00,-28800,True,False,"['policies.py', 'test_policies.py']",['201d2c68a741e00c297b7e8ef3b04ffe92188ecd'],3,23,26,2,0.0,0.0,0.7857142857142857
a6eba0ff037256fd28ff89ed0ae0de821ac8aad6,"add dse.cluster for implicit type registration

PYTHON-456",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-07 11:46:05-06:00,21600,2016-01-07 11:46:05-06:00,21600,True,False,"['cluster.py', 'cluster.py']",['0ad44f9bbfbc11ca078c26ccb1ae1fc45c9f3bec'],2,29,31,2,1.0,1.0,0.6428571428571429
b1beb4f41ebe62db58cf056c0add2b1e43638549,"GraphOptions as an object, update docs",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-07 16:29:45-06:00,21600,2016-01-07 16:29:45-06:00,21600,True,False,['graph.py'],['2c35335c64c996a1336f74497078466f2499f0dd'],26,57,83,1,1.0,1.0,0.14285714285714285
006e7e460c3df5bfc2debe5290ea0433bc22de49,graph tweaks for Python3,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-07 16:59:36-06:00,21600,2016-01-07 16:59:36-06:00,21600,True,False,['graph.py'],['b1beb4f41ebe62db58cf056c0add2b1e43638549'],2,3,5,1,1.0,1.0,0.0
ccae3183ea69b4e8cd8beebe91e88393970a6ee2,Fix graph Result getitem and make it work for lists,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-08 09:33:31-06:00,21600,2016-01-08 09:33:31-06:00,21600,True,False,['graph.py'],['006e7e460c3df5bfc2debe5290ea0433bc22de49'],3,3,6,1,,,
3bddef6185f2691e1713dfe51d1fa26d1555724c,add TODO and tweak test #455,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-08 10:48:07-06:00,21600,2016-01-08 10:48:07-06:00,21600,True,False,"['policies.py', 'test_policies.py']",['9ffcf00f2d2b8578601b7d9787bff69f000f216f'],13,21,34,2,1.0,1.0,1.0
a9d1e4515860c7e0852d3cf58ff43618c6d19b93,"cython: stack allocation and memcpy in marshalling to avoid alignment issues

PYTHON-450",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-08 13:16:50-06:00,21600,2016-01-08 13:16:50-06:00,21600,True,False,['cython_marshal.pyx'],['3bddef6185f2691e1713dfe51d1fa26d1555724c'],31,49,80,1,,,
ea72b6d25806154ec08ab2b8d87a09457d6fd406,remove unused swap_order function,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-08 13:36:58-06:00,21600,2016-01-08 13:36:58-06:00,21600,True,False,['cython_marshal.pyx'],['a9d1e4515860c7e0852d3cf58ff43618c6d19b93'],17,0,17,1,,,
5ef6078852cce25bb55caa3f25770529040716da,fused types for number unpacking,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-08 14:16:04-06:00,21600,2016-01-08 14:16:04-06:00,21600,True,False,['cython_marshal.pyx'],['ea72b6d25806154ec08ab2b8d87a09457d6fd406'],40,31,71,1,,,
d7c10689096c22c8b7e159aa2af6a95ca7d4bb0d,Remove cython marshalling pass-through functions,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-08 14:42:13-06:00,21600,2016-01-08 14:42:13-06:00,21600,True,False,"['cython_marshal.pyx', 'deserializers.pyx', 'ioutils.pyx']",['5ef6078852cce25bb55caa3f25770529040716da'],54,23,77,3,,,
827f4604ee8c5a5aa25b0417e41776a096201e01,inline memcopy from numpy_parser to cython_marshal,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-08 15:34:10-06:00,21600,2016-01-08 15:39:56-06:00,21600,True,False,"['cython_marshal.pyx', 'numpy_parser.pyx']",['d7c10689096c22c8b7e159aa2af6a95ca7d4bb0d'],14,10,24,2,,,
554211200f8afa94198e95c76e996f5b0300b0a1,doc: add discussion about LWT results,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-12 13:50:48-06:00,21600,2016-01-12 13:50:48-06:00,21600,True,False,"['query.py', 'index.rst', 'lwt.rst']",['3bddef6185f2691e1713dfe51d1fa26d1555724c'],0,98,98,3,,,
676d874577485e93d3ac4a1e6b525010daa4fbfe,"Decimal serlz accepts primitive numeric types and tuple

PYTHON-468",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-12 16:01:42-06:00,21600,2016-01-12 16:01:42-06:00,21600,True,False,"['cqltypes.py', 'test_marshalling.py']",['554211200f8afa94198e95c76e996f5b0300b0a1'],1,10,11,2,1.0,1.0,1.0
df809b37f451cb4e20b0e41b73e25d8fc0011189,Don't test Decimal(float) for python 2.6,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-12 17:00:18-06:00,21600,2016-01-12 17:00:18-06:00,21600,True,False,['test_marshalling.py'],['676d874577485e93d3ac4a1e6b525010daa4fbfe'],3,15,18,1,1.0,1.0,1.0
5d97c1e3236a54cfd4f15fb28624f9b9e88038be,"is_schema_agreed attribute for insight following DDL requests

PYTHON-458",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-12 17:27:38-06:00,21600,2016-01-12 17:27:38-06:00,21600,True,False,"['cluster.py', 'cluster.rst']",['554211200f8afa94198e95c76e996f5b0300b0a1'],1,11,12,2,0.0,0.0,1.0
173f7804cd5b04c0ae0c8ee8b6daf2e095e0703b,doc typo,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-13 07:11:28-06:00,21600,2016-01-13 07:11:28-06:00,21600,True,False,['lwt.rst'],['554211200f8afa94198e95c76e996f5b0300b0a1'],1,1,2,1,,,
5d5f1b1865cead8d7d5ffd42443caffabcf1b8d3,"Revert to intrinsic memcpy instead of inline

PYTHON-450
intrinsic was 25% faster in benchmarks",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-15 10:24:02-06:00,21600,2016-01-15 10:24:02-06:00,21600,True,False,"['cython_marshal.pyx', 'numpy_parser.pyx']",['827f4604ee8c5a5aa25b0417e41776a096201e01'],11,3,14,2,,,
53b08c8906169f85611347a7eea3da145c75f602,PYTHON-455 Provide separate auth providers for plain text and GSSAPI,Mike Adamson,madamson@datastax.com,Mike Adamson,madamson@datastax.com,2016-01-15 16:59:19+00:00,0,2016-01-15 16:59:19+00:00,0,True,False,['auth.py'],['3147a7aef8f27010f04bf19a44eb2e4ca0210136'],9,13,22,1,,,
79a6a2d214a78f8a65194cf01a9cdeb2fca21f1d,Update dse auth test following #463,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-15 11:40:46-06:00,21600,2016-01-15 11:40:46-06:00,21600,True,False,['test_authentication.py'],['53b08c8906169f85611347a7eea3da145c75f602'],3,3,6,1,,,
52cc79475d070a35793a501eec85fecddfe3cf3d,correct outdated comment in graph session,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-15 11:51:34-06:00,21600,2016-01-15 11:51:34-06:00,21600,True,False,['graph.py'],['ccae3183ea69b4e8cd8beebe91e88393970a6ee2'],1,1,2,1,,,
dbe98116b3906d5d30b9e1a05e72731ac17a9e03,Check for kerberos library before attempting GSSAPI,Mike Adamson,madamson@datastax.com,Mike Adamson,madamson@datastax.com,2016-01-18 11:57:43+00:00,0,2016-01-18 11:57:43+00:00,0,True,False,['auth.py'],['cfd5ba1f34160532c6b38b7e8c17fdc8e9b39b24'],2,11,13,1,1.0,1.0,0.0
d9580101127806a25cdc955317520beda4d8573d,"mimic shapely.geometry type attributes in dse.util geo types

Changed DSE util types to have similar naming and composition to
the shapely library. This allows shapely types to be used interchangably
when serializing for binding. It also makes it more intuitive to init
one from the other.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-19 16:18:09-06:00,21600,2016-01-19 16:18:09-06:00,21600,True,False,"['cqltypes.py', 'util.py']",['c6fcea858603879a10aeee6d96368ac349735832'],17,35,52,2,1.0,1.0,0.625
3e635e61ffd8f94a74761022493dbc3def200a7c,dse extension is split to separate repo,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-20 14:59:54-06:00,21600,2016-01-20 14:59:54-06:00,21600,True,False,"['auth.py', '__init__.py', 'auth.py', 'cluster.py', 'cqltypes.py', 'graph.py', 'marshal.py', 'util.py']",['90f5e35cb96511e2a0c25072067fbea0314a15a1'],472,1,473,8,0.1651376146788991,0.0,0.2889908256880734
9d8a1df270ffe884a8cc3e46403e5e6c930b8a6f,spacing,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-20 15:02:07-06:00,21600,2016-01-20 15:02:07-06:00,21600,True,False,['query.py'],['3e635e61ffd8f94a74761022493dbc3def200a7c'],0,1,1,1,,,
070df4ae83286acb32c604b17917b0552553cbeb,Remove DSE auth integ test after splitting repo,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-21 12:42:37-06:00,21600,2016-01-21 12:42:37-06:00,21600,True,False,['test_authentication.py'],['9d8a1df270ffe884a8cc3e46403e5e6c930b8a6f'],16,0,16,1,0.0,0.0,0.2857142857142857
5e80f6c8d8782674390dff4eaec422a8ca4d4e2c,Enable python driver to run tests against dse clusters,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-01-21 14:40:35-06:00,21600,2016-01-21 14:40:35-06:00,21600,True,False,['__init__.py'],['070df4ae83286acb32c604b17917b0552553cbeb'],5,33,38,1,0.6923076923076923,0.6923076923076923,0.6923076923076923
26a7094ad8c69217db76a00aa1b66eca0508ef91,don't bother trying to setup ccm for external cluster,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-22 16:26:27-06:00,21600,2016-01-22 16:26:27-06:00,21600,True,False,['__init__.py'],['96a55e2dff2b4387557bd7d4ad14eed486ffa0e4'],6,0,6,1,,,
4d6465aec0ebdb36c39f03993d89efa85607d229,no version attempt for external cluster testing,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-22 16:27:59-06:00,21600,2016-01-22 16:27:59-06:00,21600,True,False,['__init__.py'],['26a7094ad8c69217db76a00aa1b66eca0508ef91'],16,0,16,1,,,
8b00f59fd4f2e9d4b48bc21fc298e6cb99600a1f,"discard instead of remove from scheduled tasks

avoids key error when multiple of the same tasks are scheduled",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-26 09:51:00-06:00,21600,2016-01-26 09:51:00-06:00,21600,True,False,['cluster.py'],['4d6465aec0ebdb36c39f03993d89efa85607d229'],1,1,2,1,,,
aed79a0db2418112b86594f085b1cfe002c5c026,Fix issue with version not being set for ccm when not using external clusters,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-01-26 15:24:03-06:00,21600,2016-01-26 15:24:03-06:00,21600,True,False,['__init__.py'],['8b00f59fd4f2e9d4b48bc21fc298e6cb99600a1f'],0,4,4,1,,,
15f91558de56cd5729124999a4bed4f9b54fff15,"Fix Python3 bug with Timers and heaps

Add comparison operator to allow Timers with the same end time to be
pushed into heaps. It's poorly documented, but the warning can be found
here:
https://docs.python.org/2/library/heapq.html#priority-queue-implementation-notes
""In the future with Python 3, tuple comparison breaks for (priority,
task) pairs if the priorities are equal and the tasks do not have a
default comparison order.""",jonmcevoy,jmcevoy@jmcevoy1.trionworld.priv,jonmcevoy,jmcevoy@jmcevoy1.trionworld.priv,2016-01-28 11:07:18-08:00,28800,2016-01-28 11:07:18-08:00,28800,True,False,['connection.py'],['aed79a0db2418112b86594f085b1cfe002c5c026'],0,3,3,1,1.0,1.0,1.0
5b054bf1604c4cf76ec644f3e3023f1f033d8a85,[ci skip] Update copyright dates,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-29 13:28:26-06:00,21600,2016-01-29 13:59:06-06:00,21600,True,False,"['README.rst', 'base.py', 'callback_full_pipeline.py', 'future_batches.py', 'future_full_pipeline.py', 'future_full_throttle.py', 'sync.py', 'build.yaml', '__init__.py', 'auth.py', 'buffer.pxd', 'bytesio.pxd', 'bytesio.pyx', 'cluster.py', 'cmurmur3.c', 'concurrent.py', 'connection.py', '__init__.py', 'columns.py', 'connection.py', 'functions.py', 'management.py', 'models.py', 'named.py', 'operators.py', 'query.py', 'statements.py', 'cqltypes.py', 'cython_marshal.pyx', 'cython_utils.pxd', 'cython_utils.pyx', 'deserializers.pxd', 'deserializers.pyx', 'encoder.py', '__init__.py', 'asyncorereactor.py', 'eventletreactor.py', 'geventreactor.py', 'libevreactor.py', 'twistedreactor.py', 'ioutils.pyx', 'marshal.py', 'metadata.py', 'metrics.py', 'numpyFlags.h', 'numpy_parser.pyx', 'obj_parser.pyx', 'parsing.pxd', 'parsing.pyx', 'policies.py', 'pool.py', 'protocol.py', 'query.py', 'row_parser.pyx', 'tuple.pxd', 'type_codes.pxd', 'util.py', 'conf.py', 'example_core.py', 'example_mapper.py', 'setup.py', 'test-requirements.txt', '__init__.py', '__init__.py', '__init__.py', 'base.py', '__init__.py', 'test_container_columns.py', 'test_counter_column.py', 'test_static_column.py', 'test_validation.py', 'test_value_io.py', '__init__.py', 'test_compaction_settings.py', 'test_management.py', '__init__.py', 'test_class_construction.py', 'test_equality_operations.py', 'test_model.py', 'test_model_io.py', 'test_polymorphism.py', 'test_udts.py', 'test_updates.py', 'test_value_lists.py', '__init__.py', 'test_base_operator.py', 'test_where_operators.py', '__init__.py', 'test_batch_query.py', 'test_datetime_queries.py', 'test_named.py', 'test_queryoperators.py', 'test_queryset.py', 'test_updates.py', '__init__.py', 'test_assignment_clauses.py', 'test_assignment_statement.py', 'test_base_clause.py', 'test_base_statement.py', 'test_delete_statement.py', 'test_insert_statement.py', 'test_select_statement.py', 'test_update_statement.py', 'test_where_clause.py', 'test_batch_query.py', 'test_consistency.py', 'test_ifnotexists.py', 'test_timestamp.py', 'test_transaction.py', 'test_ttl.py', 'datatype_utils.py', '__init__.py', 'test_consistency.py', 'test_failure_types.py', 'test_ipv6.py', 'test_large_data.py', 'test_loadbalancingpolicies.py', 'test_schema.py', 'test_ssl.py', 'utils.py', '__init__.py', 'test_authentication.py', 'test_client_warnings.py', 'test_cluster.py', 'test_concurrent.py', 'test_connection.py', 'test_control_connection.py', 'test_custom_payload.py', 'test_custom_protocol_handler.py', 'test_metadata.py', 'test_metrics.py', 'test_prepared_statements.py', 'test_query.py', 'test_query_paging.py', 'test_routing.py', 'test_row_factories.py', 'test_types.py', 'test_udts.py', 'utils.py', 'util.py', 'test_load.py', 'test_multi_inserts.py', '__init__.py', '__init__.py', 'bytesio_testhelper.pyx', 'test_bytesio.py', 'utils.py', '__init__.py', 'eventlet_utils.py', 'gevent_utils.py', 'test_asyncorereactor.py', 'test_eventletreactor.py', 'test_geventreactor.py', 'test_libevreactor.py', 'test_libevtimer.py', 'test_twistedreactor.py', 'utils.py', 'test_concurrent.py', 'test_connection.py', 'test_control_connection.py', 'test_exception.py', 'test_host_connection_pool.py', 'test_marshalling.py', 'test_metadata.py', 'test_orderedmap.py', 'test_parameter_binding.py', 'test_policies.py', 'test_response_future.py', 'test_resultset.py', 'test_sortedset.py', 'test_time_util.py', 'test_types.py', 'test_util_types.py']",['524df23220d7f29ec00454b83a5a14dc4867f637'],182,182,364,173,,,
a7c1b3d823f52f5bd543da50e22fcaa0a9eafc3f,[ci skip] add travis status image back to readme,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-29 13:44:03-06:00,21600,2016-01-29 13:59:06-06:00,21600,True,False,['README.rst'],['5b054bf1604c4cf76ec644f3e3023f1f033d8a85'],0,3,3,1,,,
eb449ec848426c704203e2d1c39ba894d9f063e7,[ci skip] changelog update with 3.1 tickets,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-29 13:44:18-06:00,21600,2016-01-29 13:59:06-06:00,21600,True,False,['CHANGELOG.rst'],['a7c1b3d823f52f5bd543da50e22fcaa0a9eafc3f'],0,14,14,1,,,
cf41e80dfd0019b5ccca0eace3df37a65b35991c,"normalized Type exception when casting Decimal type

PYTHON-468",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-29 15:05:30-06:00,21600,2016-01-29 15:05:30-06:00,21600,True,False,['cqltypes.py'],['eb449ec848426c704203e2d1c39ba894d9f063e7'],1,4,5,1,1.0,1.0,1.0
a694d3b4fe2acfa430be8ad1b031abc4ae438c86,[ci skip] 3.1a1 version update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-29 15:08:15-06:00,21600,2016-01-29 15:08:15-06:00,21600,True,False,['__init__.py'],['cf41e80dfd0019b5ccca0eace3df37a65b35991c'],1,1,2,1,,,
f0d473e3722c02636023bc0ccbda011fafb79d3c,add contributing doc,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-29 15:45:24-06:00,21600,2016-01-29 15:45:24-06:00,21600,True,False,"['CONTRIBUTING.rst', 'README.rst']",['a694d3b4fe2acfa430be8ad1b031abc4ae438c86'],0,30,30,2,,,
6151693662ca07d178e433b8781e17bb14189a2a,fix sphinx conf file,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-29 15:48:13-06:00,21600,2016-01-29 15:48:13-06:00,21600,True,False,['conf.py'],['f0d473e3722c02636023bc0ccbda011fafb79d3c'],1,1,2,1,,,
fa431d6be4b3609fcd3d9471cbcd787c0186f646,[ci skip] fix the contributing link,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-29 16:05:39-06:00,21600,2016-01-29 16:05:39-06:00,21600,True,False,['README.rst'],['6151693662ca07d178e433b8781e17bb14189a2a'],1,1,2,1,,,
dcca433b4ef8a153b6245bcacf636adb98a93737,post-alpha version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-29 16:07:41-06:00,21600,2016-01-29 16:07:41-06:00,21600,True,False,['__init__.py'],['fa431d6be4b3609fcd3d9471cbcd787c0186f646'],1,1,2,1,,,
05361b4e7c3814455170a228e49f9fe1259564d5,Adding mapping for dse 5.0 to Cassandra 3.0,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-01-29 17:50:39-06:00,21600,2016-01-29 17:50:39-06:00,21600,True,False,['__init__.py'],['dcca433b4ef8a153b6245bcacf636adb98a93737'],0,2,2,1,1.0,0.0,1.0
817b50d67f15f2e9c967c1810c66351688f07204,"Fix: crash while working with UDTs

In some cases the 'value' attribute is None, and without checking we are accessing a method assuming it's a valid object. This fix helps achieving the desired functionality/outcome for such cases without breaking the intended logic.",Reetesh Ranjan,reeteshranjan@buildyourweb.in,Reetesh Ranjan,reeteshranjan@buildyourweb.in,2016-02-03 04:03:42+05:30,-19800,2016-02-03 04:03:42+05:30,-19800,True,False,['columns.py'],['05361b4e7c3814455170a228e49f9fe1259564d5'],2,3,5,1,1.0,1.0,1.0
1abbbc0e1b722b47985a89c5da0925657eed624e,Added code to wait for binary port on nodes become availible before using cluster,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-02-02 17:05:48-06:00,21600,2016-02-02 17:05:48-06:00,21600,True,False,['__init__.py'],['05361b4e7c3814455170a228e49f9fe1259564d5'],0,29,29,1,0.9,0.9,0.9
645f7512f53a1e6b515e50c3576e906c69ec1c0f,Updating test init to remove bad ascii characters,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-02-02 18:12:16-06:00,21600,2016-02-02 18:12:16-06:00,21600,True,False,['__init__.py'],['1abbbc0e1b722b47985a89c5da0925657eed624e'],1,1,2,1,,,
81133a350296dd998ca05430613683ee7aba2380,PYTHON-354 - DateType.deserialize being called with one argument vs two,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-03 15:45:43-05:00,18000,2016-02-04 13:04:57-05:00,18000,True,False,"['columns.py', 'test_validation.py']",['645f7512f53a1e6b515e50c3576e906c69ec1c0f'],5,14,19,2,1.0,1.0,1.0
523c045775e5c261933974bff9ae5d5017aa7026,Add a test for updating UDT with nones,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-04 11:07:34-05:00,18000,2016-02-04 13:25:59-05:00,18000,True,False,"['CHANGELOG.rst', 'test_udts.py']",['97d670ff9d24c479ac4ec9a667d0fe46c00a2d92'],1,26,27,2,0.0,1.0,1.0
0b86785f7572ba62bc156e0eca70be226e8b618e,Adding test case for python-458,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-02-04 13:01:03-06:00,21600,2016-02-04 13:05:24-06:00,21600,True,False,['test_schema.py'],['645f7512f53a1e6b515e50c3576e906c69ec1c0f'],0,41,41,1,0.19047619047619047,1.0,0.8095238095238095
6cfd68fb8e6cf9796eea66102ea0ea14fb25032e,"precheck compiler during setup
PYTHON-471
avoids setup failure if we try to build Cython as a setup_requires
and there are no build tools",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-04 14:28:24-06:00,21600,2016-02-04 14:28:24-06:00,21600,True,False,['setup.py'],['645f7512f53a1e6b515e50c3576e906c69ec1c0f'],2,33,35,1,0.0,0.0,1.0
e29c757a9da445ec8dacfea28e3677e5be1ec48b,"Check for Python include before requiring Cython
PYTHON-471
also adds build pre-check escape hatch",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-04 15:35:55-06:00,21600,2016-02-04 15:35:55-06:00,21600,True,False,['setup.py'],['6cfd68fb8e6cf9796eea66102ea0ea14fb25032e'],12,35,47,1,0.0,0.0,1.0
4fd4daa8e67d5a70573bc6fc40416f4c606afe9b,test: don't print node status to stdout,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-04 16:21:08-06:00,21600,2016-02-04 16:21:08-06:00,21600,True,False,['__init__.py'],['88ef0a34c365ffa49d0627828cc054a99124faa0'],7,9,16,1,,,
29d4f8b76053cd15961c1606d677a8c07d7b5806,3.1.0a2 release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-04 16:21:41-06:00,21600,2016-02-04 16:21:41-06:00,21600,True,False,['__init__.py'],['4fd4daa8e67d5a70573bc6fc40416f4c606afe9b'],1,1,2,1,,,
e805cd4707d591e418a72865bde5d1bac101e09d,post-release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-04 16:26:07-06:00,21600,2016-02-04 16:26:07-06:00,21600,True,False,['__init__.py'],['29d4f8b76053cd15961c1606d677a8c07d7b5806'],1,1,2,1,,,
eade89fed4902f19cd35a804a17c80ef4167944d,cqle: more pythonic handling of None in UDTValueMgr,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-08 16:08:12-06:00,21600,2016-02-08 16:08:12-06:00,21600,True,False,['columns.py'],['d10f809365e1e7b7b3bab0002109bc0f853aed4d'],2,2,4,1,,,
9a9455c14c8b106df3653d80d5fbfa03a043102c,Adding workload support to test harness,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-02-08 16:48:49-06:00,21600,2016-02-08 16:48:49-06:00,21600,True,False,['__init__.py'],['eade89fed4902f19cd35a804a17c80ef4167944d'],7,10,17,1,0.0,0.0,0.0
0262b2de7e4663934106e9184d966e3b3103074e,Updating workload call to reflect ccm changes,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-02-08 17:41:03-06:00,21600,2016-02-08 17:41:03-06:00,21600,True,False,['__init__.py'],['9a9455c14c8b106df3653d80d5fbfa03a043102c'],1,2,3,1,0.0,0.0,0.0
85f32ec5328404b96ccc377082d483fcd6dc900d,"cqle: guard against formatting an invalid keyspace in a query

PYTHON-395

Resolves AttributeError when trying to query without a keyspace name,
instead raising a CQLEngineException.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-09 09:54:37-06:00,21600,2016-02-09 09:54:37-06:00,21600,True,False,"['models.py', 'test_model.py']",['0262b2de7e4663934106e9184d966e3b3103074e'],2,26,28,2,1.0,1.0,1.0
bc0d314aad61fd252d4b85666fad5ea34706404f,"cqle: remove unused operator classes

simplifying module for PYTHON-476",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-09 10:38:22-06:00,21600,2016-02-09 10:38:22-06:00,21600,True,False,['operators.py'],['0262b2de7e4663934106e9184d966e3b3103074e'],12,0,12,1,,,
631369b00e6bfab590b1a0a11fd898bd482e2e96,"cqle: remove opmap get_operator race

opmap is built using meta class during module import

Fixes issue where mapping is missing if first queries are concurrent.

PYTHON-476",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-09 11:58:52-06:00,21600,2016-02-09 11:58:52-06:00,21600,True,False,"['operators.py', 'test_base_operator.py']",['bc0d314aad61fd252d4b85666fad5ea34706404f'],42,13,55,2,0.0,0.0,0.0
7adce710e19bc2703ca45d689d780b67f6ca50e1,remove __author__ in empty package files,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-09 12:00:30-06:00,21600,2016-02-09 12:00:30-06:00,21600,True,False,"['__init__.py', '__init__.py']",['631369b00e6bfab590b1a0a11fd898bd482e2e96'],4,0,4,2,,,
84c3e08cf2bdbecda72c93c37949c073d76453e4,"register UDT with default keyspace if none specified

PYTHON-347",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-09 14:37:53-06:00,21600,2016-02-09 14:37:53-06:00,21600,True,False,"['connection.py', 'test_udts.py']",['0262b2de7e4663934106e9184d966e3b3103074e'],7,23,30,2,1.0,1.0,1.0
713bfe42231a17cac6d1622c18301a31bf53b689,PYTHON-452 - Fix Cython deserializer date overflow with large timestamp,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-08 11:12:12-05:00,18000,2016-02-09 17:39:15-05:00,18000,True,False,"['cython_utils.pyx', 'test_validation.py', 'test_utils.py', 'utils_testhelper.pyx', 'test_time_util.py']",['e805cd4707d591e418a72865bde5d1bac101e09d'],3,79,82,5,1.0,1.0,1.0
d64bcd753e558802a366f3ed45dac527097fdce7,Add tests for Cython DateType deserialization,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-09 17:33:17-05:00,18000,2016-02-09 17:39:32-05:00,18000,True,False,"['test_types.py', 'types_testhelper.pyx', 'test_types.py']",['713bfe42231a17cac6d1622c18301a31bf53b689'],0,97,97,3,1.0,1.0,1.0
59857a80636405cfcb78f12d0c67ff98ab3b54b7,test: move models import to module level,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-10 08:31:48-06:00,21600,2016-02-10 08:31:48-06:00,21600,True,False,['test_model.py'],['85f32ec5328404b96ccc377082d483fcd6dc900d'],1,1,2,1,0.0,0.0,0.0
6bfa507f96a653f27277803414e1ece68e8096c9,Fix all test_id values in TestDateTime,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-10 10:19:31-05:00,18000,2016-02-10 10:58:14-05:00,18000,True,False,"['test_validation.py', 'types_testhelper.pyx']",['d64bcd753e558802a366f3ed45dac527097fdce7'],13,20,33,2,,,
b408c166c93a553fa04c163e0f980a7e093dc9c5,Changing set_workload call to match latest changes in ccm,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-02-10 11:20:57-06:00,21600,2016-02-10 11:20:57-06:00,21600,True,False,['__init__.py'],['7379472cf10e8bc3c0ccf78b2bbc13a332f8fd71'],2,1,3,1,1.0,1.0,1.0
be3a0de5069f419dd353e3fe279acc6edb9e27c7,"Add Tuple column type

PYTHON-306",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-11 10:01:55-06:00,21600,2016-02-11 10:01:55-06:00,21600,True,False,"['columns.py', 'connection.py', 'encoder.py']",['7379472cf10e8bc3c0ccf78b2bbc13a332f8fd71'],6,70,76,3,1.0,0.6285714285714286,0.6285714285714286
3d66a3124f9c4346c5096ad8a80ce8cc8b4e5598,"sub_columns --> sub_types

better, more general name for the property",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-11 10:06:47-06:00,21600,2016-02-11 10:49:49-06:00,21600,True,False,['columns.py'],['be3a0de5069f419dd353e3fe279acc6edb9e27c7'],11,10,21,1,,,
f38c9125ed958c22d7e27f5a85aed7aabe1d0b8c,"cqle: refactor container init to common method

PYTHON-306",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-11 11:36:56-06:00,21600,2016-02-11 11:36:56-06:00,21600,True,False,"['columns.py', 'models.py']",['3d66a3124f9c4346c5096ad8a80ce8cc8b4e5598'],71,37,108,2,0.64,1.0,0.8
9421d36de79ede7fdb20873fe5b117ee2d05b2e9,PYTHON-310: Add lazy_connect_lock to avoid race condition with multiple threads,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-12 13:11:38-05:00,18000,2016-02-12 13:11:38-05:00,18000,True,False,['connection.py'],['849140583bf7f9efb292074b3a053a814be73e23'],6,18,24,1,0.25,0.25,0.25
8ea293adb29f0bbf5e166180080529559425c5a9,Avoid to acquire the lazy_connect lock if it is not required,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-12 14:03:03-05:00,18000,2016-02-12 15:59:34-05:00,18000,True,False,['connection.py'],['9421d36de79ede7fdb20873fe5b117ee2d05b2e9'],11,10,21,1,1.0,1.0,1.0
21b8fac563817918bf973437fc4f953ab8e7ec36,PYTHON-258: Add CONTAINS operator for collections,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-16 20:24:08-05:00,18000,2016-02-17 07:03:55-05:00,18000,True,False,"['operators.py', 'query.py', 'test_where_operators.py', 'test_queryset.py']",['4d8cfdfc3d465c310712fa322455dad940d0f635'],3,69,72,4,0.6944444444444444,0.9166666666666666,0.9444444444444444
21081fb30673a52506de2ef2b3c38ae519afef99,"cqle: correct model multiple objects base exception

PYTHON-489",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-19 08:43:07-06:00,21600,2016-02-19 08:43:07-06:00,21600,True,False,['models.py'],['4d8cfdfc3d465c310712fa322455dad940d0f635'],1,1,2,1,,,
a89d0879e03a646285f92b2a4a3143c276c0c614,setitem and delitem for util.OrderedMap,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-19 10:18:13-06:00,21600,2016-02-19 10:18:13-06:00,21600,True,False,"['util.py', 'test_orderedmap.py']",['849140583bf7f9efb292074b3a053a814be73e23'],1,24,25,2,1.0,1.0,1.0
694f50ddd0bc1f971790a5146a707765beef960b,"cqle: allow nested collections

PYTHON-478",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-19 10:21:39-06:00,21600,2016-02-19 10:21:39-06:00,21600,True,False,['columns.py'],['a89d0879e03a646285f92b2a4a3143c276c0c614'],19,18,37,1,1.0,0.75,0.75
a09c7c41ec9df725234279ed9b0350380b3915c2,improve existing cqlengine container tests,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-19 10:22:59-06:00,21600,2016-02-19 10:22:59-06:00,21600,True,False,['test_container_columns.py'],['694f50ddd0bc1f971790a5146a707765beef960b'],41,38,79,1,1.0,0.0,0.0
4dfe8944b36e69f85b79731ffde5af06324ee1c1,"cqle: validate collection subtypes

for PYTHON-478, in lieu of PYTHON-494",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-19 11:34:51-06:00,21600,2016-02-19 11:34:51-06:00,21600,True,False,['columns.py'],['a09c7c41ec9df725234279ed9b0350380b3915c2'],17,31,48,1,1.0,1.0,0.0
46ef40e33ed876363f3d548dbd95908615a15960,Added doc for the CONTAINS operator,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-17 15:25:41-05:00,18000,2016-02-19 12:47:24-05:00,18000,True,False,"['query.py', 'queryset.rst']",['21b8fac563817918bf973437fc4f953ab8e7ec36'],3,14,17,2,0.0,0.0,0.0
dc9ae8b5116bbb8f3e9f6b83f697e1f7e6bfed71,minor assertions fix in tests,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-19 13:38:53-05:00,18000,2016-02-19 13:44:26-05:00,18000,True,False,['test_queryset.py'],['46ef40e33ed876363f3d548dbd95908615a15960'],10,10,20,1,,,
9949f7cdb9aa7a8405f57be790b879dfab64a3b0,PYTHON-266: Add DISTINCT support,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-19 09:43:30-05:00,18000,2016-02-19 14:50:20-05:00,18000,True,False,"['query.py', 'statements.py', 'test_queryset.py', 'test_select_statement.py']",['2a26d84306d614e2bfc5f5901462286386930c8b'],1,56,57,4,0.8571428571428571,0.9428571428571428,0.9428571428571428
7bd74e5dd49eedd95cf9ec025fa67e4acde342a7,Add doc for DISTINCT,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-19 14:37:23-05:00,18000,2016-02-19 15:44:33-05:00,18000,True,False,"['query.py', 'statements.py', 'query.rst']",['9949f7cdb9aa7a8405f57be790b879dfab64a3b0'],6,31,37,3,,,
7c6bdb5e61583cbbd820bb6177ebe0c71081a26f,Add 3.2.0 section in CHANGELOG,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-22 10:02:49-05:00,18000,2016-02-22 10:02:49-05:00,18000,True,False,['CHANGELOG.rst'],['6777b9874bed8ab13008e08898b5bb9dd5ed2219'],0,10,10,1,,,
27ef23bb11c93be4ba5b73497a0262a831b700e3,"Fix Python3 bug with Timers and heaps

Add comparison operator to allow Timers with the same end time to be
pushed into heaps. It's poorly documented, but the warning can be found
here:
https://docs.python.org/2/library/heapq.html#priority-queue-implementation-notes
""In the future with Python 3, tuple comparison breaks for (priority,
task) pairs if the priorities are equal and the tasks do not have a
default comparison order.""",jonmcevoy,jmcevoy@jmcevoy1.trionworld.priv,Adam Holmberg,Adam.Holmberg@datastax.com,2016-01-28 11:07:18-08:00,28800,2016-02-22 09:29:27-06:00,21600,True,False,['connection.py'],['8a535d871a61cb7f3715cfe07e0d7b3daefe259f'],0,3,3,1,1.0,1.0,1.0
1299f4a7537f44ef2a9bcececb5b8ba7588f5030,changelog for #466 in 3.1,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-22 09:54:03-06:00,21600,2016-02-22 09:54:03-06:00,21600,True,False,['CHANGELOG.rst'],['27ef23bb11c93be4ba5b73497a0262a831b700e3'],0,1,1,1,,,
4c9dc3e5b7d684db311d5e4f508bb3dc1bdbb8e6,First pass at cqlengine tuple testing,GregBestland,Greg.Bestland@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-18 12:10:11-06:00,21600,2016-02-22 10:26:26-06:00,21600,True,False,['test_container_columns.py'],['7c6bdb5e61583cbbd820bb6177ebe0c71081a26f'],0,186,186,1,0.8411214953271028,1.0,1.0
6560bfc24ce516e9fe568ca4012d91aefa4a8bb3,"cqle: make the distinction btw collections and containers

Makes the DML update query treat tuples as simple values, rather than special
container types.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-19 14:03:08-06:00,21600,2016-02-22 10:32:23-06:00,21600,True,False,"['columns.py', 'query.py']",['4c9dc3e5b7d684db311d5e4f508bb3dc1bdbb8e6'],41,42,83,2,,,
e1170bfd8c709d8d7ddda0942765063b05cb38c7,"cqle: tuple test tweaks

(some are still broken)",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-19 14:05:35-06:00,21600,2016-02-22 10:32:23-06:00,21600,True,False,['test_container_columns.py'],['6560bfc24ce516e9fe568ca4012d91aefa4a8bb3'],25,24,49,1,,,
ecdbdb3eff7f09df4ea9be260dce6b0e93b220fc,"tuple test updates

PYTHON-306",GregBestland,Greg.Bestland@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-22 10:23:35-06:00,21600,2016-02-22 10:32:23-06:00,21600,True,False,['test_container_columns.py'],['e1170bfd8c709d8d7ddda0942765063b05cb38c7'],89,102,191,1,0.4146341463414634,0.0,0.0
a98078b5ad7eb7bfef2711078edfe0b2cf40ed1b,add a test for #466,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-22 11:57:22-06:00,21600,2016-02-22 11:57:22-06:00,21600,True,False,['test_connection.py'],['1299f4a7537f44ef2a9bcececb5b8ba7588f5030'],1,23,24,1,1.0,1.0,1.0
635f554055abb4f5c815615867be4903ab8b904b,"Add a task counter to cluster task scheduler

PYTHON-473

Fixes a TypeError when tasks collide in time and function comparison is attempted
(Python 3 only).
https://docs.python.org/2/library/heapq.html#priority-queue-implementation-notes",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-22 13:38:05-06:00,21600,2016-02-22 13:38:05-06:00,21600,True,False,"['cluster.py', 'test_connection.py']",['a98078b5ad7eb7bfef2711078edfe0b2cf40ed1b'],14,9,23,2,0.0,0.0,0.0
10598f958edb45ab40fcaf3a43a934b9dbb5a70c,fix inner collection class comparison,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-22 18:54:15-06:00,21600,2016-02-22 18:54:15-06:00,21600,True,False,['columns.py'],['ecdbdb3eff7f09df4ea9be260dce6b0e93b220fc'],1,1,2,1,,,
a0569f166938dcdc4af496db237aaa3038ba62a5,"Expose conflicting data in case of LWTException

Adds a custom attribute, `existing`, to the LWTException instance which
allows the application layer to inspect the values read from Cassandra
which conflicted with the attempted conditional write.

The documentation already referred to the `existing` attribute but it
was not implemented.",Kai Lautaportti,kai.lautaportti@gmail.com,Adam Holmberg,Adam.Holmberg@datastax.com,2015-06-03 09:26:18-07:00,25200,2016-02-23 12:35:23-06:00,21600,True,False,"['query.py', 'models.rst', 'query.rst', 'test_ifnotexists.py', 'test_transaction.py']",['9759a3299dcc5bd4d0a6883edbe1c393abc6a1bf'],12,59,71,5,0.0,1.0,1.0
f1e49230ebd74ee14771a36c9b7bca7eba5fee15,actually at the new test,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-23 12:36:25-06:00,21600,2016-02-23 12:36:25-06:00,21600,True,False,['test_cluster_task_scheduler.py'],['9759a3299dcc5bd4d0a6883edbe1c393abc6a1bf'],0,38,38,1,1.0,1.0,1.0
94fe1fce992fc0541c60578f4df78e571077a7a7,ResultSet.was_applied property for LWT results.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-23 13:30:35-06:00,21600,2016-02-23 13:33:09-06:00,21600,True,False,"['cluster.py', 'query.py', 'test_resultset.py']",['a0569f166938dcdc4af496db237aaa3038ba62a5'],6,56,62,3,0.4666666666666667,1.0,1.0
5e102605cdff5afd987c463e27b442b94a4f755f,PYTHON-336 test tweaks and changelog,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-23 13:32:37-06:00,21600,2016-02-23 13:33:09-06:00,21600,True,False,"['CHANGELOG.rst', 'models.rst', 'test_ifnotexists.py']",['94fe1fce992fc0541c60578f4df78e571077a7a7'],3,4,7,3,,,
a51b4cbe0cba55b3cc3ca1d58a052ea356376b6b,"warn against creating or saving counter models

Confusing semantics via PYTHON-333",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-23 14:02:18-06:00,21600,2016-02-23 14:02:18-06:00,21600,True,False,['query.py'],['10598f958edb45ab40fcaf3a43a934b9dbb5a70c'],1,3,4,1,0.0,0.0,1.0
252b52c27ff4c16ae0825fe173984e9b90173f4e,"Fix hang when using eventlet and ssl

The eventlet read loop runs select before each recv call. This will
fail because recv() on an ssl socket might read more data than
requested from the underlying socket in order to have enough context
for decryption. These extra bytes would be returned by the next recv
on the ssl socket, but are not known to underlying socket so select
will hang.

It is my understanding that eventlet implements blocking IO by using
poll under the hood and yielding, so the select should not be
necessary at all",Sigmund Augdal,sigmund.augdal@uninett.no,Sigmund Augdal,sigmund.augdal@uninett.no,2016-02-22 09:43:37+01:00,-3600,2016-02-24 13:50:26+01:00,-3600,True,False,['eventletreactor.py'],['2f359cd18ca23f393e4b158b90a50290180abe59'],18,10,28,1,1.0,1.0,0.0
603e87b9178cc63d862f9a2203d34d6ee16e8dca,test: avoid dynamic gevent patching when eventlet is active,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-24 11:12:27-06:00,21600,2016-02-24 11:12:27-06:00,21600,True,False,['test_geventreactor.py'],['a51b4cbe0cba55b3cc3ca1d58a052ea356376b6b'],3,8,11,1,1.0,1.0,1.0
29f3597180adff4ffbf317764409aa20174442ae,Added tests for nested collections,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-02-22 19:00:55-06:00,21600,2016-02-24 16:00:22-06:00,21600,True,False,['test_container_columns.py'],['f92bd4c3aaa3ed93ec46b5c95727aea8fd2504e5'],0,221,221,1,0.8333333333333334,1.0,1.0
49079ddc51da5a2ec0b040c246f07a7edca97f09,PYTHON-258 tests error and negative scenarios,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-02-24 13:36:26-06:00,21600,2016-02-24 16:23:11-06:00,21600,True,False,['test_queryset.py'],['160d6bf78fe6799f64a9a37279a2f49b14c92775'],6,61,67,1,0.0,1.0,1.0
9b4e915965341588e74e1fff422dfa4b1732ec4e,"Adding checks for empty, and invalid distinct queries",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-02-24 17:17:50-06:00,21600,2016-02-25 11:51:04-06:00,21600,True,False,['test_queryset.py'],['e9c55a1ad951f61a4d306eadc6235e3b220b598a'],38,64,102,1,0.7,1.0,1.0
88a72f4586877bf82f00b5703f119f5a7c1507e7,skipping tuple tests when C* version < 2.1,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-02-25 12:26:19-06:00,21600,2016-02-25 12:26:19-06:00,21600,True,False,['test_container_columns.py'],['e9c55a1ad951f61a4d306eadc6235e3b220b598a'],4,11,15,1,1.0,1.0,1.0
3487a83202627f000dd6215e9c386a1346840055,"cqle: allow db_field for fields in UDTs

PYTHON-346
Previously UDTs would not map properly, resulting in None for all fields
inserted or queried.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-25 16:06:25-06:00,21600,2016-02-25 16:06:25-06:00,21600,True,False,"['models.py', 'usertype.py', 'protocol.py', 'test_udts.py']",['f75f8cceef64962c3511d2daf93e59dbe532f873'],8,53,61,4,0.6060606060606061,0.7575757575757576,1.0
baa5a72c5edbf056ff88b092458799d57e28c1fa,"cqle: reject user types with db_fields overloading field names

PYTHON-346",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-26 09:38:38-06:00,21600,2016-02-26 09:38:38-06:00,21600,True,False,"['usertype.py', 'test_udts.py']",['3487a83202627f000dd6215e9c386a1346840055'],3,16,19,2,0.0,0.4166666666666667,0.4166666666666667
13b47a32c99acb6342c00ec521881bccec3e1fd3,cqle: don't pay for db_field mapping if there isn't any,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-26 10:47:01-06:00,21600,2016-02-26 10:47:01-06:00,21600,True,False,['models.py'],['6759b84f6df7e285641a5e145e8935775b39cc88'],7,11,18,1,0.0,0.0,0.0
9e3222576474125975c643060db60290472752b4,cqle/test: correct test for duplicate column names,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-26 12:04:08-06:00,21600,2016-02-26 12:04:08-06:00,21600,True,False,['test_class_construction.py'],['13b47a32c99acb6342c00ec521881bccec3e1fd3'],3,2,5,1,,,
4a28faf38a80f9feea2a8ec6fccbf893a073a434,Corrected incorrect reference to self._columns in UserType,Marc Zbyszynski,mzbyszynski@xlhybrids.com,Marc Zbyszynski,mzbyszynski@xlhybrids.com,2016-02-26 13:09:57-05:00,18000,2016-02-26 13:09:57-05:00,18000,True,False,"['usertype.py', 'test_udts.py']",['6759b84f6df7e285641a5e145e8935775b39cc88'],1,10,11,2,1.0,1.0,1.0
062d536094554d6a5e88a433dc70d898d08d7c53,"cqle: better model exception formatting

also remove conditional for alreay-covered duplicate columns",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-26 12:10:18-06:00,21600,2016-02-26 12:10:18-06:00,21600,True,False,['models.py'],['9e3222576474125975c643060db60290472752b4'],5,2,7,1,1.0,1.0,1.0
237d322b7f293d77b2f008f08eb4c8d7bbe2fb60,"cqle: correct pk validation when db_field is in use

PYTHON-351",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-26 12:12:34-06:00,21600,2016-02-26 12:12:34-06:00,21600,True,False,"['models.py', 'query.py']",['062d536094554d6a5e88a433dc70d898d08d7c53'],1,8,9,2,1.0,1.0,1.0
228d2c39dd60d91705461a19a636b1f7bc0f5e29,cqle/test: clean up PendingDeprecation methods,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-26 12:18:34-06:00,21600,2016-02-26 12:18:34-06:00,21600,True,False,"['test_container_columns.py', 'test_compaction_settings.py', 'test_management.py']",['237d322b7f293d77b2f008f08eb4c8d7bbe2fb60'],5,5,10,3,,,
91f436c70cf18e8391f79f0480bb892411bb520b,cqle: fix delete query for db_field and composite parition keys,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-26 14:18:56-06:00,21600,2016-02-26 14:18:56-06:00,21600,True,False,['query.py'],['228d2c39dd60d91705461a19a636b1f7bc0f5e29'],2,2,4,1,,,
5defa9ab5012b0d3265e784200a14955b355ec65,"cqle/test: some coverage for query set using db_fields

PYTHON-351",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-26 14:32:17-06:00,21600,2016-02-26 14:32:17-06:00,21600,True,False,['test_queryset.py'],['91f436c70cf18e8391f79f0480bb892411bb520b'],0,79,79,1,0.6346153846153846,1.0,1.0
bdb55d0218148f03a4fba56832f48c11a34b7b67,"Make python ProtocolHandler available even with Cython

PYTHON-501",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-26 15:07:00-06:00,21600,2016-02-26 15:07:00-06:00,21600,True,False,"['protocol.py', 'protocol.rst']",['aa8893610247d141708280747fafeeb223dfe345'],6,7,13,2,,,
bfcde9e925dd32d667616df146e901229737f2b7,PYTHON-432: Add IF EXISTS support to UPDATE and DELETE statements of CQLEngine,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-26 18:03:54-05:00,18000,2016-02-29 13:35:41-05:00,18000,True,False,"['models.py', 'query.py', 'statements.py', 'models.rst', 'query.rst', 'test_ifexists.py', 'test_ifnotexists.py']",['e9c55a1ad951f61a4d306eadc6235e3b220b598a'],56,340,396,7,0.4369747899159664,0.9495798319327731,0.907563025210084
c87937db762bb28a1f5c99de359832e53f921a5d,"cqle: fix attr error if batch executed multiple times

Also adds a warning for executing batches multiple times.

PYTHON-445",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-29 12:40:23-06:00,21600,2016-02-29 12:40:23-06:00,21600,True,False,['query.py'],['5f649bece1d5d72f602fa26c396a5256fa8515cf'],3,12,15,1,0.25,0.25,0.75
b3ffffbf27cbf22dcfb6536fa4274db5d9cdfeef,PYTHON-445 tests and cleanup,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-29 12:41:40-06:00,21600,2016-02-29 12:41:40-06:00,21600,True,False,"['test_batch_query.py', 'test_batch_query.py']",['c87937db762bb28a1f5c99de359832e53f921a5d'],31,58,89,2,1.0,1.0,1.0
978cae601d0b1b91f5bb11970fea4ae81df58a74,"optional Cython BytesType->bytearray deserializer

PYTHON-503",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-29 12:49:59-06:00,21600,2016-02-29 12:49:59-06:00,21600,True,False,['deserializers.pyx'],['5f649bece1d5d72f602fa26c396a5256fa8515cf'],0,6,6,1,,,
20b30a12f3cf9a1e8f7c55e7dce823f80ffb540b,PYTHON-337: case sensitive support for column family name,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-02-24 17:58:28-05:00,18000,2016-02-29 14:47:00-05:00,18000,True,False,"['management.py', 'models.py', 'models.rst', 'test_management.py', 'test_class_construction.py', 'test_model.py']",['e9c55a1ad951f61a4d306eadc6235e3b220b598a'],3,105,108,6,0.8292682926829268,0.43902439024390244,1.0
7362747faff0ae86380226c0f49fc55e7d6bc673,Added documentation and slight model variation to PYTHON-351 tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-02-29 13:50:55-06:00,21600,2016-02-29 13:54:04-06:00,21600,True,False,['test_queryset.py'],['5f649bece1d5d72f602fa26c396a5256fa8515cf'],51,109,160,1,0.8571428571428571,1.0,1.0
f9c4f23119278bc58bce22d6eb0d2b28be97d845,"cqle: show None values as deleted if the value is explicitly set

Fixes an issue where a model instance created with explicit None fields
would not persist as such on save()
PYTHON-475",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-02-29 15:49:26-06:00,21600,2016-02-29 15:49:26-06:00,21600,True,False,['columns.py'],['a71cd19b40afbebc03a5cfdea936cc815a161a31'],3,1,4,1,0.0,0.0,0.0
23c74e9dffe40a39a01620bbf8db8b0aa18f872a,PYTHON-373: Add tests for CQLEngine and range deletion,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-01 12:12:31-05:00,18000,2016-03-01 12:12:31-05:00,18000,True,False,"['test_queryset.py', 'test_delete_statement.py']",['da5b04fc0654c13d8e20178d3e525d3cc1170305'],0,33,33,2,1.0,1.0,1.0
16cc60a4fb895eb3a50b6cb473dcf31cf180d4a3,"cqle: fix LWTException super __init__

Resolves ""RuntimeError: maximum recursion depth exceeded while getting the
str of an object"" with this type.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-01 13:26:56-06:00,21600,2016-03-01 13:26:56-06:00,21600,True,False,['query.py'],['9ad134f9a8e48d79b2df484b1c608cb6a42d0e89'],1,1,2,1,,,
78e83758d7df8f9dec786f90c7d251f28cf4f6b7,"Updating tests, and adding documentation for PYTHON-432",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-01 14:19:24-06:00,21600,2016-03-01 14:19:24-06:00,21600,True,False,['test_ifexists.py'],['da5b04fc0654c13d8e20178d3e525d3cc1170305'],10,101,111,1,1.0,1.0,1.0
1adf9f3a0e7b5e32b19088b6e29d672255420640,"Docs for PYTHON-346, some nit test changes.",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-02-26 17:57:17-06:00,21600,2016-03-01 14:36:23-06:00,21600,True,False,['test_udts.py'],['16cc60a4fb895eb3a50b6cb473dcf31cf180d4a3'],2,30,32,1,1.0,1.0,1.0
fad4dcaabc793f1fa39e5871ee61410596a61b50,PYTHON-337 adding documentation to tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-01 18:11:16-06:00,21600,2016-03-01 18:21:58-06:00,21600,True,False,"['test_management.py', 'test_class_construction.py', 'test_model.py']",['54396b2883b762bd7a0881a03e00384bfdc3ca58'],18,70,88,3,1.0,1.0,1.0
a60a65f10ee9bf631b07d3c60de7dbdccdaa54ff,Debug for automatic pagination machinery,alanjds,alan.justino@yahoo.com.br,Alan Boudreault,alan@alanb.ca,2015-08-20 14:31:29+00:00,0,2016-03-02 09:07:59-05:00,18000,True,False,['cluster.py'],['9ad134f9a8e48d79b2df484b1c608cb6a42d0e89'],0,2,2,1,1.0,1.0,1.0
ddff533310cfb18e0aa01b3a67b5f15f0a823b06,"AbstractQuerySet.__iter__ is no more greedy. Fetches on demand.

The __iter__ now yields until the end of actual page,
than start to fetch the next page.",alanjds,alan.justino@yahoo.com.br,Alan Boudreault,alan@alanb.ca,2015-08-20 14:34:09+00:00,0,2016-03-02 09:08:39-05:00,18000,True,False,['query.py'],['a60a65f10ee9bf631b07d3c60de7dbdccdaa54ff'],13,28,41,1,0.0,0.0,1.0
419554ffa26915d8d04be82a244261876bceb202,Adding docs for python-445,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-02 11:21:48-06:00,21600,2016-03-02 11:21:48-06:00,21600,True,False,['test_batch_query.py'],['54396b2883b762bd7a0881a03e00384bfdc3ca58'],0,19,19,1,,,
d3cdb168e3a9ac17211688846f4641ca0fe12ff1,"cqle: make ValueManager delete recognize converted collections

PYTHON-475",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-02 13:50:36-06:00,21600,2016-03-02 13:50:36-06:00,21600,True,False,['columns.py'],['419554ffa26915d8d04be82a244261876bceb202'],1,1,2,1,,,
bcd42baf314ba9792fe35ac3918b70f4351cd7c1,"cqle: always set default keyspace from conn.set_session

PYTHON-486",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-02 14:10:21-06:00,21600,2016-03-02 14:10:21-06:00,21600,True,False,['connection.py'],['d3cdb168e3a9ac17211688846f4641ca0fe12ff1'],3,3,6,1,,,
6f1fba939a06ee3581e5ddd7253ee3c6f6173d52,PYTHON-475 adding integration test,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-02 12:24:58-06:00,21600,2016-03-03 09:50:32-06:00,21600,True,False,"['test_model_io.py', 'test_updates.py']",['419554ffa26915d8d04be82a244261876bceb202'],7,75,82,2,0.3611111111111111,1.0,1.0
2feb57fe96140b67cbcd7278012bb2480e84e8f0,perf improvements on cqlengine queryset __iter__ and __getitem__,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-02 16:18:30-05:00,18000,2016-03-03 12:43:23-05:00,18000,True,False,"['query.py', 'statements.py']",['ddff533310cfb18e0aa01b3a67b5f15f0a823b06'],25,37,62,2,0.3,0.3,1.0
58f5e2e033138c1389b003064be8ab0cecfdd08c,Add the ability to disable a query limit with .limit(None),Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-02 16:33:01-05:00,18000,2016-03-03 12:43:23-05:00,18000,True,False,['query.py'],['2feb57fe96140b67cbcd7278012bb2480e84e8f0'],1,5,6,1,1.0,1.0,1.0
fe14a7847af81f38fefccbe8f521106d11199f4f,[ci skip] 3.1 changelog update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-03 11:48:31-06:00,21600,2016-03-03 11:49:42-06:00,21600,True,False,['CHANGELOG.rst'],['dbf30258678047776dbd103b3173d37b75f452f3'],2,32,34,1,,,
6f67300d0af831a1143c1148e0bb136ebf5d1fff,Some design/impl guidelines for contributing,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-03 12:04:49-06:00,21600,2016-03-03 12:04:49-06:00,21600,True,False,['CONTRIBUTING.rst'],['fe14a7847af81f38fefccbe8f521106d11199f4f'],2,9,11,1,,,
3e379abf8fc2a26d2907eb043b6f08769060362e,Add QuerySet.fetch_size() support,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-03 13:22:52-05:00,18000,2016-03-03 13:22:52-05:00,18000,True,False,"['connection.py', 'query.py', 'statements.py']",['58f5e2e033138c1389b003064be8ab0cecfdd08c'],6,35,41,3,1.0,1.0,0.8571428571428571
9405a5f27c069d7786ba938c39a1617d3bdf16bc,[ci skip] reclassify ticket in changelog,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-03 13:35:02-06:00,21600,2016-03-03 13:36:16-06:00,21600,True,False,['CHANGELOG.rst'],['6f67300d0af831a1143c1148e0bb136ebf5d1fff'],1,1,2,1,,,
84c9c8c04b043a64b65dbee75697c12d79207c63,Add some tests for cqlengine queryset slicing,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-03 14:41:49-05:00,18000,2016-03-03 14:41:49-05:00,18000,True,False,['test_queryset.py'],['3e379abf8fc2a26d2907eb043b6f08769060362e'],3,18,21,1,1.0,0.0,1.0
72a2b0ec60990b0e0d65a01a8ea871f009b6a53b,Added default_serial_consistency_level,Sergey Kirillov,sergey.kirillov@gmail.com,Sergey Kirillov,sergey.kirillov@gmail.com,2016-03-03 22:05:11+02:00,-7200,2016-03-03 22:05:11+02:00,-7200,True,False,['cluster.py'],['6af642dc6ad34c927f4c13c6c632e5f13a0b4dbe'],3,10,13,1,0.0,0.0,0.0
dabb8d412b27aa91b772d625e41c6711eed1b4a1,Add tests for distcint with count,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-03 15:17:04-05:00,18000,2016-03-03 15:17:04-05:00,18000,True,False,"['test_queryset.py', 'test_select_statement.py']",['84c9c8c04b043a64b65dbee75697c12d79207c63'],0,10,10,2,1.0,1.0,1.0
a4d329eceb1bc3854d14023f6a0ba57dbcfa1d64,Add tests for limit(None) and fetch_size(...),Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-03 15:35:38-05:00,18000,2016-03-03 16:19:36-05:00,18000,True,False,"['cluster.py', 'test_base_statement.py', 'test_select_statement.py']",['dabb8d412b27aa91b772d625e41c6711eed1b4a1'],2,24,26,3,1.0,1.0,1.0
a51a5736b761010f6d27076e1565a2a1bd18e187,Added documentation for default_serial_consistency_level,Sergey Kirillov,sergey.kirillov@gmail.com,Sergey Kirillov,sergey.kirillov@gmail.com,2016-03-04 11:28:32+02:00,-7200,2016-03-04 11:28:32+02:00,-7200,True,False,['cluster.py'],['72a2b0ec60990b0e0d65a01a8ea871f009b6a53b'],0,3,3,1,,,
7a7012b6b3d3aeabd9134bb45d7efc1e4f88c48c,"Fix EventletConnection without ssl on recent versions of eventlet

It seems recent versions of eventlet (tested on 0.18.4) has changed
which exception is raised on timeout during recv(). This was not
handled properly by PR #485 which caused a regression.",Sigmund Augdal,sigmund.augdal@uninett.no,Sigmund Augdal,sigmund.augdal@uninett.no,2016-03-04 11:34:27+01:00,-3600,2016-03-04 11:34:27+01:00,-3600,True,False,['eventletreactor.py'],['f6d5558f1fafd859156d2ecf82a9896a2558aeeb'],1,2,3,1,1.0,0.0,1.0
51632f868cf998c219b129c6893ba474bbf59e13,doc tweaks,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-04 09:43:57-06:00,21600,2016-03-04 09:43:57-06:00,21600,True,False,"['cluster.py', 'cluster.rst']",['a51a5736b761010f6d27076e1565a2a1bd18e187'],3,5,8,2,,,
2d200ff7c4e93168bf9b91facfc16c86949df51b,rename unit test module,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-04 09:49:26-06:00,21600,2016-03-04 09:49:26-06:00,21600,True,False,['test_cluster.py'],['3fa8cd91c7e7e0a5c8ed1e266dcd1474f9caa8d0'],0,0,0,1,,,
102ed21db0bbfd801b04bc3bd8ed5003bb284f6e,Test default_serial_consistency_level PR #510,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-04 11:06:39-06:00,21600,2016-03-04 11:06:39-06:00,21600,True,False,"['CHANGELOG.rst', 'test_cluster.py']",['2d200ff7c4e93168bf9b91facfc16c86949df51b'],2,36,38,2,1.0,1.0,1.0
9b3e4065215b56b1a6c2f9d4a78a8c470ca4ff79,Adding integration test for PYTHON-486,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-03 15:26:21-06:00,21600,2016-03-04 11:17:29-06:00,21600,True,False,"['test_container_columns.py', '__init__.py', 'test_connection.py']",['9405a5f27c069d7786ba938c39a1617d3bdf16bc'],19,123,142,3,1.0,1.0,1.0
0f9eff30000a90bc3260768a76be64ae9c009a34,Add release notes and documentation for python-323,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-04 16:10:01-05:00,18000,2016-03-04 16:10:16-05:00,18000,True,False,"['CHANGELOG.rst', 'query.py', 'query.rst', 'queryset.rst']",['f6d5558f1fafd859156d2ecf82a9896a2558aeeb'],2,35,37,4,,,
11eadc945d8d98a595fa0879f6f01cfb9b333cb7,Add some details in the docs for limit(None) and fetch_size(),Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-04 16:41:48-05:00,18000,2016-03-04 16:41:48-05:00,18000,True,False,"['query.py', 'query.rst']",['0f9eff30000a90bc3260768a76be64ae9c009a34'],2,9,11,2,,,
eef82584c1a6929b7aed07ef6ce5025e3ded2d52,typo,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-04 17:01:16-05:00,18000,2016-03-04 17:01:16-05:00,18000,True,False,['CHANGELOG.rst'],['11eadc945d8d98a595fa0879f6f01cfb9b333cb7'],1,1,2,1,,,
81e53d73107bf7dcb12e8fe5bb7f5f00a8da4a91,"Simple test for Python-503, slight doc tweak",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-04 11:00:27-06:00,21600,2016-03-04 17:01:34-06:00,21600,True,False,"['deserializers.pyx', 'test_types.py']",['f6d5558f1fafd859156d2ecf82a9896a2558aeeb'],1,32,33,2,1.0,1.0,1.0
96d38eadfeb97f0bc3fd66ac378f66f578eed3ab,Integration test for PYTHON-323 and other general test fixes,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-04 16:59:05-06:00,21600,2016-03-04 17:04:13-06:00,21600,True,False,"['test_connection.py', 'test_compaction_settings.py', 'test_management.py', 'test_queryset.py', 'test_batch_query.py']",['5d90de1bbc48c21c5ee847a1456a258ea86f59c2'],6,59,65,5,0.4074074074074074,1.0,1.0
464bb18e322dd2923e3d0f0acb37095c874f38ca,"Fixing typo in model type, fixing missed regex 2.7 compatibility issue",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-07 10:16:07-06:00,21600,2016-03-07 10:16:07-06:00,21600,True,False,"['test_class_construction.py', 'test_ifexists.py']",['338473a5f893a5c4b7fefe87df157cf2b56c660a'],2,2,4,2,,,
d724c33b5ac88bb12186d233b32b04d0a8e47d01,cqlengine: fix index names to be compatible with C* >=2.0,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-07 14:38:43-05:00,18000,2016-03-08 07:07:49-05:00,18000,True,False,"['management.py', 'test_management.py']",['464bb18e322dd2923e3d0f0acb37095c874f38ca'],8,19,27,2,1.0,1.0,1.0
f8c142590b5379761958a436ebaffacd0cb54f88,Fix len() and count() with distinct queries: materialize all results,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-07 21:17:43-05:00,18000,2016-03-08 10:40:15-05:00,18000,True,False,"['query.py', '__init__.py', 'test_queryset.py']",['d724c33b5ac88bb12186d233b32b04d0a8e47d01'],1,24,25,3,1.0,1.0,1.0
7ad8d31617edc161c932d4b1a9d27db119df822d,Fix queryset slicing issue with Python3,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-08 08:29:46-05:00,18000,2016-03-08 10:40:15-05:00,18000,True,False,['query.py'],['f8c142590b5379761958a436ebaffacd0cb54f88'],3,4,7,1,0.0,0.0,1.0
0ba6d1e85e840a841066df30888cbbd5facca8ef,Prepare 3.1 release,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-10 15:54:58-05:00,18000,2016-03-10 15:54:58-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['b3bf726b68f70e66da8e001434d623189c1a9784'],1,2,3,2,,,
3111c10f07402c3b51eb248b0401c1d0b83a5556,post-release version,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-10 16:33:15-05:00,18000,2016-03-10 16:33:15-05:00,18000,True,False,['__init__.py'],['0ba6d1e85e840a841066df30888cbbd5facca8ef'],1,1,2,1,,,
d1cb5bfbc416bcd6cc8a81e3e03eea45289b35ee,Add README-dev info to make the latest GA the only visible version,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-10 16:37:49-05:00,18000,2016-03-10 16:37:49-05:00,18000,True,False,['README-dev.rst'],['3111c10f07402c3b51eb248b0401c1d0b83a5556'],0,1,1,1,,,
8a12772f5aced61ca57b23e8130ecb9517fd2086,PYTHON-522: Fallback to materialize results on query,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-14 11:18:10-04:00,14400,2016-03-14 11:55:15-04:00,14400,True,False,['query.py'],['0ba6d1e85e840a841066df30888cbbd5facca8ef'],1,2,3,1,0.0,0.0,1.0
6aefc9c5cc151dc6d496046f9c5b1bab1e9e2258,PYTHON-522: Avoid sending a COUNT query with QuerySet.get(),Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-14 11:40:03-04:00,14400,2016-03-14 11:55:26-04:00,14400,True,False,['query.py'],['8a12772f5aced61ca57b23e8130ecb9517fd2086'],5,13,18,1,1.0,1.0,0.0
bd7cb3c603b1aae5670b9e41f3f4cef2573ceb98,Prepare 3.1.1 release,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-03-14 14:43:37-04:00,14400,2016-03-14 14:43:37-04:00,14400,True,False,"['CHANGELOG.rst', '__init__.py']",['0edba2e27183f9bf86b771e9720533b8cc95956b'],1,10,11,2,,,
fd6b988579694cface8a628c8515d7dcaf0b2a95,consume generator when switching ResultSet to list mode,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-15 13:10:15-05:00,18000,2016-03-15 13:11:08-05:00,18000,True,False,['cluster.py'],['f3ff44bc753ef77c82c68893a151769bf3a1be13'],1,1,2,1,,,
fd41d69cf417005ebeb33b555876690a7f0a4bc4,Adding 3.4 to test matrix,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-17 11:42:43-05:00,18000,2016-03-17 11:42:43-05:00,18000,True,False,['build.yaml'],['fd6b988579694cface8a628c8515d7dcaf0b2a95'],0,1,1,1,,,
2a31798084ba02b8bbdc350be00f0007c2ae5216,"cqle: iff transactions for DeleteStatements

PYTHON-249",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-17 12:45:44-05:00,18000,2016-03-17 14:47:02-05:00,18000,True,False,"['models.py', 'query.py', 'statements.py']",['fd6b988579694cface8a628c8515d7dcaf0b2a95'],5,33,38,3,0.0,0.0,0.8235294117647058
248ac90af1395fb1f1fbdc09d3d3822c57281760,"cqle: unit test for DeleteStatement iff

PYTHON-249",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-17 13:10:28-05:00,18000,2016-03-17 14:47:02-05:00,18000,True,False,['test_delete_statement.py'],['2a31798084ba02b8bbdc350be00f0007c2ae5216'],2,13,15,1,1.0,1.0,1.0
0f3132d31a4ea0bf2f391679519bc91b03e2595e,"cqle: integration tests for conditional deletes

(and updates to None)

PYTHON-249",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-17 14:50:06-05:00,18000,2016-03-17 14:50:06-05:00,18000,True,False,['test_transaction.py'],['248ac90af1395fb1f1fbdc09d3d3822c57281760'],0,42,42,1,1.0,1.0,1.0
c4db355311c249077ebb52a83acef9ba064a3483,cqle: refactor transactions to base CQL statement,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-17 16:10:15-05:00,18000,2016-03-17 16:10:15-05:00,18000,True,False,['statements.py'],['0f3132d31a4ea0bf2f391679519bc91b03e2595e'],45,28,73,1,1.0,0.2857142857142857,0.0
67e51b47664fc81359b067547a574560ab6e537b,"cqle: transaction --> conditional

To remove overload with other transaction types (ife, ine).",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-18 09:20:16-05:00,18000,2016-03-18 09:20:16-05:00,18000,True,False,"['models.py', 'query.py', 'statements.py', 'test_delete_statement.py', 'test_transaction.py']",['c4db355311c249077ebb52a83acef9ba064a3483'],110,113,223,5,1.0,1.0,1.0
57f8d5c926c142d4f0e39d5f99b59e1321e64405,cqle: rename lwt conditional test,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-18 09:24:13-05:00,18000,2016-03-18 09:24:13-05:00,18000,True,False,['test_lwt_conditional.py'],['67e51b47664fc81359b067547a574560ab6e537b'],0,0,0,1,,,
b52ad946a6d5412406a45b9dda86299126b56aac,"Fixing timing issues in connection, and query trace tests",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-18 15:29:25-05:00,18000,2016-03-18 15:29:25-05:00,18000,True,False,"['test_connection.py', 'test_query.py']",['fd41d69cf417005ebeb33b555876690a7f0a4bc4'],4,41,45,2,0.9333333333333333,1.0,1.0
969ffdfdd44d3804fc9627a5245fcdab5f000511,cqle: simplify conditional in MapUpdateClause,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-22 10:01:02-05:00,18000,2016-03-22 10:01:02-05:00,18000,True,False,['statements.py'],['fd6b988579694cface8a628c8515d7dcaf0b2a95'],8,8,16,1,0.0,1.0,0.0
08219104b50418a2b84027b877cbffb76ef08908,"cqle: warn when column or field types are different from the model

PYTHON-260",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-22 11:42:07-05:00,18000,2016-03-22 11:42:07-05:00,18000,True,False,['management.py'],['fd6b988579694cface8a628c8515d7dcaf0b2a95'],1,17,18,1,0.0,0.0,0.4666666666666667
3a9c7e17f247271c62a7c3e8b71646dc349c45a0,cqle: remove unused variable in iff,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-22 13:15:16-05:00,18000,2016-03-22 14:21:00-05:00,18000,True,False,['query.py'],['fd6b988579694cface8a628c8515d7dcaf0b2a95'],2,1,3,1,1.0,1.0,1.0
49ae2e39d8a4dd3fad7a08a1c5f8d0e4d4599e4b,cqle: don't mess with Token values in iff conditional,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-22 13:28:05-05:00,18000,2016-03-22 14:21:00-05:00,18000,True,False,['query.py'],['3a9c7e17f247271c62a7c3e8b71646dc349c45a0'],16,4,20,1,1.0,1.0,1.0
2992424c0a61a42e8778fc6bb108b67c03fb3548,"cql: simplify filter processing around Token function

PYTHON-260",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-22 14:17:44-05:00,18000,2016-03-22 14:21:00-05:00,18000,True,False,['query.py'],['49ae2e39d8a4dd3fad7a08a1c5f8d0e4d4599e4b'],14,12,26,1,1.0,1.0,1.0
5c3eb8e6f23742239bace4dd721b10dfe0890f76,"cqle: make NameTable produce part. keys for Token function

PYTHON-260",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-22 14:18:16-05:00,18000,2016-03-22 14:21:00-05:00,18000,True,False,"['columns.py', 'functions.py', 'named.py']",['2992424c0a61a42e8778fc6bb108b67c03fb3548'],11,20,31,3,1.0,1.0,1.0
ef5edd0ba5df78362bec1baec84659f5fa6ef315,"cython: emulate cpython rounding for datetime deserialization

PYTHON-480",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-23 15:12:57-05:00,18000,2016-03-23 15:12:57-05:00,18000,True,False,['cython_utils.pyx'],['ab2a9786650311c721b88ad86c7b8326ff22781f'],1,14,15,1,,,
5c3200b0e88300243f08cb15059eef347e5689da,"test: side-by-side datetime deserialization tests

PYTHON-480",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-23 15:13:29-05:00,18000,2016-03-23 15:13:29-05:00,18000,True,False,"['test_types.py', 'types_testhelper.pyx']",['ef5edd0ba5df78362bec1baec84659f5fa6ef315'],2,42,44,2,1.0,1.0,1.0
4d691abfa89cebdbd648cb31ceaa0ea0d4ab194a,cqle: Simplify Model __eq__ a little,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-23 16:30:20-05:00,18000,2016-03-23 16:33:11-05:00,18000,True,False,['models.py'],['ab2a9786650311c721b88ad86c7b8326ff22781f'],6,1,7,1,0.0,0.0,0.0
ec868395340eabc9656a58a17d55564581191081,"cqle: add the option to truncate datetime values to match DB quantization

PYTHON-273",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-23 16:30:54-05:00,18000,2016-03-23 16:33:11-05:00,18000,True,False,"['columns.py', 'columns.rst']",['4d691abfa89cebdbd648cb31ceaa0ea0d4ab194a'],2,20,22,2,1.0,1.0,1.0
fc0ae79f267727342a491ef674ff2d2c352b25b2,Updating workload logic to handle spark worker resource allocation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-23 17:38:20-05:00,18000,2016-03-23 17:38:20-05:00,18000,True,False,['__init__.py'],['a9aa13feef93e4adf1972d73ace36cb9eaf235b5'],0,3,3,1,0.0,0.0,0.0
25a9f08ba0e5c38da9cddc54b16f6c2c79d46725,Check deferred/only fields before copy,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-24 13:58:58-05:00,18000,2016-03-24 13:58:58-05:00,18000,True,False,['query.py'],['f4f3dc0972a745fc7a616c9540e35a6536af255e'],2,3,5,1,,,
f571cec9eedddcd410a288accd93931b2ee24065,"cqle: don't select back known values in the where clause

Instead, we track the values from filter, and use those when constructing
model instances.

PYTHON-520",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-24 14:17:10-05:00,18000,2016-03-24 14:17:10-05:00,18000,True,False,['query.py'],['25a9f08ba0e5c38da9cddc54b16f6c2c79d46725'],1,15,16,1,0.6,0.7,0.4
9b25f70e662094664e6e8b46c71a079c7a923d4b,"cqle: make deferred fields a set

Allows deferred values while still using deferred key optimization

PYTHON-520",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-24 15:17:45-05:00,18000,2016-03-24 15:17:45-05:00,18000,True,False,['query.py'],['f571cec9eedddcd410a288accd93931b2ee24065'],5,5,10,1,,,
74beacef658e0e19ce8b902460297b5c8079be5d,"cqle: make flat values list more robust

PYTHON-520",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-24 15:19:06-05:00,18000,2016-03-24 15:20:09-05:00,18000,True,False,['query.py'],['9b25f70e662094664e6e8b46c71a079c7a923d4b'],1,2,3,1,1.0,1.0,1.0
1aee458957da09ab793f5acb5f30ea97bd83f8da,cqle: simplify result constructors,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-24 15:23:28-05:00,18000,2016-03-24 15:23:28-05:00,18000,True,False,['query.py'],['74beacef658e0e19ce8b902460297b5c8079be5d'],8,2,10,1,0.0,0.0,1.0
abb8ad0c6631d509eec874baad70c80a957307e9,cqle: simplify result constructor for SimpleQuerySet,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-24 15:43:47-05:00,18000,2016-03-24 15:43:47-05:00,18000,True,False,['query.py'],['1aee458957da09ab793f5acb5f30ea97bd83f8da'],4,2,6,1,0.0,0.0,0.0
340479fb64e127901cc240f0b7e638f4a9e06ea7,PYTHON-260 added test for additional logging,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-25 13:28:47-05:00,18000,2016-03-25 13:28:47-05:00,18000,True,False,"['__init__.py', 'test_management.py']",['f4f3dc0972a745fc7a616c9540e35a6536af255e'],3,81,84,2,1.0,1.0,0.8888888888888888
877281080ba714a22cb1553d05d087a4c79fa863,PYTHON-272 adding simple test for token function and named_tables,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-25 15:42:09-05:00,18000,2016-03-25 15:42:09-05:00,18000,True,False,['test_queryoperators.py'],['f4f3dc0972a745fc7a616c9540e35a6536af255e'],2,28,30,1,1.0,1.0,1.0
31216ea21343c8074e050451aa821ba04611fb4f,PYTHON-273 adding simple test for datetime microsecond truncation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-29 12:42:05-05:00,18000,2016-03-29 12:42:05-05:00,18000,True,False,['test_validation.py'],['de225fc0cc01dd2f4edd5001969a8243255f6ac6'],2,33,35,1,1.0,1.0,1.0
6c65df3287226e9195a94e8920bb68e22f1fd332,"cqle: make queryset update clause respect db_field

PYTHON-530",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-29 14:37:26-05:00,18000,2016-03-29 14:37:26-05:00,18000,True,False,['query.py'],['de225fc0cc01dd2f4edd5001969a8243255f6ac6'],2,2,4,1,,,
45165873ea9fade57ba671e57089ef0e2c0dd234,"cqle: refactor ContainerUpdateClause init

don't pass redundant information, and always use the column
db_field_name

PYTHON-530",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-29 15:39:59-05:00,18000,2016-03-29 15:39:59-05:00,18000,True,False,"['query.py', 'statements.py', 'test_assignment_clauses.py', 'test_update_statement.py']",['6c65df3287226e9195a94e8920bb68e22f1fd332'],52,48,100,4,0.0,0.0,1.0
ffe51068f7d6eb80f8dc4c899e307de8fcf7ae76,"cqle: assume we always have the column for container updates

PYTHON-530",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-29 15:45:00-05:00,18000,2016-03-29 15:45:00-05:00,18000,True,False,['statements.py'],['45165873ea9fade57ba671e57089ef0e2c0dd234'],3,3,6,1,,1.0,
f2b2d2bd0c6eddc6a12cbc6a6e013b835bc6b60d,"cqle: refactor common update lagic to UpdateStatement

PYTHON-530",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-30 09:43:42-05:00,18000,2016-03-30 09:43:42-05:00,18000,True,False,"['query.py', 'statements.py']",['ffe51068f7d6eb80f8dc4c899e307de8fcf7ae76'],43,38,81,2,1.0,1.0,0.0
8a18b4a5988ff12abfaacba00099b4918cf70842,"cqle: refactor to_database conversions for update clauses

PYTHON-530",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-30 10:19:14-05:00,18000,2016-03-30 10:19:14-05:00,18000,True,False,"['statements.py', 'test_assignment_clauses.py', 'test_update_statement.py']",['f2b2d2bd0c6eddc6a12cbc6a6e013b835bc6b60d'],65,61,126,3,0.0,0.0,0.0
56c8ec4442708d3acb0bb9e2f78aa7817ea243b0,PYTHON-520 adding test for deffered item population,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-30 10:31:29-05:00,18000,2016-03-30 10:31:29-05:00,18000,True,False,['test_queryset.py'],['de225fc0cc01dd2f4edd5001969a8243255f6ac6'],1,72,73,1,0.25,1.0,1.0
582eb042aa095d4ca2c4a21565bb50cc55a1f3f2,3.2a1 relase version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-30 10:52:57-05:00,18000,2016-03-30 10:52:57-05:00,18000,True,False,['__init__.py'],['de225fc0cc01dd2f4edd5001969a8243255f6ac6'],1,1,2,1,,,
d20086758106e2f6726f67549f6c89248a7f7d2c,Skipping UDT warning test for C* 2.1,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-30 18:08:21-05:00,18000,2016-03-30 18:08:21-05:00,18000,True,False,['test_management.py'],['0954c685caa979ed6d973162abfe5f4dc214dc38'],5,6,11,1,1.0,1.0,1.0
8599b8322985817cf1e28c21f0d43b1cb431991a,post-release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-30 11:51:06-05:00,18000,2016-03-31 09:36:15-05:00,18000,True,False,['__init__.py'],['c159568fc322490eadf89ddb1ff0829ffd32371f'],1,1,2,1,,,
8c473819ead387cd263b94e3f946664ad902fd31,"cql: raise when a model sync requires PK changes

PYTHON-532",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-31 11:04:51-05:00,18000,2016-03-31 11:04:51-05:00,18000,True,False,['management.py'],['8599b8322985817cf1e28c21f0d43b1cb431991a'],24,20,44,1,0.0,0.0,1.0
ba1f54391b11fb3bc011b2fb7ab0623a1b38b77a,"cqle: improve one of the sync_table tests

PYTHON-532",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-31 11:05:17-05:00,18000,2016-03-31 11:05:17-05:00,18000,True,False,['test_management.py'],['8c473819ead387cd263b94e3f946664ad902fd31'],13,21,34,1,0.0,1.0,1.0
b1df7369735f7e3f41c2f3b51ca885d37ef2bf81,"cqle: sync_table: verify pk composition and not just type matching

PYTHON-532",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-31 11:47:17-05:00,18000,2016-03-31 11:47:17-05:00,18000,True,False,['management.py'],['ba1f54391b11fb3bc011b2fb7ab0623a1b38b77a'],10,26,36,1,1.0,0.18181818181818182,1.0
7f1da283ea54cab6112acd07c5c1f748cce4d65e,cqle: remove KeyError for missing keyspace on sync,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-31 11:52:08-05:00,18000,2016-03-31 11:52:08-05:00,18000,True,False,['management.py'],['b1df7369735f7e3f41c2f3b51ca885d37ef2bf81'],1,5,6,1,0.0,0.0,1.0
2ce916836d34e51fca8d2ed21f757f06bb927c77,remove unused import,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-31 12:37:36-05:00,18000,2016-03-31 12:37:36-05:00,18000,True,False,['management.py'],['7f1da283ea54cab6112acd07c5c1f748cce4d65e'],1,0,1,1,,,
3c2bc6664f8745409fd07127a276025fc1ebb33a,remove unused imports,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-31 15:20:06-05:00,18000,2016-03-31 15:20:06-05:00,18000,True,False,['query.py'],['a89fddc19e0b04e433d53712eb3eb92a5dfcaf19'],3,1,4,1,,,
f03e6381e7bb62bcda868549bb323ac7fd5ffb43,"cqle: partition key index on model columns

PYTHON-535",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-03-31 15:20:27-05:00,18000,2016-03-31 15:20:27-05:00,18000,True,False,"['columns.py', 'models.py', 'query.py']",['3c2bc6664f8745409fd07127a276025fc1ebb33a'],0,6,6,3,0.0,0.2,0.0
e728c921aa1ec490bdc422ded9119f7517eaa471,PYTHON-530 adding test to check cql for correct dbfield values,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-31 16:52:22-05:00,18000,2016-03-31 16:53:09-05:00,18000,True,False,['test_queryset.py'],['a89fddc19e0b04e433d53712eb3eb92a5dfcaf19'],0,33,33,1,0.0,1.0,1.0
1ffd4dd0bbd831cf229f88d473215278f88f83f4,"cqle: make statements collect primary key values

initially for DML path; still need to address queryset

PYTHON-535",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-01 10:14:48-05:00,18000,2016-04-01 10:14:48-05:00,18000,True,False,"['query.py', 'statements.py', 'test_assignment_statement.py', 'test_base_statement.py', 'test_delete_statement.py', 'test_insert_statement.py', 'test_select_statement.py', 'test_update_statement.py']",['f03e6381e7bb62bcda868549bb323ac7fd5ffb43'],114,83,197,8,1.0,1.0,0.0
f239392747006e451b2b95ec2440c439a6cf8ae0,"cqle: rework statement part. key building

PYTHON-535",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-01 14:39:42-05:00,18000,2016-04-01 14:39:42-05:00,18000,True,False,"['query.py', 'statements.py', 'test_insert_statement.py']",['1ffd4dd0bbd831cf229f88d473215278f88f83f4'],28,18,46,3,0.0,0.0,1.0
90fdc4149e46aa35ff2fb48ef47cd7bc2f604bd4,remove superfluous conditional,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-01 15:00:07-05:00,18000,2016-04-01 15:00:07-05:00,18000,True,False,['connection.py'],['f239392747006e451b2b95ec2440c439a6cf8ae0'],4,1,5,1,0.0,1.0,1.0
05ba3a10a2c311869ba4d8c52691bed57d60f7d6,"fix SimpleStatement composite key packing, refactor packing to common base",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-01 16:04:43-05:00,18000,2016-04-01 16:04:43-05:00,18000,True,False,['query.py'],['90fdc4149e46aa35ff2fb48ef47cd7bc2f604bd4'],9,7,16,1,1.0,0.0,0.0
9dce60a745a91d6304c9320abc8a1c4e3ab89be7,Fix for #Python-533. Secondary index on set field,Nikolay Fominykh,nikolayfn@gmail.com,Nikolay Fominykh,nikolayfn@gmail.com,2016-04-03 18:50:05+03:00,-10800,2016-04-03 18:50:05+03:00,-10800,True,False,['management.py'],['a89fddc19e0b04e433d53712eb3eb92a5dfcaf19'],1,2,3,1,1.0,1.0,1.0
0f1b554a2b79a4af47eb4ae9748db151e217ff19,"handle single-element routing key as tuple, list",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-04 10:36:28-05:00,18000,2016-04-04 10:36:28-05:00,18000,True,False,['query.py'],['05ba3a10a2c311869ba4d8c52691bed57d60f7d6'],1,4,5,1,1.0,1.0,1.0
2493023f2b393623e9aeeebc823dc968a423d484,map cql type name to cassandra.cqltypes,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-04 10:37:45-05:00,18000,2016-04-04 10:37:45-05:00,18000,True,False,['cqltypes.py'],['0f1b554a2b79a4af47eb4ae9748db151e217ff19'],0,3,3,1,1.0,1.0,0.0
c4c0c839f1ad21811c4f7cfacb3ea2049a7c95e4,fix SimpleDateType serialization from offset int value,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-04 12:39:26-05:00,18000,2016-04-04 12:39:26-05:00,18000,True,False,['cqltypes.py'],['2493023f2b393623e9aeeebc823dc968a423d484'],0,5,5,1,1.0,1.0,1.0
7a1fde1a691d4d754b331cb203dda777081585a9,"cqle: attach routing key to mapper statements

PYTHON-535",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-04 12:39:52-05:00,18000,2016-04-04 12:39:52-05:00,18000,True,False,"['columns.py', 'models.py', 'named.py', 'query.py', 'statements.py', 'test_value_io.py', 'test_queryset.py', 'test_routing.py']",['c4c0c839f1ad21811c4f7cfacb3ea2049a7c95e4'],23,58,81,8,0.7272727272727273,0.7272727272727273,0.22727272727272727
b3e9ae308bd1f326e972c876ca66285cd2b8a653,"cqle: fix UserDefinteType cql_type

PYTHON-535",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-04 13:36:04-05:00,18000,2016-04-04 13:36:04-05:00,18000,True,False,['columns.py'],['7a1fde1a691d4d754b331cb203dda777081585a9'],1,3,4,1,1.0,1.0,1.0
13cbfe7b126094e3981b98899fa650e543a0f09b,Reverting to use local ccm install for integration tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-04 13:44:47-05:00,18000,2016-04-04 13:44:47-05:00,18000,True,False,['build.yaml'],['a89fddc19e0b04e433d53712eb3eb92a5dfcaf19'],0,1,1,1,,,
8b09c44126a9cad341d7224f6599f50b7949f2c5,cqle: removed unused consistency attr from statements,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-04 13:48:45-05:00,18000,2016-04-04 13:48:45-05:00,18000,True,False,"['query.py', 'statements.py']",['b3e9ae308bd1f326e972c876ca66285cd2b8a653'],13,3,16,2,1.0,0.1,1.0
a3012628a7b06071095c73d334337f34f4c93246,"remove unused fetch_size execute parameter in favor of statement attr

PYTHON-535",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-04 13:59:18-05:00,18000,2016-04-04 13:59:18-05:00,18000,True,False,"['connection.py', 'query.py']",['8b09c44126a9cad341d7224f6599f50b7949f2c5'],7,7,14,2,1.0,1.0,0.0
5c09da62faad824cc4f36638af3b20ddf7552b74,"cqle: model attribute to disable routing key computation

PYTHON-535",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-04 14:56:54-05:00,18000,2016-04-04 14:56:54-05:00,18000,True,False,"['models.py', 'query.py', 'statements.py', 'models.rst']",['a3012628a7b06071095c73d334337f34f4c93246'],6,20,26,4,0.2,0.2,0.0
e62407bd1a4fa1aa9ad9c86ed21eb6a15b1a1771,"cqle: protect col name when looking for index meta

PYTHON-533",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-04 15:28:45-05:00,18000,2016-04-04 15:28:45-05:00,18000,True,False,['management.py'],['9dce60a745a91d6304c9320abc8a1c4e3ab89be7'],5,4,9,1,,,
6c452f4104647fb78fa334277e6032463df13cf9,"Fix part key to exclude in, contains operators

PYTHON-535",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-04 15:37:06-05:00,18000,2016-04-04 15:37:06-05:00,18000,True,False,['statements.py'],['5c09da62faad824cc4f36638af3b20ddf7552b74'],1,1,2,1,,,
19fb14bf15441411b08b1367c087f9a473e164c4,"cqle: support more comparisons in LWT conditional

also fixes an issue where iff did not use the column's db_field

PYTHON-528",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-04 16:04:41-05:00,18000,2016-04-04 16:04:41-05:00,18000,True,False,"['operators.py', 'query.py', 'statements.py']",['94db2f65475e160015c15fe4fa540a8446a99003'],4,10,14,3,0.0,0.0,0.0
c52cdba0e6f926dee08f5a169aba1a7326dd8a01,Fixing bug with test_queryset test collision,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-05 09:59:59-05:00,18000,2016-04-05 09:59:59-05:00,18000,True,False,['test_queryset.py'],['94db2f65475e160015c15fe4fa540a8446a99003'],6,2,8,1,,,
78d3cc462560412e45232cf261d03ae1fc618644,3.2 changelog update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-05 10:48:18-05:00,18000,2016-04-05 10:48:18-05:00,18000,True,False,['CHANGELOG.rst'],['c52cdba0e6f926dee08f5a169aba1a7326dd8a01'],1,20,21,1,,,
2eec974e104ea7ebcd06f2189cde012898c350e3,PYTHON-532 Added tests for primary key validation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-01 17:14:56-05:00,18000,2016-04-05 11:53:15-05:00,18000,True,False,['test_management.py'],['93da2cafbc402c00cf1267124311b9e6fe6c6fac'],1,52,53,1,1.0,1.0,1.0
62434e5f9d2caf6d8bca6003f69ad112ba2c33c8,no ifilter in py3,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-05 15:53:16-05:00,18000,2016-04-05 15:53:16-05:00,18000,True,False,['statements.py'],['2eec974e104ea7ebcd06f2189cde012898c350e3'],2,2,4,1,,,
d9cb5419f1b02ddbd23c43da0cf04507ffb04ac1,"richer error for ResponseFuture timeout callback

PYTHON-444",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-06 09:26:09-05:00,18000,2016-04-06 10:08:50-05:00,18000,True,False,['cluster.py'],['2eec974e104ea7ebcd06f2189cde012898c350e3'],1,10,11,1,1.0,1.0,1.0
ced919a32afaec2178767d116ccb5b5127830bd2,"DNS resolve contact points

removes duplicate hosts, also expands A records

PYTHON-103
PYTHON-415",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-06 13:56:30-05:00,18000,2016-04-06 13:56:30-05:00,18000,True,False,"['cluster.py', 'policies.py']",['2eec974e104ea7ebcd06f2189cde012898c350e3'],3,7,10,2,0.0,0.0,0.0
e00b150ad7da935782a69cfe8f5eff02f10f1121,"check for no hosts on getaddrinfo

not sure how this can happen without raising something else, but
socket.create_connection checks it",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-06 15:20:33-05:00,18000,2016-04-06 15:20:33-05:00,18000,True,False,['connection.py'],['ced919a32afaec2178767d116ccb5b5127830bd2'],0,3,3,1,0.0,0.0,1.0
cdfb03e7b72e05b1ce6a7998436fb23fa1e2b692,reject None in contact_points,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-06 15:34:07-05:00,18000,2016-04-06 15:34:07-05:00,18000,True,False,['cluster.py'],['e00b150ad7da935782a69cfe8f5eff02f10f1121'],0,2,2,1,0.0,0.0,0.0
d6e20b4b3f73e8fbe944f139d66939a6b4f0b61c,PYTHON-533 added tests for container types and indices,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-06 16:07:31-05:00,18000,2016-04-06 16:07:31-05:00,18000,True,False,['test_management.py'],['62434e5f9d2caf6d8bca6003f69ad112ba2c33c8'],0,25,25,1,1.0,1.0,1.0
0574318f0ca3fd46b25b6cb0648b1d2f9e8693c3,"PYTHON-528 tests, Fix for set index test",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-07 13:19:50-05:00,18000,2016-04-07 13:19:50-05:00,18000,True,False,"['test_management.py', 'test_where_operators.py', 'test_delete_statement.py', 'test_update_statement.py', 'test_lwt_conditional.py']",['d6e20b4b3f73e8fbe944f139d66939a6b4f0b61c'],0,67,67,5,1.0,1.0,1.0
e8fda07c2f794463caf2ab245f15beaac17012d8,fix unit test following cluster/policy update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-07 14:50:36-05:00,18000,2016-04-07 14:50:36-05:00,18000,True,False,['test_policies.py'],['cdfb03e7b72e05b1ce6a7998436fb23fa1e2b692'],1,1,2,1,,,
85ef15870e476ccc60e9325097a72014ac35bb1d,"Fixing bug in test_where_operators, also adding C* 2.0 exclusion for NE tests",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-07 14:59:29-05:00,18000,2016-04-07 14:59:29-05:00,18000,True,False,"['test_where_operators.py', 'test_lwt_conditional.py']",['0574318f0ca3fd46b25b6cb0648b1d2f9e8693c3'],2,4,6,2,,,
0184d5158749671ed7182be83e2af9d87ce3379a,"don't raise Exception base from the driver

PYTHON-527",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-07 15:57:45-05:00,18000,2016-04-07 15:57:45-05:00,18000,True,False,"['__init__.py', 'cluster.py', 'connection.py', 'policies.py', 'protocol.py', 'util.py']",['946c1447385e05dee7b941463d00bcbd903bd7c0'],29,33,62,6,,,
d4bf40263e0aef5ea6556b68d6ce493cc9c6fb78,"Cluster config to disable schema and token processing

PYTHON-327",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-07 16:42:04-05:00,18000,2016-04-07 16:42:04-05:00,18000,True,False,"['cluster.py', 'metadata.py', 'cluster.rst']",['2eec974e104ea7ebcd06f2189cde012898c350e3'],42,100,142,3,0.0,0.0,0.0
940166863af189977b5f5455bcf3053cfd225ed2,"added AddressTranlator interface

PYTHON-69",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-08 13:11:41-05:00,18000,2016-04-08 13:11:41-05:00,18000,True,False,"['cluster.py', 'policies.py']",['d4bf40263e0aef5ea6556b68d6ce493cc9c6fb78'],19,55,74,2,0.9166666666666666,0.9166666666666666,0.9166666666666666
bd6dae2fbb01c4d96dc1c81bd5dc01a0a8c0db01,"address translator docs

PYTHON-69",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-08 13:16:04-05:00,18000,2016-04-08 13:16:04-05:00,18000,True,False,"['cluster.rst', 'policies.rst']",['940166863af189977b5f5455bcf3053cfd225ed2'],0,11,11,2,,,
1f596b493546e1540e9afba4c12e7835a0fff1f1,"fix gevent connection to use only blocking semantics

PYTHON-429
PYTHON-536",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-08 14:42:47-05:00,18000,2016-04-08 14:42:47-05:00,18000,True,False,['geventreactor.py'],['2eec974e104ea7ebcd06f2189cde012898c350e3'],31,8,39,1,1.0,1.0,0.0
48467bb7469c72a74fb1fbb996c9c13f7ce7d781,PYTHON-535 Tests for cqlengine routing key generation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-08 15:09:07-05:00,18000,2016-04-08 15:09:07-05:00,18000,True,False,"['__init__.py', 'test_model_io.py']",['85ef15870e476ccc60e9325097a72014ac35bb1d'],0,162,162,2,0.7777777777777778,1.0,0.8194444444444444
613c0052825cc13a5b43caa2234042d14cdb27be,fix unit test following addition of address_translator,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-08 16:31:19-05:00,18000,2016-04-08 16:31:19-05:00,18000,True,False,['test_control_connection.py'],['76cc6401c38a50daa0d3adb93aa28f453ff36b3e'],1,2,3,1,,,
edacf56353c3519a4e42327d7a058313e3775b49,fix SimpleDateType slz from long (same as int),Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-11 12:19:59-05:00,18000,2016-04-11 12:19:59-05:00,18000,True,False,['cqltypes.py'],['48467bb7469c72a74fb1fbb996c9c13f7ce7d781'],1,1,2,1,,,
c7f15a2165b0ddacda2a8ffba8e25e291752d134,make cqlengine routing key test work in py3,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-11 12:20:23-05:00,18000,2016-04-11 12:20:23-05:00,18000,True,False,['test_model_io.py'],['edacf56353c3519a4e42327d7a058313e3775b49'],1,1,2,1,,,
e2ce469800d6db752c220c4011a14bbc0a036982,"expose broadcast and listen addresses on Host

PYTHON-332",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-11 14:12:07-05:00,18000,2016-04-11 14:12:07-05:00,18000,True,False,"['cluster.py', 'pool.py']",['613c0052825cc13a5b43caa2234042d14cdb27be'],3,21,24,2,0.0,0.0,0.0
0b21341a2fcac08128bd079bd5646993b9ef8c03,"add RETRY_NEXT_HOST decision, default to this on unavailable

PYTHON-285",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-11 15:49:00-05:00,18000,2016-04-11 15:49:00-05:00,18000,True,False,"['cluster.py', 'policies.py', 'test_metrics.py', 'test_policies.py']",['613c0052825cc13a5b43caa2234042d14cdb27be'],33,41,74,4,0.0,0.0,1.0
47cb3e90154a46a34cc43b288ce0d727d15373bf,"Adding decorator for counting underlying query execution, updating some tests to add expected query counts",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-11 16:49:00-05:00,18000,2016-04-11 16:52:00-05:00,18000,True,False,"['__init__.py', 'test_batch_query.py', 'test_datetime_queries.py', 'test_named.py', 'test_queryoperators.py', 'test_queryset.py', 'test_updates.py']",['c7f15a2165b0ddacda2a8ffba8e25e291752d134'],13,162,175,7,1.0,1.0,0.8888888888888888
4ae307fdec4a26bc2bbbd61a1960e32cf14ba43d,Making a few fixes based on PR feedback,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-12 11:27:26-05:00,18000,2016-04-12 11:27:26-05:00,18000,True,False,['__init__.py'],['47cb3e90154a46a34cc43b288ce0d727d15373bf'],2,6,8,1,1.0,1.0,1.0
27d1559b6d4bd8ce466e1d6bf491b926a898ee43,Prepare 3.2.0 release,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-04-12 14:46:53-04:00,14400,2016-04-12 14:46:53-04:00,14400,True,False,"['CHANGELOG.rst', '__init__.py']",['8d4b49ef358f5da3052d60379530061461703310'],1,2,3,2,,,
d79255bf80934abb401b5da461a2be04d06421ed,post-release version,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-04-12 14:52:12-04:00,14400,2016-04-12 14:52:12-04:00,14400,True,False,['__init__.py'],['27d1559b6d4bd8ce466e1d6bf491b926a898ee43'],1,1,2,1,,,
0c17ba9f81dc20903997b7a5e147a0cfc45804d8,better timeout message for connection heartbeat,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-12 14:13:16-05:00,18000,2016-04-12 14:13:16-05:00,18000,True,False,['connection.py'],['613c0052825cc13a5b43caa2234042d14cdb27be'],1,1,2,1,,,
17e9ced7efd4490d9a91df48e5ceb7645d964c23,don't log heartbeat options message on error path,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-12 14:13:48-05:00,18000,2016-04-12 14:13:48-05:00,18000,True,False,['connection.py'],['0c17ba9f81dc20903997b7a5e147a0cfc45804d8'],4,4,8,1,1.0,1.0,1.0
0a29c65360f5c660b9fa87641104d9ea64fe48e3,"keep heartbeat exceptions and use when defuncting

provides a better error log",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-12 14:14:48-05:00,18000,2016-04-12 14:14:48-05:00,18000,True,False,['connection.py'],['17e9ced7efd4490d9a91df48e5ceb7645d964c23'],6,6,12,1,,,
604b691019b8fa5c64d34f10595ec7dc8d15aa2d,don't log exc_info in heartbeat; it's logged while defuncting,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-12 16:16:41-05:00,18000,2016-04-12 16:16:41-05:00,18000,True,False,['connection.py'],['0a29c65360f5c660b9fa87641104d9ea64fe48e3'],2,2,4,1,,,
d1967db4f7fbdac694f054d09a1a3b9b1b4e6acf,"by default, don't convict a host based on heartbeat timeouts

PYTHON-286",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-12 16:17:13-05:00,18000,2016-04-12 16:17:13-05:00,18000,True,False,['policies.py'],['604b691019b8fa5c64d34f10595ec7dc8d15aa2d'],2,2,4,1,,,
5b7627a84866cbebd8d74cf7431d0d6dd4752559,"Make sure pools keep trying to connect now

This follows from changing the default conviction (we now keep pools up,
and failures should keep trying to connect)

PYTHON-286",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-12 16:17:52-05:00,18000,2016-04-12 16:17:52-05:00,18000,True,False,['pool.py'],['d1967db4f7fbdac694f054d09a1a3b9b1b4e6acf'],15,25,40,1,1.0,1.0,1.0
c030d3e2e720ab2c8fd5cc6fe40a81daed9f2f3e,fix unit tests following heartbeat update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-12 16:51:25-05:00,18000,2016-04-12 16:51:25-05:00,18000,True,False,['test_connection.py'],['5b7627a84866cbebd8d74cf7431d0d6dd4752559'],6,9,15,1,0.0,1.0,1.0
d89b5688052d337e54f81bd05115900bd6f35d0b,"PYTHON-103, PYTHON-415, Adding tests for host resolution, and duplication",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-12 19:39:39-05:00,18000,2016-04-12 19:39:39-05:00,18000,True,False,"['test_cluster.py', 'test_cluster.py']",['fce013a043d28616f5ea2a2f6149526a4dc9a362'],4,42,46,2,1.0,1.0,1.0
6684e1ae59c420b3c99e20b64e70ed18acecc1f8,assertRegex is only python3 or unittest2,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-13 09:34:17-05:00,18000,2016-04-13 09:34:17-05:00,18000,True,False,['test_connection.py'],['c030d3e2e720ab2c8fd5cc6fe40a81daed9f2f3e'],1,1,2,1,,,
86b804306d21c0773ef5dc2f663280b308073fa7,"Explicit type for scale in cython deserializer

Fixes broken compilation that showed up in in Cython 0.24

PYTHON-542",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-13 13:40:37-05:00,18000,2016-04-13 14:25:53-05:00,18000,True,False,['deserializers.pyx'],['d79255bf80934abb401b5da461a2be04d06421ed'],1,1,2,1,,,
298785b3472466b83a9faff4c149609f197492d4,3.2.1 patch version and changelog,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-13 14:33:09-05:00,18000,2016-04-13 14:33:09-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['86b804306d21c0773ef5dc2f663280b308073fa7'],1,7,8,2,,,
b7d329218ef1a5d1b0fcfcee307b437054288b17,post-release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-13 14:36:27-05:00,18000,2016-04-13 14:36:27-05:00,18000,True,False,['__init__.py'],['298785b3472466b83a9faff4c149609f197492d4'],1,1,2,1,,,
2a507e7799ea15f93f26d25334f5bd8620bf91ab,"make pool.HostConnection block on a number of concurrent requests

This allows basic rate limiting for low-level integrations.

PYTHON-514",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-14 11:57:11-05:00,18000,2016-04-14 11:57:11-05:00,18000,True,False,"['connection.py', 'pool.py', 'test_connection.py']",['fce013a043d28616f5ea2a2f6149526a4dc9a362'],12,34,46,3,0.0,0.0,0.8666666666666667
023a7a876d5068744d3f26b0812d09ca9f626d35,raise if timeout during query plan,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-14 11:58:09-05:00,18000,2016-04-14 11:58:09-05:00,18000,True,False,['cluster.py'],['2a507e7799ea15f93f26d25334f5bd8620bf91ab'],0,4,4,1,1.0,0.0,1.0
995e7a4f1a0422aa94d192c41e568755090feb65,"make server exception hierarchy match server definition

PYTHON-443",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-14 13:09:14-05:00,18000,2016-04-14 13:09:14-05:00,18000,True,False,['__init__.py'],['fce013a043d28616f5ea2a2f6149526a4dc9a362'],8,20,28,1,,,
fb5d62ab05c482536bdde334d7c8ca0f0b0ccb03,"deduplicate column names to avoid blowing up named_tuple results

PYTHON-467",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-14 14:12:59-05:00,18000,2016-04-14 14:12:59-05:00,18000,True,False,"['query.py', 'util.py']",['cd40b53d04b9d9d132a39d83f510345645c364aa'],2,13,15,2,1.0,1.0,1.0
8077388432037f9326f96e17462d4ab7c78f25b4,"remove connection leak when control conn reconnect during shutdown

PYTHON-482",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-14 15:16:22-05:00,18000,2016-04-14 15:16:22-05:00,18000,True,False,['cluster.py'],['cd40b53d04b9d9d132a39d83f510345645c364aa'],1,6,7,1,0.4,0.4,1.0
d4d29cc523ab715d92f8cadff28f60996af39ffa,"pool.Host.release_version

PYTHON-301",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-14 16:27:39-05:00,18000,2016-04-14 16:27:39-05:00,18000,True,False,"['cluster.py', 'pool.py']",['cd40b53d04b9d9d132a39d83f510345645c364aa'],2,8,10,2,0.0,0.0,0.0
71e37957826824662aec6cde39f838bcf3a8094f,remove Connection.server_version and use host metadata,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-15 10:08:45-05:00,18000,2016-04-15 10:08:45-05:00,18000,True,False,"['cluster.py', 'connection.py', 'metadata.py', 'test_metadata.py']",['d4d29cc523ab715d92f8cadff28f60996af39ffa'],29,7,36,4,0.25,0.16666666666666666,1.0
9ff3d13a2416e5a6e14565f6185f7cd7ddc8b3c4,PYTHON-332 Test for broadcast/listen address,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-15 10:29:50-05:00,18000,2016-04-15 10:29:50-05:00,18000,True,False,['test_metadata.py'],['cd40b53d04b9d9d132a39d83f510345645c364aa'],1,23,24,1,1.0,1.0,1.0
38bba9cb678866668697ebcccb9164c0aed24eec,fix metadata tests following get_schema_parser update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-15 12:02:40-05:00,18000,2016-04-15 12:02:40-05:00,18000,True,False,['test_metadata.py'],['71e37957826824662aec6cde39f838bcf3a8094f'],2,3,5,1,0.0,1.0,1.0
d0beb8ee922f2e9f45dab30a92eddd40c61b4ef6,"client-settable CL for trace queries

PYTHON-435",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-15 13:23:49-05:00,18000,2016-04-15 13:23:49-05:00,18000,True,False,"['cluster.py', 'query.py']",['cd40b53d04b9d9d132a39d83f510345645c364aa'],10,15,25,2,,,0.0
619b9f117760f81a6024738218f0706e9d821cf4,PYTHON-69 Simple litmus tests for AddressTranslation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-15 16:10:31-05:00,18000,2016-04-15 16:10:31-05:00,18000,True,False,['test_cluster.py'],['97bef763ae11d93df16911902f1d09c319a43e51'],2,54,56,1,1.0,1.0,1.0
97fcf03f91183be5f06fb0b2e1143dcc68c4be31,PYTHON-301 Adding test for host release version,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-15 16:31:57-05:00,18000,2016-04-15 16:31:57-05:00,18000,True,False,['test_metadata.py'],['97bef763ae11d93df16911902f1d09c319a43e51'],1,15,16,1,1.0,1.0,1.0
98ba9be9bb83286d3915ce3d1d9ceb00f9f8c0ae,"'match_hostname' ssl option

PYTHON-296",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-18 14:17:22-05:00,18000,2016-04-18 14:17:22-05:00,18000,True,False,"['cluster.py', 'connection.py']",['cd40b53d04b9d9d132a39d83f510345645c364aa'],1,18,19,2,0.0,0.75,0.25
ca28ae0ac26791a6698823a31d93d0c5d45b7f75,"fix connection for non-ssl paths

PYTHON0-296",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-18 14:36:19-05:00,18000,2016-04-18 14:36:19-05:00,18000,True,False,['connection.py'],['98ba9be9bb83286d3915ce3d1d9ceb00f9f8c0ae'],1,3,4,1,,0.0,
5ecb8b167c55b6fd94ed29560f7ecb22248e1647,"pass prev value to counter update clause

PYTHON-547",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-19 09:52:32-05:00,18000,2016-04-19 09:52:32-05:00,18000,True,False,['statements.py'],['298785b3472466b83a9faff4c149609f197492d4'],1,1,2,1,,,
e39c62a6731e5bd245254e81bffd6c7607799f39,"test for counter save after no update

PYTHON-547",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-19 10:02:09-05:00,18000,2016-04-19 10:02:09-05:00,18000,True,False,['test_counter_column.py'],['5ecb8b167c55b6fd94ed29560f7ecb22248e1647'],0,16,16,1,1.0,1.0,1.0
000d239e51f37fc948522d63177f693b651f3e04,3.2.2 patch release,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-19 10:05:25-05:00,18000,2016-04-19 10:06:28-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['e39c62a6731e5bd245254e81bffd6c7607799f39'],2,8,10,2,,,
f42c26d842f3a9c5980f1a992597d94d56173789,post-release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-19 16:18:48-05:00,18000,2016-04-19 16:18:48-05:00,18000,True,False,['__init__.py'],['000d239e51f37fc948522d63177f693b651f3e04'],1,1,2,1,,,
36028790d0d69e3ea52d55d87442e3e68282134f,PYTHON-435 adding test for trace consistency levels,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-20 15:29:46-05:00,18000,2016-04-20 15:29:46-05:00,18000,True,False,['test_query.py'],['0f0e90fd64382cd9da7bfa1d048215645525096a'],4,30,34,1,0.0,1.0,1.0
90134e142845352092c4bc41e28851db1bdee95e,"only add local token to the map if it's still in the ring

addresses an issue which would cause a None key in the map if the
topo change triggering this event was removing the control connection
host

PYTHON-548",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-20 15:30:52-05:00,18000,2016-04-20 15:30:52-05:00,18000,True,False,['cluster.py'],['0f0e90fd64382cd9da7bfa1d048215645525096a'],4,5,9,1,,,
b3149e69e3764c428206d6a97381230bec1c6e66,proactively reconnect when the control conn host is removed,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-20 15:33:51-05:00,18000,2016-04-20 15:33:51-05:00,18000,True,False,['cluster.py'],['90134e142845352092c4bc41e28851db1bdee95e'],1,7,8,1,1.0,1.0,1.0
876965a877c0a3a222bbc401e3bb4811b9b75469,PYTHON-443 unit test to verify exception types,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-20 16:00:28-05:00,18000,2016-04-20 16:00:28-05:00,18000,True,False,['test_cluster.py'],['36028790d0d69e3ea52d55d87442e3e68282134f'],1,56,57,1,0.0,1.0,1.0
98074db5b786fef8b97b440c41c392299e2a1a31,make token mapping robust against unexpected state,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-20 16:35:58-05:00,18000,2016-04-20 16:35:58-05:00,18000,True,False,['metadata.py'],['b3149e69e3764c428206d6a97381230bec1c6e66'],6,12,18,1,1.0,0.0,0.0
097e3efbed216ababb5b2b5b36c7bc4fa1c9074e,PYTHON-543 Forced cython validation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-14 10:51:57-05:00,18000,2016-04-21 09:56:43-05:00,18000,True,False,"['build.yaml', '__init__.py', 'test_cython_protocol_handlers.py', 'utils.py']",['876965a877c0a3a222bbc401e3bb4811b9b75469'],8,33,41,4,1.0,1.0,1.0
d33376fde98cbf5ff0304a179852f1c9753d5719,Allow for snapshot server versions in host metadata test,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-21 10:20:49-05:00,18000,2016-04-21 10:20:49-05:00,18000,True,False,['test_metadata.py'],['876965a877c0a3a222bbc401e3bb4811b9b75469'],1,1,2,1,,,
4fa2312169860cf1aac8a64ab152a86dfffa503e,PYTHON-327 Adding tests for skipping metadata population,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-20 12:21:11-05:00,18000,2016-04-21 11:19:14-05:00,18000,True,False,['test_metadata.py'],['d33376fde98cbf5ff0304a179852f1c9753d5719'],0,30,30,1,1.0,1.0,1.0
da977afe92eb74ace187cf42836644512c219085,"weakref cluster arg in exit reg

prevents cluster ref leak when cycling Clusters

PYTHON-135",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-21 15:16:03-05:00,18000,2016-04-21 15:16:03-05:00,18000,True,False,['cluster.py'],['0f0e90fd64382cd9da7bfa1d048215645525096a'],3,6,9,1,1.0,1.0,1.0
d0ff842862943c345cc917652b8fa5dddfa4da61,"don't register cluster scheduler for separate exit function

PYTHON-135",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-21 15:41:41-05:00,18000,2016-04-21 15:41:41-05:00,18000,True,False,['cluster.py'],['da977afe92eb74ace187cf42836644512c219085'],9,7,16,1,0.0,0.0,1.0
b8dc51b4a667b8cab0fd5757708ea1d6c68b214c,PYTHON-467 test for duplicate names,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-21 15:45:32-05:00,18000,2016-04-21 15:45:32-05:00,18000,True,False,['test_row_factories.py'],['960a671a86fbb70f44338e8afa23a0eecbf0fb8a'],1,47,48,1,1.0,1.0,1.0
6910bf7d93cfb947b5d18493217b728a25c681f3,"single atexit shutdown function

prevents growing the atexit function list indefinitely while
cycling clusters

PYTHON-135",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-21 16:51:13-05:00,18000,2016-04-21 16:51:13-05:00,18000,True,False,['cluster.py'],['d0ff842862943c345cc917652b8fa5dddfa4da61'],8,20,28,1,1.0,1.0,1.0
da994dcd3ad76f3eacae367b87f345f2ccc7a1c4,"Explicitly state errors originating from server

PYTHON-412",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-22 09:25:36-05:00,18000,2016-04-22 09:25:36-05:00,18000,True,False,['protocol.py'],['0f0e90fd64382cd9da7bfa1d048215645525096a'],2,4,6,1,,,
f72b207c3c1c0e8388e8ef1addbcb4319cd72fec,"Improve warning message when protocol downgrade is used

also don't log error when we're defuncting for unsupported protocol

PYTHON-157",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-22 09:56:37-05:00,18000,2016-04-22 09:56:37-05:00,18000,True,False,"['cluster.py', 'connection.py']",['da994dcd3ad76f3eacae367b87f345f2ccc7a1c4'],3,5,8,2,0.6666666666666666,0.6666666666666666,0.0
aad27c813bb0df76bf6d56b2ecf6f6178123aefc,PYTHON-514 adding test for request id blocking,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-22 12:37:36-05:00,18000,2016-04-22 12:37:36-05:00,18000,True,False,['test_connection.py'],['b8dc51b4a667b8cab0fd5757708ea1d6c68b214c'],2,40,42,1,1.0,1.0,1.0
ee47706c0f23720de6ad71579c18ac91fa0211ea,PYTHON-269 Add tests for hostname validation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-19 13:14:16-05:00,18000,2016-04-25 11:45:12-05:00,18000,True,False,"['.keystore', '.truststore', 'cassandra.crt', 'cassandra.pem', 'driver.crt', 'driver.key', 'driver.pem', 'driver_ca_cert.pem', 'python_driver.crt', 'python_driver.jks', 'python_driver.key', 'python_driver.pem', 'python_driver_bad.pem', 'python_driver_no_pass.key', 'server_cert.pem', 'server_keystore.jks', 'server_trust.jks', 'test_ssl.py', 'test_connection.py']",['aad27c813bb0df76bf6d56b2ecf6f6178123aefc'],191,156,347,19,1.0,1.0,1.0
f966cb969569b82f58412fad82bdb4bca69ffa8b,PYTHON-286 Adding test for heartbeat timeout,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-19 18:25:55-05:00,18000,2016-04-25 12:41:45-05:00,18000,True,False,['test_connection.py'],['a702063b74cfa01b28c9f5145b2930e666011232'],2,87,89,1,0.6,1.0,0.5272727272727272
6763fc64774c1108c2b691d421b472cf2b30ac0b,"make benchmarks work with C* 3

Now using proto ver negotiation instead of 1.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-25 13:21:16-05:00,18000,2016-04-25 13:23:10-05:00,18000,True,False,['base.py'],['3d5fadc92daff9cd1b65ac99a5123d14cd942266'],4,2,6,1,0.5,0.0,0.0
5254f73a1eb7871f97442c6ac092ff4813a7ba67,regenerate column names in named tuple exception,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-25 13:38:25-05:00,18000,2016-04-25 13:38:25-05:00,18000,True,False,['query.py'],['f7f9bcd1bec1393db09642b7b659fd1ac7c7d0b8'],0,1,1,1,1.0,1.0,1.0
d12f6c0a3b71f577f43911cd7475731bfcb7a5ff,do not use protocol version and set_core_connections_per_host in setup/teardown,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-04-26 09:11:37-04:00,14400,2016-04-26 09:14:19-04:00,14400,True,False,['base.py'],['5254f73a1eb7871f97442c6ac092ff4813a7ba67'],4,2,6,1,0.5,0.0,0.0
a01d8d8b70eee509b46826ac694e6bb6a07a960a,Add an cli option to specify the number of columns for the schema,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-04-26 10:04:34-04:00,14400,2016-04-26 10:04:34-04:00,14400,True,False,['base.py'],['d12f6c0a3b71f577f43911cd7475731bfcb7a5ff'],19,30,49,1,0.0,0.0,1.0
aaf78afb3a9bf2442f944cf315d7d861dadb1a0f,Add an cli option to specify the keyspace name and the ability to keep the data after the benchmark,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-04-26 10:16:57-04:00,14400,2016-04-26 10:16:57-04:00,14400,True,False,['base.py'],['a01d8d8b70eee509b46826ac694e6bb6a07a960a'],4,9,13,1,0.2,0.2,1.0
1d52f7afdd85d00e550f383c8aacf7f851e443d1,Add an cli option to specify the column type for the schema,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-04-26 10:43:07-04:00,14400,2016-04-26 10:43:07-04:00,14400,True,False,['base.py'],['aaf78afb3a9bf2442f944cf315d7d861dadb1a0f'],2,14,16,1,0.0,0.0,1.0
857bcbfcff55b18f2fed6bbff1e0b9d050261205,Reuse keyspace and table if they exists,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-04-26 10:49:09-04:00,14400,2016-04-26 10:49:09-04:00,14400,True,False,['base.py'],['1d52f7afdd85d00e550f383c8aacf7f851e443d1'],6,14,20,1,0.0,1.0,1.0
3673fe0da82f66ad41631575930d6c8eb817428a,all requests now use a different partition key,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-04-26 11:34:13-04:00,14400,2016-04-26 11:34:13-04:00,14400,True,False,"['base.py', 'callback_full_pipeline.py', 'future_batches.py', 'future_full_pipeline.py', 'future_full_throttle.py']",['857bcbfcff55b18f2fed6bbff1e0b9d050261205'],7,12,19,5,0.0,0.8,1.0
21e43412c72d3ebe85493edff083606d3036ae3e,"asyncore: add method to wake loop and avoid idle spinning

PYTHON-239",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-26 11:32:50-05:00,18000,2016-04-26 11:32:50-05:00,18000,True,False,['asyncorereactor.py'],['6763fc64774c1108c2b691d421b472cf2b30ac0b'],3,40,43,1,1.0,1.0,1.0
86a793f0510dddb0cd92ebcd8f0f248eeb7ea2d8,Add read benchmark support,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-04-26 12:42:24-04:00,14400,2016-04-26 12:42:24-04:00,14400,True,False,"['base.py', 'callback_full_pipeline.py', 'future_batches.py', 'future_full_pipeline.py', 'future_full_throttle.py']",['3673fe0da82f66ad41631575930d6c8eb817428a'],16,23,39,5,0.2857142857142857,0.2857142857142857,0.7142857142857143
04259fd56f9d118a35bd68084f9816d4051f4d45,prototype udp dispatcher for asyncore,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-26 14:36:46-05:00,18000,2016-04-26 14:36:46-05:00,18000,True,False,['asyncorereactor.py'],['21e43412c72d3ebe85493edff083606d3036ae3e'],1,29,30,1,1.0,1.0,1.0
4a82dfe064786df9e17624077486541f6eb2bf90,"refactor asyncore loop dispatch to use pipe, fallback to busy wait

PYTHON-239",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-26 16:19:21-05:00,18000,2016-04-26 16:19:21-05:00,18000,True,False,['asyncorereactor.py'],['04259fd56f9d118a35bd68084f9816d4051f4d45'],23,75,98,1,0.23809523809523808,1.0,1.0
fe762ae8641ab00eb7ae43b1aa882fa5a9fbaec2,validate for ayncore _BusyWaitDispatcher,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-26 16:26:39-05:00,18000,2016-04-26 16:26:39-05:00,18000,True,False,['asyncorereactor.py'],['4a82dfe064786df9e17624077486541f6eb2bf90'],0,3,3,1,1.0,1.0,1.0
cc3307c9b27516018dad3ad9e22207670cee9f55,"isolate our dispatcher map from asyncore package map

PYTHON-239",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-26 16:41:35-05:00,18000,2016-04-26 16:41:35-05:00,18000,True,False,['asyncorereactor.py'],['fe762ae8641ab00eb7ae43b1aa882fa5a9fbaec2'],11,8,19,1,0.0,0.0,1.0
9146a1b51c42da264f76e1b53affe470b9464346,close and cleanup when asyncore dispatch validation fails,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-26 16:56:39-05:00,18000,2016-04-26 16:56:39-05:00,18000,True,False,['asyncorereactor.py'],['cc3307c9b27516018dad3ad9e22207670cee9f55'],0,7,7,1,0.8,1.0,1.0
489afe5b9e2543d010079db94026c438458a6bde,"make asyncore default busywaitdispatcher for windows

PYTHON-239",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-26 17:02:27-05:00,18000,2016-04-26 17:02:27-05:00,18000,True,False,['asyncorereactor.py'],['9146a1b51c42da264f76e1b53affe470b9464346'],1,7,8,1,,,
6d1af98a6488ace02bd46ce6dd560741556fbc80,Support empty string values in NumpyProtocolHandler,Mark Florisson,mark.florisson@cl.cam.ac.uk,Mark Florisson,mark.florisson@cl.cam.ac.uk,2016-04-27 12:06:45+01:00,-3600,2016-04-27 12:06:45+01:00,-3600,True,False,"['deserializers.pyx', 'numpy_parser.pyx', 'utils.py']",['0f14135a093b43c39fad10bdcbeffb13d88f0cc5'],3,19,22,3,1.0,1.0,1.0
af5a78f524cd21dbf318a7878a32bac8a964c38e,"cython: make empty bytes type consistent for python 3

PYTHON-550",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-27 11:51:18-05:00,18000,2016-04-27 11:51:18-05:00,18000,True,False,['deserializers.pyx'],['31211ff2d29a728787c425474c4cd9a953250b5e'],1,1,2,1,,,
4e6468574f21038d84d935bfaba4126452e843f4,Allowing heartbeat test to run against C* 2.0. Fixing issue with legacy table test.,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-27 12:26:45-05:00,18000,2016-04-27 12:26:45-05:00,18000,True,False,"['test_connection.py', 'test_metadata.py']",['af5a78f524cd21dbf318a7878a32bac8a964c38e'],8,14,22,2,0.8,0.0,0.2
fbe53a53a302ec38c76fddb9df9f6ce08fa22fe3,"restore null object deser while still protecting against segfault in numpy parser

PYTHON-550",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-27 14:12:54-05:00,18000,2016-04-27 14:13:46-05:00,18000,True,False,['numpy_parser.pyx'],['4e6468574f21038d84d935bfaba4126452e843f4'],1,1,2,1,,,
d163950f30f21b534530bd7bdce7030afb194e98,"Allow NULL values in numpy object arrays

Conflicts:
	cassandra/numpy_parser.pyx",Mark Florisson,mark.florisson@cl.cam.ac.uk,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-27 20:10:13+01:00,-3600,2016-04-27 14:36:23-05:00,18000,True,False,['numpy_parser.pyx'],['fbe53a53a302ec38c76fddb9df9f6ce08fa22fe3'],6,2,8,1,,,
01a38259e4a1864db79e7c1e5e2e469a3372bf31,"Don't mark ignored hosts up on discovery

We don't know their state unless an event comes in

PYTHON-531",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-28 16:20:41-05:00,18000,2016-04-28 16:20:41-05:00,18000,True,False,['cluster.py'],['5a554983587eb0bc1d721820421a348c087cc594'],4,5,9,1,1.0,1.0,0.0
1ad419bda41f934ad5b1fa0ce2d76de01f2d1ee7,"don't check schema agreement with ignored hosts

PYTHON-531",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-29 09:54:40-05:00,18000,2016-04-29 09:54:40-05:00,18000,True,False,['cluster.py'],['01a38259e4a1864db79e7c1e5e2e469a3372bf31'],1,2,3,1,0.0,0.0,0.0
ca779bd760e0f7220848eea5112a4bf04d8756d3,3.3 changelog update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-29 15:08:22-05:00,18000,2016-04-29 15:08:22-05:00,18000,True,False,['CHANGELOG.rst'],['d163950f30f21b534530bd7bdce7030afb194e98'],0,27,27,1,,,
ef5606e1d1917d27f3ca3d416f9f103f5ce69059,PYTHON-550 adding test for numpy types with null,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-04-29 16:22:52-05:00,18000,2016-04-29 16:22:52-05:00,18000,True,False,"['__init__.py', 'test_cython_protocol_handlers.py']",['ca779bd760e0f7220848eea5112a4bf04d8756d3'],3,86,89,2,1.0,1.0,0.6470588235294118
b0da64181ef33599864f1851876a03ff241a7317,"match_hostname --> check_hostname

make the flag match the name in the std lib SSLContext API

Conflicts:
	tests/integration/long/test_ssl.py",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-04-21 11:16:59-05:00,18000,2016-04-29 16:24:23-05:00,18000,True,False,"['cluster.py', 'connection.py', 'test_ssl.py']",['ef5606e1d1917d27f3ca3d416f9f103f5ce69059'],10,10,20,3,,,
cc48fd48297bb2bda939244e52b071c984d89b08,docs for new exception types,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-02 11:39:17-05:00,18000,2016-05-02 11:39:17-05:00,18000,True,False,"['__init__.py', 'cassandra.rst']",['b0da64181ef33599864f1851876a03ff241a7317'],0,27,27,2,,,
fa76e1f5e058a6f6b7b483124375a9f94c9e2a38,"while repreparing, don't fail on first error

also fixes iteration through responses for debug logging",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-02 14:43:04-05:00,18000,2016-05-02 14:43:04-05:00,18000,True,False,['cluster.py'],['5a554983587eb0bc1d721820421a348c087cc594'],4,3,7,1,1.0,1.0,0.0
3f67318f4681075ba9a5041f46f00727ea03c71c,3.3 version and date,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-02 15:52:07-05:00,18000,2016-05-02 15:52:07-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['cc48fd48297bb2bda939244e52b071c984d89b08'],1,2,3,2,,,
77727ea15574a4f2e2281d849020f1a028c6eb02,post-release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-02 15:57:20-05:00,18000,2016-05-02 15:57:20-05:00,18000,True,False,['__init__.py'],['3f67318f4681075ba9a5041f46f00727ea03c71c'],1,1,2,1,,,
348cdffcdb0c6a2dc3114f5c8a406dc86cd0dd5b,327 is viewed as an improvement,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-02 16:19:13-05:00,18000,2016-05-02 16:19:13-05:00,18000,True,False,['CHANGELOG.rst'],['3a4aa0831d635c294348ab148d0771416e8fa740'],1,1,2,1,,,
f729e4bdc7ba357988b7368233d1dac7aff2921a,"configurable response window for status events

PYTHON-556",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-03 10:50:10-05:00,18000,2016-05-03 10:50:10-05:00,18000,True,False,['cluster.py'],['fa76e1f5e058a6f6b7b483124375a9f94c9e2a38'],2,20,22,1,0.0,0.4,0.0
38ae69aba8aa745a51774c3032ff896775129630,"initial prepare on all hosts of current session

not all hosts on all sessions",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-03 14:11:33-05:00,18000,2016-05-03 14:11:33-05:00,18000,True,False,['cluster.py'],['f729e4bdc7ba357988b7368233d1dac7aff2921a'],4,4,8,1,0.0,0.0,1.0
4bc66d31b0ddebc6150f742e0acbc3534a546d4f,"options controlling prepared statement distribution

PYTHON-556",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-03 14:29:37-05:00,18000,2016-05-03 14:29:37-05:00,18000,True,False,['cluster.py'],['38ae69aba8aa745a51774c3032ff896775129630'],9,31,40,1,0.0,0.2,0.0
dfc2cf96a6c1bea8ab63d045712c5c2599565633,"don't wait for schema agreement when repreparing on up

PYTHON-556",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-03 14:35:45-05:00,18000,2016-05-03 14:35:45-05:00,18000,True,False,['cluster.py'],['4bc66d31b0ddebc6150f742e0acbc3534a546d4f'],5,0,5,1,1.0,1.0,0.0
67683c01640e15f6967720f82352c9ac6e30d845,"add checks making sure in-flight thresholds are within range

PYTHON-220",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-03 16:00:51-05:00,18000,2016-05-03 16:00:51-05:00,18000,True,False,['cluster.py'],['f1b78e1e3a063191ada541f71815ea7c49e89770'],0,8,8,1,1.0,1.0,0.0
f08b77203466394a1d1fb333c0392beeaa3e2dd5,restore unit test deleted in an unrelated branch,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-03 16:01:13-05:00,18000,2016-05-03 16:01:13-05:00,18000,True,False,['test_cluster.py'],['67683c01640e15f6967720f82352c9ac6e30d845'],0,3,3,1,1.0,1.0,1.0
a6ffe62e17fdca2d370c4302ed3fa3ec6e36ec13,update unit tests for new CC init,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-04 09:29:25-05:00,18000,2016-05-04 09:29:25-05:00,18000,True,False,['test_control_connection.py'],['dfc2cf96a6c1bea8ab63d045712c5c2599565633'],4,4,8,1,,,
84c1fa70348b28d1ca6d6cb03b69991d65726709,"test for min/max requests validation

PYTHON-220",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-04 11:38:56-05:00,18000,2016-05-04 11:38:56-05:00,18000,True,False,['test_cluster.py'],['f08b77203466394a1d1fb333c0392beeaa3e2dd5'],4,20,24,1,1.0,1.0,1.0
8b75733cb948ce27dda2aff38ea81156e9e308a7,"Discard discovered hosts with duplicate rpc address

PYTHON-365",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-04 13:13:25-05:00,18000,2016-05-04 13:13:25-05:00,18000,True,False,['cluster.py'],['7499622de1ac21ef6c38f0430e894b3108338e73'],1,5,6,1,0.0,0.0,0.0
4fd7c2917d6997f059ca3d0ac35b4a3a92f521fe,fix botched merge conflict,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-04 13:34:20-05:00,18000,2016-05-04 13:34:20-05:00,18000,True,False,['base.py'],['7499622de1ac21ef6c38f0430e894b3108338e73'],3,3,6,1,,,
48cfcd0034693d9983e0ff50e6d93518923b98e5,"make benchmarks work in py 2.6

PYTHON-434",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-04 13:55:26-05:00,18000,2016-05-04 13:55:26-05:00,18000,True,False,['base.py'],['4fd7c2917d6997f059ca3d0ac35b4a3a92f521fe'],9,22,31,1,0.0,0.0,1.0
d30da191caa2a3eed8f892327c4af93eb521dcbb,Fix asyncore pipe dispatch for py3,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-04 13:55:47-05:00,18000,2016-05-04 13:55:47-05:00,18000,True,False,['asyncorereactor.py'],['48cfcd0034693d9983e0ff50e6d93518923b98e5'],1,1,2,1,,,
ceddacd30e849f2c2bc2e026eac5192c2a9500ab,"test unicode chars in cql generation

PYTHON-447",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-05 12:34:56-05:00,18000,2016-05-05 12:34:56-05:00,18000,True,False,['test_metadata.py'],['7499622de1ac21ef6c38f0430e894b3108338e73'],1,66,67,1,1.0,1.0,1.0
6aa4ec5ff8253454405010af399ef999e03c5437,"encode unicode for server error messages

fixes ""'ascii' codec can't encode character u'...' in position ...: ordinal not in range(128)""
when printing exception in python2 (and in cqlsh)",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-05 12:35:47-05:00,18000,2016-05-05 12:35:47-05:00,18000,True,False,['protocol.py'],['ceddacd30e849f2c2bc2e026eac5192c2a9500ab'],0,2,2,1,1.0,1.0,1.0
0959b5dc1662d6957f2951738d0a4f053ac78f66,"remove encoding that was causing problems in cql generation

PYTHON-447",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-05 13:18:08-05:00,18000,2016-05-05 13:18:08-05:00,18000,True,False,['metadata.py'],['6aa4ec5ff8253454405010af399ef999e03c5437'],8,3,11,1,0.0,0.0,0.0
c4c8896b169203783d83b4bfd74b7f983594981f,remove costly test that was only there to demo another test deficiency,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-06 14:03:16-05:00,18000,2016-05-06 14:03:16-05:00,18000,True,False,['test_query.py'],['642886950f7c09f9b315ad3c815fe7dbc316e561'],5,0,5,1,0.0,0.0,0.0
76cc8c0f2e200a63f995c58f43e8fc9445e9a644,"raise if batch becomes too large

PYTHON-151",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-06 14:24:37-05:00,18000,2016-05-06 14:24:37-05:00,18000,True,False,['query.py'],['c4c8896b169203783d83b4bfd74b7f983594981f'],6,9,15,1,1.0,1.0,0.0
e046492799ddb136b3f04ee74de7e2ac4da86b3d,fix BatchStatement.add_all to pass individual params instead of the whole list,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-06 14:25:17-05:00,18000,2016-05-06 14:25:17-05:00,18000,True,False,['query.py'],['76cc8c0f2e200a63f995c58f43e8fc9445e9a644'],3,3,6,1,,,
e97e6f3906b8bcbdfe70be040b6aeb7c5e3347fa,"test batch statement with too many queries

PYTHON-151",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-06 14:25:52-05:00,18000,2016-05-06 14:25:52-05:00,18000,True,False,['test_query.py'],['e046492799ddb136b3f04ee74de7e2ac4da86b3d'],0,16,16,1,1.0,1.0,1.0
4cd4e987f40e3c2b264a0e94ce7f7d5e6aed9a58,BatchStatement.clear + unit test,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-06 15:37:09-05:00,18000,2016-05-06 15:37:09-05:00,18000,True,False,"['query.py', 'test_query.py']",['e97e6f3906b8bcbdfe70be040b6aeb7c5e3347fa'],0,72,72,2,0.45161290322580644,1.0,1.0
67cc5ae1f0bdad9fc0d5e609c96cb218212d3158,unit test BatchStatement.add_all,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-06 15:41:42-05:00,18000,2016-05-06 15:41:42-05:00,18000,True,False,['test_query.py'],['4cd4e987f40e3c2b264a0e94ce7f7d5e6aed9a58'],0,9,9,1,1.0,1.0,1.0
cce8590598644116b62e57dd5c383ac762d2a54d,"context managers for Cluster and Session

PYTHON-521",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-06 16:27:05-05:00,18000,2016-05-06 16:27:05-05:00,18000,True,False,['cluster.py'],['642886950f7c09f9b315ad3c815fe7dbc316e561'],0,12,12,1,1.0,1.0,1.0
66969c2826b486c4e4622568994eb951320dbcd3,"Integration tests for Cluster and Session ctx managers

PYTHON-521",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-06 16:27:20-05:00,18000,2016-05-06 16:27:20-05:00,18000,True,False,['test_cluster.py'],['cce8590598644116b62e57dd5c383ac762d2a54d'],0,47,47,1,0.5555555555555556,1.0,1.0
270108ee7dd17be383ef30e55f7c4979a324e926,"return namedtuple from execute_concurrent

PYTHON-362",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-09 12:13:08-05:00,18000,2016-05-09 12:13:08-05:00,18000,True,False,['concurrent.py'],['642886950f7c09f9b315ad3c815fe7dbc316e561'],2,6,8,1,,,
8bdc0148134bb7aa9f88fdeb91d22e5615c26d4e,less confusing range in error message,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-09 13:01:18-05:00,18000,2016-05-09 13:01:18-05:00,18000,True,False,['cluster.py'],['9b6340dc3e92236dc22ae3bba4aad16e462f823a'],5,3,8,1,,,
fb444ee35a1b43cbaf35821f6593f21aa1c77a9d,"explicit init kwargs for concrete statement classes

PYTHON-219",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-09 14:03:17-05:00,18000,2016-05-09 14:03:17-05:00,18000,True,False,['query.py'],['8bdc0148134bb7aa9f88fdeb91d22e5615c26d4e'],6,12,18,1,1.0,1.0,0.0
ccb2e6b1533bbed4901475e85f1bb72f766185a9,"reorg cassandra.query doc

Hoping to avoid confusion on statement initializers by removing the signature
and dropping the position of the abstract class.

PYTHON-219",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-09 14:04:00-05:00,18000,2016-05-09 14:04:00-05:00,18000,True,False,['query.rst'],['fb444ee35a1b43cbaf35821f6593f21aa1c77a9d'],3,3,6,1,,,
88b013daac765cec04626cc3d5fdad804fd0b19b,"basic check to detect improper statement positional parameters

PYTHON-219",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-09 14:31:26-05:00,18000,2016-05-09 14:31:26-05:00,18000,True,False,['query.py'],['ccb2e6b1533bbed4901475e85f1bb72f766185a9'],0,2,2,1,0.0,0.0,0.0
3a26efc2514bedc4e2f8925b413699081fc28375,add Time.time conversion function,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-11 12:23:45-05:00,18000,2016-05-11 12:23:45-05:00,18000,True,False,"['util.py', 'test_util_types.py']",['8bdc0148134bb7aa9f88fdeb91d22e5615c26d4e'],0,12,12,2,1.0,1.0,1.0
f67d18a5ef310c64510e0cc7dca14c1be7cf6f33,"date and time doc page

PYTHON-394",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-11 12:26:19-05:00,18000,2016-05-11 12:26:19-05:00,18000,True,False,"['dates_and_times.rst', 'index.rst']",['3a26efc2514bedc4e2f8925b413699081fc28375'],0,91,91,2,,,
fb25b15a5bc4c8cb6a021bbe732126a8b6e1a98d,"Updates to queryset docs

* Cannot filter by primary_key only (in example, created 'id' and set as a 'partition_key')
* Updated import from 'cqlengine' to 'columns' and 'functions'",Will Liu,will.liu@tivix.com,Will Liu,will.liu@tivix.com,2016-05-11 14:40:07-04:00,14400,2016-05-11 14:40:07-04:00,14400,True,False,['queryset.rst'],['6c090d4b8eab6fdfe6b977abc9499795d202de53'],5,6,11,1,,,
b5845ec4e9ff6302c4797a8241016d96c3d61d2a,"populate dse version and workload on host, when available

PYTHON-555",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-11 14:37:19-05:00,18000,2016-05-11 14:37:19-05:00,18000,True,False,"['cluster.py', 'pool.py']",['8bdc0148134bb7aa9f88fdeb91d22e5615c26d4e'],0,16,16,2,0.0,0.0,0.0
982f1469ad573612574c7a5d893f7ad94ac519e7,"Avoid node refresh for known, up hosts.

PYTHON-557",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-11 15:32:50-05:00,18000,2016-05-11 15:46:55-05:00,18000,True,False,['cluster.py'],['8bdc0148134bb7aa9f88fdeb91d22e5615c26d4e'],1,10,11,1,1.0,1.0,1.0
af3c346b335989530bbd7382f8064a31d24b32fc,"update unit tests for new conditional refresh

PYTHON-557",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-11 15:46:17-05:00,18000,2016-05-11 15:46:55-05:00,18000,True,False,['test_control_connection.py'],['982f1469ad573612574c7a5d893f7ad94ac519e7'],3,3,6,1,,,
869e1ab616c9771ba6af9d171a908675309aebd1,PYTHON-362 tweaking existing test to validate that generated results are of the type ExecutionResult,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-05-13 13:27:02-05:00,18000,2016-05-13 13:27:02-05:00,18000,True,False,['test_concurrent.py'],['70b11bba9797ced2fa036c915eec900aec1a5756'],1,8,9,1,0.0,0.0,1.0
86172dd5798b74149a0fbda00a98b32587f29e17,"fix lbp tests following host state management change 01a3825

also fix logging in util and remove unused parameter",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-13 14:57:32-05:00,18000,2016-05-13 14:57:32-05:00,18000,True,False,"['test_consistency.py', 'test_loadbalancingpolicies.py', 'utils.py']",['869e1ab616c9771ba6af9d171a908675309aebd1'],106,80,186,3,1.0,0.0,0.8823529411764706
d39665f5cec4c8ca86fa8546eb6f96d68c838f07,"normalize BytesToken values to binary type

fixes UnicodeDecodeError when one value has non-ascii values

PYTHON-559",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-12 15:48:25-05:00,18000,2016-05-13 15:05:04-05:00,18000,True,False,['metadata.py'],['869e1ab616c9771ba6af9d171a908675309aebd1'],4,2,6,1,0.0,0.0,0.0
db6346e9bd7ece980257a0f37e895b2ea0faaef3,pass unit test on new BytesToken init; still need to expand tests,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-12 16:41:29-05:00,18000,2016-05-13 15:05:04-05:00,18000,True,False,['test_metadata.py'],['d39665f5cec4c8ca86fa8546eb6f96d68c838f07'],6,0,6,1,0.0,0.0,0.0
33ae06d0eeb799f9d0b070740fae4c2878e1a159,Correct BytesToken metadata parsing.,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-13 09:54:33-05:00,18000,2016-05-13 15:05:04-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['db6346e9bd7ece980257a0f37e895b2ea0faaef3'],16,32,48,2,1.0,1.0,1.0
10c1247847595abb30588b055ea54c61248d0417,"more complete unit tests for BytesToken

PYTHON-559",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-13 15:50:14-05:00,18000,2016-05-13 15:50:14-05:00,18000,True,False,['test_metadata.py'],['33ae06d0eeb799f9d0b070740fae4c2878e1a159'],2,25,27,1,1.0,1.0,1.0
4a262d5fc777fb361592144fa421a2eb544d5ac1,"allow connecting to previously ignored hosts

required after removing setting eager up for ignored hosts in PYTHON-531",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-16 10:51:14-05:00,18000,2016-05-16 10:51:14-05:00,18000,True,False,['cluster.py'],['86172dd5798b74149a0fbda00a98b32587f29e17'],2,4,6,1,,,
e4e9461e622046ae9a1cd3fad65845e238535f37,remove leftover debug print statements,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-16 11:24:49-05:00,18000,2016-05-16 11:24:49-05:00,18000,True,False,['test_metadata.py'],['10c1247847595abb30588b055ea54c61248d0417'],10,10,20,1,,,
7e809e14e33998863ff057cc86c9dc65a0206043,"make BytesToken parsing work with pypy3

PYTHON-559",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-16 11:27:28-05:00,18000,2016-05-16 11:27:28-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['e4e9461e622046ae9a1cd3fad65845e238535f37'],1,4,5,2,1.0,1.0,1.0
7dd12f0756ebb97b23283aa3eb8d3a4100668f36,python 2.6 format strings in benchmark scripts,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-16 12:09:20-05:00,18000,2016-05-16 12:09:20-05:00,18000,True,False,"['callback_full_pipeline.py', 'future_batches.py', 'future_full_throttle.py']",['869e1ab616c9771ba6af9d171a908675309aebd1'],3,3,6,3,,,
6e2e220728e40e5026df4878ef02f89ce1f86fb4,getsockopt for asyncore pipewrapper,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-16 12:09:58-05:00,18000,2016-05-16 12:09:58-05:00,18000,True,False,['asyncorereactor.py'],['7dd12f0756ebb97b23283aa3eb8d3a4100668f36'],0,6,6,1,1.0,1.0,0.0
417ba3be1e292e0abe8193826ede09f88d4014b1,PYTHON-365 adding test case,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-05-16 13:04:15-05:00,18000,2016-05-16 13:04:15-05:00,18000,True,False,['test_cluster.py'],['6e2e220728e40e5026df4878ef02f89ce1f86fb4'],1,38,39,1,1.0,1.0,1.0
3d72ca0e6ee1d32b7b35867d808cd07ac3bc488b,PYTHON-521 adding tests documentation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-05-16 15:00:04-05:00,18000,2016-05-16 15:00:04-05:00,18000,True,False,['test_cluster.py'],['417ba3be1e292e0abe8193826ede09f88d4014b1'],0,37,37,1,,,
7f7f798a03e3a8b8f67487133fef0040807b0dad,remove extra lines following refactor,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-17 16:39:31-05:00,18000,2016-05-17 16:39:31-05:00,18000,True,False,['metadata.py'],['e1efa70e951dd84532e78f0c9b32dc35261cbcbf'],3,0,3,1,0.0,0.0,0.0
e21b89b63fdd0163485686c202c60ce3c192e116,PYTHON-555 adding test for dse specific metadata,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-05-18 11:24:57-05:00,18000,2016-05-18 11:24:57-05:00,18000,True,False,"['__init__.py', 'test_metadata.py']",['fd7b4e81d5b89a69ad63e88c62a1c601b762724e'],3,21,24,2,1.0,1.0,1.0
1a9ca7c5f7eed7bda565e2d5d98b576b81b2d78d,PYTHON-556 Adding basic test for prepare_on_all_hosts,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-05-12 17:05:37-05:00,18000,2016-05-19 11:17:13-05:00,18000,True,False,"['__init__.py', 'test_cluster.py', 'test_query.py']",['e21b89b63fdd0163485686c202c60ce3c192e116'],5,55,60,3,1.0,1.0,0.4375
b77e2e78cc8bae94d1e6bf211e76b7afec164957,Resolve hosts in WhiteListRoundRobinPolicy,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-05-19 14:37:41-04:00,14400,2016-05-19 14:37:41-04:00,14400,True,False,['policies.py'],['e21b89b63fdd0163485686c202c60ce3c192e116'],4,9,13,1,1.0,1.0,1.0
546812e28c10c33e2db445b9f85e1cdce5f29534,not all types support null in C* 2.0,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-05-19 14:57:39-05:00,18000,2016-05-19 14:57:39-05:00,18000,True,False,['test_cython_protocol_handlers.py'],['1a9ca7c5f7eed7bda565e2d5d98b576b81b2d78d'],2,3,5,1,,,
92dad99f33bf6be5f186e30490347505ea0b1f66,add WhiteListRoundRobinPolicyTest.test_hosts_with_hostname,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-05-19 16:00:37-04:00,14400,2016-05-19 16:00:37-04:00,14400,True,False,['test_policies.py'],['b77e2e78cc8bae94d1e6bf211e76b7afec164957'],1,15,16,1,1.0,1.0,1.0
8fcf93dc8ff79fa5b053fa4f68a9ccc6a115af62,Stabilizing LBP tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-05-19 19:55:43-05:00,18000,2016-05-19 19:55:43-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['2faf2f72609d4f48f85f6cd45b046b354fdb31c1'],25,28,53,1,1.0,1.0,0.0
b3dfbce58b16fb0a6cfa8ab2e9e8d3b65298683e,3.4 changelog update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-20 08:24:05-05:00,18000,2016-05-20 08:24:05-05:00,18000,True,False,['CHANGELOG.rst'],['8fcf93dc8ff79fa5b053fa4f68a9ccc6a115af62'],0,29,29,1,,,
1afa1f4b2f29fafa99b7f5e551b717278df5515f,"weakref.ref does not support keyword args in python 2.7.12+

With thanks to Jan Urbański in #585 for the heads up.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-23 09:16:07-05:00,18000,2016-05-23 09:16:07-05:00,18000,True,False,['cluster.py'],['b3dfbce58b16fb0a6cfa8ab2e9e8d3b65298683e'],1,1,2,1,,,
feab7e70590f897c634587ff472bab09456f31b2,3.4 release ver and final changelog,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-23 16:14:46-05:00,18000,2016-05-23 16:14:46-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['1afa1f4b2f29fafa99b7f5e551b717278df5515f'],1,3,4,2,,,
efa9a5410214b078725fd4b87d14be5882654215,post-release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-23 16:21:24-05:00,18000,2016-05-23 16:21:24-05:00,18000,True,False,['__init__.py'],['feab7e70590f897c634587ff472bab09456f31b2'],1,1,2,1,,,
acae4c7cbd83b431d2b79c96585b17c938704ae6,additional doc tweaks for new 3.4 features,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-24 13:11:49-05:00,18000,2016-05-24 13:11:49-05:00,18000,True,False,"['cluster.py', 'concurrent.py']",['efa9a5410214b078725fd4b87d14be5882654215'],2,4,6,2,,,
fe8a842e2a82f0768f2e8cfae85e929a393a7821,"Don't modify the Metadatas' hosts structure while iterating over it

On Python 3.x, dict.values() returns a view object and not a list of the
values.
Updating the content of the original dict while iterating over the
values may raise a RuntimeError exception, which is the case in the
Cluster._refresh_node_list_and_token_map() method to remove discovered
hosts which are not part of the specified cluster contact points.

The bug doesn't happen using Python 2.x as dict.values() returns a new
list containing the values of the dictionary, without any other
reference to original dictionary object.

This fix forces the original Python 2.x behavior to be the same in
Python 3.x as well.

PYTHON-572",Jonathan Ballet,jballet@edgelab.ch,Jonathan Ballet,jballet@edgelab.ch,2016-05-26 11:40:57+02:00,-7200,2016-05-26 11:49:14+02:00,-7200,True,False,"['metadata.py', 'test_metadata.py']",['acae4c7cbd83b431d2b79c96585b17c938704ae6'],2,18,20,2,1.0,1.0,1.0
04a9020faf0f16ef892cfccac9f52972284c2633,"match Cluster doc order to code, add missing attributes",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-26 09:37:02-05:00,18000,2016-05-26 09:37:02-05:00,18000,True,False,['cluster.rst'],['acae4c7cbd83b431d2b79c96585b17c938704ae6'],6,10,16,1,,,
1a6e7aadcd513dde58449f9403d1d8d05d40a119,Remove duplicate docstring and add missing Cluster args,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-26 09:44:06-05:00,18000,2016-05-26 09:44:06-05:00,18000,True,False,"['cluster.py', 'cluster.rst']",['04a9020faf0f16ef892cfccac9f52972284c2633'],3,7,10,2,,,
897474471fe5222f3e698b4ffad9c1f5836e5688,"gevent: don't confound socket timeout with zero read

PYTHON-573",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-26 12:15:52-05:00,18000,2016-05-26 12:15:52-05:00,18000,True,False,['geventreactor.py'],['acae4c7cbd83b431d2b79c96585b17c938704ae6'],0,1,1,1,0.0,1.0,1.0
40e7e63a980b1ec3c2014ba0dbe55a283e015d47,test note and normalize asserts,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-26 12:28:28-05:00,18000,2016-05-26 12:28:28-05:00,18000,True,False,['test_metadata.py'],['fe8a842e2a82f0768f2e8cfae85e929a393a7821'],3,6,9,1,,,
01a611a7534fc6ac5f971ca83bbed01db115737a,3.4.1 changelog and version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-26 13:53:13-05:00,18000,2016-05-26 13:53:13-05:00,18000,True,False,"['CHANGELOG.rst', '__init__.py']",['37698a294ce9e024f930c46cdc8c6cf617f29943'],1,10,11,2,,,
6700d3ad507ba95747aae78e778dbf47a0c877e5,post release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-26 14:37:12-05:00,18000,2016-05-26 14:37:12-05:00,18000,True,False,['__init__.py'],['01a611a7534fc6ac5f971ca83bbed01db115737a'],1,1,2,1,,,
124d197a77c0b62749775f3e477c93a79ec23bec,Avoid LWTExceptions when updating columns that are part of the condition,Eli Green,eli@zigr.org,Eli Green,eli@zigr.org,2016-06-02 16:47:11+02:00,-7200,2016-06-02 16:47:11+02:00,-7200,True,False,"['query.py', 'test_lwt_conditional.py']",['6700d3ad507ba95747aae78e778dbf47a0c877e5'],1,28,29,2,0.5294117647058824,0.5294117647058824,1.0
86d4f180abc80dc5fc13650cb7a3c2f6dfb073ab,Fix cqlengine only() function when there are defered fields,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-06-02 17:35:02-04:00,14400,2016-06-02 17:35:02-04:00,14400,True,False,"['query.py', 'test_queryset.py']",['6700d3ad507ba95747aae78e778dbf47a0c877e5'],6,37,43,2,1.0,1.0,1.0
49aa66f17064a7a9e8403a31418350c2355a03ba,Raise QueryException when there is no fields to select,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-06-03 08:44:10-04:00,14400,2016-06-03 08:44:10-04:00,14400,True,False,"['query.py', 'test_queryset.py']",['86d4f180abc80dc5fc13650cb7a3c2f6dfb073ab'],0,23,23,2,0.0,0.7272727272727273,1.0
89cd1b18162f4bcc153329d0bbc05b5fded46687,Add only and defer methods in cqlengine docs,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-06-03 08:55:16-04:00,14400,2016-06-03 14:28:47-04:00,14400,True,False,"['query.rst', 'test_queryset.py']",['49aa66f17064a7a9e8403a31418350c2355a03ba'],2,6,8,2,,,
087e2cca6372f151537a85ce0d87b8f779e99035,basic execution config profile definition,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-16 15:35:49-05:00,18000,2016-06-03 14:47:19-05:00,18000,True,False,['cluster.py'],['e1af114b26f57e0468e4f00656b989d6fdec824e'],0,63,63,1,0.8974358974358975,0.8974358974358975,0.46153846153846156
192dd3d44e5d57869d87b32fee0d5a66ab0e4aca,make request execution use config profiles,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-17 16:09:02-05:00,18000,2016-06-03 14:47:19-05:00,18000,True,False,['cluster.py'],['087e2cca6372f151537a85ce0d87b8f779e99035'],36,78,114,1,0.4444444444444444,0.5555555555555556,0.25925925925925924
0fed8e2eb7d44f82ccae8658b01505356d2a115f,quick change to define the default profile key,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-24 15:05:21-05:00,18000,2016-06-03 14:47:19-05:00,18000,True,False,['cluster.py'],['192dd3d44e5d57869d87b32fee0d5a66ab0e4aca'],1,3,4,1,,,
3462850230d2135802996421602e5f024883fccd,EXEC_PROFILE_DEFAULT as an object,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-25 11:38:43-05:00,18000,2016-06-03 14:47:19-05:00,18000,True,False,['cluster.py'],['0fed8e2eb7d44f82ccae8658b01505356d2a115f'],11,12,23,1,,,
842a4cb30112b92344c150855fee03ff95219de5,Fix ResponseFuture test to work with conf profiles,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-25 12:42:12-05:00,18000,2016-06-03 14:47:19-05:00,18000,True,False,['test_response_future.py'],['3462850230d2135802996421602e5f024883fccd'],9,10,19,1,,,
af59c56bce566d3f4d556b2b749fdc9195ef21d9,"disallow concurrent use of legacy config and profiles

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-05-31 16:01:59-05:00,18000,2016-06-03 14:47:19-05:00,18000,True,False,"['cluster.py', 'cluster.rst', 'test_cluster.py']",['842a4cb30112b92344c150855fee03ff95219de5'],69,142,211,3,0.6444444444444445,0.6444444444444445,0.5333333333333333
eaadf0db4467364fcc7abf2f09b0d8126c00bbe1,"simplify RR policy, avoid errors with unpopulated instance",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-01 11:54:14-05:00,18000,2016-06-03 14:47:19-05:00,18000,True,False,['policies.py'],['af59c56bce566d3f4d556b2b749fdc9195ef21d9'],3,2,5,1,0.0,0.0,1.0
a9d2228a420af810a9c6c13fe3376c470aa2e0e9,"Make the base ExecutionProfile ingest default values

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-01 14:52:26-05:00,18000,2016-06-03 14:47:20-05:00,18000,True,False,['cluster.py'],['eaadf0db4467364fcc7abf2f09b0d8126c00bbe1'],15,5,20,1,0.0,0.0,0.0
f647ee7b05f942cd120fca9b95d561c7a22dd235,"make add_execution_profile validate config mode

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-01 14:53:03-05:00,18000,2016-06-03 14:47:20-05:00,18000,True,False,['cluster.py'],['a9d2228a420af810a9c6c13fe3376c470aa2e0e9'],3,2,5,1,,,
faedc692c90b445dba1022046caf33e7dde228b8,"reject execution_profile if we're in legacy mode

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-01 15:17:40-05:00,18000,2016-06-03 14:47:20-05:00,18000,True,False,['cluster.py'],['f647ee7b05f942cd120fca9b95d561c7a22dd235'],0,3,3,1,0.0,0.0,0.0
5d68f8f4db07bf9199e66211045a6fa8c553cf12,"unit tests for config profile and legacy interaction

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-01 15:47:55-05:00,18000,2016-06-03 14:47:20-05:00,18000,True,False,['test_cluster.py'],['faedc692c90b445dba1022046caf33e7dde228b8'],8,157,165,1,0.5495495495495496,1.0,0.9369369369369369
21309fa00c335fc083929a4319649b42a6d054b4,"guard Cluster.lbp in the same way as other legacy params

It would not have worked naturally to set this after init pools would
not be updated implicitly, but there would be ways of actually doing it.

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-01 15:57:32-05:00,18000,2016-06-03 14:47:20-05:00,18000,True,False,['cluster.py'],['5d68f8f4db07bf9199e66211045a6fa8c553cf12'],12,22,34,1,1.0,1.0,1.0
599cacc5322e2b4681d90022c57096601200a24e,"simplify cluster unit tests and cover more execution path

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-01 16:13:31-05:00,18000,2016-06-03 14:47:20-05:00,18000,True,False,['test_cluster.py'],['21309fa00c335fc083929a4319649b42a6d054b4'],14,12,26,1,,,
3961f2a9b194d54f99be242bf276b3a84b5863ed,"test legacy lbp rejection

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-01 16:17:13-05:00,18000,2016-06-03 14:47:20-05:00,18000,True,False,['test_cluster.py'],['599cacc5322e2b4681d90022c57096601200a24e'],6,5,11,1,1.0,1.0,1.0
33b3cda49118ca42afc6f0ae4c9046181b5d0f08,"make internal signalling use profile_mgr for host distance

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-02 13:02:08-05:00,18000,2016-06-03 14:47:20-05:00,18000,True,False,['cluster.py'],['3961f2a9b194d54f99be242bf276b3a84b5863ed'],17,26,43,1,1.0,1.0,1.0
0138eacdac6de4f26fac5caae2f9c830ac59fdc8,bubble up futures in Session.update_created_pools,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-02 14:05:39-05:00,18000,2016-06-03 14:47:20-05:00,18000,True,False,['cluster.py'],['33b3cda49118ca42afc6f0ae4c9046181b5d0f08'],2,7,9,1,0.0,0.0,1.0
15c8236fef22644061b71fc87bc9f826fdedbdaa,"make add_execution_profile synchronous with pool creation

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-02 14:06:13-05:00,18000,2016-06-03 14:47:20-05:00,18000,True,False,['cluster.py'],['0138eacdac6de4f26fac5caae2f9c830ac59fdc8'],3,8,11,1,1.0,1.0,0.0
234f84ae05189256f423c9be447940bbf06c4607,"basic config profile integration tests

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-02 14:06:59-05:00,18000,2016-06-03 14:47:20-05:00,18000,True,False,['test_cluster.py'],['15c8236fef22644061b71fc87bc9f826fdedbdaa'],2,73,75,1,0.39622641509433965,0.39622641509433965,1.0
4102026a306ccd49c66a7bb8e1e7b93fc0b8a202,"revise unit tests following cluster refactor

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-02 15:08:29-05:00,18000,2016-06-03 14:47:21-05:00,18000,True,False,"['test_control_connection.py', 'test_response_future.py']",['234f84ae05189256f423c9be447940bbf06c4607'],7,8,15,2,1.0,1.0,1.0
4a37da29885a964316754ba47267932b5f515f59,"execution profile docs

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-03 11:25:35-05:00,18000,2016-06-03 14:47:21-05:00,18000,True,False,"['cluster.py', 'cluster.rst', 'execution_profiles.rst', 'index.rst']",['4102026a306ccd49c66a7bb8e1e7b93fc0b8a202'],8,235,243,4,,,
915919e065a34826ed694e7ddb93f3a936d53f13,Typo.,Kevin Deldycke,kevin@deldycke.com,Kevin Deldycke,kevin@deldycke.com,2016-06-07 08:26:20+02:00,-7200,2016-06-07 08:26:20+02:00,-7200,True,False,['CHANGELOG.rst'],['e1af114b26f57e0468e4f00656b989d6fdec824e'],1,1,2,1,,,
9ea856459dc900b9517d9ecbb94b65e4e4ce8de7,Initial Appveryor enablement,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-03-09 16:54:32-06:00,21600,2016-06-07 09:32:46-05:00,18000,True,False,"['appveyor.yml', 'appveyor.ps1', 'run_test.ps1', 'test_concurrent.py']",['467a5c65ba68b0edf5fb4195360729e8d8a08525'],4,132,136,4,1.0,1.0,0.0
17fbbefa9100b50eb4675992c12f7a26a470078e,"Adding test documention, tweaking tests for PYTHON-560",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-06-07 13:48:26-05:00,18000,2016-06-07 13:48:26-05:00,18000,True,False,['test_queryset.py'],['4a722a34c3d5eb91f779a1862389b797ba95e57b'],3,24,27,1,0.0,1.0,1.0
9128e16996ddffabf65ba1e6f9b169b8acfac3af,Add API to get the host metadata associated with the control connection node,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-06-09 10:12:13-04:00,14400,2016-06-09 10:20:21-04:00,14400,True,False,"['cluster.py', 'cluster.rst', 'test_control_connection.py']",['6700d3ad507ba95747aae78e778dbf47a0c877e5'],1,26,27,3,1.0,1.0,1.0
d5379e7044a7629efb8483f64ec1c17f3d26e272,"refactor Session exec profile retrieval

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-09 11:49:06-05:00,18000,2016-06-09 11:49:06-05:00,18000,True,False,['cluster.py'],['4a37da29885a964316754ba47267932b5f515f59'],11,14,25,1,1.0,1.0,1.0
2469be41e3c9c809d6040164c02f2a4535a5dd43,"add a way to clone/update a profile

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-09 13:07:10-05:00,18000,2016-06-09 13:07:10-05:00,18000,True,False,"['cluster.py', 'cluster.rst']",['d5379e7044a7629efb8483f64ec1c17f3d26e272'],0,18,18,2,1.0,1.0,0.0
1164984d67e68158f2aedf44bed93b40313e77ac,"Cluster.add_execution_profile will not accept duplicate profile keys

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-09 13:29:50-05:00,18000,2016-06-09 13:29:50-05:00,18000,True,False,"['cluster.py', 'test_cluster.py']",['2469be41e3c9c809d6040164c02f2a4535a5dd43'],2,21,23,2,1.0,0.0,0.75
3c8073f1e9adee976b47b8e877b4661f4a3a1da9,"unit test for Session.execution_profile_clone_update

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-09 13:55:05-05:00,18000,2016-06-09 13:55:05-05:00,18000,True,False,['test_cluster.py'],['1164984d67e68158f2aedf44bed93b40313e77ac'],0,29,29,1,0.0,1.0,1.0
e75f44ee7c1c42284c07573ccc5c0cb67b74d5a0,doc updates from peer input,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-09 14:06:15-05:00,18000,2016-06-09 14:06:15-05:00,18000,True,False,['execution_profiles.rst'],['3c8073f1e9adee976b47b8e877b4661f4a3a1da9'],3,3,6,1,,,
a4199dcb786b5c9328407e96657850d45f036078,"update EP docs following API tweaks

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-09 14:13:19-05:00,18000,2016-06-09 14:13:19-05:00,18000,True,False,['execution_profiles.rst'],['e75f44ee7c1c42284c07573ccc5c0cb67b74d5a0'],12,5,17,1,,,
7c9a4e08c84053412148b2f1ebcd0fc6d3eb44ee,Decouple workload and start logic,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-06-09 15:22:10-05:00,18000,2016-06-09 15:22:10-05:00,18000,True,False,['__init__.py'],['17fbbefa9100b50eb4675992c12f7a26a470078e'],4,3,7,1,,,
d6b7ddfdd0c8d27639c0652cc11485650068febf,Fix _connection attribute access,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-06-09 17:35:59-04:00,14400,2016-06-09 17:35:59-04:00,14400,True,False,['cluster.py'],['9128e16996ddffabf65ba1e6f9b169b8acfac3af'],2,2,4,1,,,
89e2200281d4326a972360c60959ddc87e699441,"PYTHON-569 adding test documentation, and few more tests",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-06-10 16:44:22-05:00,18000,2016-06-10 16:44:22-05:00,18000,True,False,"['cluster.py', 'test_consistency.py', 'test_cluster.py']",['f2df34076a70c9192e0bfa881f99db1b1525e6b2'],3,112,115,3,1.0,1.0,1.0
2796ee5ec7dd8f62705f2d06e5e753a40346f819,"PYTHON-583 Adding documentation, enhancing integration test",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-06-10 18:12:20-05:00,18000,2016-06-10 18:12:20-05:00,18000,True,False,['test_control_connection.py'],['89e2200281d4326a972360c60959ddc87e699441'],0,12,12,1,1.0,1.0,1.0
0e5e9eddb82974d85b1eaa0fbc007ffc165692e8,"Make C.add_exec..policy on_up hosts

Fixes issues like DCA LBP not selecting a default local_dc

PYTHON-569",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-15 09:49:36-05:00,18000,2016-06-15 09:49:36-05:00,18000,True,False,['cluster.py'],['2796ee5ec7dd8f62705f2d06e5e753a40346f819'],7,7,14,1,0.0,0.0,0.0
03ca2f5aae45802264e82c675b881d60f1269407,PYTHON-569 adding test for TA LBP with execution profiles,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-06-15 12:46:25-05:00,18000,2016-06-15 12:46:25-05:00,18000,True,False,['test_cluster.py'],['0e5e9eddb82974d85b1eaa0fbc007ffc165692e8'],0,17,17,1,1.0,1.0,1.0
0a006083e881aee95999d0c8c8a731132895983f,Fix asyncore re-initialization in case of a fork,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-06-14 19:13:26-04:00,14400,2016-06-16 12:09:23-04:00,14400,True,False,['asyncorereactor.py'],['6700d3ad507ba95747aae78e778dbf47a0c877e5'],0,2,2,1,1.0,1.0,1.0
e0f2fb11d1a715300a4c05cf936c53368dd17200,Excluding cython null test for C* 2.1,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-06-16 13:28:00-05:00,18000,2016-06-16 13:28:00-05:00,18000,True,False,['test_cython_protocol_handlers.py'],['8228abc0835690bccb362df97720785aa63b9d4c'],2,2,4,1,,,
38e85b34ba97e35a3dac8c61840fe1f82ab19599,typo,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-16 15:42:09-05:00,18000,2016-06-16 15:42:51-05:00,18000,True,False,['cluster.py'],['e0f2fb11d1a715300a4c05cf936c53368dd17200'],1,1,2,1,,,
215ab4286a27257b5f3a09de6dbfffff4c0e5e72,Updating build yaml for C* 3.7,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-06-16 17:39:31-05:00,18000,2016-06-16 17:39:31-05:00,18000,True,False,['build.yaml'],['38e85b34ba97e35a3dac8c61840fe1f82ab19599'],1,1,2,1,,,
0c881641d243982c79c0ff23b0cfece76d263768,readme update,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-17 13:42:51-05:00,18000,2016-06-17 13:43:10-05:00,18000,True,False,['README.rst'],['215ab4286a27257b5f3a09de6dbfffff4c0e5e72'],4,0,4,1,,,
1ab4b7865b5dc2921ce8389313904105b1ebb515,"fixed typo in CONTRIBUTING.rst

Drvier to Driver",sjohnson4590,sjohnson4590@gmail.com,GitHub,noreply@github.com,2016-06-17 14:10:07-05:00,18000,2016-06-17 14:10:07-05:00,18000,True,False,['CONTRIBUTING.rst'],['0c881641d243982c79c0ff23b0cfece76d263768'],1,1,2,1,,,
46024dab44075c4438077f6e8b29060bae19edaf,3.5.0 changelog and version,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-06-17 17:50:01-04:00,14400,2016-06-17 17:50:01-04:00,14400,True,False,"['CHANGELOG.rst', '__init__.py']",['cfcdeeb2abb0e56c6c7805bf9ae9f76d4febe72c'],3,19,22,2,,,
079d2a3f2426d01f4bb8a722f8c3e590f7747639,cassandra_init() added **kwargs,Lutz Steinborn,l.steinborn@4c-gmbh.de,Lutz Steinborn,l.steinborn@4c-gmbh.de,2016-06-18 15:57:48+02:00,-7200,2016-06-18 15:57:48+02:00,-7200,True,False,['third_party.rst'],['46024dab44075c4438077f6e8b29060bae19edaf'],2,2,4,1,,,
b48ec060fae50568e0384609f08178c750270fc3,Updating UDT alter test to proper syntax,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-06-20 14:09:28-05:00,18000,2016-06-20 14:09:28-05:00,18000,True,False,['test_udts.py'],['46024dab44075c4438077f6e8b29060bae19edaf'],3,3,6,1,,,
ed13cb3dfd5d247d1f2bdd66645534dd105bc79a,documentor hooks,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-20 15:48:16-05:00,18000,2016-06-20 15:48:44-05:00,18000,True,False,"['docs.yaml', '.nav', 'index.rst']",['b48ec060fae50568e0384609f08178c750270fc3'],7,21,28,3,,,
050555ac979ac3812c9c91572cb20d73066e33c8,ticket title tweak,Adam Holmberg,Adam.Holmberg@datastax.com,GitHub,noreply@github.com,2016-06-21 11:27:25-05:00,18000,2016-06-21 11:27:25-05:00,18000,True,False,['CHANGELOG.rst'],['ed13cb3dfd5d247d1f2bdd66645534dd105bc79a'],1,1,2,1,,,
064e45d077b51914a61990208a41658ed9566012,doc punctuation,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-24 16:21:41-05:00,18000,2016-06-24 16:21:41-05:00,18000,True,False,['execution_profiles.rst'],['cc6331d28fc95488686b688b6af18898472463a3'],1,1,2,1,,,
e4c70e78deb38af3c6271970b8e65d6df0022382,"add CDC to recognized table options

PYTHON-593
CASSANDRA-8844",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-24 16:28:38-05:00,18000,2016-06-24 16:28:38-05:00,18000,True,False,['metadata.py'],['064e45d077b51914a61990208a41658ed9566012'],0,1,1,1,,,
337a341a6ae8a41b2e8915b403d91ccc0423cb7a,changelog update for 593,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-27 09:18:24-05:00,18000,2016-06-27 09:28:26-05:00,18000,True,False,['CHANGELOG.rst'],['3fa4768304165fb9429abf8b341f2221d8149f62'],2,1,3,1,,,
60dfbcd6fdf2faaa444f8f950b5188106df29976,changelog date,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-27 11:43:09-05:00,18000,2016-06-27 11:43:09-05:00,18000,True,False,['CHANGELOG.rst'],['337a341a6ae8a41b2e8915b403d91ccc0423cb7a'],1,1,2,1,,,
91039ef6bda23a657e00b578647c6b758779219f,add 3.5 to docs,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-27 15:20:54-05:00,18000,2016-06-27 15:20:54-05:00,18000,True,False,['docs.yaml'],['60dfbcd6fdf2faaa444f8f950b5188106df29976'],0,3,3,1,,,
f47a61e96eb6f69f2bc87f0c5501780ade6368c5,post-release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-28 13:53:31-05:00,18000,2016-06-28 13:53:31-05:00,18000,True,False,['__init__.py'],['91039ef6bda23a657e00b578647c6b758779219f'],1,1,2,1,,,
2bdbfa0951ca6f3d6c31b9ece5984cb3b1e8aab2,Fix unsupported protocol version error message,Tyler Hobbs,tylerlhobbs@gmail.com,Tyler Hobbs,tylerlhobbs@gmail.com,2016-06-28 16:21:12-05:00,18000,2016-06-28 16:21:12-05:00,18000,True,False,['connection.py'],['f47a61e96eb6f69f2bc87f0c5501780ade6368c5'],2,2,4,1,,,
81c5aef702dfb25296b4841a99c360166b2d0812,"fix unit tests using non-existent mock function

PYTHON-591",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-29 14:44:18-05:00,18000,2016-06-29 14:44:18-05:00,18000,True,False,"['test_host_connection_pool.py', 'test_response_future.py']",['2bdbfa0951ca6f3d6c31b9ece5984cb3b1e8aab2'],9,10,19,2,0.0,1.0,1.0
3e876e0a712216560880133d1e638ceefc0baf66,"relax mock test requirement now that they readded 2.6 support

PYTHON-591",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-29 14:45:15-05:00,18000,2016-06-29 14:45:15-05:00,18000,True,False,['test-requirements.txt'],['81c5aef702dfb25296b4841a99c360166b2d0812'],1,1,2,1,,,
9b52af704b58bff5e18749755533d853850316c4,correct parameter order on cqlenigine exec count assertion,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-30 15:00:41-05:00,18000,2016-06-30 15:00:41-05:00,18000,True,False,['__init__.py'],['f47a61e96eb6f69f2bc87f0c5501780ade6368c5'],1,1,2,1,,,
2242171befdc1ebe6c79f76ef4065a17c24aad3d,"don't quote bool for cql

quoted bool is optional in table option DDL, and disallowed in CQL DML

PYTHON-596",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-30 15:02:23-05:00,18000,2016-06-30 15:02:23-05:00,18000,True,False,['encoder.py'],['9b52af704b58bff5e18749755533d853850316c4'],2,1,3,1,,,
bd4bc29a97577d7b8901c78745217d3c229a60bd,"cqle: remove special handling for bool in ValueQuoter

now that cql_quote does not quote bool types, this is not needed

PYTHON-596",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-30 15:03:19-05:00,18000,2016-06-30 15:03:19-05:00,18000,True,False,['statements.py'],['2242171befdc1ebe6c79f76ef4065a17c24aad3d'],3,1,4,1,0.0,1.0,0.0
e96e005a859d4592fb3da8c696e03df2b4e1b7ed,"add a test using boolean values with __in operator

PYTHON-596",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-06-30 15:04:56-05:00,18000,2016-06-30 15:05:31-05:00,18000,True,False,['test_queryset.py'],['bd4bc29a97577d7b8901c78745217d3c229a60bd'],1,17,18,1,1.0,1.0,1.0
bca0cee969b29c71daff9bc7830c5d8773b7f621,Support ordering on column objects,Richard O'Dwyer,richard@richard.do,Richard O'Dwyer,richard@richard.do,2016-06-29 16:53:23+01:00,-3600,2016-06-30 22:26:52+01:00,-3600,True,False,['columns.py'],['19d64f50d708bbdc8dc723befb73f3c17bf7ef53'],0,30,30,1,1.0,1.0,1.0
cfd3ddc9b84cbe9d3f392c9cf50f5dde6ecd2c2a,"test cqlengine.Columns comparison

PYTHON-595",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-01 10:06:31-05:00,18000,2016-07-01 10:06:31-05:00,18000,True,False,"['__init__.py', 'test_columns.py']",['bca0cee969b29c71daff9bc7830c5d8773b7f621'],0,82,82,2,0.0,1.0,1.0
4128d4942cbf9401de145a717c018406781bf941,"limit recursion when failing to execute in conncurrent

PYTHON-585",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-01 13:48:03-05:00,18000,2016-07-01 14:02:16-05:00,18000,True,False,['concurrent.py'],['cfd3ddc9b84cbe9d3f392c9cf50f5dde6ecd2c2a'],1,13,14,1,1.0,1.0,0.0
34b1c7638cc00eba00fe0ffee673c8fba54c01d8,"test demonstrating execut concurrent recursion limiting

PYTHON-585",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-01 14:01:48-05:00,18000,2016-07-01 14:02:16-05:00,18000,True,False,['test_concurrent.py'],['4128d4942cbf9401de145a717c018406781bf941'],0,19,19,1,1.0,1.0,1.0
577d67ca05a5e38febb82afcf502a70b2d0133c2,legacy html rewrites for docs.yaml,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-01 14:25:06-05:00,18000,2016-07-01 14:25:06-05:00,18000,True,False,['docs.yaml'],['cfd3ddc9b84cbe9d3f392c9cf50f5dde6ecd2c2a'],0,2,2,1,,,
72780f4ee30e7a134f2f92846cf4287881c577e8,"return from connect when at least one pool is connected

PYTHON-105",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-05 15:40:27-05:00,18000,2016-07-05 15:40:27-05:00,18000,True,False,"['cluster.py', 'test_cluster.py', 'test_connection.py', 'test_metrics.py']",['577d67ca05a5e38febb82afcf502a70b2d0133c2'],26,29,55,4,1.0,1.0,0.0
62bbb2a2d3bdba6a08db0f85aab50bfd59f24344,Fallback to select partition keys when all fields are defered,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-06 11:55:02-04:00,14400,2016-07-06 11:55:02-04:00,14400,True,False,"['query.py', 'test_queryset.py']",['bd8b157941438987aaa547cf8afc5080bd0e7601'],0,7,7,2,0.5,0.5,1.0
800d1fb6ab929cac953463817e6f4dc9ee187c54,"use prepared metadata and skip row result meta

in protocol v2+

PYTHON-71",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-06 13:49:57-05:00,18000,2016-07-06 13:53:07-05:00,18000,True,False,"['cluster.py', 'connection.py', 'protocol.py', 'query.py', 'row_parser.pyx', 'test_custom_protocol_handler.py', 'test_connection.py', 'test_parameter_binding.py', 'test_response_future.py']",['577d67ca05a5e38febb82afcf502a70b2d0133c2'],67,86,153,9,0.23529411764705882,0.0,0.23529411764705882
dcd47a3a943036d8e65de52b826fd2ca8b4dae85,unset Host.is_up for optimistically set contact points,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-06 14:37:42-05:00,18000,2016-07-06 14:45:22-05:00,18000,True,False,['cluster.py'],['577d67ca05a5e38febb82afcf502a70b2d0133c2'],0,7,7,1,0.0,0.0,1.0
8addbad42c428f0086b13b09495b4d2b1950243f,update Host.is_up for ignored hosts on events,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-06 14:38:20-05:00,18000,2016-07-06 14:45:34-05:00,18000,True,False,['cluster.py'],['dcd47a3a943036d8e65de52b826fd2ca8b4dae85'],2,4,6,1,0.0,0.0,0.5
31abbc81703d5be1c92bd19d753319916b58143c,"Make field overriding compute the right position and pk attributes

Would rather make this fail model validation, but don't want to break existing model
behavior.

PYTHON-576",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-06 16:09:05-05:00,18000,2016-07-06 16:09:05-05:00,18000,True,False,['models.py'],['577d67ca05a5e38febb82afcf502a70b2d0133c2'],8,14,22,1,0.0,0.0,0.0
d9ef7fc18ead9b2177ba112f097a3dc6c47fcf33,PYTHON-105 tweak tests to wait for pools to be up,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-06 16:48:27-05:00,18000,2016-07-06 16:48:27-05:00,18000,True,False,"['test_ssl.py', 'test_cluster.py']",['35ef082e2d0c24e65dd7fcb645af89da9ba66044'],4,4,8,2,,,
9bdd3fbaa376d15d03446679d64b62fd8dd7dc6b,Fix pool size changing during iteration,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-06 16:54:24-05:00,18000,2016-07-06 16:54:24-05:00,18000,True,False,['cluster.py'],['d9ef7fc18ead9b2177ba112f097a3dc6c47fcf33'],1,1,2,1,,,
b91d199a5866a3f9500a7260082be700eea2d95e,"handle None conditional

PYTHON-580",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-07 14:17:45-05:00,18000,2016-07-07 14:17:45-05:00,18000,True,False,['query.py'],['124d197a77c0b62749775f3e477c93a79ec23bec'],2,2,4,1,,,
ccbf5aefaf0b815d6697834c1ade6ee8b4c5a192,"only compute new conditional if we're doing a delete

PYTHON-580",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-07 14:18:41-05:00,18000,2016-07-07 14:18:41-05:00,18000,True,False,['query.py'],['b91d199a5866a3f9500a7260082be700eea2d95e'],7,6,13,1,,,
80a12baa89456edbf68c643f075093c7f586f319,"don't change DMLQuery conditionals during delete phase

PYTHON-580",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-07 14:21:35-05:00,18000,2016-07-07 14:21:35-05:00,18000,True,False,['query.py'],['ccbf5aefaf0b815d6697834c1ade6ee8b4c5a192'],9,8,17,1,,,
21c796e09642b83020f4cedc7085c32d54797c0d,"Remove nonexistent contact points from metadata after discovery

PYTHON-549",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-07 15:38:17-05:00,18000,2016-07-07 15:38:17-05:00,18000,True,False,['cluster.py'],['b6a0a9545822b74515426a7f05e57ddc2f53bb0e'],3,2,5,1,1.0,1.0,1.0
fa3601531904bb33ffeb1639f35a5e2eeea960ca,"don't downgrade protocol when explicitly set

PYTHON-537",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-08 11:46:42-05:00,18000,2016-07-08 11:46:42-05:00,18000,True,False,['cluster.py'],['b6a0a9545822b74515426a7f05e57ddc2f53bb0e'],6,17,23,1,0.5,0.5,0.0
3c5266093e4cefcd7ace1bb0bfc79e92282b0f70,"Don't omit ignored nodes from schema agreement, if they're up

see #615",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-08 16:49:30-05:00,18000,2016-07-08 16:49:30-05:00,18000,True,False,['cluster.py'],['d30f67e5541d39169e87b699bdf906c313ebeda7'],2,1,3,1,1.0,1.0,1.0
5c06ac6f60689188c8169ca10c41e8ce5f8efa27,PYTHON-537 adding boundry integration tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-13 12:34:57-05:00,18000,2016-07-13 12:34:57-05:00,18000,True,False,"['__init__.py', 'test_cluster.py']",['d30f67e5541d39169e87b699bdf906c313ebeda7'],9,79,88,2,1.0,1.0,1.0
10ae19e4abe659f37345732a2628261556097baf,Removed an inconsistent sleep use in a test,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-14 10:47:49-04:00,14400,2016-07-14 10:47:49-04:00,14400,True,False,['test_queryset.py'],['5c06ac6f60689188c8169ca10c41e8ce5f8efa27'],12,6,18,1,1.0,1.0,0.0
de8351c3968b338c07c392c94076df817d2908ff,PYTHON-71 test metadata across protocol versions,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-14 13:21:26-05:00,18000,2016-07-14 13:21:26-05:00,18000,True,False,"['__init__.py', 'test_query.py']",['5092803a7201b3678d7889cebbc64c98da58a8f0'],1,55,56,2,0.39285714285714285,1.0,1.0
50d349f26eabb9e14e7b23641931063d3f3b5009,Fix pk__token equality filter,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-14 16:26:58-04:00,14400,2016-07-14 16:26:58-04:00,14400,True,False,"['query.py', 'test_queryoperators.py']",['de8351c3968b338c07c392c94076df817d2908ff'],3,8,11,2,0.0,0.6666666666666666,1.0
4ec5045581b36f3209442d16291b9ea345334d2e,cleaning up debug statement,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-14 17:15:57-05:00,18000,2016-07-14 17:15:57-05:00,18000,True,False,['test_query.py'],['de8351c3968b338c07c392c94076df817d2908ff'],1,0,1,1,,,
b22f3eb4bf79b2378db6e9fc1c121d23482a75bf,Correct typo in partition_key check,Ben Brostoff,bbrostoff@xlhybrids.com,Ben Brostoff,bbrostoff@xlhybrids.com,2016-07-15 09:52:18-04:00,14400,2016-07-15 09:52:27-04:00,14400,True,False,['query.py'],['4ec5045581b36f3209442d16291b9ea345334d2e'],1,1,2,1,,,
d80e9ad746cf277774ca122b91fc5721ffb25ce0,PYTHON-576 adding primary key override test for pypy,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-15 15:35:20-05:00,18000,2016-07-15 15:35:20-05:00,18000,True,False,"['__init__.py', 'test_model.py']",['86afcd9f2f524fa7854a516c61454883fe84d407'],1,37,38,2,1.0,1.0,1.0
7a18156c452b0b9b0984108abf4e8bb10297fe94,PYTHON-599 updating test tag,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-15 15:59:47-05:00,18000,2016-07-15 15:59:47-05:00,18000,True,False,['test_queryset.py'],['d80e9ad746cf277774ca122b91fc5721ffb25ce0'],0,1,1,1,,,
b6067fbfa4ea3b1713ee87d38faade02bddbdef2,Extent noop model update tests to primary keys.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-18 14:43:53+02:00,-7200,2016-07-18 14:43:53+02:00,-7200,True,False,['test_updates.py'],['7a18156c452b0b9b0984108abf4e8bb10297fe94'],2,36,38,1,0.25,1.0,1.0
c316d3f7c6003d138578a94bbc113b48d848afb3,Extend Text and Ascii columns tests.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-18 18:36:43+02:00,-7200,2016-07-18 18:36:43+02:00,-7200,True,False,['test_validation.py'],['7a18156c452b0b9b0984108abf4e8bb10297fe94'],11,125,136,1,0.5405405405405406,1.0,1.0
f1acf62fb44e2c0ad55a0b2d59dc48acf3cc0b94,PYTHON-596 adding a test for server error,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-18 12:59:34-05:00,18000,2016-07-18 12:59:34-05:00,18000,True,False,['test_queryset.py'],['d8d0456bad6ae87e01b9de8e833a78c1abf347af'],1,29,30,1,1.0,1.0,1.0
1ff384107c2a7d440cdb34cc8021b9ad6a0f41b3,PYTHON-551 added test for ingored host state,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-18 14:52:00-05:00,18000,2016-07-18 14:52:00-05:00,18000,True,False,['test_cluster.py'],['f1acf62fb44e2c0ad55a0b2d59dc48acf3cc0b94'],0,32,32,1,1.0,1.0,1.0
351d33296a7c489327e657ea9efe50e2f8cbda97,table default ttl now relies on Cassandra only,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-18 13:02:17-04:00,14400,2016-07-19 13:29:22-04:00,14400,True,False,"['models.py', 'query.py', 'test_ttl.py']",['1ff384107c2a7d440cdb34cc8021b9ad6a0f41b3'],8,42,50,3,1.0,1.0,1.0
02320a9906f5d2e3b9407622c2ecccd1df7c0f74,Add some docs for default and per-query TTL,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-18 15:21:21-04:00,14400,2016-07-19 14:13:44-04:00,14400,True,False,"['models.rst', 'queryset.rst']",['351d33296a7c489327e657ea9efe50e2f8cbda97'],2,40,42,2,,,
f0cfc6937821efc5f5c04f2d0a059a87fdfe883b,"Remove superfluous quotes from non-cql typenames

PYTHON-579",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-19 14:03:26-05:00,18000,2016-07-19 14:03:26-05:00,18000,True,False,"['cqltypes.py', 'metadata.py', 'type_codes.py']",['d8d0456bad6ae87e01b9de8e833a78c1abf347af'],8,6,14,3,,,
f55c004871c3fd331308cd50ebf47117dafaee63,"make DCT return typestring with aliases included

PYTHON-579",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-19 14:07:48-05:00,18000,2016-07-19 14:07:48-05:00,18000,True,False,['cqltypes.py'],['f0cfc6937821efc5f5c04f2d0a059a87fdfe883b'],0,8,8,1,1.0,1.0,0.0
ca4b65c81b2d535086052f6ca966f9d052e6ed75,PYTHON-549 adding test for bad host exclusion,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-19 15:44:24-05:00,18000,2016-07-19 15:44:24-05:00,18000,True,False,['test_metadata.py'],['0aa9f98b3b2527bfb1ee6c5d9834b57e04bc0be2'],0,22,22,1,1.0,1.0,1.0
16feaac50db9cc4ae432ba3a55658cb3b6c4fe66,Modifying PR-622 to handle client side validation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-19 18:05:19-05:00,18000,2016-07-19 18:05:19-05:00,18000,True,False,['test_updates.py'],['b6067fbfa4ea3b1713ee87d38faade02bddbdef2'],4,2,6,1,0.0,0.0,0.0
0e94a1d1396366179281a069d7afbecdbad16a43,Add missing comma to code sample,Matt Stibbs,mattstibbs@users.noreply.github.com,GitHub,noreply@github.com,2016-07-20 09:18:46+01:00,-3600,2016-07-20 09:18:46+01:00,-3600,True,False,['getting_started.rst'],['90d07954496d9a0c63daac7d0678006bc3734f07'],1,1,2,1,,,
a6e6613674bda97004a26f3f34f4d4a25ec8b858,DCT is not really a specialization of CompositeType,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-20 10:47:36-05:00,18000,2016-07-20 10:47:36-05:00,18000,True,False,['cqltypes.py'],['d8d0456bad6ae87e01b9de8e833a78c1abf347af'],1,1,2,1,,,
bd1e7e7537a359d232bbd4117eff90c466da019f,"handle missing column aliases for composite types

This fixes some edge cases where some metadata goes missing in an upgrade from
C* 2.0 --> 2.1.

PYTHON-562",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-20 10:52:32-05:00,18000,2016-07-20 10:52:32-05:00,18000,True,False,['metadata.py'],['a6e6613674bda97004a26f3f34f4d4a25ec8b858'],10,8,18,1,1.0,1.0,1.0
2302711075d47b634f2923931125ef986b5a0327,Subclass Ascii column from Text to add min_length and max_length parameters.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-20 17:13:17+02:00,-7200,2016-07-20 18:47:42+02:00,-7200,True,False,['columns.py'],['c316d3f7c6003d138578a94bbc113b48d848afb3'],7,7,14,1,,,
6c2da51f8acad63cdfb4adef6e374dd9d6c99869,Allow length constraints to be set to zero.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-20 17:30:31+02:00,-7200,2016-07-20 18:47:42+02:00,-7200,True,False,['columns.py'],['2302711075d47b634f2923931125ef986b5a0327'],2,2,4,1,,,
27a1ab3bf5a443e5a1a726aa362a8a2a0ed38d63,Do not allow negative string length constraints.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-20 17:31:10+02:00,-7200,2016-07-20 18:47:42+02:00,-7200,True,False,"['columns.py', 'test_validation.py']",['6c2da51f8acad63cdfb4adef6e374dd9d6c99869'],0,24,24,2,0.0,0.23529411764705882,0.47058823529411764
0f981634bfa58f9858c7d97b6dd52c0ce1326a23,Only enforce minimal length requirement if min_length is unset.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-20 17:33:21+02:00,-7200,2016-07-20 18:47:42+02:00,-7200,True,False,['columns.py'],['27a1ab3bf5a443e5a1a726aa362a8a2a0ed38d63'],1,3,4,1,1.0,0.0,0.0
5e6660165e6f62b8d75d455a89f0660dd5ad4c12,Let None strings to be checked against minimal and maximal length constraints.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-20 17:45:32+02:00,-7200,2016-07-20 18:47:42+02:00,-7200,True,False,['columns.py'],['0f981634bfa58f9858c7d97b6dd52c0ce1326a23'],6,3,9,1,0.0,1.0,0.3333333333333333
bba8d163097b777387054b67268145696ed2005a,Check string length range constraints.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-20 19:06:08+02:00,-7200,2016-07-20 19:06:08+02:00,-7200,True,False,"['columns.py', 'test_validation.py']",['5e6660165e6f62b8d75d455a89f0660dd5ad4c12'],0,66,66,2,0.5581395348837209,0.8837209302325582,0.8837209302325582
3619462740a4c4369f80ea314d33c1df383dab4f,"there is no return from libev Loop_start

This is leftover from when the class was copied over
from asyncore.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-20 13:02:40-05:00,18000,2016-07-20 13:02:40-05:00,18000,True,False,['libevreactor.py'],['d8d0456bad6ae87e01b9de8e833a78c1abf347af'],2,2,4,1,,,
9d36dd97f68a02aec13b3345b09e8dff1c880515,"No need to null the loop reference during cleanup

This removes a small (but inconsequential) race on shutdown, where the
loop thread could access None when trying to start.

PYTHON-578",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-20 13:03:52-05:00,18000,2016-07-20 13:03:52-05:00,18000,True,False,['libevreactor.py'],['3619462740a4c4369f80ea314d33c1df383dab4f'],1,0,1,1,1.0,1.0,0.0
13475197d32a28e881c35a919d373ed73d5668a6,"remove race where event loop deletes watcher during cleanup

PYTHON-578",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-20 13:19:14-05:00,18000,2016-07-20 13:19:14-05:00,18000,True,False,['libevreactor.py'],['9d36dd97f68a02aec13b3345b09e8dff1c880515'],4,1,5,1,1.0,1.0,0.0
76140dc0629f171f842d0941b0679a4d351f797d,PYTHON-579 added check for DCT metadata subtypes,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-20 16:02:55-05:00,18000,2016-07-20 16:02:55-05:00,18000,True,False,['test_metadata.py'],['755c7d054a1586b9419cc0b12606249b157883c2'],1,25,26,1,1.0,1.0,1.0
b4b42a18e54290bfd15e901a7ee99f75e86fb4f0,make num_subtypes UNKNOWN by default,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-20 16:13:46-05:00,18000,2016-07-20 16:15:42-05:00,18000,True,False,['cqltypes.py'],['76140dc0629f171f842d0941b0679a4d351f797d'],3,2,5,1,,,
67ea5d48cbeb4db789ef8d2b00a7a7b573fa30b6,"make connection timeout infinite by default

removes the need for eventlet and gevent checking for timeouts

PYTHON-600",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-20 16:17:59-05:00,18000,2016-07-20 16:20:22-05:00,18000,True,False,"['connection.py', 'eventletreactor.py', 'geventreactor.py']",['13475197d32a28e881c35a919d373ed73d5668a6'],29,4,33,3,1.0,0.4,0.0
039149aa4377abe223ab455582132c277b3e7851,Replace deprecated assertEquals by assertEqual.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-21 13:56:00+02:00,-7200,2016-07-21 13:56:00+02:00,-7200,True,False,['test_validation.py'],['bba8d163097b777387054b67268145696ed2005a'],6,6,12,1,,,
c509f5902fd9cabbcb8d025251705396b0de663b,"override cql_parameterized_type for generating DCT CQL

PYTHON-579",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-21 11:25:51-05:00,18000,2016-07-21 11:25:51-05:00,18000,True,False,['cqltypes.py'],['b4b42a18e54290bfd15e901a7ee99f75e86fb4f0'],6,3,9,1,0.0,0.0,1.0
541fac775e2b245881f6b6302f23ecc15a8fd01e,Records metrics per cluster,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-21 12:21:31-04:00,14400,2016-07-21 12:32:57-04:00,14400,True,False,"['metrics.py', 'test_metrics.py']",['90d8171dc1119a33af699edcd58953c5b94849a2'],1,49,50,2,0.07692307692307693,1.0,1.0
117e9ef885733392c86e4faaa1a437f60f46ac12,update legacy test with corrected DCT,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-21 12:19:30-05:00,18000,2016-07-21 12:19:30-05:00,18000,True,False,['test_metadata.py'],['c509f5902fd9cabbcb8d025251705396b0de663b'],9,6,15,1,1.0,0.0,0.0
1a72f87554f20a0e89bb15ea5389b8d8c0e2255e,Raise ValidationError on illegal characters provided to ASCII column.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-22 11:21:16+02:00,-7200,2016-07-22 11:21:16+02:00,-7200,True,False,"['columns.py', 'test_validation.py']",['039149aa4377abe223ab455582132c277b3e7851'],0,31,31,2,1.0,1.0,1.0
1116a6943f73bc6c25a63ab2b492e990ebb657fe,"use numpy masked arrays to represent empty cells

PYTHON-553",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-22 14:02:56-05:00,18000,2016-07-22 14:02:56-05:00,18000,True,False,['numpy_parser.pyx'],['117e9ef885733392c86e4faaa1a437f60f46ac12'],10,20,30,1,,,
250a1343557c4a5f18555a29e75d4e376f3373b7,make util.Date and util.Time lt robust with other types,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-22 16:30:02-05:00,18000,2016-07-22 16:30:02-05:00,18000,True,False,['util.py'],['1116a6943f73bc6c25a63ab2b492e990ebb657fe'],0,4,4,1,1.0,1.0,1.0
1b328c1164e3ca4c349d4a72c9315a5901cfd7e2,"update numpy null test for new null handling

PYTHON-553",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-22 16:30:28-05:00,18000,2016-07-22 16:30:28-05:00,18000,True,False,['test_cython_protocol_handlers.py'],['250a1343557c4a5f18555a29e75d4e376f3373b7'],53,38,91,1,0.0,0.0,1.0
ef7953ad842fdc77cd72221adfc1aa9a71c23f98,PYTHON-600 adding long running ssl connection test,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-22 18:10:54-05:00,18000,2016-07-22 18:10:54-05:00,18000,True,False,"['__init__.py', 'test_ssl.py']",['4535b7b835856c994a9327220f4b1353d5e3fe4b'],4,42,46,2,0.0,0.9090909090909091,0.9545454545454546
8390894e0b5f546caceecf7ffdd96c04d6739ffa,Changed per-cluster metrics path and added ability to define an explicit stats name,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-22 19:23:34-04:00,14400,2016-07-25 08:16:45-04:00,14400,True,False,"['metrics.py', 'test_metrics.py']",['78f753cfb1d10fe7066f425f0eaa7cf54b59692b'],6,29,35,2,0.625,1.0,1.0
c1dd8a3dea8640efe76f500efbf7e1b3071fbf04,add simple validation in set_stats_name,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-25 11:07:13-04:00,14400,2016-07-25 11:07:13-04:00,14400,True,False,['metrics.py'],['8390894e0b5f546caceecf7ffdd96c04d6739ffa'],0,3,3,1,1.0,1.0,1.0
5a23f1b1cc70ad82969b7380ebe267771075e76d,PYTHON-561 adding test for duplicate metric names,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-25 17:23:25-05:00,18000,2016-07-25 17:23:25-05:00,18000,True,False,"['metrics.py', '__init__.py', 'test_metrics.py', 'utils.py']",['31dd3dcfc0927f6b1f875eee1e4ea6f537fd4072'],7,68,75,4,0.08,1.0,1.0
526472759afeda0bf01df0f03a9bb301a139607c,Fix variable names in ResponseFuture.clear_callbacks,Bohdan Tantsiura,bohdantan@gmail.com,Bohdan Tantsiura,bohdantan@gmail.com,2016-07-26 12:24:13+03:00,-10800,2016-07-26 12:24:13+03:00,-10800,True,False,['cluster.py'],['5a23f1b1cc70ad82969b7380ebe267771075e76d'],2,2,4,1,,,
c023d0181e42ea98d61612dcfd8e3fed6f442758,Add ContextQuery to allow switching the model keyspace easily,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-27 12:03:46-04:00,14400,2016-07-27 13:50:46-04:00,14400,True,False,"['management.py', 'query.py', 'test_context_query.py']",['957b6c474b3c70b3873c60dcea6f592528bb2c3c'],5,150,155,3,1.0,1.0,0.875
760708cace20106e9c1b1fb3dd498fb8b8329b0d,improve docs of sync_table and drop_table,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-27 12:28:40-04:00,14400,2016-07-27 13:50:46-04:00,14400,True,False,['management.py'],['c023d0181e42ea98d61612dcfd8e3fed6f442758'],2,6,8,1,,,
31aebdf203b9f98d91b03c8490c753151d749eee,3.6.0 changelog,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-27 15:51:47-04:00,14400,2016-07-27 15:51:47-04:00,14400,True,False,['CHANGELOG.rst'],['957b6c474b3c70b3873c60dcea6f592528bb2c3c'],0,31,31,1,,,
7f5b945e7f9baca0b0f616c4369d4aff08c63526,Set default value of CQLengine columns on instantiation.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-28 14:21:23+02:00,-7200,2016-07-28 14:21:23+02:00,-7200,True,False,"['models.py', 'test_class_construction.py', 'test_model_io.py']",['78f753cfb1d10fe7066f425f0eaa7cf54b59692b'],1,51,52,3,0.0,0.5,1.0
a4cbed88b9ee054cfab5c0686906948b5b332d5c,Add some more unit-tests around value setting on instantiation.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-28 14:40:02+02:00,-7200,2016-07-28 14:40:02+02:00,-7200,True,False,"['test_class_construction.py', 'test_model_io.py']",['7f5b945e7f9baca0b0f616c4369d4aff08c63526'],1,38,39,2,1.0,1.0,1.0
14446e1764c79c6f46244d04f1ec5413c4c2bfe9,Fix code layout.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-28 14:40:29+02:00,-7200,2016-07-28 14:40:29+02:00,-7200,True,False,['test_model_io.py'],['a4cbed88b9ee054cfab5c0686906948b5b332d5c'],2,0,2,1,,,
a4352c37bacdc09e3177003643bc23b731b66fb1,Simplify default value setting.,Kevin Deldycke,kdeldycke@scaleway.com,Kevin Deldycke,kdeldycke@scaleway.com,2016-07-28 15:01:18+02:00,-7200,2016-07-28 15:01:18+02:00,-7200,True,False,['models.py'],['14446e1764c79c6f46244d04f1ec5413c4c2bfe9'],8,5,13,1,1.0,1.0,0.0
a346172387b4bcb421503ba7c3b08e2616e941f8,"don't copy a queryset's result constructor

This is not needed as it is created per-execution. It was causing
problems with deepcopy in Python 2.6.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-28 11:45:08-05:00,18000,2016-07-28 11:45:08-05:00,18000,True,False,['query.py'],['a4352c37bacdc09e3177003643bc23b731b66fb1'],1,1,2,1,,,
d67eb868f45e5a31c149c39ada73d445fe1abf22,fix test syntax to work in Python 2.6,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-28 11:46:14-05:00,18000,2016-07-28 11:46:14-05:00,18000,True,False,['test_named.py'],['a346172387b4bcb421503ba7c3b08e2616e941f8'],2,2,4,1,,,
0f18ded6fcd3c8f4c132929e10129e607efa3c3c,"assertEquals --> assertEqual

the former is deprecated",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-28 12:04:58-05:00,18000,2016-07-28 12:04:58-05:00,18000,True,False,"['test_class_construction.py', 'test_model_io.py', 'test_metadata.py', 'test_query.py']",['c5c70e11c91b5d243f62ee82d278522cf2490de5'],95,95,190,4,,,
760a7cde3d751d42890a281bc845b779e483be19,Fixing py3 compatibility issue in test_metrics,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-28 12:23:15-05:00,18000,2016-07-28 12:23:15-05:00,18000,True,False,['test_metrics.py'],['0f18ded6fcd3c8f4c132929e10129e607efa3c3c'],2,2,4,1,,,
7856f702a15ff0adb4590dbf5faa3ce97fa9a86a,Fixing py3 compatiblity issue with AsciiTests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-28 12:42:09-05:00,18000,2016-07-28 12:42:09-05:00,18000,True,False,['test_validation.py'],['760a7cde3d751d42890a281bc845b779e483be19'],2,4,6,1,1.0,1.0,1.0
84f428c73a38e8813057d04cee552dcc7e828b27,Restricting TypeTestsProtocol to C* V 2.2,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-28 13:32:57-05:00,18000,2016-07-28 13:32:57-05:00,18000,True,False,['test_types.py'],['7856f702a15ff0adb4590dbf5faa3ce97fa9a86a'],2,2,4,1,,,
d7811310d93a4bd0e4300216935a35a13a1f762d,format strings for python 2.6,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-28 14:46:23-05:00,18000,2016-07-28 14:46:23-05:00,18000,True,False,['test_query.py'],['0f18ded6fcd3c8f4c132929e10129e607efa3c3c'],2,2,4,1,,,
aacabfa04d0887953c3349766236825cab430606,"don't exlcude CQL just for DCT, now that it's fixed",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-07-28 14:46:37-05:00,18000,2016-07-28 14:46:37-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['d7811310d93a4bd0e4300216935a35a13a1f762d'],13,4,17,2,0.875,0.0,0.0
f315867330892676fefc19e6ec2d07054c624d91,"PYTHON-598 Adding test documentation, fixing py3 compatibility issue",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-07-28 15:26:52-05:00,18000,2016-07-28 15:26:52-05:00,18000,True,False,"['test_validation.py', 'test_context_query.py']",['84f428c73a38e8813057d04cee552dcc7e828b27'],1,30,31,2,1.0,1.0,1.0
80ff3b785e7edf7ad10d8b1ff4f896a60af6c2c6,Add BatchQuery and ContextQuery in the docs,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-29 12:15:33-04:00,14400,2016-07-29 12:15:33-04:00,14400,True,False,"['query.py', 'query.rst']",['bc909af9368479a78b64de3515be50a1eb8786b4'],0,35,35,2,,,
7907d96d8c529852a6f8331149fa7306079abe1c,some docs changes,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-29 12:29:31-04:00,14400,2016-07-29 12:29:31-04:00,14400,True,False,"['query.py', 'query.rst']",['80ff3b785e7edf7ad10d8b1ff4f896a60af6c2c6'],10,5,15,2,,,
22598545f221785dd68f939cc4a377e3dbab3f44,3.6.0 version,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-07-29 15:05:54-04:00,14400,2016-07-29 15:05:54-04:00,14400,True,False,['__init__.py'],['7907d96d8c529852a6f8331149fa7306079abe1c'],1,1,2,1,,,
43cfe6078e92dde6b9505ccefe1fd3812535585d,silence sphinx warning about emphasis/strong without end,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-01 13:43:56-05:00,18000,2016-08-01 13:43:56-05:00,18000,True,False,['query.py'],['22598545f221785dd68f939cc4a377e3dbab3f44'],2,2,4,1,,,
1dd933747977413eaca30b322a6bd42a95e8fa0f,post-release version,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-01 13:44:15-05:00,18000,2016-08-01 13:44:15-05:00,18000,True,False,['__init__.py'],['43cfe6078e92dde6b9505ccefe1fd3812535585d'],1,1,2,1,,,
a3bd73855dced11dabe92596358a5dab89d2e020,"add python-609, which was merged before release",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-01 14:58:15-05:00,18000,2016-08-01 14:58:15-05:00,18000,True,False,['CHANGELOG.rst'],['1dd933747977413eaca30b322a6bd42a95e8fa0f'],0,1,1,1,,,
d244ece986e336ffa97d00ac36f859e2e29372af,misc fixes for jenkins,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-02 09:20:21-05:00,18000,2016-08-02 09:20:21-05:00,18000,True,False,"['test_schema.py', 'test_query.py', 'test_udts.py']",['a3bd73855dced11dabe92596358a5dab89d2e020'],26,29,55,3,0.0,1.0,1.0
c6b1b8d417a4af4685895a94294d18ed7dda9559,"Wait for first *successful* connect on initial

not just any completed (possibly errored) attempt

PYTHON-617",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-03 12:19:19-05:00,18000,2016-08-03 12:19:19-05:00,18000,True,False,['cluster.py'],['d244ece986e336ffa97d00ac36f859e2e29372af'],1,3,4,1,0.0,0.0,0.0
47ec211116dcebf529c5aa3635a457ac2af3c3f6,"allow beta proto version flag

PYTHON-614",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-04 16:27:08-05:00,18000,2016-08-04 16:27:08-05:00,18000,True,False,"['cluster.py', 'connection.py', 'protocol.py']",['d244ece986e336ffa97d00ac36f859e2e29372af'],5,22,27,3,0.14285714285714285,0.14285714285714285,0.0
58cba38e1f918ea5771d62a5e2934fea13d9b7c5,"Support v5 error code map for failure messages

Done for PYTHON-619",Tyler Hobbs,tylerlhobbs@gmail.com,Tyler Hobbs,tylerlhobbs@gmail.com,2016-08-05 18:09:40-05:00,18000,2016-08-05 18:09:40-05:00,18000,True,False,"['__init__.py', 'protocol.py']",['47ec211116dcebf529c5aa3635a457ac2af3c3f6'],30,90,120,2,0.0,1.0,0.8
ab7b9ef0e70572498d6b72de172a810c6f3b8578,"only use partition key when deleting static columns

PYTHON-608",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-08 10:12:10-05:00,18000,2016-08-08 10:12:10-05:00,18000,True,False,['query.py'],['d244ece986e336ffa97d00ac36f859e2e29372af'],1,5,6,1,0.0,0.0,1.0
c81618d787a54d34c97ea0a8a85c390e2ab68675,"clear USE_BETA_FLAG in response message, avoid warnings

PYTHON-614",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-08 10:56:42-05:00,18000,2016-08-08 10:56:42-05:00,18000,True,False,['protocol.py'],['47ec211116dcebf529c5aa3635a457ac2af3c3f6'],0,2,2,1,0.0,0.0,0.0
4c39f5f26f7eb6c410b18f396ebab3ee8bb72297,"update test following beta protocol changes

PYTHON-614",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-08 11:38:30-05:00,18000,2016-08-08 11:38:30-05:00,18000,True,False,['test_cluster.py'],['c81618d787a54d34c97ea0a8a85c390e2ab68675'],1,1,2,1,,,
4ba8f81baefbb6270418255d696e7f8b1c275a57,"add hash function to cqlengine.columns.Column

restore hashability to Column in Python 3.x

PYTHON-618",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-08 11:45:45-05:00,18000,2016-08-08 11:45:45-05:00,18000,True,False,['columns.py'],['d244ece986e336ffa97d00ac36f859e2e29372af'],0,3,3,1,1.0,1.0,1.0
f29150482a4ec2f6884cc52722fa30d0da79ba69,"avoid quadratic token processing for RF > nodes

PYTHON-379",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-08 14:14:49-05:00,18000,2016-08-08 14:58:05-05:00,18000,True,False,['metadata.py'],['d244ece986e336ffa97d00ac36f859e2e29372af'],3,7,10,1,0.0,0.0,0.0
cdf375804987c740c12b8534ceb9ee757cee9739,Adding test for PYTHON-608,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-08 16:09:26-05:00,18000,2016-08-08 16:09:26-05:00,18000,True,False,['test_updates.py'],['a549de7c3d2c5086f129d9fbb072c28c59af5215'],0,36,36,1,1.0,1.0,1.0
6006d3581a8d5a1a31e92bf7b25c0646a86e9eb2,PYTHON-617 adding long test to cover this specific scenario,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-09 17:59:21-05:00,18000,2016-08-09 17:59:21-05:00,18000,True,False,['test_consistency.py'],['cdf375804987c740c12b8534ceb9ee757cee9739'],0,43,43,1,0.10526315789473684,1.0,1.0
3ef1ab034b7637a29fedb2c1ebcb548ab27b6aa0,PYTHON-618 adding hash test,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-11 11:37:07-05:00,18000,2016-08-11 11:37:07-05:00,18000,True,False,['test_columns.py'],['e07b31d615bc2601c20c293df17241fa4385581d'],0,3,3,1,1.0,1.0,1.0
e8c638ab8faacac9a137fa5e3b1bb85be4fe0b78,don't xor beta flag when it's not set,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-11 11:57:00-05:00,18000,2016-08-11 11:57:00-05:00,18000,True,False,['protocol.py'],['3ef1ab034b7637a29fedb2c1ebcb548ab27b6aa0'],1,2,3,1,,,
8850ad3b6114debb7e95d4e1e5f232e03d652b0f,"make sure prepared result metadata is replaced on reprepare

PYTHON-621",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-11 13:52:13-05:00,18000,2016-08-11 13:52:13-05:00,18000,True,False,"['cluster.py', 'test_prepared_statements.py']",['e8c638ab8faacac9a137fa5e3b1bb85be4fe0b78'],1,41,42,2,0.0,0.9,1.0
151b7642419bcb5c9e0fc77f2402819ea2d8c8ce,"add encoded message size to cluster.ResponseFuture

PYTHON-284",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-09 11:55:02-05:00,18000,2016-08-11 16:52:07-05:00,18000,True,False,"['cluster.py', 'connection.py']",['3ef1ab034b7637a29fedb2c1ebcb548ab27b6aa0'],4,12,16,2,0.3333333333333333,0.3333333333333333,0.0
686ccf114fd7b50d2ba2685bdcea3a59292ed6ec,"basic request init listener

PYTHON-284",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-11 08:36:02-05:00,18000,2016-08-11 16:52:07-05:00,18000,True,False,"['cluster.py', 'cluster.rst']",['151b7642419bcb5c9e0fc77f2402819ea2d8c8ce'],0,36,36,2,0.8888888888888888,0.8888888888888888,0.3333333333333333
5207686badcba16c07799aeb63edc6c02a2190a2,"Add example request init listener

PYTHON-284",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-11 16:48:07-05:00,18000,2016-08-11 16:52:08-05:00,18000,True,False,"['cluster.py', 'README.rst', 'request_init_listener.py']",['686ccf114fd7b50d2ba2685bdcea3a59292ed6ec'],0,118,118,3,1.0,1.0,0.6428571428571429
c31fe9be265b62b165ee988901cd2cc47e7ea102,PYTHON-379 adding timing test for token replica map generation,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-11 17:10:31-05:00,18000,2016-08-11 17:10:31-05:00,18000,True,False,['test_metadata.py'],['3ef1ab034b7637a29fedb2c1ebcb548ab27b6aa0'],0,40,40,1,0.0,1.0,1.0
856335e5ad6e31170c2ed932df68350bfd82a492,"don't mark a host down on event if we're still connected

PYTHON-498",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-15 15:02:12-05:00,18000,2016-08-15 15:02:12-05:00,18000,True,False,['cluster.py'],['fe3cf6339f09b5895998bd2d89c220c3826ec090'],1,14,15,1,0.0,0.0,0.0
015df858229ab73223b998a82bf7dcf6fc765426,"PYTHON-284 tests, fixing timing on unit test issue",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-15 15:43:03-05:00,18000,2016-08-15 15:43:03-05:00,18000,True,False,"['test_metrics.py', 'test_metadata.py']",['fe3cf6339f09b5895998bd2d89c220c3826ec090'],2,82,84,2,0.5526315789473685,1.0,0.6052631578947368
3656a351025f33e3395e4ef7f58fc1c9dd626b0d,"expose paging state in execution API

PYTHON-200",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-15 16:23:27-05:00,18000,2016-08-15 16:23:27-05:00,18000,True,False,['cluster.py'],['fe3cf6339f09b5895998bd2d89c220c3826ec090'],16,23,39,1,0.6666666666666666,0.6666666666666666,0.6666666666666666
bb27149c6b4c982c9fda13c328798eb63af0b9d2,"cqle: assign UDT default on init

PYTHON-606",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-16 12:58:44-05:00,18000,2016-08-16 12:58:44-05:00,18000,True,False,['usertype.py'],['fe3cf6339f09b5895998bd2d89c220c3826ec090'],1,2,3,1,1.0,0.0,1.0
1c7a663e27b267c86a5b939f49e036af8891671b,"better error message when row decoding fails

PYTHON-361",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-16 15:28:40-05:00,18000,2016-08-16 15:28:40-05:00,18000,True,False,['protocol.py'],['fe3cf6339f09b5895998bd2d89c220c3826ec090'],4,13,17,1,0.0,0.0,0.0
fa5cf2d5031eaac92645e296f486f55fac0f12c6,"Update docs.yaml to get 3.6 and 3.5 sources from the 3.6-doc and 3.5-doc branches, which contain a recent update to .nav. Put that same .nav in master since we want to maintain that nav order going forward.",Sandeep Tamhankar,sandeep.tamhankar@datastax.com,Sandeep Tamhankar,sandeep.tamhankar@datastax.com,2016-08-16 16:57:56-07:00,25200,2016-08-16 16:57:56-07:00,25200,True,False,"['docs.yaml', '.nav']",['015df858229ab73223b998a82bf7dcf6fc765426'],8,10,18,2,,,
be8c056d8bc052da829b9ba973af92bb4f572d9b,typo,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-17 08:51:31-05:00,18000,2016-08-17 08:51:31-05:00,18000,True,False,['cluster.py'],['3656a351025f33e3395e4ef7f58fc1c9dd626b0d'],1,1,2,1,,,
a4cf9f6afc70f6a36f4abf179b9125b74e0fe32b,"refresh UDTs on keyspace update for v[12]

PYTHON-106",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-17 12:50:51-05:00,18000,2016-08-17 12:50:51-05:00,18000,True,False,['metadata.py'],['fa5cf2d5031eaac92645e296f486f55fac0f12c6'],5,18,23,1,0.6,0.0,0.0
8e258b37e8c99f8b500c3d2bf84434e77f3861db,"allow Cluster.refresh_nodes to force token rebuild

PYTHON-349",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-17 14:24:25-05:00,18000,2016-08-17 14:24:25-05:00,18000,True,False,['cluster.py'],['fa5cf2d5031eaac92645e296f486f55fac0f12c6'],2,4,6,1,,,
1f950325349d9a42c30931838337f817e1ef3437,PYTHON-614 PYTHON-619 Adding tests. Enabling protocol v5 detection and support to test harness.,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-17 15:04:52-05:00,18000,2016-08-17 15:04:52-05:00,18000,True,False,"['test-requirements.txt', '__init__.py', 'test_failure_types.py', 'test_cluster.py']",['e76a9d9f509340caf184222c5d8ee8140a8dfc5e'],38,94,132,4,0.4482758620689655,0.034482758620689655,0.7586206896551724
dab11470374818d31430855f201ddbc423b7ecdc,Adding new packaging dependency to tox,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-17 15:16:12-05:00,18000,2016-08-17 15:16:12-05:00,18000,True,False,['tox.ini'],['1f950325349d9a42c30931838337f817e1ef3437'],0,1,1,1,,,
e345becabbec0edc19f07a47b8169a3ad37b5d37,PYTHON-606 Adding integation tests for udt default values,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-17 16:15:43-05:00,18000,2016-08-17 16:16:06-05:00,18000,True,False,['test_udts.py'],['ab335181fae1d96703219f399f8ec9f4c3537714'],0,35,35,1,0.0,1.0,1.0
6c352f699f42e70143b362f3634fd6495881ef2f,"ec2 address translator

PYTHON-198",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-19 09:19:19-05:00,18000,2016-08-19 13:09:31-05:00,18000,True,False,['policies.py'],['e345becabbec0edc19f07a47b8169a3ad37b5d37'],0,20,20,1,1.0,1.0,1.0
075ac3cba8f257b585162050b79ecc3e4af944c2,"address translator unit tests

PYTHON-198",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-19 13:53:34-05:00,18000,2016-08-19 13:53:34-05:00,18000,True,False,"['test_cluster.py', 'test_policies.py']",['6c352f699f42e70143b362f3634fd6495881ef2f'],4,18,22,2,1.0,1.0,1.0
687f3a33b24f3267d5ae818c8c70d2c093bcd22b,Initial connection registry implementation,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-22 14:04:37-04:00,14400,2016-08-22 14:04:37-04:00,14400,True,False,"['connection.py', 'test_connection.py']",['e345becabbec0edc19f07a47b8169a3ad37b5d37'],88,135,223,2,1.0,1.0,1.0
f4a82ee073d481379fca4e8dbc7dc2109e7124ed,Add QuerySet using() method,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-22 15:51:01-04:00,14400,2016-08-22 15:51:01-04:00,14400,True,False,['query.py'],['687f3a33b24f3267d5ae818c8c70d2c093bcd22b'],0,12,12,1,1.0,1.0,1.0
1b53c7c154f29087eb2c99af143f86da316b3bcf,PYTHON-361 adding test,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-23 10:11:25-05:00,18000,2016-08-23 10:11:25-05:00,18000,True,False,['test_query.py'],['e345becabbec0edc19f07a47b8169a3ad37b5d37'],2,19,21,1,1.0,1.0,1.0
c11b0c0dd08c5d906bdff16b96405650535c6735,Fix to keep type queries from breaking metadata construction in C* <2.1,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-18 15:10:33-05:00,18000,2016-08-23 14:21:30-05:00,18000,True,False,['metadata.py'],['1b53c7c154f29087eb2c99af143f86da316b3bcf'],3,10,13,1,1.0,1.0,0.0
387bec21cf024dc9fe6fe2c08d69562bcb9a6e59,Increaseing wiggle room for timeout test,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-23 14:24:55-05:00,18000,2016-08-23 14:24:55-05:00,18000,True,False,['test_metadata.py'],['2cd415ebc615ce5c8bb2733c79e36a2253e2e316'],1,1,2,1,,,
0b1d012524b1a7377b2dc44a81655ed6bbbf9609,Add connection selection support to mangement commands,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-23 15:42:42-04:00,14400,2016-08-23 15:42:42-04:00,14400,True,False,"['connection.py', 'management.py', 'query.py', 'usertype.py']",['f4a82ee073d481379fca4e8dbc7dc2109e7124ed'],94,146,240,4,0.7631578947368421,0.0,0.02631578947368421
2d8374a2b67622e940737dd101b49855c312076f,PYTHON-106 adding test for UDTs and protocol v1/v2,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-24 11:47:16-05:00,18000,2016-08-24 11:47:16-05:00,18000,True,False,['test_metadata.py'],['387bec21cf024dc9fe6fe2c08d69562bcb9a6e59'],1,38,39,1,0.0,0.0,1.0
e93fbcc5de3e7bffe301bad8b16ce7ee4ad5e685,add connection support via using() to QuerySet and Model,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-25 07:24:39-04:00,14400,2016-08-25 07:24:39-04:00,14400,True,False,"['connection.py', 'management.py', 'models.py', 'named.py', 'query.py', 'test_queryoperators.py']",['0b1d012524b1a7377b2dc44a81655ed6bbbf9609'],49,106,155,6,0.92,0.64,0.24
894b9be1b07f5bf75e9bcc1b783263acda36debe,Add connection support to BatchQuery,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-25 10:27:15-04:00,14400,2016-08-25 10:27:15-04:00,14400,True,False,['query.py'],['e93fbcc5de3e7bffe301bad8b16ce7ee4ad5e685'],3,24,27,1,0.0,0.5384615384615384,0.6153846153846154
acd5f746d2f7586d94b8d96d2873aace1fdc5bf9,PYTHON-200 adding paging state test,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-25 10:28:54-05:00,18000,2016-08-25 10:29:40-05:00,18000,True,False,['test_query_paging.py'],['6b0ff8d2c126c6f202c27a039610bd822ef7d3de'],0,28,28,1,0.0,1.0,1.0
a334ae51efcc70f919a65b33dcd235866bb928eb,"fix removing last user type in proto [1,2]

PYTHON-106",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-25 12:58:01-05:00,18000,2016-08-25 12:58:01-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['2d8374a2b67622e940737dd101b49855c312076f'],26,23,49,2,1.0,1.0,0.0
a0f86f1cdcd6ec445888ebe588e6db61062ce998,Fix class model copy,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-25 15:03:30-04:00,14400,2016-08-25 15:03:30-04:00,14400,True,False,"['models.py', 'query.py']",['894b9be1b07f5bf75e9bcc1b783263acda36debe'],4,12,16,2,1.0,1.0,1.0
da10c634611f725e24bbf99f8ff56b4152f74cee,connection support in ContextQuery,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-25 16:22:57-04:00,14400,2016-08-25 16:22:57-04:00,14400,True,False,"['models.py', 'query.py']",['a0f86f1cdcd6ec445888ebe588e6db61062ce998'],3,7,10,2,1.0,1.0,0.0
e5d27eb5c3eddc1cf4e0dff1171f95dd2eae097c,Add multiple models support to ContextQuery,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-25 17:37:11-04:00,14400,2016-08-25 17:37:11-04:00,14400,True,False,['query.py'],['da10c634611f725e24bbf99f8ff56b4152f74cee'],14,35,49,1,0.0,0.0,0.18181818181818182
d8739374c4718fbb7abb9aef94535f5390e02b36,Ensure the Class is properly cloned in the ContextQuery,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-25 20:01:03-04:00,14400,2016-08-25 20:01:03-04:00,14400,True,False,"['models.py', 'query.py']",['e5d27eb5c3eddc1cf4e0dff1171f95dd2eae097c'],10,7,17,2,1.0,1.0,1.0
5dbd4357077954e9cc8c17ba9ac9a8fc2c53190f,Get the connection from the model if not specified in sync_table and drop_table,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-26 07:07:33-04:00,14400,2016-08-26 07:07:33-04:00,14400,True,False,['management.py'],['d8739374c4718fbb7abb9aef94535f5390e02b36'],4,6,10,1,1.0,1.0,0.0
5de8b576557b8711700667ddc952512cc84ca7f7,Add unregister_connection and set_default_connection,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-26 07:21:26-04:00,14400,2016-08-26 07:21:26-04:00,14400,True,False,['connection.py'],['5dbd4357077954e9cc8c17ba9ac9a8fc2c53190f'],0,22,22,1,1.0,1.0,1.0
71d822bb35eb6eb741522186e7e317ab241e7869,minor changes,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-26 07:29:07-04:00,14400,2016-08-26 07:29:07-04:00,14400,True,False,['connection.py'],['5de8b576557b8711700667ddc952512cc84ca7f7'],2,2,4,1,,,
9152b4a1d45596fa1d01cd6de90bffb7ab565e1b,minor fixes,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-26 08:13:17-04:00,14400,2016-08-26 08:13:17-04:00,14400,True,False,['management.py'],['71d822bb35eb6eb741522186e7e317ab241e7869'],2,4,6,1,0.0,0.0,1.0
fbe987718ddf3f9565ef4065377d65795efeb350,"PYTHON-498, adding host state test",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-26 15:28:00-05:00,18000,2016-08-26 15:28:00-05:00,18000,True,False,['test_cluster.py'],['378837890658077d31ede2e4bc743a6452839215'],0,36,36,1,0.0,1.0,1.0
50d3e4b3a4d075bc07e8e9fc7e1009f685a2e287,"Fix cascade failure scenario in libev connection tests, fix timing issue in new cluster tests",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-29 14:26:15-05:00,18000,2016-08-29 14:26:15-05:00,18000,True,False,"['test_cluster.py', 'test_connection.py']",['fbe987718ddf3f9565ef4065377d65795efeb350'],7,9,16,2,0.0,1.0,1.0
f5e15123d3529282b945da22f8307fe79fdb1709,Skipping UDT metadata test for C* < 2.1,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-29 16:20:42-05:00,18000,2016-08-29 16:20:42-05:00,18000,True,False,['test_metadata.py'],['50d3e4b3a4d075bc07e8e9fc7e1009f685a2e287'],1,1,2,1,,,
df93b8403ac7e5dc1cc96d45b11d8cec87040ac2,"speculative execution policies

PYTHON-218",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-29 16:25:13-05:00,18000,2016-08-29 16:25:13-05:00,18000,True,False,"['cluster.py', 'policies.py', 'query.py', 'test_response_future.py', 'test_resultset.py']",['378837890658077d31ede2e4bc743a6452839215'],93,205,298,5,0.7678571428571429,0.6964285714285714,0.0
365f1318ccae4d04a68b3adc2350ef925f02d8b3,Fixing timing issue with metrics test,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-30 11:26:31-05:00,18000,2016-08-30 11:26:31-05:00,18000,True,False,['test_metrics.py'],['f5e15123d3529282b945da22f8307fe79fdb1709'],2,14,16,1,1.0,1.0,0.0
b470667fa53403b9a9a51f31ce97d5e37f6892ce,"fix docs, ResponseFuture.attempted_hosts

PYTHON-218",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-30 12:00:24-05:00,18000,2016-08-30 12:01:56-05:00,18000,True,False,['cluster.py'],['df93b8403ac7e5dc1cc96d45b11d8cec87040ac2'],3,5,8,1,,,
6888e7b21c3d53098fd091bd0f4e83aa273ce268,"fix unit test for new arguments

PYTHON-218",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-30 12:09:59-05:00,18000,2016-08-30 12:25:11-05:00,18000,True,False,['test_response_future.py'],['b470667fa53403b9a9a51f31ce97d5e37f6892ce'],3,3,6,1,,,
d1d5ef4ec6a3da80ef2494157a9c156ade4053c2,Add integration tests,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-31 07:37:07-04:00,14400,2016-08-31 07:37:07-04:00,14400,True,False,"['connection.py', 'models.py', 'query.py', 'test_connections.py', 'test_context_query.py']",['9152b4a1d45596fa1d01cd6de90bffb7ab565e1b'],9,454,463,5,0.5111111111111111,0.9511111111111111,0.9911111111111112
07aea035bf9b00364c28b47b239047141a2ca580,preserve connection.cluster/session since they are not explicitly private,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-31 09:45:59-04:00,14400,2016-08-31 09:45:59-04:00,14400,True,False,['connection.py'],['d1d5ef4ec6a3da80ef2494157a9c156ade4053c2'],1,15,16,1,0.6,0.6,1.0
83e8d66435041b679990035b6e77590a7ea0c13f,make DEFAULT_CONNECTION key an object,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-31 09:52:42-04:00,14400,2016-08-31 09:52:42-04:00,14400,True,False,['connection.py'],['07aea035bf9b00364c28b47b239047141a2ca580'],2,4,6,1,1.0,1.0,0.0
d648bfe397066e6a867cb701b3a5645036d287d8,minor fixes,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-31 10:12:36-04:00,14400,2016-08-31 10:12:36-04:00,14400,True,False,['management.py'],['83e8d66435041b679990035b6e77590a7ea0c13f'],4,12,16,1,,,
8bbe7ce3e384bdc21a12ef834ce6ab63b75f2991,"fix race adding connection pool to session while handling keyspace change

PYTHON-628",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-31 09:50:45-05:00,18000,2016-08-31 09:50:45-05:00,18000,True,False,"['cluster.py', 'pool.py']",['0ba2dc9353d936fe3ec780efc28b302d44cae5e5'],11,37,48,2,0.2608695652173913,0.0,0.782608695652174
eb9cb9ea7091c9465814dd1cf24a985513138bcd,better syntax,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-08-31 10:59:56-04:00,14400,2016-08-31 10:59:56-04:00,14400,True,False,"['connection.py', 'management.py', 'query.py']",['d648bfe397066e6a867cb701b3a5645036d287d8'],7,6,13,3,0.0,0.0,1.0
793755941fc5791cc299f1d9b2ed179c9b79274e,"refer to NoSpecExecPlan in the right place after refactor

PYTHON-218",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-08-31 15:03:07-05:00,18000,2016-08-31 15:03:07-05:00,18000,True,False,['policies.py'],['88d33c79cde3f4193539a82a31035e519dcbad51'],1,1,2,1,,,
98b9d1ad0af0815477014a81eed232995008add3,PYTHON-218 added test for speculative execution policies,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-08-31 15:13:45-05:00,18000,2016-09-01 17:00:06-05:00,18000,True,False,"['__init__.py', 'test_policies.py']",['793755941fc5791cc299f1d9b2ed179c9b79274e'],0,100,100,2,0.43243243243243246,1.0,0.8108108108108109
3998a9a2bf074560ece49667d33087b175ca206f,PYTHON-493 adding test for non frozen UDTs,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-01 17:15:58-05:00,18000,2016-09-01 17:15:58-05:00,18000,True,False,"['__init__.py', 'test_udts.py']",['e3a28acc171350d3806f9bf06edb2223eacc60db'],1,25,26,2,1.0,1.0,1.0
dfb5b7c3e236e6b995f061b4e443781d1d7b7b7a,some docs update for documentor,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-09-02 13:30:36-04:00,14400,2016-09-02 13:30:36-04:00,14400,True,False,"['README-dev.rst', 'columns.py', 'functions.py', 'query.py', 'queryset.rst', 'upgrading.rst']",['3998a9a2bf074560ece49667d33087b175ca206f'],8,9,17,6,,,
af0b853c9bdf98e8aab1fe2801dcf1cbf0ddf3fd,"Add __len__ to BatchStatement

A __len__ method on BatchStatement would allow getting the length of the batch without poking around in the 'private' _statements_and_parameters field.",Frens Jan Rumph,mail@frensjan.nl,GitHub,noreply@github.com,2016-09-06 15:16:09+02:00,-7200,2016-09-06 15:16:09+02:00,-7200,True,False,['query.py'],['3998a9a2bf074560ece49667d33087b175ca206f'],1,4,5,1,1.0,1.0,1.0
039cb78c8267c0776a4a127dcf303a270073de6f,TokenAwarePolicy can be default with PyPy implementation as well,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-09-06 15:54:34-04:00,14400,2016-09-06 15:54:34-04:00,14400,True,False,['cluster.py'],['3998a9a2bf074560ece49667d33087b175ca206f'],10,4,14,1,0.0,0.0,0.0
9268a4bee966bef6c5f6ac8d5fbb8921a71cc894,shutdown cluster on cqlengine connection unregistration,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-09-07 14:52:17-04:00,14400,2016-09-07 14:52:17-04:00,14400,True,False,['connection.py'],['039cb78c8267c0776a4a127dcf303a270073de6f'],2,5,7,1,1.0,1.0,1.0
83ea44a2d4418717b46d07b0186e682c921ff06e,PYTHON-613 extended test_queryset suite to run with non default connection set,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-07 16:33:36-05:00,18000,2016-09-07 16:33:36-05:00,18000,True,False,['test_connections.py'],['9268a4bee966bef6c5f6ac8d5fbb8921a71cc894'],9,234,243,1,1.0,1.0,0.8235294117647058
baf3fd3612e0e025e3e9397898417f7b0e439074,"Update docs.yaml

We decided to limit the version labels (names) to major and minor, i.e., X.Y.",Jim Bisso,jbisso@gmail.com,GitHub,noreply@github.com,2016-09-08 06:41:14-07:00,25200,2016-09-08 06:41:14-07:00,25200,True,False,['docs.yaml'],['83ea44a2d4418717b46d07b0186e682c921ff06e'],2,2,4,1,,,
42797209d2035252953dde5dd79be266326dcf58,"Skipping invalidated metadata test, restrict policy test to C*>2.2",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-08 09:52:15-05:00,18000,2016-09-08 09:52:15-05:00,18000,True,False,"['test_policies.py', 'test_prepared_statements.py']",['aaabe79df3f77ff5580f27921132bef24ec36964'],1,5,6,2,,,
bc534c4731e1a9b8c5e305e687ab8332ab5c6e33,Connections docs,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-09-08 11:14:53-04:00,14400,2016-09-08 11:14:53-04:00,14400,True,False,"['query.py', 'connection.rst', 'models.rst', 'query.rst', 'batches.rst', 'connections.rst', 'models.rst', 'queryset.rst', 'third_party.rst', 'upgrade_guide.rst', 'object_mapper.rst']",['039cb78c8267c0776a4a127dcf303a270073de6f'],15,158,173,11,,,
379434b099df96c4e4252fb369b8bf50cec9a4ad,3.7.0 changelog,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-09-08 13:32:16-04:00,14400,2016-09-08 13:32:16-04:00,14400,True,False,['CHANGELOG.rst'],['9268a4bee966bef6c5f6ac8d5fbb8921a71cc894'],0,30,30,1,,,
a011eea8970ec3983392841b2f0d27e3a9603971,3.7.0 version,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-09 16:25:28-05:00,18000,2016-09-09 16:25:28-05:00,18000,True,False,['__init__.py'],['339919bf4ec2d9a40fd03ec57465318d13414eea'],1,1,2,1,,,
39f8202990cb16b11028c6fec42b53775cba3301,some docs improvement for 3.7.0,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-09-13 09:50:27-04:00,14400,2016-09-13 09:50:27-04:00,14400,True,False,"['policies.py', 'policies.rst', 'query_paging.rst']",['4f6d88ad1cf8357713e297b9096d3b7756ca6716'],1,32,33,3,,,
9007c5608fe6a2e69deb5fa612b90433df24de7f,minor version updates for 3.7.0,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-09-13 13:21:52-04:00,14400,2016-09-13 13:21:52-04:00,14400,True,False,"['README-dev.rst', 'docs.yaml']",['3efd2495a7730a427dc91d21ce2bda484f1d214d'],1,3,4,2,,,
1fd961a55a06a3ab739a3995d09c53a1b0e35fb5,post-release version,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-09-13 14:38:16-04:00,14400,2016-09-13 14:38:16-04:00,14400,True,False,['__init__.py'],['9007c5608fe6a2e69deb5fa612b90433df24de7f'],1,1,2,1,,,
f89df3f15f21ff2c11b698f91d541cf55961ed09,add EC2MultiRegionTranslator in docs,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-09-13 17:39:38-04:00,14400,2016-09-13 17:39:38-04:00,14400,True,False,['policies.rst'],['1fd961a55a06a3ab739a3995d09c53a1b0e35fb5'],0,3,3,1,,,
4fba5514aba1e9d29e539f205b835775ba253f27,Fixing various unstable tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-14 14:15:06-05:00,18000,2016-09-14 14:15:06-05:00,18000,True,False,"['__init__.py', 'test_connection.py', 'test_query.py']",['f89df3f15f21ff2c11b698f91d541cf55961ed09'],4,6,10,3,,,
ba6f0e8ef423ac9affe75d54ec5d41dee519aa21,added cql types to result set for CASSANDRA-11534,Stefania Alborghetti,stefania.alborghetti@datastax.com,Stefania Alborghetti,stefania.alborghetti@datastax.com,2016-09-12 14:48:39+08:00,-28800,2016-09-15 08:33:49+08:00,-28800,True,False,"['cluster.py', 'protocol.py', 'row_parser.pyx', 'test_concurrent.py', 'test_response_future.py']",['4fba5514aba1e9d29e539f205b835775ba253f27'],6,12,18,5,0.5,0.5,0.0
70feea2c903462f68782c6da2e69bf1c64b396d2,Tweaking heartbeat timeout test to not fail with protocol v2,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-15 18:27:10-05:00,18000,2016-09-15 18:27:10-05:00,18000,True,False,['test_connection.py'],['4fba5514aba1e9d29e539f205b835775ba253f27'],2,2,4,1,,,
8b3cc90487749794fb3c2e96924a2697a8a2ab51,"correct from_binary for (mostly unused) cqltypes

runtime error if C* ever sends back a FrozenType or ReversedType",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-09-16 13:08:02-05:00,18000,2016-09-16 13:08:02-05:00,18000,True,False,['cqltypes.py'],['70feea2c903462f68782c6da2e69bf1c64b396d2'],2,2,4,1,,,
f0110ba4aa894a535c167d1a64eeda08bfd289a9,"remove todo from exception message

not linking because there's no good way to link to latest",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-09-16 13:10:36-05:00,18000,2016-09-16 13:10:36-05:00,18000,True,False,['cluster.py'],['8b3cc90487749794fb3c2e96924a2697a8a2ab51'],1,1,2,1,,,
47775aba781e289e700b36e222cbc088baf0aee8,typo,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-09-16 15:50:12-05:00,18000,2016-09-16 15:50:12-05:00,18000,True,False,['cluster.py'],['f0110ba4aa894a535c167d1a64eeda08bfd289a9'],1,1,2,1,,,
ab37ae0f15d9689b516c9cd0a5ed637362209019,Updating build.yaml for schedules,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-19 16:16:13-05:00,18000,2016-09-19 16:16:13-05:00,18000,True,False,['build.yaml'],['47775aba781e289e700b36e222cbc088baf0aee8'],0,6,6,1,,,
9e7031162474f351dcbfaa7559227a29ca8305fc,Fixing schedules typo,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-19 16:28:24-05:00,18000,2016-09-19 16:28:24-05:00,18000,True,False,['build.yaml'],['ab37ae0f15d9689b516c9cd0a5ed637362209019'],1,1,2,1,,,
d0e7f4bbc51e2a5a2b9975ebbd1448bb5c954d37,Various test fixes,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-20 12:25:08-05:00,18000,2016-09-20 12:25:08-05:00,18000,True,False,"['utils.py', 'test_metadata.py']",['9e7031162474f351dcbfaa7559227a29ca8305fc'],3,6,9,2,0.3333333333333333,0.0,1.0
f19ae5a0af7dece1f19e18669d3a198fb61dcc66,Various test timing fixes,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-21 13:46:21-05:00,18000,2016-09-21 13:46:21-05:00,18000,True,False,"['test_consistency.py', 'test_metadata.py', 'test_query.py', 'test_query_paging.py']",['d0e7f4bbc51e2a5a2b9975ebbd1448bb5c954d37'],12,12,24,4,,,
a47a06895dea0d5b18796bed0a1aafec00ba5d84,Various test fixes,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-22 15:18:04-05:00,18000,2016-09-22 15:18:04-05:00,18000,True,False,"['test_consistency.py', 'test_cluster.py', 'test_metrics.py', 'test_query.py']",['f19ae5a0af7dece1f19e18669d3a198fb61dcc66'],3,10,13,4,0.3333333333333333,1.0,1.0
9fd889501e022257b67cfa82ef5a32a5d673d94c,Moving contact_points param to constructor for ConnectivityTest,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-22 16:35:03-05:00,18000,2016-09-22 16:35:03-05:00,18000,True,False,['test_consistency.py'],['a47a06895dea0d5b18796bed0a1aafec00ba5d84'],2,2,4,1,,,
6a7eb853edcdd23ac9751e76f6e5972443817465,Tweaking ConnectivityTest,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-23 16:10:55-05:00,18000,2016-09-23 16:10:55-05:00,18000,True,False,['test_consistency.py'],['9fd889501e022257b67cfa82ef5a32a5d673d94c'],6,19,25,1,0.6,1.0,1.0
b862c2a4fc23aa50f746643521e46752cf81632f,"Tweaking ip trace timeout, and adding wiggle room to large row test",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-09-26 16:54:38-05:00,18000,2016-09-26 16:54:38-05:00,18000,True,False,"['test_large_data.py', 'test_query.py']",['6a7eb853edcdd23ac9751e76f6e5972443817465'],2,2,4,2,,,
8289de0b3858917e47e479dbc98dd9b4073f577e,Ensure we can connect to a Cassandra node version > 3,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-09-29 15:10:04-04:00,14400,2016-09-29 15:10:04-04:00,14400,True,False,['metadata.py'],['b862c2a4fc23aa50f746643521e46752cf81632f'],1,2,3,1,1.0,1.0,0.0
cf633e8f12123395fc3e772ad08838bd114f6d7e,Don't replace custom query handler if graph is being used,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-10-06 16:28:06-05:00,18000,2016-10-06 16:28:06-05:00,18000,True,False,['__init__.py'],['8289de0b3858917e47e479dbc98dd9b4073f577e'],2,4,6,1,0.0,0.0,0.0
a6a9f79358d65464e473c964cb0eb4c47f3dcc73,update custom payload integration tests for PR #655,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-10-07 11:40:29-05:00,18000,2016-10-07 11:40:29-05:00,18000,True,False,['test_custom_protocol_handler.py'],['ba6f0e8ef423ac9affe75d54ec5d41dee519aa21'],2,3,5,1,1.0,1.0,0.0
32b51cef1d1c7c42fd572e261124a360a970c367,Fixup attribute name on cluster reconnect,"James, Laurie",lauriej@last.fm,"James, Laurie",lauriej@last.fm,2016-10-20 11:53:36+01:00,-3600,2016-10-20 11:53:36+01:00,-3600,True,False,['cluster.py'],['c478c1e6a9e3f6c97ab30211c6b6225f73d9e2ad'],1,1,2,1,,,
4f00f5fada77ec2b33bdda6af01c6d4895555046,Freeze Cython dep,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-10-26 10:01:34-04:00,14400,2016-10-26 10:01:34-04:00,14400,True,False,"['setup.py', 'test-requirements.txt']",['8aa09c5fab6b97aa355baaa248d0df81a8e9d42e'],3,3,6,2,,,
9b78c6d86c994341ed409b931667f7c9dd36a2b9,changelog update,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-10-26 11:32:47-04:00,14400,2016-10-26 11:32:47-04:00,14400,True,False,"['CHANGELOG.rst', '__init__.py']",['4f00f5fada77ec2b33bdda6af01c6d4895555046'],1,9,10,2,,,
7165b46bb292d272c429a8e873c3ddbba55dd1da,Disable link check for vcpython link since it always erroneously fails,Sandeep Tamhankar,sandeep.tamhankar@datastax.com,Sandeep Tamhankar,sandeep.tamhankar@datastax.com,2016-10-26 17:24:44-07:00,25200,2016-10-26 17:24:44-07:00,25200,True,False,['docs.yaml'],['9b78c6d86c994341ed409b931667f7c9dd36a2b9'],0,4,4,1,,,
cb532caed813827c42cc2adce7f73f53fa781341,Quote index name in cql string where necessary,Sam Tunnicliffe,sam@beobal.com,Sam Tunnicliffe,sam@beobal.com,2016-10-27 08:32:20+01:00,-3600,2016-10-27 09:22:19+01:00,-3600,True,False,['metadata.py'],['9b78c6d86c994341ed409b931667f7c9dd36a2b9'],2,2,4,1,,,
5827fe7ce6b136c6f9675329a3f5c68617dcef84,12838: expand QUERY/EXECUTE/BATCH flags from [byte] to [int],Stefania Alborghetti,stefania.alborghetti@datastax.com,Stefania Alborghetti,stefania.alborghetti@datastax.com,2016-10-27 10:11:19+08:00,-28800,2016-10-28 13:45:31+08:00,-28800,True,False,['protocol.py'],['9b78c6d86c994341ed409b931667f7c9dd36a2b9'],3,15,18,1,0.0,0.0,0.0
527ea3ed85c0e65a33d35a075cfb3ff0392dc093,"Test quoted index

PYTHON-616",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-10-28 09:23:40-05:00,18000,2016-10-28 09:23:40-05:00,18000,True,False,['test_metadata.py'],['cb532caed813827c42cc2adce7f73f53fa781341'],0,4,4,1,0.0,1.0,1.0
5d7d880f7cc3b55a54afbd3e9c8d2afcbb8ac7a6,"Add interfaces for defining and registering table extensions

Cassandra 3.0+",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-11-02 13:34:33-05:00,18000,2016-11-02 13:34:33-05:00,18000,True,False,"['metadata.py', 'test_metadata.py']",['19c16034934f08f7d3ee7bdd68f96ea84593eda4'],3,117,120,2,0.0,0.7288135593220338,0.8305084745762712
c47a8f4ab2e7e55615b8042a135eec3ebbc189d5,"escape literal asterisks in docstring

PYTHON-645",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2016-11-08 12:08:09-05:00,18000,2016-11-08 12:08:09-05:00,18000,True,False,['query.py'],['c3fbefbf001c8c10d88b741069422d374f0edbb1'],2,2,4,1,,,
6760623c1ce3c9b4619c25d03bd5e45b872d8d6c,Use CCM fork that is compatible with py3,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-11-09 11:19:29-06:00,21600,2016-11-09 11:19:29-06:00,21600,True,False,['build.yaml'],['c3fbefbf001c8c10d88b741069422d374f0edbb1'],1,1,2,1,,,
806e0b0021ca283842ea7ce48f27305725658e3b,Fixing issue where compaction options were not honored on AlterTable with cqlengine,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-11-10 15:23:34-06:00,21600,2016-11-10 15:23:34-06:00,21600,True,False,['metadata.py'],['d767887317060c3d783c1eaabe83975b8ba5185d'],0,1,1,1,0.0,0.0,1.0
74331d860adcac23f5845b96cbeaa4504f9ad851,"PYTHON-468, adding integration test",GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-11-14 17:23:30-06:00,21600,2016-11-14 17:23:30-06:00,21600,True,False,['test_query.py'],['806e0b0021ca283842ea7ce48f27305725658e3b'],0,32,32,1,0.058823529411764705,1.0,1.0
be63ec7152836c8fac55f421b1b7763ddeed9bfa,consistent error message on deserialization failure,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-11-22 15:27:15-05:00,18000,2016-11-22 15:27:15-05:00,18000,True,False,"['obj_parser.pyx', 'protocol.py', 'row_parser.pyx']",['74331d860adcac23f5845b96cbeaa4504f9ad851'],4,19,23,3,,,
fd046f69a0f038925e724a2efe20640bbd3fcb11,Removing pypy3 from unit tests due to pip incompatibility,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-11-23 16:31:58-06:00,21600,2016-11-23 16:31:58-06:00,21600,True,False,"['.travis.yml', 'tox.ini']",['fd9d89f5323b9f49f7fbf269a552fc657884f25a'],2,1,3,2,,,
68fe1c518bfc2e5bff8af86e0590c3a8d0a3a6e5,Add a debug message when the connection heartbeat failed due to a closed connection,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-11-28 15:39:16-05:00,18000,2016-11-28 15:39:16-05:00,18000,True,False,['connection.py'],['fd046f69a0f038925e724a2efe20640bbd3fcb11'],0,2,2,1,0.0,0.0,1.0
ef23ec6ec44439dbb3a35fb2a764e1a4c3032253,Swapping ccm version back to pcmanus,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-11-28 16:38:48-06:00,21600,2016-11-28 16:38:48-06:00,21600,True,False,['build.yaml'],['fd046f69a0f038925e724a2efe20640bbd3fcb11'],1,1,2,1,,,
a74d273d9dc3cdb60aea88b04614a0599fa5be91,Swapping ccm source to master branch,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-11-29 10:09:59-06:00,21600,2016-11-29 10:09:59-06:00,21600,True,False,['build.yaml'],['ef23ec6ec44439dbb3a35fb2a764e1a4c3032253'],1,1,2,1,,,
1de822975aa7858341e7b93c23f3c3f80a3cc1c5,fix table extension test manipulating schema meta,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-11-29 15:11:37-06:00,21600,2016-11-29 15:11:37-06:00,21600,True,False,['test_metadata.py'],['a74d273d9dc3cdb60aea88b04614a0599fa5be91'],2,2,4,1,,,
7f7614dbbc7799e528ac67cb30e87e069d2ad384,docstring tweak,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-11-30 09:29:01-06:00,21600,2016-11-30 09:29:01-06:00,21600,True,False,['cqltypes.py'],['1de822975aa7858341e7b93c23f3c3f80a3cc1c5'],2,2,4,1,,,
e989d398a97f2047e236152fcb072472c0818816,Py3 fix related to variable access in a except block,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2016-11-30 15:09:10-05:00,18000,2016-11-30 15:09:10-05:00,18000,True,False,['protocol.py'],['7f7614dbbc7799e528ac67cb30e87e069d2ad384'],7,8,15,1,0.0,0.0,0.0
94b7820d4133d87cffd73eafbe6fbee97b79db74,Send a flags field (value 0) in PREPARE messages in v5.,Sandeep Tamhankar,sandeep.tamhankar@datastax.com,Sandeep Tamhankar,sandeep.tamhankar@datastax.com,2016-12-08 11:13:22-08:00,28800,2016-12-08 11:13:22-08:00,28800,True,False,['protocol.py'],['e932c93e39e4c7b2cc3bf7b2427f00f2177479df'],0,3,3,1,1.0,1.0,0.0
f9e4e8e189e3ea27b6829b0572c66e81af65a43f,"Send a flags field (value 0) in PREPARE messages in v5.
* Write flags as a 32-bit unsigned int, not int.",Sandeep Tamhankar,sandeep.tamhankar@datastax.com,Sandeep Tamhankar,sandeep.tamhankar@datastax.com,2016-12-09 09:10:25-08:00,28800,2016-12-09 09:10:25-08:00,28800,True,False,['protocol.py'],['94b7820d4133d87cffd73eafbe6fbee97b79db74'],3,7,10,1,1.0,1.0,1.0
ae18522ef2dfcc3688253501d131dee85ccbadb2,"Send a flags field (value 0) in PREPARE messages in v5.
* Write flags as a 32-bit unsigned int, not int.
* Forgot to import the uint32_pack function from the marshal package.",Sandeep Tamhankar,sandeep.tamhankar@datastax.com,Sandeep Tamhankar,sandeep.tamhankar@datastax.com,2016-12-09 10:54:37-08:00,28800,2016-12-09 10:54:37-08:00,28800,True,False,['protocol.py'],['f9e4e8e189e3ea27b6829b0572c66e81af65a43f'],1,1,2,1,,,
5a6af1d64b3afa882b7a9abfbbf0176f80c8b660,Avoid using of nonexistent prepared statement in ResponseFuture when handle succesful response to prepare a statement,a-lst,alstpostbox@gmail.com,andrey.istochkin,andrey.istochkin@acronis.com,2016-11-17 20:02:58+00:00,0,2016-12-10 12:28:28+03:00,-10800,True,False,"['cluster.py', 'test_response_future.py']",['e932c93e39e4c7b2cc3bf7b2427f00f2177479df'],4,23,27,2,0.9230769230769231,0.9230769230769231,0.9230769230769231
2e28fc27c9c218d1e580ba9277f12f011b9d8bb7,"PYTHON-649 (#677)

Adds a test to reproduce PYTHON-649 and fixes it.

Also adds docs and tests for some existing connection-management code.",Jim Witschey,jim.witschey@gmail.com,GitHub,noreply@github.com,2016-12-19 10:48:24-05:00,18000,2016-12-19 10:48:24-05:00,18000,True,False,"['connection.py', 'connections.rst', 'test_connections.py', 'test_connection.py', 'test_udt.py']",['3bc5adc5d42baecd751a320aede8136cbede05f3'],8,188,196,5,0.2222222222222222,0.49206349206349204,0.5396825396825397
47863c73886ba2dce2fc4a92bdc90159ab053d11,remove whitespace from end of test_cluster,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2016-12-19 10:10:53-05:00,18000,2016-12-19 10:58:16-05:00,18000,True,False,['test_cluster.py'],['2e28fc27c9c218d1e580ba9277f12f011b9d8bb7'],5,0,5,1,,,
a2d082986d2d14166a7cbcd7837f6678a1c561d0,test for and fix PYTHON-669,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2016-12-14 09:42:38-05:00,18000,2016-12-19 17:51:22-05:00,18000,True,False,"['cluster.py', 'test_cluster.py']",['47863c73886ba2dce2fc4a92bdc90159ab053d11'],3,41,44,2,0.0,0.0,1.0
96e7767af4f5aea2aa3be47191831c0a2e542947,Adding test for PYTHON-631,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-12-20 14:00:55-06:00,21600,2016-12-20 14:00:55-06:00,21600,True,False,['test_query.py'],['2e28fc27c9c218d1e580ba9277f12f011b9d8bb7'],4,1,5,1,,,
f06267a09a40f1cdd28ea3bd63050bac5e90d9d8,ProtocolVersion 'enum',Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-12-21 11:42:30-06:00,21600,2016-12-21 11:42:30-06:00,21600,True,False,"['__init__.py', 'cluster.py', 'connection.py', 'protocol.py', 'cassandra.rst', 'test_failure_types.py', 'test_cluster.py', 'test_marshalling.py']",['2e28fc27c9c218d1e580ba9277f12f011b9d8bb7'],62,81,143,8,0.0,0.0,1.0
7a0b846a112433259fb83c1be65e477f8cf4d074,Updating tests for PYTHON-649,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-12-21 17:12:51-06:00,21600,2016-12-21 17:13:11-06:00,21600,True,False,['test_connections.py'],['96e7767af4f5aea2aa3be47191831c0a2e542947'],1,30,31,1,1.0,1.0,1.0
0deabed01ff8841f369947d4a3bb96bf41ef802b,fix sorted reverse keyword,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2016-12-22 13:27:13-06:00,21600,2016-12-22 13:27:13-06:00,21600,True,False,['cluster.py'],['f2479167ede63493d2cfccf83415f57dacc9ed87'],1,1,2,1,,,
b30f7c95d4863f422b1d7234fc7c0671491d12df,Removing debug statement from test.,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2016-12-22 14:20:38-06:00,21600,2016-12-22 14:20:38-06:00,21600,True,False,['test_connections.py'],['0deabed01ff8841f369947d4a3bb96bf41ef802b'],1,0,1,1,0.0,0.0,0.0
1f1b30fbc5f72c539413cc78799ac06e1b11f2f6,fix link markup,Adam Holmberg,Adam.Holmberg@datastax.com,GitHub,noreply@github.com,2017-01-11 11:15:59-06:00,21600,2017-01-11 11:15:59-06:00,21600,True,False,['CONTRIBUTING.rst'],['575f48142360cf3827df52326a2ce513525e6cd9'],1,1,2,1,,,
8288d667c6b324b4ed210df8bb463e58c89cf2e4,another link fixup,Adam Holmberg,Adam.Holmberg@datastax.com,GitHub,noreply@github.com,2017-01-11 11:17:25-06:00,21600,2017-01-11 11:17:25-06:00,21600,True,False,['CONTRIBUTING.rst'],['1f1b30fbc5f72c539413cc78799ac06e1b11f2f6'],1,1,2,1,,,
08ba4a5d542c2dbb57380790349b18407fec24cd,Added some minor comments to README-dev.srt,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-01-12 11:10:38-05:00,18000,2017-01-12 11:10:38-05:00,18000,True,False,['README-dev.rst'],['8288d667c6b324b4ed210df8bb463e58c89cf2e4'],0,10,10,1,,,
7aeae52783af0d41ec04681e95da2a8fcac1c750,Acknowledging comment on the ccm command,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-01-12 15:02:44-05:00,18000,2017-01-12 15:02:44-05:00,18000,True,False,['README-dev.rst'],['08ba4a5d542c2dbb57380790349b18407fec24cd'],1,1,2,1,,,
cfed17f3574b77c1e5315b8f1034e1f61ad961c6,initial vints_unpack,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-01-13 13:10:34-05:00,18000,2017-01-13 13:10:34-05:00,18000,True,False,"['cqltypes.py', 'marshal.py']",['fd046f69a0f038925e724a2efe20640bbd3fcb11'],1,30,31,2,1.0,1.0,1.0
aa11b5720b6f54fbde4a2c66ac621485f7ceb404,fixed vints_unpack,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-01-13 14:23:55-05:00,18000,2017-01-13 14:23:55-05:00,18000,True,False,['marshal.py'],['cfed17f3574b77c1e5315b8f1034e1f61ad961c6'],8,20,28,1,0.0,1.0,1.0
f3612d41aab22f3ee4580eb8eeca1940d8972709,"make table extensions for for views, too

PYTHON-682",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2017-01-13 16:44:34-06:00,21600,2017-01-13 16:44:34-06:00,21600,True,False,"['metadata.py', 'test_metadata.py']",['ab9bafa5c0f8d3a5e89a9b3a14516e6ebe2de6e2'],29,76,105,2,0.02857142857142857,0.7428571428571429,0.9714285714285714
6f30ba392b8b2e995b24716c30be11e46d207787,Add vints_pack,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-01-15 17:03:39-05:00,18000,2017-01-15 17:03:39-05:00,18000,True,False,['marshal.py'],['aa11b5720b6f54fbde4a2c66ac621485f7ceb404'],0,31,31,1,0.09090909090909091,1.0,1.0
f2039b751a3558aa88941268392bf139229e0f46,py3 fix,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-01-15 17:56:29-05:00,18000,2017-01-15 17:56:29-05:00,18000,True,False,['marshal.py'],['6f30ba392b8b2e995b24716c30be11e46d207787'],2,10,12,1,1.0,1.0,1.0
8b106c31fd4f214dd15018adc7b24648cfd6b104,"Revert ""Only start timer if request is actually issued.""

This reverts commit 1a01f118240e5d9af009653cfff80cdb67ee099 for
PYTHON-644. The ""create timer on request"" strategy can let timers leak.",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-01-16 12:17:05-05:00,18000,2017-01-16 13:41:52-05:00,18000,True,False,['cluster.py'],['ab9bafa5c0f8d3a5e89a9b3a14516e6ebe2de6e2'],6,2,8,1,0.0,1.0,0.0
18aa88112eb7ee9d9b711c391c2361b35357e7fb,Add util.Duration and its string encoding,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-01-16 14:53:28-05:00,18000,2017-01-16 14:53:28-05:00,18000,True,False,"['cqltypes.py', 'encoder.py', 'marshal.py', 'util.py']",['f2039b751a3558aa88941268392bf139229e0f46'],9,65,74,4,0.9666666666666667,1.0,0.8333333333333334
52120b83efe049c6eb76d6fd90b3334a0fd4ce8d,Add DurationType in type_codes,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-01-16 15:00:20-05:00,18000,2017-01-16 15:00:20-05:00,18000,True,False,"['protocol.py', 'type_codes.py']",['18aa88112eb7ee9d9b711c391c2361b35357e7fb'],1,7,8,2,,,
c49421b077dac5a5dce85c1f864dd6f25a0512f6,review fixes,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-01-17 08:22:44-05:00,18000,2017-01-17 08:22:44-05:00,18000,True,False,"['encoder.py', 'util.py']",['52120b83efe049c6eb76d6fd90b3334a0fd4ce8d'],10,3,13,2,0.3333333333333333,0.0,0.0
8aeb926644bcc368d446feee4b3a4e55dd22d673,"cancel timers before defuncting connection

This allows us to revert some of the fix to PYTHON-367 without the timer
heap growing out of control as described on that ticket. We cancel
before defuncting to ensure that the timer doesn't hang around while
running callbacks. Between this change and the delegation of callbacks
to a secondary thread (see commit 51923029, part of the original
PYTHON-367 fix), this commit should not cause a regression on
PYTHON-367.

Note that we don't cancel timers before defuncting and retrying -- we're
not done with the logical request and still want that timer to fire.

Now that timers are started on ResponseFuture initialization, we
actually use the value of timeout in the tests, so we no longer pass
that argument, allowing the test to use the default value.",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-01-16 16:05:01-05:00,18000,2017-01-17 12:40:51-05:00,18000,True,False,"['cluster.py', 'test_cluster.py']",['8b106c31fd4f214dd15018adc7b24648cfd6b104'],4,5,9,2,0.0,0.0,0.0
a471c8b6939aeb5b7aa5d4aecab1c1db32989ea5,no more validation required,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-01-17 16:24:33-05:00,18000,2017-01-17 16:24:33-05:00,18000,True,False,"['cqltypes.py', 'util.py']",['c49421b077dac5a5dce85c1f864dd6f25a0512f6'],18,2,20,2,0.0,0.0,0.125
eef33b0a20f9c48c75766b3b8432d9be3653d659,Test additions for PYTHON-655,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2017-01-18 11:28:00-06:00,21600,2017-01-18 11:28:00-06:00,21600,True,False,"['__init__.py', 'datatype_utils.py', 'test_types.py', 'test_udts.py', 'test_types.py', 'test_util_types.py']",['13450dee94ffc60d9d345c599acad74529bc7387'],16,85,101,6,0.2127659574468085,0.9148936170212766,1.0
65de40859aafc2b7c24f56aaf30513af67a7941b,"PYTHON-673: prevent socket-leaking race...

... between init and shutdown",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-01-18 17:27:44-05:00,18000,2017-01-18 17:28:48-05:00,18000,True,False,['cluster.py'],['ab9bafa5c0f8d3a5e89a9b3a14516e6ebe2de6e2'],0,7,7,1,1.0,1.0,1.0
d9667444520c2f3a2d61ccab7d93d7d70eece577,Removed support for python 2.6,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-01-18 18:02:19-05:00,18000,2017-01-18 18:02:19-05:00,18000,True,False,"['.travis.yml', 'README-dev.rst', 'README.rst', 'marshal.py', 'setup.py', 'test_marshalling.py', 'tox.ini']",['eef33b0a20f9c48c75766b3b8432d9be3653d659'],23,5,28,7,0.09090909090909091,0.09090909090909091,0.0
05dbebc1a44e43d47ba939ae78926547e502b814,"add shuffle_replicas config option

PYTHON-643",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-01-19 16:13:36-05:00,18000,2017-01-19 16:13:36-05:00,18000,True,False,['policies.py'],['9b8f7ef8b1a1945625dec43ef278e9caf9f9a5f8'],2,9,11,1,0.3333333333333333,0.3333333333333333,0.0
8ec890be856be74ba4a09e329de6f3800cdb4e19,Fixing configuration issue with ssl test,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2017-01-19 16:08:02-06:00,21600,2017-01-19 16:08:02-06:00,21600,True,False,['test_ssl.py'],['9b8f7ef8b1a1945625dec43ef278e9caf9f9a5f8'],12,14,26,1,1.0,1.0,1.0
7616fbb9f66a7ff937e523151601e65c1eddb357,small documentation improvement,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-01-19 16:59:46-05:00,18000,2017-01-19 17:09:36-05:00,18000,True,False,['policies.py'],['05dbebc1a44e43d47ba939ae78926547e502b814'],6,8,14,1,,,
6598eabe722e3d3dd0eb02c28c52405f3c8d78d4,add smoke test for BatchStatement.__len__,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-01-20 10:32:55-05:00,18000,2017-01-20 10:32:55-05:00,18000,True,False,['test_query.py'],['af0b853c9bdf98e8aab1fe2801dcf1cbf0ddf3fd'],0,7,7,1,1.0,1.0,1.0
3298ab3f492650968fdde2ae558326eef9691560,add regression tests for PYTHON-692,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-01-20 16:44:47-05:00,18000,2017-01-20 16:44:47-05:00,18000,True,False,['test_connection.py'],['797008d83b8765a43a64a66614e7d0e6cf7a515d'],0,6,6,1,1.0,1.0,1.0
f9ef412e120dc82569232b938ff666b0118ce245,"remove not-None restriction on hosts

PYTHON-692",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-01-20 17:01:19-05:00,18000,2017-01-20 17:02:59-05:00,18000,True,False,['connection.py'],['3298ab3f492650968fdde2ae558326eef9691560'],7,2,9,1,1.0,1.0,1.0
6957386f11d03bdf5037bc7b3e31246b0b72a440,add None example to mapper example,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-01-23 10:26:43-05:00,18000,2017-01-23 11:08:18-05:00,18000,True,False,['example_mapper.py'],['797008d83b8765a43a64a66614e7d0e6cf7a515d'],0,3,3,1,0.0,0.0,1.0
d14a270446794ecfb94b24b61203e712706e8201,document None behavior on CQL models,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-01-23 10:58:17-05:00,18000,2017-01-23 11:08:18-05:00,18000,True,False,['models.py'],['6957386f11d03bdf5037bc7b3e31246b0b72a440'],2,4,6,1,,,
5c1e1a6de7130b9386c27f16773504a4b720d687,Added some test for shuffle_replicas config option,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-01-24 15:57:47-05:00,18000,2017-01-26 15:34:56-05:00,18000,True,False,"['test_loadbalancingpolicies.py', 'test_policies.py']",['7616fbb9f66a7ff937e523151601e65c1eddb357'],0,146,146,2,0.0,1.0,1.0
bca421dca6c2f888489fcada2a573a63441598ff,Added some check to the existing tests for the cqlengine connection,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-01-25 10:50:43-05:00,18000,2017-01-26 15:47:28-05:00,18000,True,False,['test_connection.py'],['f9ef412e120dc82569232b938ff666b0118ce245'],0,2,2,1,1.0,1.0,1.0
2ab7e14885f2a1d21de9929f52a313d3d6426ad2,Fixed some tests in jenkins,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-01-25 18:02:42-05:00,18000,2017-01-26 16:19:31-05:00,18000,True,False,"['test_cluster.py', 'test_metadata.py', 'test_metrics.py', 'test_query.py']",['797008d83b8765a43a64a66614e7d0e6cf7a515d'],3,9,12,4,0.0,1.0,1.0
802663acb42526a2cb3769478e832704574fbfea,Fixed function name change in ccmlib,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-01-27 10:27:58-05:00,18000,2017-01-27 10:27:58-05:00,18000,True,False,['test_ipv6.py'],['c18b15ac5fcb8a228839d23ca61584be629e7efc'],1,1,2,1,,,
bc213bc07ff95a201d5c02685f2c12a7b4b7f2cd,Fixed some tests to make sure there is a shuffle going on,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-01-27 17:43:33-05:00,18000,2017-01-27 17:43:33-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['5c1e1a6de7130b9386c27f16773504a4b720d687'],12,42,54,1,0.0,0.0,1.0
db64bbabec234707a2ceeca9017254a3997ea409,avoid beta protocols when downgrading and added some protocol checks,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-02-02 10:16:32-05:00,18000,2017-02-02 10:16:32-05:00,18000,True,False,"['__init__.py', 'cluster.py', 'protocol.py']",['508ae46585cada85257ddee47945e784d5ba3d73'],15,46,61,3,1.0,1.0,1.0
530173937beccdc85667e3fa2d39da44b55c9217,fixing node startup timing issue in consistency tests,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2017-02-03 12:05:34-06:00,21600,2017-02-03 12:05:34-06:00,21600,True,False,['utils.py'],['53662ab31879b0ad671d6b3dc94e330f26921525'],1,2,3,1,1.0,1.0,1.0
ec45b8c827db7440442a7c1a53d5e988fab47ff7,Adding binary port to bootstrap method,GregBestland,Greg.Bestland@datastax.com,GregBestland,Greg.Bestland@datastax.com,2017-02-03 17:16:26-06:00,21600,2017-02-03 17:16:26-06:00,21600,True,False,['utils.py'],['530173937beccdc85667e3fa2d39da44b55c9217'],0,1,1,1,0.0,1.0,0.0
e821c5e7a6ed0bc9e8cec1f248401b4727bc809e,let users specify Cython version,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-01-23 12:27:58-05:00,18000,2017-02-09 10:30:50-05:00,18000,True,False,['setup.py'],['797008d83b8765a43a64a66614e7d0e6cf7a515d'],1,5,6,1,0.0,0.0,1.0
105b750eb1145de24e6742ea5bdba608f482ce3a,add general semantics section to FAQ,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-09 12:21:28-05:00,18000,2017-02-09 12:39:09-05:00,18000,True,False,['faq.rst'],['d14a270446794ecfb94b24b61203e712706e8201'],0,17,17,1,,,
e9c56dbfab1e65c5b2c5c3922870c2c50e7130b4,factor out setup code,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-09 13:43:17-05:00,18000,2017-02-09 13:43:17-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['bc213bc07ff95a201d5c02685f2c12a7b4b7f2cd'],10,10,20,1,1.0,1.0,0.0
2d761f927828214d1ee7827037b689bbe869a48a,pull out query loop logic,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-09 14:02:17-05:00,18000,2017-02-09 14:02:17-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['e9c56dbfab1e65c5b2c5c3922870c2c50e7130b4'],32,17,49,1,1.0,1.0,0.0
785b46a8ffb1c15050d4603622db3627de14e329,simplify different-order checking,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-09 14:13:00-05:00,18000,2017-02-09 14:13:00-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['2d761f927828214d1ee7827037b689bbe869a48a'],13,12,25,1,1.0,1.0,1.0
64af6acefb09926e60bc3289a45ecb8e336678a8,rename order-change-checking method,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-09 14:17:53-05:00,18000,2017-02-09 14:17:53-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['785b46a8ffb1c15050d4603622db3627de14e329'],3,3,6,1,,,
763c1a3c9f2211860b247e4b39e2d61e02dee5c6,simplify loop logic,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-09 14:28:40-05:00,18000,2017-02-09 14:28:40-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['64af6acefb09926e60bc3289a45ecb8e336678a8'],7,6,13,1,1.0,0.0,1.0
fb413ca08eb56290abe804036bbb65d38b30a904,shorten line,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-09 14:39:34-05:00,18000,2017-02-09 14:39:34-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['763c1a3c9f2211860b247e4b39e2d61e02dee5c6'],1,3,4,1,1.0,1.0,0.0
b934c303e54b640798754d1cc4d1bfbd057dd321,move utils so tests are together,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-09 16:05:33-05:00,18000,2017-02-09 16:05:33-05:00,18000,True,False,['test_loadbalancingpolicies.py'],['fb413ca08eb56290abe804036bbb65d38b30a904'],31,31,62,1,,,
8aa1f24ee5edf410141db36c122ef7d4d8adaf3d,Fixed the profile timeout,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-02-06 12:09:44-05:00,18000,2017-02-10 08:32:48-05:00,18000,True,False,"['__init__.py', '__init__.py', 'test_connection.py', 'test_named.py', 'test_connections.py', 'test_schema.py', 'test_cluster.py', 'test_connection.py', 'test_custom_protocol_handler.py', 'test_cython_protocol_handlers.py', 'test_metadata.py', 'test_metrics.py']",['424a5fc1738b062a73c4ce56ee72db3991bad0db'],16,50,66,12,0.11538461538461539,0.9615384615384616,1.0
00ca39714b4543a8a50850e70e016d1d8b70cff4,Fixed timer logic to behave properly with ConstantSpeculativeExecutionPolicy,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-02-09 17:48:27-05:00,18000,2017-02-10 08:32:48-05:00,18000,True,False,['cluster.py'],['8aa1f24ee5edf410141db36c122ef7d4d8adaf3d'],2,2,4,1,,,
0c9cdb98f0841cceaa2cc5a135ad41b5a5f890ce,factor out common shuffle unit test logic,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-09 16:23:53-05:00,18000,2017-02-13 10:44:37-05:00,18000,True,False,['test_policies.py'],['b934c303e54b640798754d1cc4d1bfbd057dd321'],32,45,77,1,1.0,0.0,0.0
1e3c90a867d590805178aa42c3a1672da95830c0,Fixed some docs,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-02-13 12:53:47-05:00,18000,2017-02-13 12:53:47-05:00,18000,True,False,"['test_loadbalancingpolicies.py', 'test_policies.py']",['0c9cdb98f0841cceaa2cc5a135ad41b5a5f890ce'],11,2,13,2,,,
7d67633169dd4e71081627c4f209bf45acf41498,Added check so session and host are not both arguments in register_connection,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-02-13 16:41:29-05:00,18000,2017-02-13 16:41:29-05:00,18000,True,False,"['connection.py', 'test_connections.py']",['0085a7466e7c733aa5a943f4e147fb22f4a16e61'],3,24,27,2,0.9090909090909091,0.9090909090909091,0.9090909090909091
14093fca2216fca0d7c31af70f193b2291776683,Fixed timer logic to behave properly with ConstantSpeculativeExecutionPolicy,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-02-09 17:48:27-05:00,18000,2017-02-14 12:14:53-05:00,18000,True,False,['cluster.py'],['7d67633169dd4e71081627c4f209bf45acf41498'],2,2,4,1,,,
0cee87569686200395ec17f71537a8f49c5b99d1,implement and test MonotonicTimestampGenerator,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2016-12-05 14:41:03-05:00,18000,2017-02-14 12:58:14-05:00,18000,True,False,"['cluster.py', 'timestamps.py', 'cluster.rst', 'timestamps.rst', 'test_timestamps.py']",['e989d398a97f2047e236152fcb072472c0818816'],2,323,325,5,0.946969696969697,0.946969696969697,0.6590909090909091
0c259705fd7e3f722f6d003f90a9c58097bbeb27,"Fix, test, and document for monotonic timestamps",bjmb,jaume.marhuenda@datastax.com,Jim Witschey,jim.witschey@gmail.com,2017-01-23 16:28:23-05:00,18000,2017-02-14 12:59:03-05:00,18000,True,False,"['timestamps.py', 'test_timestamps.py']",['0cee87569686200395ec17f71537a8f49c5b99d1'],12,116,128,2,0.20833333333333334,1.0,1.0
2bbe1b0d6648a7e8f18a19a154cdfc7099b52a49,Fixed for a connection closed during initial handshake,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-02-14 10:37:44-05:00,18000,2017-02-14 13:44:54-05:00,18000,True,False,['asyncorereactor.py'],['7d67633169dd4e71081627c4f209bf45acf41498'],0,5,5,1,0.0,1.0,1.0
aeb71aad7769efd563f115bf69a8f7e585564fd6,Fix RuntimeError caused by change dict size during iteration,Shevchenko Vitaliy,vetal4444@gmail.com,Shevchenko Vitaliy,vetal4444@gmail.com,2017-02-15 14:54:23+02:00,-7200,2017-02-15 14:54:23+02:00,-7200,True,False,['cluster.py'],['37eef4b36a9e96562549f093a66a3811eb71ac04'],1,1,2,1,,,
ee677dbe8c5494e928d7d1ef6147aec18afc096f,3.8.0 CHANGELOG,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-16 13:58:19-05:00,18000,2017-02-16 13:58:19-05:00,18000,True,False,['CHANGELOG.rst'],['37eef4b36a9e96562549f093a66a3811eb71ac04'],0,36,36,1,,,
e9391eb0f3f3660c4903468378629faa24ff45ee,set defaults for timestamp generator logging,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-21 11:34:05-05:00,18000,2017-02-21 11:34:05-05:00,18000,True,False,['timestamps.py'],['ee677dbe8c5494e928d7d1ef6147aec18afc096f'],2,4,6,1,,,
03a2636f33b9e8ea2d704ba16914b766b135f7e0,add documentation for Cluster.timestamp_generator,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-21 13:41:59-05:00,18000,2017-02-21 13:41:59-05:00,18000,True,False,"['cluster.py', 'cluster.rst']",['62852296c8aba3f7c115c3ae655d5f4edc445928'],0,13,13,2,,,
0cc95ace265ffe227b87aea315f29c61bf82624e,3.8.0 version,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-21 14:34:21-05:00,18000,2017-02-21 14:34:21-05:00,18000,True,False,"['__init__.py', 'docs.yaml']",['03a2636f33b9e8ea2d704ba16914b766b135f7e0'],1,3,4,2,,,
5c5a53ef8de50a1da48964e9bc8e196f3780ec4b,version 3.8.0.post0,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-24 10:30:24-05:00,18000,2017-02-24 10:30:24-05:00,18000,True,False,['__init__.py'],['0cc95ace265ffe227b87aea315f29c61bf82624e'],1,1,2,1,,,
018c7e70c821e6c40e752ca184e601db5b91cb3f,Added tests for wrinte_uint,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-02-27 18:55:50-05:00,18000,2017-02-27 18:55:50-05:00,18000,True,False,"['test_custom_protocol_handler.py', 'test_protocol.py']",['0cc95ace265ffe227b87aea315f29c61bf82624e'],4,89,93,2,1.0,1.0,0.3939393939393939
6045c40d37439c65c10e47c2fa1b9cecd0352953,Reformated tests from test_protocol,GregBestland,Greg.Bestland@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-01-04 15:35:09-06:00,21600,2017-02-28 10:12:40-05:00,18000,True,False,['test_protocol.py'],['018c7e70c821e6c40e752ca184e601db5b91cb3f'],6,61,67,1,1.0,1.0,0.8571428571428571
3c25965d046830fe064f9fb409b29f959bb51165,Changed bit_length function to support python2 in Windows,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-02-28 17:01:21-05:00,18000,2017-02-28 19:38:30-05:00,18000,True,False,['marshal.py'],['feed5c88e725fd253c228d8cb0204a3f45bf49ff'],1,8,9,1,1.0,1.0,1.0
56889b2025197a3d3b8102501c6aee9b9979d340,"add total_ordering to Time/Date/Host/Token

PYTHON-714",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-02-28 13:51:05-05:00,18000,2017-03-02 10:18:11-05:00,18000,True,False,"['metadata.py', 'pool.py', 'util.py']",['feed5c88e725fd253c228d8cb0204a3f45bf49ff'],8,7,15,3,0.0,0.0,0.0
c6df661907a9dab0c789df1fc35ee7d449e55530,Added tests for type ordering,bjmb,jaume.marhuenda@datastax.com,Jim Witschey,jim.witschey@gmail.com,2017-03-01 18:20:13-05:00,18000,2017-03-02 16:59:14-05:00,18000,True,False,['test_types.py'],['56889b2025197a3d3b8102501c6aee9b9979d340'],0,136,136,1,0.3974358974358974,1.0,0.8076923076923077
45fdc5c5450f734f6775d2ebdc2a4068330a18b6,Cherry-picked the windows support branch of dse,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-02-28 14:58:53-05:00,18000,2017-03-06 14:02:12-05:00,18000,True,False,"['__init__.py', '__init__.py', '__init__.py', 'test_container_columns.py', 'test_connection.py', 'test_connections.py', 'test_authentication.py', 'test_client_warnings.py', 'test_cluster.py', 'test_connection.py', 'test_custom_payload.py', 'test_custom_protocol_handler.py', 'test_metadata.py', 'test_metrics.py', 'test_policies.py', 'test_prepared_statements.py', 'test_query.py', 'test_concurrent.py']",['c4a2d4603edb57e632df0fb928d0a5c968390f42'],66,149,215,18,0.16666666666666666,0.5666666666666667,0.9666666666666667
8621f4507cb685212b6cf502201183b884a8119b,Fixe a documentation typo,Julien Duponchelle,julien@duponchelle.info,GitHub,noreply@github.com,2017-03-07 14:29:45+01:00,-3600,2017-03-07 14:29:45+01:00,-3600,True,False,['columns.py'],['c4a2d4603edb57e632df0fb928d0a5c968390f42'],1,1,2,1,,,
d42c64c728b39635a0739e69cd6c0428966e91fc,Merged from dse,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-06 18:11:13-05:00,18000,2017-03-10 14:39:07-05:00,18000,True,False,"['__init__.py', 'test_authentication.py']",['ead86ea5e01b94d09c9022a2f01348bd147f8af0'],25,31,56,2,1.0,1.0,0.8333333333333334
d4d4d81aa80dc0da80cfc37b10922338587a1cef,Added fix for gevent and eventlet,bjmb,jaume.marhuenda@datastax.com,Jim Witschey,jim.witschey@gmail.com,2017-03-10 20:29:53-05:00,18000,2017-03-13 16:25:09-04:00,14400,True,False,"['eventletreactor.py', 'geventreactor.py']",['ead86ea5e01b94d09c9022a2f01348bd147f8af0'],2,2,4,2,,,
dd97735533a65ce4e7136c9c1c9ce1d76fdb553b,Fixed docs import BatchQuery,ittus,vuminhthang.cm@gmail.com,ittus,vuminhthang.cm@gmail.com,2017-03-14 10:07:32+08:00,-28800,2017-03-14 10:07:32+08:00,-28800,True,False,['batches.rst'],['ead86ea5e01b94d09c9022a2f01348bd147f8af0'],1,1,2,1,,,
cbde7a7c9350e6cc968992d9a7b10861060c243d,Skipped ALTER TYPE tests for C* 3.1,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-14 13:40:55-04:00,14400,2017-03-14 13:57:40-04:00,14400,True,False,"['build.yaml', 'test_metadata.py', 'test_udts.py']",['0dc4f5d52a684e659ea5d16c72e56f0c32e0ed51'],5,9,14,3,,,
49196074bf54513fffadb484f77f5bd8e5b4e413,Fixed AsyncoreConnectionTests.test_multiple_connections test,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-14 14:08:35-04:00,14400,2017-03-14 14:08:35-04:00,14400,True,False,['test_connection.py'],['cbde7a7c9350e6cc968992d9a7b10861060c243d'],2,2,4,1,,,
a12f5adb07304a47c27845e02ecb64128270fcd4,Fixed merge conflict,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-14 15:39:09-04:00,14400,2017-03-14 15:39:09-04:00,14400,True,False,['test_connection.py'],['45fdc5c5450f734f6775d2ebdc2a4068330a18b6'],6,0,6,1,,,
90de49628e754415e1621667b89670ffb53ade09,Ensure Evenlet greenthreads exit gracefully,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-03-15 12:04:43-04:00,14400,2017-03-15 12:04:43-04:00,14400,True,False,['eventletreactor.py'],['ead86ea5e01b94d09c9022a2f01348bd147f8af0'],1,5,6,1,0.5,1.0,1.0
8252196a0d9e169d1182de908b8335f1730dfdb2,Fixed typo,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-15 14:01:20-04:00,14400,2017-03-15 14:01:20-04:00,14400,True,False,['__init__.py'],['a12f5adb07304a47c27845e02ecb64128270fcd4'],1,1,2,1,,,
13f7925eeb60fc315b7dd0447dca9f7309b49319,Added more values to the decimal conversion tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-16 09:17:54-04:00,14400,2017-03-16 09:17:54-04:00,14400,True,False,['test_marshalling.py'],['79e6a43c95218c2323851d091dd5b9f5f6eb12f6'],1,1,2,1,,,
990e7dd936dc5ed5c075de71e84193719da78d67,version 3.8.1,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-03-16 14:01:43-04:00,14400,2017-03-16 14:01:43-04:00,14400,True,False,"['CHANGELOG.rst', '__init__.py']",['79e6a43c95218c2323851d091dd5b9f5f6eb12f6'],1,12,13,2,,,
b21e9ddc958f942a854039e216b30aa45b04d094,post-release version (3.8.1),Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-03-16 14:51:07-04:00,14400,2017-03-16 14:51:07-04:00,14400,True,False,['__init__.py'],['990e7dd936dc5ed5c075de71e84193719da78d67'],1,1,2,1,,,
9ac54596e16935fde3442898fbd1f95d75cbb8bc,Fixed timestamp log warning,bjmb,jaume.marhuenda@datastax.com,Jim Witschey,jim.witschey@gmail.com,2017-03-06 16:19:44-05:00,18000,2017-03-17 10:28:46-04:00,14400,True,False,"['timestamps.py', 'test_timestamps.py']",['7e6a7e4d1311e5f0d4bcccc78dd68b9be401f6e6'],6,12,18,2,1.0,1.0,1.0
6cc62f7dcd04b2bc6bb175f00a029c11cabeda61,Merged cqlengine/connection.py,bjmb,jaume.marhuenda@datastax.com,Jim Witschey,jim.witschey@gmail.com,2017-03-06 10:36:29-05:00,18000,2017-03-17 12:17:02-04:00,14400,True,False,['connection.py'],['9ac54596e16935fde3442898fbd1f95d75cbb8bc'],0,2,2,1,0.0,0.0,0.0
8d8a7363bca95de08addcea431041aed2ea7e721,use explicit values for MTG.__init__,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-03-17 16:41:10-04:00,14400,2017-03-17 16:41:10-04:00,14400,True,False,['timestamps.py'],['6cc62f7dcd04b2bc6bb175f00a029c11cabeda61'],1,1,2,1,,,
4bec82485e23b7b50a6310fdc7e2d9d40d439e46,Added missing import,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-17 16:43:15-04:00,14400,2017-03-17 16:43:15-04:00,14400,True,False,['connection.py'],['6cc62f7dcd04b2bc6bb175f00a029c11cabeda61'],1,1,2,1,,,
afd1cb09ca68529b468760ba1da275bef5c27736,make cluster.connect() fails when no connection succeed,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-03-20 12:31:36-04:00,14400,2017-03-20 12:31:36-04:00,14400,True,False,['cluster.py'],['727389c98475ca6eeaa68c3d1206f963715ddcb2'],0,6,6,1,0.0,0.0,0.0
1bc0cf9e1c85565c63e70a6ce6273aac2fd10c65,Updated build.yaml,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-17 11:44:02-04:00,14400,2017-03-22 14:07:17-04:00,14400,True,False,"['build.yaml', 'test_failure_types.py', 'test_query.py']",['4bec82485e23b7b50a6310fdc7e2d9d40d439e46'],14,30,44,3,0.5454545454545454,1.0,1.0
71e030c289abf75f9a5e0dd80b61e856dce08438,Fixed some failing tests in Jenkins,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-16 14:48:17-04:00,14400,2017-03-22 16:19:31-04:00,14400,True,False,"['__init__.py', 'test_failure_types.py', 'test_loadbalancingpolicies.py', 'test_schema.py', 'test_cluster.py', 'test_metrics.py', 'test_marshalling.py']",['d8df73b73e566c1500d40d5cbe639d1bff0b7dbe'],19,15,34,7,0.0,0.0,0.0
78660f455a32bb73e7b7b601ad51bb919bcbd191,"Testing for PYTHON-665

- Fixed failing unit tests after Session.__init__ change
- Added integration test for PYTHON-665",bjmb,jaume.marhuenda@datastax.com,Jim Witschey,jim.witschey@gmail.com,2017-03-22 12:43:01-04:00,14400,2017-03-22 16:40:08-04:00,14400,True,False,"['test_cluster.py', 'test_cluster.py', 'test_concurrent.py', 'utils.py']",['afd1cb09ca68529b468760ba1da275bef5c27736'],16,72,88,4,1.0,1.0,1.0
a16f5f7b85536014a855a92168229e2ae887703d,Added protocol version to test_session_host_parameter,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-23 09:23:52-04:00,14400,2017-03-23 09:23:52-04:00,14400,True,False,['test_cluster.py'],['5d479d7b106252a0bad90b7cb5d47f8f119993ac'],3,3,6,1,,,
2f47415816e30181db0cb3a0afdb0f0ff4d51297,a cqlengine column with a default value should not be updated if not specified explicitly,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-03-24 13:05:10-04:00,14400,2017-03-24 13:05:10-04:00,14400,True,False,['models.py'],['a16f5f7b85536014a855a92168229e2ae887703d'],0,2,2,1,0.0,0.0,1.0
d1460529946568fc1ff1b3a24d9a7ad177745624,Fix some issues related to default values,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-03-24 16:33:20-04:00,14400,2017-03-24 16:33:20-04:00,14400,True,False,"['columns.py', 'test_model_io.py']",['2f47415816e30181db0cb3a0afdb0f0ff4d51297'],4,8,12,2,,,
4aa6c6e98cffac94f6adbad9b022a2c0b46ae0a5,repro PYTHON-657,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-03-27 11:53:05-04:00,14400,2017-03-27 13:54:06-04:00,14400,True,False,['test_model_io.py'],['d1460529946568fc1ff1b3a24d9a7ad177745624'],0,32,32,1,0.0,1.0,1.0
589c15abeee37667824c270d8fc3db69912f63e8,persisted values should not be set explicit,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-03-22 20:16:37-04:00,14400,2017-03-28 08:19:45-04:00,14400,True,False,['models.py'],['a16f5f7b85536014a855a92168229e2ae887703d'],0,1,1,1,1.0,1.0,1.0
ca9a54707303ed0c2897beac1bb7f16407e3cfca,"initialize libevreactor for cluster unit tests

These tests weren't failing on CI, because CI runs all the unit tests
together, and LibevConnection.initialize_reactor is called in the setup
for other tests, in particular tests.unit.io.test_libev{reactor,timer}.",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-03-30 14:40:45-04:00,14400,2017-03-30 15:30:15-04:00,14400,True,False,['test_cluster.py'],['bbebb5a04ba2d5325671d25a511d2de7b3fba9cf'],0,9,9,1,1.0,1.0,1.0
8bc8c54b430a558bdfae380ede30e3dd7017897b,tentative fix for cqlengine tracking issues,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-03-30 15:47:27-04:00,14400,2017-03-30 15:47:27-04:00,14400,True,False,"['columns.py', 'models.py']",['bbebb5a04ba2d5325671d25a511d2de7b3fba9cf'],5,9,14,2,1.0,1.0,0.0
a0abe34c55803c154b68e700d18263919f9d29d4,typo,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-03-30 16:17:18-04:00,14400,2017-03-30 16:17:18-04:00,14400,True,False,['models.py'],['8bc8c54b430a558bdfae380ede30e3dd7017897b'],1,1,2,1,,,
27c33beb3b9ee8023b299f6b6b57715fa7abab49,Changed import in tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-31 10:05:12-04:00,14400,2017-03-31 10:05:12-04:00,14400,True,False,['test_cluster.py'],['ca9a54707303ed0c2897beac1bb7f16407e3cfca'],1,1,2,1,,,
8025dc6c71dfe0975ec4f6c19b6f4d7f308de8e2,Skipped some tests if LibevConnection is not installed,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-31 11:26:48-04:00,14400,2017-03-31 11:26:48-04:00,14400,True,False,['test_cluster.py'],['1e7c0cb2ad19372d112383c27965b37b0d3b20db'],3,9,12,1,1.0,1.0,1.0
7716cc98abe09986f6e4a93bbc1410eac937f429,cqlengine complex logic to determine if a container change or not,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-03-31 14:09:27-04:00,14400,2017-03-31 14:09:27-04:00,14400,True,False,"['columns.py', 'test_model_io.py']",['a0abe34c55803c154b68e700d18263919f9d29d4'],7,16,23,2,1.0,0.0,1.0
45ceafead312941f0cb4d0963eb29b6aa67d134b,Patched only time in eventlet and gevent unit tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-31 14:51:06-04:00,14400,2017-03-31 14:51:06-04:00,14400,True,False,"['__init__.py', 'eventlet_utils.py', 'test_eventletreactor.py', 'test_geventreactor.py']",['8025dc6c71dfe0975ec4f6c19b6f4d7f308de8e2'],15,50,65,4,1.0,1.0,1.0
4c9ede85a61985ae77b2890587552363be29569a,Reorganized eventlet and gevent tests in unit tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-31 15:10:00-04:00,14400,2017-03-31 15:10:00-04:00,14400,True,False,"['test_eventletreactor.py', 'test_geventreactor.py', 'utils.py']",['45ceafead312941f0cb4d0963eb29b6aa67d134b'],96,56,152,3,0.0,0.0,0.0
a6991be255c6b5cdff9da9def988a8f31c3aad4c,Skip tests if it's pypy,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-31 16:24:16-04:00,14400,2017-03-31 16:24:16-04:00,14400,True,False,"['__init__.py', 'test_eventletreactor.py']",['4c9ede85a61985ae77b2890587552363be29569a'],1,4,5,2,,,
1c9b379059eda71c6dd39becb2ed0b9007e7624b,Skipped by default eventlet and gevent tests in Unit tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-31 19:28:58-04:00,14400,2017-03-31 19:28:58-04:00,14400,True,False,"['__init__.py', 'test_eventletreactor.py', 'test_geventreactor.py', 'test_libevtimer.py']",['a6991be255c6b5cdff9da9def988a8f31c3aad4c'],8,22,30,4,1.0,1.0,1.0
0542c9bf9d3281e9676c1314b50b877101699fe4,minor code change,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-04-01 11:40:12-04:00,14400,2017-04-01 11:40:12-04:00,14400,True,False,['columns.py'],['7716cc98abe09986f6e4a93bbc1410eac937f429'],5,4,9,1,0.0,1.0,0.0
ae4fbd34a92193f4e485d943cf84064c04ae1b17,Add map item deletion in cqlengine,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-04-03 15:07:31-04:00,14400,2017-04-03 15:07:31-04:00,14400,True,False,"['query.py', 'statements.py']",['a16f5f7b85536014a855a92168229e2ae887703d'],4,21,25,2,0.5384615384615384,0.38461538461538464,1.0
c5cc20e62659fb4eabbeaa6d70bbb590fb21a0da,add tests for PYTHON-688,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-04 11:44:51-04:00,14400,2017-04-04 11:44:51-04:00,14400,True,False,['test_updates.py'],['ae4fbd34a92193f4e485d943cf84064c04ae1b17'],0,46,46,1,0.375,1.0,1.0
ea8c943381b7ca45191701b0f3ffeaaed066763d,"save ResponseFuture callbacks even when run_now

PYTHON-733

Fixes an issue where, if the first page of a response is received before add_callback, the
callback is not saved, and will not work upon receiving future pages.",Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2017-04-04 13:34:49-05:00,18000,2017-04-04 13:34:49-05:00,18000,True,False,['cluster.py'],['c99a292dda5881933df197fd52e8c32acec0e9f5'],4,2,6,1,0.0,0.0,1.0
256cb9bc745120caa265a58179b8216b5827eef5,document choice to always register callback funcs,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-04 15:37:50-04:00,14400,2017-04-04 15:42:42-04:00,14400,True,False,['cluster.py'],['ea8c943381b7ca45191701b0f3ffeaaed066763d'],0,6,6,1,,,
0609b1125f3459bb8c0bc6815443f1160f4df29a,Fix persistance behavior after a save when a column has a default value,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-04-04 17:02:21-04:00,14400,2017-04-04 17:02:21-04:00,14400,True,False,['query.py'],['0542c9bf9d3281e9676c1314b50b877101699fe4'],0,3,3,1,0.0,0.0,1.0
07fd138a56053033b3ced8c33d457d008b2ab2b7,Added some more asserts to test_map_update_remove in tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-04 16:17:12-04:00,14400,2017-04-04 17:18:38-04:00,14400,True,False,['test_updates.py'],['c99a292dda5881933df197fd52e8c32acec0e9f5'],3,4,7,1,0.0,1.0,1.0
57cf4dc3927d140822e6b1d3949583e48597b4af,"prevent callbacks being executed twice

addresses comment from @bjmb",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-04 17:14:44-04:00,14400,2017-04-04 17:19:25-04:00,14400,True,False,['cluster.py'],['256cb9bc745120caa265a58179b8216b5827eef5'],3,10,13,1,1.0,1.0,1.0
e83180eb54f4c48e3011b8d911f1f5e3cb4968f9,fix race condition in error callbacks,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-04 17:29:36-04:00,14400,2017-04-04 17:29:36-04:00,14400,True,False,['cluster.py'],['57cf4dc3927d140822e6b1d3949583e48597b4af'],3,11,14,1,1.0,1.0,1.0
fea53e572d5385bc9946bf98a9ad9ece2d52f3f1,Added some tests for PYTHON-733,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-04 18:02:07-04:00,14400,2017-04-04 18:02:07-04:00,14400,True,False,['test_query_paging.py'],['52f94312d3a7633be8e8b2d9fbcbd2e975bdaad1'],4,23,27,1,0.1,1.0,0.9
5ecef596ec3869c020eb72dbac45049ab4c86fe4,Added some tests for PYTHON-657,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-03 14:42:04-04:00,14400,2017-04-04 19:33:53-04:00,14400,True,False,"['test_model_io.py', 'test_updates.py']",['0609b1125f3459bb8c0bc6815443f1160f4df29a'],32,159,191,2,1.0,1.0,0.9534883720930233
6f16e166c38c82a6783f09285fe90ef16c0fdba7,Skipped test test_map_update_remove if cassandra <= 2.0,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-04 19:42:32-04:00,14400,2017-04-04 19:42:32-04:00,14400,True,False,['test_updates.py'],['07fd138a56053033b3ced8c33d457d008b2ab2b7'],1,2,3,1,,,
99cc8e83a0edc662808b509ec328d889b85c72c5,instance fetched from DB should be entirely set persisted,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-04-04 20:21:01-04:00,14400,2017-04-04 20:21:01-04:00,14400,True,False,['models.py'],['5ecef596ec3869c020eb72dbac45049ab4c86fe4'],3,3,6,1,,,
1999f6da6b326852e27ed765951eadf188f7420a,Added tests for PYTHON-719,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-05 09:46:00-04:00,14400,2017-04-05 13:22:39-04:00,14400,True,False,['test_updates.py'],['99cc8e83a0edc662808b509ec328d889b85c72c5'],0,28,28,1,1.0,1.0,1.0
fba89cea8a11f79ea3f5c219448908551ce7a20a,Acknowledged review for PYTHON-657 tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-05 13:56:50-04:00,14400,2017-04-05 14:05:37-04:00,14400,True,False,['test_updates.py'],['1999f6da6b326852e27ed765951eadf188f7420a'],28,23,51,1,0.0,0.0,1.0
2e5b875b7f31a4105029974ad0ca29399bb80b72,Clarified some parts of the code in the tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-05 14:29:56-04:00,14400,2017-04-05 14:29:56-04:00,14400,True,False,['test_updates.py'],['e2f7ab339546d3af0e81445f1808a910ae80b970'],2,3,5,1,,,
b7645369e7d85be0b89c45848e7ca264966f4628,raise error on primary key update only if its value changed,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-04-06 13:39:22-04:00,14400,2017-04-06 13:39:22-04:00,14400,True,False,['models.py'],['2e5b875b7f31a4105029974ad0ca29399bb80b72'],5,11,16,1,0.0,0.0,1.0
722d8455dee4bb138ada2079e19e694bd9ef80d9,Updated tox.ini to run Gevent and Eventlet tests independently,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-05 11:40:44-04:00,14400,2017-04-06 13:56:57-04:00,14400,True,False,"['run_test.ps1', 'tox.ini']",['1c9b379059eda71c6dd39becb2ed0b9007e7624b'],3,34,37,2,,,
2056b145c2bc44410074fbc556fce4f95df955ce,Fix tests,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-04-06 16:17:54-04:00,14400,2017-04-06 16:17:54-04:00,14400,True,False,['test_updates.py'],['b7645369e7d85be0b89c45848e7ca264966f4628'],2,2,4,1,,,
9848ef3987d74d6cc6c98a4f2f3bd9497c312691,Acknowledge the some review comments for tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-06 15:09:10-04:00,14400,2017-04-06 16:27:52-04:00,14400,True,False,"['__init__.py', 'eventlet_utils.py', 'test_eventletreactor.py', 'test_geventreactor.py', 'utils.py', 'tox.ini']",['722d8455dee4bb138ada2079e19e694bd9ef80d9'],37,32,69,6,0.0,0.0,0.0
6766d77b72e297a477d98eb257413df1da75fa7b,"Removed unused statements from appveyor, this tests where failing always because the need a cluster to test against",bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-06 17:12:13-04:00,14400,2017-04-06 17:12:32-04:00,14400,True,False,['run_test.ps1'],['9848ef3987d74d6cc6c98a4f2f3bd9497c312691'],17,0,17,1,,,
b044b34e809a975d72014a903dfce32e13962e0b,Made copy of Cluster._pools when they are iterated,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-07 10:48:31-04:00,14400,2017-04-07 10:48:31-04:00,14400,True,False,['cluster.py'],['834608504484ba756b0ecc715e2ea54753c84685'],4,4,8,1,,,
2859da85db902389122760d4a0e1bff06d7d493d,Added tests for PYTHON-705,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-07 11:27:32-04:00,14400,2017-04-07 11:27:32-04:00,14400,True,False,['test_updates.py'],['2056b145c2bc44410074fbc556fce4f95df955ce'],0,11,11,1,1.0,1.0,1.0
22fe6f7b0b8f3b9529f6425de90de641fa5faece,Fixed profile timeout test,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-07 16:41:23-04:00,14400,2017-04-07 16:41:23-04:00,14400,True,False,['test_cluster.py'],['3ec01b57ce18eeacf06a1657630a4262f4714da5'],12,11,23,1,,,
986127c413e723f2a3da288f7d2f1cb1ada00293,Added support for different loops in integrations tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-03-31 19:57:39-04:00,14400,2017-04-10 13:05:16-04:00,14400,True,False,"['build.yaml', '__init__.py']",['2ea3a66aa715a62039c61dd2761000a732f43ccf'],11,74,85,2,,,
9fdd93634ddfdc88cff02821045bf57ac3e276f8,Updated tox.ini and build.yaml for testing with python 3.6,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-06 16:59:19-04:00,14400,2017-04-10 16:52:24-04:00,14400,True,False,"['build.yaml', 'tox.ini']",['89aad9bf36f659d807af3f05a838811923a5bbd5'],1,3,4,2,,,
611daed724b316a54d381bb1b71d0242858b31c0,Updated build.yaml,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-11 09:53:42-04:00,14400,2017-04-11 09:53:42-04:00,14400,True,False,['build.yaml'],['00f2f61f45f0ec0e6ebc97e7e5f860f4e6963799'],1,11,12,1,,,
925deb9ded6371c9b743339620fb5dca5f9e1fc5,Added eventlet in the tox dependencies,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-11 10:08:39-04:00,14400,2017-04-11 10:08:39-04:00,14400,True,False,['tox.ini'],['9fdd93634ddfdc88cff02821045bf57ac3e276f8'],0,1,1,1,,,
17229e3181f1bd9c78d4c3a79a7b1a68c5b8876e,version 3.9.0,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-11 14:02:49-04:00,14400,2017-04-11 14:02:49-04:00,14400,True,False,"['CHANGELOG.rst', '__init__.py', 'docs.yaml']",['2e5b875b7f31a4105029974ad0ca29399bb80b72'],1,25,26,3,,,
09a21cddaba70a37c53faadcac3f98a3c384be17,post-release version (3.9.0),Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-11 14:28:49-04:00,14400,2017-04-11 14:28:49-04:00,14400,True,False,['__init__.py'],['17229e3181f1bd9c78d4c3a79a7b1a68c5b8876e'],1,1,2,1,,,
6f677d25572132cdbc9f8f4cba40662a14da5b03,Set libev loop as default for tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-11 16:28:36-04:00,14400,2017-04-11 16:28:36-04:00,14400,True,False,['__init__.py'],['95e2b7120c91f9a17e5de969744d08f19506653f'],1,1,2,1,,,
68fabee38d3dbc805c957501fcaddbcc4300cc17,Added Python 3.5 support in testing,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-11 14:27:49-04:00,14400,2017-04-11 18:54:05-04:00,14400,True,False,"['build.yaml', 'utils.py', 'tox.ini']",['925deb9ded6371c9b743339620fb5dca5f9e1fc5'],3,6,9,3,,,
6b3e34d3f4243031d4ef82d902ff8d606ddd4e17,Updated build.yaml,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-11 19:00:52-04:00,14400,2017-04-11 19:00:52-04:00,14400,True,False,['build.yaml'],['eed1b5931594b2a013d7ce59c91195c10de9bbec'],6,9,15,1,,,
f81b3e56e7bbcdde4062d3287b5371d1fff43ae7,add prebuild steps for documentor,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-13 16:01:28-04:00,14400,2017-04-13 16:01:28-04:00,14400,True,False,['docs.yaml'],['6b3e34d3f4243031d4ef82d902ff8d606ddd4e17'],0,2,2,1,,,
2b20575e62e8ff111751d09a3cfe712ffa6f70b8,Updated build.yaml,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-17 10:22:53-04:00,14400,2017-04-17 10:22:53-04:00,14400,True,False,['build.yaml'],['f81b3e56e7bbcdde4062d3287b5371d1fff43ae7'],1,1,2,1,,,
d343aa53fd1d116ae78ffceef7a0de7c68e1c27c,"Acknowledge comments from the review, updated Gevent and Eventlet unit tests",bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-14 15:06:44-04:00,14400,2017-04-19 11:40:13-04:00,14400,True,False,"['run_test.ps1', '__init__.py', 'test_eventletreactor.py', 'test_geventreactor.py', 'tox.ini']",['6766d77b72e297a477d98eb257413df1da75fa7b'],29,29,58,5,0.0,0.0,0.0
a35bd194225467558d3b432f071e6858da65d2c1,PEP 289 (just 1 line) (#739),Vitaliy Kozlovskiy,ubombi@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-19 20:43:41+03:00,-10800,2017-04-19 13:43:41-04:00,14400,True,False,['models.py'],['2b20575e62e8ff111751d09a3cfe712ffa6f70b8'],1,1,2,1,,,
ba8728a3992e64d20569cb3265c41657a1454340,"update six dependency (#709)

table extensions use viewkeys",Adam Holmberg,Adam.Holmberg@datastax.com,Jim Witschey,jim.witschey@gmail.com,2017-04-19 13:46:42-05:00,18000,2017-04-19 14:46:42-04:00,14400,True,False,"['requirements.txt', 'setup.py']",['4ca22b2e8eaa2f4fa85f017a7c9fa78e05abc2a4'],2,2,4,2,,,
2e09a832d34e81b555ada4c1eec3a6a5d6b49781,Updated build.yaml to have a clean PYTHONPATH,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-20 14:35:18-04:00,14400,2017-04-20 14:35:18-04:00,14400,True,False,['build.yaml'],['ba8728a3992e64d20569cb3265c41657a1454340'],0,1,1,1,,,
f1058cbbe5e2e67e39f3cc70cb6f28690ebf25e0,"Updated travis.yml, tox.ini",bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-20 16:58:35-04:00,14400,2017-04-21 14:07:50-04:00,14400,True,False,"['.travis.yml', 'tox.ini']",['3336fe1e4e450a4edae98bf380b5b23c71f0e052'],26,14,40,2,,,
6fb7c6f20502d16c8c752941528ee3a20951b38d,Make sure all trace mutations are there before considering it as complete,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-04-24 12:09:10-04:00,14400,2017-04-24 12:09:10-04:00,14400,True,False,['query.py'],['2b20575e62e8ff111751d09a3cfe712ffa6f70b8'],1,1,2,1,,,
5b143c9c128071cdbc8db40a4e38b13c9b550b9a,add comment,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-04-24 12:38:37-04:00,14400,2017-04-24 12:38:37-04:00,14400,True,False,['query.py'],['6fb7c6f20502d16c8c752941528ee3a20951b38d'],0,1,1,1,,,
4b7330ddf7441f839be02dc9dd3eecb3ff7909a3,"fixes for ExponentialReconnectionPolicy

- documentation specified floats for base_delay and max_delay; fix tests
  to match
- fix issue from PYTHON-707",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-21 17:16:06-04:00,14400,2017-04-24 12:39:03-04:00,14400,True,False,"['policies.py', 'test_policies.py']",['3336fe1e4e450a4edae98bf380b5b23c71f0e052'],6,24,30,2,1.0,1.0,1.0
6a8fc3c814815787c1f7aaedd5c34a683cf8be42,update supported server versions in README,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-24 14:04:24-04:00,14400,2017-04-24 17:20:53-04:00,14400,True,False,['README.rst'],['f4ebe0143c7828b9bc3b72c94d8329d85cf2e5f1'],1,1,2,1,,,
d553848e7b38a601e5cb0e1d6051fbaddeebf56b,update supported Python versions in README,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-24 14:05:39-04:00,14400,2017-04-24 17:20:57-04:00,14400,True,False,['README.rst'],['6a8fc3c814815787c1f7aaedd5c34a683cf8be42'],1,1,2,1,,,
a48f0857cddc51e6a2cc49ac4dcb1ec15b4cdd46,update copyright,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-24 14:06:02-04:00,14400,2017-04-24 17:20:57-04:00,14400,True,False,['README.rst'],['d553848e7b38a601e5cb0e1d6051fbaddeebf56b'],1,1,2,1,,,
6e5694a61f996bd68ce527e3b9cc2ce343c6327e,refer users to Academy Slack,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-24 14:11:48-04:00,14400,2017-04-24 17:20:57-04:00,14400,True,False,['README.rst'],['a48f0857cddc51e6a2cc49ac4dcb1ec15b4cdd46'],5,2,7,1,,,
ac946ea51c9bed38b8410a46574f2987c0af287d,update year in licenses,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-24 17:04:25-04:00,14400,2017-04-24 17:20:57-04:00,14400,True,False,"['base.py', 'callback_full_pipeline.py', 'future_batches.py', 'future_full_pipeline.py', 'future_full_throttle.py', 'sync.py', '__init__.py', 'auth.py', 'buffer.pxd', 'bytesio.pxd', 'bytesio.pyx', 'cluster.py', 'cmurmur3.c', 'concurrent.py', 'connection.py', '__init__.py', 'columns.py', 'connection.py', 'functions.py', 'management.py', 'models.py', 'named.py', 'operators.py', 'query.py', 'statements.py', 'cqltypes.py', 'cython_marshal.pyx', 'cython_utils.pyx', 'deserializers.pxd', 'deserializers.pyx', 'encoder.py', '__init__.py', 'asyncorereactor.py', 'eventletreactor.py', 'geventreactor.py', 'libevreactor.py', 'twistedreactor.py', 'ioutils.pyx', 'marshal.py', 'metadata.py', 'metrics.py', 'numpy_parser.pyx', 'obj_parser.pyx', 'parsing.pxd', 'parsing.pyx', 'policies.py', 'pool.py', 'protocol.py', 'query.py', 'row_parser.pyx', 'timestamps.py', 'tuple.pxd', 'type_codes.pxd', 'util.py', 'conf.py', 'example_core.py', 'example_mapper.py', 'request_init_listener.py', 'setup.py', '__init__.py', '__init__.py', '__init__.py', 'base.py', '__init__.py', 'test_container_columns.py', 'test_counter_column.py', 'test_static_column.py', 'test_validation.py', 'test_value_io.py', '__init__.py', 'test_connection.py', '__init__.py', 'test_compaction_settings.py', 'test_management.py', '__init__.py', 'test_class_construction.py', 'test_equality_operations.py', 'test_model.py', 'test_model_io.py', 'test_polymorphism.py', 'test_udts.py', 'test_updates.py', 'test_value_lists.py', '__init__.py', 'test_where_operators.py', '__init__.py', 'test_batch_query.py', 'test_datetime_queries.py', 'test_named.py', 'test_queryoperators.py', 'test_queryset.py', 'test_updates.py', '__init__.py', 'test_assignment_clauses.py', 'test_base_clause.py', 'test_base_statement.py', 'test_delete_statement.py', 'test_insert_statement.py', 'test_select_statement.py', 'test_update_statement.py', 'test_where_clause.py', 'test_batch_query.py', 'test_connections.py', 'test_consistency.py', 'test_context_query.py', 'test_ifexists.py', 'test_ifnotexists.py', 'test_lwt_conditional.py', 'test_timestamp.py', 'test_ttl.py', 'datatype_utils.py', '__init__.py', 'test_consistency.py', 'test_failure_types.py', 'test_ipv6.py', 'test_large_data.py', 'test_loadbalancingpolicies.py', 'test_schema.py', 'test_ssl.py', 'utils.py', '__init__.py', 'test_authentication.py', 'test_client_warnings.py', 'test_cluster.py', 'test_concurrent.py', 'test_connection.py', 'test_control_connection.py', 'test_custom_payload.py', 'test_custom_protocol_handler.py', 'test_metadata.py', 'test_metrics.py', 'test_policies.py', 'test_prepared_statements.py', 'test_query.py', 'test_query_paging.py', 'test_routing.py', 'test_row_factories.py', 'test_types.py', 'test_udts.py', 'util.py', 'test_load.py', 'test_multi_inserts.py', '__init__.py', '__init__.py', 'test_columns.py', 'test_connection.py', 'test_udt.py', '__init__.py', 'bytesio_testhelper.pyx', 'test_bytesio.py', 'test_types.py', 'test_utils.py', 'types_testhelper.pyx', 'utils.py', 'utils_testhelper.pyx', '__init__.py', 'eventlet_utils.py', 'gevent_utils.py', 'test_asyncorereactor.py', 'test_eventletreactor.py', 'test_geventreactor.py', 'test_libevreactor.py', 'test_libevtimer.py', 'test_twistedreactor.py', 'utils.py', 'test_cluster.py', 'test_concurrent.py', 'test_connection.py', 'test_control_connection.py', 'test_exception.py', 'test_host_connection_pool.py', 'test_marshalling.py', 'test_metadata.py', 'test_orderedmap.py', 'test_parameter_binding.py', 'test_policies.py', 'test_query.py', 'test_response_future.py', 'test_resultset.py', 'test_sortedset.py', 'test_time_util.py', 'test_timestamps.py', 'test_types.py', 'test_util_types.py']",['6e5694a61f996bd68ce527e3b9cc2ce343c6327e'],184,184,368,184,,,
c2e5b621029368223d5ff824f59b590feedea087,add note re: DSE,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-04-26 11:24:50-04:00,14400,2017-04-26 11:26:51-04:00,14400,True,False,['README.rst'],['ac946ea51c9bed38b8410a46574f2987c0af287d'],0,2,2,1,,,
3d30d2b6b208dd62a6c68bd1180329c2d570bcc3,Raise TraceUnavailable if the future is not done,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-04-26 16:43:28-04:00,14400,2017-04-26 16:43:28-04:00,14400,True,False,['cluster.py'],['25e6cf3d0a503149481eb9d7bd2d2084526f62c9'],1,8,9,1,1.0,1.0,0.0
2a13983ee2a9881f0b0e07124cd057fdbdb836ab,fix condition,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-04-26 16:49:32-04:00,14400,2017-04-26 16:49:32-04:00,14400,True,False,['cluster.py'],['3d30d2b6b208dd62a6c68bd1180329c2d570bcc3'],1,1,2,1,,,
21232c7b35ecbb9c41a9ee32a045e4a6cfeec80d,Ensure UDT are validated,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-04-27 15:19:24-04:00,14400,2017-04-27 15:19:24-04:00,14400,True,False,['columns.py'],['25e6cf3d0a503149481eb9d7bd2d2084526f62c9'],0,7,7,1,1.0,1.0,1.0
81d2a9a98cfe728fd6c3c0eff24396fa88faa628,Added tests for python-196,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-27 15:44:36-04:00,14400,2017-04-27 15:44:36-04:00,14400,True,False,['test_cluster.py'],['56bb792e67f4976161d861525ca937b1d15f6c71'],1,19,20,1,1.0,1.0,1.0
9adf7048001f9d8d9dd060d2b252ea9def226a4b,Fixed typo,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-28 10:02:15-04:00,14400,2017-04-28 10:02:15-04:00,14400,True,False,['test_cluster.py'],['2520024b1b5188d1042c4febae56836c9ac3248b'],1,1,2,1,,,
d014f88349a568bebc4a02605b2b15ef958410b8,remove uses of map that don't work in py3,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-04 09:37:18-07:00,25200,2017-05-04 09:37:18-07:00,25200,True,False,"['libevreactor.py', 'test_policies.py']",['9adf7048001f9d8d9dd060d2b252ea9def226a4b'],3,7,10,2,0.0,0.5,1.0
373dc95556a3451e556e429dd8940c5ea4374e38,Fix duration encoding for large values,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-05-05 14:16:18-04:00,14400,2017-05-05 14:16:18-04:00,14400,True,False,['marshal.py'],['9adf7048001f9d8d9dd060d2b252ea9def226a4b'],2,5,7,1,0.0,1.0,1.0
d0a7d5f14cffa255db19b9a05c09fda18d33106f,Added test reproducing using of nonexistent prepared statement in ResponseFuture,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-08 10:41:09-04:00,14400,2017-05-08 12:20:59-04:00,14400,True,False,['test_query.py'],['5a6af1d64b3afa882b7a9abfbbf0176f80c8b660'],22,49,71,1,1.0,1.0,1.0
e80f4b6b6b90a8149a14c528ee9d206bedf7d3a1,Add Duration support to cqlengine,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-05-08 15:14:16-04:00,14400,2017-05-08 15:14:16-04:00,14400,True,False,['columns.py'],['9adf7048001f9d8d9dd060d2b252ea9def226a4b'],0,20,20,1,1.0,1.0,1.0
7bc0bfd8cbae84a62bd6334f6f74198b760522f7,Refactored/Added some tests to CQLEngine,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-11 16:28:13-04:00,14400,2017-05-09 16:05:19-04:00,14400,True,False,"['connection.py', '__init__.py', 'base.py', 'test_validation.py', 'test_udts.py', 'test_updates.py', 'test_queryoperators.py', 'test_updates.py', 'test_base_statement.py']",['941dab462b038cb734e93d9b23bfbfbf84742df9'],187,457,644,9,1.0,1.0,1.0
768e0207da10ec96458764e86db1469b93b65d0e,Added some tests for comparison between columns,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-13 19:11:26-04:00,14400,2017-05-09 16:05:19-04:00,14400,True,False,"['test_validation.py', 'test_model.py']",['7bc0bfd8cbae84a62bd6334f6f74198b760522f7'],5,18,23,2,1.0,1.0,1.0
5ce17d52908fdbf45c803b129ae8dfe45f0b7b4f,Skipped some tests depending on C* version,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-14 09:29:31-04:00,14400,2017-05-09 16:05:19-04:00,14400,True,False,"['test_validation.py', 'test_model.py']",['768e0207da10ec96458764e86db1469b93b65d0e'],5,12,17,2,0.6666666666666666,1.0,1.0
700b60abc44578f2a0cc5ec940900eb4d2612995,Added some for tests for CQLEngine coverage,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-14 13:48:24-04:00,14400,2017-05-09 16:05:19-04:00,14400,True,False,"['test_model.py', 'test_model_io.py', 'test_lwt_conditional.py']",['5ce17d52908fdbf45c803b129ae8dfe45f0b7b4f'],1,63,64,3,0.36,1.0,1.0
de43f22e642745c7548729b1675d76ed4434b1ea,Acknowledge comments on the review for PYTHON-505,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-17 15:44:44-04:00,14400,2017-05-09 16:05:19-04:00,14400,True,False,"['test_validation.py', 'test_udts.py']",['700b60abc44578f2a0cc5ec940900eb4d2612995'],39,59,98,2,1.0,1.0,1.0
989963b6a12853438ede0afb24376a78d4954b17,Added some comments to clarify some parts of the tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-20 15:30:34-04:00,14400,2017-05-09 16:05:19-04:00,14400,True,False,['test_validation.py'],['de43f22e642745c7548729b1675d76ed4434b1ea'],2,19,21,1,0.6,1.0,1.0
09130b39c28eece4765793cce162c5ffe5ffe94c,Fixed some tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-20 15:34:36-04:00,14400,2017-05-09 16:05:19-04:00,14400,True,False,"['columns.py', 'util.py']",['989963b6a12853438ede0afb24376a78d4954b17'],0,19,19,2,1.0,1.0,1.0
fedb68989d72d26c31627ec09badd9885e8f800d,Fixed the validation UDT data tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-20 15:51:00-04:00,14400,2017-05-09 16:06:01-04:00,14400,True,False,['util.py'],['09130b39c28eece4765793cce162c5ffe5ffe94c'],1,4,5,1,1.0,1.0,1.0
eac82517d143fdbeb1cb2e88caa352b990ab4d32,"Skipped tests for 2.0, 2.1 and 2.2 C* versions",bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-20 18:41:20-04:00,14400,2017-05-09 16:06:01-04:00,14400,True,False,['test_validation.py'],['fedb68989d72d26c31627ec09badd9885e8f800d'],2,3,5,1,,,
e1d7e19725a970f64111936b3bebea7a76e5aa95,"Acknowledged review comments, removed unnecessary lines in to_python methods",bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-24 16:22:08-04:00,14400,2017-05-09 16:06:01-04:00,14400,True,False,['columns.py'],['eac82517d143fdbeb1cb2e88caa352b990ab4d32'],2,0,2,1,0.0,0.0,0.0
3691659ec2b5c75f61601ed75896c0f61e511c4e,Fixed test_collections test,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-25 11:46:24-04:00,14400,2017-05-09 16:06:01-04:00,14400,True,False,['test_updates.py'],['e1d7e19725a970f64111936b3bebea7a76e5aa95'],1,1,2,1,,,
a3aaac38d6d938f5d53507fa469306fce5435281,"Fixed variable name typo in cqlengine tests, simplified some statements",bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-28 11:29:49-04:00,14400,2017-05-09 16:06:01-04:00,14400,True,False,['test_updates.py'],['3691659ec2b5c75f61601ed75896c0f61e511c4e'],19,17,36,1,,,
c571d36777f864fde2cb7dc42f2e026c09172936,Fix UDT changed behavior with a default value,Alan Boudreault,alan@alanb.ca,bjmb,jaume.marhuenda@datastax.com,2017-05-02 10:59:26-04:00,14400,2017-05-09 16:06:40-04:00,14400,True,False,"['columns.py', 'test_updates.py']",['a3aaac38d6d938f5d53507fa469306fce5435281'],11,27,38,2,0.5384615384615384,1.0,1.0
815250655b82fd72c29dd3bd846a99600767794f,Added to_python and to_database methods to UserDefinedType,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-08 16:33:48-04:00,14400,2017-05-09 16:06:56-04:00,14400,True,False,['columns.py'],['c571d36777f864fde2cb7dc42f2e026c09172936'],0,16,16,1,1.0,1.0,1.0
96cfe3deea8ae14594a85ae5c698668dccd461dc,"Added tests for to_python, to_database method of UserDefinedType",bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-08 17:00:10-04:00,14400,2017-05-09 16:06:56-04:00,14400,True,False,"['columns.py', 'test_updates.py']",['815250655b82fd72c29dd3bd846a99600767794f'],0,33,33,2,1.0,1.0,1.0
ffcb70c6010ed1d2a12190ed292283320b7a1434,Skipped test class is C* is lower than 2.2,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-09 08:42:02-04:00,14400,2017-05-09 16:06:56-04:00,14400,True,False,['test_updates.py'],['96cfe3deea8ae14594a85ae5c698668dccd461dc'],1,2,3,1,,,
d1638b1a043a4e52d220d90d4ea156c4ab8637bf,Cleaned up some parts of the tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-09 14:12:36-04:00,14400,2017-05-09 16:06:56-04:00,14400,True,False,"['test_validation.py', 'test_model_io.py', 'test_udts.py', 'test_updates.py', 'test_queryoperators.py']",['ffcb70c6010ed1d2a12190ed292283320b7a1434'],27,27,54,5,,,
7a2937931231268e3d736ca0209911f2e16388f5,raise an exception if a number cannot be encoded as vint,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-05-09 17:12:52-04:00,14400,2017-05-09 17:12:52-04:00,14400,True,False,['marshal.py'],['941dab462b038cb734e93d9b23bfbfbf84742df9'],2,5,7,1,0.0,0.0,1.0
b077240c70de64af7452242269cf1011cf068d6c,"Added tests for PYTHON-747, encoding of Duration type",bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-09 11:36:11-04:00,14400,2017-05-10 09:02:04-04:00,14400,True,False,"['__init__.py', 'test_types.py']",['941dab462b038cb734e93d9b23bfbfbf84742df9'],2,52,54,2,0.0,1.0,1.0
09b881f29f7377b40392dba27fce6a2bf59a8eac,Updated build.yaml,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-10 16:00:39-04:00,14400,2017-05-10 16:32:59-04:00,14400,True,False,['build.yaml'],['b2db15a512a62c16a484146d73b461db30c9b1f2'],19,17,36,1,,,
1aa33f0e13146ff7128c749a5c3abb2413acfd17,Updated build.yaml,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-12 14:27:25-04:00,14400,2017-05-12 16:57:58-04:00,14400,True,False,"['build.yaml', '__init__.py']",['84872aeecd64b53b0eff34489bf0f31901dae76f'],13,18,31,2,,,
816e1cae3a268a93f132e911ed66763016137c93,Fixed test_thread_safety in unit tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-15 12:24:46-04:00,14400,2017-05-15 12:24:46-04:00,14400,True,False,['test_policies.py'],['84872aeecd64b53b0eff34489bf0f31901dae76f'],1,1,2,1,,,
8796f30bf9b2a6ac4c2204e3551a8b397ccc6140,correct index.rst,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-16 11:10:33-04:00,14400,2017-05-16 11:10:33-04:00,14400,True,False,['index.rst'],['ac16933ba4646c04054355158e6a5433327d3325'],2,2,4,1,,,
06835c9b68fd9872f7073f546e79759bb8453512,Added tests for PYTHON 707,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-16 14:10:32-04:00,14400,2017-05-16 14:16:23-04:00,14400,True,False,['test_policies.py'],['8796f30bf9b2a6ac4c2204e3551a8b397ccc6140'],0,24,24,1,1.0,1.0,1.0
a16b841ef8969a69a0ccf583a884c63313f47bdc,Added tests for PYTHON-750,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-16 15:08:54-04:00,14400,2017-05-16 15:13:55-04:00,14400,True,False,"['test_validation.py', 'test_model_io.py']",['06835c9b68fd9872f7073f546e79759bb8453512'],5,22,27,2,0.8461538461538461,1.0,1.0
6cb229010b99291195242b356307e3303a62913b,Added test for PYTHON-747,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-10 11:12:06-04:00,14400,2017-05-17 09:33:51-04:00,14400,True,False,['test_connection.py'],['84872aeecd64b53b0eff34489bf0f31901dae76f'],0,46,46,1,1.0,1.0,1.0
45689d08ef84011940bb877ad5145f7a2d32cbd2,Added tests with Batch statements with prepared statement after ALTER,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-17 08:57:04-04:00,14400,2017-05-17 10:44:20-04:00,14400,True,False,"['test_prepared_statements.py', 'test_query.py']",['c32dfcbfc4e077e86af1de74342b3e0986304604'],3,54,57,2,0.0,1.0,1.0
29ccd1564d28b32620d08d17a89c532781cf0f38,ConnectionHeartbeat should mark down HostConnection on OTO,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-05-17 11:22:36-04:00,14400,2017-05-17 11:22:36-04:00,14400,True,False,"['cluster.py', 'connection.py', 'pool.py']",['7a2937931231268e3d736ca0209911f2e16388f5'],11,25,36,3,0.0,0.36363636363636365,0.0
790e97202ecf44cdf1e1a529a3b2e74c5f9b3d4b,make _time_remaining a property,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-17 15:21:48-04:00,14400,2017-05-17 15:21:48-04:00,14400,True,False,['cluster.py'],['90828fcb5a38dd90d4933504c7b5e980ed2146b1'],3,6,9,1,1.0,1.0,1.0
1b6a8cecc04e89f8b80e13c23d3402e4c8b29b6d,fix HostConnectionPool,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-05-17 15:29:07-04:00,14400,2017-05-17 15:29:07-04:00,14400,True,False,['pool.py'],['29ccd1564d28b32620d08d17a89c532781cf0f38'],1,1,2,1,,,0.0
fc2bea54163e70cdfd93976c892c30871f5f5701,Skipped TestDuration in cqlengine tests for some C* versions,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-17 16:37:11-04:00,14400,2017-05-17 16:37:11-04:00,14400,True,False,['test_validation.py'],['90828fcb5a38dd90d4933504c7b5e980ed2146b1'],10,18,28,1,1.0,1.0,1.0
b8fda56b4a732e5025fd3376ed95536a571f3300,Updated variable comparison to be effective with Job Creator in tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-18 10:18:36-04:00,14400,2017-05-18 10:19:18-04:00,14400,True,False,['__init__.py'],['fc2bea54163e70cdfd93976c892c30871f5f5701'],4,4,8,1,,,
ef1fc897d63de162cb168a4fcff83081d14e2f21,Added test for PYTHON-755,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-12 18:37:41-04:00,14400,2017-05-18 15:04:50-04:00,14400,True,False,['test_policies.py'],['1b19998389adb2e9b51fef161619730beb9ca26e'],6,41,47,1,1.0,1.0,1.0
7563118aeec6407e7edd19addaf888abdb0731df,Changed test versions from 3.11 to 3.10 in build.yaml,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-18 15:26:03-04:00,14400,2017-05-18 15:26:07-04:00,14400,True,False,['build.yaml'],['6529af826308c3657c1535ae02bbb3486d267914'],1,1,2,1,,,
cf75d547f132b579587dead372a6770e586183ca,Fixed unit tests after PYTHON-734,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-18 17:30:56-04:00,14400,2017-05-18 17:30:56-04:00,14400,True,False,['test_connection.py'],['e77f2f2fee13cf421c451364e28dc0eeed824928'],3,6,9,1,0.0,1.0,1.0
d3664dd00abfdda8c1819fbf4510510955763693,Prevented hang in test_speculative_and_timeout,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-18 19:02:29-04:00,14400,2017-05-18 19:02:29-04:00,14400,True,False,['test_policies.py'],['88b1da1d6e5b38c9f803388d6184cd9436d3df86'],1,2,3,1,1.0,1.0,1.0
c5925a9210e86e294fd5c8a392156b83613a3a30,Improve SSL docs for security,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-05-19 15:19:01-04:00,14400,2017-05-19 15:19:01-04:00,14400,True,False,['security.rst'],['d3664dd00abfdda8c1819fbf4510510955763693'],4,9,13,1,,,
90159c9ac1209121b14d1ae86fae2979844fc23b,get address for timeout error safely,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-19 16:06:16-04:00,14400,2017-05-19 16:07:29-04:00,14400,True,False,['cluster.py'],['d3664dd00abfdda8c1819fbf4510510955763693'],1,2,3,1,1.0,1.0,1.0
26a4a33c274fdf88e160ada85cec3c6ad2c0278a,Fixed typo,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-19 18:12:32-04:00,14400,2017-05-19 18:12:32-04:00,14400,True,False,['cluster.py'],['6215f836a94bc6a257b17985cc0f2b0a7b2534ed'],1,1,2,1,,,
2ba22df0cf7d41ab2a15ac6eb4669c33b4fce9c7,Fixed test_watchers_are_finished,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-22 10:03:39-04:00,14400,2017-05-22 11:39:45-04:00,14400,True,False,"['__init__.py', 'test_validation.py', 'test_connection.py']",['26a4a33c274fdf88e160ada85cec3c6ad2c0278a'],7,7,14,3,0.0,0.0,0.0
5e375cc9cdc05781bbe01c3e69d95713a0ebdcab,"remove eager callback execution in timer

With our fix for PYTHON-755, you can now start timers with a negative
timeout in cluster.Cluster._start_timer. When this happens,
Timer.callback can be called twice, once in Timer.__init__ and once in
Timer.finish. The first is just an optimization, so we remove it here.",bjmb,jaume.marhuenda@datastax.com,Jim Witschey,jim.witschey@gmail.com,2017-05-22 11:28:05-04:00,14400,2017-05-22 11:49:54-04:00,14400,True,False,['connection.py'],['7b500f7d72b0143f3d4a3a972fb42cbb19a1423e'],2,0,2,1,0.0,0.0,1.0
b886e3ec891a4b2b998c07018361904d9a7c4db4,PYTHON-626: improve prepared stmt docs,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-19 17:10:42-04:00,14400,2017-05-22 16:01:10-04:00,14400,True,False,['query.py'],['6215f836a94bc6a257b17985cc0f2b0a7b2534ed'],0,15,15,1,,,
b0c0f22dc5e256b44188b4a5eb342c78ff8f1067,changelog for 3.10 release,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-23 10:12:56-04:00,14400,2017-05-23 10:17:42-04:00,14400,True,False,['CHANGELOG.rst'],['a1ebb9d3ceda540f59bdc0c6c157538bfd9f3f63'],0,33,33,1,,,
7b00f256a2c672085f7e0f4cf43a8492049777c1,add docs reference for 3.10,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-23 13:24:59-04:00,14400,2017-05-23 13:24:59-04:00,14400,True,False,['docs.yaml'],['b0c0f22dc5e256b44188b4a5eb342c78ff8f1067'],0,2,2,1,,,
64572368a6c533b9429c18a60bc2949400fc4640,fix v3.10 docs name,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-23 16:01:11-04:00,14400,2017-05-23 16:01:11-04:00,14400,True,False,['docs.yaml'],['7b00f256a2c672085f7e0f4cf43a8492049777c1'],1,1,2,1,,,
34664df1692d3f86a5eb800ab20400d4f4c6da70,set new docs reference for v3.10,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-23 16:02:24-04:00,14400,2017-05-23 16:02:24-04:00,14400,True,False,['docs.yaml'],['64572368a6c533b9429c18a60bc2949400fc4640'],1,1,2,1,,,
e527d914cd180958ec6b6a120af27aa093af183e,"Simplified the travis matrix, moved part of it to Jenkins",bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-24 10:34:49-04:00,14400,2017-05-24 13:14:24-04:00,14400,True,False,"['.travis.yml', 'build.yaml']",['34664df1692d3f86a5eb800ab20400d4f4c6da70'],1,9,10,2,,,
d72e32111e9cf5b2938871e94dda20a9d82e4084,bump version for 3.10 release,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-24 13:32:09-04:00,14400,2017-05-24 13:32:09-04:00,14400,True,False,['__init__.py'],['34664df1692d3f86a5eb800ab20400d4f4c6da70'],1,1,2,1,,,
85a09974b7ba9006480d8a7ca11579f6ee941350,post-release version (3.10.0.post0),Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-24 13:47:44-04:00,14400,2017-05-24 13:47:44-04:00,14400,True,False,['__init__.py'],['d72e32111e9cf5b2938871e94dda20a9d82e4084'],1,1,2,1,,,
fda90ccefa72f529493451b7afa7eeab4845471b,small refactor of python-734 to be less invasive in the api,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-05-24 21:05:57-04:00,14400,2017-05-24 21:05:57-04:00,14400,True,False,"['cluster.py', 'connection.py', 'pool.py']",['b81cfee027906b8c6989afbf1772c6a034b6b502'],8,12,20,3,0.0,0.0,1.0
87a4a60c52429b122c3073aedfd648dc18702b28,Fix tests,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-05-24 21:26:47-04:00,14400,2017-05-24 21:26:47-04:00,14400,True,False,['test_connection.py'],['fda90ccefa72f529493451b7afa7eeab4845471b'],3,6,9,1,0.0,1.0,1.0
b2448f25e1ccb97c8bcd0d696b2783f9b5b1b45d,remove unuseful assignement in tests,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-05-24 21:29:56-04:00,14400,2017-05-24 21:29:56-04:00,14400,True,False,['test_connection.py'],['87a4a60c52429b122c3073aedfd648dc18702b28'],3,0,3,1,1.0,0.0,0.0
6232eb5fdcffe77b8d7eaea44c6d7bc289f9f88f,improve release documentation,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-25 11:25:11-04:00,14400,2017-05-25 11:25:11-04:00,14400,True,False,['README-dev.rst'],['841139309b4d145ed9dfb2f6c695b657f5c0032d'],2,2,4,1,,,
336e7636d1c06e6092558ae43e99ce7a34c4b172,improve docs for uploading gh-pages docs,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-25 11:30:59-04:00,14400,2017-05-25 11:30:59-04:00,14400,True,False,['README-dev.rst'],['6232eb5fdcffe77b8d7eaea44c6d7bc289f9f88f'],6,7,13,1,,,
0af28ccbc919c5bf0eeee7a9d907aee778474537,Removed skip from test_watchers_are_finished,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-23 10:03:39-04:00,14400,2017-05-25 14:10:59-04:00,14400,True,False,['test_connection.py'],['336e7636d1c06e6092558ae43e99ce7a34c4b172'],2,0,2,1,,,
f916afd653589a7e020a7a2881e56d7a5880b61d,Added fix to test_token_aware_composite_key test,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-24 15:43:05-04:00,14400,2017-05-25 14:10:59-04:00,14400,True,False,['test_loadbalancingpolicies.py'],['0af28ccbc919c5bf0eeee7a9d907aee778474537'],3,13,16,1,0.0,1.0,1.0
3eb2d20c6c3224700017058c4b975b533ce9704b,Possible fix for test_async_timeouts,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-24 17:34:21-04:00,14400,2017-05-25 14:10:59-04:00,14400,True,False,['test_failure_types.py'],['f916afd653589a7e020a7a2881e56d7a5880b61d'],6,12,18,1,1.0,1.0,1.0
391378bc457f69ff7bd47f417c5efff54886dcda,Possible fix for test_for_schema_disagreement_attribute,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-24 17:53:51-04:00,14400,2017-05-25 14:10:59-04:00,14400,True,False,"['__init__.py', 'test_schema.py']",['3eb2d20c6c3224700017058c4b975b533ce9704b'],2,7,9,2,,,
82d36bf105458224432006112c2733c0049ec1bf,Possible fix for test_async_timeouts,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-25 16:38:12-04:00,14400,2017-05-25 14:10:59-04:00,14400,True,False,['test_failure_types.py'],['391378bc457f69ff7bd47f417c5efff54886dcda'],6,7,13,1,1.0,1.0,1.0
b8f1b77383daa2912410e8c3670c55cbaab13f0d,Added possible fix to test_unavailable,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-27 15:06:26-04:00,14400,2017-05-25 14:10:59-04:00,14400,True,False,['test_metrics.py'],['82d36bf105458224432006112c2733c0049ec1bf'],1,1,2,1,0.0,1.0,1.0
dc8d840cb1c2e35056312d109afa9b42dd960fa8,Added possible fix to test_connect_on_keyspace,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-09 16:20:28-04:00,14400,2017-05-25 14:10:59-04:00,14400,True,False,"['__init__.py', '__init__.py', 'test_cluster.py']",['b8f1b77383daa2912410e8c3670c55cbaab13f0d'],6,12,18,3,0.0,0.0,1.0
10dfa3eb898da328e26b3c535f9cee96c34da252,Removed unused class in test,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-12 13:58:25-04:00,14400,2017-05-25 14:10:59-04:00,14400,True,False,"['__init__.py', 'test_metrics.py']",['dc8d840cb1c2e35056312d109afa9b42dd960fa8'],16,6,22,2,0.0,0.0,0.0
be535e7fc46dda747e0040233be1f1c3fa42b2f4,Fix for test_for_schema_disagreement_attribute,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-23 13:57:23-04:00,14400,2017-05-25 14:10:59-04:00,14400,True,False,"['test_schema.py', 'test_query.py']",['10dfa3eb898da328e26b3c535f9cee96c34da252'],3,6,9,2,0.0,1.0,1.0
e337ef26c9633558d11e7e8063ef9c894e44a4fa,Moved test_watchers_are_finished to unit tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-23 15:19:52-04:00,14400,2017-05-25 14:10:59-04:00,14400,True,False,"['test_connection.py', 'test_libevreactor.py']",['be535e7fc46dda747e0040233be1f1c3fa42b2f4'],47,38,85,2,0.0,0.0,0.0
6d3c453d6fbbeaaff2784c38115a06dba33c33df,Fixed opened connections in test_session_host_parameter,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-23 17:35:06-04:00,14400,2017-05-25 14:10:59-04:00,14400,True,False,['test_cluster.py'],['e337ef26c9633558d11e7e8063ef9c894e44a4fa'],4,14,18,1,1.0,1.0,1.0
49769b1d8aa653e7c39c3cd89dc89a6a7ba3fe80,Added message in case of assertion fail,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-24 13:26:28-04:00,14400,2017-05-25 14:10:59-04:00,14400,True,False,['test_cluster.py'],['6d3c453d6fbbeaaff2784c38115a06dba33c33df'],1,1,2,1,,,
8e6a1db2f8ce33b486d671aff479959aa531d4ed,PrepareStatement should support is_idempotent,Alan Boudreault,alan@alanb.ca,Jim Witschey,jim.witschey@gmail.com,2017-05-25 17:34:40-04:00,14400,2017-05-26 10:42:50-04:00,14400,True,False,"['CHANGELOG.rst', 'query.py', 'test_policies.py']",['b81cfee027906b8c6989afbf1772c6a034b6b502'],1,19,20,3,0.0,1.0,0.8571428571428571
20d7de0435f040f1941e79f18aca5c4f362c35ac,Fix small C* version issue in test_speculative_execution,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-26 16:00:37-04:00,14400,2017-05-26 16:00:37-04:00,14400,True,False,['test_policies.py'],['dc198f7ddb21e7479c2a7c9b3f8c1f946c884968'],1,1,2,1,,,
edf483f45eafcb366035d9756b38cd3eaf6ebc7a,Skipped Libev tests if not installed,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-26 16:37:57-04:00,14400,2017-05-26 16:37:57-04:00,14400,True,False,['test_libevreactor.py'],['b601b0c37a72258151d38750d9bc36872ead1a33'],1,1,2,1,,,
c714839a427a716868a49aa428283b1a048a850f,Bump cython version to allow 0.25.x,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-05-26 16:02:29-04:00,14400,2017-05-29 10:04:38-04:00,14400,True,False,"['CHANGELOG.rst', 'setup.py']",['dc198f7ddb21e7479c2a7c9b3f8c1f946c884968'],1,5,6,2,,,
78691a7ec589ef7109c4d98cd5f95a90cb0cd00e,Ensure asyncore dispatchers are closed on exit,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-06-04 11:19:31-04:00,14400,2017-06-07 07:32:18-04:00,14400,True,False,"['CHANGELOG.rst', 'asyncorereactor.py']",['dc198f7ddb21e7479c2a7c9b3f8c1f946c884968'],1,10,11,2,1.0,1.0,1.0
e31394692dce9c4252f4c1b49d792a7af97fe5fc,All Heartbeat futures should have the same timeout,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-06-09 15:41:13-04:00,14400,2017-06-09 15:41:13-04:00,14400,True,False,"['CHANGELOG.rst', 'connection.py']",['8e67b91ca9ec20454528183b981e4ef7c5ca1209'],1,7,8,2,0.0,0.0,1.0
e19c041822f87b27086a9ce0106eec76f865b22e,Add idle_heartbeat_timeout cluster option to tune how long to wait for heartbeat responses,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-06-12 09:26:46-04:00,14400,2017-06-12 12:56:39-04:00,14400,True,False,"['CHANGELOG.rst', 'cluster.py', 'connection.py', 'cluster.rst', 'test_connection.py']",['e31394692dce9c4252f4c1b49d792a7af97fe5fc'],8,27,35,5,0.14285714285714285,0.14285714285714285,0.0
32a057c47e8efb8c920dcb49d0c110f14df627ae,Added a more complete pre build check to setup.py,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-06-12 16:12:00-04:00,14400,2017-06-12 16:32:33-04:00,14400,True,False,"['CHANGELOG.rst', 'setup.py']",['f60bdc38c4a3faba276864fb9d44e22a5816650f'],0,8,8,2,0.0,0.0,1.0
2113517142892333ac2a63e0fdd0d1b196d20c70,add details to README-dev.rst,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-06-13 13:38:20-04:00,14400,2017-06-13 13:38:20-04:00,14400,True,False,['README-dev.rst'],['f60bdc38c4a3faba276864fb9d44e22a5816650f'],0,6,6,1,,,
c59763815d2cb29ae08ab5ab14932de7dd28212c,Better state cleaning in HostConnection.shutdown,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-06-15 14:09:06-04:00,14400,2017-06-15 14:09:06-04:00,14400,True,False,['pool.py'],['26eb54a47bd5d149763b1fe17da78656a25ba2e2'],0,1,1,1,1.0,1.0,1.0
e57450c3ffe3a39f72ed2a0db4ed77be7bcbe28f,Ensure shutdown_on_error is set before defuncting the connection,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-06-16 07:29:11-04:00,14400,2017-06-16 07:29:11-04:00,14400,True,False,['connection.py'],['43f6928a6974dab6e9e78e0d749abfc90de77a98'],1,1,2,1,,,
69b44c5131a34497eea5b176c5935d0ec4012bf0,772 changelog,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-06-16 10:31:17-04:00,14400,2017-06-16 10:31:17-04:00,14400,True,False,['CHANGELOG.rst'],['2c121d7c28de9d882a30aef3be8befe517b75a3f'],0,1,1,1,,,
a8c35c8670161279e3f1337b4a7aa1bb0a75a3d4,fix in_flight += 1 invariant in set_keyspace_async,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-06-15 17:50:57-04:00,14400,2017-06-19 10:38:03-04:00,14400,True,False,"['CHANGELOG.rst', 'connection.py']",['69b44c5131a34497eea5b176c5935d0ec4012bf0'],13,26,39,2,1.0,0.0,1.0
286e66357dd65b30665883c26c6dc7b4f4f06c09,"fix assert placement in get_request_id

The old behavior could lead to cases where highest_request_id could be
incremented beyond max_request_id and not fixed.",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-06-16 11:41:10-04:00,14400,2017-06-19 10:38:03-04:00,14400,True,False,['connection.py'],['a8c35c8670161279e3f1337b4a7aa1bb0a75a3d4'],1,2,3,1,1.0,1.0,1.0
e301ff9c702bbc0741a74da5634108d0986381d3,Fix DeprecationWarning when using lz4,Shevchenko Vitaliy,vetal4444@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-06-01 18:31:21+03:00,-10800,2017-06-19 11:09:02-04:00,14400,True,False,['connection.py'],['d6b211b572cf5464cb692f645ecff959018ee1bd'],2,8,10,1,,,
0c510e72728b794da41242c83e97434b6e5d9111,changelog for 769,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-06-19 11:19:32-04:00,14400,2017-06-19 11:19:32-04:00,14400,True,False,['CHANGELOG.rst'],['cf3ce83f4857b8ef22b0fcce485f308d5a7d9d36'],0,1,1,1,,,
25fb93157fb50e841c7ff16913787890bee2d877,Updated build.yaml to run on the weekend,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-06-26 10:22:20-04:00,14400,2017-06-26 10:46:33-04:00,14400,True,False,['build.yaml'],['0c510e72728b794da41242c83e97434b6e5d9111'],5,5,10,1,,,
9f897c76041f0d5cde201f1fd6bc76a56d00cb12,Updated appveyor tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-20 12:38:22-04:00,14400,2017-06-26 10:51:24-04:00,14400,True,False,"['appveyor.ps1', 'run_test.ps1', '__init__.py']",['0c510e72728b794da41242c83e97434b6e5d9111'],8,38,46,3,,,
491413ea4fe94cc8989a239dcc342c60fe0b355a,Fixed appveyor integration tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-04-27 16:20:39-04:00,14400,2017-06-26 10:51:24-04:00,14400,True,False,"['appveyor.yml', 'appveyor.ps1', 'run_test.ps1']",['9f897c76041f0d5cde201f1fd6bc76a56d00cb12'],5,9,14,3,,,
1b56cc6930b1f831c6deb69196181da186ecd5fd,Skipped test for windows,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-05-08 11:38:40-04:00,14400,2017-06-26 10:51:24-04:00,14400,True,False,['test_connection.py'],['491413ea4fe94cc8989a239dcc342c60fe0b355a'],1,4,5,1,,,
39d1cc5533e8d22724231eeede154f3a6fcb69cc,Added potential fix for test_trace_unavailable,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-06-26 16:37:21-04:00,14400,2017-06-29 11:14:58-04:00,14400,True,False,"['test_cluster.py', 'test_metrics.py']",['54c5e982eb91eb01a1cf2c0319f7773cc7842468'],7,26,33,2,0.0,1.0,1.0
d4385bf2b735bc9c239578b5142fa7b50a0422bf,KEEP_TEST_CLUSTER env var,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-06-28 14:02:54-04:00,14400,2017-07-10 09:38:22-04:00,14400,True,False,['__init__.py'],['a83f3dd191bdb2cf26e4f5012ba482c96b146ac8'],2,4,6,1,,0.0,
6f4d4ff7dfb59ffad3ec01b11b9120bae70af663,Changed _defer_fields and _only_fields in CQLEngine so they store the name of the fields in the DB,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-07-05 11:33:07-04:00,14400,2017-07-10 16:01:20-04:00,14400,True,False,"['query.py', 'test_queryset.py']",['a83f3dd191bdb2cf26e4f5012ba482c96b146ac8'],5,22,27,2,0.875,0.875,0.875
6bec6fd7e852ae33e12cf475b030d08260b04240,"check new value, not old one

part of PYTHON-734",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-07-10 14:55:03-04:00,14400,2017-07-10 16:10:57-04:00,14400,True,False,['connection.py'],['d4385bf2b735bc9c239578b5142fa7b50a0422bf'],1,1,2,1,,,
9aaf1ec532f730c9fefd5ba4440553ea75ffa6b3,whitespace fixes pre-PYTHON-761,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-26 12:05:32-04:00,14400,2017-07-11 10:55:26-04:00,14400,True,False,"['policies.py', 'test_loadbalancingpolicies.py', 'test_policies.py']",['a83f3dd191bdb2cf26e4f5012ba482c96b146ac8'],11,13,24,3,0.0,0.0,0.0
391889b06791832d6ac36660f19aba139b3e8d6d,add HostFilterPolicy and tests,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-05-26 14:26:07-04:00,14400,2017-07-11 10:55:44-04:00,14400,True,False,"['CHANGELOG.rst', 'policies.py', 'policies.rst', 'test_loadbalancingpolicies.py', 'test_policies.py']",['9aaf1ec532f730c9fefd5ba4440553ea75ffa6b3'],3,375,378,5,0.7714285714285715,1.0,0.8142857142857143
42b1fbaebaa58aeb9d0f37b6bb5315b4c219ee67,fix murmur3 on big-endian systems,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-07-11 15:29:09-04:00,14400,2017-07-11 15:29:09-04:00,14400,True,False,"['CHANGELOG.rst', 'murmur3.py']",['c46377d06963ba209ab03c9634bc7b454425889a'],1,2,3,2,,,
b349ecbf699e8f6a5e8aacf893383a7e6679ac0a,explain use of byte-order sigil,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-07-12 10:24:03-04:00,14400,2017-07-12 10:25:20-04:00,14400,True,False,['murmur3.py'],['42b1fbaebaa58aeb9d0f37b6bb5315b4c219ee67'],0,2,2,1,,,
1ca83aa8326a0fb935c42be18e781a851c952ec0,Make sure the session is shutdown on destruction,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-07-12 06:44:05-04:00,14400,2017-07-12 15:04:18-04:00,14400,True,False,"['CHANGELOG.rst', 'cluster.py']",['ac0e8eacd702c569e0ecdedb49219381e2420ae6'],0,5,5,2,1.0,1.0,1.0
f7881d9e04da7da37aff31b0abee26ea763d3b4b,PYTHON-785 changelog entry,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-07-13 09:48:13-04:00,14400,2017-07-13 09:48:13-04:00,14400,True,False,['CHANGELOG.rst'],['5a06b76d15750097bb80e34c5458f1f6ed2a35b7'],0,1,1,1,,,
0fcd4b99d7c8011e77d3037abc4a06a5826808a3,"flesh out ResultSet upgrade guide (#796)

PYTHON-464",Jim Witschey,jim.witschey@gmail.com,GitHub,noreply@github.com,2017-07-13 15:41:42-04:00,14400,2017-07-13 15:41:42-04:00,14400,True,False,['upgrading.rst'],['f7881d9e04da7da37aff31b0abee26ea763d3b4b'],3,10,13,1,,,
a51cae2055714923a1df69f0987a72590d0b74be,fix docs/index.rst (#797),Jim Witschey,jim.witschey@gmail.com,GitHub,noreply@github.com,2017-07-14 13:14:58-04:00,14400,2017-07-14 13:14:58-04:00,14400,True,False,['index.rst'],['0fcd4b99d7c8011e77d3037abc4a06a5826808a3'],3,2,5,1,,,
e7c7d7bf27576b7ca92503e250599d02df0a87e2,"timestamp granularity doc fix (#799)

PYTHON-717",Jim Witschey,jim.witschey@gmail.com,GitHub,noreply@github.com,2017-07-17 09:05:57-04:00,14400,2017-07-17 09:05:57-04:00,14400,True,False,['dates_and_times.rst'],['a51cae2055714923a1df69f0987a72590d0b74be'],2,2,4,1,,,
b7c2eb700521dd7fc6c1401d7aa432ec88a592a4,Add python 3.5 and 3.6 classifier in setup.py (#749),Colin Deasy,coldeasy@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-07-17 15:23:54+01:00,-3600,2017-07-17 10:23:54-04:00,14400,True,False,['setup.py'],['e7c7d7bf27576b7ca92503e250599d02df0a87e2'],0,2,2,1,0.0,0.0,1.0
1f9bb019c780a49a2f5e580c495927812287d216,Replaced WhiteHost policy for FilterHost policy in tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-07-13 08:25:04-04:00,14400,2017-07-17 11:55:06-04:00,14400,True,False,"['policies.py', 'test_failure_types.py', 'test_cluster.py', 'test_connection.py', 'test_metrics.py']",['852d39e6c019022acdc782dd115fd0b9cbb34870'],32,62,94,5,0.0,0.8571428571428571,1.0
6ebbb24b5d1196f4422c35ed874e2902e97bf4fe,Added integration tests around querying replicas,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-07-12 21:07:08-04:00,14400,2017-07-17 20:00:27-04:00,14400,True,False,['test_cluster.py'],['852d39e6c019022acdc782dd115fd0b9cbb34870'],3,62,65,1,0.225,1.0,0.775
3a7d39c60cf47c80569b3e8b4cfb3622df191ead,minor fix in cqlengine docs,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-07-18 16:03:10-04:00,14400,2017-07-18 16:03:10-04:00,14400,True,False,['models.rst'],['f3b9badd1429928ce9906e4f6d0be26e90b4523e'],1,1,2,1,,,
6a9b9b616afe1be4200dc76e1235f9f09fb033fd,Added tests for PYTHON-761,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-07-13 13:28:49-04:00,14400,2017-07-19 12:28:16-04:00,14400,True,False,"['test_loadbalancingpolicies.py', 'test_policies.py', 'test_policies.py']",['852d39e6c019022acdc782dd115fd0b9cbb34870'],8,117,125,3,0.03278688524590164,1.0,1.0
f42132ad455706c41f69fbd84725876e8a266e4e,Fix for test_black_list_with_host_filter_policy since no gurantees are made in the order of hosts for RoundRobin,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-07-19 13:59:58-04:00,14400,2017-07-19 13:59:58-04:00,14400,True,False,['test_loadbalancingpolicies.py'],['8882aedc354f23366f833f6ce03cecbcb1471b21'],2,8,10,1,0.0,1.0,1.0
fad8764b365e76f2c2955500f2956c4396eec9b4,"Fix hfp docs (#802)

* fix HFP docs to account for new behavior

* make comment stop rendering",Jim Witschey,jim.witschey@gmail.com,GitHub,noreply@github.com,2017-07-19 14:28:56-04:00,14400,2017-07-19 14:28:56-04:00,14400,True,False,"['policies.py', 'policies.rst']",['f42132ad455706c41f69fbd84725876e8a266e4e'],5,14,19,2,,,
c2814ddd64acfcb12a44635e91e9cbe58d7cf9b4,Fixed HFP unit tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-07-20 16:16:37-04:00,14400,2017-07-20 16:16:37-04:00,14400,True,False,['test_policies.py'],['fad8764b365e76f2c2955500f2956c4396eec9b4'],8,4,12,1,0.0,0.0,1.0
d1da2b5685e82abe10d8a0e3e6b69f867a6aef34,CHANGELOG update for release,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-07-24 15:02:15-04:00,14400,2017-07-24 15:02:15-04:00,14400,True,False,['CHANGELOG.rst'],['c2814ddd64acfcb12a44635e91e9cbe58d7cf9b4'],5,7,12,1,,,
48accb56e5946396196bdaf71bfc1299c41562fd,version 3.11.0,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-07-24 15:59:03-04:00,14400,2017-07-24 15:59:03-04:00,14400,True,False,"['__init__.py', 'docs.yaml']",['d1da2b5685e82abe10d8a0e3e6b69f867a6aef34'],1,3,4,2,,,
d200658f46cdb84a413abe1616cc2e0823c26827,update version post-3.11.0-release,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-07-24 16:52:29-04:00,14400,2017-07-24 16:52:40-04:00,14400,True,False,['__init__.py'],['48accb56e5946396196bdaf71bfc1299c41562fd'],1,1,2,1,,,
0e65b336067d89e1b96d8c6b950886a649315656,big-endian non-support statement,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-07-25 10:02:51-04:00,14400,2017-07-25 10:02:51-04:00,14400,True,False,"['README.rst', 'index.rst']",['d200658f46cdb84a413abe1616cc2e0823c26827'],0,4,4,2,,,
9a67df40172d17428d11d31aa3b6526bc0a3bffd,Fixed some failing tests in Jenkins,bjmb,jaume.marhuenda@datastax.com,Jaume Marhuenda,jaume.marhuenda@datastax.com,2017-07-26 14:08:20-04:00,14400,2017-07-27 14:16:11-04:00,14400,True,False,"['test_cluster.py', 'test_policies.py']",['0e65b336067d89e1b96d8c6b950886a649315656'],3,5,8,2,0.0,1.0,1.0
3e125bf5d1df28db3466c7201f7dd9bcba03cb8f,"Prototype scassandra client, with metadata initialization",GregBestland,Greg.Bestland@datastax.com,bjmb,jaume.marhuenda@datastax.com,2016-08-04 16:40:52-05:00,18000,2017-07-28 14:01:50-04:00,14400,True,False,"['__init__.py', 'client.py']",['9a67df40172d17428d11d31aa3b6526bc0a3bffd'],0,139,139,2,1.0,1.0,0.9325842696629213
d33f2c084bb047c89151444ad2a45eff1a0d04ec,Added simple Server object to start and stop scassandra,GregBestland,Greg.Bestland@datastax.com,bjmb,jaume.marhuenda@datastax.com,2016-08-25 15:06:51-05:00,18000,2017-07-28 14:01:50-04:00,14400,True,False,['Server.py'],['3e125bf5d1df28db3466c7201f7dd9bcba03cb8f'],0,29,29,1,1.0,1.0,0.5
da017f15f7e55d8a6f6dcb4122b95aa3db587cfb,renaming server.py,GregBestland,Greg.Bestland@datastax.com,bjmb,jaume.marhuenda@datastax.com,2016-09-14 16:25:04-05:00,18000,2017-07-28 14:01:50-04:00,14400,True,False,"['asyncorereactor.py', 'client.py', 'server.py', '__init__.py', 'utils.py', 'test_policies.py']",['d33f2c084bb047c89151444ad2a45eff1a0d04ec'],28,347,375,6,0.9040404040404041,0.9191919191919192,0.8131313131313131
7f2a4637fb2f2b127d597ae198dd7a829460810d,"Added simulacron to test harness, refactores some tests using it",bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-06-13 10:40:04-04:00,14400,2017-07-28 17:51:30-04:00,14400,True,False,"['build.yaml', '__init__.py', '__init__.py', 'client.py', 'server.py', '__init__.py', 'test_connection.py', 'test_policies.py', 'utils.py', 'test_connection.py', 'test_policies.py']",['da017f15f7e55d8a6f6dcb4122b95aa3db587cfb'],469,512,981,11,0.0,0.0,0.0
10ecc372124279fdd2223fed63b88de0167baee0,Move calls to asyncore to the loop thread,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-07-25 16:41:06-04:00,14400,2017-07-31 17:59:36-04:00,14400,True,False,"['build.yaml', 'asyncorereactor.py', '__init__.py', 'test_failure_types.py', 'test_connection.py', 'test_policies.py', 'test_asyncorereactor.py']",['0e65b336067d89e1b96d8c6b950886a649315656'],19,62,81,7,0.4074074074074074,1.0,0.5925925925925926
e86655d8524449b541083aa14bcafec49b464bad,Added a test around SELECT JSON,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-07-31 16:38:40-04:00,14400,2017-08-01 12:51:40-04:00,14400,True,False,['test_query.py'],['9a67df40172d17428d11d31aa3b6526bc0a3bffd'],0,9,9,1,1.0,1.0,1.0
fe469911641169be81fc5c80d0932a256257a733,Added fix to temporal bug in eventlet,bjmb,jaume.marhuenda@datastax.com,Jaume Marhuenda,jaume.marhuenda@datastax.com,2017-08-01 13:59:59-04:00,14400,2017-08-01 14:16:34-04:00,14400,True,False,['test_eventletreactor.py'],['44c86d5117019120150cb6d2504006ff2d5424fc'],0,4,4,1,1.0,1.0,1.0
528242287447494c702251d402d083a0dd40993e,General cleanup for simulacron tests,Jim Witschey,jim.witschey@gmail.com,bjmb,jaume.marhuenda@datastax.com,2017-08-01 10:11:17-04:00,14400,2017-08-03 14:13:30-04:00,14400,True,False,"['asyncorereactor.py', '__init__.py', 'test_connection.py', 'test_policies.py', 'utils.py']",['7f2a4637fb2f2b127d597ae198dd7a829460810d'],40,38,78,5,0.0,0.0,0.5
d9bb688885077bc2e020af3eb1677a8217de3205,Updated C* version in build.yaml and appveyor,bjmb,jaume.marhuenda@datastax.com,Jaume Marhuenda,jaume.marhuenda@datastax.com,2017-07-27 18:57:15-04:00,14400,2017-08-03 15:22:29-04:00,14400,True,False,"['appveyor.yml', 'build.yaml']",['a65ac7db5dfce16fda9af0d9488a91be0eba238b'],3,3,6,2,,,
50068f333cd31eefb20f6ef96f0999620a24c622,add changelog checer to Travis configuration (#775),Jim Witschey,jim.witschey@gmail.com,GitHub,noreply@github.com,2017-08-03 17:47:16-04:00,14400,2017-08-03 17:47:16-04:00,14400,True,False,['.travis.yml'],['d9bb688885077bc2e020af3eb1677a8217de3205'],0,8,8,1,,,
ef234cd765ade6d1f07ffbfef26ef3236cdf2083,Fixed connection tests and set min C* version for JSON tests,bjmb,jaume.marhuenda@datastax.com,Jaume Marhuenda,jaume.marhuenda@datastax.com,2017-08-03 16:31:13-04:00,14400,2017-08-04 09:43:16-04:00,14400,True,False,"['test_connection.py', 'test_query.py']",['50068f333cd31eefb20f6ef96f0999620a24c622'],0,5,5,2,0.0,1.0,1.0
2a0856e2f79521f334ab36a16a3d16a3f7c7c92f,Returned connection when there is an OTO,bjmb,jaume.marhuenda@datastax.com,mambocab,jim.witschey@gmail.com,2017-08-03 16:31:13-04:00,14400,2017-08-07 16:40:22-04:00,14400,True,False,"['CHANGELOG.rst', 'build.yaml', 'cluster.py', 'connection.py', 'test_connection.py', 'test_connection.py', 'test_query.py']",['50068f333cd31eefb20f6ef96f0999620a24c622'],7,84,91,7,0.0,0.23333333333333334,0.9
916a05dd6a86266b3be8cfdea5b430ffe02e22da,Added simulacron to appveyor tests,bjmb,jaume.marhuenda@datastax.com,bjmb,jaume.marhuenda@datastax.com,2017-08-09 10:25:58-04:00,14400,2017-08-10 11:32:00-04:00,14400,True,False,"['appveyor.ps1', 'run_test.ps1', 'test_policies.py']",['4681d3ec4780c78134dcacbc764d4037b534ced4'],16,37,53,3,0.0,1.0,1.0
4effe4b73b89fd96d6b868a995ff71f36a0e6972,populate default lbp on connection,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-08-10 14:11:56-04:00,14400,2017-08-11 11:42:08-04:00,14400,True,False,"['CHANGELOG.rst', 'cluster.py', 'test_cluster.py']",['4681d3ec4780c78134dcacbc764d4037b534ced4'],1,23,24,3,0.0,0.0,0.8421052631578947
cc0089d16faa293bbcbabf3dd8bcc15a4591453b,Removed unncessary connection setup,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-08-16 16:41:31-04:00,14400,2017-08-16 16:41:31-04:00,14400,True,False,['connection.py'],['ef96c169ffe795463bed00e98f53ac5effa90520'],2,1,3,1,0.0,0.0,0.0
9d62306746c683d3ec6bca345e27dec392a09d20,Drop materialized view tables in tests,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-08-21 16:59:08-04:00,14400,2017-08-23 11:05:31-04:00,14400,True,False,['test_query.py'],['ef96c169ffe795463bed00e98f53ac5effa90520'],0,5,5,1,0.0,1.0,1.0
a90ce1219140bf2306163b35b6e02bbd4c947a1f,Updated CHANGELOG,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-08-25 16:07:08-04:00,14400,2017-08-25 16:07:08-04:00,14400,True,False,['CHANGELOG.rst'],['dacf38edf5a4bf607d25b107e61d56d67b1186fb'],0,1,1,1,,,
fc8a2c181100ee4efa3f332ebcf0eb11a037ab6f,test_protocol.py whitespace fixes,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-08-28 09:47:09-04:00,14400,2017-08-28 09:47:09-04:00,14400,True,False,['test_protocol.py'],['dacf38edf5a4bf607d25b107e61d56d67b1186fb'],4,4,8,1,,,
52796211b0e33c2f04d67f38947d808590ee9a70,Added tests for PYTHON-814,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-09-07 10:56:04-04:00,14400,2017-09-08 10:50:55-04:00,14400,True,False,['test_connection.py'],['a90ce1219140bf2306163b35b6e02bbd4c947a1f'],1,20,21,1,1.0,1.0,1.0
e71f4b4b4abc47fb7b1ee31628a24690d3e0ea5b,Refactor cqlengine.connections.test_conection.py,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-09-08 11:03:35-04:00,14400,2017-09-08 11:03:35-04:00,14400,True,False,['test_connection.py'],['52796211b0e33c2f04d67f38947d808590ee9a70'],29,33,62,1,1.0,1.0,1.0
5d3d47b5b75af19f9cb752057426421c3b88c8d4,Allow min_length==0 for Column.Text fields,Harald Nordgren,harald@cantemo.com,HaraldNordgren,haraldnordgren@gmail.com,2017-03-24 12:16:46+01:00,-3600,2017-09-13 20:31:09+02:00,-7200,True,False,['columns.py'],['a16f5f7b85536014a855a92168229e2ae887703d'],1,1,2,1,,,
f5694e4ae6d0569e08e8351b465ba0779eb4348c,"add and test keyspace-per-query

CASSANDRA-10145/PYTHON-678",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-08-28 09:47:50-04:00,14400,2017-09-14 12:47:49-04:00,14400,True,False,"['__init__.py', 'protocol.py', 'test_protocol.py']",['fc8a2c181100ee4efa3f332ebcf0eb11a037ab6f'],17,149,166,3,0.0782608695652174,0.6347826086956522,0.6086956521739131
81172ef1cbc09358f81c2c49e338bfa5603f8b81,"Added API and tests for CASSANDRA-10145 (#823)

PYTHON-678",Jaume Marhuenda,jaumemarhuenda@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-09-14 12:25:10-04:00,14400,2017-09-14 12:49:23-04:00,14400,True,False,"['CHANGELOG.rst', 'build.yaml', 'cluster.py', 'protocol.py', '__init__.py', 'test_query.py', 'test_protocol.py', 'test_response_future.py']",['f5694e4ae6d0569e08e8351b465ba0779eb4348c'],59,413,472,8,0.6079545454545454,0.8977272727272727,0.8920454545454546
189fe0bbe50b64f9384bbbf30b73e957e5630d2f,Fix bug when subclassing AsyncoreConnection,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-09-18 17:18:14-04:00,14400,2017-09-19 09:23:37-04:00,14400,True,False,"['CHANGELOG.rst', 'asyncorereactor.py']",['6c6aa22d941c3623ee09480328b01b6a5452c755'],1,2,3,2,,,
cbb2badb709ee4be8e2da06944ab7a385762f137,"The asyncore event loop shouldn't be awoken once closed, call manually to close the remaining open connections",bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-09-20 09:16:51-04:00,14400,2017-09-20 12:07:38-04:00,14400,True,False,"['CHANGELOG.rst', 'asyncorereactor.py']",['18aa7242ff3abd4218474dbf94ea09f43d4e8dff'],1,8,9,2,0.0,1.0,1.0
496391ee8397b695e552d214d077b64d7494aa64,Replace deprecated method,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-09-20 13:20:50-04:00,14400,2017-09-20 15:05:21-04:00,14400,True,False,['test_protocol.py'],['18aa7242ff3abd4218474dbf94ea09f43d4e8dff'],1,1,2,1,,,
d3e960134f97198f244873aa1ce66078947c3a89,Close dispatcher last when cleaning asyncore connections,bjmb,jaumemarhuenda@gmail.com,Jaume Marhuenda,jaumemarhuenda@gmail.com,2017-09-22 14:28:10-04:00,14400,2017-09-22 14:36:20-04:00,14400,True,False,['asyncorereactor.py'],['79947ba6ecdfaef9d87768935bbca77217099239'],6,4,10,1,0.0,1.0,1.0
86a88c3a048d5ee4f3e2ab99f5eb0501ca7f3f30,Fix another potential RuntimeError-s referenced to changed WeakSet instance during iteration,Shevchenko Vitaliy,vetal4444@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-06-15 11:12:19+03:00,-10800,2017-09-25 14:40:23-04:00,14400,True,False,"['CHANGELOG.rst', 'cluster.py']",['26eb54a47bd5d149763b1fe17da78656a25ba2e2'],14,16,30,2,,,
32037f35a299b937ca71bc553bf8c71ba22d7935,Allow min_length=0 for Ascii and Text column types,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-10-02 14:42:27-04:00,14400,2017-10-02 14:42:27-04:00,14400,True,False,"['CHANGELOG.rst', 'test_validation.py']",['227af867c8dfac04f4c7727afef63b7f24ab33a5'],0,7,7,2,0.0,1.0,1.0
1cc6b6395c9b21467e7da76b8a6f991cbc373bec,Remove DeprecationWarning when using WhiteListRoundRobinPolicy,Alan Boudreault,alan@alanb.ca,Alan Boudreault,alan@alanb.ca,2017-10-02 15:31:00-04:00,14400,2017-10-02 15:31:00-04:00,14400,True,False,"['CHANGELOG.rst', 'policies.py']",['32037f35a299b937ca71bc553bf8c71ba22d7935'],19,5,24,2,0.0,0.0,0.0
bb501ddacd8f708bc6b8bc1384443848b4141333,Moved test_getting_replicas to unit tests,bjmb,jaumemarhuenda@gmail.com,Jaume Marhuenda,jaumemarhuenda@gmail.com,2017-09-06 15:09:13-04:00,14400,2017-10-03 16:20:00-04:00,14400,True,False,"['test_metadata.py', 'test_metadata.py']",['32037f35a299b937ca71bc553bf8c71ba22d7935'],31,39,70,2,1.0,1.0,1.0
4fa014313b68c21962012bd4e490a116d2fbb122,Don't join the thread if it hasn't been started,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-09-21 12:30:50-04:00,14400,2017-10-03 16:37:27-04:00,14400,True,False,"['CHANGELOG.rst', 'libevreactor.py']",['496391ee8397b695e552d214d077b64d7494aa64'],5,12,17,2,0.6666666666666666,1.0,1.0
4ef23f3d7b19efd6b23722036ef9586d206beb44,Added test for WhiteListRoundRobinPolicyTests,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-10-03 14:22:17-04:00,14400,2017-10-03 17:03:49-04:00,14400,True,False,"['test_policies.py', 'test_policies.py']",['1cc6b6395c9b21467e7da76b8a6f991cbc373bec'],21,22,43,2,,,
9869c2a044e5dd76309026437bcda5d01acf99c7,"PYTHON-751: Add IPV4Address/IPV6Address support for inet type (#828)

* Add IPV4Address/IPV6Address support for inet type",Alan Boudreault,alan@alanb.ca,GitHub,noreply@github.com,2017-10-04 12:42:10-04:00,14400,2017-10-04 12:42:10-04:00,14400,True,False,"['CHANGELOG.rst', 'cqltypes.py', 'encoder.py', '__init__.py', '__init__.py', 'test_validation.py', 'datatype_utils.py', 'test_cluster.py', 'test_types.py', 'test_cluster.py']",['a549ca63477602d2a4f556733930b79996fd31e9'],44,103,147,10,0.34210526315789475,0.39473684210526316,1.0
034dfc37fd06f2e8754ecb2339e6c288daaa010f,"PYTHON-833: Bump Cython dependency version to 0.27 (#835)

* Bump Cython dependency version to 0.27",Alan Boudreault,alan@alanb.ca,GitHub,noreply@github.com,2017-10-04 12:44:05-04:00,14400,2017-10-04 12:44:05-04:00,14400,True,False,"['CHANGELOG.rst', 'setup.py', 'test-requirements.txt']",['9869c2a044e5dd76309026437bcda5d01acf99c7'],2,7,9,3,,,
9738aa1ef7ab2c2048f92e54190d7fbf46017890,"add VIEW and CDC writetypes

PYTHON-794",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-10-03 10:02:34-04:00,14400,2017-10-04 15:00:51-04:00,14400,True,False,"['CHANGELOG.rst', 'policies.py']",['034dfc37fd06f2e8754ecb2339e6c288daaa010f'],1,16,17,2,,,
af303571a143e1b83da97feff02493d9e80b3db0,"WARN on Cluster.__init__ w contact points & no lbp

PYTHON-812",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-10-03 14:50:57-04:00,14400,2017-10-04 15:22:10-04:00,14400,True,False,"['CHANGELOG.rst', 'cluster.py', 'test_cluster.py']",['d51d51cc908984db204811369945c21c8784c3e9'],1,51,52,3,0.5714285714285714,0.5714285714285714,0.5714285714285714
5c77d9392a6dd115bb2678d7bfc9dc8bba0882d3,"Added some tests around network paritioning, closing connections and cluster._retry and idle connections with simulacron",bjmb,jaume.marhuenda@datastax.com,bjmb,jaumemarhuenda@gmail.com,2017-08-09 17:31:12-04:00,14400,2017-10-04 17:41:11-04:00,14400,True,False,"['__init__.py', 'test_connection.py', 'test_policies.py', 'utils.py', 'test_cluster.py']",['a90ce1219140bf2306163b35b6e02bbd4c947a1f'],30,228,258,5,0.45918367346938777,1.0,0.8775510204081632
d94cece1be224493581b43f6c158f90cf4c3bee8,add CDCWriteException,Josh McKenzie,josh.mckenzie@datastax.com,Jim Witschey,jim.witschey@gmail.com,2017-06-30 22:57:03-05:00,18000,2017-10-09 10:49:01-04:00,14400,True,False,"['CHANGELOG.rst', '__init__.py', 'protocol.py', 'cassandra.rst']",['b5cb3bfc30e986bef6c2e157d38eab90568c7007'],0,17,17,4,1.0,1.0,1.0
cd3085e6c5344e2bfb82ce16bd97d2dade18f2d8,Added tests for PYTHON-808,bjmb,jaumemarhuenda@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-09-06 18:11:01-04:00,14400,2017-10-09 16:36:57-04:00,14400,True,False,['test_prepared_statements.py'],['b5cb3bfc30e986bef6c2e157d38eab90568c7007'],20,111,131,1,1.0,1.0,1.0
1429349a195f5e71b4300c30453598d571aec41e,add prepared metadata hash to protocol,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-09-13 17:48:15-04:00,14400,2017-10-11 10:18:51-04:00,14400,True,False,"['__init__.py', 'cluster.py', 'marshal.py', 'protocol.py', 'query.py', '__init__.py', 'test_prepared_statements.py']",['cd3085e6c5344e2bfb82ce16bd97d2dade18f2d8'],44,73,117,7,0.5,0.4583333333333333,0.20833333333333334
395281035593dafb64cf4b2d535c8a4546c2b1a3,"Fix dtests (#825)

* Fix dtests
* fix custom protocol tests",Alex Petrov,alexp@coffeenco.de,Jim Witschey,jim.witschey@gmail.com,2017-09-18 23:21:16+02:00,-7200,2017-10-11 10:22:16-04:00,14400,True,False,"['row_parser.pyx', 'test_custom_protocol_handler.py']",['1429349a195f5e71b4300c30453598d571aec41e'],6,6,12,2,,,
0115d2104b7b3e0cc56f44cbbdb4533dde6b79f4,CHANGELOG entry & test fixes,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-09-18 17:23:56-04:00,14400,2017-10-11 10:22:16-04:00,14400,True,False,"['CHANGELOG.rst', 'protocol.py', 'test_parameter_binding.py', 'test_protocol.py', 'test_response_future.py']",['395281035593dafb64cf4b2d535c8a4546c2b1a3'],17,27,44,5,0.8,1.0,1.0
ec70a54ea30e90c3e57f618c6934a6c7713b8d75,Added tests for ignoring and rethrowing in RetryPolicy,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-10-05 13:33:52-04:00,14400,2017-10-12 10:28:13-04:00,14400,True,False,['test_policies.py'],['59e06fbc6c8f471a69fc5a2d092a467cd04527d9'],4,68,72,1,0.5641025641025641,1.0,0.7948717948717948
c4efbe0769f819fd44c68328b6113771774bcb68,fix 3.11 failures after CASSANDRA-10786,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-10-12 13:11:51-04:00,14400,2017-10-12 14:26:33-04:00,14400,True,False,"['__init__.py', 'test_failure_types.py']",['59e06fbc6c8f471a69fc5a2d092a467cd04527d9'],12,6,18,2,0.0,0.0,0.0
ee6f9d6ba695ba485cbca032d2a376219e5ea11d,simplify redundant error type checking,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-10-12 14:27:19-04:00,14400,2017-10-12 14:27:19-04:00,14400,True,False,['test_failure_types.py'],['c4efbe0769f819fd44c68328b6113771774bcb68'],2,2,4,1,,,
22571afaea37f466cdec4b00c5c867079d858817,Fixed eventlet tests,bjmb,jaumemarhuenda@gmail.com,Jaume Marhuenda,jaumemarhuenda@gmail.com,2017-10-09 09:34:35-04:00,14400,2017-10-16 16:38:14-04:00,14400,True,False,"['test_eventletreactor.py', 'test_geventreactor.py', 'test_cluster.py']",['08ba052f1ccf5276dcfd2bf9d6764bb0b0dd1612'],7,9,16,3,,,
66c2b3384ac1557b35934c77b0576b346be04869,timestamp gen docstrings: sec-->usec,Adam Holmberg,Adam.Holmberg@datastax.com,Adam Holmberg,Adam.Holmberg@datastax.com,2017-10-24 12:16:43-05:00,18000,2017-10-24 12:38:40-05:00,18000,True,False,"['cluster.py', 'timestamps.py']",['22571afaea37f466cdec4b00c5c867079d858817'],2,2,4,2,,,
67e473403fc4516db2cad3f2941adc3078cf7f7e,Added upgrade tests,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-10-19 09:36:11-04:00,14400,2017-10-24 15:37:54-04:00,14400,True,False,"['build.yaml', '__init__.py', '__init__.py', 'test_upgrade.py']",['22571afaea37f466cdec4b00c5c867079d858817'],13,499,512,4,0.7842105263157895,0.968421052631579,0.9421052631578948
55167353c8b5cd83cac40a797d9e2caca7bd45de,"cleanup pre-PYTHON-838

- remove new sentinel; reuse _NOT_SET
- add file-terminating newline",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-10-17 14:48:33-04:00,14400,2017-10-25 13:31:36-04:00,14400,True,False,"['cluster.py', '__init__.py']",['22571afaea37f466cdec4b00c5c867079d858817'],5,3,8,2,,,
d69c746bfe0ea7cc11d3fd53e22f157b4c823cc5,add profile mode contact point checking,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-10-17 15:32:13-04:00,14400,2017-10-25 13:32:23-04:00,14400,True,False,"['CHANGELOG.rst', 'cluster.py', 'test_cluster.py']",['55167353c8b5cd83cac40a797d9e2caca7bd45de'],22,175,197,3,0.6521739130434783,0.6521739130434783,0.5978260869565217
bb315d4e40a5212578d826f2ab704a774f026dbd,whitespace,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-10-27 09:59:52-04:00,14400,2017-10-27 10:27:43-04:00,14400,True,False,['test_upgrade.py'],['67e473403fc4516db2cad3f2941adc3078cf7f7e'],9,10,19,1,,,
c966d805fe31c5c2123bd2866bb771468040f381,Don't set the keyspace if it's already set in the session,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-10-26 19:03:04-04:00,14400,2017-10-27 11:06:33-04:00,14400,True,False,"['CHANGELOG.rst', 'cluster.py']",['e8b0303b4b0a5510fccf2d4a97d142f4ae36b22e'],1,2,3,2,,,
ee515ac26e52be94eba14272a4bf6e0e1ddf6e4a,"Add `NO_COMPACT` version to CQL protocol, patch for CASSANDRA-10857. (#846)

* Add `NO_COMPACT` version to CQL protocol, patch for CASSANDRA-10857.

* add changelog entry; preserve Connection.__init__ API",Alex Petrov,alexp@coffeenco.de,Jim Witschey,jim.witschey@gmail.com,2017-10-27 19:00:12+02:00,-7200,2017-10-27 13:00:12-04:00,14400,True,False,"['CHANGELOG.rst', 'cluster.py', 'connection.py', 'protocol.py']",['e8b0303b4b0a5510fccf2d4a97d142f4ae36b22e'],5,18,23,4,0.5,0.5,0.0
778bb440af79d7851c38e2a0038ba058470171e7,add logging to upgrade tests,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-10-30 11:39:58-04:00,14400,2017-10-30 11:39:58-04:00,14400,True,False,"['__init__.py', '__init__.py']",['bb315d4e40a5212578d826f2ab704a774f026dbd'],1,8,9,2,0.75,1.0,1.0
ed3dadd899a9c6006ff26bfb89a15348b417a031,"clearer constant name

When I read UPGRADE_CLUSTER, I interpret it as a bool meaning ""the
cluster should be upgraded""",Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-10-30 14:40:48-04:00,14400,2017-10-30 14:41:37-04:00,14400,True,False,['__init__.py'],['778bb440af79d7851c38e2a0038ba058470171e7'],2,2,4,1,,,
0f3b5bee3d2fe4dbc55133d1cde633272e43bf96,Added tests for PYTHON-839,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-10-25 15:15:46-04:00,14400,2017-11-01 12:03:12-04:00,14400,True,False,"['__init__.py', 'test_cluster.py']",['3c5000bf91e3488b212147bb00c28ba494d935da'],3,62,65,2,0.0,1.0,1.0
72a0935d75a24e26c927f38dab1242e83d1a5091,bump release version,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-11-02 16:26:54-04:00,14400,2017-11-02 16:26:54-04:00,14400,True,False,['__init__.py'],['afb475bc385fda80136abab14d51caf3b9272236'],1,1,2,1,,,
0855cbde125b57d65dea771a2e99db90b13e31fa,add new version to docs.yaml,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-11-02 16:30:25-04:00,14400,2017-11-02 16:30:25-04:00,14400,True,False,['docs.yaml'],['72a0935d75a24e26c927f38dab1242e83d1a5091'],0,2,2,1,,,
a89563ff426fd5360dc6801ba952756b4f75a862,version 3.12.0 changelog,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-11-06 12:33:41-05:00,18000,2017-11-06 12:33:41-05:00,18000,True,False,['CHANGELOG.rst'],['0855cbde125b57d65dea771a2e99db90b13e31fa'],6,4,10,1,,,
43b9c995e7fb335e4f88e931f69f575435ce2ba5,fix doc generation,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-11-06 12:43:59-05:00,18000,2017-11-06 12:43:59-05:00,18000,True,False,['cassandra.rst'],['a89563ff426fd5360dc6801ba952756b4f75a862'],3,0,3,1,,,
40393ffbbac4e7b5fff8519ef3d639169563aea5,fix 3.12.0 docs ref,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-11-06 12:46:22-05:00,18000,2017-11-06 12:46:22-05:00,18000,True,False,['docs.yaml'],['43b9c995e7fb335e4f88e931f69f575435ce2ba5'],1,1,2,1,,,
15ef6acefbb3806130cd388f1528804e8f179292,bump to post0 version,Jim Witschey,jim.witschey@gmail.com,Jim Witschey,jim.witschey@gmail.com,2017-11-06 12:50:30-05:00,18000,2017-11-06 12:50:30-05:00,18000,True,False,['__init__.py'],['40393ffbbac4e7b5fff8519ef3d639169563aea5'],1,1,2,1,,,
08777cb8c37a413dea4cc0c7d9dd8dd2ca032703,Added tests for prepared metadata id and conditional statements,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-11-07 15:52:36-05:00,18000,2017-11-07 16:09:59-05:00,18000,True,False,['test_prepared_statements.py'],['0855cbde125b57d65dea771a2e99db90b13e31fa'],0,62,62,1,0.4444444444444444,1.0,0.4444444444444444
768325e250f8707770ad2dd77bcf8de0b085cc5b,Added upgrade tests,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-10-19 09:36:11-04:00,14400,2017-11-10 15:14:37-05:00,18000,True,False,"['build.yaml', '__init__.py', '__init__.py', 'test_upgrade.py']",['22571afaea37f466cdec4b00c5c867079d858817'],13,503,516,4,0.8783068783068783,0.9682539682539683,0.9417989417989417
570cb321185534770eb2ea6c88439c1db5f5424a,Refactored prepared metadata id conditional tests,Jim Witschey,jim.witschey@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-11-10 10:43:52-05:00,18000,2017-11-10 16:06:54-05:00,18000,True,False,['test_prepared_statements.py'],['08777cb8c37a413dea4cc0c7d9dd8dd2ca032703'],18,20,38,1,1.0,0.0,1.0
575f8de67743b5b5dccd56b2dc3b6e43fcc9b9b6,Set alabaster as theme for documentation (#854),Alan Boudreault,alan@alanb.ca,GitHub,noreply@github.com,2017-11-13 15:22:19-05:00,18000,2017-11-13 15:22:19-05:00,18000,True,False,"['conf.py', 'custom.css_t', 'theme.conf']",['c66f57b307a53bae600145712b508f4f6cddcf22'],3,34,37,3,,,
0056c0a0ed222769f305e0d78266c3515037073b,Test delay can be zero in ConstantSpeculativeExecutionPolicy,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-11-08 13:52:51-05:00,18000,2017-11-16 11:18:46+01:00,-3600,True,False,['test_policies.py'],['15ef6acefbb3806130cd388f1528804e8f179292'],6,35,41,1,1.0,1.0,1.0
e914c84ad26b8f46da56772285e69d9f25cd489b,Removed some dse references in tests and compact storage,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-11-10 12:19:35-05:00,18000,2017-11-16 12:07:06+01:00,-3600,True,False,"['__init__.py', 'test_connection.py', 'test_policies.py', 'utils.py', 'test_metadata.py']",['15ef6acefbb3806130cd388f1528804e8f179292'],99,26,125,5,0.41025641025641024,0.7435897435897436,0.358974358974359
1b5e89289e0ddc92d7d8529bade3aa3470bf37a2,Use mock instead of unittest.mock,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-11-16 13:43:10+01:00,-3600,2017-11-16 13:43:10+01:00,-3600,True,False,['test_policies.py'],['52834b3ad604272229ccf9a9bb1abe86e357a7ce'],2,1,3,1,,,
3dfbf92f1ef73470769b27981b335613af66f64c,Set consitency level to Quorum when creating/droping the keyspace in tests,bjmb,jaumemarhuenda@gmail.com,Jaume Marhuenda,jaumemarhuenda@gmail.com,2017-11-13 09:55:41+01:00,-3600,2017-11-17 06:13:21+01:00,-3600,True,False,"['setup.py', 'utils.py', 'test_policies.py']",['abdc08273367b67513eb21fde2f88f0dffe1c9b1'],12,22,34,3,0.75,1.0,0.75
0cee88ec920eab34455de179d7eeea37ada3e6d7,Don't test anymore against C* 2.0,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-11-17 10:47:59+01:00,-3600,2017-11-17 10:47:59+01:00,-3600,True,False,['build.yaml'],['3dfbf92f1ef73470769b27981b335613af66f64c'],1,0,1,1,,,
4ceea3e048bda5d9a121f42efddc33d130148bec,Move upgrade tests under integration,bjmb,jaumemarhuenda@gmail.com,bjmb,jaumemarhuenda@gmail.com,2017-11-10 15:23:27-05:00,18000,2017-11-17 11:32:37+01:00,-3600,True,False,"['__init__.py', 'test_policies.py', '__init__.py', 'test_upgrade.py']",['5a32cdf50c78985c47767519f2615601c04c2e35'],8,11,19,4,1.0,1.0,1.0
71dd7f2d97a31399abeb319321581df0fb5eb0aa,PYTHON-629: Added release section for building wheels and verifying file,Arun Chennadi,aruntejbombay@gmail.com,Arun Chennadi,aruntejbombay@gmail.com,2017-11-21 21:26:34-08:00,28800,2017-11-21 21:26:34-08:00,28800,True,False,"['build.yaml', 'verify_driver_installation.py']",['8d13b13437fe5c01984ddd0554be29425229b640'],0,148,148,2,1.0,1.0,1.0
2f6838277c111a9597644f9df087ba8dee7f95eb,testing travis builds,Arun Chennadi,aruntejbombay@gmail.com,Arun Chennadi,aruntejbombay@gmail.com,2017-11-26 17:43:17-08:00,28800,2017-11-26 17:43:17-08:00,28800,True,False,"['.travis.yml', 'build-wheels-docker.sh', 'build-wheels-linux.sh', 'build-wheels-osx.sh', 'build-wheels.sh', 'verify_driver_installation.py']",['71dd7f2d97a31399abeb319321581df0fb5eb0aa'],32,77,109,6,,,
7ec26378bd7413ac9ce0aeb642ceffa994b006a3,changed perms,Arun Chennadi,aruntejbombay@gmail.com,Arun Chennadi,aruntejbombay@gmail.com,2017-11-26 17:46:47-08:00,28800,2017-11-26 17:46:47-08:00,28800,True,False,"['build-wheels-docker.sh', 'build-wheels-linux.sh', 'build-wheels-osx.sh', 'build-wheels.sh']",['2f6838277c111a9597644f9df087ba8dee7f95eb'],0,0,0,4,,,
1d5d4ad542b59c8bce3855d5d73456490fa77a29,changed osx builds,Arun Chennadi,aruntejbombay@gmail.com,Arun Chennadi,aruntejbombay@gmail.com,2017-11-26 17:58:45-08:00,28800,2017-11-26 17:58:45-08:00,28800,True,False,['build-wheels.sh'],['7ec26378bd7413ac9ce0aeb642ceffa994b006a3'],1,2,3,1,,,
