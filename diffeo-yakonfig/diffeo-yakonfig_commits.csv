Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
22f37841c95b03b1cd94f038f33c05c346dc2d2f,Initial commit,Brian Olson,icic@bolson.org,Brian Olson,icic@bolson.org,2013-12-20 13:55:31-08:00,28800,2013-12-20 13:55:31-08:00,28800,True,False,"['.gitignore', 'LICENSE', 'README.md']",[],0,60,60,3,,,
3336dd3cda3327acf2152f789237a4f9fa5671fc,initial commit. passes some early tests.,Brian Olson,brian.olson@gmail.com,Brian Olson,brian.olson@gmail.com,2013-12-20 18:09:12-05:00,18000,2013-12-20 18:09:12-05:00,18000,True,False,"['.gitignore', 'setup.py', 'test_yakonfig.py', '__init__.py', 'yakonfig.py']",['22f37841c95b03b1cd94f038f33c05c346dc2d2f'],0,267,267,5,0.4215686274509804,0.7745098039215687,1.0
5e69f7ac0e38fba53ffde5c2f1acb783eef38dd2,"adding basic components for build, including `make test` that calls `python setup.py test`",John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-01-19 15:54:47+00:00,0,2014-01-19 15:54:47+00:00,0,True,False,"['MANIFEST.in', 'Makefile', 'setup.py', 'version.py']",['3336dd3cda3327acf2152f789237a4f9fa5671fc'],10,228,238,4,0.5813953488372093,0.8488372093023255,1.0
a8340953addf75e396efac506ce4b1f2f82ae6cf,"fixing buggy use of python primitive ""license""",John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-01-19 18:15:36+00:00,0,2014-01-19 18:15:36+00:00,0,True,False,"['LICENSE.txt', 'setup.py']",['5e69f7ac0e38fba53ffde5c2f1acb783eef38dd2'],2,2,4,2,,,
3e04a6097b1fc593610c2a1abea303779979af30,"adding get_global_config as the standard interface for parts of a
system that are not main(), which calls set_global_config",John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-01-21 06:08:59+00:00,0,2014-01-21 06:08:59+00:00,0,True,False,"['MANIFEST.in', 'test_yakonfig.py', '__init__.py', 'yakonfig.py']",['a8340953addf75e396efac506ce4b1f2f82ae6cf'],14,55,69,4,0.3333333333333333,0.9666666666666667,1.0
e382fe7b175c5733d6b3987b0f55c920adec1e4e,better exception handling for get_global_config,John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-01-25 22:09:59+00:00,0,2014-01-25 22:09:59+00:00,0,True,False,['yakonfig.py'],['3e04a6097b1fc593610c2a1abea303779979af30'],1,3,4,1,1.0,1.0,1.0
f148ac0467d7b97fe7679b9477ca1c732fd04cf1,adding tests for !include_yaml and introducing !include_func,John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-01-27 03:55:56+00:00,0,2014-01-27 03:55:56+00:00,0,True,False,"['README.md', '__init__.py', '__init__.py', 'setup_logging.py', 'test_yakonfig.py', 'yakonfig.py']",['e382fe7b175c5733d6b3987b0f55c920adec1e4e'],25,187,212,6,0.5851063829787234,1.0,0.9787234042553191
0b6ddcbcf53c0f8c2b4d17bbf7c38e22310f030b,"renaming ""test"" directory to ""tests"" for consistency",John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-01-27 03:56:33+00:00,0,2014-01-27 03:56:33+00:00,0,True,False,"['__init__.py', '__init__.py', 'setup_logging.py', 'test_yakonfig.py']",['f148ac0467d7b97fe7679b9477ca1c732fd04cf1'],0,0,0,4,,,
e8df7063bc4edef25baa04bc77903366f457ba5f,fixing tests that rely on the module name tests.yakonfig.*,John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-01-27 03:57:42+00:00,0,2014-01-27 03:57:42+00:00,0,True,False,['test_yakonfig.py'],['0b6ddcbcf53c0f8c2b4d17bbf7c38e22310f030b'],2,2,4,1,,,
7afa009d7a4a194d560d5b66e2de6c48bd619174,adding !include_runtime as a third way to insert another YAML file,John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-02-02 06:06:09+00:00,0,2014-02-02 06:06:09+00:00,0,True,False,"['test_yakonfig.py', 'yakonfig.py']",['e8df7063bc4edef25baa04bc77903366f457ba5f'],1,31,32,2,1.0,1.0,1.0
429cedefdc26522061ee5399699985187e82556d,replacing assert with Exception,John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-02-11 13:57:02+00:00,0,2014-02-11 13:57:02+00:00,0,True,False,['yakonfig.py'],['7afa009d7a4a194d560d5b66e2de6c48bd619174'],1,3,4,1,0.0,0.0,1.0
764bc70aa2b0a0d42803c8e63977b79d32394205,"replacing asserts with Exceptions, and allowing yakonfig.set_global_config to be called multiple times to *change* the config",John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-02-11 14:04:56+00:00,0,2014-02-11 14:04:56+00:00,0,True,False,['yakonfig.py'],['429cedefdc26522061ee5399699985187e82556d'],4,3,7,1,1.0,1.0,0.0
89c77bb06099f53ccc311245b2aa8ce514260077,"redefining the primary yakonfig API:

  set_global_config(arg1)

now expects just one argument, and it can be either a path to a yaml
file, an stream object open for reading to get yaml, or a mapping
object.  This allows a program to pass its config as a dict to a child
process without having to tell the child process to reload from a file
or something complicated.

Introducing clear_global_config as a public API for resetting the
config.  Currently, the only use case for this is tests in packages
using yakonfig.",John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-02-12 16:39:45+00:00,0,2014-02-12 16:39:45+00:00,0,True,False,"['test_yakonfig.py', 'yakonfig.py']",['764bc70aa2b0a0d42803c8e63977b79d32394205'],34,49,83,2,1.0,1.0,1.0
ba90dfefc30e19bc5c081e62b491525f90fe0154,fix documentation which was behind code,Brian Olson,bolson@diffeo.com,Brian Olson,bolson@diffeo.com,2014-02-18 16:42:45+00:00,0,2014-02-18 16:42:45+00:00,0,True,False,['__init__.py'],['89c77bb06099f53ccc311245b2aa8ce514260077'],3,15,18,1,,,
2a49df9c7437129308395b8c4120dfaa9b5d70bb,removing #! on __init__ because this is not executable,John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-02-20 00:01:16+00:00,0,2014-02-20 00:01:16+00:00,0,True,False,['__init__.py'],['ba90dfefc30e19bc5c081e62b491525f90fe0154'],2,0,2,1,,,
b072eb2734976db501da9f079b4e63a6ba60e63a,better error handling,John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-02-20 00:01:32+00:00,0,2014-02-20 00:01:32+00:00,0,True,False,['yakonfig.py'],['2a49df9c7437129308395b8c4120dfaa9b5d70bb'],2,7,9,1,1.0,0.0,1.0
d32ea497d166546b25f93fb09ea8202f12cc2ce8,Standard source tree refactoring,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-02-20 16:15:05+00:00,0,2014-02-20 16:15:05+00:00,0,True,False,"['setup.py', '__init__.py', 'setup_logging.py', '__init__.py', '__init__.py', 'test_yakonfig.py', 'yakonfig.py']",['b072eb2734976db501da9f079b4e63a6ba60e63a'],19,9,28,7,,,
d2d4ae533fcc6f17877d525ceb272216a0d789b0,"DIFFEO-92: Layered configuration descriptions

There is now a top-level entry point yakonfig.parse_args(parser, modules)
which takes an argparse parser and a list of modules.  Each module
may be a module or some other object matching yakonfig.Configurable's
interface.  yakonfig populates the argparse parser with options from
the module descriptions, finds default configuration values from the
module descriptions, parses the command line, loads a global
configuration file if provided, and overlays command-line options.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-02-20 21:32:53+00:00,0,2014-02-20 21:32:53+00:00,0,True,False,"['__init__.py', 'configurable.py', 'exceptions.py', 'argconfig.yaml', 'configurable_module.py', 'test_configurable.py', 'toplevel.py']",['d32ea497d166546b25f93fb09ea8202f12cc2ce8'],0,730,730,7,0.8037974683544303,0.8765822784810127,0.7784810126582279
e1143ca6eacc5f75285b6ad158976a7a0a454d68,"Submodules, set_default_config extensions.

A Configurable declaration can declare sub_modules, which is a list
of Configurable objects, and their configs should be contained in this
object's config.

set_default_config() can be passed a YAML string or filename which
will be overlaid as though it were the input config.
""with defaulted_config(...)"" resets the global config after completion
(and is really for tests).",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-02-23 12:27:32+00:00,0,2014-02-23 12:27:32+00:00,0,True,False,"['__init__.py', 'configurable.py', 'test_configurable.py', 'toplevel.py', 'yakonfig.py']",['d2d4ae533fcc6f17877d525ceb272216a0d789b0'],31,197,228,5,0.648936170212766,0.8297872340425532,0.6382978723404256
ac9679029cf810598765b9cbd37202a95e43d1f7,"DIFFEO-95: reduce top-level config checking

parse_args() only calls check_config() for the last thing in the
module list.  But, there is also a check_toplevel_config() that checks
that a top-level item is present and correct that check_config() can call.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-02-23 16:13:38+00:00,0,2014-02-23 16:13:38+00:00,0,True,False,"['__init__.py', 'test_configurable.py', 'toplevel.py']",['e1143ca6eacc5f75285b6ad158976a7a0a454d68'],21,48,69,3,0.6111111111111112,0.8333333333333334,0.8333333333333334
061393eda9d87fcfc38422f011abccedaef346cc,"set_default_config() can take a config dictionary in too

...and similarly defaulted_config().  Needed for things like rejester
work flows that pass Python config dictionaries around.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-02-23 16:54:45+00:00,0,2014-02-23 16:54:45+00:00,0,True,False,"['configurable.py', 'toplevel.py']",['ac9679029cf810598765b9cbd37202a95e43d1f7'],15,21,36,2,0.0,0.0,0.0
2710388625a28ec0b384a98fd8a647851c2bac1d,Split overlay/diff into yakonfig.merge,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-02-25 18:43:57+00:00,0,2014-02-25 18:43:57+00:00,0,True,False,"['__init__.py', 'merge.py', 'test_merge.py', 'toplevel.py']",['061393eda9d87fcfc38422f011abccedaef346cc'],33,152,185,4,0.0,0.7068965517241379,1.0
9f5bf14902f3a395e9b8b0a4b7ff720a32d326cf,"Fix check_toplevel_config()

It didn't work, because it depended on getting the global configuration,
but at the point it was called in the normal check_config() path that hadn't
been set yet.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-02-26 18:04:11+00:00,0,2014-02-26 18:04:11+00:00,0,True,False,"['test_configurable.py', 'toplevel.py']",['2710388625a28ec0b384a98fd8a647851c2bac1d'],2,40,42,2,0.8666666666666667,0.9333333333333333,0.8666666666666667
986b769d03d4f6ebd51b08d25bc6fde3f9d1556d,"DIFFEO-142: modules can replace their own config

The use case for this is a configuration that contains a pointer to
an external file, that itself provides configurable things, so the
list of sub_modules isn't actually complete until after the configuration
is read.  Break this loop by reading the configuration, calling a
replace_configuration() hook, and reading the configuration again.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-03-05 17:30:36+00:00,0,2014-03-05 17:30:36+00:00,0,True,False,"['__init__.py', 'configurable.py', 'test_configurable.py', 'toplevel.py']",['9f5bf14902f3a395e9b8b0a4b7ff720a32d326cf'],27,169,196,4,1.0,0.8813559322033898,0.847457627118644
a929baf71aa59dcf716508b8b676de3164d26fae,Make all of the pydoc pretty in Sphinx,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-03-06 19:58:46+00:00,0,2014-03-06 19:58:46+00:00,0,True,False,"['__init__.py', 'configurable.py', 'exceptions.py', 'merge.py', 'toplevel.py', 'yakonfig.py']",['986b769d03d4f6ebd51b08d25bc6fde3f9d1556d'],165,280,445,6,,,
9aed9a49fb7bc461bbc5844af60f4674967ebe3e,"Add normalize_config() and --dump-config.

Build ""dump the configuration"" into the library, don't make applications
reimplement it.  Add a hook so that applications can do things like make
filesystem paths absolute as the last thing that happens before the
configuration is returned.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-03-10 20:40:22+00:00,0,2014-03-10 20:40:22+00:00,0,True,False,"['configurable.py', 'test_configurable.py', 'toplevel.py']",['a929baf71aa59dcf716508b8b676de3164d26fae'],2,73,75,3,0.5128205128205128,0.9743589743589743,0.6410256410256411
3975632890f8fcf130a2dbfe974e15135abcbe25,"Polish pydoc strings

Sphinx should just "".. automodule:: yakonfig"", and that doc string
pulls in everything the module exports as a coherent page",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-03-10 21:30:02+00:00,0,2014-03-10 21:30:02+00:00,0,True,False,"['__init__.py', 'configurable.py', 'toplevel.py']",['9aed9a49fb7bc461bbc5844af60f4674967ebe3e'],37,97,134,3,,,
1b546a39de65d40704e289785d8b2dbe1eeb1bc5,"adding missing import to yakonfig/toplevel.py and adding a test
fake_main program for checking the three dump modes",John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-03-11 11:11:40+00:00,0,2014-03-11 11:11:40+00:00,0,True,False,"['test_dump_config.py', 'toplevel.py']",['3975632890f8fcf130a2dbfe974e15135abcbe25'],0,41,41,2,1.0,1.0,1.0
32d08a6ca13bbc37f4e243a6fad004fdfc20c94a,fixing bug that was calling `git describe` in the wrong dir if building from inside a git repo,John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-04-16 13:49:25+00:00,0,2014-04-16 13:49:25+00:00,0,True,False,['version.py'],['1b546a39de65d40704e289785d8b2dbe1eeb1bc5'],4,5,9,1,0.0,1.0,1.0
672fab97e1242d82b81334c7940e6cf91975d884,Add a generic argparse-based framework for cmd.Cmd applications,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-04-16 14:27:14+00:00,0,2014-04-16 14:31:53+00:00,0,True,False,"['__init__.py', 'cmd.py']",['32d08a6ca13bbc37f4e243a6fad004fdfc20c94a'],2,193,195,2,0.6527777777777778,0.6527777777777778,0.8055555555555556
86a499d29f9a6bf5809c2ecf957b6efc4bc0f5be,"Allow !include in yakonfig YAML files

It is an alias for !include_yaml, but in the future will replace it",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-04-16 14:31:20+00:00,0,2014-04-16 14:31:53+00:00,0,True,False,"['test_yakonfig.py', 'yakonfig.py']",['672fab97e1242d82b81334c7940e6cf91975d884'],1,19,20,2,1.0,1.0,1.0
dcb6a8ccd5462fd9a3733afce5449a8be3d90380,typo,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-04-16 14:50:30+00:00,0,2014-04-16 14:50:30+00:00,0,True,False,['cmd.py'],['86a499d29f9a6bf5809c2ecf957b6efc4bc0f5be'],1,1,2,1,,,
6ad0e895558286a9978767387d3567577b579d04,Docstring syntax fixups,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-04-16 20:45:31+00:00,0,2014-04-16 20:45:31+00:00,0,True,False,"['__init__.py', 'cmd.py']",['dcb6a8ccd5462fd9a3733afce5449a8be3d90380'],6,8,14,2,,,
3388b32b060d7077458fd5e5e7bd68b229ab1dc7,"Docstrings only: command-line options, !include

Document the shared --config and --dump-config options, fix the
program example slightly, document the !include YAML extension, and
mention that argparse.set_defaults() is bad.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-04-17 14:40:15+00:00,0,2014-04-17 14:40:15+00:00,0,True,False,['__init__.py'],['6ad0e895558286a9978767387d3567577b579d04'],20,52,72,1,,,
dd16af7629a4c5dc12e6f6623df916f829a5d211,"when running a Cmd program, hitting return should just do nothing; and now it does.",John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2014-04-22 02:56:39+00:00,0,2014-04-22 02:56:39+00:00,0,True,False,['cmd.py'],['3388b32b060d7077458fd5e5e7bd68b229ab1dc7'],2,5,7,1,0.0,1.0,1.0
f78607531bf87c55d203adce69e38786849e90e7,"Make ArgParseCmd-based programs do nothing on empty lines.

The default cmd.Cmd behavior is to repeat the previous command, but
in practice this doesn't make sense for some more complicated commands
in other subsystems, and with readline support up-arrow, RET isn't that
much harder.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-07-29 16:18:17+00:00,0,2014-07-29 16:18:17+00:00,0,True,False,['cmd.py'],['dd16af7629a4c5dc12e6f6623df916f829a5d211'],0,3,3,1,1.0,1.0,1.0
214db845f39b92d55b983b35b45202a4d1a0aadf,"Add a Configurable.discover_config() hook to probe the environment.

This is called on a configuration without defaults, once, after
replace_config() happens.  This allows Configurable modules to try
to come up with better-than-default values from the environment, etcd,
ZooKeeper, &c.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-08-05 15:42:43+00:00,0,2014-08-05 15:42:43+00:00,0,True,False,"['configurable.py', 'test_configurable.py', 'toplevel.py']",['f78607531bf87c55d203adce69e38786849e90e7'],48,180,228,3,1.0,1.0,0.3953488372093023
854aba96512c2ad4046aea6aa5422ef87c0abeb9,"Remove support for !runtime in configuration.

This was an older way to support command-line arguments where a runtime
dictionary could be pushed into yakonfig, and ""!runtime key"" as a value
would get values from it.  The current merging of default values,
user configuration, and command-line options replaces this, and all code
seems to have migrated to the newer version.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-09-10 17:30:43+00:00,0,2014-09-10 17:30:43+00:00,0,True,False,"['__init__.py', 'test_yakonfig.py', 'yakonfig.py']",['214db845f39b92d55b983b35b45202a4d1a0aadf'],231,11,242,3,0.5564516129032258,0.16129032258064516,0.0
fbd5e9c7d7697c7949a9e9d1b32eae00d568987d,Automatic configuration discovery and injection.,Andrew Gallant,jamslam@gmail.com,Andrew Gallant,jamslam@gmail.com,2014-09-11 10:32:36-04:00,14400,2014-09-11 10:32:36-04:00,14400,True,False,"['configurable.py', 'factory.py', 'test_factory.py']",['854aba96512c2ad4046aea6aa5422ef87c0abeb9'],0,375,375,3,0.6666666666666666,0.6666666666666666,0.821256038647343
04bc36994beeead33a6c44cd2fa0ecc667e12621,"Fix version.py.

Whatever was here was broken. I copied version.py from
streamcorpus-pipeline and now it works.",Andrew Gallant,jamslam@gmail.com,Andrew Gallant,jamslam@gmail.com,2014-09-11 11:23:56-04:00,14400,2014-09-11 11:23:56-04:00,14400,True,False,['version.py'],['fbd5e9c7d7697c7949a9e9d1b32eae00d568987d'],7,12,19,1,0.0,0.0,1.0
d9a581b6d2997cf27bff5c330660f47181b8716a,Improved the code from David's suggestions.,Andrew Gallant,jamslam@gmail.com,Andrew Gallant,jamslam@gmail.com,2014-09-11 15:09:43-04:00,14400,2014-09-11 15:09:43-04:00,14400,True,False,"['factory.py', 'test_factory.py']",['04bc36994beeead33a6c44cd2fa0ecc667e12621'],47,71,118,2,0.6666666666666666,1.0,0.6666666666666666
aa4e12dd5b067958ba6ef375e8681afd37c18e30,don't validate if we're just dumping config,Brian Olson,bolson@diffeo.com,Brian Olson,bolson@diffeo.com,2014-09-11 20:44:49+00:00,0,2014-09-11 20:44:49+00:00,0,True,False,['toplevel.py'],['854aba96512c2ad4046aea6aa5422ef87c0abeb9'],2,3,5,1,0.0,1.0,0.0
720c283c6cedd895c2d96258b14261ebc32f74c8,Use an object's `config_name` if it's present.,Andrew Gallant,jamslam@gmail.com,Andrew Gallant,jamslam@gmail.com,2014-09-11 17:37:57-04:00,14400,2014-09-11 17:37:57-04:00,14400,True,False,['factory.py'],['0def4ff1f7b7d885b76297b9514084389c8d9271'],1,1,2,1,,,
f05927d8aed6bb6ab6cb44f935d83fa8a657cfa0,"- Make tests simpler with context managers.
- Implement `check_config` in AutoFactory for
  faster failing.
- AutoConfigured is no longer dynamically generated.
  It's just a regular class now.",Andrew Gallant,jamslam@gmail.com,Andrew Gallant,jamslam@gmail.com,2014-09-12 09:20:46-04:00,14400,2014-09-12 09:20:46-04:00,14400,True,False,"['factory.py', 'test_factory.py']",['d9a581b6d2997cf27bff5c330660f47181b8716a'],190,175,365,2,0.6111111111111112,0.0,0.0
0810c3b4bbc0aa640e7ef5dd3e8a111a829e11d6,"Fix AutoFactory for class autoconfigured, make classes' config_name work.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-09-12 13:38:25+00:00,0,2014-09-12 13:38:25+00:00,0,True,False,"['factory.py', 'test_factory.py']",['e183f15316aa7ff96f203a5706cd9ffb4811e515'],1,30,31,2,0.8947368421052632,0.8947368421052632,1.0
de071f4cd76c6e00a4e629be3c2e51c84fff23a1,"Change AutoFactory to save its configuration.

This happens in the Configurable.normalize_config() stage, or you can
explicitly set factory.config.  You must do this before calling create(),
which in turn no longer takes a config dictionary as a parameter.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-09-12 14:11:52+00:00,0,2014-09-12 14:11:52+00:00,0,True,False,"['factory.py', 'test_factory.py']",['0810c3b4bbc0aa640e7ef5dd3e8a111a829e11d6'],34,92,126,2,1.0,1.0,1.0
18e323571f3b9c634268986b566b208b7bc3490b,"Make AutoFactory really work for classes; other small create() improvements.

Skip the ""self"" parameter on methods (including __init__) passed into
AutoFactory.create().  Let create() take an explicit config dictionary
for the created object.  Let create() take the name of the thing to create
instead of a copy of it.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-09-12 14:32:22+00:00,0,2014-09-12 14:32:22+00:00,0,True,False,"['factory.py', 'test_factory.py']",['de071f4cd76c6e00a4e629be3c2e51c84fff23a1'],6,69,75,2,0.41304347826086957,0.41304347826086957,0.8260869565217391
f04b55f1eb6746fd18770c83dc0ed57f72902395,Inconsequential AutoConfig touch-ups,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-09-12 14:55:30+00:00,0,2014-09-12 14:55:30+00:00,0,True,False,"['factory.py', 'test_factory.py']",['18e323571f3b9c634268986b566b208b7bc3490b'],1,20,21,2,1.0,1.0,1.0
2284e9d7de6cac24f9d0ef7a011db6c86265b484,"Allow AutoFactory.create() keyword parameters to override services.

If you try to create a function def f(required, default='value'), and
your factory class provides a required, and your specific call is
factory.create(f, required=v), then pass v (not factory.required) to
f.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-09-12 15:06:24+00:00,0,2014-09-12 15:06:24+00:00,0,True,False,"['factory.py', 'test_factory.py']",['f04b55f1eb6746fd18770c83dc0ed57f72902395'],10,25,35,2,0.7777777777777778,0.7777777777777778,0.7777777777777778
3f0fa7bd1c13b6fee64db205f382496f9bcf6279,Remove gratuitous debug message,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-09-12 15:53:07+00:00,0,2014-09-12 15:53:07+00:00,0,True,False,['factory.py'],['2284e9d7de6cac24f9d0ef7a011db6c86265b484'],1,0,1,1,1.0,1.0,1.0
9cb1ee24622626ed6a70f0e2555eebec8ecaae86,Improve README,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-09-15 19:20:59+00:00,0,2014-09-15 19:20:59+00:00,0,True,False,['README.md'],['3f0fa7bd1c13b6fee64db205f382496f9bcf6279'],12,67,79,1,,,
bac196bf75324748bcdb7930903d32889028ce5d,Support auto-configuration of classes that define `__new__`.,Andrew Gallant,jamslam@gmail.com,Andrew Gallant,jamslam@gmail.com,2014-10-23 14:26:06-04:00,14400,2014-10-23 14:26:06-04:00,14400,True,False,"['factory.py', 'test_factory.py']",['9cb1ee24622626ed6a70f0e2555eebec8ecaae86'],6,26,32,2,0.6875,0.6875,1.0
b1dba9a337b0bbffac100c18d43f55ae1faef88c,"Remove a `try...catch` because it was masking errors.

It made debugging quite difficult.",Andrew Gallant,jamslam@gmail.com,Andrew Gallant,jamslam@gmail.com,2014-10-24 00:08:08-04:00,14400,2014-10-24 00:08:08-04:00,14400,True,False,['factory.py'],['bac196bf75324748bcdb7930903d32889028ce5d'],9,4,13,1,1.0,1.0,1.0
e4267065db3d71e305ce6eb428f2df1538681a71,Fix test.,Andrew Gallant,jamslam@gmail.com,Andrew Gallant,jamslam@gmail.com,2014-10-24 00:11:24-04:00,14400,2014-10-24 00:11:24-04:00,14400,True,False,['test_factory.py'],['b1dba9a337b0bbffac100c18d43f55ae1faef88c'],1,1,2,1,,,
e116636ec26ad3201dad06f83193acc03d0ce02c,"For Sphinx, split CLI vs. Python API docs.

'sphinx -t cliref' only outputs the section on common command-line arguments.
'sphinx -t pyapi' only outputs the Python API.
'sphinx -t all' does everything.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-11-12 15:12:28-05:00,18000,2014-11-12 15:13:23-05:00,18000,True,False,['__init__.py'],['e4267065db3d71e305ce6eb428f2df1538681a71'],130,130,260,1,,,
ffbc63063f922b344da5ce80f39f24d0ceb6fe1c,"Don't logging.warn() if set_global_config() is called twice

This is highly user-visible in most cases, but there's nothing a user
can actually do about it; it requires a code change for this to not happen.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2014-12-04 14:55:51-05:00,18000,2014-12-04 14:55:51-05:00,18000,True,False,['yakonfig.py'],['e116636ec26ad3201dad06f83193acc03d0ce02c'],19,19,38,1,0.0,0.6666666666666666,1.0
5feb272333ce63a838d73efd76774c9e3449db1e,"Add tox.ini, simplify setup.py",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2015-04-08 20:26:25-04:00,14400,2015-04-08 20:26:25-04:00,14400,True,False,"['.gitignore', 'setup.py', 'tox.ini']",['ffbc63063f922b344da5ce80f39f24d0ceb6fe1c'],54,19,73,3,0.0,0.6190476190476191,0.0
ff623903e58f50f24f327c9c7ab162d2e5be78d6,"DIFFEO-933: AutoFactory supports objects with config parameters.

This hopefully will help migrate things like streamcorpus_pipeline
to use AutoFactory.  If an AutoFactory child has a 'config' parameter,
then that is directly passed the child config dictionary, and the
check for unexpected parameters is disabled.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2015-04-09 06:48:57-04:00,14400,2015-04-09 06:48:57-04:00,14400,True,False,"['setup.py', 'factory.py', 'test_factory.py']",['5feb272333ce63a838d73efd76774c9e3449db1e'],84,268,352,3,0.948051948051948,0.9090909090909091,0.7532467532467533
3e30071ae558081454834c7f27e650a8dd008333,Largely cosmetic pylint-directed cleanups,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2015-04-09 13:18:17+00:00,0,2015-04-09 13:18:17+00:00,0,True,False,"['setup.py', '__init__.py', 'cmd.py', 'configurable.py', 'factory.py', 'merge.py', 'toplevel.py']",['ff623903e58f50f24f327c9c7ab162d2e5be78d6'],54,67,121,7,0.7777777777777778,0.7222222222222222,0.9444444444444444
2cd2a39234a7b0af9fdb57dbabf4aa58bba1d542,"DIFFEO-586: Better handling of None in default_config

If your Configurable object says default_config={'foo': None}, don't delete
'foo' from the config that gets passed in if you dump the config and reload
it.  This also affects AutoFactory children with __init__(self, foo=None).

This is a mild change in overlay_config() where overlaying {'foo': None}
over itself yields 'foo' out, as an exception to the ""None means delete"" rule.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2015-04-09 12:14:30-04:00,14400,2015-04-09 12:14:30-04:00,14400,True,False,"['merge.py', 'test_configurable.py', 'test_merge.py', 'toplevel.py']",['3e30071ae558081454834c7f27e650a8dd008333'],120,207,327,4,0.8928571428571429,1.0,0.8928571428571429
6e3220af34f9e13d0f0ca6ea8baa130d4c50c1fe,Python 3 compatibility,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2015-04-09 19:56:35+00:00,0,2015-04-09 19:56:35+00:00,0,True,False,"['tox.ini', 'version.py', 'factory.py', 'merge.py', 'test_configurable.py', 'test_factory.py', 'test_yakonfig.py', 'toplevel.py', 'yakonfig.py']",['2cd2a39234a7b0af9fdb57dbabf4aa58bba1d542'],69,78,147,9,0.0,0.0,0.0
094219d8ed9480cd7ffbb62772a318f387aceeef,inserting {0} style indexing into all .format statements to support python2.6,John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2015-04-12 06:36:28+00:00,0,2015-04-12 06:36:28+00:00,0,True,False,"['cmd.py', 'configurable.py', 'test_configurable.py', 'toplevel.py']",['6e3220af34f9e13d0f0ca6ea8baa130d4c50c1fe'],11,11,22,4,,,
20836065cc942cd8e8c1eb07b404cbbbd23ccdc3,adding `pexpect` to tests_require,John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2015-04-12 07:40:30+00:00,0,2015-04-12 07:40:30+00:00,0,True,False,['setup.py'],['094219d8ed9480cd7ffbb62772a318f387aceeef'],0,3,3,1,,,
4ebf516bd67baf43979c0aaa9ded5124384efe2e,converting dict comprehensions to dict constructors for python2.6,John R. Frank,jrf@diffeo.com,John R. Frank,jrf@diffeo.com,2015-04-12 07:40:40+00:00,0,2015-04-12 07:40:40+00:00,0,True,False,['factory.py'],['20836065cc942cd8e8c1eb07b404cbbbd23ccdc3'],2,2,4,1,,,
efca71498db07dec1fcd30b8dc1fb45995907e4c,"Support Python 2.6; remove !include_func.

yakonfig previously supported syntax where the result of a Python function
call could be inserted into the generated configuration.  This is a bad
idea for several reasons, and to my knowledge it's unused.  If you really
need it, yakonfig doesn't use ""safe"" PyYAML mode, so you can use
!!python/object/apply:module.function [param, param, ...]
to the same effect.

This used the importlib module, which was new in Python 2.7.  Removing this
makes all tests pass on Python 2.6.",David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2015-04-14 16:19:00+00:00,0,2015-04-14 16:19:00+00:00,0,True,False,"['tox.ini', 'yakonfig.py']",['4ebf516bd67baf43979c0aaa9ded5124384efe2e'],28,1,29,2,1.0,0.0,0.0
8122a650744a6cb93c9c00256d51d6b5b48b9d2c,Depend on 'importlib' for Python 2.6,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2015-04-27 09:56:13-04:00,14400,2015-04-27 09:57:08-04:00,14400,True,False,['setup.py'],['efca71498db07dec1fcd30b8dc1fb45995907e4c'],0,1,1,1,,,
cc08beed10704bbc2e518ae8792a85738c5bb142,Make version.py work with Python 2.6 too,David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2015-04-27 10:00:24-04:00,14400,2015-04-27 10:00:24-04:00,14400,True,False,['version.py'],['8122a650744a6cb93c9c00256d51d6b5b48b9d2c'],1,1,2,1,,,
82411dce2eeb37c5785bea9166817a92ac9b9a3e,more and better logging that helped me find a misconfiguration bug today,Brian Olson,bolson@diffeo.com,Brian Olson,bolson@diffeo.com,2015-05-22 16:20:57+00:00,0,2015-05-22 16:20:57+00:00,0,True,False,['toplevel.py'],['cc08beed10704bbc2e518ae8792a85738c5bb142'],8,19,27,1,0.0,1.0,0.0
412e195da29b4f4fc7b72967c192714a6f5eaeb5,Clean up dependencies (no importlib),David Maze,dmaze@diffeo.com,David Maze,dmaze@diffeo.com,2015-06-09 13:30:48-04:00,14400,2015-06-09 13:30:48-04:00,14400,True,False,['setup.py'],['82411dce2eeb37c5785bea9166817a92ac9b9a3e'],4,0,4,1,,,
d7065800e3cf40a9a95be637382324e8f6eedc60,Updated/Added CODEOWNERS with ECCN,svc-scm,48930134+svc-scm@users.noreply.github.com,svc-scm,48930134+svc-scm@users.noreply.github.com,2022-02-12 00:30:37-08:00,28800,2022-02-12 00:30:37-08:00,28800,True,False,['CODEOWNERS'],['412e195da29b4f4fc7b72967c192714a6f5eaeb5'],0,2,2,1,,,
