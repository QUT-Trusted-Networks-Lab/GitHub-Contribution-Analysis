Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
30bd2c1fb57c277dcbc18031b9c956d4e82a5b67,Set up an empty project shell for arraycontext,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:04:00-05:00,18000,2021-05-05 17:04:00-05:00,18000,True,False,"['autopush.yml', 'ci.yml', '.gitignore', '.gitlab-ci.yml', '.pylintrc-local.yml', 'README.rst', '__init__.py', 'version.py', 'Makefile', 'conf.py', 'index.rst', 'make.bat', 'misc.rst', 'setup.cfg', 'setup.py', 'test_arraycontext.py']",[],0,794,794,16,0.0392156862745098,1.0,1.0
6128eeb671cfd624d6c8a6420341e807d97c405d,Add examples stub,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:05:59-05:00,18000,2021-05-05 17:05:59-05:00,18000,True,False,['stub.py'],['30bd2c1fb57c277dcbc18031b9c956d4e82a5b67'],0,1,1,1,,,
5974688c99ef5111e3d1c89ecd3752bc24fa9f04,Make flake8 like the stub example,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:08:37-05:00,18000,2021-05-05 17:08:37-05:00,18000,True,False,['stub.py'],['6128eeb671cfd624d6c8a6420341e807d97c405d'],1,1,2,1,,,
3bb91f9cb28483726782f2f5df8234ae93fba583,"Tweak CI: Drop Firedrake interop, downstream CI for now",Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:10:46-05:00,18000,2021-05-05 17:10:46-05:00,18000,True,False,"['ci.yml', '.gitlab-ci.yml']",['5974688c99ef5111e3d1c89ecd3752bc24fa9f04'],55,2,57,2,,,
b251545bd149c5b181c2352f2f39afdaf9948286,Restrict downstream CI to meshmode for now,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:16:11-05:00,18000,2021-05-05 17:16:11-05:00,18000,True,False,['ci.yml'],['3bb91f9cb28483726782f2f5df8234ae93fba583'],2,2,4,1,,,
82fc3f49832e277ffde45f0db4d06a796cacd8b3,Actually adapt setup.py,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:18:30-05:00,18000,2021-05-05 17:18:30-05:00,18000,True,False,['setup.py'],['b251545bd149c5b181c2352f2f39afdaf9948286'],17,4,21,1,1.0,0.0,0.0
16a66575e77b227349cf52b16c2f71bbe137c697,Flake8 for an empty root module,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:18:46-05:00,18000,2021-05-05 17:18:46-05:00,18000,True,False,['__init__.py'],['82fc3f49832e277ffde45f0db4d06a796cacd8b3'],1,1,2,1,,,
62c6aabd02aa8fd4d9f3a6cba434dbf4cfb4d2e6,Add doc upload script,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:23:51-05:00,18000,2021-05-05 17:23:51-05:00,18000,True,False,['upload-docs.sh'],['16a66575e77b227349cf52b16c2f71bbe137c697'],0,3,3,1,,,
6606e0ad60f191b0bc548026cd25049f9dcb8a7e,Fix doc build,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:23:58-05:00,18000,2021-05-05 17:23:58-05:00,18000,True,False,"['__init__.py', 'array_context.rst', 'index.rst']",['62c6aabd02aa8fd4d9f3a6cba434dbf4cfb4d2e6'],2,16,18,3,,,
ce3bb94601e37ba969c92b79ff58370a8e2ba027,Restructure README,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:24:45-05:00,18000,2021-05-05 17:24:45-05:00,18000,True,False,['README.rst'],['6606e0ad60f191b0bc548026cd25049f9dcb8a7e'],3,6,9,1,,,
54b5b6e43d7a91e9454cac38b5124dfe4fa7249b,Add req.txt and conda env for test,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:26:01-05:00,18000,2021-05-05 17:26:01-05:00,18000,True,False,"['.test-conda-env-py3.yml', 'requirements.txt']",['ce3bb94601e37ba969c92b79ff58370a8e2ba027'],0,37,37,2,,,
4816d3a5798bf2b1e7107f8682b40d76426bd555,Adapt req.txt for arraycontext,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:29:15-05:00,18000,2021-05-05 17:29:15-05:00,18000,True,False,['requirements.txt'],['54b5b6e43d7a91e9454cac38b5124dfe4fa7249b'],6,1,7,1,,,
3cc23998f157487efd3f16804c94f49ca8e4ea1e,Drop loopy branch widgetry from CI config,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-05 17:33:23-05:00,18000,2021-05-05 17:33:23-05:00,18000,True,False,"['ci.yml', '.gitlab-ci.yml']",['4816d3a5798bf2b1e7107f8682b40d76426bd555'],28,0,28,2,,,
eb5835ab6de28e003c2489998a2c27e2c0bd688a,Add .gitkeep to doc static dir,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-05-05 17:40:12-05:00,18000,2021-05-05 18:00:47-05:00,18000,True,False,['.gitkeep'],['3cc23998f157487efd3f16804c94f49ca8e4ea1e'],0,0,0,1,,,
769e479c03dd6671252d4f83c1fa2aaa03bee2c5,Drop firedrake-related doc workarounds,Andreas Klöckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-05-05 17:46:20-05:00,18000,2021-05-05 18:00:47-05:00,18000,True,False,['ci.yml'],['eb5835ab6de28e003c2489998a2c27e2c0bd688a'],9,0,9,1,,,
44fbee927654fbb89e7dfdbc912b3ea70ff098cd,Create .editorconfig,Andreas Klöckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-05-05 18:16:20-05:00,18000,2021-05-05 18:29:21-05:00,18000,True,False,['.editorconfig'],['769e479c03dd6671252d4f83c1fa2aaa03bee2c5'],0,32,32,1,,,
8ef5181b48f06a68ee629cecad79719f82eb2b7b,"Move array context functionality over from meshmode (#4)

* Move array context functionality over from meshmode

Co-authored-by: Alex Fikl <alexfikl@gmail.com>

* Drop sphinx version requirement

* Fix replica DOFArray in tests for pylint

Co-authored-by: Alex Fikl <alexfikl@gmail.com>",Andreas Klöckner,inform@tiker.net,GitHub,noreply@github.com,2021-05-20 18:43:04-05:00,18000,2021-05-20 23:43:04+00:00,0,True,False,"['ci.yml', '.gitlab-ci.yml', 'README.rst', '__init__.py', '__init__.py', 'arithmetic.py', 'dataclass.py', 'traversal.py', 'context.py', 'fake_numpy.py', 'pyopencl.py', 'loopy.py', 'metadata.py', 'pytest.py', 'array_context.rst', 'conf.py', 'container.rst', 'index.rst', 'misc.rst', 'other.rst', 'setup.cfg', 'test_arraycontext.py']",['44fbee927654fbb89e7dfdbc912b3ea70ff098cd'],22,2603,2625,22,0.4216972878390201,0.5695538057742782,0.7226596675415573
8842ae886e4b9dc48b0a176095a52622a5d24e7b,Add missing arraycontext/impl/__init__.py,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-20 19:16:50-05:00,18000,2021-05-20 19:16:50-05:00,18000,True,False,['__init__.py'],['8ef5181b48f06a68ee629cecad79719f82eb2b7b'],0,23,23,1,,,
3887eff0cf187e45048f9c70c1118edd988e6509,remove uneeded requirements,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-05-21 08:44:51-05:00,18000,2021-05-21 08:44:51-05:00,18000,True,False,['requirements.txt'],['8842ae886e4b9dc48b0a176095a52622a5d24e7b'],10,2,12,1,,,
2f9c7b9350ba0ae35ce5ce664b6fe2961f0dd8c6,Add actx.np.concatenate,Thomas Gibson,gibsonthomas1120@hotmail.com,Thomas Gibson,gibsonthomas1120@hotmail.com,2021-05-21 15:43:03-05:00,18000,2021-05-21 15:43:03-05:00,18000,True,False,['pyopencl.py'],['8842ae886e4b9dc48b0a176095a52622a5d24e7b'],0,8,8,1,1.0,1.0,0.0
4adc0aa2148c04cfaec41c7b9ccf7d5f79d7f94d,black setup.py,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-05-21 08:45:00-05:00,18000,2021-05-21 15:45:00-05:00,18000,True,False,['setup.py'],['3887eff0cf187e45048f9c70c1118edd988e6509'],37,37,74,1,0.0,1.0,1.0
01b08cb6902ba2946b944b70aaa629a089521537,Add unit test for concatenating cl arrays,Thomas Gibson,gibsonthomas1120@hotmail.com,Thomas Gibson,gibsonthomas1120@hotmail.com,2021-05-21 16:14:28-05:00,18000,2021-05-21 16:14:28-05:00,18000,True,False,['test_arraycontext.py'],['2f9c7b9350ba0ae35ce5ce664b6fe2961f0dd8c6'],0,17,17,1,1.0,1.0,1.0
53f832a786c02de920ab7dd0ea0469b07c26374b,Add actx.np.reshape,Thomas Gibson,gibsonthomas1120@hotmail.com,Andreas Klöckner,inform@tiker.net,2021-05-21 22:25:05-05:00,18000,2021-05-22 17:23:59-05:00,18000,True,False,['pyopencl.py'],['322e2253e924abaa742c4ed41f0d0d1fad128984'],0,4,4,1,1.0,1.0,0.0
1f5d92a820231ca032e0f01eb0640ea4bf76e814,Add array manipulation unit tests,Thomas Gibson,gibsonthomas1120@hotmail.com,Andreas Klöckner,inform@tiker.net,2021-05-21 22:25:25-05:00,18000,2021-05-22 17:23:59-05:00,18000,True,False,['test_arraycontext.py'],['53f832a786c02de920ab7dd0ea0469b07c26374b'],0,58,58,1,1.0,1.0,1.0
d4b7151af94f640f2a1446866e220a85680f8cdb,Add arraycontext._acf for manual test debugging,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-05-22 16:58:25-05:00,18000,2021-05-22 17:23:59-05:00,18000,True,False,['__init__.py'],['1f5d92a820231ca032e0f01eb0640ea4bf76e814'],0,10,10,1,1.0,1.0,1.0
9c8546711d95979e55a81691ef6dec858cc62168,Refactor same-as-numpy tests using assert_close_to_numpy*,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-05-22 16:59:02-05:00,18000,2021-05-22 17:23:59-05:00,18000,True,False,['test_arraycontext.py'],['d4b7151af94f640f2a1446866e220a85680f8cdb'],84,76,160,1,1.0,1.0,0.0
83ecb60b7bf842705e5449a9e6066637f99c44cd,"Drop autodoc_typehints from sphinx config

https://github.com/inducer/modepy/pull/38#issuecomment-846472970",Andreas Klöckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-05-22 18:21:20-05:00,18000,2021-05-22 18:32:14-05:00,18000,True,False,['conf.py'],['9c8546711d95979e55a81691ef6dec858cc62168'],1,0,1,1,,,
0daee4fef29a8c292c30d8c410e331b30ff1fdba,"Drop autodoc_typehints from sphinx config

https://github.com/inducer/modepy/pull/38#issuecomment-846472970",Andreas Klöckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-05-22 18:24:22-05:00,18000,2021-05-22 18:41:22-05:00,18000,True,False,['conf.py'],['83ecb60b7bf842705e5449a9e6066637f99c44cd'],5,0,5,1,,,
77e6ca0eaa4c191bfbd18e461dfaf2d05430f2b8,add recursive to_numpy and from_numpy,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-05-24 16:05:54-05:00,18000,2021-05-26 11:43:46-05:00,18000,True,False,"['__init__.py', 'traversal.py', 'test_arraycontext.py']",['0daee4fef29a8c292c30d8c410e331b30ff1fdba'],2,75,77,3,0.36363636363636365,1.0,1.0
509b7dac9eb22d9e788d83be011dc1e11b1c4ec9,README: Explain what pytato does,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-26 13:55:37-05:00,18000,2021-05-26 13:55:37-05:00,18000,True,False,"['README.rst', 'index.rst']",['77e6ca0eaa4c191bfbd18e461dfaf2d05430f2b8'],2,2,4,2,,,
4e81f3a7d238529d62c3dd8302d74db03f9345c9,Add MANIFEST.in for distribution,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-05-26 13:55:58-05:00,18000,2021-05-26 13:55:58-05:00,18000,True,False,['MANIFEST.in'],['509b7dac9eb22d9e788d83be011dc1e11b1c4ec9'],0,6,6,1,,,
d7ad4c28cf8dec40d080ba127e087f2234351cc1,add pytato array context from meshmode,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-05-26 17:16:31-05:00,18000,2021-05-26 17:16:31-05:00,18000,True,False,"['pytato.py', 'array_context.rst']",['4e81f3a7d238529d62c3dd8302d74db03f9345c9'],0,377,377,2,0.5416666666666666,0.49166666666666664,0.7833333333333333
9a03ea11ccbe4a18bbac7e0321cf18f76530a097,fix number,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-05-26 18:37:57-05:00,18000,2021-05-26 18:37:57-05:00,18000,True,False,['pytato.py'],['d7ad4c28cf8dec40d080ba127e087f2234351cc1'],1,2,3,1,,,
7da3a8710b79c4e18a1b14ac23911a486b17b6a0,fixes,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-05-27 10:24:44-05:00,18000,2021-05-27 10:24:44-05:00,18000,True,False,['pytato.py'],['9a03ea11ccbe4a18bbac7e0321cf18f76530a097'],1,10,11,1,1.0,1.0,0.5
e215f0dfe59e92f2a1025e36c413089fc692f9a8,run tests for pytatoarraycontext,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-05-28 14:33:26-05:00,18000,2021-05-28 14:33:26-05:00,18000,True,False,"['__init__.py', 'pytest.py', 'test_arraycontext.py']",['7da3a8710b79c4e18a1b14ac23911a486b17b6a0'],20,40,60,3,0.26666666666666666,0.26666666666666666,1.0
9eaf72dab49a9af37c5d298bba9ee600d0c08f05,only run tests with actx_factory,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-05-28 14:35:18-05:00,18000,2021-05-28 14:35:18-05:00,18000,True,False,['pytest.py'],['e215f0dfe59e92f2a1025e36c413089fc692f9a8'],4,5,9,1,0.0,0.0,1.0
ac3b90aa69e9ef065fcefca308ff0038db9009df,doc and flake fixes,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-05-28 14:38:37-05:00,18000,2021-05-28 14:38:37-05:00,18000,True,False,"['__init__.py', 'pytest.py']",['9eaf72dab49a9af37c5d298bba9ee600d0c08f05'],8,11,19,2,0.0,0.0,1.0
8cb74176caadeb2803b5dce9eacd42f9740a654e,another flake8 fix,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-05-28 14:41:08-05:00,18000,2021-05-28 14:41:08-05:00,18000,True,False,['__init__.py'],['ac3b90aa69e9ef065fcefca308ff0038db9009df'],1,1,2,1,,,
e5ff3c6eaeba199766598384b6b8173f37b38714,"Implement, test container-over-container broadcasting (#15)

* Implement, test container-over-container broadcasting

* Tweak bcast_container_types arg doc

Co-authored-by: Alex Fikl <alexfikl@gmail.com>

* Improvements to with_container_arithmetic

- Support matmul with a separate operator class
- Join container and number broadcasting code paths
- Make args keyword-only

Co-authored-by: Alex Fikl <alexfikl@gmail.com>",Andreas Klöckner,inform@tiker.net,GitHub,noreply@github.com,2021-05-29 17:00:32-05:00,18000,2021-05-29 22:00:32+00:00,0,True,False,"['arithmetic.py', 'test_arraycontext.py']",['4e81f3a7d238529d62c3dd8302d74db03f9345c9'],14,107,121,2,0.0,0.6730769230769231,0.8461538461538461
7d2dfaae1d30daa7f7769f5ff6314559ef5fa23a,add stack(),Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-01 11:11:12-05:00,18000,2021-06-01 11:11:12-05:00,18000,True,False,['pytato.py'],['8cb74176caadeb2803b5dce9eacd42f9740a654e'],0,5,5,1,1.0,1.0,0.0
4b2287878a88e454e030a2423d4087d9fd5e3434,copy norm() from PyOpenCLArrayContext,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-01 11:27:38-05:00,18000,2021-06-01 11:27:38-05:00,18000,True,False,"['pytato.py', 'test_arraycontext.py']",['7d2dfaae1d30daa7f7769f5ff6314559ef5fa23a'],4,50,54,2,0.0,0.0,0.0
28daaede6e1f3b4e3d7e31610137e92a8c08f866,implement ones_like(),Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-01 12:01:37-05:00,18000,2021-06-01 12:01:37-05:00,18000,True,False,['pytato.py'],['4b2287878a88e454e030a2423d4087d9fd5e3434'],0,8,8,1,1.0,1.0,1.0
62687fab5d2aac6c50ca518cabc9d8cdff257b57,implement sin(),Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-01 12:13:39-05:00,18000,2021-06-01 12:13:39-05:00,18000,True,False,['pytato.py'],['28daaede6e1f3b4e3d7e31610137e92a8c08f866'],0,5,5,1,1.0,1.0,1.0
4a6d95ea7b9128705f3b936ef6e2b13d17ec89bd,pt.where (not working),Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-01 12:25:40-05:00,18000,2021-06-01 12:25:40-05:00,18000,True,False,['pytato.py'],['62687fab5d2aac6c50ca518cabc9d8cdff257b57'],0,5,5,1,1.0,1.0,0.0
98a0c8b9aa9325567a6e5c2119143e54b81ac1cf,add comment,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-01 12:45:47-05:00,18000,2021-06-01 12:45:47-05:00,18000,True,False,['pytato.py'],['4a6d95ea7b9128705f3b936ef6e2b13d17ec89bd'],0,1,1,1,,,
a1b97a663df5a654e580c4092a901af75a1dff7c,ignore known fails,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-01 13:05:15-05:00,18000,2021-06-01 13:05:15-05:00,18000,True,False,['test_arraycontext.py'],['98a0c8b9aa9325567a6e5c2119143e54b81ac1cf'],0,18,18,1,0.0,1.0,0.8333333333333334
295741d8d7f2f9612bfa90c202cae76e9e6acfda,"Revert ""ignore known fails""

This reverts commit a1b97a663df5a654e580c4092a901af75a1dff7c.",Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-01 16:02:09-05:00,18000,2021-06-01 16:02:09-05:00,18000,True,False,['test_arraycontext.py'],['a1b97a663df5a654e580c4092a901af75a1dff7c'],18,0,18,1,1.0,0.0,0.16666666666666666
ed2374fda1e00f74bc7c91943f9da1a0da2003f5,refactor norm(),Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-01 16:32:28-05:00,18000,2021-06-01 16:32:28-05:00,18000,True,False,"['fake_numpy.py', 'pyopencl.py', 'pytato.py']",['295741d8d7f2f9612bfa90c202cae76e9e6acfda'],73,31,104,3,1.0,1.0,1.0
01ca5e1a0f1c9e8573e3210191feb67e0a609601,remove FIXME (was loopy's fault),Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-02 12:35:24-05:00,18000,2021-06-02 12:35:24-05:00,18000,True,False,['pytato.py'],['ed2374fda1e00f74bc7c91943f9da1a0da2003f5'],1,0,1,1,,,
1b968593f814a863add1d998097a3245e34b7e99,add meshmode to requirements,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-02 13:05:22-05:00,18000,2021-06-02 13:05:22-05:00,18000,True,False,['requirements.txt'],['01ca5e1a0f1c9e8573e3210191feb67e0a609601'],0,2,2,1,,,
68e860932a28d4d0ea9531808c4c01b3ef152ba8,call_loopy branch for pytato,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-02 13:15:24-05:00,18000,2021-06-02 13:15:24-05:00,18000,True,False,['requirements.txt'],['1b968593f814a863add1d998097a3245e34b7e99'],1,1,2,1,,,
23121b12f86faad1ce8cae2556b2f7f19b30fe18,Add test for norm of complex vector,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-02 13:31:15-05:00,18000,2021-06-02 13:44:18-05:00,18000,True,False,['test_arraycontext.py'],['e5ff3c6eaeba199766598384b6b8173f37b38714'],0,11,11,1,1.0,1.0,1.0
a81656ed219a8fa5c02605496704b638f8c5d705,"kernel_callables_v3-edit2 for loopy, for_each_kernel",Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-02 13:47:53-05:00,18000,2021-06-02 13:47:53-05:00,18000,True,False,"['pytato.py', 'requirements.txt']",['68e860932a28d4d0ea9531808c4c01b3ef152ba8'],3,3,6,2,,,
e9156d5dc18e9fb2ca7648e49ecc896221e9fee5,get rid of most of meshmode,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-02 14:23:38-05:00,18000,2021-06-02 14:23:38-05:00,18000,True,False,"['pytato.py', 'requirements.txt']",['a86a4a364de8d45faccc540c86de2849f8ae5564'],22,11,33,2,0.0,0.0,0.7777777777777778
2f137694b1dda70a00d7bb45d7e121c0fdf3a40d,flake8,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-02 14:25:53-05:00,18000,2021-06-02 14:25:53-05:00,18000,True,False,['pytato.py'],['e9156d5dc18e9fb2ca7648e49ecc896221e9fee5'],2,2,4,1,,,
ef786c92b715e64a06e74f9b97e83b71700b3b85,_is_meshmode_dofarray,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-02 15:06:24-05:00,18000,2021-06-02 15:06:24-05:00,18000,True,False,"['__init__.py', 'pyopencl.py', 'pytato.py']",['2f137694b1dda70a00d7bb45d7e121c0fdf3a40d'],23,31,54,3,1.0,0.8,1.0
5a8876f755fecd8dc84c9167bfa8328d6f631ba3,fix url,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-02 15:21:14-05:00,18000,2021-06-02 15:21:14-05:00,18000,True,False,['requirements.txt'],['ef786c92b715e64a06e74f9b97e83b71700b3b85'],1,1,2,1,,,
539aea15adb8a4057e547159a0442e4805d0c749,implement pytato's math functions,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-02 16:51:28-05:00,18000,2021-06-02 16:51:28-05:00,18000,True,False,['pytato.py'],['5a8876f755fecd8dc84c9167bfa8328d6f631ba3'],0,12,12,1,1.0,1.0,1.0
b42d1b29bacd9bd2adf9e465972eadc50ecab9b6,remove conflicting implementation for math functions,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-02 16:56:21-05:00,18000,2021-06-02 16:56:21-05:00,18000,True,False,['pytato.py'],['539aea15adb8a4057e547159a0442e4805d0c749'],8,0,8,1,0.0,0.0,0.0
2e3e49665ed40098f9efa1ed0d27b5fdd250d5eb,adds relational ops,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-02 17:02:01-05:00,18000,2021-06-02 17:02:01-05:00,18000,True,False,['pytato.py'],['b42d1b29bacd9bd2adf9e465972eadc50ecab9b6'],0,28,28,1,1.0,1.0,0.0
c284585992e1a605aed57e505803e406aa996027,"CI: drop insecure curl, add downstreams, simplify (#17)

* CI: drop insecure curl, add downstreams, simplify

* Use conda for pylint, don't install mpi4py

* Drop pytential from downstream CI",Andreas Klöckner,inform@tiker.net,GitHub,noreply@github.com,2021-06-04 17:28:08-05:00,18000,2021-06-04 17:28:08-05:00,18000,True,False,"['ci.yml', '.gitlab-ci.yml']",['23121b12f86faad1ce8cae2556b2f7f19b30fe18'],37,16,53,2,,,
2a53dceae794d2155b85c2e3e777f17a6fb0f157,add einsum,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-07 14:10:14-05:00,18000,2021-06-07 14:10:14-05:00,18000,True,False,['pytato.py'],['2e3e49665ed40098f9efa1ed0d27b5fdd250d5eb'],0,4,4,1,1.0,1.0,0.0
0d26af9f9cddd5ecbbf1ee2479388a952d2e15e2,add tagged,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-07 14:16:19-05:00,18000,2021-06-07 14:16:19-05:00,18000,True,False,['pytato.py'],['2a53dceae794d2155b85c2e3e777f17a6fb0f157'],1,1,2,1,,,
3e211cc3c73cfcbe107fb93daf0fc621228cb2d8,"Enable mypy (#18)

* enable mypy in setup.cfg

* add some more type annotations

* add py.typed

* add mypy to ci

* fix some type annotations",Alex Fikl,alexfikl@gmail.com,GitHub,noreply@github.com,2021-06-07 15:12:14-05:00,18000,2021-06-07 20:12:14+00:00,0,True,False,"['ci.yml', '.gitlab-ci.yml', '__init__.py', 'arithmetic.py', 'dataclass.py', 'traversal.py', 'py.typed', 'Makefile', 'setup.cfg', 'setup.py']",['c284585992e1a605aed57e505803e406aa996027'],50,150,200,10,0.1721311475409836,0.3360655737704918,0.32786885245901637
e5d666a9e69eae2b90fff41f9e7ea5f553c25d1c,"add conj()
See https://github.com/inducer/loopy/issues/401 on why the test fails",Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-07 23:14:09-05:00,18000,2021-06-07 23:14:09-05:00,18000,True,False,['pytato.py'],['0d26af9f9cddd5ecbbf1ee2479388a952d2e15e2'],0,4,4,1,1.0,1.0,1.0
4da0000948f796dc2e6623e0c2fa4b53def09c16,mypy fix,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-07 23:25:54-05:00,18000,2021-06-07 23:25:54-05:00,18000,True,False,['pytato.py'],['d3ffc35e41379a48e073b5d13021aba758482e99'],1,1,2,1,,,
ce50d7de71e8be1644cda36ed35a9130d8f2ce91,mypy+flake8,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-07 23:28:31-05:00,18000,2021-06-07 23:28:31-05:00,18000,True,False,['pytato.py'],['4da0000948f796dc2e6623e0c2fa4b53def09c16'],3,4,7,1,1.0,1.0,0.0
83099f0ab71f9b74ce6e8ecec6aee51e9864cdef,use complex numbers for conj(),Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-08 08:36:17-05:00,18000,2021-06-08 08:36:17-05:00,18000,True,False,['test_arraycontext.py'],['ce50d7de71e8be1644cda36ed35a9130d8f2ce91'],1,5,6,1,1.0,1.0,0.0
770b34fc3d9de39b1ff207e64e0497c083780ead,add arctan2,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-08 09:53:19-05:00,18000,2021-06-08 09:53:19-05:00,18000,True,False,['pytato.py'],['83099f0ab71f9b74ce6e8ecec6aee51e9864cdef'],0,4,4,1,1.0,1.0,0.0
13c21a955e6bcfeb6d7dbbfa9a2aa29b7dd89c57,fixes for upcoming mypy 0.900,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-06-08 15:28:42-05:00,18000,2021-06-09 00:12:36-05:00,18000,True,False,['setup.py'],['3e211cc3c73cfcbe107fb93daf0fc621228cb2d8'],1,2,3,1,0.0,1.0,1.0
1e3d7737693d551de3e9e0ac73c6aa7bb89555a6,Eliminate a duplicated sentence in the docs,Andreas Klöckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-09 20:17:42-05:00,18000,2021-06-09 20:48:53-05:00,18000,True,False,['context.py'],['13c21a955e6bcfeb6d7dbbfa9a2aa29b7dd89c57'],3,0,3,1,,,
cced8d55f0e8ca2c2cc8628e6cb93145664e9db3,some test fixes,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-09 22:35:28-05:00,18000,2021-06-09 22:35:28-05:00,18000,True,False,['test_arraycontext.py'],['7f1455d91453ba576813c88a0814f00a2ba4a963'],5,23,28,1,0.0,0.0,1.0
b701616ba43a6453f656384ffef92541cfe7ac9f,fix reductions test,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-09 22:56:02-05:00,18000,2021-06-09 22:56:02-05:00,18000,True,False,['test_arraycontext.py'],['cced8d55f0e8ca2c2cc8628e6cb93145664e9db3'],1,2,3,1,1.0,1.0,1.0
986098a1ae7d04d71b87293afbd72cee7368fedf,fix test_norm_complex,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-09 23:26:12-05:00,18000,2021-06-09 23:26:12-05:00,18000,True,False,['test_arraycontext.py'],['ee436da901b60564184ba1fbcbedd2563d296e9d'],0,3,3,1,1.0,1.0,1.0
2e00d62319af193c0b65bb37fc2dab02c734471d,flake8,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-09 23:27:04-05:00,18000,2021-06-09 23:27:04-05:00,18000,True,False,['test_arraycontext.py'],['986098a1ae7d04d71b87293afbd72cee7368fedf'],1,0,1,1,0.0,0.0,0.0
5dd8df9bc08dce7fa351cd0d2a5bcf73a75c819d,fix format string,Matthias Diener,mdiener@illinois.edu,Andreas Klöckner,inform@tiker.net,2021-06-09 23:29:53-05:00,18000,2021-06-10 00:00:35-05:00,18000,True,False,['traversal.py'],['1e3d7737693d551de3e9e0ac73c6aa7bb89555a6'],1,1,2,1,,,
ef9da97b63357008be26bfe9fa119232f60c3b2a,Move all-containers-are-same assertion in _multimap_array_container_impl,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-06-10 11:05:54-05:00,18000,2021-06-10 11:05:54-05:00,18000,True,False,['traversal.py'],['6080cc3bd1b4dcfdd2277d74bc2c90b99e518f85'],4,4,8,1,,,
ae4bba35a553ea3a4486f280577f6380ff49979d,Move actx.np.linalg.norm() implementation bits from pyopencl to generic,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-06-10 11:06:22-05:00,18000,2021-06-10 11:06:26-05:00,18000,True,False,"['fake_numpy.py', 'pyopencl.py']",['ef9da97b63357008be26bfe9fa119232f60c3b2a'],22,21,43,2,1.0,0.0,1.0
9083858f326878289a38dfa4571264a64fc9bb23,actx tests: Use actx to conver to numpy,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-06-10 11:06:54-05:00,18000,2021-06-10 11:06:54-05:00,18000,True,False,['test_arraycontext.py'],['ae4bba35a553ea3a4486f280577f6380ff49979d'],4,4,8,1,,,
16298645118d5a20760c0a27d612cfe01d7be58a,better error message,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-10 16:55:35-05:00,18000,2021-06-10 16:55:35-05:00,18000,True,False,['pytato.py'],['9083858f326878289a38dfa4571264a64fc9bb23'],1,1,2,1,,,
e33c171ac0f359860e9d85f45fef6b617053c1f6,fix(?) test_container_arithmetic,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-10 17:11:16-05:00,18000,2021-06-10 17:11:16-05:00,18000,True,False,['test_arraycontext.py'],['16298645118d5a20760c0a27d612cfe01d7be58a'],2,7,9,1,0.0,1.0,1.0
807b7fb2ca771f522c35d55f7aa697fcba4798f0,flake8 fixes,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-10 17:15:27-05:00,18000,2021-06-10 17:15:27-05:00,18000,True,False,"['fake_numpy.py', 'pyopencl.py', 'pytato.py']",['e33c171ac0f359860e9d85f45fef6b617053c1f6'],2,3,5,3,0.5,0.5,0.5
e3f0ea8f994cea1ebd5d25756a7467e6c4996fe6,switch off default offset,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-10 22:07:29-05:00,18000,2021-06-10 22:07:29-05:00,18000,True,False,['loopy.py'],['807b7fb2ca771f522c35d55f7aa697fcba4798f0'],1,0,1,1,0.0,0.0,1.0
0395fcaf7258adfec504381d6e97b7a93e0a48d0,missing arg to make_placeholder,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-10 22:12:37-05:00,18000,2021-06-10 22:12:37-05:00,18000,True,False,['pytato.py'],['e3f0ea8f994cea1ebd5d25756a7467e6c4996fe6'],1,1,2,1,,,
d964b2833d495076366c07a1f73c750a75ac2b7c,"Improve freeze/thaw usability (#22)

* Add a longer explainer on freeze and thaw

* Add ArrayContext.clone

* with_container_arithmetic: Add _same_cls_check

* Add test for error-on-mixed-array-contexts

* Improvements/fixes to freeze/thaw explainer

Co-authored-by: Alex Fikl <alexfikl@gmail.com>

* Remove trailing whitespace (flake8)

* Add link to lazy eval functionality under the hood of freeze/thaw

* Stop using code injection for actx match checking in with_container_arithmetic

* Make usage guidelines for freeze/thaw a separate section

Co-authored-by: Thomas H. Gibson <gibsonthomas1120@hotmail.com>

* Tweak phrasing in freeze/thaw usage guidelines, add anchors

* Remove an extraneous word in the freeze/thaw description

Co-authored-by: Alex Fikl <alexfikl@gmail.com>
Co-authored-by: Thomas H. Gibson <gibsonthomas1120@hotmail.com>",Andreas Klöckner,inform@tiker.net,GitHub,noreply@github.com,2021-06-10 22:13:30-05:00,18000,2021-06-11 03:13:30+00:00,0,True,False,"['arithmetic.py', 'context.py', 'pyopencl.py', 'test_arraycontext.py']",['5dd8df9bc08dce7fa351cd0d2a5bcf73a75c819d'],16,134,150,4,0.14285714285714285,0.3333333333333333,0.7142857142857143
611a109d6fb0557312513ba18825d94d44e4b4c4,add clone(),Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-10 22:17:41-05:00,18000,2021-06-10 22:17:41-05:00,18000,True,False,['pytato.py'],['8029845eb505be9fae9cccb7ba91461a8d391429'],0,3,3,1,1.0,1.0,1.0
c1b1d57898b85e01d9d4022da16ea957a9810583,support compile() in PyOpenCLArrayContext,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-11 11:16:53-05:00,18000,2021-06-11 11:16:53-05:00,18000,True,False,['pyopencl.py'],['611a109d6fb0557312513ba18825d94d44e4b4c4'],5,10,15,1,1.0,1.0,
bee074ffcc725a542f2c6685e39f2bdcdd154615,Improve array context mismatch error for frozen operands,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-11 10:47:44-05:00,18000,2021-06-11 11:29:18-05:00,18000,True,False,"['arithmetic.py', 'test_arraycontext.py']",['d964b2833d495076366c07a1f73c750a75ac2b7c'],2,18,20,2,0.0,0.2857142857142857,1.0
59471ac1d2211fc9e356d7da6ffa0f515eb65f96,use main branches,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-11 14:44:59-05:00,18000,2021-06-11 14:44:59-05:00,18000,True,False,['requirements.txt'],['c1768f54ab35cedaa50f64b4883d48febb0dbc51'],2,2,4,1,,,
e5eaa037c9dc3f8dd26aadc65559b595390d5c55,pytest compat layer,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-11 15:19:08-05:00,18000,2021-06-11 15:19:08-05:00,18000,True,False,['pytest.py'],['59471ac1d2211fc9e356d7da6ffa0f515eb65f96'],0,8,8,1,1.0,1.0,1.0
30e9b1803cf19ffccc6d58d7168da869885a927d,fix previous,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-11 15:25:23-05:00,18000,2021-06-11 15:25:23-05:00,18000,True,False,['__init__.py'],['e5eaa037c9dc3f8dd26aadc65559b595390d5c55'],2,4,6,1,,,
c203e5a22de9e053df7703e159792992d8fc9260,remove unnecessary import + statement,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-11 15:42:11-05:00,18000,2021-06-11 15:42:11-05:00,18000,True,False,['pytato.py'],['30e9b1803cf19ffccc6d58d7168da869885a927d'],2,0,2,1,,,
d15301102b7a1f4b593f69ae91031df6d6b7db1d,pylint,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-11 16:30:09-05:00,18000,2021-06-11 16:30:09-05:00,18000,True,False,['pytato.py'],['c203e5a22de9e053df7703e159792992d8fc9260'],2,2,4,1,,,
dd6dca21dafda7f25ec3a13ab59e3762487a09ed,"add run-pylint.sh (#27)

* add run-pylint.sh

* add to gitignore",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-06-11 16:59:40-05:00,18000,2021-06-11 21:59:40+00:00,0,True,False,"['.gitignore', 'run-pylint.sh']",['bee074ffcc725a542f2c6685e39f2bdcdd154615'],0,26,26,2,,,
634f4add287655782591af4f86cfc40900f41af9,"add run-mypy.sh (#26)

* add run-mypy.sh

* use for github CI

* add to gitlab

* mypy -> python -m mypy

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-06-11 17:40:21-05:00,18000,2021-06-11 22:40:21+00:00,0,True,False,"['ci.yml', '.gitlab-ci.yml', 'run-mypy.sh']",['dd6dca21dafda7f25ec3a13ab59e3762487a09ed'],2,5,7,3,,,
70b5402d0ba6f19d32989fdc0a62c4cc50bfee53,adds keyed counterparts to ((rec)?)map_array_container,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-11 18:04:49-05:00,18000,2021-06-11 18:05:08-05:00,18000,True,False,"['__init__.py', 'traversal.py']",['d15301102b7a1f4b593f69ae91031df6d6b7db1d'],1,66,67,2,0.6545454545454545,1.0,0.7272727272727273
3e7e3d1407fe268f0295a8f148f5cae901696eb6,PytatoArrayContext.symbolic_array_var: unnecessary interface,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-11 18:12:35-05:00,18000,2021-06-11 18:12:35-05:00,18000,True,False,['pytato.py'],['70b5402d0ba6f19d32989fdc0a62c4cc50bfee53'],4,0,4,1,0.0,0.0,1.0
1bc50483354877ae1370a10296d37fdaa1970622,"fixup! adds keyed counterparts to ((rec)?)map_array_container

- fixes function types, thereby passing mypy CI",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-11 18:26:44-05:00,18000,2021-06-11 18:26:49-05:00,18000,True,False,['traversal.py'],['9cd13dbb0d2f74a15952361f29804fac43c22919'],1,1,2,1,,,
54101c339738da49580e7dd1a56b679c95926dfc,"grammar fixes

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-06-12 11:32:54-05:00,18000,2021-06-12 11:32:54-05:00,18000,True,False,['traversal.py'],['1bc50483354877ae1370a10296d37fdaa1970622'],2,2,4,1,,,
8c6787422df56118a089a6ab356e13f8cb5186fe,change compile() location and some doc fixes,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-12 11:51:59-05:00,18000,2021-06-12 11:51:59-05:00,18000,True,False,"['context.py', 'pyopencl.py', 'pytato.py', 'array_context.rst']",['54101c339738da49580e7dd1a56b679c95926dfc'],13,23,36,4,,,
67aa662b7039c165081298fed0b9e441dfd18c00,small doc fix,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-12 11:55:33-05:00,18000,2021-06-12 11:55:33-05:00,18000,True,False,['context.py'],['8c6787422df56118a089a6ab356e13f8cb5186fe'],1,1,2,1,,,
28de4c44d1172457f9cb1fdd9f256f59c761a3ea,"force identifier in tree to be of type `Tuple[Union[str, int]]`",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-12 12:50:15-05:00,18000,2021-06-12 12:58:37-05:00,18000,True,False,['traversal.py'],['67aa662b7039c165081298fed0b9e441dfd18c00'],1,10,11,1,1.0,1.0,1.0
c6770ff52a2b813829a4cb2f58afc71404384634,update PytatoArrayContext.compile for array containers,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-12 12:58:27-05:00,18000,2021-06-12 12:58:37-05:00,18000,True,False,['pytato.py'],['28de4c44d1172457f9cb1fdd9f256f59c761a3ea'],96,84,180,1,0.8235294117647058,1.0,0.8823529411764706
fbb75928b98f3537eee7c47a8074053d020583dc,PytatoArrayContext.einsum: thaw arguments before einsumming them,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-12 16:13:35-05:00,18000,2021-06-12 16:13:35-05:00,18000,True,False,['pytato.py'],['c6770ff52a2b813829a4cb2f58afc71404384634'],2,16,18,1,1.0,1.0,0.5
3a377be0e28013f7d9fbfe259b68af78caed0a52,filter out arguments that aren't needed to the entrypoint,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-12 17:35:40-05:00,18000,2021-06-12 17:35:40-05:00,18000,True,False,['pytato.py'],['fbb75928b98f3537eee7c47a8074053d020583dc'],3,14,17,1,0.0,0.0,1.0
7fdf6e77dcdeda9f6b045374df7642212cc528f7,reenable real() imag() tests,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-12 21:28:47-05:00,18000,2021-06-12 21:28:47-05:00,18000,True,False,['test_arraycontext.py'],['3a377be0e28013f7d9fbfe259b68af78caed0a52'],8,3,11,1,1.0,1.0,0.0
c6d8a55488249cf0a0cb9d4087dfeeee4c885978,mypy fix,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-12 21:40:26-05:00,18000,2021-06-12 21:40:26-05:00,18000,True,False,['traversal.py'],['7fdf6e77dcdeda9f6b045374df7642212cc528f7'],1,1,2,1,,,
8a795ad0421406d84d7509a11aef4856b73b81bd,add pytato to dependencies,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-12 22:10:14-05:00,18000,2021-06-12 22:10:14-05:00,18000,True,False,['setup.py'],['c6d8a55488249cf0a0cb9d4087dfeeee4c885978'],0,1,1,1,0.0,1.0,1.0
6c2f57c4e89cae0c576a2d58cb8729677aa060c7,"revert special-casing for conj, now that pytato's fixed",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-12 22:33:52-05:00,18000,2021-06-12 22:33:52-05:00,18000,True,False,['test_arraycontext.py'],['8a795ad0421406d84d7509a11aef4856b73b81bd'],5,1,6,1,0.0,0.0,1.0
e340a2906cbd7e1eb57100593e1f6a082790667b,makes type of _tuple_if_not_tuple more precise,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-12 22:38:01-05:00,18000,2021-06-12 22:38:01-05:00,18000,True,False,['traversal.py'],['6c2f57c4e89cae0c576a2d58cb8729677aa060c7'],1,1,2,1,,,
b1f4209f417c258d4fe3d64aa53dd9723677a02c,"remove dependency on pytato

- add pytato to requirements.txt of downstream projects to make them
  compatible with PytatoArrayContext",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-13 12:48:26-05:00,18000,2021-06-13 12:48:26-05:00,18000,True,False,"['ci.yml', 'setup.py']",['e340a2906cbd7e1eb57100593e1f6a082790667b'],1,2,3,2,1.0,0.0,0.0
55528050857fd53f32504ce5c9e5fe8c13d66cb5,"fixup! remove dependency on pytato

Explains why pytato was being added as a requirement for downstream
packages.",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-13 12:56:02-05:00,18000,2021-06-13 12:56:05-05:00,18000,True,False,['ci.yml'],['b1f4209f417c258d4fe3d64aa53dd9723677a02c'],0,3,3,1,,,
63ec4f8e1ecc80780d11ce308c83ece9bae98ab7,fixup! fixup! remove dependency on pytato,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-13 13:10:27-05:00,18000,2021-06-13 13:10:27-05:00,18000,True,False,['ci.yml'],['55528050857fd53f32504ce5c9e5fe8c13d66cb5'],1,6,7,1,,,
54f368c7a5f9be11c64989dd360092b4a9f52c8d,map_array_container: Use execption to decide whether we have a container,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-14 00:40:48-05:00,18000,2021-06-14 01:15:20-05:00,18000,True,False,['traversal.py'],['634f4add287655782591af4f86cfc40900f41af9'],5,6,11,1,0.0,1.0,1.0
9a043ced37dbda38365a0e3067646d35f806f918,make pytato tests optional for legacy packages,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-14 10:34:54-05:00,18000,2021-06-14 10:34:54-05:00,18000,True,False,['pytest.py'],['4b4e3195fd569418cc811ba8848dd70db517eb78'],5,7,12,1,0.0,0.0,1.0
82bb9386c9a79e05e9e9bcbf68aaf16143fa22fd,PyOpenCLArrayContext: recommend python -O if running on GPU,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-14 00:46:46-05:00,18000,2021-06-14 10:45:03-05:00,18000,True,False,['pyopencl.py'],['54f368c7a5f9be11c64989dd360092b4a9f52c8d'],6,13,19,1,0.0,0.0,0.0
93c321e9ce08fb71a8be1147814d2341e84355e9,dont fail fast,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-14 10:47:26-05:00,18000,2021-06-14 10:47:26-05:00,18000,True,False,['ci.yml'],['9a043ced37dbda38365a0e3067646d35f806f918'],0,1,1,1,,,
4a08cadaad9c82e656fc1e7bb37496f1ffaf5adb,fix norm(),Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-14 11:23:24-05:00,18000,2021-06-14 11:23:24-05:00,18000,True,False,['fake_numpy.py'],['980715cba3a4e83023fa8046c9fc353266e3629d'],13,13,26,1,,,
1860d17c5fcdb7f69a7cedc89765a559b22f45b4,Inline the transform cache handling in PyOpenCLArrayContext.call_loopy,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-14 01:20:15-05:00,18000,2021-06-14 11:34:39-05:00,18000,True,False,['pyopencl.py'],['82bb9386c9a79e05e9e9bcbf68aaf16143fa22fd'],9,18,27,1,0.125,0.125,0.75
e6a962b999d69662012e23d31eb4883ca6f2804a,undo ci change,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-14 11:37:01-05:00,18000,2021-06-14 11:37:01-05:00,18000,True,False,['ci.yml'],['1b138f29794da00c1bd1882b97833e0518beacc4'],1,0,1,1,,,
a0447cc4532d235c8a8e550ae893eb1ea7c154fb,"Implement PyOpenCLArrayContext.ravel (#34)

* implement PyOpenCLArrayContext.ravel

* fixup! implement PyOpenCLArrayContext.ravel

- order=""K"" was only correct for >0 stride values, instead renamed it to
  order=""A"" as per numpy.

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Kaushik Kulkarni,15399010+kaushikcfd@users.noreply.github.com,GitHub,noreply@github.com,2021-06-14 12:15:00-05:00,18000,2021-06-14 17:15:00+00:00,0,True,False,"['pyopencl.py', 'test_arraycontext.py']",['1860d17c5fcdb7f69a7cedc89765a559b22f45b4'],1,35,36,2,0.39285714285714285,0.39285714285714285,0.8928571428571429
315fd5c80c69f352142cf463147d144417de0236,flake8,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-14 12:43:30-05:00,18000,2021-06-14 12:43:30-05:00,18000,True,False,['pyopencl.py'],['ce7ef43def8a8be7b11be06ca067d5a5acdfabad'],1,0,1,1,,,
41a208bcce6a7fc76161f7a058f8aa070c31e120,implemented ravel(),Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-14 12:51:36-05:00,18000,2021-06-14 12:51:36-05:00,18000,True,False,['pytato.py'],['315fd5c80c69f352142cf463147d144417de0236'],0,22,22,1,0.14285714285714285,0.14285714285714285,0.8571428571428571
05703d121540105d946cc9f92a9371ee4e4020f0,simplify ravel,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-14 13:19:52-05:00,18000,2021-06-14 13:19:52-05:00,18000,True,False,['pytato.py'],['41a208bcce6a7fc76161f7a058f8aa070c31e120'],20,4,24,1,1.0,1.0,0.0
195b9416b044a24e76f31aeaf5ceaeaf62d0052c,"Mimic numpy's norm when ord is None (#30)

* mimic numpy's norm when ord==None

- When ord==None, numpy ravels the array and then computes the euclidean
  norm.

* test norm when ord is None

* fixup! mimic numpy's norm when ord==None

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Kaushik Kulkarni,15399010+kaushikcfd@users.noreply.github.com,GitHub,noreply@github.com,2021-06-14 13:20:01-05:00,18000,2021-06-14 18:20:01+00:00,0,True,False,"['pyopencl.py', 'test_arraycontext.py']",['a0447cc4532d235c8a8e550ae893eb1ea7c154fb'],2,25,27,2,0.6923076923076923,0.6923076923076923,0.6923076923076923
50e3c2d248d5d86f61083d71e35066deb689c308,"fixup! simplify ravel

Went a step ahead and clarified that such layout-ordering assumptions
would be taken throughout PytatoArrayContext.",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-14 13:38:35-05:00,18000,2021-06-14 13:40:42-05:00,18000,True,False,['pytato.py'],['05703d121540105d946cc9f92a9371ee4e4020f0'],3,21,24,1,1.0,1.0,0.8888888888888888
bb61b260bf4d15c50e4c3a224b31d9bcb45f2fc0,simplify _PytatoFakeNumpyLinalgNamespace,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-14 13:45:24-05:00,18000,2021-06-14 13:45:24-05:00,18000,True,False,['pytato.py'],['50e3c2d248d5d86f61083d71e35066deb689c308'],3,2,5,1,0.0,0.0,1.0
a4491745bfefe5186c48fc56f08f2ab7f58b4794,move norm special case to pyopencl,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-14 13:53:34-05:00,18000,2021-06-14 13:53:34-05:00,18000,True,False,"['fake_numpy.py', 'pyopencl.py']",['bb61b260bf4d15c50e4c3a224b31d9bcb45f2fc0'],19,25,44,2,0.0,1.0,0.0
3938df085e6f34d8003163dbb734fe94a8c42bbc,Special-case serialization of 1/2D object arrays,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-14 15:35:27-05:00,18000,2021-06-14 16:09:56-05:00,18000,True,False,['__init__.py'],['195b9416b044a24e76f31aeaf5ceaeaf62d0052c'],1,10,11,1,1.0,0.0,1.0
b124c1efd060386e7d541d84d673b5c17c1495fb,fix norm() again,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-14 16:28:57-05:00,18000,2021-06-14 16:28:57-05:00,18000,True,False,"['fake_numpy.py', 'test_arraycontext.py']",['b5b3fec70dc16d8b20c6b871a65d25bec053da20'],3,3,6,2,1.0,1.0,1.0
672d367e997721b45db0ff7818ae51e6a135247a,flake8,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-14 16:42:24-05:00,18000,2021-06-14 16:42:24-05:00,18000,True,False,['pyopencl.py'],['b124c1efd060386e7d541d84d673b5c17c1495fb'],0,1,1,1,,,
3948457f6965a7683b7b06f6a0dabd3dceec746a,don't force pytato on downstream projects,Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-06-14 17:17:13-05:00,18000,2021-06-14 17:17:13-05:00,18000,True,False,['ci.yml'],['672d367e997721b45db0ff7818ae51e6a135247a'],12,0,12,1,,,
4d5198acf19d435ca0450669efc6116b5464a0f6,"Generated code: better 'filenames', no false optimization claims",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-14 17:02:05-05:00,18000,2021-06-14 17:36:07-05:00,18000,True,False,"['arithmetic.py', 'dataclass.py']",['3938df085e6f34d8003163dbb734fe94a8c42bbc'],4,6,10,2,0.0,0.0,1.0
caf39d6b8c3fdb6241e16de77140cf0e2196c9ae,Improve actx.compile docs,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-06-14 22:47:52-05:00,18000,2021-06-14 22:47:52-05:00,18000,True,False,['context.py'],['e28ae5da750b5e0b0278f17aeeee71ec1bd33857'],5,15,20,1,,,
666be4a430022a9ece7bf330177d9c5be01d417b,removes reference to pytato array's namespace,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-15 09:35:10-05:00,18000,2021-06-15 09:35:10-05:00,18000,True,False,['pytato.py'],['caf39d6b8c3fdb6241e16de77140cf0e2196c9ae'],4,0,4,1,0.0,0.0,0.0
286011de1381cd043bf777d86b4423c41834b899,adds test_actx_compile,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-15 15:35:50-05:00,18000,2021-06-15 15:35:50-05:00,18000,True,False,['test_arraycontext.py'],['666be4a430022a9ece7bf330177d9c5be01d417b'],0,34,34,1,1.0,1.0,1.0
a7b372aad8163480ae587adf83b5332ee46804eb,"make compile independent of 'inputs_like'

'inputs_like' was a unnecessary argument to make the implementation
easier. But that led to a confusing interface. Now the compiled operator
is smart enough to do the inference of the input data types on its own.
It maintains a mapping from the input dtypes it saw to the executable.",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-16 10:33:35-05:00,18000,2021-06-16 10:33:35-05:00,18000,True,False,"['context.py', 'pytato.py']",['286011de1381cd043bf777d86b4423c41834b899'],69,124,193,2,0.4186046511627907,1.0,1.0
77f9009de1d08055a00557977e2292dc580e8c74,implement norm by hand to be generic,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-16 11:06:20-05:00,18000,2021-06-16 11:06:20-05:00,18000,True,False,['fake_numpy.py'],['a7b372aad8163480ae587adf83b5332ee46804eb'],6,2,8,1,1.0,1.0,1.0
9d3159c9b1435a173c60a5aebc4eac053a18aeca,fixup! make compile independent of 'inputs_like',Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-16 11:11:30-05:00,18000,2021-06-16 11:11:30-05:00,18000,True,False,['context.py'],['77f9009de1d08055a00557977e2292dc580e8c74'],1,0,1,1,1.0,0.0,0.0
177135d80f7e8bebbeaf4611a6a711f756600558,better test warning,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-16 11:12:21-05:00,18000,2021-06-16 11:12:40-05:00,18000,True,False,['pytest.py'],['9d3159c9b1435a173c60a5aebc4eac053a18aeca'],1,2,3,1,1.0,1.0,1.0
17eae1b5c2702ee9119c0e76d7794258ed922ff9,fixup! make compile independent of 'inputs_like',Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-16 11:13:14-05:00,18000,2021-06-16 11:13:37-05:00,18000,True,False,['pytato.py'],['177135d80f7e8bebbeaf4611a6a711f756600558'],1,1,2,1,,,
f6053339e199325aefec44af5266343ed1a0bd9b,fix norm,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-16 13:33:04-05:00,18000,2021-06-16 13:33:04-05:00,18000,True,False,"['fake_numpy.py', 'test_arraycontext.py']",['17eae1b5c2702ee9119c0e76d7794258ed922ff9'],4,5,9,2,0.0,0.0,0.0
5e5097966c1af7c1849dd8bf7d26b35af148b2c5,some compile fixes,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-16 13:59:35-05:00,18000,2021-06-16 13:59:35-05:00,18000,True,False,"['pytato.py', 'test_arraycontext.py']",['f6053339e199325aefec44af5266343ed1a0bd9b'],3,6,9,2,1.0,1.0,1.0
94467bbe095f72426e9a587285b1e48fa99f28f2,fix scalar input to pytato program,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-16 14:15:25-05:00,18000,2021-06-16 14:16:23-05:00,18000,True,False,['pytato.py'],['5e5097966c1af7c1849dd8bf7d26b35af148b2c5'],1,2,3,1,,,
bd21c27083c7c67bba908fe7b47f487c74ab2295,fixup! adds test_actx_compile,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-16 14:16:08-05:00,18000,2021-06-16 14:17:33-05:00,18000,True,False,['test_arraycontext.py'],['94467bbe095f72426e9a587285b1e48fa99f28f2'],12,14,26,1,1.0,1.0,1.0
2804e181478fdf0246c44ddd21a11512892ce658,corrects the callable type signature,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-16 14:51:29-05:00,18000,2021-06-16 14:51:29-05:00,18000,True,False,['pytato.py'],['bd21c27083c7c67bba908fe7b47f487c74ab2295'],1,1,2,1,,,
8d1738e136988e1f2fc78456a61dfe1c7e364f46,"Revert ""corrects the callable type signature""

This reverts commit 2804e181478fdf0246c44ddd21a11512892ce658.",Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-16 15:11:07-05:00,18000,2021-06-16 15:11:07-05:00,18000,True,False,['pytato.py'],['2804e181478fdf0246c44ddd21a11512892ce658'],1,1,2,1,,,
3e9fd368f415db514ee6dd05463b09ad807651b2,restore CI version of arraycontext,Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-06-17 11:51:57-05:00,18000,2021-06-17 11:51:57-05:00,18000,True,False,['ci.yml'],['8d1738e136988e1f2fc78456a61dfe1c7e364f46'],0,3,3,1,,,
3a9d4020271d548418f606f37f399a55c5789950,Add a flag to indicate whether an array context permits inplace modification,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-17 00:38:15-05:00,18000,2021-06-17 12:26:46-05:00,18000,True,False,"['context.py', 'pyopencl.py']",['4d5198acf19d435ca0450669efc6116b5464a0f6'],1,9,10,2,1.0,1.0,1.0
95fd7be8645e6d35d71aa903f70d441facc9f0d8,pyopenclac.to_numpy special case isscalar,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-17 12:30:35-05:00,18000,2021-06-17 12:30:35-05:00,18000,True,False,"['pyopencl.py', 'test_arraycontext.py']",['3e9fd368f415db514ee6dd05463b09ad807651b2'],13,12,25,2,0.0,0.0,0.0
c67b5fc66283ba20480626085deda09621acd8fa,add permits_inplace_modification,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-17 14:00:39-05:00,18000,2021-06-17 14:00:39-05:00,18000,True,False,['pytato.py'],['fe65695326ce9941169fa88fb1ee8230a0dc7b55'],0,3,3,1,1.0,1.0,1.0
8548a1501e49d277d13c26a586c9a503e941353d,fix(?) compile() signature,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-17 14:12:11-05:00,18000,2021-06-17 14:12:11-05:00,18000,True,False,['context.py'],['c67b5fc66283ba20480626085deda09621acd8fa'],1,1,2,1,,,
14dd9ab5ca645bc8db0194d80de62b66864a3eb8,"add @property

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-06-17 14:22:58-05:00,18000,2021-06-17 14:22:58-05:00,18000,True,False,['pytato.py'],['8548a1501e49d277d13c26a586c9a503e941353d'],0,1,1,1,,,
23d453bfa553c43acd946008cbe6a1067da1a871,whitespace,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-17 14:29:07-05:00,18000,2021-06-17 14:29:07-05:00,18000,True,False,['ci.yml'],['14dd9ab5ca645bc8db0194d80de62b66864a3eb8'],1,1,2,1,,,
609a503f47d2f4bc5e887087992561a5d236ce47,implement norm() fully in base class,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-17 14:29:42-05:00,18000,2021-06-17 14:29:42-05:00,18000,True,False,"['fake_numpy.py', '__init__.py', 'pyopencl.py']",['23d453bfa553c43acd946008cbe6a1067da1a871'],57,59,116,3,1.0,1.0,1.0
322c18fe1983c6a03a7c86bf0ec3fb401422353a,Add missing @property on permits_inplace_modification,Andreas Klöckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-17 14:19:09-05:00,18000,2021-06-17 14:51:33-05:00,18000,True,False,['pyopencl.py'],['3a9d4020271d548418f606f37f399a55c5789950'],0,1,1,1,,,
14bf6045407ba614f88255d860a5da419c7b8018,generalize pytest actx factory handling,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-17 15:07:21-05:00,18000,2021-06-17 15:07:21-05:00,18000,True,False,['pytest.py'],['609a503f47d2f4bc5e887087992561a5d236ce47'],12,27,39,1,0.14285714285714285,0.14285714285714285,1.0
e84508100700d7faad0e4832d3855725b04c74ac,fix mypy,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-17 15:25:30-05:00,18000,2021-06-17 15:25:30-05:00,18000,True,False,['pytest.py'],['14bf6045407ba614f88255d860a5da419c7b8018'],1,2,3,1,,,
a96f3fed21941a6d5c1bf8d0ebc8d03d5dcc7995,check that all subary are cl.Arrays,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-17 16:16:03-05:00,18000,2021-06-17 16:16:03-05:00,18000,True,False,['fake_numpy.py'],['e84508100700d7faad0e4832d3855725b04c74ac'],1,2,3,1,0.0,0.0,0.0
678cb044be4f5bc1ca015c041bd55d4206039e99,isscalar -> isinstance,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-18 08:54:18-05:00,18000,2021-06-18 08:54:18-05:00,18000,True,False,['pyopencl.py'],['64131737568013046b3a24085071520a4adbb94a'],3,2,5,1,0.0,0.0,0.0
56d26f5ff6d9405d6f127a2b39dac020d2611dc3,"WS fixes

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-06-18 08:56:16-05:00,18000,2021-06-18 08:56:16-05:00,18000,True,False,"['fake_numpy.py', 'pytato.py']",['678cb044be4f5bc1ca015c041bd55d4206039e99'],2,0,2,2,,,
842deacbacb783312909ffb7fce2bc26986c8726,flake8,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-18 08:57:05-05:00,18000,2021-06-18 08:57:05-05:00,18000,True,False,['pyopencl.py'],['56d26f5ff6d9405d6f127a2b39dac020d2611dc3'],0,1,1,1,,,
983edfc2faa7d390031713fbf1f506598a99bc65,"Ravel error on AK

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-06-18 08:58:01-05:00,18000,2021-06-18 08:58:01-05:00,18000,True,False,['pytato.py'],['842deacbacb783312909ffb7fce2bc26986c8726'],4,1,5,1,0.0,0.0,0.0
9baec6814fd50b5398cd9451ad9d32d4d4b8fccc,"__init__ doc for PytatoArrayContext

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-06-18 08:59:49-05:00,18000,2021-06-18 08:59:49-05:00,18000,True,False,['pytato.py'],['983edfc2faa7d390031713fbf1f506598a99bc65'],0,2,2,1,,,
6f2a16b40ad415aa7d66ee4eeb07cdb45d59bcb4,pyopenclarraycontext: revert back to return an error,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-18 09:09:57-05:00,18000,2021-06-18 09:09:57-05:00,18000,True,False,['pyopencl.py'],['9baec6814fd50b5398cd9451ad9d32d4d4b8fccc'],3,4,7,1,0.0,0.0,1.0
0980f4b2f98d9f7ce40acf001d67eb2024c2293d,do not expose (rec_?)keyed_map_array_container under :mod:,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-18 09:18:17-05:00,18000,2021-06-18 09:18:17-05:00,18000,True,False,"['__init__.py', 'pytato.py']",['6f2a16b40ad415aa7d66ee4eeb07cdb45d59bcb4'],8,4,12,2,,,
48b46791bdbeb1a5b20bac10bfa40b5c1d064336,"prefer np.isscalar(s) over isinstance(s, Number)",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-18 10:44:10-05:00,18000,2021-06-18 10:44:10-05:00,18000,True,False,['pytato.py'],['0980f4b2f98d9f7ce40acf001d67eb2024c2293d'],2,1,3,1,,,
51f5d3d9ada2234da98711271dde9b5100aa1704,formatting: avoid closures as much as possible,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-18 10:50:10-05:00,18000,2021-06-18 10:50:10-05:00,18000,True,False,['traversal.py'],['48b46791bdbeb1a5b20bac10bfa40b5c1d064336'],8,10,18,1,0.0,0.0,0.0
a01e1fd959ca1a322dd02b0112322b19ca5395d9,spell out pt. in messages,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-18 14:28:27-05:00,18000,2021-06-18 14:28:27-05:00,18000,True,False,['pytato.py'],['51f5d3d9ada2234da98711271dde9b5100aa1704'],2,2,4,1,,,
27c6688788637f7d5380db29c55346aa27cb632a,rename PytatoArrayContext to PytatoPyOpenCLArrayContext,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-18 14:33:00-05:00,18000,2021-06-18 14:33:00-05:00,18000,True,False,"['__init__.py', 'pytato.py', 'pytest.py']",['a01e1fd959ca1a322dd02b0112322b19ca5395d9'],17,17,34,3,,,
e334008d19775abf2fe981284aa6436447e0a409,import pytato / pyopencl only once,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-18 14:39:09-05:00,18000,2021-06-18 14:39:09-05:00,18000,True,False,['pytato.py'],['27c6688788637f7d5380db29c55346aa27cb632a'],34,7,41,1,0.08823529411764706,0.058823529411764705,0.5882352941176471
daaa91279d2a29f35ef19bf2c33a87f5add956fd,lint fixes,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-18 14:58:12-05:00,18000,2021-06-18 14:58:12-05:00,18000,True,False,['pytato.py'],['e334008d19775abf2fe981284aa6436447e0a409'],2,1,3,1,,,
53e3857ed70f68150862859419162178486f1ffa,import pyopencl.array once at the top,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-06-18 09:46:50-05:00,18000,2021-06-18 19:12:20-05:00,18000,True,False,['pyopencl.py'],['322c18fe1983c6a03a7c86bf0ec3fb401422353a'],24,19,43,1,0.07142857142857142,0.07142857142857142,0.7142857142857143
fc57918ab5d2abb081376da59979d10bbc2dfb8b,move pyopencl implementaion under arraycontext/impl/pyopencl/,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-06-18 18:19:04-05:00,18000,2021-06-18 19:12:20-05:00,18000,True,False,['__init__.py'],['53e3857ed70f68150862859419162178486f1ffa'],205,5,210,1,0.46875,0.46875,0.6875
14efb7c2f4e48844aa496899eab4e6955ea09164,move pyopencl numpy implementation bits to pyopencl.fake_numpy,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-06-18 18:20:54-05:00,18000,2021-06-18 19:12:20-05:00,18000,True,False,['fake_numpy.py'],['fc57918ab5d2abb081376da59979d10bbc2dfb8b'],0,235,235,1,0.5454545454545454,0.5454545454545454,0.3181818181818182
07d3d4b6b804e201000b37d9a37184bdbdafea7e,type of keys in rec_keyed_map_array_container is more relaxed,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-20 17:05:53-05:00,18000,2021-06-20 17:05:53-05:00,18000,True,False,['traversal.py'],['daaa91279d2a29f35ef19bf2c33a87f5add956fd'],22,10,32,1,0.1,0.0,0.0
f830a544225e311f83d5ab993903a8953c173e85,PytatoArrayCompilerOp: account for keys to be tuples,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-20 17:16:26-05:00,18000,2021-06-20 17:16:26-05:00,18000,True,False,['pytato.py'],['07d3d4b6b804e201000b37d9a37184bdbdafea7e'],2,19,21,1,1.0,1.0,1.0
66faa71aa2180656f4a91cac5cc0c1665593b7ff,makes norm array context generic,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-20 17:46:15-05:00,18000,2021-06-20 17:46:15-05:00,18000,True,False,['fake_numpy.py'],['f830a544225e311f83d5ab993903a8953c173e85'],30,25,55,1,1.0,1.0,1.0
0dc10bdb3f069f9ac15f76f7d50ff92ba5e22082,fixes ravel for pytato arrays,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-20 18:00:45-05:00,18000,2021-06-20 18:00:45-05:00,18000,True,False,['pytato.py'],['66faa71aa2180656f4a91cac5cc0c1665593b7ff'],4,15,19,1,1.0,1.0,1.0
b893cd23f5a98ed9461eb69a284b54786ad250bc,removes interfaces that have no-users,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-20 18:07:01-05:00,18000,2021-06-20 18:07:01-05:00,18000,True,False,['__init__.py'],['0dc10bdb3f069f9ac15f76f7d50ff92ba5e22082'],37,0,37,1,0.0,0.0,0.0
0445658fd5e29a4632022edc7dae4f04dd00a856,force str return,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-20 18:52:42-05:00,18000,2021-06-20 18:52:42-05:00,18000,True,False,['pytato.py'],['e9a9336b8ba7b24946e22328fe47fa38da537b5f'],1,1,2,1,,,
e8ab50148a39555d3bd9392fad4b4f71a9a1746f,bifurcate impl.pytato into impl/pytato/(__init__|fake_numpy|compile).py,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-20 19:38:00-05:00,18000,2021-06-20 19:51:53-05:00,18000,True,False,"['pytato.py', '__init__.py', 'compile.py', 'fake_numpy.py']",['0445658fd5e29a4632022edc7dae4f04dd00a856'],533,594,1127,4,1.0,1.0,0.6666666666666666
c3051047729fdb007fffd611bac5edb2762a98b6,adds docs for Pytato(CompiledOperator|Executable),Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-20 20:24:44-05:00,18000,2021-06-20 20:24:44-05:00,18000,True,False,"['__init__.py', 'compile.py']",['e8ab50148a39555d3bd9392fad4b4f71a9a1746f'],23,69,92,2,0.0,0.0,1.0
7a4a0d406116671439536be210a796298144f73c,"fixup! adds docs for Pytato(CompiledOperator|Executable)

fixes minor typos",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-20 20:48:24-05:00,18000,2021-06-20 20:48:27-05:00,18000,True,False,['compile.py'],['c3051047729fdb007fffd611bac5edb2762a98b6'],2,4,6,1,,,
5698776d046ce9a21c4ba7ff39a93c6d37e92c9d,"minor: gets rid of unnecessary docs, makes type of PytatoArrayContext.compile more precise",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-21 00:18:04-05:00,18000,2021-06-21 00:18:04-05:00,18000,True,False,"['__init__.py', '__init__.py']",['7a4a0d406116671439536be210a796298144f73c'],5,1,6,2,,,
152511624bc0d5ab8ca1e64ac160a73d030544d5,comment why default_offset=lp.auto is disabled,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-21 10:42:26-05:00,18000,2021-06-21 10:42:26-05:00,18000,True,False,['loopy.py'],['5698776d046ce9a21c4ba7ff39a93c6d37e92c9d'],0,2,2,1,,,
98ffaf30aca377880ea1bd6bd3969b94343bea4e,"Clearer messages

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-06-21 23:31:14-05:00,18000,2021-06-21 23:31:14-05:00,18000,True,False,['compile.py'],['152511624bc0d5ab8ca1e64ac160a73d030544d5'],2,2,4,1,,,
5648a0ba0de4bcf5bbc02c8fd9aba543b5948689,"Clean up some class/variable names

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-06-21 23:54:51-05:00,18000,2021-06-21 23:54:51-05:00,18000,True,False,['compile.py'],['98ffaf30aca377880ea1bd6bd3969b94343bea4e'],3,3,6,1,,,
6caf61bb782b89dd23f93efa92e9dbd43eaafae0,naming cleanup,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-22 00:02:38-05:00,18000,2021-06-22 00:02:38-05:00,18000,True,False,"['__init__.py', 'compile.py']",['5648a0ba0de4bcf5bbc02c8fd9aba543b5948689'],21,22,43,2,0.0,1.0,1.0
e07ceb6416e8b677defba8a2867674e38fb9f4e4,handle PytatoPyOpenCLArrayContext's tagging interface,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-22 05:08:04-05:00,18000,2021-06-22 05:08:28-05:00,18000,True,False,['__init__.py'],['6caf61bb782b89dd23f93efa92e9dbd43eaafae0'],3,5,8,1,1.0,1.0,0.0
85459789f0e830a15e846716c7901b7d180c7af1,defer unaivalable input array checking to loopy,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-22 05:14:29-05:00,18000,2021-06-22 05:14:29-05:00,18000,True,False,['__init__.py'],['e07ceb6416e8b677defba8a2867674e38fb9f4e4'],3,0,3,1,0.0,0.0,0.0
a68ec30ea0c5599434461ed823bdb86c54bfe17a,_ary_container_key_stringifier: better docs,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-22 05:30:03-05:00,18000,2021-06-22 05:43:51-05:00,18000,True,False,['compile.py'],['85459789f0e830a15e846716c7901b7d180c7af1'],4,9,13,1,1.0,1.0,1.0
97df833e8439842f8e73ce7cdde87e45e221b732,make leaf array descriptor its own class,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-22 05:46:07-05:00,18000,2021-06-22 05:46:07-05:00,18000,True,False,['compile.py'],['a68ec30ea0c5599434461ed823bdb86c54bfe17a'],4,23,27,1,,,
f618fa403d23e9bea45a5631176af2ed28e73c37,"move function out of another function

- closures are difficult to read",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-22 05:51:19-05:00,18000,2021-06-22 05:51:19-05:00,18000,True,False,['compile.py'],['97df833e8439842f8e73ce7cdde87e45e221b732'],22,28,50,1,0.0,1.0,1.0
5145a5694cdc9ccdfd69e17c1b7bea4b728118bc,compute arg_id_to_descr in a single traversal,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-22 07:24:44-05:00,18000,2021-06-22 07:24:44-05:00,18000,True,False,['compile.py'],['f618fa403d23e9bea45a5631176af2ed28e73c37'],68,67,135,1,0.0,0.3,1.0
7005678771faa896242842465a9bd23adad06282,adds test for internal utils testing,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-22 08:58:41-05:00,18000,2021-06-22 08:58:41-05:00,18000,True,False,['test_utils.py'],['5145a5694cdc9ccdfd69e17c1b7bea4b728118bc'],0,53,53,1,1.0,1.0,1.0
b2bd3dfa7cb78cda66e2f092be243dec9d514996,makes LazilyFunctionCompilingFunctionCaller.__doc__ more precise,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-22 09:08:44-05:00,18000,2021-06-22 09:08:44-05:00,18000,True,False,['compile.py'],['7005678771faa896242842465a9bd23adad06282'],4,7,11,1,0.0,1.0,1.0
55a49c904dc1a1a7b66fc3906ef30f7abb202ade,"fix pt_actx stack

corrects the rec_array_multimap invocation",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-24 13:14:50-05:00,18000,2021-06-24 13:14:50-05:00,18000,True,False,['fake_numpy.py'],['b2bd3dfa7cb78cda66e2f092be243dec9d514996'],1,3,4,1,1.0,1.0,0.0
c745d2e649d274506d7f3a4acd7be7fe268263d5,"Force device scalars on PyOpenCLArrayContext (#43)

* add a flag to force device scalars on the CL array context

* remove local pylintrc from meshmode

* parametrize tests for force_device_scalars

* add docs for force_device_scalars

* add proper typing hints to _loopy_transform_cache

* use np.isscalar instead of isinstance(Number)

* fix type hints for _loopy_transform_cache

* use specific type in _kernel_name_to_wait_event_queue

* add pytest_generate_tests_for_array_context

* add env var to select array context for tests

* fix mypy issues

* add a documented PytestArrayContextFactory

* update test generator to return a closure

* add a way to register factories as strings

* actually fix the implementation

* fix doc formatting

* better names for global variables

* move norm to BaseFakeNumpyLinalgNamespace

* simplify and deduplicate pytest fixture setup",Alex Fikl,alexfikl@gmail.com,GitHub,noreply@github.com,2021-06-24 19:59:45-05:00,18000,2021-06-25 00:59:45+00:00,0,True,False,"['.pylintrc-local.yml', '__init__.py', 'fake_numpy.py', '__init__.py', 'fake_numpy.py', 'pytest.py', 'run-mypy.sh', 'test_arraycontext.py']",['14efb7c2f4e48844aa496899eab4e6955ea09164'],139,335,474,8,0.2391304347826087,0.34782608695652173,0.8985507246376812
bb15b4c030ace0a4b9b09e0f9feb1e6132b5198b,flake8,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-25 16:40:40-05:00,18000,2021-06-25 16:40:40-05:00,18000,True,False,"['__init__.py', 'test_arraycontext.py']",['b918553bfc1756b22b1fed7a927891d84a43c21f'],2,3,5,2,1.0,1.0,1.0
97940584273f457d89dcab0dcc0b3cf376d8dc68,small fixes,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-25 17:18:55-05:00,18000,2021-06-25 17:18:55-05:00,18000,True,False,"['fake_numpy.py', '__init__.py', 'loopy.py', 'pytest.py', 'test_arraycontext.py', 'test_utils.py']",['bb15b4c030ace0a4b9b09e0f9feb1e6132b5198b'],6,22,28,6,1.0,1.0,0.7777777777777778
673cff934d7b6765a3ed3273fe85d58da12d94fe,Add Intel CL Github CI job,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-25 16:58:10-05:00,18000,2021-06-25 17:44:52-05:00,18000,True,False,['ci.yml'],['c745d2e649d274506d7f3a4acd7be7fe268263d5'],1,21,22,1,,,
fb7033d6e06a1c22c06789c59f79aa9a9421a517,Fix names of pytest CI jobs,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-25 17:03:09-05:00,18000,2021-06-25 17:44:52-05:00,18000,True,False,['ci.yml'],['673cff934d7b6765a3ed3273fe85d58da12d94fe'],3,3,6,1,,,
0a5b6a4f267bb1d7a91afc161a1f1769329dda6c,Simplify Gitlab CI config,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-25 17:03:23-05:00,18000,2021-06-25 17:44:52-05:00,18000,True,False,['.gitlab-ci.yml'],['fb7033d6e06a1c22c06789c59f79aa9a9421a517'],4,2,6,1,,,
d7810bba9ecfaa1f8c1a2232c4ef1fae18c7d5a4,Fix PytestPyOpenCLArrayContextFactory for lifetimes as presented by Intel CPU CL,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-25 17:06:18-05:00,18000,2021-06-25 17:44:52-05:00,18000,True,False,['pytest.py'],['0a5b6a4f267bb1d7a91afc161a1f1769329dda6c'],2,11,13,1,1.0,1.0,1.0
de26e24ec99e2afebf388a2959100ff2e1e1cd6d,fix queue,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-25 18:52:14-05:00,18000,2021-06-25 18:52:14-05:00,18000,True,False,['pytest.py'],['86e260117376f7a47ce0990e167d8194ad707d1c'],2,3,5,1,1.0,1.0,1.0
d54671d714e09f79b785a71c99c989ac0eae53cf,fix reduction test,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-25 19:44:37-05:00,18000,2021-06-25 19:44:37-05:00,18000,True,False,['test_arraycontext.py'],['de26e24ec99e2afebf388a2959100ff2e1e1cd6d'],1,1,2,1,,,
983d007f4f130e6cbb21e4fcd27419a3206de782,Improve deprecation message for force_device_scalars,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-26 23:54:38-05:00,18000,2021-06-27 13:05:18-05:00,18000,True,False,['__init__.py'],['d7810bba9ecfaa1f8c1a2232c4ef1fae18c7d5a4'],2,5,7,1,0.0,0.0,0.0
ef8e1d7495b3427c568a802065924497fe06ae83,PyOpenCLArrayContext in arraycontext should know nothing about how to transform,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-26 23:55:13-05:00,18000,2021-06-27 13:05:18-05:00,18000,True,False,['__init__.py'],['983d007f4f130e6cbb21e4fcd27419a3206de782'],0,10,10,1,0.0,0.0,1.0
3cfdb8e184e0178a26c371a20cc0a2f161eea1b7,"Deprecate FEM transform metadata, move to actx.transform_metadata",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-26 23:58:37-05:00,18000,2021-06-27 13:05:18-05:00,18000,True,False,"['__init__.py', '__init__.py', 'metadata.py', 'transform_metadata.py']",['ef8e1d7495b3427c568a802065924497fe06ae83'],27,129,156,4,0.9545454545454546,0.9545454545454546,1.0
e5ad81fc91cb580be5436ff00bd56c3b2c94d08b,Use ElementwiseMapKernelTag in special function kernel,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-26 23:59:18-05:00,18000,2021-06-27 13:05:18-05:00,18000,True,False,['context.py'],['3cfdb8e184e0178a26c371a20cc0a2f161eea1b7'],1,3,4,1,0.0,0.0,0.0
04e25ed32bdd402c494f65d2b17f91019e8325c3,make_loopy_program: allow passing tags,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-26 23:59:40-05:00,18000,2021-06-27 13:05:18-05:00,18000,True,False,['loopy.py'],['e5ad81fc91cb580be5436ff00bd56c3b2c94d08b'],2,3,5,1,1.0,1.0,0.0
f51724bc21d7c1ad3231d3feb2e4883686ee7e15,Deprecate pytest_generate_tests_for_pyopencl_array_context,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-27 00:00:30-05:00,18000,2021-06-27 13:05:18-05:00,18000,True,False,['pytest.py'],['04e25ed32bdd402c494f65d2b17f91019e8325c3'],0,9,9,1,0.0,1.0,1.0
d8bd50d99370ed0f5b348652a1506182b67cd24a,Refactor pytest pyopencl actx factories for easier reuse,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-27 00:01:12-05:00,18000,2021-06-27 13:05:18-05:00,18000,True,False,['pytest.py'],['f51724bc21d7c1ad3231d3feb2e4883686ee7e15'],10,17,27,1,1.0,1.0,1.0
9d3c44d855c1fd1bd511afea12564988f5137112,Tests: use a purpose-built no-transform array context (+test fixture),Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-27 00:01:42-05:00,18000,2021-06-27 13:05:18-05:00,18000,True,False,['test_arraycontext.py'],['d8bd50d99370ed0f5b348652a1506182b67cd24a'],2,29,31,1,1.0,1.0,1.0
c0062855e1cdf07ebe1ed37d5bb14fb48af4d0f7,Put call_loopy in charge of the transform cache,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-27 00:50:19-05:00,18000,2021-06-27 13:05:18-05:00,18000,True,False,['__init__.py'],['9d3c44d855c1fd1bd511afea12564988f5137112'],7,3,10,1,0.0,1.0,0.0
0fa2e3384b311b28bc7f1bdeb5b51b7f645020dd,add to doc,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-28 10:13:13-05:00,18000,2021-06-28 10:13:13-05:00,18000,True,False,['pytest.py'],['d54671d714e09f79b785a71c99c989ac0eae53cf'],0,2,2,1,0.0,0.0,1.0
231458a80fca410a1740574c9cfbd9a8b069a937,sort actx for pytest,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-28 10:35:18-05:00,18000,2021-06-28 10:35:18-05:00,18000,True,False,"['pytest.py', 'test_arraycontext.py', 'test_utils.py']",['3d5e7cbf19897c36550a074fb91edde3dd4a4a51'],2,5,7,3,0.0,0.0,1.0
34c83d315d98b600c7fa82dd48efa537ba8cc589,simplify pytato fixture,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-28 10:50:29-05:00,18000,2021-06-28 10:50:29-05:00,18000,True,False,"['__init__.py', 'pytest.py']",['231458a80fca410a1740574c9cfbd9a8b069a937'],11,6,17,2,0.0,0.0,0.0
4cefcf9d519a90b2a8d4b0f275a739247bb90a16,keep context,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-28 10:57:31-05:00,18000,2021-06-28 10:57:31-05:00,18000,True,False,"['__init__.py', 'pytest.py']",['34c83d315d98b600c7fa82dd48efa537ba8cc589'],2,6,8,2,1.0,1.0,0.0
430c8d8557a82a7588e80ec1c93530683a597731,deprecate transform_loopy_program,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-28 11:24:47-05:00,18000,2021-06-28 11:24:47-05:00,18000,True,False,"['__init__.py', 'test_arraycontext.py']",['4cefcf9d519a90b2a8d4b0f275a739247bb90a16'],1,22,23,2,0.0,1.0,1.0
329678940d0670a9a99b93658951703a4d74cd69,add keyed* to doc,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-28 11:58:21-05:00,18000,2021-06-28 11:58:21-05:00,18000,True,False,"['__init__.py', 'traversal.py']",['430c8d8557a82a7588e80ec1c93530683a597731'],0,4,4,2,,,
a567041ab9fb4b394178985503060e79494ffe18,make PytatoPyOpenCLArrayContext.transform_loopy_program an identity map,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-28 12:03:11-05:00,18000,2021-06-28 12:03:11-05:00,18000,True,False,"['__init__.py', 'compile.py']",['329678940d0670a9a99b93658951703a4d74cd69'],53,11,64,2,1.0,0.9142857142857143,0.0
433826ea271d914ccd0acdcd509df787f1f74163,inline _keyed_map_array_container_impl,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-28 12:16:57-05:00,18000,2021-06-28 12:16:57-05:00,18000,True,False,['traversal.py'],['a567041ab9fb4b394178985503060e79494ffe18'],27,10,37,1,0.0,0.0,0.9375
23a7b38bea387351e1acfd78682ba9209b043dbc,flake8,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-28 12:24:40-05:00,18000,2021-06-28 12:24:40-05:00,18000,True,False,['__init__.py'],['433826ea271d914ccd0acdcd509df787f1f74163'],1,0,1,1,,,
4a57843097c3dfa6ca29e9746dc98b24790b0a7f,make LeafArrayDescriptor derive from AbstractInputDescriptor,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-28 12:30:15-05:00,18000,2021-06-28 12:30:15-05:00,18000,True,False,['compile.py'],['23a7b38bea387351e1acfd78682ba9209b043dbc'],1,1,2,1,,,
0de1de1c61d945d411efb8826c9909ca5998ffac,PytatoPyOpenCLArrayContext: shouldn't refer to _force_device_scalars,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-28 12:51:04-05:00,18000,2021-06-28 12:51:04-05:00,18000,True,False,"['__init__.py', 'pytest.py', 'test_arraycontext.py']",['4a57843097c3dfa6ca29e9746dc98b24790b0a7f'],7,15,22,3,1.0,1.0,1.0
a4a86288e4abdc9b8c090a8ce05c863a6080fbb0,fix pytest xdist,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-28 13:38:58-05:00,18000,2021-06-28 13:38:58-05:00,18000,True,False,['pytest.py'],['0de1de1c61d945d411efb8826c9909ca5998ffac'],7,7,14,1,,,
c1d907037619ff38dffdae0cd332f8b21ad6d310,fix pylint,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-28 13:46:51-05:00,18000,2021-06-28 13:46:51-05:00,18000,True,False,['pytest.py'],['a4a86288e4abdc9b8c090a8ce05c863a6080fbb0'],0,4,4,1,1.0,1.0,1.0
b0af7bfb40a088f328e91671e599a2cbbd5f1234,take to_numpy before comparing actx's scalars,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-28 13:52:23-05:00,18000,2021-06-28 13:53:58-05:00,18000,True,False,['test_arraycontext.py'],['c1d907037619ff38dffdae0cd332f8b21ad6d310'],7,5,12,1,,,
56ac56d1aefef541a65d72e2cb67fbdd28d5cf15,do not expose keyed_ variants of the mappers under arraycontext module,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-28 14:16:29-05:00,18000,2021-06-28 14:16:43-05:00,18000,True,False,"['__init__.py', 'compile.py']",['b0af7bfb40a088f328e91671e599a2cbbd5f1234'],3,1,4,2,,,
ce936a7a854447f0b28ea64847ef153f709ad436,Fix use of enum.auto in arithmetic._OpClass,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-28 13:02:54-05:00,18000,2021-06-28 14:16:51-05:00,18000,True,False,['arithmetic.py'],['c0062855e1cdf07ebe1ed37d5bb14fb48af4d0f7'],6,6,12,1,,,
1378c4207091f109b8ce6bd1c2418c67b914f867,with_container_arithmetic: Nix implementation of __eq__ if eq_comparison not requested,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-28 13:03:25-05:00,18000,2021-06-28 14:16:51-05:00,18000,True,False,['arithmetic.py'],['ce936a7a854447f0b28ea64847ef153f709ad436'],1,14,15,1,0.0,0.0,1.0
b38a12f1851bfd4c6d86ff65968621cdf2e4db20,Test equality-comparison behavior of with_container_arithmetic,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-28 13:03:54-05:00,18000,2021-06-28 14:16:51-05:00,18000,True,False,['test_arraycontext.py'],['1378c4207091f109b8ce6bd1c2418c67b914f867'],2,20,22,1,1.0,1.0,1.0
5f8298869328765da308608e5c6e367d570c333f,Allow bitwise operators on fake DOFArray in test,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-28 13:08:45-05:00,18000,2021-06-28 14:16:51-05:00,18000,True,False,['test_arraycontext.py'],['b38a12f1851bfd4c6d86ff65968621cdf2e4db20'],0,1,1,1,,,
c831f91c6c41bf5f9b5dc02fc8a275a0804f41dd,Use enum.unique in _OpClass to prevent accidents,Andreas Klöckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-28 13:43:55-05:00,18000,2021-06-28 14:16:51-05:00,18000,True,False,['arithmetic.py'],['5f8298869328765da308608e5c6e367d570c333f'],0,1,1,1,,,
327178d6372652b6653da7223b24316ec545f40a,remove from doc,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-28 14:18:51-05:00,18000,2021-06-28 14:18:51-05:00,18000,True,False,['traversal.py'],['56ac56d1aefef541a65d72e2cb67fbdd28d5cf15'],2,0,2,1,,,
4ca0734a845f8c4d8ed63220e7ac59a58ffd00c7,PytatoPyOpenCLArrayContext: do not implement transform_loopy_program,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-28 14:39:02-05:00,18000,2021-06-28 14:39:05-05:00,18000,True,False,"['__init__.py', 'test_arraycontext.py']",['879f3f9552a3b7cdca009063b53cd4c504df976c'],18,15,33,2,0.0,0.0,0.0
db0c5f4c0aaf698b7dc375efea22780a57b230ea,"pt.BoundProgram already ignores unknown arguments, do not redo the ignore operations",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-28 14:48:01-05:00,18000,2021-06-28 14:48:01-05:00,18000,True,False,['compile.py'],['4ca0734a845f8c4d8ed63220e7ac59a58ffd00c7'],11,0,11,1,1.0,1.0,0.0
b8de351b07c3212321f8ff7fcd1b6e098c1cd3cd,"use better syntax for linking to pytato docs

Co-authored-by: Andreas Kloeckner <inform@tiker.net>",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 05:47:20-05:00,18000,2021-06-29 05:47:20-05:00,18000,True,False,['fake_numpy.py'],['db0c5f4c0aaf698b7dc375efea22780a57b230ea'],2,1,3,1,,,
e515c2d37b50490211db0963e2e063ea2e31393f,do not force actx_class interface upon all array context factories,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 05:48:55-05:00,18000,2021-06-29 05:48:55-05:00,18000,True,False,['pytest.py'],['b8de351b07c3212321f8ff7fcd1b6e098c1cd3cd'],4,0,4,1,0.0,0.0,0.0
ef0914ccc5c14ccdc74af64dc1136bbd806ce6b6,"avoid using a method to grab the fake numpy namespace

Co-authored-by: Andreas Kloeckner <inform@tiker.net>",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 05:53:17-05:00,18000,2021-06-29 05:53:17-05:00,18000,True,False,['__init__.py'],['e515c2d37b50490211db0963e2e063ea2e31393f'],5,2,7,1,0.0,0.0,0.0
a80b924b91d6b6d5d8e5a48c10dab8f4da65acbe,"improves _get_arg_id_to_arg_and_arg_id_to_descr docs

Co-authored-by: Andreas Kloeckner <inform@tiker.net>",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 05:56:01-05:00,18000,2021-06-29 05:56:01-05:00,18000,True,False,['compile.py'],['ef0914ccc5c14ccdc74af64dc1136bbd806ce6b6'],4,5,9,1,0.0,1.0,1.0
7ec975bcf1108fcc62710b1cd67e69bb5641271e,"LazilyCompilingFunctionCaller: better docs

Co-authored-by: Andreas Kloeckner <inform@tiker.net>",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 05:59:50-05:00,18000,2021-06-29 06:01:26-05:00,18000,True,False,['compile.py'],['a80b924b91d6b6d5d8e5a48c10dab8f4da65acbe'],4,5,9,1,,,
5935dea845a5f92c1ca25766fd8589f35b50d354,"explains the reason for flushing the queue after every compiled kernel launch

Co-authored-by: Andreas Kloeckner <inform@tiker.net>",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 06:03:31-05:00,18000,2021-06-29 06:03:31-05:00,18000,True,False,['compile.py'],['7ec975bcf1108fcc62710b1cd67e69bb5641271e'],1,3,4,1,,,
fcda4c825d664dacac019cbcbed4d8ba6d8c913e,inline to_arg_descr,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 06:10:04-05:00,18000,2021-06-29 06:10:04-05:00,18000,True,False,['compile.py'],['5935dea845a5f92c1ca25766fd8589f35b50d354'],8,1,9,1,1.0,0.0,0.0
5224c167417c0f321b916e5c8bd1900107fff4c3,take advantage of the fact that super is the one that set self.np,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 06:12:12-05:00,18000,2021-06-29 06:12:12-05:00,18000,True,False,['__init__.py'],['fcda4c825d664dacac019cbcbed4d8ba6d8c913e'],2,4,6,1,1.0,1.0,1.0
d3c827976316cf756e0adbf532eb8f1f22f38cc3,"better error message for non-array container ret. value

Co-authored-by: Andreas Kloeckner <inform@tiker.net>",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 06:15:48-05:00,18000,2021-06-29 06:15:48-05:00,18000,True,False,['compile.py'],['5224c167417c0f321b916e5c8bd1900107fff4c3'],1,2,3,1,0.0,1.0,1.0
696e65310164d01f4b62cab98bc38c0c24e5249b,Avoids closure in LazilyCompilingFunctionCaller.__call__,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 06:45:58-05:00,18000,2021-06-29 06:45:58-05:00,18000,True,False,['compile.py'],['d3c827976316cf756e0adbf532eb8f1f22f38cc3'],19,24,43,1,0.0,0.0,0.0
8a96085cd5959c604d8687bcb7675ce1ac030895,explains argument preprocesssing,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 07:19:12-05:00,18000,2021-06-29 07:19:12-05:00,18000,True,False,['compile.py'],['696e65310164d01f4b62cab98bc38c0c24e5249b'],1,5,6,1,,,
4080e448dea68bf02301aaf62ad3ba42cca1ce0b,"CompiledFunction: better docs

Co-authored-by: Andreas Kloeckner <inform@tiker.net>",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 07:21:54-05:00,18000,2021-06-29 07:21:54-05:00,18000,True,False,['compile.py'],['8a96085cd5959c604d8687bcb7675ce1ac030895'],2,3,5,1,,,
5ddb2e69c78625925cbb1848baa7cd8c7379ea43,adds motivation for pytato-based array contexts in docs,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 08:36:54-05:00,18000,2021-06-29 08:36:54-05:00,18000,True,False,"['__init__.py', 'array_context.rst']",['4080e448dea68bf02301aaf62ad3ba42cca1ce0b'],3,16,19,2,,,
616aa12be113d7ae58b84b593cd3417ad286d2c1,gets rid of unnecessary pytest_generate_tests,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 08:44:24-05:00,18000,2021-06-29 08:44:24-05:00,18000,True,False,['test_utils.py'],['5ddb2e69c78625925cbb1848baa7cd8c7379ea43'],8,0,8,1,,,
e6602badcaa7634d7b063ac13469c2abee1597d9,clarify that pytest_generate_tests_for_array_contexts: returns PyOpenCLArrayContext,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 08:47:02-05:00,18000,2021-06-29 08:47:02-05:00,18000,True,False,['pytest.py'],['616aa12be113d7ae58b84b593cd3417ad286d2c1'],1,1,2,1,,,
2eb6c64a8aaadd36f0ad920feb1cd712e7fc8b90,"don't stringify PyOpenCLArrayContext, rather let the sub-classes implement it",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 09:11:58-05:00,18000,2021-06-29 09:11:58-05:00,18000,True,False,['pytest.py'],['e6602badcaa7634d7b063ac13469c2abee1597d9'],9,14,23,1,1.0,1.0,1.0
d23600f0882b659ea28cbe0826591de7bf08e3a6,avoid stateful update of tranforming a loopy t-unit inside a pt-program,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-29 16:27:57-05:00,18000,2021-06-29 16:39:07-05:00,18000,True,False,"['__init__.py', 'compile.py']",['2eb6c64a8aaadd36f0ad920feb1cd712e7fc8b90'],5,10,15,2,0.0,1.0,1.0
4446c2c3f96eb27e6da30886cd2426e0176ede63,add pytato to setup.py,Matthias Diener,mdiener@illinois.edu,Matthias Diener,mdiener@illinois.edu,2021-06-30 12:14:39-05:00,18000,2021-06-30 12:14:39-05:00,18000,True,False,['setup.py'],['d23600f0882b659ea28cbe0826591de7bf08e3a6'],0,1,1,1,0.0,1.0,1.0
6e768a987c73188dccb04cfc29c450c161f6b879,Make _get_scalar_func_loopy_program a function (not an actx method),Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-30 12:28:12-05:00,18000,2021-06-30 13:21:52-05:00,18000,True,False,"['context.py', 'fake_numpy.py']",['c831f91c6c41bf5f9b5dc02fc8a275a0804f41dd'],30,39,69,2,1.0,1.0,0.0
deb2a81323af055ca677b6f33dd6a85357d2acd0,fake_numpy: use loopy to allocate elementwise function outputs,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-30 12:37:12-05:00,18000,2021-06-30 13:21:52-05:00,18000,True,False,['fake_numpy.py'],['6e768a987c73188dccb04cfc29c450c161f6b879'],4,2,6,1,0.0,0.0,0.0
0a1244758bce49bd22320becb9be02c95f2284c7,"Add test_abs_complex

Co-authored-by: Alex Fikl <alexfikl@gmail.com>",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-30 12:37:43-05:00,18000,2021-06-30 13:21:52-05:00,18000,True,False,['test_arraycontext.py'],['deb2a81323af055ca677b6f33dd6a85357d2acd0'],0,11,11,1,1.0,1.0,1.0
fee0a55d85023d887b37f60ea5e7ab91b265dc6f,test_arraycontext: add an _acf,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-06-30 12:38:17-05:00,18000,2021-06-30 13:21:52-05:00,18000,True,False,['test_arraycontext.py'],['0a1244758bce49bd22320becb9be02c95f2284c7'],2,9,11,1,1.0,1.0,1.0
d341787c96ccf2460d7094efb975ad8dd3d99471,do not impose a hard dep. on pytato,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-06-30 14:03:13-05:00,18000,2021-06-30 14:03:13-05:00,18000,True,False,['setup.py'],['a9c5834995d7e2f5cde74e6338ebbc48bcfc7a05'],1,0,1,1,1.0,0.0,0.0
77b03e5e9eed69a9cfd51bebae68e0f746c5bacf,add lazy meshmode test,Matthias Diener,mdiener@illinois.edu,Andreas Klöckner,inform@tiker.net,2021-07-01 16:49:42-05:00,18000,2021-07-01 17:34:14-05:00,18000,True,False,['ci.yml'],['82b03d20849d9aac0f54cb4e9c00ba0f5908911c'],0,4,4,1,,,
be0f569e805f65942ec4c4ad04e6982c0fe42511,"Broadcast array arg in binary ops if it's a valid leaf array type (#51)

* broadcast arithmetic if arg2 is actx's array

* define and implement get_array_types

Co-authored-by: Alex Fikl <alexfikl@gmail.com>

* adds test_leaf_array_type_broadcasting

* avoid using iff in the docs

replaced with only if

Co-authored-by: Alex Fikl <alexfikl@gmail.com>

* adds docs for test, tests with scalars

* ArrayContext.get_array_types() -> ArrayContext.array_types

* bcast_actx_array_type -> _bcast_actx_array_type

Co-authored-by: Andreas Kloeckner <andreask@illinois.edu>

* formatting: remove unused import

* leaf array bcast types: better code placement

* make array_types a property

* docs: grammar

* better var naming: ary_types -> bcast_actx_ary_types

* Revert ""make array_types a property""

This reverts commit e6b8b1b1860aadd6cd95269ca18dc22303b5b8b5.

* ArrayContext: make array_types a class attribute

Co-authored-by: Alex Fikl <alexfikl@gmail.com>
Co-authored-by: Andreas Kloeckner <andreask@illinois.edu>
Co-authored-by: Andreas Kloeckner <inform@tiker.net>",Kaushik Kulkarni,15399010+kaushikcfd@users.noreply.github.com,GitHub,noreply@github.com,2021-07-06 09:40:10-05:00,18000,2021-07-06 09:40:10-05:00,18000,True,False,"['arithmetic.py', 'context.py', '__init__.py', '__init__.py', 'test_arraycontext.py']",['77b03e5e9eed69a9cfd51bebae68e0f746c5bacf'],5,100,105,5,0.1724137931034483,0.4827586206896552,0.6724137931034483
8e5dbc5fef1c355e63b9712ecf201b545c67c294,call_loopy: correct entrypoint (#58),Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-07-06 13:53:07-05:00,18000,2021-07-06 18:53:07+00:00,0,True,False,['__init__.py'],['be0f569e805f65942ec4c4ad04e6982c0fe42511'],1,2,3,1,,,
37a61820007880a4efeb63c25a8bab335d22dc10,Improve error message for arithmetic on frozen array container,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-07-07 09:54:52-05:00,18000,2021-07-07 10:44:24-05:00,18000,True,False,['arithmetic.py'],['8e5dbc5fef1c355e63b9712ecf201b545c67c294'],3,16,19,1,0.0,0.0,1.0
2b0ae43ba4d1bcbb85c63693191a79deb4fff7cf,add vdot to pyopencl array context,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-07-12 16:27:45-05:00,18000,2021-07-14 07:39:47-05:00,18000,True,False,"['fake_numpy.py', 'test_arraycontext.py']",['37a61820007880a4efeb63c25a8bab335d22dc10'],6,52,58,2,0.25,0.25,0.5416666666666666
464a0383f800ba0bd5f135136e28ae050f6c9f23,extend some tests to use complex inputs,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-07-13 14:12:03-05:00,18000,2021-07-14 07:39:47-05:00,18000,True,False,['test_arraycontext.py'],['2b0ae43ba4d1bcbb85c63693191a79deb4fff7cf'],35,44,79,1,1.0,1.0,1.0
12616418b6efd045a6fb66581f2a86e5275124d8,"Add generic container reductions (#62)

* add recursive container reductions

* extend reductions to array containers

* make rec_reduce_array_container more specific

* rename make_container to process_container

* rename rec_reduce_container to rec_map_reduce_container

* fix typo in comment

Co-authored-by: Andreas Klöckner <inform@tiker.net>

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Alex Fikl,alexfikl@gmail.com,GitHub,noreply@github.com,2021-07-16 17:59:54-05:00,18000,2021-07-16 22:59:54+00:00,0,True,False,"['__init__.py', '__init__.py', 'traversal.py', 'fake_numpy.py', 'fake_numpy.py', 'test_arraycontext.py']",['464a0383f800ba0bd5f135136e28ae050f6c9f23'],55,143,198,6,0.62,0.96,0.84
ced533ec38d3bef2f1d69e63e13ffd903953b3d5,bugfix: change order of pt.make_placeholder,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,kaushikcfd@gmail.com,2021-07-16 18:02:25-05:00,18000,2021-07-16 18:03:50-05:00,18000,True,False,['compile.py'],['12616418b6efd045a6fb66581f2a86e5275124d8'],3,2,5,1,0.0,0.0,0.0
5187a0a5ab1be78b801f3f6941570f4d57f3fdd5,"Cache codegen result in freeze() (#56)

* adds utils for normalizing an array expr

Co-authored-by: Andreas Kloeckner <andreask@illinois.edu>

* PytatoArrayContext: hold a cache of frozen arrays to programs

Co-authored-by: Matthias Diener <mdiener@illinois.edu>

* bugfix: change order of pt.make_placeholder

* Clarify hashing -> caching in normalization function docstring

Co-authored-by: Kaushik Kulkarni <kaushikcfd@gmail.com>
Co-authored-by: Andreas Kloeckner <andreask@illinois.edu>
Co-authored-by: Andreas Klöckner <inform@tiker.net>",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-07-17 08:19:26-05:00,18000,2021-07-17 13:19:26+00:00,0,True,False,"['__init__.py', 'utils.py']",['f74fb9e9d4a27430c386f793e37c2e1b9a6b10b6'],6,94,100,2,0.3939393939393939,1.0,0.9696969696969697
5d5c660dee4518c8395c1bdde7e3c5b7b1d34f18,improves scalar's dtype guess,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-07-19 16:12:39-05:00,18000,2021-07-20 08:55:56-05:00,18000,True,False,['compile.py'],['5187a0a5ab1be78b801f3f6941570f4d57f3fdd5'],2,2,4,1,,,
aa23450d0a20f8ccbf56467dc51d94fa77ac69a3,test actx.compile with python scalars,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-07-19 16:13:43-05:00,18000,2021-07-20 08:55:56-05:00,18000,True,False,['test_arraycontext.py'],['5d5c660dee4518c8395c1bdde7e3c5b7b1d34f18'],0,18,18,1,1.0,1.0,1.0
db1a7d55f72b9d96dc2264e1d2659efaa55d231b,add any and all to PyOpenCLArrayContext,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-07-21 13:47:11-05:00,18000,2021-07-21 18:07:13-05:00,18000,True,False,['fake_numpy.py'],['aa23450d0a20f8ccbf56467dc51d94fa77ac69a3'],0,22,22,1,1.0,1.0,1.0
112ada652122d37586386cd7e61ec3b6097e85f3,add tests for any and all,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-07-21 13:47:19-05:00,18000,2021-07-21 18:07:13-05:00,18000,True,False,['test_arraycontext.py'],['db1a7d55f72b9d96dc2264e1d2659efaa55d231b'],0,28,28,1,1.0,1.0,1.0
3df0533e94f12f8e932f2ab976a8a4890798b046,"[PytatoPyOpenCLArrayContext] Do not evaluate array expressions for 0-sized arrays (#69)

* do not evaluate array expressions for 0-sized arrays

* Use empty for empty arrays

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Kaushik Kulkarni,15399010+kaushikcfd@users.noreply.github.com,GitHub,noreply@github.com,2021-08-10 20:03:59-05:00,18000,2021-08-11 01:03:59+00:00,0,True,False,['__init__.py'],['112ada652122d37586386cd7e61ec3b6097e85f3'],0,10,10,1,0.0,1.0,1.0
4341b9d63df0eb3ce8c5cb314688a72de5b01236,PytatoPyOpenCLArrayContext.compile: add support for keyword arguments,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-07-28 18:58:08-05:00,18000,2021-08-11 18:26:57-05:00,18000,True,False,"['compile.py', 'test_arraycontext.py']",['3df0533e94f12f8e932f2ab976a8a4890798b046'],10,35,45,2,0.6875,0.0,0.0
78dc92213c02daf01e515fb0702c0886fdcf5440,Pass no_numpy option for pytato loopy generation,Andreas Kloeckner,inform@tiker.net,Kaushik Kulkarni,15399010+kaushikcfd@users.noreply.github.com,2021-08-11 23:03:21-05:00,18000,2021-08-12 09:22:21-05:00,18000,True,False,['compile.py'],['4341b9d63df0eb3ce8c5cb314688a72de5b01236'],1,4,5,1,0.0,0.0,0.0
f50736c182be71f4e673bb80fe429ac24d86f775,"defines PytatoPyOpenCLArrayContext.transform_dag

Co-authored-by: Andreas Kloeckner <andreask@illinois.edu>",Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-07-28 20:22:03-05:00,18000,2021-08-16 16:02:58-05:00,18000,True,False,"['__init__.py', 'compile.py']",['78dc92213c02daf01e515fb0702c0886fdcf5440'],6,37,43,2,0.5909090909090909,0.9090909090909091,0.9090909090909091
35dc261453985a96df1cb05aa4d4c06d0b25eb9e,_normalize_pt_expr: perform the transformation for a dict-of-named-arrays,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-08-14 16:19:27-05:00,18000,2021-08-16 16:02:58-05:00,18000,True,False,['utils.py'],['f50736c182be71f4e673bb80fe429ac24d86f775'],4,5,9,1,,,
82117c73c24cd611f038eb663ccca21f1f679421,use the standard doc config (#77),Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2021-08-24 15:23:14-05:00,18000,2021-08-24 20:23:14+00:00,0,True,False,['conf.py'],['35dc261453985a96df1cb05aa4d4c06d0b25eb9e'],49,10,59,1,,,
e309ea20beee1527a76764cf087755ee9d8bd449,split ArrayContainerT into ContainerT and ArrayOrContainerT,Matthew Smith,mjsmith6@illinois.edu,Andreas Klöckner,inform@tiker.net,2021-08-25 16:46:35-05:00,18000,2021-08-26 17:42:55-05:00,18000,True,False,"['__init__.py', 'traversal.py']",['82117c73c24cd611f038eb663ccca21f1f679421'],23,29,52,2,,,
bdfbda7ea4dc99a3f25946dfcd26b01dc64d7135,fix mypy failure,Matthew Smith,mjsmith6@illinois.edu,Andreas Klöckner,inform@tiker.net,2021-08-26 09:42:23-05:00,18000,2021-08-26 17:42:55-05:00,18000,True,False,['traversal.py'],['e309ea20beee1527a76764cf087755ee9d8bd449'],2,2,4,1,,,
84a84ced8e9d26f73d366df4091a2e56bf3b8c20,add ArrayT to fix mypy without limiting ContainerT usefulness,Matthew Smith,mjsmith6@illinois.edu,Andreas Klöckner,inform@tiker.net,2021-08-26 10:03:59-05:00,18000,2021-08-26 17:42:55-05:00,18000,True,False,"['__init__.py', 'traversal.py']",['bdfbda7ea4dc99a3f25946dfcd26b01dc64d7135'],4,10,14,2,,,
e08969f6264b2a6c504596ec4898d226d32b4b61,"fix type signature of wrapper func

Co-authored-by: Alex Fikl <alexfikl@gmail.com>",Matt Smith,mjsmith6@illinois.edu,Andreas Klöckner,inform@tiker.net,2021-08-26 12:10:30-05:00,18000,2021-08-26 17:42:55-05:00,18000,True,False,['traversal.py'],['84a84ced8e9d26f73d366df4091a2e56bf3b8c20'],1,1,2,1,,,
e15ac8acfd248f236b882be82cc4a934c31c9ef0,Add a feature flag for nonscalar broadcasting,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-08-29 19:06:47-05:00,18000,2021-08-29 19:48:26-05:00,18000,True,False,"['context.py', '__init__.py', '__init__.py']",['e08969f6264b2a6c504596ec4898d226d32b4b61'],0,13,13,3,1.0,1.0,1.0
df421e38d0ec193bff0e25ac295bc6b41d87c622,Allow registering MultiVector as an array container,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-08-29 20:05:15-05:00,18000,2021-08-29 23:49:12-05:00,18000,True,False,"['__init__.py', '__init__.py', 'conf.py']",['e15ac8acfd248f236b882be82cc4a934c31c9ef0'],2,49,51,3,1.0,1.0,1.0
c1006e9c065ae489f6e6bbcb9dee336b002ce59a,"Clarify reduction documentation (#82)

* clarify reduction documentation

* elaborate on associativity of reduce_func

* add associativity example

* remove docstring duplication

Co-authored-by: Alex Fikl <alexfikl@gmail.com>

Co-authored-by: Andreas Klöckner <inform@tiker.net>
Co-authored-by: Alex Fikl <alexfikl@gmail.com>",Matt Smith,mjsmith6@illinois.edu,GitHub,noreply@github.com,2021-08-30 15:30:40-05:00,18000,2021-08-30 15:30:40-05:00,18000,True,False,['traversal.py'],['df421e38d0ec193bff0e25ac295bc6b41d87c622'],14,48,62,1,0.0,1.0,1.0
5776eab53299300319be789185479e9f1a91403f,add non-recursive reductions,Matthew Smith,mjsmith6@illinois.edu,Andreas Klöckner,inform@tiker.net,2021-08-12 16:51:22-05:00,18000,2021-09-04 18:58:43-05:00,18000,True,False,"['__init__.py', 'traversal.py']",['c1006e9c065ae489f6e6bbcb9dee336b002ce59a'],0,47,47,2,0.05555555555555555,1.0,1.0
4b184f88b9b6c8ce93317f1172c02bcb64575be0,"require reduce_func to be associative in non-recursive reductions too

Co-authored-by: Alex Fikl <alexfikl@gmail.com>",Matt Smith,mjsmith6@illinois.edu,Andreas Klöckner,inform@tiker.net,2021-09-01 09:45:47-05:00,18000,2021-09-04 18:58:43-05:00,18000,True,False,['traversal.py'],['5776eab53299300319be789185479e9f1a91403f'],2,4,6,1,0.0,1.0,1.0
8f56582a50ba2a6234f5dc378f9400125f572015,Create einsum loopy kernel with offsets allowed,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-09-04 19:59:48-05:00,18000,2021-09-04 20:35:22-05:00,18000,True,False,['context.py'],['4b184f88b9b6c8ce93317f1172c02bcb64575be0'],0,1,1,1,1.0,1.0,0.0
387f7ad44f97a2e4ffb6ffa6b807a705dafca04f,support reductions with targeted axes,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-09-20 16:21:05-05:00,18000,2021-09-20 19:15:02-05:00,18000,True,False,"['fake_numpy.py', 'fake_numpy.py']",['8f56582a50ba2a6234f5dc378f9400125f572015'],15,40,55,2,1.0,1.0,0.0
0f9133215e3fe6955a6da78d99fdde540b24cc3f,defines PytatoFakeNumpyNamespace.broadcast_to,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-09-20 16:21:42-05:00,18000,2021-09-20 19:15:02-05:00,18000,True,False,['fake_numpy.py'],['387f7ad44f97a2e4ffb6ffa6b807a705dafca04f'],0,3,3,1,1.0,1.0,0.0
e98e577b37229ebb28d36ae33c87cf130f557bcf,add array_equal to PyOpenCLArrayContext.np,Matthew Smith,mjsmith6@illinois.edu,Andreas Klöckner,inform@tiker.net,2021-09-21 10:31:51-05:00,18000,2021-09-22 11:31:56-05:00,18000,True,False,"['fake_numpy.py', 'test_arraycontext.py']",['0f9133215e3fe6955a6da78d99fdde540b24cc3f'],2,65,67,2,0.5714285714285714,1.0,0.8571428571428571
0d355ed2c41cf5a3ab994d769165e9ab46c3ac4a,test and fix map_array_container on scalars,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-09-21 14:25:56-05:00,18000,2021-09-22 18:02:49-05:00,18000,True,False,"['traversal.py', 'test_arraycontext.py']",['e98e577b37229ebb28d36ae33c87cf130f557bcf'],36,76,112,2,0.15151515151515152,1.0,0.3333333333333333
ac8d9d2691987aa65ab3f477e82d24409f88f885,raise TypeError instead of NotImplementedError in de/serialize_container,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-09-22 16:43:42-05:00,18000,2021-09-22 18:02:49-05:00,18000,True,False,"['__init__.py', 'traversal.py']",['0d355ed2c41cf5a3ab994d769165e9ab46c3ac4a'],9,10,19,2,1.0,1.0,1.0
e0e1a420cc64a4c6d32f8cc77606547b1161da08,Define ArrayContext.permits_advanced_indexing,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-08-15 18:07:10-05:00,18000,2021-09-22 19:01:56-05:00,18000,True,False,"['context.py', '__init__.py', '__init__.py']",['ac8d9d2691987aa65ab3f477e82d24409f88f885'],0,16,16,3,1.0,1.0,1.0
93140738460531f4fe6391bdfe745912b7f9676d,add any/all/array_equal to PytatoPyOpenCLArrayContext.np,Matthew Smith,mjsmith6@illinois.edu,Andreas Klöckner,inform@tiker.net,2021-08-12 09:25:06-05:00,18000,2021-09-24 18:37:52-05:00,18000,True,False,"['fake_numpy.py', 'test_arraycontext.py']",['e0e1a420cc64a4c6d32f8cc77606547b1161da08'],2,32,34,2,1.0,1.0,0.5
a9f8414ba273c2e57a4e97c09683d0131b1ad3ec,Use ProcessLogger in LazilyCompilingFunctionCaller to make codegen bottlenecks more visible,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-10-05 15:48:16-05:00,18000,2021-10-05 16:52:11-05:00,18000,True,False,['compile.py'],['93140738460531f4fe6391bdfe745912b7f9676d'],14,22,36,1,0.0,0.0,0.0
5eec699eb1a81ef82879657b61731ea6a6441f11,Fix typo in transform_loopy_program log message,Andreas Klöckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-10-11 17:40:59-05:00,18000,2021-10-11 18:29:21-05:00,18000,True,False,['compile.py'],['a9f8414ba273c2e57a4e97c09683d0131b1ad3ec'],1,1,2,1,,,
917c656d729aca4305d99dd4b72eac0943de5752,add flatten to numpy for an entire container,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-25 16:44:20-05:00,18000,2021-10-15 19:15:37-05:00,18000,True,False,"['__init__.py', 'traversal.py', 'test_arraycontext.py']",['5eec699eb1a81ef82879657b61731ea6a6441f11'],4,103,107,3,0.2857142857142857,1.0,0.7714285714285715
768a0070619ce3fb8269dfaca6b596619af10cb8,add flatten and unflatten,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-26 20:21:52-05:00,18000,2021-10-15 19:15:40-05:00,18000,True,False,"['__init__.py', 'traversal.py', 'fake_numpy.py', 'test_arraycontext.py']",['917c656d729aca4305d99dd4b72eac0943de5752'],1,126,127,4,0.5444444444444444,1.0,0.7111111111111111
3e81dd2292ac6262444c92c30462c85660fbe76b,mention that serialize_container should be deterministic,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-26 20:29:08-05:00,18000,2021-10-15 19:15:41-05:00,18000,True,False,['__init__.py'],['768a0070619ce3fb8269dfaca6b596619af10cb8'],1,4,5,1,0.0,1.0,1.0
18e08aba0369cac59ee1bc7704bb5a35731e4a41,rename argument in unflatten_to_numpy,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-26 20:34:16-05:00,18000,2021-10-15 19:15:41-05:00,18000,True,False,['traversal.py'],['3e81dd2292ac6262444c92c30462c85660fbe76b'],7,8,15,1,0.0,1.0,1.0
da868559537f1082d561c5ce9ed21ae94fac0526,remove flatten_to_numpy and unflatten_from_numpy,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-27 10:01:00-05:00,18000,2021-10-15 19:15:41-05:00,18000,True,False,"['__init__.py', 'traversal.py', 'test_arraycontext.py']",['18e08aba0369cac59ee1bc7704bb5a35731e4a41'],100,1,101,3,0.7142857142857143,0.0,0.22857142857142856
547899707670b7bbf516bf6f923661a8e0dd538f,raise if flattened container does not have homogeneous dtypes,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-27 10:01:46-05:00,18000,2021-10-15 19:15:41-05:00,18000,True,False,['traversal.py'],['da868559537f1082d561c5ce9ed21ae94fac0526'],16,29,45,1,0.0,0.0,1.0
1d914ab384ef7658dddca9cd7d15dae1cc00d813,update tests with more array container layouts,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-27 10:02:06-05:00,18000,2021-10-15 19:15:41-05:00,18000,True,False,['test_arraycontext.py'],['547899707670b7bbf516bf6f923661a8e0dd538f'],13,27,40,1,0.0,0.0,0.7777777777777778
d859cd8aecba2899606380f21b9e22bef37dd540,complain if unflattened strides do not match,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-27 10:14:51-05:00,18000,2021-10-15 19:15:41-05:00,18000,True,False,['traversal.py'],['1d914ab384ef7658dddca9cd7d15dae1cc00d813'],0,6,6,1,0.0,0.0,1.0
91e895018318384b9a49ecc5635872a24bca3f7e,"improve docs for serialize_container

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Alex Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-27 10:24:34-05:00,18000,2021-10-15 19:15:41-05:00,18000,True,False,['__init__.py'],['d859cd8aecba2899606380f21b9e22bef37dd540'],2,3,5,1,0.0,1.0,1.0
8fb7d28530f80f167fdcdcd0447e8b095e8aae05,remove unused memoize_in,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-27 10:26:41-05:00,18000,2021-10-15 19:15:41-05:00,18000,True,False,['traversal.py'],['91e895018318384b9a49ecc5635872a24bca3f7e'],1,0,1,1,,,
82a845958537e1bf5743b034a1964be713157ccc,make failed reshape message less opaque,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-28 09:38:16-05:00,18000,2021-10-15 19:15:42-05:00,18000,True,False,['traversal.py'],['8fb7d28530f80f167fdcdcd0447e8b095e8aae05'],6,15,21,1,0.0,0.0,1.0
c56e8f5860a192024faaab1ef2f74411e2ef43e8,hardcode flatten and unflatten in c order,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-28 09:49:37-05:00,18000,2021-10-15 19:15:42-05:00,18000,True,False,"['traversal.py', 'fake_numpy.py', 'fake_numpy.py']",['82a845958537e1bf5743b034a1964be713157ccc'],6,10,16,3,0.75,0.75,0.25
087351c62eb4ccd68f90990ed8de8317a68c6d29,add tests for flatten edge cases,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-29 20:01:31-05:00,18000,2021-10-15 19:15:42-05:00,18000,True,False,"['traversal.py', 'test_arraycontext.py']",['c56e8f5860a192024faaab1ef2f74411e2ef43e8'],7,20,27,2,0.0,0.8333333333333334,1.0
85c8b39c8747c042b7eb8c85fcfc139f182f69a5,slice forwards when unflattening,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-29 20:02:27-05:00,18000,2021-10-15 19:15:42-05:00,18000,True,False,['traversal.py'],['087351c62eb4ccd68f90990ed8de8317a68c6d29'],3,3,6,1,,,
4d0fe4dd96c6e3eaa1b183f83e1cd27012c6764b,"add missing space in exception message

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Alex Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-29 20:08:16-05:00,18000,2021-10-15 19:15:42-05:00,18000,True,False,['traversal.py'],['85c8b39c8747c042b7eb8c85fcfc139f182f69a5'],1,1,2,1,,,
5dc9da2c3f119455a5e796996feb27117d078d0b,add some more tests for unflatten,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-29 20:38:26-05:00,18000,2021-10-15 19:15:42-05:00,18000,True,False,['test_arraycontext.py'],['4d0fe4dd96c6e3eaa1b183f83e1cd27012c6764b'],0,20,20,1,1.0,1.0,1.0
7b03174b6ede7e540c663676de1961558a2b2c48,update test skip condition,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-09-30 19:58:35-05:00,18000,2021-10-15 19:15:42-05:00,18000,True,False,"['traversal.py', 'test_arraycontext.py']",['5dc9da2c3f119455a5e796996feb27117d078d0b'],7,9,16,2,1.0,1.0,0.0
853f50147736df7f94a3d3ccf19253a0bafa28d7,"improve docs

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Alex Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-10-06 19:13:53-05:00,18000,2021-10-15 19:15:42-05:00,18000,True,False,"['__init__.py', 'traversal.py']",['7b03174b6ede7e540c663676de1961558a2b2c48'],2,2,4,2,,,
c8269936186d8ebe60260867cb63b67ccfbd3948,"unflatten: better check that template and ary sizes match

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Alex Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-10-06 19:14:57-05:00,18000,2021-10-15 19:15:43-05:00,18000,True,False,['traversal.py'],['853f50147736df7f94a3d3ccf19253a0bafa28d7'],2,8,10,1,0.0,0.8,0.2
c50ee3e770bbbb57b051db62facb98b3cc092f22,update xfail link,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-10-17 22:24:54-05:00,18000,2021-10-17 22:24:54-05:00,18000,True,False,['test_arraycontext.py'],['c8269936186d8ebe60260867cb63b67ccfbd3948'],1,2,3,1,,,
004e85feede3df5b4063503a3774a49627872ef0,pyopencl: remove unused astype,Alexandru Fikl,alexfikl@gmail.com,Alexandru Fikl,alexfikl@gmail.com,2021-10-18 16:20:48-05:00,18000,2021-10-18 16:20:48-05:00,18000,True,False,"['fake_numpy.py', 'fake_numpy.py']",['c50ee3e770bbbb57b051db62facb98b3cc092f22'],7,3,10,2,0.0,0.0,1.0
133e8fa09daee542a77e024202186667d8e1a7c6,Teach PyOpenCLArrayContext how to deal with loopy programs without loops,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-10-18 14:54:11-05:00,18000,2021-10-18 18:15:36-05:00,18000,True,False,['__init__.py'],['5eec699eb1a81ef82879657b61731ea6a6441f11'],0,6,6,1,0.0,0.0,1.0
a90e8ba148a21ad8b1913416b69c8d73beafdf71,do not force host transfers when computing norms,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-17 10:37:32-05:00,18000,2021-10-18 19:34:05-05:00,18000,True,False,['fake_numpy.py'],['133e8fa09daee542a77e024202186667d8e1a7c6'],5,31,36,1,0.9,0.15,0.15
c106155c6b5563be6b38b2d8c9ddb7d9565b008d,Deprecate is_array_container,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-10-18 18:41:31-05:00,18000,2021-10-18 21:18:06-05:00,18000,True,False,"['__init__.py', 'dataclass.py', 'traversal.py', 'fake_numpy.py', 'fake_numpy.py', 'compile.py', 'fake_numpy.py']",['a90e8ba148a21ad8b1913416b69c8d73beafdf71'],22,34,56,7,0.0,1.0,1.0
8f8627894497b64453029ba94858e77490c47bbc,_serialize_ndarray_container: raise TypeError for non-object-arrays,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-10-18 19:56:05-05:00,18000,2021-10-18 21:18:06-05:00,18000,True,False,"['__init__.py', 'test_arraycontext.py']",['c106155c6b5563be6b38b2d8c9ddb7d9565b008d'],2,2,4,2,,,
9c24abb13e736f95f820e7dc037314298f279020,remove unused _scalar_list_norm,Alexandru Fikl,alexfikl@gmail.com,Alex Fikl,alexfikl@gmail.com,2021-10-18 19:16:43-05:00,18000,2021-10-18 22:09:26-05:00,18000,True,False,['fake_numpy.py'],['8f8627894497b64453029ba94858e77490c47bbc'],15,0,15,1,0.0,1.0,0.0
6eaf518648ccb6a393d6a1c499b1a1c24955d155,"Add alternate outer product (#46)

* Make broadcast settings visible on users of with_container_arithmetic

* Remove stray debug print

Co-authored-by: Alex Fikl <alexfikl@gmail.com>

* Fix _outer_bcast_types attribute name

* add alternate outer product

* add empty line

Co-authored-by: Andreas Klöckner <inform@tiker.net>

* add comment explaining _outer_bcast_types

Co-authored-by: Andreas Klöckner <inform@tiker.net>

* add more detail to docstring first line

Co-authored-by: Andreas Klöckner <inform@tiker.net>

* rename is_scalar -> treat_as_scalar

* treat non-object numpy arrays as scalars in outer

* remove use of deprecated is_array_container

* clarify usage of isinstance(..., ndarray) for object array detection

Co-authored-by: Andreas Klöckner <inform@tiker.net>

Co-authored-by: Andreas Kloeckner <inform@tiker.net>
Co-authored-by: Alex Fikl <alexfikl@gmail.com>",Matt Smith,mjsmith6@illinois.edu,GitHub,noreply@github.com,2021-10-20 15:13:49-05:00,18000,2021-10-20 15:13:49-05:00,18000,True,False,"['__init__.py', 'arithmetic.py', 'traversal.py', 'test_arraycontext.py']",['c5ed317ac595d4ee1e222930d6e0eb0b3315f366'],1,135,136,4,0.12359550561797752,0.6404494382022472,1.0
13eed85257d003a425719f9bd9fa2a57dd5c2354,introduces FromArrayContextCompile tag,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-08-25 17:33:31-05:00,18000,2021-10-20 16:07:53-05:00,18000,True,False,['compile.py'],['6eaf518648ccb6a393d6a1c499b1a1c24955d155'],0,20,20,1,0.0,0.0,0.0
7bd2aa838724510e5d9638ad4c80c730022708e0,adds PytatoPyOpenCLArrayContext.compile to docs,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-20 15:00:15-05:00,18000,2021-10-20 16:07:53-05:00,18000,True,False,['__init__.py'],['13eed85257d003a425719f9bd9fa2a57dd5c2354'],0,2,2,1,,,
f4183f8e77a7eb8fe8a1c16db79a7d49c495c3e3,allow scalars in to_numpy,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-20 17:26:23-05:00,18000,2021-10-20 18:52:28-05:00,18000,True,False,"['__init__.py', '__init__.py']",['7bd2aa838724510e5d9638ad4c80c730022708e0'],1,4,5,2,1.0,1.0,1.0
d03855d1c03177854af4d4593259b726cf35ecd6,convert some is_array_container_type checks,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-19 21:52:44-05:00,18000,2021-10-22 17:57:55-05:00,18000,True,False,"['__init__.py', 'traversal.py', 'fake_numpy.py', 'fake_numpy.py', 'fake_numpy.py', 'test_arraycontext.py']",['f4183f8e77a7eb8fe8a1c16db79a7d49c495c3e3'],75,140,215,6,0.7692307692307693,0.8717948717948718,1.0
13e9a7763c239a19ef6581179ba75e5e68b2879c,remove is_array_container_type in multimap,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-19 22:16:46-05:00,18000,2021-10-22 17:57:55-05:00,18000,True,False,"['traversal.py', 'compile.py']",['d03855d1c03177854af4d4593259b726cf35ecd6'],14,52,66,2,0.0,0.0,0.5
7b57511a967c29351c3645c239c8bf0acbdc3a89,simplify new_like allocation,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-19 22:36:15-05:00,18000,2021-10-22 17:57:55-05:00,18000,True,False,['fake_numpy.py'],['13e9a7763c239a19ef6581179ba75e5e68b2879c'],12,2,14,1,0.0,0.0,0.1
f0e3ac009cab332aa6021bc8633e23922d517cf8,add specific array container exception type,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-20 19:51:07-05:00,18000,2021-10-22 17:57:55-05:00,18000,True,False,"['__init__.py', '__init__.py', 'traversal.py', 'fake_numpy.py', 'fake_numpy.py', 'fake_numpy.py']",['7b57511a967c29351c3645c239c8bf0acbdc3a89'],34,37,71,6,0.0,0.0,0.0
bec3052aef0877801d3e476bc964d945be78e425,allow unflatten to skip dtype and stride checks,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-23 23:10:54-05:00,18000,2021-10-24 00:34:57-05:00,18000,True,False,"['traversal.py', 'test_arraycontext.py']",['f0e3ac009cab332aa6021bc8633e23922d517cf8'],6,56,62,2,0.0,0.0,0.7857142857142857
a2620be28983be1d0a461a51ddc8a42e870b619f,use make_placeholder instead of Placeholder,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-27 13:55:10-05:00,18000,2021-10-27 14:51:05-05:00,18000,True,False,['utils.py'],['bec3052aef0877801d3e476bc964d945be78e425'],6,7,13,1,1.0,1.0,1.0
1db13f2e0f810af413022d5bbcce281bdaa3b61b,add DeviceArray type alias for typing,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-27 10:22:48-05:00,18000,2021-10-27 17:34:16-05:00,18000,True,False,"['__init__.py', 'traversal.py', 'context.py', 'conf.py']",['a2620be28983be1d0a461a51ddc8a42e870b619f'],7,29,36,4,,,
b3d22b1729f6b20b2bd27e685a439db04c2c7e16,Use edit_requirements_txt_for_downstream_in_subdir for downstream CI,Andreas Klöckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-10-29 00:18:44-05:00,18000,2021-10-29 09:32:39-05:00,18000,True,False,['ci.yml'],['1db13f2e0f810af413022d5bbcce281bdaa3b61b'],6,7,13,1,,,
0bb24444fc04dfcdfaff4323141924fe4676ad9f,Drop a now-extraneous type: ignore,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-10-29 00:41:07-05:00,18000,2021-10-29 09:32:39-05:00,18000,True,False,['utils.py'],['b3d22b1729f6b20b2bd27e685a439db04c2c7e16'],2,1,3,1,,,
5c856806c5db47ba940685b6fa4b9db58aeeb5b9,Fix a ci-support script name in Github CI script,Andreas Klöckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2021-10-29 08:48:47-05:00,18000,2021-10-29 09:32:39-05:00,18000,True,False,['ci.yml'],['0bb24444fc04dfcdfaff4323141924fe4676ad9f'],1,1,2,1,,,
8559234ed64fa394f5851bbba47b008002772fd3,better error message in dataclass_array_container,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-25 19:54:33-05:00,18000,2021-10-29 18:35:10-05:00,18000,True,False,"['__init__.py', 'dataclass.py', 'test_utils.py']",['5c856806c5db47ba940685b6fa4b9db58aeeb5b9'],6,86,92,3,0.0,0.5952380952380952,1.0
1f8709cea4ba46932ec62f56169fca629058ce4d,add type annotations to is_array_field,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-29 14:41:15-05:00,18000,2021-10-29 18:35:10-05:00,18000,True,False,['dataclass.py'],['8559234ed64fa394f5851bbba47b008002772fd3'],2,2,4,1,,,
f6400a4d5f647a534bd923e879ead8a270fa8d96,remove __mro__ check in is_array_container_type,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-29 17:49:38-05:00,18000,2021-10-29 18:35:10-05:00,18000,True,False,['__init__.py'],['1f8709cea4ba46932ec62f56169fca629058ce4d'],3,1,4,1,1.0,0.0,0.0
56b2f1ed2e879e923145742e54af0b9d3ba171bb,fix small typos,Alexandru Fikl,alexfikl@gmail.com,Alex Fikl,alexfikl@gmail.com,2021-11-02 14:28:04-05:00,18000,2021-11-02 15:10:44-05:00,18000,True,False,"['dataclass.py', 'compile.py']",['f6400a4d5f647a534bd923e879ead8a270fa8d96'],2,2,4,2,,,
fb26aaf08f4191c9eb0efd7aa27cfa809aa2376c,"use np.isscalar instead of isinstance(x, Number)",Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-11-06 19:50:02-05:00,18000,2021-11-06 23:49:28-05:00,18000,True,False,['fake_numpy.py'],['56b2f1ed2e879e923145742e54af0b9d3ba171bb'],7,4,11,1,0.0,0.0,0.5
4935713c7fad540e1c461297e9e9de60194533c4,fix scalars case in loopy_implemented_elwise_func,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-11-06 20:02:19-05:00,18000,2021-11-07 13:15:32-06:00,21600,True,False,"['fake_numpy.py', 'test_arraycontext.py']",['fb26aaf08f4191c9eb0efd7aa27cfa809aa2376c'],2,6,8,2,1.0,1.0,1.0
33884ae50cfb13c01e434e6d92483ca9e386cdf2,expand tests to actually check scalars,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-11-07 09:54:04-06:00,21600,2021-11-07 13:15:32-06:00,21600,True,False,"['fake_numpy.py', 'test_arraycontext.py']",['4935713c7fad540e1c461297e9e9de60194533c4'],3,20,23,2,0.0,1.0,0.38461538461538464
36fd05c6e140a3e8d8e09f18773162fd52656c27,Refactor PytatoActx.compile for usability by distributed,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2021-11-17 19:18:06-06:00,21600,2021-11-17 19:18:06-06:00,21600,True,False,['compile.py'],['33884ae50cfb13c01e434e6d92483ca9e386cdf2'],70,85,155,1,1.0,1.0,0.6666666666666666
64d639b5d87a3a81d50098c4c1cb09ca1b46c55a,make dict of named arrays only once,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-11-18 00:33:19-06:00,21600,2021-11-24 14:08:31-06:00,21600,True,False,['compile.py'],['35991c2a6a729c3432c32a29a43a6aabc6d699e5'],4,2,6,1,1.0,0.5,0.5
957be2f5fb234bd3bf6a15c83099ba7b1e5bcb25,PytatoPyOpenCLArrayContext: always invoke MPMS materializer,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-11-25 19:59:40-06:00,21600,2021-11-25 21:48:04-06:00,21600,True,False,['__init__.py'],['64d639b5d87a3a81d50098c4c1cb09ca1b46c55a'],0,4,4,1,1.0,1.0,1.0
c014adbbfe8b845c4281beb8795cbb3e96fdc95d,fix type mismatch in serialize_container argument,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2021-12-16 12:43:40-06:00,21600,2021-12-16 14:20:35-06:00,21600,True,False,['__init__.py'],['957be2f5fb234bd3bf6a15c83099ba7b1e5bcb25'],1,1,2,1,,,
8dab9bc9a1691f8bf4298c3646b2c6225c5e7239,"PytatoPyOpenCLArrayContext.compile: support returning arrays

`compile` only supported compiling callables that returned array
containers. Extends the logic to support compiling callables that simply
return thawed arrays.",Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-12-23 15:17:02-06:00,21600,2021-12-24 07:29:02-06:00,21600,True,False,['compile.py'],['c014adbbfe8b845c4281beb8795cbb3e96fdc95d'],19,79,98,1,0.125,0.96875,0.46875
4374e44c4ce8edd59d0839cb2e2bf405e32d89ec,test pt_actx.compile for callables returning thawed arrays,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-12-23 15:19:24-06:00,21600,2021-12-24 07:29:02-06:00,21600,True,False,['test_arraycontext.py'],['8dab9bc9a1691f8bf4298c3646b2c6225c5e7239'],0,10,10,1,1.0,1.0,1.0
e46e96790c3f12b3dc8cfb0cbed3ee5569d656da,pytato: Convert einsum arg_names into PrefixNamed tags,Andreas Kloeckner,inform@tiker.net,Kaushik Kulkarni,15399010+kaushikcfd@users.noreply.github.com,2021-12-24 15:02:30+01:00,-3600,2021-12-26 11:50:25-06:00,21600,True,False,['__init__.py'],['4374e44c4ce8edd59d0839cb2e2bf405e32d89ec'],8,22,30,1,1.0,1.0,0.8333333333333334
8428ca6072b3e21e329ef243054248fa450c9e4f,mypy cfg: set minimum python version to 3.8 to allow pytato to pass,Andreas Kloeckner,inform@tiker.net,Kaushik Kulkarni,15399010+kaushikcfd@users.noreply.github.com,2021-12-24 15:02:52+01:00,-3600,2021-12-26 11:50:25-06:00,21600,True,False,['setup.cfg'],['e46e96790c3f12b3dc8cfb0cbed3ee5569d656da'],1,2,3,1,,,
5c64c759b7b8a464149a05f1d78cc765302018b6,Mirgecom downstream CI: Use mpi4py from conda,Andreas Kloeckner,inform@tiker.net,Kaushik Kulkarni,15399010+kaushikcfd@users.noreply.github.com,2021-12-26 15:37:28+01:00,-3600,2021-12-26 11:50:25-06:00,21600,True,False,['ci.yml'],['8428ca6072b3e21e329ef243054248fa450c9e4f'],3,2,5,1,,,
1810b0e981ad7f47440a0404b1cdf9eb3ba5b5da,"Allow specifying leaf class in recursive map and map-reduce (#128)

* allow specifying leaf class in recursive map and map-reduce

* revert broken changes to decorators

* add leaf_class to decorators

* add tests for [multi]mapped_over_array_containers

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Matt Smith,mjsmith6@illinois.edu,GitHub,noreply@github.com,2021-12-27 10:41:33-06:00,21600,2021-12-27 16:41:33+00:00,0,True,False,"['traversal.py', 'test_arraycontext.py']",['5c64c759b7b8a464149a05f1d78cc765302018b6'],32,139,171,2,0.6375,1.0,0.6125
b2e28015e82902103a29095d53a1df099a2affc7,Tighten type information for from_numpy,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-01-11 11:09:27-06:00,21600,2022-01-11 12:52:27-06:00,21600,True,False,"['traversal.py', 'context.py', '__init__.py', '__init__.py']",['1810b0e981ad7f47440a0404b1cdf9eb3ba5b5da'],9,14,23,4,1.0,1.0,0.0
9eda169a731c4c56a2e8a0a66da7fbb2a9dff278,Disable fail-fast on downstream CI,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-01-11 11:12:50-06:00,21600,2022-01-11 12:52:27-06:00,21600,True,False,['ci.yml'],['b2e28015e82902103a29095d53a1df099a2affc7'],0,2,2,1,,,
427d25c7f015839dd910c9d406640f0bdba8d426,"Tighten type info on {rec_,}keyed_map_array_container",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-01-11 12:53:29-06:00,21600,2022-01-11 13:57:10-06:00,21600,True,False,['traversal.py'],['9eda169a731c4c56a2e8a0a66da7fbb2a9dff278'],5,9,14,1,0.25,1.0,1.0
8f0251480c4b0092c607ef26a61000fe4f363e80,Actually use _ScalarLike in from_numpy,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-01-12 12:22:41-06:00,21600,2022-01-12 16:06:29-06:00,21600,True,False,['traversal.py'],['427d25c7f015839dd910c9d406640f0bdba8d426'],4,3,7,1,,,1.0
e8c74a6c15e5868ff2829180429453281ea7f98c,avoid copy in flatten by not calling concatenate,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-01-12 19:29:58-06:00,21600,2022-01-12 20:06:16-06:00,21600,True,False,['traversal.py'],['8f0251480c4b0092c607ef26a61000fe4f363e80'],1,4,5,1,0.0,1.0,1.0
59b7956161f63cfbe331363b82e0533f3a5acbf3,"Add a leaf_class parameter to flatten (#142)

* add a leaf_class parameter to flatten

* add some docs to flatten for leaf_class",Alex Fikl,alexfikl@gmail.com,GitHub,noreply@github.com,2022-01-13 15:14:30-06:00,21600,2022-01-13 15:14:30-06:00,21600,True,False,"['traversal.py', 'run-pylint.sh', 'test_arraycontext.py']",['e8c74a6c15e5868ff2829180429453281ea7f98c'],10,75,85,3,0.36363636363636365,0.9636363636363636,0.41818181818181815
5218b2d6398d818f517d3a9856a9dabb6076dea0,"Remove BaseFakeNumpySpace's dependency on call_loopy (#88)

Closes https://github.com/inducer/arraycontext/issues/70.",Mit Kotak,53411468+mitkotak@users.noreply.github.com,GitHub,noreply@github.com,2022-01-16 15:20:19-06:00,21600,2022-01-16 15:20:19-06:00,21600,True,False,"['fake_numpy.py', 'fake_numpy.py', 'fake_numpy.py', 'loopy.py']",['59b7956161f63cfbe331363b82e0533f3a5acbf3'],56,97,153,4,0.14285714285714285,0.14285714285714285,0.0
3b02d0657225984f422e1f841e1a605901d797fe,add numpy support in each array context to the docs,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-01-15 16:53:49-06:00,21600,2022-01-16 16:57:38-06:00,21600,True,False,"['context.py', 'fake_numpy.py', 'fake_numpy.py', 'loopy.py', 'array_context.rst', 'make_numpy_coverage_table.py', 'numpy_coverage.rst']",['5218b2d6398d818f517d3a9856a9dabb6076dea0'],200,731,931,7,0.4962962962962963,1.0,0.9555555555555556
474f93a6f2eddc768c21748f18231d38299237bb,remove stray _get_scalar_func_loopy_program,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-01-16 16:28:48-06:00,21600,2022-01-16 18:03:05-06:00,21600,True,False,['fake_numpy.py'],['3b02d0657225984f422e1f841e1a605901d797fe'],38,1,39,1,0.8571428571428571,0.8571428571428571,1.0
c88858ecf51466ca6c4bd5167b58ff23da1fb7bc,use svg for pypi badge,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-01-16 17:03:51-06:00,21600,2022-01-16 22:44:19-06:00,21600,True,False,['README.rst'],['474f93a6f2eddc768c21748f18231d38299237bb'],1,1,2,1,,,
83a3da06daadb7b55c325d3a2931bc6cb1e63f42,fix typo in ndarray serialization,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-01-21 19:44:51-06:00,21600,2022-01-23 15:44:21-06:00,21600,True,False,['__init__.py'],['c88858ecf51466ca6c4bd5167b58ff23da1fb7bc'],1,1,2,1,,,
5964b91fe99fb641670821edd5004c1a7cf218dd,recursively add tags to all arrays in the container,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-11-01 13:45:35-05:00,18000,2022-02-15 11:25:33-06:00,21600,True,False,['__init__.py'],['83a3da06daadb7b55c325d3a2931bc6cb1e63f42'],1,3,4,1,1.0,1.0,1.0
8f77a2c06cc7c4aabc78fd93fd33253a19279a11,tag pt arrays' axes,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-31 23:35:08-05:00,18000,2022-02-15 11:25:33-06:00,21600,True,False,['__init__.py'],['5964b91fe99fb641670821edd5004c1a7cf218dd'],5,3,8,1,0.0,0.0,1.0
c8427b92f50027a2a85ff7ca3c2367659be55ceb,"define TaggableCLArray

Co-authored-by: Andreas Klöckner <inform@tiker.net>",Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-19 09:23:33-05:00,18000,2022-02-15 11:25:33-06:00,21600,True,False,"['__init__.py', 'taggable_cl_array.py', 'utils.py']",['8f77a2c06cc7c4aabc78fd93fd33253a19279a11'],15,212,227,3,0.6416666666666667,0.8,0.6
91a94fc3d1da882f41e3101b1dbb0fac601c9743,make the frozen type of PytatoPyOpenCLArrayContext to be TaggableCLArrays,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-19 09:26:34-05:00,18000,2022-02-15 11:25:33-06:00,21600,True,False,"['__init__.py', 'compile.py', 'utils.py']",['c8427b92f50027a2a85ff7ca3c2367659be55ceb'],31,134,165,3,0.0,0.3181818181818182,0.7840909090909091
3c4e3048e082107d59a037f400c37cd53b42054d,adds tests specific to PytatoArrayContexts,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2021-10-19 09:28:04-05:00,18000,2022-02-15 11:25:33-06:00,21600,True,False,['test_pytato_arraycontext.py'],['91a94fc3d1da882f41e3101b1dbb0fac601c9743'],0,106,106,1,1.0,1.0,1.0
b964a1b8757ad1d092a49abdd013689ae9b8f128,PyOpenCLArrayContext.make_einsum: use `tagged` tags for the output array as well,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2022-02-12 12:15:03-06:00,21600,2022-02-15 11:25:33-06:00,21600,True,False,['context.py'],['3c4e3048e082107d59a037f400c37cd53b42054d'],1,2,3,1,0.0,1.0,0.0
458e2eaf3eae1c2a839583b68c281a525ee6827e,Make get_container_context_recursively return actx or error,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-03-01 15:32:59-06:00,21600,2022-03-01 19:40:47-06:00,21600,True,False,"['__init__.py', '__init__.py', 'context.py', 'test_arraycontext.py']",['b964a1b8757ad1d092a49abdd013689ae9b8f128'],22,55,77,4,0.0,0.8636363636363636,1.0
6a6be6422c3e6c86c70bb159310f76c8c9dbd5ab,fix TaggableCLArray copy with queue,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-02-19 20:26:16-06:00,21600,2022-03-03 14:13:33-06:00,21600,True,False,"['taggable_cl_array.py', 'setup.py', 'test_arraycontext.py']",['458e2eaf3eae1c2a839583b68c281a525ee6827e'],47,118,165,3,0.0,0.34146341463414637,1.0
6b8f1344d50800aef97bae987c9a882d1dd7c3b8,"Add flat_size_and_dtype

Tweak docstring

Co-authored-by: Alex Fikl <alexfikl@gmail.com>",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-03-16 19:19:08-05:00,18000,2022-03-16 23:52:53-05:00,18000,True,False,"['__init__.py', 'traversal.py', 'context.py', 'test_arraycontext.py']",['6a6be6422c3e6c86c70bb159310f76c8c9dbd5ab'],9,51,60,4,0.6595744680851063,1.0,0.8297872340425532
03f527a67d6851a527c3d297c21b05b310fcc1c9,Stringify return type of flat_size_and_dtype to avoid py3.9+ type subscript,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-03-17 00:29:40-05:00,18000,2022-03-17 00:43:23-05:00,18000,True,False,['traversal.py'],['6b8f1344d50800aef97bae987c9a882d1dd7c3b8'],1,1,2,1,,,
eef28550964acb3a3bfd3e76342e1149674a16c5,"transform DAG before making it a placeholder

Co-authored-by: Andreas Kloeckner <inform@tiker.net>",Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2022-03-31 23:38:45-05:00,18000,2022-04-05 19:15:58-05:00,18000,True,False,['compile.py'],['03f527a67d6851a527c3d297c21b05b310fcc1c9'],5,48,53,1,0.14814814814814814,0.8888888888888888,0.7777777777777778
456d8933a2fa265cee30d5aaf34f903ddc1063eb,allow dataclass containers with only DeviceArrays,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-04-05 10:04:24-05:00,18000,2022-04-05 23:36:38-05:00,18000,True,False,"['__init__.py', 'dataclass.py', 'traversal.py', 'context.py', 'conf.py', 'setup.py', 'test_utils.py']",['eef28550964acb3a3bfd3e76342e1149674a16c5'],36,90,126,7,0.5,0.9375,1.0
b75ba4f60c601664edc495cc3606fc9f7e47866b,add typing to ArrayContext,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-04-05 10:04:24-05:00,18000,2022-04-07 11:11:17-05:00,18000,True,False,"['traversal.py', 'context.py', '__init__.py', 'taggable_cl_array.py', '__init__.py', 'setup.py']",['456d8933a2fa265cee30d5aaf34f903ddc1063eb'],45,80,125,6,0.958904109589041,1.0,0.5342465753424658
2a0006cefb85bf562762c25d22eecf118b5cffcb,with_container_arithmetic: Default cls_has_array_context_attr based on presence of attribute,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-04-13 00:28:07-05:00,18000,2022-04-19 19:30:05-05:00,18000,True,False,"['arithmetic.py', 'test_arraycontext.py']",['b75ba4f60c601664edc495cc3606fc9f7e47866b'],33,134,167,2,0.10869565217391304,0.10869565217391304,1.0
17dcc60de852f5ff84b81dee68968a80ff22aa69,support unions in dataclass_array_container,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-04-19 19:49:23-05:00,18000,2022-04-19 22:23:13-05:00,18000,True,False,"['dataclass.py', 'setup.py', 'test_arraycontext.py', 'test_utils.py']",['2a0006cefb85bf562762c25d22eecf118b5cffcb'],6,64,70,4,0.0,0.6153846153846154,1.0
32dc069ed886c67c0ec44902f2ffb7318ffbf313,implement _with_new_tags for taggable.Axis,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-04-30 23:06:00-05:00,18000,2022-05-01 22:38:20-05:00,18000,True,False,['taggable_cl_array.py'],['17dcc60de852f5ff84b81dee68968a80ff22aa69'],2,2,4,1,,,
cc274f61f25386ef149646197172b6383d9ffb00,adds cla.Array to PytatoPyOpenCLArrayContext.array_types,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2022-05-01 17:05:58-05:00,18000,2022-05-02 18:16:05-05:00,18000,True,False,['__init__.py'],['32dc069ed886c67c0ec44902f2ffb7318ffbf313'],2,4,6,1,0.5,1.0,0.0
cc795c573da6660c2c77dbad4cc5241379928cf3,tests to_numpy(...) on frozen arrays,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2022-05-01 14:42:03-05:00,18000,2022-05-02 18:16:05-05:00,18000,True,False,['test_arraycontext.py'],['cc274f61f25386ef149646197172b6383d9ffb00'],1,10,11,1,1.0,1.0,1.0
2157730229321bc1b4e071059da1aa7170dd8433,further clarifies the role of ArrayContext.aray_types,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2022-05-01 17:18:50-05:00,18000,2022-05-02 18:16:05-05:00,18000,True,False,['context.py'],['cc795c573da6660c2c77dbad4cc5241379928cf3'],2,4,6,1,,,
3b9583342a48ac671bc25ddd7c45783f95c7ac10,gitlab-ci: remove EXTRA_INSTALL exports,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-05-10 09:20:26-05:00,18000,2022-05-12 11:56:51-05:00,18000,True,False,['.gitlab-ci.yml'],['2157730229321bc1b4e071059da1aa7170dd8433'],7,0,7,1,,,
6293b32ba18f738aac0bf20c8d81435ed67059b6,clean up downstream tests,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-05-10 09:20:44-05:00,18000,2022-05-12 11:56:51-05:00,18000,True,False,"['ci.yml', '.gitlab-ci.yml']",['3b9583342a48ac671bc25ddd7c45783f95c7ac10'],29,18,47,2,,,
dff68e218d098c82a1211e14df53497f27da3f7a,"defines JAXArrayContext

Co-authored-by: Alexandru Fikl <alexfikl@gmail.com>",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,15399010+kaushikcfd@users.noreply.github.com,2021-07-18 22:31:21-05:00,18000,2022-05-12 17:41:31-05:00,18000,True,False,"['__init__.py', '__init__.py', 'fake_numpy.py', 'array_context.rst', 'conf.py']",['6293b32ba18f738aac0bf20c8d81435ed67059b6'],1,287,288,5,1.0,1.0,0.44166666666666665
a45dc7616395709ce29c1ecb8fb8662679e923c6,CI: adds jax to requirements,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,15399010+kaushikcfd@users.noreply.github.com,2021-07-18 22:45:35-05:00,18000,2022-05-12 17:41:31-05:00,18000,True,False,"['.gitlab-ci.yml', '.test-conda-env-py3.yml']",['dff68e218d098c82a1211e14df53497f27da3f7a'],0,4,4,2,,,
74f7cad976d5ced6d098ccc19e2ebad6fa21358b,test JAXArrayContext,Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,15399010+kaushikcfd@users.noreply.github.com,2021-09-19 15:52:35-05:00,18000,2022-05-12 17:41:31-05:00,18000,True,False,"['pytest.py', 'test_arraycontext.py']",['a45dc7616395709ce29c1ecb8fb8662679e923c6'],8,48,56,2,1.0,1.0,0.8
1cc7f5eaba8719bcfe582fca6bfc02e0f2c9c8e0,"Generalize Pytato Array Context to allow multiple targets

Also implements PytatoJAXTarget.

Co-authored-by: Alexandru Fikl <alexfikl@gmail.com>",Kaushik Kulkarni,kaushikcfd@gmail.com,Kaushik Kulkarni,15399010+kaushikcfd@users.noreply.github.com,2022-01-21 00:27:12-06:00,21600,2022-05-12 17:41:31-05:00,18000,True,False,"['__init__.py', '__init__.py', 'compile.py']",['74f7cad976d5ced6d098ccc19e2ebad6fa21358b'],116,441,557,3,0.8461538461538461,0.967032967032967,0.7692307692307693
47eafd547f086f35e016a9c083fdb9bf3a89d93d,Stop setting PY_EXE in Gitlab CI config,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2022-05-12 19:43:07-05:00,18000,2022-05-12 20:19:00-05:00,18000,True,False,['.gitlab-ci.yml'],['1cc7f5eaba8719bcfe582fca6bfc02e0f2c9c8e0'],4,0,4,1,,,
981a546703d129a6c4c521000bb07b2eb3fbf4c3,Fix Jax installation on Gitlab CI,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2022-05-12 19:42:27-05:00,18000,2022-05-12 20:19:29-05:00,18000,True,False,['.gitlab-ci.yml'],['47eafd547f086f35e016a9c083fdb9bf3a89d93d'],3,7,10,1,,,
8d7c872ea33f5e6f6251fc9e00c6944f8d15f3a9,"Drop xfail in  test_flatten_array_container

Needs https://github.com/inducer/loopy/pull/624.",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-05-19 18:45:20-05:00,18000,2022-05-20 01:09:25-05:00,18000,True,False,['test_arraycontext.py'],['981a546703d129a6c4c521000bb07b2eb3fbf4c3'],5,0,5,1,1.0,1.0,0.0
4305d758c4a13bc1c93748dc59c689554bb10a19,Deprecate passing unevaluated arrays to compiled functions,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-07 19:27:18-05:00,18000,2022-06-08 12:26:44-05:00,18000,True,False,['compile.py'],['8d7c872ea33f5e6f6251fc9e00c6944f8d15f3a9'],0,8,8,1,0.0,0.0,0.0
9542cce7c44572368d91f07e5738c5838e7c9512,Add folds in arraycontext.impl.pytato,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-07 19:16:09-05:00,18000,2022-06-08 18:39:54-05:00,18000,True,False,['__init__.py'],['4305d758c4a13bc1c93748dc59c689554bb10a19'],0,15,15,1,,,
ec72b093fece3105da74cce59f92fa6edd3666c3,Log function name in passes of actx.compile,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-07 19:24:03-05:00,18000,2022-06-08 18:39:54-05:00,18000,True,False,['compile.py'],['9542cce7c44572368d91f07e5738c5838e7c9512'],3,3,6,1,,,
799e2f19df4c462ba02e0910442102a96b63907f,"Pass name of function being compiled to pt.generate_{jax,loopy}",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-07 19:26:48-05:00,18000,2022-06-08 18:39:54-05:00,18000,True,False,['compile.py'],['ec72b093fece3105da74cce59f92fa6edd3666c3'],7,21,28,1,0.8333333333333334,1.0,1.0
1f7fff83ff5f05edcb6f570330eb2b38d5c8d595,Add NameHint tag,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-07 19:40:02-05:00,18000,2022-06-08 18:39:54-05:00,18000,True,False,"['context.py', 'metadata.py', 'other.rst']",['799e2f19df4c462ba02e0910442102a96b63907f'],1,34,35,3,1.0,1.0,0.42857142857142855
63ef939151064208b3db69a0c33ab8c8761741dc,Einsum array argument naming: Use NameHint,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-07 19:49:52-05:00,18000,2022-06-08 18:39:54-05:00,18000,True,False,['__init__.py'],['1f7fff83ff5f05edcb6f570330eb2b38d5c8d595'],8,8,16,1,,0.0,
ee0fa5de80cadc6443811090c5bc8ef65fdca9d2,Rewrite actx.NameHint to pytato.PrefixNamed when tagging,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-07 19:54:56-05:00,18000,2022-06-08 18:39:54-05:00,18000,True,False,['__init__.py'],['63ef939151064208b3db69a0c33ab8c8761741dc'],7,38,45,1,0.05,0.05,0.95
daa25742ae93572619666c5ec256b234944aa462,"restructure the way 'freeze' is implemented. Move the major bits to `ArrayContext.freeze`

Co-authored-by: Andreas Kloeckner <inform@tiker.net>",Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2022-05-01 12:58:57-05:00,18000,2022-06-09 14:23:21-05:00,18000,True,False,"['__init__.py', 'traversal.py', '__init__.py', '__init__.py', '__init__.py']",['ee0fa5de80cadc6443811090c5bc8ef65fdca9d2'],112,255,367,5,0.7433628318584071,0.168141592920354,1.0
8b627d735cdf3f4b2d134b654325272c67ac4402,to_numpy: thaw(freeze(...)) first,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2022-05-01 12:55:12-05:00,18000,2022-06-09 14:23:21-05:00,18000,True,False,['traversal.py'],['daa25742ae93572619666c5ec256b234944aa462'],1,4,5,1,1.0,1.0,1.0
b0d70e670fbcb542793a3f736101c8d527da6212,CI: modernize the freezes on DOFArrays,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2022-05-09 16:09:06-05:00,18000,2022-06-09 14:23:21-05:00,18000,True,False,['test_arraycontext.py'],['8b627d735cdf3f4b2d134b654325272c67ac4402'],17,9,26,1,0.0,0.0,0.0
13304f6801a4b1ed6e80e49e917c4f51f904924c,"Simplification: do not exit early out of freeze for 0-size arrays

Co-authored-by: Matthew Smith <mjsmith6@illinois.edu>",Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-09 14:31:53-05:00,18000,2022-06-09 20:45:21-05:00,18000,True,False,['__init__.py'],['b0d70e670fbcb542793a3f736101c8d527da6212'],11,1,12,1,1.0,1.0,0.0
37e142e7c5d3c608ea580b0861c1abaff3c2873e,"Array identifiers in pytato freezes: use ""_ary"", not ""_actx""",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-10 13:43:56-05:00,18000,2022-06-10 16:06:25-05:00,18000,True,False,['__init__.py'],['13304f6801a4b1ed6e80e49e917c4f51f904924c'],4,4,8,1,,,
5500b90574aebceed4433924f298fa4ff006fd72,Use NameHint/PrefixNamed to generate better kernel names in pytato freeze,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-07 19:57:24-05:00,18000,2022-06-10 16:06:25-05:00,18000,True,False,['__init__.py'],['37e142e7c5d3c608ea580b0861c1abaff3c2873e'],6,24,30,1,0.0,0.0,1.0
3eac02c9ae074e08db5ec74ed87785005c1ec1cf,Add comment to warn against early exits from freeze,Andreas Klöckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-10 12:42:11-05:00,18000,2022-06-10 17:07:07-05:00,18000,True,False,['__init__.py'],['5500b90574aebceed4433924f298fa4ff006fd72'],0,4,4,1,,,
efd2d687d00df4749c270dc835fdc839d1042b25,port deprecated uses of freeze and thaw,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-11 12:26:18+03:00,-10800,2022-06-11 13:27:22-05:00,18000,True,False,"['traversal.py', 'test_arraycontext.py', 'test_pytato_arraycontext.py']",['3eac02c9ae074e08db5ec74ed87785005c1ec1cf'],17,18,35,3,1.0,1.0,1.0
e91c52ab5eaf64490efc3765e64b2ebd06d95570,Make typing in ArrayContext more precise using TypeVars,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-10 16:23:29-05:00,18000,2022-06-11 17:13:55-05:00,18000,True,False,['context.py'],['efd2d687d00df4749c270dc835fdc839d1042b25'],4,22,26,1,,,
78ee5a1ae3d1f3afe1809023dc3377f4e98960ac,"Add tag_axes

Co-authored-by: Kaushik Kulkarni <kaushikcfd@gmail.com>",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-10 16:24:23-05:00,18000,2022-06-11 17:13:55-05:00,18000,True,False,"['__init__.py', 'context.py', 'test_arraycontext.py']",['e91c52ab5eaf64490efc3765e64b2ebd06d95570'],5,47,52,3,1.0,1.0,0.5384615384615384
15fa77887b9682acba9e8ed208b925f44baefa0d,Add compile_trace_callback to pytato array contexts,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-14 11:53:18-05:00,18000,2022-06-14 13:19:31-05:00,18000,True,False,"['__init__.py', 'compile.py']",['78ee5a1ae3d1f3afe1809023dc3377f4e98960ac'],29,119,148,2,0.0,0.9855072463768116,0.0
d1157d1aed6e9a2c713714c656843c260e7bfa48,"Add type annotationf for _freeze_prg_cache, _dag_transform_cache",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-14 12:09:09-05:00,18000,2022-06-14 13:19:31-05:00,18000,True,False,['__init__.py'],['15fa77887b9682acba9e8ed208b925f44baefa0d'],2,6,8,1,0.0,1.0,0.0
3f57b8beab187243a02b82593f8160f2418df261,"added check for not checking strides of 0-sized arrays

resolved flake8

Resolved typo

resolved typo

Fixed spaces

Fixed some more spaces

added comment

improved comment

resolved inducer comment on format",Mit Kotak,mitkotak0305@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-18 19:08:05-05:00,18000,2022-06-19 17:58:47-05:00,18000,True,False,['traversal.py'],['d1157d1aed6e9a2c713714c656843c260e7bfa48'],1,6,7,1,0.0,0.0,1.0
7f3fc736f5b0ffc855a44cc998f9eef45190ff0c,"Make name of doc build flag more global, explain",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-19 18:20:41-05:00,18000,2022-06-19 18:39:20-05:00,18000,True,False,"['__init__.py', 'conf.py']",['3f57b8beab187243a02b82593f8160f2418df261'],2,11,13,2,,,
80813d7a654889095c0a349299f1a033f9209f4f,"filter out unavailable pytest actx factories

* adds an is_available to check is the array context works
* do not create a factory per CL device, since that does not
quite work for non-CL array contexts",Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-15 17:15:33+03:00,-10800,2022-06-19 19:47:19-05:00,18000,True,False,"['pytest.py', 'test_pytato_arraycontext.py']",['7f3fc736f5b0ffc855a44cc998f9eef45190ff0c'],24,79,103,2,0.3404255319148936,0.6808510638297872,1.0
12e173f4c9c3714623ac04482260d84932cef84f,advertise jax support a bit more,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-26 15:51:54+03:00,-10800,2022-06-26 12:31:29-05:00,18000,True,False,"['README.rst', 'array_context.rst', 'index.rst']",['80813d7a654889095c0a349299f1a033f9209f4f'],2,12,14,3,,,
be1429c2d216100f2831fcaddc4752f867a06895,update numpy coverage,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-26 15:55:38+03:00,-10800,2022-06-26 12:31:29-05:00,18000,True,False,"['make_numpy_coverage_table.py', 'numpy_coverage.rst']",['12e173f4c9c3714623ac04482260d84932cef84f'],0,104,104,2,1.0,1.0,1.0
ff1cd0cfb4aefde053bd75a21a6b812790130439,rearrange jax.fake_numpy to match other contexts,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-26 16:07:40+03:00,-10800,2022-06-26 12:31:29-05:00,18000,True,False,['fake_numpy.py'],['be1429c2d216100f2831fcaddc4752f867a06895'],43,82,125,1,1.0,1.0,0.6666666666666666
b6866767d658063bc38d7e94d1593b2c545d8d6f,split dataclass_array_container for easier modification,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-27 10:20:07+03:00,-10800,2022-06-27 21:33:38-05:00,18000,True,False,['dataclass.py'],['ff1cd0cfb4aefde053bd75a21a6b812790130439'],13,56,69,1,0.13636363636363635,1.0,0.0
5706e44ae9a9fd19055825e41c4a8d7a14de1643,"Support empty containers in `array_equal` (#182)

* support empty containers in array_equal

* support empty containers in array_equal (jax)",Matt Smith,mjsmith6@illinois.edu,GitHub,noreply@github.com,2022-06-29 11:58:37-05:00,18000,2022-06-29 11:58:37-05:00,18000,True,False,"['fake_numpy.py', 'fake_numpy.py', 'fake_numpy.py', 'test_arraycontext.py']",['b6866767d658063bc38d7e94d1593b2c545d8d6f'],7,15,22,4,0.5,1.0,0.5
a3e68ac9b9620c85a23227fa34febb73d7081de4,Expose types for subpackages in package root,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-29 14:25:40-05:00,18000,2022-06-29 15:25:54-05:00,18000,True,False,['__init__.py'],['5706e44ae9a9fd19055825e41c4a8d7a14de1643'],2,7,9,1,,,
4d8096b8536e2b28ed6de48eb4033020ad7c4cc8,Bump Python compat target to 3.8,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-29 13:56:25-05:00,18000,2022-06-29 17:45:10-05:00,18000,True,False,"['ci.yml', 'setup.py']",['a3e68ac9b9620c85a23227fa34febb73d7081de4'],2,2,4,2,,,
0569eab090b8caf30a9e1a00acd6636b72f79620,"Clean up array and container type annotations

Co-authored-by:  Michael Campbell <mtcampbe@illinois.edu>",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-06-29 15:18:58-05:00,18000,2022-06-29 17:45:10-05:00,18000,True,False,"['__init__.py', '__init__.py', 'traversal.py', 'context.py', '__init__.py', '__init__.py', '__init__.py', 'compile.py', 'test_arraycontext.py']",['4d8096b8536e2b28ed6de48eb4033020ad7c4cc8'],155,245,400,9,0.5555555555555556,0.5555555555555556,0.8888888888888888
9109363d8df371260eb99efaa83d348d08fb4166,Add ArrayContext.freeze_thaw,Michael Campbell,mtcampbe@illinois.edu,Andreas Klöckner,inform@tiker.net,2022-06-28 15:16:57-05:00,18000,2022-06-29 17:45:10-05:00,18000,True,False,['context.py'],['0569eab090b8caf30a9e1a00acd6636b72f79620'],0,15,15,1,1.0,1.0,1.0
d757876d875afe07c430b9602cb25f8e397c54a0,add some helper functions to taggable_cl_array,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-24 20:58:46+03:00,-10800,2022-07-01 16:07:37-05:00,18000,True,False,"['__init__.py', 'taggable_cl_array.py']",['9109363d8df371260eb99efaa83d348d08fb4166'],54,86,140,2,0.25,0.0,0.0
71954a5611c89d75648452d592329605d4020db0,pyopencl: add more array container support,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-24 21:37:02+03:00,-10800,2022-07-01 16:07:37-05:00,18000,True,False,['__init__.py'],['d757876d875afe07c430b9602cb25f8e397c54a0'],72,103,175,1,0.0,0.0,0.5555555555555556
1051d6b6647c2600e771b3e5230da9d7e8e1b7f2,jax: add more array container support,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-25 10:55:50+03:00,-10800,2022-07-01 16:07:37-05:00,18000,True,False,"['__init__.py', 'fake_numpy.py']",['71954a5611c89d75648452d592329605d4020db0'],32,71,103,2,1.0,1.0,0.7272727272727273
70f251f20af68f3828e9e6953a3a596434fecff6,pytato: add more array container support,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-26 09:03:21+03:00,-10800,2022-07-01 16:07:37-05:00,18000,True,False,"['__init__.py', 'compile.py']",['1051d6b6647c2600e771b3e5230da9d7e8e1b7f2'],186,295,481,2,0.6621621621621622,0.47297297297297297,0.6891891891891891
cda94d4eed8d10e2d2c4f875beb206e02e2ecb75,deprecate to_numpy and from_numpy,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-26 10:30:06+03:00,-10800,2022-07-01 16:07:37-05:00,18000,True,False,"['traversal.py', 'context.py']",['70f251f20af68f3828e9e6953a3a596434fecff6'],40,30,70,2,0.0,0.0,0.0
5c9d57ab40e5c5089ddddf120a400283304db1f5,forward actx.empty_like in actx.np.empty_like,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-26 11:23:24+03:00,-10800,2022-07-01 16:07:37-05:00,18000,True,False,"['fake_numpy.py', 'fake_numpy.py', 'fake_numpy.py', 'fake_numpy.py']",['cda94d4eed8d10e2d2c4f875beb206e02e2ecb75'],34,40,74,4,1.0,1.0,1.0
9f05f723dfeba2f6a68f743b5069b519e8777e57,add container tests to test_array_context_np_like,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-29 09:28:16+03:00,-10800,2022-07-01 16:07:37-05:00,18000,True,False,"['fake_numpy.py', 'test_arraycontext.py']",['5c9d57ab40e5c5089ddddf120a400283304db1f5'],73,103,176,2,0.0,0.0,0.2857142857142857
fd4d4d8bff8b4f5ae0b3960c7c9b021066ff388e,"Look at, silence instances of bugbear B023",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-07-01 14:57:48-05:00,18000,2022-07-01 16:07:37-05:00,18000,True,False,['compile.py'],['9f05f723dfeba2f6a68f743b5069b519e8777e57'],4,4,8,1,,,
e47d0cf91c26c05432a1d672bc99fa37b3c49254,Fix fold markers in arraycontext.impl.pytato,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2022-08-05 18:06:37-05:00,18000,2022-08-05 18:06:37-05:00,18000,True,False,['__init__.py'],['fd4d4d8bff8b4f5ae0b3960c7c9b021066ff388e'],0,2,2,1,,,
9ab0849638de41f9197f301fc1400691248a49e2,Add folding sections in arraycontext.impl.pytato.compile,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2022-08-07 21:59:35-05:00,18000,2022-08-07 21:59:35-05:00,18000,True,False,['compile.py'],['e47d0cf91c26c05432a1d672bc99fa37b3c49254'],0,29,29,1,,,
b5feb0610f9ceb18fed75cd24042cdcd0efaf47d,PytatoPyOpenCLArrayContext.freeze: pass allocator to loopy exec,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-08-07 22:09:18-05:00,18000,2022-08-07 22:57:00-05:00,18000,True,False,['__init__.py'],['9ab0849638de41f9197f301fc1400691248a49e2'],1,3,4,1,0.0,0.0,1.0
9d7feaea8b84ced0710441db9c55bd84bfea67cc,Pass allocator when converting scalar args to dev buffers,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-08-09 19:20:06-05:00,18000,2022-08-09 20:05:48-05:00,18000,True,False,['compile.py'],['b5feb0610f9ceb18fed75cd24042cdcd0efaf47d'],1,2,3,1,0.0,0.0,0.0
1593a67b7f2a97e26d4f88fb70bf711e7682a395,AllocatorInterface renamed to AllocatorBase,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-09-10 13:41:39+03:00,-10800,2022-09-10 20:23:09-05:00,18000,True,False,['__init__.py'],['9d7feaea8b84ced0710441db9c55bd84bfea67cc'],1,1,2,1,,,
3c9aee6880da23629f32a57c87cd58a7dda4b337,"PytatoPyOpenCLArrayContext: use SVM allocator if available, limit arg size for GPUs (#189)

* LazilyPyOpenCLCompilingFunctionCaller: limit arg size for GPUs

* move limit

* also check for SVM presence

* get_target()

* memoize get_target

* UNDO BEFORE MERGE: use dev branches

* Hackety hack: SVM detection in actx constructor

* check whether passed allocator supports SVM

* undo loopy branch

* implement it for the base class

* subclass LoopyPyOpenCLTarget

* set actual limit

* undo pytato branch

* remove unused argument

* add type annotations

* add logging

* Refactor arg size passing to put less logic in the target

* flake8

* add a test

Co-authored-by: Andreas Kloeckner <inform@tiker.net>",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2022-09-19 17:44:05-05:00,18000,2022-09-19 22:44:05+00:00,0,True,False,"['__init__.py', 'compile.py', 'test_pytato_arraycontext.py']",['1593a67b7f2a97e26d4f88fb70bf711e7682a395'],3,118,121,3,0.3157894736842105,0.09210526315789473,0.47368421052631576
dc8109021d1c76016457fe91cfa203bd7e2f3cea,pytatoactx.compile: support multi-dimensional obj arrays,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2022-09-19 21:52:07-05:00,18000,2022-09-19 23:36:58-05:00,18000,True,False,"['compile.py', 'test_arraycontext.py']",['3c9aee6880da23629f32a57c87cd58a7dda4b337'],4,29,33,2,1.0,1.0,1.0
167ae7c6ee7c96118ed7308e3b9e74a8d199088f,"Move ArgSizeLimitingPytatoLoopyPyOpenCLTarget to pytato.utils, remove hard pytato dep",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-09-20 15:10:38-05:00,18000,2022-09-20 15:56:36-05:00,18000,True,False,"['__init__.py', 'utils.py']",['dc8109021d1c76016457fe91cfa203bd7e2f3cea'],17,27,44,2,0.0,0.0,1.0
9e75a457805c00e5fdfbbeaed2811c29d5aa79e7,PytatoPyOpenCLArrayContext: fix non-SVM allocator,Matthias Diener,mdiener@illinois.edu,Andreas Klöckner,inform@tiker.net,2022-09-21 13:22:18-05:00,18000,2022-09-22 21:18:16-05:00,18000,True,False,['__init__.py'],['167ae7c6ee7c96118ed7308e3b9e74a8d199088f'],1,1,2,1,,,
3a5aea7f9fc3e225d50846697164ca0b08ae60a1,test the various allocation options,Matthias Diener,mdiener@illinois.edu,Andreas Klöckner,inform@tiker.net,2022-09-22 11:17:19-05:00,18000,2022-09-22 21:18:16-05:00,18000,True,False,['test_pytato_arraycontext.py'],['9e75a457805c00e5fdfbbeaed2811c29d5aa79e7'],0,56,56,1,0.0975609756097561,0.0975609756097561,1.0
a3cd4c6869515ca48df788048572e9f7bb2500f2,make sure all options are handled,Matthias Diener,mdiener@illinois.edu,Andreas Klöckner,inform@tiker.net,2022-09-22 11:21:25-05:00,18000,2022-09-22 21:18:16-05:00,18000,True,False,['test_pytato_arraycontext.py'],['3a5aea7f9fc3e225d50846697164ca0b08ae60a1'],1,5,6,1,0.0,0.0,1.0
44dd57d1c44b16a5d60878b6702dc0a13f5362a1,skip SVM tests when no SVM support,Matthias Diener,mdiener@illinois.edu,Andreas Klöckner,inform@tiker.net,2022-09-22 13:27:29-05:00,18000,2022-09-22 21:18:16-05:00,18000,True,False,['test_pytato_arraycontext.py'],['a3cd4c6869515ca48df788048572e9f7bb2500f2'],0,6,6,1,0.0,0.0,1.0
c8eeceff0d25788345003db561cd973f5fd8bd49,use mock,Matthias Diener,mdiener@illinois.edu,Andreas Klöckner,inform@tiker.net,2022-09-22 16:51:38-05:00,18000,2022-09-22 21:18:16-05:00,18000,True,False,['test_pytato_arraycontext.py'],['44dd57d1c44b16a5d60878b6702dc0a13f5362a1'],14,8,22,1,0.5,0.5,0.0
4a87eaf5c4a8207eb1f3a7a908028ece81d3ab78,assert alloc type,Matthias Diener,mdiener@illinois.edu,Andreas Klöckner,inform@tiker.net,2022-09-22 16:58:02-05:00,18000,2022-09-22 21:18:16-05:00,18000,True,False,['test_pytato_arraycontext.py'],['c8eeceff0d25788345003db561cd973f5fd8bd49'],0,5,5,1,0.0,0.0,1.0
8b02d61c819f9217fc3ee8ee9b63351f2b1e7b1d,"PytatoPyOpenCLArrayContext: don't trust the arg limit reported by the GPU (#198)

* PytatoPyOpenCLArrayContext: don't trust the arg limit reported by the
GPU

Apparently, CUDA doesn't like it when argument sizes get close
to the reported limit.
Avoids PTX/JIT errors of the type
CUDA_ERROR_INVALID_IMAGE: device kernel image is invalid
CUDA_ERROR_FILE_NOT_FOUND: file not found

* restructure and clarify

* add warning, clarify comment

* add comment about device naming",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2022-09-26 00:20:39-05:00,18000,2022-09-26 05:20:39+00:00,0,True,False,['__init__.py'],['4a87eaf5c4a8207eb1f3a7a908028ece81d3ab78'],1,21,22,1,0.0,0.0,1.0
7a22d2db4dc543e27f9be436cdd8e7a37cfe04c4,Add Nvidia POCL CI on Gitlab,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2022-09-26 14:42:54-05:00,18000,2022-09-26 20:39:56-05:00,18000,True,False,['.gitlab-ci.yml'],['8b02d61c819f9217fc3ee8ee9b63351f2b1e7b1d'],0,17,17,1,,,
62f57268be3629459fa8f96e71dfec6769572be6,pytato.compile: do not assume that the callable will be named,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2022-09-27 13:53:30-05:00,18000,2022-09-27 15:01:57-05:00,18000,True,False,"['compile.py', 'test_arraycontext.py']",['7a22d2db4dc543e27f9be436cdd8e7a37cfe04c4'],1,15,16,2,1.0,1.0,1.0
958d28180c53e85072fb21249bea1113409fd4f2,deprecate empty / empty_like / zeros_like,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-06-29 20:10:46+03:00,-10800,2022-10-02 02:39:36-05:00,18000,True,False,"['context.py', 'fake_numpy.py', '__init__.py', 'fake_numpy.py', '__init__.py', 'fake_numpy.py', '__init__.py', 'fake_numpy.py']",['62f57268be3629459fa8f96e71dfec6769572be6'],26,108,134,8,1.0,1.0,0.8769230769230769
28048148917cde9d830bb82c8860fc0b91a67ae2,remove deprecated usage from tests,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-07-02 11:24:28+03:00,-10800,2022-10-02 02:39:36-05:00,18000,True,False,['test_arraycontext.py'],['958d28180c53e85072fb21249bea1113409fd4f2'],17,13,30,1,0.25,0.0,0.0
8b4e2f2c837437b31dd519808b937c1b8ff8735c,Add some design guidelines to docs,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-10-01 12:38:06-05:00,18000,2022-10-02 02:39:36-05:00,18000,True,False,['index.rst'],['28048148917cde9d830bb82c8860fc0b91a67ae2'],0,33,33,1,,,
2f236042121e20d580dd01d24729b6034d7d9e73,"Disable SVM on Nvidia CL when running pytest (#200)

* disable SVM on Nvidia CL when running pytest

* undo previous changes

* disable in pytest actx",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2022-10-03 15:46:25-05:00,18000,2022-10-03 20:46:25+00:00,0,True,False,['pytest.py'],['8b4e2f2c837437b31dd519808b937c1b8ff8735c'],1,26,27,1,1.0,1.0,1.0
c19ddb43b3eef9f71b18cabad93dc828c7f45e82,ensure ArrayContext is not hashable,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-10-14 10:04:57+03:00,-10800,2022-10-14 09:48:00-05:00,18000,True,False,['context.py'],['2f236042121e20d580dd01d24729b6034d7d9e73'],0,3,3,1,1.0,1.0,1.0
19322df01fc8e6284c262da6d1788f5093d6a0f0,Bump versions of various github actions components,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-10-14 18:34:07-05:00,18000,2022-10-14 19:40:51-05:00,18000,True,False,"['autopush.yml', 'ci.yml']",['c19ddb43b3eef9f71b18cabad93dc828c7f45e82'],12,12,24,2,,,
7ae1d156bccf9501ab82c3fc238e7e33b525671b,fix flipped types for to_numpy and from_numpy,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-10-26 10:28:03+03:00,-10800,2022-10-26 03:29:20-05:00,18000,True,False,['context.py'],['19322df01fc8e6284c262da6d1788f5093d6a0f0'],4,4,8,1,,,
09021c970388f5752589dec0d6cf9e770ea21913,use default_factory instead of default,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2022-10-31 18:48:07-05:00,18000,2022-10-31 19:34:58-05:00,18000,True,False,['test_utils.py'],['7ae1d156bccf9501ab82c3fc238e7e33b525671b'],1,2,3,1,0.0,1.0,1.0
21551458bbe5b7219706fd4446582339db38bf67,move pytest to extras-require,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-11-04 16:04:55+02:00,-7200,2022-11-06 03:02:26-06:00,21600,True,False,['setup.py'],['09021c970388f5752589dec0d6cf9e770ea21913'],1,3,4,1,0.0,1.0,1.0
76f4141700f99a9b08bfabf5943a030d29252b45,remove outdated install_requires,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-11-04 16:26:44+02:00,-7200,2022-11-06 03:02:26-06:00,21600,True,False,"['dataclass.py', 'context.py', 'setup.py']",['21551458bbe5b7219706fd4446582339db38bf67'],17,3,20,3,1.0,0.0,0.0
1828425da66bef6251739033139491bfe982d1ca,Typing fixes for mypy 0.990,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-11-13 16:50:36-06:00,21600,2022-11-13 20:16:22-06:00,21600,True,False,"['traversal.py', 'context.py', 'test_utils.py']",['76f4141700f99a9b08bfabf5943a030d29252b45'],4,4,8,3,,,
1199dc2e2218340b2506efe21f81899fed36c729,Install pytest for mypy CI,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-11-14 13:54:55-06:00,21600,2022-11-14 14:40:43-06:00,21600,True,False,"['ci.yml', '.gitlab-ci.yml']",['1828425da66bef6251739033139491bfe982d1ca'],2,2,4,2,,,
4c8b4314e5cb58312aaf8a84d73b46a647d7fbfe,"jax: change DeviceArray to jnp.ndarray (#211)

* limit JAX version due to CI errors

* rename DeviceArray -> Array

* import as JAXArray

* Revert ""limit JAX version due to CI errors""

This reverts commit 9b89d14c3ee8eee1f5ded8b9fc8eee31f4c3fb85.

* change to jax.numpy.ndarray",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2022-12-15 19:56:38+01:00,-3600,2022-12-15 12:56:38-06:00,21600,True,False,"['__init__.py', '__init__.py']",['1199dc2e2218340b2506efe21f81899fed36c729'],20,18,38,2,0.0,0.0,1.0
3473cc7dfcae2382749122bee79280e5793ded18,Fix swapped map/reduce_func in test_container_scalar_map,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2022-12-24 23:20:04-06:00,21600,2022-12-24 23:46:20-06:00,21600,True,False,['test_arraycontext.py'],['4c8b4314e5cb58312aaf8a84d73b46a647d7fbfe'],2,2,4,1,,,
812b5ead139ef8e6ed2e898beb64da345debf380,improve map_reduce tests,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2022-12-25 21:10:46+02:00,-7200,2022-12-25 18:14:57-06:00,21600,True,False,['test_arraycontext.py'],['3473cc7dfcae2382749122bee79280e5793ded18'],8,9,17,1,0.0,1.0,1.0
600c659d05ccc4d65ac8887858ba80a6d5305c44,enable and apply isort,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2023-01-11 17:23:00+02:00,-7200,2023-01-11 12:28:08-06:00,21600,True,False,"['__init__.py', '__init__.py', 'arithmetic.py', 'dataclass.py', 'traversal.py', 'context.py', 'fake_numpy.py', '__init__.py', 'fake_numpy.py', '__init__.py', 'fake_numpy.py', 'taggable_cl_array.py', '__init__.py', 'compile.py', 'fake_numpy.py', 'utils.py', 'loopy.py', 'metadata.py', 'pytest.py', 'setup.cfg', 'test_arraycontext.py', 'test_pytato_arraycontext.py', 'test_utils.py']",['812b5ead139ef8e6ed2e898beb64da345debf380'],206,205,411,23,1.0,0.0,0.0
6cfc2f9b0e1e76d3a77d4c0239e8f2f08fd357dc,placate flake8-comprehensions,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2023-01-11 17:24:59+02:00,-7200,2023-01-11 12:28:08-06:00,21600,True,False,['taggable_cl_array.py'],['600c659d05ccc4d65ac8887858ba80a6d5305c44'],11,13,24,1,1.0,1.0,1.0
50511fe79e3a23407ee362f6fa098945a6132dff,add a dumb container tree stringifier,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2023-01-11 17:11:30+02:00,-7200,2023-01-11 17:32:38-06:00,21600,True,False,"['__init__.py', 'traversal.py', 'test_utils.py']",['6cfc2f9b0e1e76d3a77d4c0239e8f2f08fd357dc'],2,77,79,3,0.41818181818181815,1.0,1.0
53e16634ffab956203f741b357376ff1b6790f0a,Fix reference to jax array type,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-02-19 15:46:22-06:00,21600,2023-02-19 16:32:24-06:00,21600,True,False,['__init__.py'],['50511fe79e3a23407ee362f6fa098945a6132dff'],1,1,2,1,,,
6f9616f2bfc09f0c6e4c915712427569f3a1f854,Avoid jax 0.4.6 on gitlab because of CI crashes,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2023-03-22 16:06:26-05:00,18000,2023-03-22 16:06:26-05:00,18000,True,False,['.gitlab-ci.yml'],['53e16634ffab956203f741b357376ff1b6790f0a'],0,3,3,1,,,
37709aca1356e8341a21eb915d4f2edd0250ba01,respect PrefixNamed when normalizing frozen expression,Kaushik Kulkarni,kgk2@illinois.edu,Andreas Klöckner,inform@tiker.net,2023-04-02 10:42:56-05:00,18000,2023-04-04 19:00:04-05:00,18000,True,False,['utils.py'],['6f9616f2bfc09f0c6e4c915712427569f3a1f854'],2,3,5,1,0.0,1.0,1.0
7199da2b840a46e73f5beb582a310ba115b04547,Fix signature of _normalize_pt_expr after pytato typing made precise,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-04-23 00:29:00-05:00,18000,2023-04-23 01:38:45-05:00,18000,True,False,['utils.py'],['37709aca1356e8341a21eb915d4f2edd0250ba01'],4,5,9,1,1.0,1.0,1.0
829f8929a82afd874f4f598341866e3ab0ec1dcd,docs: update intersphinx mapping from deprecated variant,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2023-04-25 19:01:16+03:00,-10800,2023-04-25 13:29:43-05:00,18000,True,False,['conf.py'],['7199da2b840a46e73f5beb582a310ba115b04547'],10,13,23,1,,,
85e4285d7aab463aa18d6152238103ec5d6eabbc,pytato: avoid codegen when possible,Kaushik Kulkarni,kgk2@illinois.edu,Andreas Klöckner,inform@tiker.net,2023-03-26 09:09:37-05:00,18000,2023-05-02 23:21:27-05:00,18000,True,False,['__init__.py'],['829f8929a82afd874f4f598341866e3ab0ec1dcd'],8,20,28,1,0.0,0.0,1.0
00e008bf7aea7a19327448f145bd7015cbff5d5a,copy axes and tags in zeros_like/full_like,Matthew Smith,mjsmith6@illinois.edu,Andreas Klöckner,inform@tiker.net,2023-05-05 09:11:13-07:00,25200,2023-05-05 12:58:32-05:00,18000,True,False,['fake_numpy.py'],['85e4285d7aab463aa18d6152238103ec5d6eabbc'],2,4,6,1,1.0,1.0,1.0
55fa4b099604beef7eb9ef4214b763aedf94f990,BaseFakeNumpyNamespace -> implement isnan,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2023-05-08 12:02:33-05:00,18000,2023-05-08 14:04:11-05:00,18000,True,False,"['fake_numpy.py', 'test_arraycontext.py']",['00e008bf7aea7a19327448f145bd7015cbff5d5a'],1,2,3,2,,,
b24260d1d5b28c19aad78188344411525542412a,register real/imag as pytato functions,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2023-02-02 11:25:44-06:00,21600,2023-05-09 23:24:42-05:00,18000,True,False,['fake_numpy.py'],['55fa4b099604beef7eb9ef4214b763aedf94f990'],4,1,5,1,0.0,0.0,0.0
66fd9ed4d99480b44770f48322d9db08e49df8df,homogenize dipatching into pytato routines by characterizing into unary vs multi-ary,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2023-05-26 10:09:40-05:00,18000,2023-05-26 17:35:42-05:00,18000,True,False,['fake_numpy.py'],['b24260d1d5b28c19aad78188344411525542412a'],36,11,47,1,0.0,0.0,1.0
9399fb7a90bfe3c5025b11f47cd016178ae487ac,Add logical_(and|not|or) to (BasePytato|PyOpenCL)ArrayContext,Kaushik Kulkarni,kaushikcfd@gmail.com,Andreas Klöckner,inform@tiker.net,2023-05-26 10:11:32-05:00,18000,2023-05-26 17:35:42-05:00,18000,True,False,"['fake_numpy.py', 'fake_numpy.py']",['66fd9ed4d99480b44770f48322d9db08e49df8df'],1,11,12,2,1.0,1.0,0.3333333333333333
b3d9bb57d07b68b4a56c03f86dc7e8913b5a505f,fix comparison on numpy 1.25,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2023-06-19 10:16:21+03:00,-10800,2023-06-19 14:46:37-05:00,18000,True,False,['test_arraycontext.py'],['9399fb7a90bfe3c5025b11f47cd016178ae487ac'],1,2,3,1,1.0,1.0,1.0
0c76b4dde92f1298b30e8cc58d7fe12d0bced846,Gitlab CI: switch 'pthread' pocl device to 'cpu',Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2023-06-25 21:33:54-05:00,18000,2023-06-25 21:33:54-05:00,18000,True,False,['.gitlab-ci.yml'],['b3d9bb57d07b68b4a56c03f86dc7e8913b5a505f'],2,2,4,1,,,
f76a976a98dbde2289b73ec5876cc57ec2d684bd,Conda Gitlab CI: Limit POCL to CPU,Andreas Kloeckner,inform@tiker.net,Andreas Kloeckner,inform@tiker.net,2023-06-25 21:34:05-05:00,18000,2023-06-25 21:34:05-05:00,18000,True,False,['.gitlab-ci.yml'],['0c76b4dde92f1298b30e8cc58d7fe12d0bced846'],0,2,2,1,,,
dbc087c864e1a358d9261fca7b9cd8c2af10087a,Drop inverse trig functions with C names from actx.np,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-07-20 21:17:27-05:00,18000,2023-07-20 23:00:29-05:00,18000,True,False,['loopy.py'],['f76a976a98dbde2289b73ec5876cc57ec2d684bd'],5,2,7,1,1.0,0.0,0.0
ae21a43f0cd6a80d83f36b00651f69a9b93e4170,"_get_scalar_func_loopy_program: specify that all arguments are GlobalArgs

Fixes https://github.com/inducer/meshmode/issues/237",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-07-20 21:18:12-05:00,18000,2023-07-20 23:00:29-05:00,18000,True,False,['loopy.py'],['dbc087c864e1a358d9261fca7b9cd8c2af10087a'],0,4,4,1,0.0,0.0,0.0
7ce3ea89db7649a77381197929c918b38f2a77c3,_get_scalar_func_loopy_program: Allow offsets in GlobalArgs,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-07-23 21:15:11-05:00,18000,2023-07-23 21:38:57-05:00,18000,True,False,['loopy.py'],['ae21a43f0cd6a80d83f36b00651f69a9b93e4170'],2,4,6,1,0.0,0.0,0.0
bead1e90320ed6ffa1c20fa3ed03823dbb0314bc,_dag_to_transformed_pytato_prg: use _DEFAULT_LOOPY_OPTIONS,Matthias Diener,mdiener@illinois.edu,Andreas Klöckner,inform@tiker.net,2023-07-24 18:15:10-05:00,18000,2023-07-25 11:00:57-05:00,18000,True,False,['compile.py'],['7ce3ea89db7649a77381197929c918b38f2a77c3'],4,2,6,1,1.0,0.0,1.0
3a464ecfc75c06b430930690847c30d6929ffc7c,assert that options have return_dict set,Matthias Diener,mdiener@illinois.edu,Andreas Klöckner,inform@tiker.net,2023-07-24 22:07:29-05:00,18000,2023-07-25 11:00:57-05:00,18000,True,False,"['__init__.py', 'compile.py']",['bead1e90320ed6ffa1c20fa3ed03823dbb0314bc'],2,8,10,2,0.0,0.5,0.5
90240d419bc86c0a0e90e375abcc7981a3aee620,Use loopy executor in eager call_loopy,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-07-26 19:48:35-05:00,18000,2023-07-26 20:45:08-05:00,18000,True,False,['__init__.py'],['3a464ecfc75c06b430930690847c30d6929ffc7c'],5,5,10,1,,,
c68e074abcf8cf800ecac600552aa53eec9a79f5,Use pytato's BoundProgram.bind_to_context on generated code in lazy,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-07-26 19:49:01-05:00,18000,2023-07-26 20:45:08-05:00,18000,True,False,"['__init__.py', 'compile.py']",['90240d419bc86c0a0e90e375abcc7981a3aee620'],9,12,21,2,0.0,0.0,1.0
9afc3055588bb2a91190f807546d9bcfdb3cdd4b,fix type comparison,Alexandru Fikl,alexfikl@gmail.com,Andreas Klöckner,inform@tiker.net,2023-07-30 17:23:40+03:00,-10800,2023-07-30 09:52:25-05:00,18000,True,False,"['traversal.py', 'fake_numpy.py', 'fake_numpy.py', 'fake_numpy.py']",['c68e074abcf8cf800ecac600552aa53eec9a79f5'],4,4,8,4,,,
16b87a0180b518fcde3545e083e6d731915aa0cc,Pass default_order=lp.auto in eager einsum,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-08-14 12:59:39-05:00,18000,2023-08-14 13:25:16-05:00,18000,True,False,['context.py'],['9afc3055588bb2a91190f807546d9bcfdb3cdd4b'],0,1,1,1,1.0,1.0,0.0
a62e26d3bc88440cc01fe45bb4c31c65dd7be8c0,Require pocl>=3.1 for improved SVM support,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-09-17 00:44:28-05:00,18000,2023-09-17 07:54:50-05:00,18000,True,False,['.test-conda-env-py3.yml'],['16b87a0180b518fcde3545e083e6d731915aa0cc'],1,2,3,1,,,
a5fe5b22ba167b03a16cc2e60542b384fb6adb8f,"replace pyrsistent.pmap with immutabledict (#248)

* replace pyrsistent.pmap with immutabledict

* change type annotation to 'Mapping'",Matthias Diener,mdiener@illinois.edu,GitHub,noreply@github.com,2023-10-08 23:15:28-05:00,18000,2023-10-08 23:15:28-05:00,18000,True,False,"['compile.py', 'setup.py']",['a62e26d3bc88440cc01fe45bb4c31c65dd7be8c0'],9,7,16,2,1.0,0.0,0.0
2b73fa286f3b68555bed24e3032544b9b6411912,Add __getitem__ to generic array ops,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-10-15 18:04:22-05:00,18000,2023-10-15 19:27:31-05:00,18000,True,False,['context.py'],['a5fe5b22ba167b03a16cc2e60542b384fb6adb8f'],0,4,4,1,1.0,1.0,1.0
3807768988eea7d31acb3861df17c9f381cfb026,Fix type annotations in unflatten,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-10-15 18:04:46-05:00,18000,2023-10-15 19:27:31-05:00,18000,True,False,['traversal.py'],['2b73fa286f3b68555bed24e3032544b9b6411912'],5,5,10,1,,,
5a1929d18329a9a818c2f29ee16e5ad856209b43,"Expose pytato.arange, pytato.full",Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-09-13 16:39:44-05:00,18000,2023-10-18 12:04:53-05:00,18000,True,False,['fake_numpy.py'],['3807768988eea7d31acb3861df17c9f381cfb026'],0,6,6,1,1.0,1.0,0.0
500573ac388c7a7ad60a4a1262a3a6088810cae1,Add arange to pyopencl actx,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-09-17 19:42:40-05:00,18000,2023-10-18 12:04:53-05:00,18000,True,False,['fake_numpy.py'],['5a1929d18329a9a818c2f29ee16e5ad856209b43'],1,3,4,1,1.0,1.0,0.0
e53fa90daead677662ff87ef64a91ede9aa9c362,Implement np.linspace in fake_numpy,Andreas Kloeckner,inform@tiker.net,Andreas Klöckner,inform@tiker.net,2023-09-13 16:40:17-05:00,18000,2023-10-18 12:04:53-05:00,18000,True,False,"['fake_numpy.py', 'fake_numpy.py', 'test_arraycontext.py']",['500573ac388c7a7ad60a4a1262a3a6088810cae1'],0,110,110,3,0.17307692307692307,0.17307692307692307,0.0
