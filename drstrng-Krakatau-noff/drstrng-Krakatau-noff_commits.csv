Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
d310da096bc116c33511e419041a1942539ea9a1,"Initial import

Signed-off-by: Robert Grosse <n210241048576@gmail.com>",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-10-19 21:33:08-04:00,14400,2012-10-19 21:33:08-04:00,14400,True,False,"['.gitattributes', '.gitignore', '__init__.py', '__init__.py', 'assembler.py', 'instructions.py', 'parse.py', 'tokenize.py', 'attributes_raw.py', 'binUnpacker.py', 'bytecode.py', 'classfile.py', 'constant_pool.py', 'environment.py', 'error.py', 'field.py', 'floatutil.py', 'graph_util.py', 'inference_verifier.py', '__init__.py', 'ast.py', 'ast2.py', 'boolize.py', 'javaclass.py', 'javamethod.py', 'preprocess.py', 'reserved.py', 'setree.py', 'stringescape.py', 'method.py', 'namegen.py', 'opnames.py', '__init__.py', 'blockmaker.py', '__init__.py', 'float_c.py', 'int_c.py', 'mixin.py', 'monad_c.py', 'obj_c.py', 'exceptionset.py', 'excepttypes.py', 'functionbase.py', 'graph.py', 'mixin.py', 'objtypes.py', 'printer.py', '__init__.py', 'base.py', 'exit.py', 'goto.py', 'ifcmp.py', 'onexception.py', 'placeholder.py', 'switch.py', '__init__.py', 'array.py', 'base.py', 'checkcast.py', 'convert.py', 'fieldaccess.py', 'fmath.py', 'imath.py', 'invoke.py', 'monitor.py', 'new.py', 'phi.py', 'placeholder.py', 'throw.py', 'truncate.py', 'tryreturn.py', 'ssa_types.py', 'subproc.py', 'variablegraph.py', 'stdcache.py', 'verifier_types.py', 'LICENSE.TXT', 'README.TXT', 'assemble.py', 'decompile.py', 'test_decompiler.py', 'ArgumentTypes.test', 'ArrayTest.test', 'BoolizeTest.test', 'DoubleEdge.test', 'DualIf.test', 'NullInference.test', 'OddsAndEnds.test', 'SkipJSR.test', 'Switch.test', 'Synchronized.test', 'ArgumentTypes.class', 'ArrayTest.class', 'BoolizeTest.class', 'DoubleEdge.class', 'DualIf.class', 'NullInference.class', 'OddsAndEnds.class', 'SkipJSR.class', 'Switch.class', 'Synchronized.class', 'floattest.class', 'splitnew.class', 'virtual.class', 'whilesize.class', 'floattest.test', 'ArgumentTypes.java', 'ArrayTest.java', 'BoolizeTest.java', 'DoubleEdge.j', 'DualIf.j', 'NullInference.java', 'OddsAndEnds.java', 'SkipJSR.j', 'Switch.java', 'Synchronized.java', 'floattest.java', 'ifloop.java', 'splitnew.java', 'virtual.java', 'whilesize.java', 'splitnew.test', 'whilesize.test']",[],0,9684,9684,123,0.4741815727303409,0.44363820452244346,0.6328045899426257
0d777b0760d7bd56dc8cce78b15e0a07dc83b9e3,Fix __init__.py attribute error and various code cleanups,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-10-20 01:03:15-04:00,14400,2012-10-20 01:03:15-04:00,14400,True,False,"['__init__.py', 'tokenize.py', 'constant_pool.py', 'floatutil.py', 'inference_verifier.py']",['d310da096bc116c33511e419041a1942539ea9a1'],46,8,54,5,0.0,0.0,0.0
86b8a2073cb7838f9fbac42958ca3148bdeb22e1,Constant propagation over bitwise operations,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-10-22 15:24:56-04:00,14400,2012-10-22 15:24:56-04:00,14400,True,False,['imath.py'],['0d777b0760d7bd56dc8cce78b15e0a07dc83b9e3'],106,143,249,1,1.0,1.0,0.34615384615384615
ddcdd1c2fe9c0453c7856f6ba181cb745e9290f1,Improve bitwise propagation,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-10-22 17:43:41-04:00,14400,2012-10-22 17:43:41-04:00,14400,True,False,['imath.py'],['86b8a2073cb7838f9fbac42958ca3148bdeb22e1'],9,22,31,1,1.0,1.0,0.0
f36db5f7d62f3b724548c1962f0bc63012ee3820,Update readme,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-10-23 23:37:27-04:00,14400,2012-10-23 23:37:27-04:00,14400,True,False,['README.TXT'],['ddcdd1c2fe9c0453c7856f6ba181cb745e9290f1'],8,8,16,1,,,
d9afb70f1ae28b5e4ecbf38cb3054184a4284f8f,Fix spurious this declarations,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-10-24 01:05:33-04:00,14400,2012-10-24 01:05:33-04:00,14400,True,False,['javamethod.py'],['f36db5f7d62f3b724548c1962f0bc63012ee3820'],13,13,26,1,0.0,0.0,0.0
8876d184b26bd435d85a559df294bef14fd0140a,"Oops, forgot a line",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-10-24 01:27:43-04:00,14400,2012-10-24 01:27:43-04:00,14400,True,False,['javamethod.py'],['d9afb70f1ae28b5e4ecbf38cb3054184a4284f8f'],1,1,2,1,,,
a944e3c5a80610876a9162f86a5d7a45d921268e,Improve break/continue removal,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-10-24 17:08:22-04:00,14400,2012-10-24 17:08:22-04:00,14400,True,False,"['ast.py', 'javamethod.py']",['8876d184b26bd435d85a559df294bef14fd0140a'],29,47,76,2,0.7333333333333333,0.6666666666666666,0.2
42e49ddbb6bb6eb15a4c50975f31b04b479d0b65,Finish backwards compatibility with Jasmin,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-10-26 17:04:31-04:00,14400,2012-10-26 17:04:31-04:00,14400,True,False,"['assembler.py', 'parse.py', 'tokenize.py', 'README.TXT', 'assemble.py']",['a944e3c5a80610876a9162f86a5d7a45d921268e'],45,106,151,5,0.17647058823529413,0.17647058823529413,0.17647058823529413
329f880c9ceece539c193107452c8c4399fb626c,minor cleanup,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-15 10:38:26-05:00,18000,2012-11-15 10:38:26-05:00,18000,True,False,"['classfile.py', 'field.py', 'method.py', 'printer.py']",['42e49ddbb6bb6eb15a4c50975f31b04b479d0b65'],10,4,14,4,0.0,0.0,0.0
df6954e8139736d860569a43714e597a3ccff254,Add Unicode test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-15 11:03:40-05:00,18000,2012-11-15 11:03:40-05:00,18000,True,False,"['UnicodeTest.test', 'UnicodeTest.class', 'UnicodeTest.java']",['329f880c9ceece539c193107452c8c4399fb626c'],0,8,8,3,1.0,1.0,1.0
7e239720216c9cc7f25090d992938c9779be8a58,Cleanup constant pool and add unicode support,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-15 18:18:52-05:00,18000,2012-11-15 18:18:52-05:00,18000,True,False,"['constant_pool.py', 'test_decompiler.py']",['df6954e8139736d860569a43714e597a3ccff254'],60,38,98,2,0.0,0.0,0.5263157894736842
be05bfcf34a3b904982c5f12b43732738e6ef2aa,Improve assembler constant reference and string literal support,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-19 13:19:22-05:00,18000,2012-11-19 13:19:22-05:00,18000,True,False,"['parse.py', 'tokenize.py']",['7e239720216c9cc7f25090d992938c9779be8a58'],28,53,81,2,0.0,1.0,1.0
2c9de16fe781df9aaa30c3f429e97dc1f81f0a18,Allow cp ref as ConstantValue in assembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-19 13:27:15-05:00,18000,2012-11-19 13:27:15-05:00,18000,True,False,['parse.py'],['be05bfcf34a3b904982c5f12b43732738e6ef2aa'],6,9,15,1,0.0,0.0,0.0
77f1a09723e6ae4e5b1b47bd379822810616dde1,Improve assembler float parsing,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-19 17:08:31-05:00,18000,2012-11-19 17:08:31-05:00,18000,True,False,"['parse.py', 'tokenize.py']",['2c9de16fe781df9aaa30c3f429e97dc1f81f0a18'],25,24,49,2,0.0,0.0,0.0
726fa141665490d427e291899879b3a440cabb8a,Add disassembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-19 17:09:17-05:00,18000,2012-11-19 17:09:17-05:00,18000,True,False,"['disassembler.py', 'decompile.py']",['77f1a09723e6ae4e5b1b47bd379822810616dde1'],5,193,198,2,0.3402777777777778,0.25,0.7847222222222222
07c2df3dfc414a077a510048be7d6b9df4456a1b,Fix assembler handling of empty methods and throws clauses,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-19 17:36:04-05:00,18000,2012-11-19 17:36:04-05:00,18000,True,False,['assembler.py'],['726fa141665490d427e291899879b3a440cabb8a'],3,4,7,1,,,
bad0bad06d325c8293dc31b78d411f0660e0cd14,Prettify disassembly,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-19 18:36:04-05:00,18000,2012-11-19 18:36:04-05:00,18000,True,False,"['disassembler.py', 'tokenize.py']",['07c2df3dfc414a077a510048be7d6b9df4456a1b'],34,84,118,2,0.5483870967741935,1.0,0.0
384fef2b3ae93b6d13afeb176e41b29ce055a550,Fix bug when disassembling tableswitch,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-19 20:35:48-05:00,18000,2012-11-19 20:35:48-05:00,18000,True,False,"['disassembler.py', 'tokenize.py']",['bad0bad06d325c8293dc31b78d411f0660e0cd14'],11,11,22,2,0.0,0.0,1.0
d1afe1ff1b56e3cf08e7c78302dc4675b112535f,Fix minor bugs in disassembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-29 17:20:32-05:00,18000,2012-11-29 17:20:32-05:00,18000,True,False,"['disassembler.py', 'decompile.py']",['384fef2b3ae93b6d13afeb176e41b29ce055a550'],5,5,10,2,,,
17231f7623ade65b8d2c1d40a329c87264d0c6a1,Allow optional + in assembler literals,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-29 17:57:09-05:00,18000,2012-11-29 17:57:09-05:00,18000,True,False,['tokenize.py'],['d1afe1ff1b56e3cf08e7c78302dc4675b112535f'],3,3,6,1,,,
21309078c28374c5bf96e34ceec4a2e9cdbeb227,Improve SourceFile support in assembler/disassembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-29 18:05:44-05:00,18000,2012-11-29 18:05:44-05:00,18000,True,False,"['assembler.py', 'disassembler.py', 'parse.py']",['17231f7623ade65b8d2c1d40a329c87264d0c6a1'],4,10,14,3,0.0,0.0,1.0
24db22ceb1b206becffdbce87d047377a85d9e0e,Classfile version support in assembler/disassembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-29 18:18:05-05:00,18000,2012-11-29 18:18:05-05:00,18000,True,False,"['assembler.py', 'disassembler.py', 'parse.py', 'tokenize.py']",['21309078c28374c5bf96e34ceec4a2e9cdbeb227'],12,24,36,4,0.4,0.4,0.6
80bade391a42f49146faca90ae84ebd9a427d69c,Update documentation for disassembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-29 18:28:19-05:00,18000,2012-11-29 18:28:19-05:00,18000,True,False,['README.TXT'],['24db22ceb1b206becffdbce87d047377a85d9e0e'],3,23,26,1,,,
59493bf6be43aa70cf3ffa581b83c56734743416,Remove unused tests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2012-11-30 10:55:29-05:00,18000,2012-11-30 10:55:29-05:00,18000,True,False,"['virtual.class', 'ifloop.java', 'virtual.java']",['80bade391a42f49146faca90ae84ebd9a427d69c'],31,0,31,3,0.0,0.0,0.0
618e26b0e82ff0c0b501db454c479a8970995c95,Add support for pre 45.2 code attribute fields,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-09 11:11:46-05:00,18000,2013-01-09 11:11:46-05:00,18000,True,False,"['assembler.py', 'method.py', 'OldVersionTest.test', 'OldVersionTest.class', 'OldVersionTest.j']",['59493bf6be43aa70cf3ffa581b83c56734743416'],8,25,33,5,0.0,0.0,0.0
426f4a908dfc0d92abc76192b36dd1f8186efe21,Update copyright,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-11 16:18:03-05:00,18000,2013-01-11 16:18:03-05:00,18000,True,False,"['assemble.py', 'decompile.py']",['618e26b0e82ff0c0b501db454c479a8970995c95'],2,2,4,2,,,
244df3072c2643b57fc0419cbe6c7889956a3a5e,Move verifier into submodule,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-11 16:46:20-05:00,18000,2013-01-16 19:28:34-05:00,18000,True,False,"['javaclass.py', 'javamethod.py', 'blockmaker.py', 'graph.py', 'objtypes.py', 'fieldaccess.py', 'invoke.py', 'ssa_types.py', '__init__.py', 'descriptors.py', 'inference_verifier.py', 'verifier_types.py', 'decompile.py']",['426f4a908dfc0d92abc76192b36dd1f8186efe21'],77,85,162,13,,,
4732dbab478b427327a2dbaa6fd34bdf6a831fcd,Minor cleanup,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-15 19:38:28-05:00,18000,2013-01-16 19:28:49-05:00,18000,True,False,"['graph.py', 'objtypes.py', 'ssa_types.py']",['244df3072c2643b57fc0419cbe6c7889956a3a5e'],15,9,24,3,0.5,0.5,0.5
c9a4ae9114e2ddb3db543038593d4dfda1ce1181,Remove unused constant pool functions,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-17 00:44:22-05:00,18000,2013-01-17 00:44:22-05:00,18000,True,False,['constant_pool.py'],['4732dbab478b427327a2dbaa6fd34bdf6a831fcd'],45,17,62,1,0.0,0.0,0.0
10421c88a52bc1aa117924442ada2514f3b4efad,Allow explict constant pool references in assembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-17 10:34:40-05:00,18000,2013-01-17 10:34:40-05:00,18000,True,False,"['assembler.py', 'constant_pool.py']",['c9a4ae9114e2ddb3db543038593d4dfda1ce1181'],27,91,118,2,0.5416666666666666,0.3541666666666667,0.5208333333333334
73205e67f059d8bfca2278cd413dc11624efcf8c,Make tests compatible with Java 7 compiler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-27 22:48:21-05:00,18000,2013-01-27 22:48:21-05:00,18000,True,False,['test_decompiler.py'],['10421c88a52bc1aa117924442ada2514f3b4efad'],1,1,2,1,,,
8ebb5207aeaa6418894a97249d47e2eb4bac328e,"Assembler support for invokedynamic

Note: Also has a breaking change in assembler syntax. Constant pool types
are now capitalized. Also fixes invokeinterface's padding byte.",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-28 01:39:11-05:00,18000,2013-01-28 01:43:23-05:00,18000,True,False,"['assembler.py', 'parse.py', 'tokenize.py', 'constant_pool.py']",['73205e67f059d8bfca2278cd413dc11624efcf8c'],12,75,87,4,0.75,0.75,0.6
acd0e90d94e719acee3a1fe7aff471b9af52bedd,Update disassembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-28 12:46:19-05:00,18000,2013-01-28 12:46:19-05:00,18000,True,False,"['codes.py', 'disassembler.py', 'parse.py', 'tokenize.py']",['8ebb5207aeaa6418894a97249d47e2eb4bac328e'],53,125,178,4,0.6,1.0,0.8444444444444444
d7850151cc2f6c6c987498535b257fb5e8a7e8b9,Remove unused function,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-28 12:52:26-05:00,18000,2013-01-28 12:52:26-05:00,18000,True,False,['constant_pool.py'],['acd0e90d94e719acee3a1fe7aff471b9af52bedd'],18,4,22,1,1.0,1.0,0.0
c21273f66dd0f9133a4b7b1e5ef6271dd1cc62bb,Assembler support for StackMapTable,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-30 21:04:40-05:00,18000,2013-01-30 21:04:40-05:00,18000,True,False,"['assembler.py', 'codes.py', 'disassembler.py', 'parse.py', 'tokenize.py']",['d7850151cc2f6c6c987498535b257fb5e8a7e8b9'],49,172,221,5,0.0425531914893617,0.0425531914893617,0.0
5194900d3b354ca31750cf54f1e937247e0a84fe,Fix some bugs in assembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-30 22:04:29-05:00,18000,2013-01-30 22:04:29-05:00,18000,True,False,"['assembler.py', 'disassembler.py', 'parse.py', 'tokenize.py']",['c21273f66dd0f9133a4b7b1e5ef6271dd1cc62bb'],7,7,14,4,,,
97557291dd38afad9260b8f43d55a017bc9d9ba9,Add recursive option to scripts),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-01-30 22:13:56-05:00,18000,2013-01-30 22:13:56-05:00,18000,True,False,"['README.TXT', 'assemble.py', 'decompile.py']",['5194900d3b354ca31750cf54f1e937247e0a84fe'],23,46,69,3,,,
e1766fde2eded43ec6d7c630cfa4c6151420a0d6,Fix assembler bug and update readme,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-03 10:41:21-05:00,18000,2013-02-03 10:41:21-05:00,18000,True,False,"['assembler.py', 'README.TXT']",['97557291dd38afad9260b8f43d55a017bc9d9ba9'],3,5,8,2,0.0,0.0,0.0
9cc87e0172d42f749c9d4ec98dbe03160e144bdd,Prioritize ldc constant pool references,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-03 12:03:42-05:00,18000,2013-02-03 12:03:42-05:00,18000,True,False,"['assembler.py', 'README.TXT']",['e1766fde2eded43ec6d7c630cfa4c6151420a0d6'],8,67,75,2,0.3125,0.16666666666666666,0.9791666666666666
9c738d1ebe4b54042d2264eceb80a88be7d2fcd1,Fix handling of float constants,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-03 13:48:46-05:00,18000,2013-02-03 13:48:46-05:00,18000,True,False,"['assembler.py', 'disassembler.py', 'parse.py', 'classfile.py', 'constant_pool.py', 'blockmaker.py', 'graph.py', 'README.TXT']",['9cc87e0172d42f749c9d4ec98dbe03160e144bdd'],17,48,65,8,0.9285714285714286,0.8571428571428571,1.0
fad94e4db880100feb8e5c05af5fd0a84cd6f270,Allow use of most keywords as inline words,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-03 23:50:59-05:00,18000,2013-02-03 23:50:59-05:00,18000,True,False,"['disassembler.py', 'parse.py', 'README.TXT']",['9c738d1ebe4b54042d2264eceb80a88be7d2fcd1'],17,20,37,3,,,
438a384e3efac2248ff075f3e1cd52ba65688af2,Add assembler examples,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-07 10:36:04-05:00,18000,2013-02-07 10:36:04-05:00,18000,True,False,"['exceptions.j', 'hello.j', 'input.j', 'invokedynamic.j', 'loop.j', 'minimal.j']",['fad94e4db880100feb8e5c05af5fd0a84cd6f270'],0,156,156,6,,,
e2258fdc8b6de0315a1420302303f226deb37894,Disassembler no longer loads extra classes,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-19 22:19:54-05:00,18000,2013-02-19 22:19:54-05:00,18000,True,False,"['classfile.py', 'environment.py', 'decompile.py']",['438a384e3efac2248ff075f3e1cd52ba65688af2'],15,15,30,3,0.0,0.0,0.0
b7be6148a85a91dd6d80f048b1547bb406dc7e6b,Improve top level scripts,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-20 11:19:22-05:00,18000,2013-02-20 11:19:22-05:00,18000,True,False,"['classfile.py', 'environment.py', 'script_util.py', 'README.TXT', 'assemble.py', 'decompile.py', 'disassemble.py']",['e2258fdc8b6de0315a1420302303f226deb37894'],101,139,240,7,1.0,1.0,1.0
cc3b42260d051336b65eec5a8a22ecc3c4ce3336,Decompiler add parentheses where necessary,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-21 13:30:29-05:00,18000,2013-02-21 13:30:29-05:00,18000,True,False,['ast.py'],['b7be6148a85a91dd6d80f048b1547bb406dc7e6b'],6,90,96,1,1.0,0.8048780487804879,0.975609756097561
c1e4b59dd61a32bd7bf28db2e378d01b9fd12391,Fix impossible jump pruning and add test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-21 15:46:02-05:00,18000,2013-02-21 15:46:02-05:00,18000,True,False,"['graph.py', 'printer.py', 'base.py', 'goto.py', 'ifcmp.py', 'onexception.py', 'switch.py', 'decompile.py', 'OddsAndEnds.class', 'ArgumentTypes.java', 'OddsAndEnds.java']",['cc3b42260d051336b65eec5a8a22ecc3c4ce3336'],134,143,277,11,1.0,0.0,1.0
749835ccd4ac79c02cb2121c0e6a96f47cc8fd5d,Fix spelling and add comments,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-25 00:51:26-05:00,18000,2013-02-25 00:51:26-05:00,18000,True,False,"['javamethod.py', '__init__.py', 'float_c.py', 'int_c.py', 'obj_c.py', 'graph.py', 'ifcmp.py', 'onexception.py', 'switch.py', 'variablegraph.py', 'decompile.py']",['c1e4b59dd61a32bd7bf28db2e378d01b9fd12391'],24,18,42,11,,,
b448a2a1f988946bef2882f691be6571519375cd,Limited constant propagation for shifts,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-25 22:42:42-05:00,18000,2013-02-25 22:42:42-05:00,18000,True,False,"['graph.py', 'imath.py']",['749835ccd4ac79c02cb2121c0e6a96f47cc8fd5d'],3,60,63,2,0.627906976744186,0.627906976744186,0.0
4ea4be2b149bee684b89ceb498724a15978d4632,Fix bug in verifier,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-26 10:30:14-05:00,18000,2013-02-26 10:30:14-05:00,18000,True,False,['verifier_types.py'],['b448a2a1f988946bef2882f691be6571519375cd'],2,2,4,1,,,
1c39c3ed5f525a213fed9260204b1f443febeb0f,Allow conditional initialization of objects,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-28 00:42:43-05:00,18000,2013-02-28 00:47:23-05:00,18000,True,False,"['ast.py', 'javamethod.py', 'DuplicateInit.test', 'DuplicateInit.class', 'DuplicateInit.j']",['4ea4be2b149bee684b89ceb498724a15978d4632'],3,171,174,5,0.09722222222222222,0.027777777777777776,0.06944444444444445
7408cc04b7cbaf908a25d70a3f7144ecbd779419,Remove unused old version of code,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-02-28 00:42:43-05:00,18000,2013-02-28 00:55:55-05:00,18000,True,False,['javamethod.py'],['1c39c3ed5f525a213fed9260204b1f443febeb0f'],50,0,50,1,1.0,1.0,1.0
c82b535fd243d7b9906a8effa941bb787f8bfec7,Remove debug line,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-03-19 18:03:18-04:00,14400,2013-03-19 18:03:18-04:00,14400,True,False,['graph.py'],['7408cc04b7cbaf908a25d70a3f7144ecbd779419'],4,0,4,1,,,
045fed2f5243b822d3f8635625d33ce42b812975,Allow multiple classes in single assembly file,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-03-23 11:11:53-04:00,14400,2013-03-23 11:11:53-04:00,14400,True,False,"['disassembler.py', 'parse.py', 'tokenize.py', 'assemble.py']",['c82b535fd243d7b9906a8effa941bb787f8bfec7'],19,33,52,4,1.0,1.0,0.5
b019e5bb583a7836d3d6bb7a4f61473174efe452,Delint the code,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-03-26 14:42:54-04:00,14400,2013-03-26 15:24:58-04:00,14400,True,False,"['assembler.py', 'disassembler.py', 'parse.py', 'attributes_raw.py', 'bytecode.py', 'classfile.py', 'environment.py', 'field.py', 'floatutil.py', 'ast.py', 'ast2.py', 'boolize.py', 'javaclass.py', 'javamethod.py', 'preprocess.py', 'method.py', 'namegen.py', 'blockmaker.py', 'float_c.py', 'int_c.py', 'obj_c.py', 'graph.py', 'printer.py', '__init__.py', 'base.py', 'exit.py', 'goto.py', 'ifcmp.py', 'onexception.py', 'placeholder.py', 'switch.py', '__init__.py', 'array.py', 'base.py', 'checkcast.py', 'convert.py', 'fieldaccess.py', 'fmath.py', 'imath.py', 'invoke.py', 'monitor.py', 'new.py', 'phi.py', 'placeholder.py', 'throw.py', 'truncate.py', 'tryreturn.py', 'ssa_types.py', 'subproc.py', 'variablegraph.py', 'stdcache.py', 'descriptors.py', 'pylintrc']",['045fed2f5243b822d3f8635625d33ce42b812975'],1380,1644,3024,53,1.0,0.0,1.0
a6521ab656da35ed0dd5ddb30e3b5aeaef089aeb,Add runtime annotation support to assembler/disassembler and fix bugs,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-03-29 02:34:54-04:00,14400,2013-03-29 02:34:54-04:00,14400,True,False,"['assembler.py', 'codes.py', 'disassembler.py', 'parse.py', 'tokenize.py', 'attributes_raw.py', 'classfile.py', 'javaclass.py', 'method.py', 'assemble.py', 'disassemble.py']",['b019e5bb583a7836d3d6bb7a4f61473174efe452'],77,274,351,11,0.5080645161290323,0.4032258064516129,0.29838709677419356
fcc1e60dd8c49428ae0e0d8cde55b60799a87c24,Fix bugs in disassembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-03-29 10:36:33-04:00,14400,2013-03-29 10:36:33-04:00,14400,True,False,['disassembler.py'],['a6521ab656da35ed0dd5ddb30e3b5aeaef089aeb'],7,7,14,1,,,
cca8021915b6393271590e88d2b74e2b6a319171,Add attribute support and assembler bug fixes,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-03-30 02:28:43-04:00,14400,2013-03-30 02:28:43-04:00,14400,True,False,"['assembler.py', 'disassembler.py', 'parse.py', 'tokenize.py', 'classfile.py', 'field.py', 'method.py', 'README.TXT']",['fcc1e60dd8c49428ae0e0d8cde55b60799a87c24'],135,293,428,8,0.4444444444444444,0.32222222222222224,0.36666666666666664
6fb55f9b7b6f563cbf3d4005d0265f984b21af20,More bug fixes,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-03-30 16:50:54-04:00,14400,2013-03-30 16:50:54-04:00,14400,True,False,"['assembler.py', 'disassembler.py', 'parse.py', 'tokenize.py']",['cca8021915b6393271590e88d2b74e2b6a319171'],50,60,110,4,0.0,0.0,0.0
a76aa99fe66c1caf96a49dacbbad9a6c6af922ea,Fix bug when assembling tableswitch instructions,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-01 23:19:51-04:00,14400,2013-04-01 23:19:51-04:00,14400,True,False,['parse.py'],['6fb55f9b7b6f563cbf3d4005d0265f984b21af20'],1,1,2,1,,,
98ecb157b071ff72e7036ab6fdae7159b4cb007a,Fix decompiler bug,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-02 12:25:47-04:00,14400,2013-04-02 12:25:47-04:00,14400,True,False,['javamethod.py'],['a76aa99fe66c1caf96a49dacbbad9a6c6af922ea'],2,10,12,1,0.0,0.0,0.0
102878d9b9a10eed4aef33ff3679620fdec0a2c2,Assembler support for invalid InnerClass lengths.,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-02 13:30:06-04:00,14400,2013-04-02 13:30:06-04:00,14400,True,False,"['assembler.py', 'parse.py', 'tokenize.py', 'assemble.py']",['98ecb157b071ff72e7036ab6fdae7159b4cb007a'],14,38,52,4,0.0,0.2,0.2
e4b2b6593234b1e92f338987a2b8ddef2579039a,Decompiler and disassembler support for bad InnerClass attributes),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-02 15:28:51-04:00,14400,2013-04-02 15:28:51-04:00,14400,True,False,"['disassembler.py', 'attributes_raw.py', 'binUnpacker.py', 'classfile.py', 'BadInnerTest.test', 'BadInnerTest.class', 'BadInnerTest.j']",['102878d9b9a10eed4aef33ff3679620fdec0a2c2'],23,66,89,7,1.0,0.8,0.6666666666666666
563a59a2959d65613aacc7efa23c49f4e3f49375,Contraint propagation for i2l and l2i instructions,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-02 20:32:59-04:00,14400,2013-04-02 20:32:59-04:00,14400,True,False,"['blockmaker.py', 'convert.py']",['e4b2b6593234b1e92f338987a2b8ddef2579039a'],4,30,34,2,1.0,1.0,0.9230769230769231
bdef95e6be3e452907ccc86fdf3e867121f0f33b,Add fromValues to FloatConstraint,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-04 15:04:24-04:00,14400,2013-04-04 15:04:24-04:00,14400,True,False,"['floatutil.py', 'float_c.py']",['563a59a2959d65613aacc7efa23c49f4e3f49375'],1,16,17,2,1.0,1.0,1.0
e774936eb204dc6c573259a76c30336050f683ef,More assembler/disassembler bugfixes,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-05 12:30:27-04:00,14400,2013-04-05 12:30:27-04:00,14400,True,False,"['disassembler.py', 'parse.py']",['bdef95e6be3e452907ccc86fdf3e867121f0f33b'],7,11,18,2,1.0,1.0,1.0
ae82a13424ad4877f059a27777cee64d88458519,Temporary fix for new-<init> merging.,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-05 21:14:20-04:00,14400,2013-04-05 21:14:20-04:00,14400,True,False,"['boolize.py', 'javamethod.py']",['e774936eb204dc6c573259a76c30336050f683ef'],5,10,15,2,0.0,0.0,0.0
f2b1975054da631ddb0c2f55515b47ff0b09b558,Fix decompiler bugs,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-06 15:11:20-04:00,14400,2013-04-06 15:11:20-04:00,14400,True,False,"['bytecode.py', 'ast.py', 'blockmaker.py', 'int_c.py', 'graph.py', 'bitwise_util.py', 'convert.py', 'imath.py', 'truncate.py', 'variablegraph.py', 'inference_verifier.py', 'disassemble.py', 'ArrayTest.class', 'ArrayTest.java']",['ae82a13424ad4877f059a27777cee64d88458519'],92,110,202,14,0.8,1.0,0.6
7907e0f1a2fc4189a0f3a262865b9d6337429771,Fix yet more decompiler bugs,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-08 14:11:40-04:00,14400,2013-04-08 14:11:40-04:00,14400,True,False,"['environment.py', 'obj_c.py', 'graph.py', 'objtypes.py', 'bitwise_util.py', 'convert.py', 'imath.py', 'inference_verifier.py', 'verifier_types.py']",['f2b1975054da631ddb0c2f55515b47ff0b09b558'],30,40,70,9,0.0,0.0,1.0
4eaf0d92fc6c4656dd72f1d5afed4b28b850fda2,Complete rewrite of bytecode verifier,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-11 16:00:01-04:00,14400,2013-04-11 16:00:01-04:00,14400,True,False,"['assembler.py', 'bytecode.py', 'classfile.py', 'constant_pool.py', 'ast.py', 'javamethod.py', 'blockmaker.py', '__init__.py', 'graph.py', 'objtypes.py', 'printer.py', 'onexception.py', 'fieldaccess.py', 'invoke.py', 'new.py', 'ssa_types.py', 'subproc.py', 'stdcache.py', 'descriptors.py', 'inference_verifier.py', 'verifier_types.py']",['7907e0f1a2fc4189a0f3a262865b9d6337429771'],686,1021,1707,21,0.1646090534979424,0.07407407407407407,0.5720164609053497
5b5f2f1828f5fd4c488fb71e3ef7e8bcab27c8d4,Fix decompiler parenthesis generation,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-11 16:48:52-04:00,14400,2013-04-11 16:48:52-04:00,14400,True,False,"['ast.py', 'javamethod.py']",['4eaf0d92fc6c4656dd72f1d5afed4b28b850fda2'],12,17,29,2,1.0,1.0,1.0
488f4522c83f7388226b19e36aa2fda40b1a0e2a,Fix more decompiler bugs,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-12 01:29:03-04:00,14400,2013-04-12 01:30:02-04:00,14400,True,False,"['ast.py', 'javamethod.py', 'graph.py', 'inference_verifier.py']",['5b5f2f1828f5fd4c488fb71e3ef7e8bcab27c8d4'],44,57,101,4,0.5625,0.3125,0.6875
443c58da0cd98e6da9b4495f1186ae7efd5f61be,"Fix verifier, reduce memory usage when creating large numbers of ssa variables",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-12 23:58:13-04:00,14400,2013-04-12 23:58:13-04:00,14400,True,False,"['method.py', 'graph.py', 'ssa_types.py', 'inference_verifier.py']",['488f4522c83f7388226b19e36aa2fda40b1a0e2a'],10,31,41,4,0.9,1.0,1.0
1cfdb0b70cd267dc119f63198edac02f188a8633,"Fix disassembler dependency on Ply, init merging over while loops.",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-15 22:55:19-04:00,14400,2013-04-15 22:55:19-04:00,14400,True,False,"['parse.py', 'tokenize.py', 'javamethod.py', 'variablegraph.py']",['443c58da0cd98e6da9b4495f1186ae7efd5f61be'],13,17,30,4,0.0,0.5,0.25
a15670e7b7d2de0cad0dc6f09c4667e94578e35f,Do not print out TryReturns,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-16 19:06:50-04:00,14400,2013-04-16 19:06:50-04:00,14400,True,False,['javamethod.py'],['1cfdb0b70cd267dc119f63198edac02f188a8633'],1,5,6,1,0.0,0.0,0.0
7fd98233a856e52e1fc926b764e9f96705821ebe,Fix parsing of hexidecimal floats in assembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-17 20:11:49-04:00,14400,2013-04-17 20:11:49-04:00,14400,True,False,['parse.py'],['a15670e7b7d2de0cad0dc6f09c4667e94578e35f'],2,4,6,1,1.0,1.0,1.0
9d3b6350003ff81fb5885638ec6b26a5ca1f95c1,Don't generate binary blobs for problematic code attributes,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-04-28 23:16:40-04:00,14400,2013-04-28 23:16:40-04:00,14400,True,False,['disassembler.py'],['7fd98233a856e52e1fc926b764e9f96705821ebe'],0,9,9,1,0.0,0.0,0.0
e6421c9380f41aa17fbe22215f578dcc0663fe5d,"Fix assembly/disassembly of deeply nested annotations, assembly of AnnotationDefaults",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-01 21:40:01-04:00,14400,2013-05-01 21:40:01-04:00,14400,True,False,"['assembler.py', 'disassembler.py']",['9d3b6350003ff81fb5885638ec6b26a5ca1f95c1'],45,89,134,2,0.0,0.0,0.0
2950fa5548e89f0669af8e2c3c92d99a66da2b66,Add inner class access flags,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-04 16:30:12-04:00,14400,2013-05-04 16:30:12-04:00,14400,True,False,['classfile.py'],['e6421c9380f41aa17fbe22215f578dcc0663fe5d'],0,5,5,1,,,
cd34d0c11ca8ccae98f811b1236d086206d3a131,Add error message when unable to locate standard library,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-05 15:41:23-04:00,14400,2013-05-05 15:41:23-04:00,14400,True,False,['test_decompiler.py'],['2950fa5548e89f0669af8e2c3c92d99a66da2b66'],0,2,2,1,0.0,1.0,0.0
627ed548e95f1ff127e6ee4d00e50c288e954172,"Fix multivalue switch cases, update DualIf test",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-06 01:27:53-04:00,14400,2013-05-06 01:27:53-04:00,14400,True,False,"['ast.py', 'graph.py', 'ControlFlow.test', 'DualIf.test', 'ControlFlow.class', 'DualIf.class', 'ControlFlow.j', 'DualIf.j']",['cd34d0c11ca8ccae98f811b1236d086206d3a131'],18,77,95,8,,,
e9b11ade416132651df6ca5865417a106d758957,"Complete rewrite of graph structuring, now supports arbitrary exceptional flow",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-21 23:21:12-07:00,25200,2013-05-21 23:21:12-07:00,25200,True,False,"['ast.py', 'astgen.py', 'graphproxy.py', 'javamethod.py', 'preprocess.py', 'setree.py', 'structuring.py', 'blockmaker.py', 'exceptionset.py', 'graph.py', 'printer.py', 'onexception.py', 'decompile.py', 'test_decompiler.py']",['627ed548e95f1ff127e6ee4d00e50c288e954172'],1149,1657,2806,14,0.0731070496083551,0.1462140992167102,0.0
28898912fac79044b57a1cb3e3fca203a2b7a4c6,"Track array lengths in optimizer, fix monad bugs",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-22 23:05:47-07:00,25200,2013-05-22 23:05:47-07:00,25200,True,False,"['astgen.py', 'blockmaker.py', 'obj_c.py', 'graph.py', 'array.py', 'monitor.py', 'new.py', 'variablegraph.py']",['e9b11ade416132651df6ca5865417a106d758957'],33,62,95,8,0.13043478260869565,0.0,0.17391304347826086
0fad55d5cff26fef47240036e129cd9994e36a10,Add documentation,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-22 23:23:59-07:00,25200,2013-05-22 23:23:59-07:00,25200,True,False,"['graphproxy.py', 'structuring.py']",['28898912fac79044b57a1cb3e3fca203a2b7a4c6'],0,26,26,2,,,
cc8b1eea1e1c28ff3ad6412ae72b381fb0e27e21,Fix disassembler bug,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-25 07:39:01-07:00,25200,2013-05-25 07:39:01-07:00,25200,True,False,['disassembler.py'],['0fad55d5cff26fef47240036e129cd9994e36a10'],2,2,4,1,,,
ec26af21d9242738934f00e3d972391c4813341e,Fix disassembler bug with multi-ev annotations,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-25 09:25:09-07:00,25200,2013-05-25 09:25:09-07:00,25200,True,False,['disassembler.py'],['cc8b1eea1e1c28ff3ad6412ae72b381fb0e27e21'],9,8,17,1,1.0,1.0,1.0
3dbffda80317c494e49cdc2d81fe15e134f7b8fe,Support deeply nested setrees and improve scope completion,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-25 18:27:04-07:00,25200,2013-05-25 18:27:04-07:00,25200,True,False,"['.gitignore', 'astgen.py', 'setree.py', 'structuring.py', 'graph.py', 'disassemble.py']",['ec26af21d9242738934f00e3d972391c4813341e'],115,154,269,6,0.23333333333333334,0.2,1.0
a6c1bddfe8b3a202e96266cd1ebc577d9c9ee8f4,Fix stupid bug,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-25 19:35:01-07:00,25200,2013-05-25 19:35:01-07:00,25200,True,False,['graphproxy.py'],['3dbffda80317c494e49cdc2d81fe15e134f7b8fe'],2,2,4,1,,,
a66799d7bda6bd1534c886752df3536089c91847,Change heuristic back for now,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-25 19:36:04-07:00,25200,2013-05-25 19:36:04-07:00,25200,True,False,['structuring.py'],['a6c1bddfe8b3a202e96266cd1ebc577d9c9ee8f4'],2,8,10,1,0.0,0.0,0.0
1b2aedd0de1bf63c04923e88fccbd8608464f348,"Add new break scope algorithm, miscellaneous bugfixes",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-27 14:00:35-07:00,25200,2013-05-27 14:00:35-07:00,25200,True,False,"['graphproxy.py', 'structuring.py', 'array.py', 'variablegraph.py']",['a66799d7bda6bd1534c886752df3536089c91847'],140,203,343,4,0.0,0.0,0.0
98faa0b5df4888980e4828023432ff86d47cfdb4,Fix type inference of returned values and fields,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-05-27 15:58:42-07:00,25200,2013-05-27 15:58:42-07:00,25200,True,False,"['structuring.py', 'obj_c.py', 'fieldaccess.py', 'invoke.py']",['1b2aedd0de1bf63c04923e88fccbd8608464f348'],9,35,44,4,0.0,0.9333333333333333,0.06666666666666667
004e50082bdbc9973c82824484abd6c1efc8dc27,"Fix tryExtend, other minor bugs",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-01 19:56:53-07:00,25200,2013-06-01 19:56:53-07:00,25200,True,False,"['parse.py', 'ast2.py', 'graphproxy.py', 'structuring.py']",['98faa0b5df4888980e4828023432ff86d47cfdb4'],75,75,150,4,1.0,1.0,1.0
a305ed9eeaa28b11c373b9e9f0e5fbda7cb401b8,"Reduce memory usage, support partial class loading",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-02 00:50:22-07:00,25200,2013-06-02 00:50:22-07:00,25200,True,False,"['classfile.py', 'environment.py', 'field.py', 'method.py', 'stdcache.py', 'disassemble.py']",['004e50082bdbc9973c82824484abd6c1efc8dc27'],37,49,86,6,0.8947368421052632,0.8947368421052632,0.47368421052631576
8a7fe0973a194694a4d010e07dc52d597705b116,Expand ControlFlow test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-02 10:44:10-07:00,25200,2013-06-02 10:44:10-07:00,25200,True,False,"['ControlFlow.test', 'ControlFlow.class', 'ControlFlow.j']",['a305ed9eeaa28b11c373b9e9f0e5fbda7cb401b8'],0,97,97,3,,,
48db1d04d4093a38744d59c7053ecc9a2ac6d5a7,Remove unused code,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-02 11:03:29-07:00,25200,2013-06-02 11:03:29-07:00,25200,True,False,"['javamethod.py', 'decompile.py']",['8a7fe0973a194694a4d010e07dc52d597705b116'],122,8,130,2,0.8526315789473684,0.8526315789473684,0.9789473684210527
6dcebd1e314fda40debded84105277292b4b9dbb,Add initial values to all variable declarations,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-02 11:17:37-07:00,25200,2013-06-02 11:17:37-07:00,25200,True,False,"['ast.py', 'javamethod.py']",['48db1d04d4093a38744d59c7053ecc9a2ac6d5a7'],6,14,20,2,0.0,1.0,0.0
69c34e3fb2b73772930542217c5efc99d897603f,Add loop head heuristic,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-02 13:58:42-07:00,25200,2013-06-02 13:58:42-07:00,25200,True,False,['structuring.py'],['6dcebd1e314fda40debded84105277292b4b9dbb'],8,12,20,1,0.0,0.0,1.0
071c678868248d806c5ca17cfdeb1619fe050dfd,Add optimistic propagation to optimizer,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-02 21:00:13-07:00,25200,2013-06-02 21:00:13-07:00,25200,True,False,['variablegraph.py'],['69c34e3fb2b73772930542217c5efc99d897603f'],25,57,82,1,0.56,0.08,0.92
9661ab5ae40c4a310d131b1fa138d62cb558dfad,Clarify copyright notice,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-03 22:17:11-07:00,25200,2013-06-03 22:17:11-07:00,25200,True,False,"['script_util.py', 'assemble.py', 'decompile.py', 'disassemble.py']",['071c678868248d806c5ca17cfdeb1619fe050dfd'],3,8,11,4,,,
21e47b5f47122bf122240208d3934defe93ed6de,Fix bug in variable propagation,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-04 20:59:55-07:00,25200,2013-06-04 20:59:55-07:00,25200,True,False,['variablegraph.py'],['9661ab5ae40c4a310d131b1fa138d62cb558dfad'],0,3,3,1,0.0,0.0,1.0
d6504a1eb98dcffd244a67d928d82daa7bddd75c,Reduce memory usage of decompiler script,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-05 20:52:10-07:00,25200,2013-06-05 20:52:10-07:00,25200,True,False,"['field.py', 'method.py', 'decompile.py']",['21e47b5f47122bf122240208d3934defe93ed6de'],6,21,27,3,0.8333333333333334,0.9166666666666666,0.75
44bc9cef32cb31eda402a9282a2a5805e00a215f,Refactor outMonad creation,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-06 21:58:05-07:00,25200,2013-06-06 21:58:05-07:00,25200,True,False,"['array.py', 'base.py', 'fieldaccess.py', 'invoke.py', 'monitor.py', 'new.py']",['d6504a1eb98dcffd244a67d928d82daa7bddd75c'],22,15,37,6,0.4,0.0,1.0
0ad950d4c7a4f5f92eaf8d268fc574d84fd66871,Refactor Java tree traversal,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-07 21:28:01-07:00,25200,2013-06-07 21:28:01-07:00,25200,True,False,['javamethod.py'],['44bc9cef32cb31eda402a9282a2a5805e00a215f'],277,228,505,1,0.28205128205128205,0.6410256410256411,0.0
ece63a249c172db8f7a43da4304259490662f01d,Remove get/hasattr from AST,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-08 11:45:39-07:00,25200,2013-06-08 11:45:39-07:00,25200,True,False,"['ast.py', 'boolize.py', 'javamethod.py']",['0ad950d4c7a4f5f92eaf8d268fc574d84fd66871'],25,20,45,3,0.2,1.0,0.0
6300caa42fe06bc337af7679edba738e730d35bc,Avoid inlining return blocks and add clinit test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-09 17:51:24-07:00,25200,2013-06-09 17:51:24-07:00,25200,True,False,"['structuring.py', 'StaticInitializer.test', 'StaticInitializer.class', 'StaticInitializer.java']",['ece63a249c172db8f7a43da4304259490662f01d'],3,17,20,4,0.8888888888888888,0.8888888888888888,0.8888888888888888
923b38474ecd5adce9b6d57a15b16601c21135b7,Add typecasting to static field initializers,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-09 17:58:41-07:00,25200,2013-06-09 17:58:41-07:00,25200,True,False,"['ast2.py', 'StaticInitializer.class', 'StaticInitializer.java']",['6300caa42fe06bc337af7679edba738e730d35bc'],2,2,4,3,,,
503fcc482e3565f0e5b1679707f90fd19da3a65a,Fix declaration of superinterfaces,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-09 18:16:00-07:00,25200,2013-06-09 18:16:00-07:00,25200,True,False,['ast2.py'],['923b38474ecd5adce9b6d57a15b16601c21135b7'],3,8,11,1,0.0,1.0,1.0
1b79336d4208d4aa4cf9b0fd0ecd3d6e5f56740c,Preallocate bottom constraints,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-10 21:50:52-07:00,25200,2013-06-10 21:50:52-07:00,25200,True,False,"['boolize.py', '__init__.py']",['503fcc482e3565f0e5b1679707f90fd19da3a65a'],11,14,25,2,1.0,1.0,0.0
a829d163d62524d0f592555c406f969cd6369cca,"Fix namegen, don't print classname for static fields in current class",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-11 21:13:04-07:00,25200,2013-06-11 21:13:04-07:00,25200,True,False,"['ast.py', 'astgen.py', 'javaclass.py', 'javamethod.py']",['1b79336d4208d4aa4cf9b0fd0ecd3d6e5f56740c'],15,20,35,4,0.8,0.8,0.0
a7167a555f03e971b95bc778a2c16df90f74f405,Remove blocks with unreachable variables,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-12 21:14:15-07:00,25200,2013-06-12 21:14:15-07:00,25200,True,False,['graph.py'],['a829d163d62524d0f592555c406f969cd6369cca'],0,16,16,1,0.46153846153846156,0.46153846153846156,1.0
baf27daec5163aaa321c37f604d8712a79f73504,"Add test for previous bug, partial fix for casts",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-13 21:33:21-07:00,25200,2013-06-13 21:33:21-07:00,25200,True,False,"['ast.py', 'OddsAndEnds.class', 'OddsAndEnds.java']",['a7167a555f03e971b95bc778a2c16df90f74f405'],0,22,22,3,0.058823529411764705,1.0,1.0
1c2bd2291abe5095b77bfcae07d19f73420c0a7a,Rename pessimisticProgapagation to be more accurate,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-14 23:19:09-07:00,25200,2013-06-14 23:19:09-07:00,25200,True,False,"['graph.py', 'decompile.py']",['baf27daec5163aaa321c37f604d8712a79f73504'],2,4,6,2,,,
9af08acab31ebe60089d5fc2dd2a7bef309e5831,Greatly speed up boolization in exchange for lower quality),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-15 09:51:52-07:00,25200,2013-06-15 09:51:52-07:00,25200,True,False,['boolize.py'],['1c2bd2291abe5095b77bfcae07d19f73420c0a7a'],161,124,285,1,1.0,1.0,0.7931034482758621
9f3163d0f705aabc95fb7daeefe3a8432edc5e9b,Simplify !cond in ternaries,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-15 09:56:57-07:00,25200,2013-06-15 09:56:57-07:00,25200,True,False,['javamethod.py'],['9af08acab31ebe60089d5fc2dd2a7bef309e5831'],0,2,2,1,0.0,0.0,1.0
5f39a96ff922b5b1b793659b6a01f027e045f790,Delinting,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-15 10:20:28-07:00,25200,2013-06-15 10:20:28-07:00,25200,True,False,"['disassembler.py', 'constant_pool.py', 'javamethod.py', 'stdcache.py', 'inference_verifier.py', 'verifier_types.py']",['9f3163d0f705aabc95fb7daeefe3a8432edc5e9b'],60,59,119,6,,,
9976b821df449df7fb3a7fc75cf87be4e2da099c,Keep jars open to speed up class loading,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-15 11:51:20-07:00,25200,2013-06-15 11:51:20-07:00,25200,True,False,"['environment.py', 'decompile.py']",['5f39a96ff922b5b1b793659b6a01f027e045f790'],24,40,64,2,0.8571428571428571,1.0,0.5714285714285714
5ea1294445757a1126d35c868efd8da75d12413c,Change ordering heuristic in scope completion,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-15 17:24:12-07:00,25200,2013-06-15 17:24:12-07:00,25200,True,False,['structuring.py'],['9976b821df449df7fb3a7fc75cf87be4e2da099c'],1,1,2,1,,,
7abeeecedc036debea68a223b5c8a2d8c1a2b9bc,Improved support for AST jump reduction,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-16 12:31:56-07:00,25200,2013-06-16 12:31:56-07:00,25200,True,False,"['ast.py', 'astgen.py', 'javamethod.py']",['5ea1294445757a1126d35c868efd8da75d12413c'],70,113,183,3,0.0,0.25925925925925924,0.0
06532dd3c5150a215f4bae544eef4af4dd88cc18,Fix exception merging,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-16 19:23:50-07:00,25200,2013-06-16 19:23:50-07:00,25200,True,False,['structuring.py'],['7abeeecedc036debea68a223b5c8a2d8c1a2b9bc'],1,6,7,1,,,
6c25aaf7d871117fcf764667491f4fe94a4ce083,Improve Unicode support,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-17 21:24:28-07:00,25200,2013-06-17 21:24:28-07:00,25200,True,False,"['ast.py', 'ast2.py', 'javaclass.py', 'UnicodeTest.test', 'UnicodeTest.class', 'UnicodeTest.java']",['06532dd3c5150a215f4bae544eef4af4dd88cc18'],7,12,19,6,1.0,1.0,1.0
52135f3cec72f190cb78c7f0ef981027c9c814a8,Fix stupid unicode bug,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-18 21:15:35-07:00,25200,2013-06-18 21:15:35-07:00,25200,True,False,"['ast.py', 'UnicodeTest.class', 'UnicodeTest.java']",['6c25aaf7d871117fcf764667491f4fe94a4ce083'],2,2,4,3,,,
a1d0a43f701e5da98c4e7788be6f160da863365b,Add note about -O,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-19 21:12:33-07:00,25200,2013-06-19 21:12:33-07:00,25200,True,False,['README.TXT'],['52135f3cec72f190cb78c7f0ef981027c9c814a8'],1,6,7,1,,,
bbdbaf09caee80ec89a7746466bb09dd05defc08,"Fix mergeExceptions bug, unnecessary conversion",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-19 21:53:00-07:00,25200,2013-06-19 21:53:00-07:00,25200,True,False,['structuring.py'],['a1d0a43f701e5da98c4e7788be6f160da863365b'],2,2,4,1,,,
f83996e4e444028c092b5e8e52714444abff9f97,Fix and refactor vertex cut algorithm,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-20 22:36:36-07:00,25200,2013-06-20 22:36:36-07:00,25200,True,False,['structuring.py'],['bbdbaf09caee80ec89a7746466bb09dd05defc08'],55,59,114,1,1.0,1.0,1.0
02b8cb114e8e2752472487a79f34e6da97622213,Minor refactoring,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-21 21:08:13-07:00,25200,2013-06-21 21:08:13-07:00,25200,True,False,['structuring.py'],['f83996e4e444028c092b5e8e52714444abff9f97'],30,28,58,1,1.0,1.0,0.0
9d72fbfd04373c1efc821939f45fdd595712011e,Add Try/Catch test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-22 21:38:22-07:00,25200,2013-06-22 21:38:22-07:00,25200,True,False,"['TryCatchTest.test', 'TryCatchTest.class', 'TryCatchTest.java']",['02b8cb114e8e2752472487a79f34e6da97622213'],0,36,36,3,0.0,0.0,1.0
ee5cc8a13e5a04cdcd27ce9d82675c4c985a195b,Fix bug in exception merging,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-23 23:17:45-07:00,25200,2013-06-23 23:17:45-07:00,25200,True,False,"['structuring.py', 'decompile.py']",['9d72fbfd04373c1efc821939f45fdd595712011e'],25,38,63,2,0.0,0.0,0.0
381094eb6c63c4dfcb5f2cf2361346f82d2483cb,"Make propagateConstraints always return triples, even if not all entries are used",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-24 21:32:11-07:00,25200,2013-06-24 21:32:11-07:00,25200,True,False,"['graph.py', 'array.py', 'base.py', 'checkcast.py', 'convert.py', 'fieldaccess.py', 'fmath.py', 'imath.py', 'invoke.py', 'monitor.py', 'throw.py', 'truncate.py', 'tryreturn.py', 'variablegraph.py']",['ee5cc8a13e5a04cdcd27ce9d82675c4c985a195b'],76,55,131,14,0.0,0.0,1.0
9cc7727225076dcde676a6e563ce45703d78d59f,Improve unused variable removal,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-24 21:37:58-07:00,25200,2013-06-24 21:37:58-07:00,25200,True,False,['graph.py'],['381094eb6c63c4dfcb5f2cf2361346f82d2483cb'],1,3,4,1,1.0,0.0,1.0
39ecf1acc89e2048553ba660b1f376db976423e0,Filter candidates for exception merging,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-25 21:28:35-07:00,25200,2013-06-25 21:28:35-07:00,25200,True,False,['structuring.py'],['9cc7727225076dcde676a6e563ce45703d78d59f'],5,6,11,1,0.0,0.0,0.0
0b306b551b806ba5fea56f1c6c0e6b4333d88ab1,Add documentation for propagateConstraints,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-26 22:09:08-07:00,25200,2013-06-26 22:09:08-07:00,25200,True,False,['base.py'],['39ecf1acc89e2048553ba660b1f376db976423e0'],2,4,6,1,,,
e179ed50a0412ae967b13c63bc57825ccdab02d0,Add multicatch support to Try/Catch AST node,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-27 22:26:05-07:00,25200,2013-06-27 22:26:05-07:00,25200,True,False,"['ast.py', 'astgen.py', 'javamethod.py']",['0b306b551b806ba5fea56f1c6c0e6b4333d88ab1'],22,29,51,3,0.14285714285714285,0.0,1.0
fe7bb217ae1e070ea537c1af77426f12783b235c,Add documentation for SSA_Graph,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-28 07:38:48-07:00,25200,2013-06-28 07:38:48-07:00,25200,True,False,['graph.py'],['e179ed50a0412ae967b13c63bc57825ccdab02d0'],0,6,6,1,,,
6bec66c5808c3212b6c5490db1b4baa66897fb6b,"Add floatutil documentation, update float test",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-29 21:19:25-07:00,25200,2013-06-29 21:19:25-07:00,25200,True,False,"['floatutil.py', 'floattest.class', 'floattest.test', 'floattest.java']",['fe7bb217ae1e070ea537c1af77426f12783b235c'],2,14,16,4,1.0,1.0,1.0
1000c7f47a0170151816884e55320eb8f8e11298,Inline single use variables,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-30 14:12:33-07:00,25200,2013-06-30 14:12:33-07:00,25200,True,False,"['ast.py', 'javamethod.py']",['6bec66c5808c3212b6c5490db1b4baa66897fb6b'],8,105,113,2,0.4146341463414634,0.14634146341463414,0.9878048780487805
7d5951eba41cef04c35f86184041b8037dd8efe5,Add conditions to while loops,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-30 18:15:44-07:00,25200,2013-06-30 18:15:44-07:00,25200,True,False,"['ast.py', 'javamethod.py']",['1000c7f47a0170151816884e55320eb8f8e11298'],3,6,9,2,0.5,0.5,1.0
35d6e7d92600fc7c75d8f665948e6d48378e252b,Inline while conditions,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-06-30 18:52:58-07:00,25200,2013-06-30 18:52:58-07:00,25200,True,False,['javamethod.py'],['7d5951eba41cef04c35f86184041b8037dd8efe5'],3,33,36,1,0.0,0.0,0.8695652173913043
74d2a365db3e127bc545be40268b44f9c585ff6d,Disable while inlining and add test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-01 21:04:02-07:00,25200,2013-07-01 21:04:02-07:00,25200,True,False,"['javamethod.py', 'whilesize.class', 'whilesize.java', 'whilesize.test']",['35d6e7d92600fc7c75d8f665948e6d48378e252b'],2,44,46,4,0.12121212121212122,0.21212121212121213,1.0
622eda244cb4373cd2eb2ab41c74372d3cb70509,Fix while inlining,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-01 22:15:25-07:00,25200,2013-07-01 22:15:25-07:00,25200,True,False,['javamethod.py'],['74d2a365db3e127bc545be40268b44f9c585ff6d'],25,49,74,1,0.391304347826087,0.391304347826087,0.9130434782608695
a3df2f1711023c98977d9f83fda427b0f24bcb5c,Allow inlining of returns in non <clinit> methods,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-02 21:37:54-07:00,25200,2013-07-02 21:37:54-07:00,25200,True,False,"['javamethod.py', 'structuring.py', 'decompile.py']",['622eda244cb4373cd2eb2ab41c74372d3cb70509'],17,31,48,3,0.6666666666666666,0.6666666666666666,0.0
8ba7cf70f24ce3939b5cf618f6d9ecceeea8c920,Add docstrings for scope simplifcation,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-03 08:05:08-07:00,25200,2013-07-03 08:05:08-07:00,25200,True,False,['javamethod.py'],['a3df2f1711023c98977d9f83fda427b0f24bcb5c'],0,3,3,1,,,
5baa5c4844bf064b06396353af3a5bd09040f2dd,Remove Field -> str function,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-04 22:31:35-07:00,25200,2013-07-04 22:31:35-07:00,25200,True,False,['field.py'],['8ba7cf70f24ce3939b5cf618f6d9ecceeea8c920'],7,1,8,1,0.0,0.0,0.0
66cbe6c9f9d4074a50a9d3a0afb5a5b5ce81309a,Fix Yoda comparisons,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-05 22:29:52-07:00,25200,2013-07-05 22:29:52-07:00,25200,True,False,['javamethod.py'],['5baa5c4844bf064b06396353af3a5bd09040f2dd'],0,3,3,1,0.0,0.0,1.0
a3e67d254f57638bfddf383ed50cd0500cd9bf81,Add note to README about InnerClasses and cp indices,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-06 23:36:59-07:00,25200,2013-07-06 23:36:59-07:00,25200,True,False,['README.TXT'],['66cbe6c9f9d4074a50a9d3a0afb5a5b5ce81309a'],26,30,56,1,,,
15060cf7e83d6db897af096bdfc06bba1ee23293,Make scope completion take into account child try/catches,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-07 21:19:48-07:00,25200,2013-07-07 21:19:48-07:00,25200,True,False,['structuring.py'],['a3e67d254f57638bfddf383ed50cd0500cd9bf81'],5,7,12,1,0.0,0.0,0.0
2f54c04935970999aba2f77e75e8ae92d649a910,Fix list/tuple confusion,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-08 21:45:01-07:00,25200,2013-07-08 21:45:01-07:00,25200,True,False,"['ast.py', 'astgen.py', 'javamethod.py']",['15060cf7e83d6db897af096bdfc06bba1ee23293'],4,4,8,3,,,
45c815124a254161d7091dc458a35ed7f26f8f3c,Allow specifying jar for disassembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-09 22:59:24-07:00,25200,2013-07-09 22:59:24-07:00,25200,True,False,['disassemble.py'],['2f54c04935970999aba2f77e75e8ae92d649a910'],2,7,9,1,,,
0b484200e262917c0df50ff792f32eeebfc5bb8d,Improve ternary generation and readability,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-10 21:35:55-07:00,25200,2013-07-10 21:35:55-07:00,25200,True,False,"['ast.py', 'javamethod.py']",['45c815124a254161d7091dc458a35ed7f26f8f3c'],24,35,59,2,0.0,0.0,0.16666666666666666
ec8080d0879760644bb92c92daf3522c555d3f00,Expirimental plugin support,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-11 23:11:12-07:00,25200,2013-07-11 23:11:12-07:00,25200,True,False,"['.gitignore', '__init__.py', 'filterfields.py', 'fieldaccess.py', 'decompile.py']",['0b484200e262917c0df50ff792f32eeebfc5bb8d'],22,86,108,5,0.1276595744680851,0.19148936170212766,0.9787234042553191
f58f3d03d5df58b12555e9abc408a2d4b6c98333,Add extra AST passes,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-12 19:40:34-07:00,25200,2013-07-12 19:40:34-07:00,25200,True,False,['javamethod.py'],['ec8080d0879760644bb92c92daf3522c555d3f00'],0,2,2,1,0.0,0.0,1.0
4bc01e716586c30e306ca5a96ea80245a18336a1,"Fix boolization, dtype calculations",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-14 17:58:02-07:00,25200,2013-07-14 17:58:02-07:00,25200,True,False,"['ast.py', 'boolize.py', 'javamethod.py']",['f58f3d03d5df58b12555e9abc408a2d4b6c98333'],153,180,333,3,1.0,0.0,1.0
c45ee5b7245867b4b833ece37b01a3e45be9706e,mend,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-14 20:44:06-07:00,25200,2013-07-14 20:44:06-07:00,25200,True,False,['boolize.py'],['4bc01e716586c30e306ca5a96ea80245a18336a1'],2,2,4,1,,,
59aaa13d7ef368564e97c19dedb684be0acc8d2f,Fix boolization in prescence of casts,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-16 22:21:28-07:00,25200,2013-07-16 22:21:28-07:00,25200,True,False,"['astgen.py', 'boolize.py', 'ArgumentTypes.test', 'ArgumentTypes.class', 'ArgumentTypes.java']",['c45ee5b7245867b4b833ece37b01a3e45be9706e'],17,61,78,5,0.5,1.0,0.6333333333333333
21288ec68457ab0ab8b8f1f5a1beda67e510bedc,Hopefully fix boolization for real this time,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-19 07:49:07-07:00,25200,2013-07-19 07:49:07-07:00,25200,True,False,"['boolize.py', 'ArgumentTypes.test', 'ArgumentTypes.class', 'ArgumentTypes.java']",['59aaa13d7ef368564e97c19dedb684be0acc8d2f'],5,19,24,4,0.42857142857142855,0.42857142857142855,1.0
e9a08cae054cc8dfb94eb564749b551433d55e30,"major revamp of test_decompiler.py

   - changed the test format
   - exposed a nicer interface, especially for test generation
   - removed the *.test files from the repo
   - removed the explicit tmpdir, in favor of Python's tmpdir finder
   - prettied up some of the test outputs
   - made the test inputs explicit with the `test_registry`",CJ Carey,perimosocordiae@gmail.com,CJ Carey,perimosocordiae@gmail.com,2013-07-22 21:58:59-04:00,14400,2013-07-22 21:58:59-04:00,14400,True,False,"['.gitignore', 'README.TXT', 'test_decompiler.py', 'ArgumentTypes.test', 'ArrayTest.test', 'BadInnerTest.test', 'BoolizeTest.test', 'ControlFlow.test', 'DoubleEdge.test', 'DuplicateInit.test', 'NullInference.test', 'OddsAndEnds.test', 'OldVersionTest.test', 'SkipJSR.test', 'StaticInitializer.test', 'Switch.test', 'Synchronized.test', 'TryCatchTest.test', 'UnicodeTest.test', 'floattest.test', 'splitnew.test', 'whilesize.test']",['21288ec68457ab0ab8b8f1f5a1beda67e510bedc'],51,123,174,22,0.07894736842105263,0.0,1.0
725668cbcd16b543d4a9e4720d9d76be903a9a45,clear out pre-existing source files,CJ Carey,perimosocordiae@gmail.com,CJ Carey,perimosocordiae@gmail.com,2013-07-23 15:40:41-04:00,14400,2013-07-23 15:40:41-04:00,14400,True,False,['test_decompiler.py'],['e9a08cae054cc8dfb94eb564749b551433d55e30'],0,6,6,1,0.0,0.0,1.0
f5f3dc97b150519807f4ff8a989d42cbc1f0a755,Add plugin helper functions,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-23 22:35:39-07:00,25200,2013-07-23 22:35:39-07:00,25200,True,False,"['filterfields.py', 'filterlib.py']",['21288ec68457ab0ab8b8f1f5a1beda67e510bedc'],51,83,134,2,0.38461538461538464,0.38461538461538464,0.0
2b7c00d2aec1a7ba05d6daaa1602376ed10ee3a2,Change decompiler test script,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-23 23:12:38-07:00,25200,2013-07-23 23:12:38-07:00,25200,True,False,"['README.TXT', 'runtests.py', 'test_decompiler.py', '__init__.py']",['50da62e3a68bd93f710e15706829b746a900011a'],153,130,283,4,0.725,0.725,0.0
66eff401c7df7472561b8043f8e5aba59dd21e16,Fix documentation of runtests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-23 23:25:10-07:00,25200,2013-07-23 23:25:10-07:00,25200,True,False,['runtests.py'],['2b7c00d2aec1a7ba05d6daaa1602376ed10ee3a2'],5,3,8,1,,,
33b5eb9a576ff0a93a36c8e7ed3fc9e3004164b9,Untrack plugins,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-07-30 21:09:38-07:00,25200,2013-07-30 21:09:38-07:00,25200,True,False,"['.gitignore', 'filterlib.py']",['66eff401c7df7472561b8043f8e5aba59dd21e16'],84,1,85,2,0.8059701492537313,0.8059701492537313,0.5522388059701493
65288e286a88d36c135795f848baba9a491d73fb,Reuse constraints where possible,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-03 01:30:50-07:00,25200,2013-08-03 01:30:50-07:00,25200,True,False,"['int_c.py', 'obj_c.py']",['33b5eb9a576ff0a93a36c8e7ed3fc9e3004164b9'],2,4,6,2,1.0,0.5,1.0
2cd77e640060f06edaab96ff734a700f7035f2ae,Temporarily disable clearing test directories,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-04 17:55:53-07:00,25200,2013-08-04 17:55:53-07:00,25200,True,False,['runtests.py'],['65288e286a88d36c135795f848baba9a491d73fb'],4,8,12,1,,,
605355b5eb875ead22efcdd541c2bfa742618e53,Add copy propagation pass,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-04 17:57:13-07:00,25200,2013-08-04 19:03:48-07:00,25200,True,False,"['ast.py', 'astgen.py', 'variablemerge.py']",['2cd77e640060f06edaab96ff734a700f7035f2ae'],19,128,147,3,0.0898876404494382,0.056179775280898875,0.5168539325842697
a67e20ef2df9536e2ee0107eee33f1899aeae6b2,Fix cast -> variable typing bug,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-11 22:08:29-04:00,14400,2013-08-11 22:08:29-04:00,14400,True,False,"['.gitignore', 'ast.py', 'astgen.py', 'graph.py', 'variablegraph.py', 'ArgumentTypes.class', 'ArgumentTypes.java']",['605355b5eb875ead22efcdd541c2bfa742618e53'],37,41,78,7,0.0,0.0,0.16666666666666666
431c18e6c83a626bd9027e9843f2b68e39b3d66d,Improve while inlining,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-12 17:45:29-04:00,14400,2013-08-12 17:45:29-04:00,14400,True,False,"['ast.py', 'javamethod.py']",['a67e20ef2df9536e2ee0107eee33f1899aeae6b2'],87,109,196,2,0.45,0.0,1.0
f0200c0d1ed690caa03013db3894eaaee6627912,"Complete rewrite of jump analysis, add else if support, bugfixes",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-18 13:25:06-04:00,14400,2013-08-18 13:25:06-04:00,14400,True,False,"['ast.py', 'astgen.py', 'javamethod.py']",['431c18e6c83a626bd9027e9843f2b68e39b3d66d'],509,346,855,3,1.0,0.8898305084745762,0.3474576271186441
db362d79696395fc746d21095f5615e26028cd11,"Rename whilesize test, add print",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-18 20:49:00-04:00,14400,2013-08-18 20:49:00-04:00,14400,True,False,"['runtests.py', '__init__.py', 'WhileLoops.class', 'whilesize.class', 'WhileLoops.java']",['f0200c0d1ed690caa03013db3894eaaee6627912'],11,12,23,5,0.0,0.0,0.0
5d4493893e1974806eded13a6f139a08a28d7e31,Add code to test Procyon,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-18 21:39:08-04:00,14400,2013-08-18 21:39:08-04:00,14400,True,False,['runtests.py'],['db362d79696395fc746d21095f5615e26028cd11'],0,6,6,1,,,
48faa0e5c1c645359f6c71f069c96f5fbc12f111,Fix broken assertion in javamethod,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-20 16:05:25-04:00,14400,2013-08-20 16:05:25-04:00,14400,True,False,"['classfile.py', 'environment.py', 'ast.py', 'javamethod.py', 'decompile.py']",['5d4493893e1974806eded13a6f139a08a28d7e31'],17,20,37,5,,,
347a31a6fb1595732cf853b891bbf33430aad331,Add test case (doesn't actually work),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-20 17:44:37-04:00,14400,2013-08-20 17:44:37-04:00,14400,True,False,"['Switch.class', 'Switch.java']",['48faa0e5c1c645359f6c71f069c96f5fbc12f111'],3,15,18,2,0.9090909090909091,0.9090909090909091,1.0
0226d4264d5e5243c31c4d608d048ab120308196,Fix improper inlining into ternaries,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-20 21:34:20-04:00,14400,2013-08-20 21:34:20-04:00,14400,True,False,"['javamethod.py', 'graph.py', 'OddsAndEnds.class', 'OddsAndEnds.java']",['347a31a6fb1595732cf853b891bbf33430aad331'],36,45,81,4,1.0,1.0,1.0
662d18b8345da0d7fa66897932abbb2b6b116fc3,Allow inlining into assignments,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-21 12:56:48-04:00,14400,2013-08-21 12:56:48-04:00,14400,True,False,['javamethod.py'],['0226d4264d5e5243c31c4d608d048ab120308196'],0,10,10,1,0.0,0.0,1.0
009437ec9ae8a0c4d7df880bf1a9fe80ff94af3c,Convert MethodDecompiler to free functions,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-21 23:31:09-04:00,14400,2013-08-21 23:31:09-04:00,14400,True,False,"['javaclass.py', 'javamethod.py', 'runtests.py']",['662d18b8345da0d7fa66897932abbb2b6b116fc3'],566,563,1129,3,0.0,0.0,1.0
b7b91a6884b5b60b237f0f3fbfc5bf0aad3878ef,Delinting,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-22 00:05:51-04:00,14400,2013-08-22 00:05:51-04:00,14400,True,False,"['ast.py', 'javamethod.py', 'structuring.py', 'blockmaker.py', 'int_c.py', 'monad_c.py', 'functionbase.py', 'graph.py', 'objtypes.py', 'printer.py', 'variablegraph.py', 'inference_verifier.py']",['009437ec9ae8a0c4d7df880bf1a9fe80ff94af3c'],117,108,225,12,0.5,0.5,0.75
46563973276a5c02676047efdecdc6176a944f33,Fix wildcard ssa_types imports,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-22 00:20:59-04:00,14400,2013-08-22 00:20:59-04:00,14400,True,False,"['blockmaker.py', 'graph.py', 'printer.py', 'exit.py', 'ssa_types.py']",['b7b91a6884b5b60b237f0f3fbfc5bf0aad3878ef'],28,30,58,5,,,
cfed340f2221e50147c761c62a3d194237902259,Turn ClassDecompiler into free functions,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-22 01:22:53-04:00,14400,2013-08-22 01:22:53-04:00,14400,True,False,"['javaclass.py', 'decompile.py']",['46563973276a5c02676047efdecdc6176a944f33'],55,45,100,2,0.14285714285714285,0.0,0.0
5f0e9f1248309261516d40abe93edd651d4c6332,"Refactor assignment checks, _replaceExpressions",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-22 11:58:32-04:00,14400,2013-08-22 11:58:32-04:00,14400,True,False,"['ast.py', 'boolize.py', 'javamethod.py']",['cfed340f2221e50147c761c62a3d194237902259'],47,27,74,3,1.0,1.0,0.0
2dced06183f0ac975201fe0c494cebb247b573ff,"Rewrote subprocedure code, changed Phis to track order seperately",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-23 00:27:44-04:00,14400,2013-08-23 00:27:44-04:00,14400,True,False,"['graphproxy.py', 'javamethod.py', 'functionbase.py', 'graph.py', 'phi.py', 'ssa_types.py', 'subproc.py', 'variablegraph.py', 'decompile.py']",['5f0e9f1248309261516d40abe93edd651d4c6332'],252,204,456,9,1.0,0.9069767441860465,1.0
5e005be61032c8fb972fe41876ad0eae104e2e9c,Add documentation for subproc handling,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-23 00:42:04-04:00,14400,2013-08-23 00:42:04-04:00,14400,True,False,['graph.py'],['2dced06183f0ac975201fe0c494cebb247b573ff'],0,14,14,1,,,
6a6a76f8280b43b4580411d321bccc88e42c783e,Make phi standalone class so it can use slots,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-25 10:53:28-04:00,14400,2013-08-25 10:53:28-04:00,14400,True,False,"['functionbase.py', 'graph.py', 'phi.py']",['5e005be61032c8fb972fe41876ad0eae104e2e9c'],12,18,30,3,1.0,1.0,1.0
32899ac2655e1840464e9b520180c9e0bc4df040,Add more __slots__,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-25 12:09:55-04:00,14400,2013-08-25 12:09:55-04:00,14400,True,False,"['int_c.py', 'obj_c.py', 'exceptionset.py']",['6a6a76f8280b43b4580411d321bccc88e42c783e'],12,18,30,3,0.0,0.0,1.0
ed09b9a6cd682f7b5a7a1a3bc85824ee3dcc0c7d,Simplify expressions for float/long comparison and int negation,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-30 21:37:04-04:00,14400,2013-08-30 21:37:04-04:00,14400,True,False,"['ast.py', 'javamethod.py']",['32899ac2655e1840464e9b520180c9e0bc4df040'],36,95,131,2,0.05405405405405406,0.02702702702702703,0.972972972972973
6ec944907523e76ff504037e8f71a3ace232488e,Improve expression simplification,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-08-31 13:30:42-04:00,14400,2013-08-31 13:30:42-04:00,14400,True,False,['javamethod.py'],['ed09b9a6cd682f7b5a7a1a3bc85824ee3dcc0c7d'],19,64,83,1,0.34375,0.0,1.0
a44ae452fb77059c6db54187dbc862ca161f05a9,"Merge if && blocks, bugfix",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-09-02 15:33:42-04:00,14400,2013-09-02 15:33:42-04:00,14400,True,False,"['environment.py', 'javamethod.py']",['6ec944907523e76ff504037e8f71a3ace232488e'],3,12,15,2,0.0,0.0,1.0
bc8df5410f4e60919ecb7e931945d67541209ee8,Fix while loop duplication,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-09-03 21:27:32-04:00,14400,2013-09-03 21:27:32-04:00,14400,True,False,['structuring.py'],['a44ae452fb77059c6db54187dbc862ca161f05a9'],7,17,24,1,0.7777777777777778,0.0,1.0
ebe2a66f83426aba139b2a53bdd4e85d7d7faefc,Create directory for output if specified path doesn't exist,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-09-30 22:16:29-04:00,14400,2013-09-30 22:16:29-04:00,14400,True,False,['decompile.py'],['bc8df5410f4e60919ecb7e931945d67541209ee8'],0,3,3,1,,,
364d0aeaf8160164c93d1bd8b78b9271e29c8019,Filename sanitization and collision resolution on Windows,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-10-13 16:19:36-04:00,14400,2013-10-13 16:19:36-04:00,14400,True,False,"['script_util.py', 'README.TXT', 'assemble.py', 'decompile.py', 'disassemble.py']",['ebe2a66f83426aba139b2a53bdd4e85d7d7faefc'],54,107,161,5,1.0,0.7368421052631579,0.9210526315789473
0147b716c64b15d7b2324c34eee09fce5555df48,Assertion tweaks in ExceptionSet,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-10-13 16:31:33-04:00,14400,2013-10-13 16:31:33-04:00,14400,True,False,['exceptionset.py'],['364d0aeaf8160164c93d1bd8b78b9271e29c8019'],3,3,6,1,,,
02cd99c76ca7129efdd5718023ab63cf6b9ff907,Fix bug when outpath for decompilation is None,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-10-26 11:38:38-04:00,14400,2013-10-26 11:38:38-04:00,14400,True,False,['decompile.py'],['0147b716c64b15d7b2324c34eee09fce5555df48'],3,0,3,1,,,
6d6beccfec0679d8da585e89ddca26088f55a840,Hopefully fix OS detection for macs,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-12-01 02:59:33-05:00,18000,2013-12-01 02:59:33-05:00,18000,True,False,['script_util.py'],['02cd99c76ca7129efdd5718023ab63cf6b9ff907'],1,2,3,1,1.0,1.0,1.0
9b3160fdb2a28c5601a42fe4353187f58c6741c5,Fix incorrect file extension for disassembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2013-12-01 11:25:27-05:00,18000,2013-12-01 11:25:27-05:00,18000,True,False,['disassemble.py'],['6d6beccfec0679d8da585e89ddca26088f55a840'],1,1,2,1,,,
0a91c69384944541555e2c4cec1d064414fed337,documentation,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-01-08 10:06:06-05:00,18000,2014-01-08 10:06:06-05:00,18000,True,False,"['assembler.txt', 'multipleclasses.j']",['9b3160fdb2a28c5601a42fe4353187f58c6741c5'],0,98,98,2,,,
05074effc5d0ee999a0c931ce5978c71356ec624,Prevent creation of legacy device names under Windows,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-01-10 00:46:38-05:00,18000,2014-01-10 00:46:38-05:00,18000,True,False,['script_util.py'],['0a91c69384944541555e2c4cec1d064414fed337'],0,9,9,1,1.0,0.0,1.0
4239b5961ecd6367d98fa8e2da28f64f2ef77580,Add warning for passing the wrong file to assembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-01-10 11:47:17-05:00,18000,2014-01-10 11:47:17-05:00,18000,True,False,"['script_util.py', 'assemble.py']",['05074effc5d0ee999a0c931ce5978c71356ec624'],2,8,10,2,1.0,1.0,0.0
812c687bb8d772f6572dca456cd32cab4b126d94,Add option to skip classes on error,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-01-10 21:52:04-05:00,18000,2014-01-10 21:52:04-05:00,18000,True,False,['decompile.py'],['4239b5961ecd6367d98fa8e2da28f64f2ef77580'],4,15,19,1,0.0,0.0,0.0
3a1ea1fbca71c02765db9485291d3c80eec2094e,Fix unicode print in environment,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-01-13 19:09:03-05:00,18000,2014-01-13 19:09:03-05:00,18000,True,False,['environment.py'],['812c687bb8d772f6572dca456cd32cab4b126d94'],2,2,4,1,,,
b0929533ffa0bb2b6b5bb55fc4f38da2ab85a870,Change error to unicode,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-01-14 10:35:15-05:00,18000,2014-01-14 10:35:15-05:00,18000,True,False,['error.py'],['3a1ea1fbca71c02765db9485291d3c80eec2094e'],1,1,2,1,,,
2219a2a71527672e174a2bb2cbf9620caa3b870c,Performance improvements in structuring,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-01-15 23:46:27-05:00,18000,2014-01-16 00:52:20-05:00,18000,True,False,['structuring.py'],['b0929533ffa0bb2b6b5bb55fc4f38da2ab85a870'],151,221,372,1,1.0,0.6206896551724138,1.0
e676d220e2e03f681584e8a6bd65b27c35c71c30,More performance improvements in structuring,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-01-16 11:25:28-05:00,18000,2014-01-16 11:25:28-05:00,18000,True,False,"['structuring.py', 'decompile.py']",['2219a2a71527672e174a2bb2cbf9620caa3b870c'],34,35,69,2,0.0,0.5,0.0
f47fadf2e5be8bec2d18718b038be2c7f57cabab,Slight speedup in variable graph,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-01-16 12:01:06-05:00,18000,2014-01-16 12:01:06-05:00,18000,True,False,['variablegraph.py'],['e676d220e2e03f681584e8a6bd65b27c35c71c30'],15,20,35,1,0.3333333333333333,0.3333333333333333,0.6666666666666666
04c5923aa5b38518af8931a755adb369f076a8a2,Remove unused file,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-01-16 20:18:51-05:00,18000,2014-01-16 20:18:51-05:00,18000,True,False,['printer.py'],['f47fadf2e5be8bec2d18718b038be2c7f57cabab'],261,0,261,1,0.8260869565217391,0.8985507246376812,0.28502415458937197
7860805d27d218c1717e7d4030fc80635db34bfa,Expand float test and fix bug,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-02-01 09:38:13-05:00,18000,2014-02-01 09:58:53-05:00,18000,True,False,"['ast.py', 'floattest.class', 'floattest.java']",['04c5923aa5b38518af8931a755adb369f076a8a2'],16,43,59,3,0.0,1.0,1.0
15be15c4eaf9df470fd26a3e710aab4aa3e2e799,More compact representation for float literals,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-02-01 10:37:21-05:00,18000,2014-02-01 10:37:21-05:00,18000,True,False,"['ast.py', 'floattest.class', 'floattest.java']",['7860805d27d218c1717e7d4030fc80635db34bfa'],0,13,13,3,0.0,0.0,1.0
b192d5cff17ea248ec4792fb40ab67594a74856f,Improve boolization,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-02-01 21:23:55-05:00,18000,2014-02-02 00:05:44-05:00,18000,True,False,"['boolize.py', 'javamethod.py', 'runtests.py']",['15be15c4eaf9df470fd26a3e710aab4aa3e2e799'],113,106,219,3,1.0,1.0,1.0
f60c931e05c1dfd139b30157e9659be71888e1a2,Remove redundant None check,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-02-02 12:07:34-05:00,18000,2014-02-02 12:07:34-05:00,18000,True,False,['boolize.py'],['b192d5cff17ea248ec4792fb40ab67594a74856f'],2,2,4,1,,,
69a3dd3f5cfd84d90a9a956317947d98147a68d6,Hopefully fix issue with non ascii directories,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-02-22 20:06:36-05:00,18000,2014-02-22 20:06:36-05:00,18000,True,False,['script_util.py'],['f60c931e05c1dfd139b30157e9659be71888e1a2'],2,3,5,1,1.0,1.0,1.0
b9b1278ca9166519c529fb98a15ddd0835122a97,lambda -> partial,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-02-22 20:09:58-05:00,18000,2014-02-22 20:09:58-05:00,18000,True,False,['script_util.py'],['69a3dd3f5cfd84d90a9a956317947d98147a68d6'],3,7,10,1,1.0,1.0,0.0
b00440733ca6ef9a9ee55e1e6457049fd21c5d62,fix otherMAkePath,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-02-23 08:33:23-05:00,18000,2014-02-23 08:33:23-05:00,18000,True,False,['script_util.py'],['b9b1278ca9166519c529fb98a15ddd0835122a97'],1,1,2,1,,,
3ad011fe7864006f819433d68dba40feec72fd3f,Make disassembler print out method bytecode length in comments,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-03-26 10:40:52-04:00,14400,2014-03-26 10:40:52-04:00,14400,True,False,['disassembler.py'],['b00440733ca6ef9a9ee55e1e6457049fd21c5d62'],47,48,95,1,0.0,0.0,0.0
630e591e33f7e3d392a963d7587210eb6d03e72c,"Fix bugs in structuring mincut, allow phantom refs in declTypeToActual",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-04-08 23:36:59-04:00,14400,2014-04-08 23:37:43-04:00,14400,True,False,"['structuring.py', 'objtypes.py']",['3ad011fe7864006f819433d68dba40feec72fd3f'],10,25,35,2,0.0,0.0,1.0
a74cc6f6d785812e04ead559f6f016a60f8535ed,remove direct calls to Constraint ctor,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-04-09 13:55:08-04:00,14400,2014-04-09 13:55:08-04:00,14400,True,False,"['obj_c.py', 'new.py', 'truncate.py']",['630e591e33f7e3d392a963d7587210eb6d03e72c'],5,5,10,3,,,
70d267a01edbeabb634880734d481ee972a132dc,Optimize blockmaker in the case of linear code,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-04-09 19:58:53-04:00,14400,2014-04-09 19:58:53-04:00,14400,True,False,"['blockmaker.py', 'graph.py', 'ssa_types.py']",['a74cc6f6d785812e04ead559f6f016a60f8535ed'],33,95,128,3,0.10810810810810811,0.10810810810810811,0.0
af5705e28f0ed89d64e7988c800287887f393e53,Optimize blockmaker for simple array intialization,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-04-09 20:37:40-04:00,14400,2014-04-09 20:37:40-04:00,14400,True,False,"['blockmaker.py', 'base.py']",['70d267a01edbeabb634880734d481ee972a132dc'],3,40,43,2,0.0,0.0,0.0
f7b6bebb5038a469eb2e7cff30b06e6fcb1ccb76,Prevent negative NaN,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-04-09 20:50:23-04:00,14400,2014-04-09 20:50:23-04:00,14400,True,False,['ast.py'],['af5705e28f0ed89d64e7988c800287887f393e53'],1,3,4,1,,,
84e2fe6923fbc5dca6c7f4a36542a107d8a84bff,Small performance improvement on cpython,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-04-10 01:53:49-04:00,14400,2014-04-10 01:53:49-04:00,14400,True,False,['variablegraph.py'],['f7b6bebb5038a469eb2e7cff30b06e6fcb1ccb76'],1,3,4,1,0.0,0.0,1.0
5960ea1e4f1a8635d1aa21e66fdf99a5652cd664,minor formatting,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-04-10 13:50:41-04:00,14400,2014-04-10 13:50:41-04:00,14400,True,False,['graph_util.py'],['84e2fe6923fbc5dca6c7f4a36542a107d8a84bff'],4,3,7,1,,,
027035d4aa4df14a43ff264c9171286a3e44c146,Remove optimistic variable propagation since it didn't lead to benefits in practice,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-04-09 17:06:51-04:00,14400,2014-04-10 14:28:45-04:00,14400,True,False,['variablegraph.py'],['5960ea1e4f1a8635d1aa21e66fdf99a5652cd664'],33,3,36,1,1.0,0.96,0.08
ed96f5aa65ea83f2287aee61a1cfe747f0fab7a3,Add readme note about Java 8,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-04-12 21:40:07-04:00,14400,2014-04-12 21:40:07-04:00,14400,True,False,['README.TXT'],['027035d4aa4df14a43ff264c9171286a3e44c146'],0,5,5,1,,,
25bd1b98c27842f3ae5d9d720d11ad83cd3cd4a3,Remove unused plugin stuff,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-04-12 21:43:53-04:00,14400,2014-04-12 21:43:53-04:00,14400,True,False,['decompile.py'],['ed96f5aa65ea83f2287aee61a1cfe747f0fab7a3'],36,23,59,1,1.0,0.16666666666666666,0.16666666666666666
e0ddce3d3f56b403c80edd0a3f298a7c1fb3a248,Change dict to object for slight speedup,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-04-14 11:38:26-04:00,14400,2014-04-14 11:38:26-04:00,14400,True,False,['blockmaker.py'],['25bd1b98c27842f3ae5d9d720d11ad83cd3cd4a3'],47,51,98,1,1.0,1.0,0.375
49f4d1f717f9ddf970665d3feab4cffb283b205e,inline getChildren since it's a genexpr anyway,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-04-14 12:18:25-04:00,14400,2014-04-14 12:18:25-04:00,14400,True,False,['graph_util.py'],['e0ddce3d3f56b403c80edd0a3f298a7c1fb3a248'],2,1,3,1,1.0,1.0,0.0
bb7fcab2511f3af7eed7f0fe8a25e7778cf31e6a,Fix bug in switch structuring,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-05-01 13:07:29-04:00,14400,2014-05-01 13:07:29-04:00,14400,True,False,"['structuring.py', '__init__.py', 'ControlFlow.class', 'ControlFlow.j']",['49f4d1f717f9ddf970665d3feab4cffb283b205e'],41,106,147,4,0.19047619047619047,0.19047619047619047,0.9523809523809523
2b0265084275f4202bdbf99e8a449bdc42ea559d,Make literal printing independent of int\long,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-01 07:59:03-07:00,25200,2014-06-01 07:59:03-07:00,25200,True,False,['ast.py'],['bb7fcab2511f3af7eed7f0fe8a25e7778cf31e6a'],4,2,6,1,1.0,1.0,1.0
d591c9f25021c4cf5d36e50bdf3cb10649fd5389,Remove wildcard imports,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-01 09:36:01-07:00,25200,2014-06-01 09:36:01-07:00,25200,True,False,"['descriptors.py', 'inference_verifier.py']",['2b0265084275f4202bdbf99e8a449bdc42ea559d'],6,8,14,2,,,
20ee7b304d1fe0dde9bc516d08c0307ec5e90a29,Remove argument tuple unpacking in constant pool,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-01 09:41:24-07:00,25200,2014-06-01 09:41:24-07:00,25200,True,False,['constant_pool.py'],['d591c9f25021c4cf5d36e50bdf3cb10649fd5389'],34,34,68,1,,,
00c4b8c7b53e7cb6eccc5acd4a5aa4eead70a568,"Fix more tuple unpacking, binary file open",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-01 10:04:35-07:00,25200,2014-06-01 10:04:35-07:00,25200,True,False,"['constant_pool.py', 'stdcache.py', 'assemble.py']",['20ee7b304d1fe0dde9bc516d08c0307ec5e90a29'],6,7,13,3,1.0,1.0,0.0
ba4acf6d7a05a381f83b2018af6b14553e31ad14,Add -q option to reduce logging of assembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-07 15:21:54-07:00,25200,2014-06-07 15:21:54-07:00,25200,True,False,"['script_util.py', 'README.TXT', 'assemble.py']",['00c4b8c7b53e7cb6eccc5acd4a5aa4eead70a568'],14,25,39,3,1.0,1.0,1.0
ed38c0cdfc24b25fd27e4e74c4cd2bc91b10872d,Stupid bug fix,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-07 16:16:18-07:00,25200,2014-06-07 16:16:18-07:00,25200,True,False,['constant_pool.py'],['ba4acf6d7a05a381f83b2018af6b14553e31ad14'],1,1,2,1,,,
87e4e9e5b3399b52b6fddbea86fba7226482bcf1,Add swap loop test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-08 13:52:08-07:00,25200,2014-06-08 13:52:08-07:00,25200,True,False,"['__init__.py', 'SwapLoopTest.class', 'SwapLoopTest.j']",['ed38c0cdfc24b25fd27e4e74c4cd2bc91b10872d'],0,45,45,3,,,
3afa3746084203b16dca93cf3f39d6bada540c43,temporary fix to variable merging bug,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-08 23:02:02-07:00,25200,2014-06-08 23:05:23-07:00,25200,True,False,"['astgen.py', 'javamethod.py', 'variablemerge.py', 'blockmaker.py', 'graph.py', 'new.py']",['87e4e9e5b3399b52b6fddbea86fba7226482bcf1'],118,40,158,6,1.0,1.0,0.2028985507246377
f670c7080ed596abb7cb65d522a5129c1fe268a9,Improved variable merging,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-16 23:02:20-07:00,25200,2014-06-16 23:02:20-07:00,25200,True,False,"['javamethod.py', 'mergevariables.py', 'graph.py', 'runtests.py']",['3afa3746084203b16dca93cf3f39d6bada540c43'],6,410,416,4,0.4788732394366197,0.43661971830985913,0.6126760563380281
beb92ca7b388844ded991c4461f9df6dd769c97b,Fix CFG generation,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-17 23:06:55-07:00,25200,2014-06-17 23:06:55-07:00,25200,True,False,"['cfg.py', 'mergevariables.py']",['f670c7080ed596abb7cb65d522a5129c1fe268a9'],240,241,481,2,0.23529411764705882,0.9411764705882353,0.0
e90d4874e90faf7d9245a5a44ae96bc83b88d99a,Make var merging much more efficient,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-19 22:55:06-07:00,25200,2014-06-19 22:55:06-07:00,25200,True,False,"['cfg.py', 'javamethod.py', 'mergevariables.py']",['beb92ca7b388844ded991c4461f9df6dd769c97b'],216,298,514,3,0.12,0.0,0.0
fd9d1546a36b22440ecbef1be7a4fffdcc1f7108,Fix CFG and add future test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-20 22:12:43-07:00,25200,2014-06-20 22:12:43-07:00,25200,True,False,"['cfg.py', 'javamethod.py', 'mergevariables.py', 'WhileLoops.class', 'WhileLoops.java']",['e90d4874e90faf7d9245a5a44ae96bc83b88d99a'],23,59,82,5,0.1,0.6666666666666666,0.7
09838bbbd06ebbb660aaed662ded678891bdb43b,batch var replacement,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-20 23:53:45-07:00,25200,2014-06-20 23:53:45-07:00,25200,True,False,"['cfg.py', 'mergevariables.py', 'README.TXT']",['fd9d1546a36b22440ecbef1be7a4fffdcc1f7108'],19,34,53,3,0.45454545454545453,1.0,1.0
5d55f1b28df826f74deaf3fd9c443fc2c70b1dba,More optimizations to variable merging,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-21 16:58:34-07:00,25200,2014-06-21 16:58:34-07:00,25200,True,False,"['cfg.py', 'mergevariables.py']",['09838bbbd06ebbb660aaed662ded678891bdb43b'],67,73,140,2,0.9047619047619048,0.9047619047619048,0.7619047619047619
8d69020e1c4d309f13bd1ed96b68da08a99f136c,0 - x -> -x,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-21 19:10:37-07:00,25200,2014-06-21 19:10:37-07:00,25200,True,False,['javamethod.py'],['5d55f1b28df826f74deaf3fd9c443fc2c70b1dba'],2,1,3,1,,,
673cf34acde58b9f0e671979a8cf558a70668ff4,Fix array bugs,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-22 01:03:43-07:00,25200,2014-06-22 01:13:39-07:00,25200,True,False,"['astgen.py', 'javamethod.py', 'blockmaker.py', 'objtypes.py', 'array.py', 'invoke.py', 'ArrayTest.class', 'ArrayTest.java']",['8d69020e1c4d309f13bd1ed96b68da08a99f136c'],23,42,65,8,0.0,0.0,0.6666666666666666
dc3f882e6a0b6fb93a335079dc035bf0a68835ed,Fix boolization and array store bugs,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-22 12:35:05-07:00,25200,2014-06-22 12:35:05-07:00,25200,True,False,"['ast.py', 'boolize.py', 'obj_c.py', 'array.py', 'ArrayTest.class', 'BoolizeTest.class', 'ArrayTest.java', 'BoolizeTest.java']",['673cf34acde58b9f0e671979a8cf558a70668ff4'],80,65,145,8,0.0,0.0,0.0
4f4f3ad06e9afda8f960167acf427f2fb4125c1c,Remove expensive assert,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-27 22:41:56-07:00,25200,2014-06-27 22:41:56-07:00,25200,True,False,"['structuring.py', 'graph.py']",['dc3f882e6a0b6fb93a335079dc035bf0a68835ed'],2,2,4,2,0.0,0.0,1.0
bebe240d60c365c2dd1f3156c5b6d7ceb4f7f313,Code cleanups,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-28 08:59:10-07:00,25200,2014-06-28 08:59:10-07:00,25200,True,False,"['astgen.py', 'boolize.py', 'blockmaker.py', 'objtypes.py']",['4f4f3ad06e9afda8f960167acf427f2fb4125c1c'],30,31,61,4,1.0,1.0,1.0
996abe81d3bac58532b2219168a0a0b7d847c243,pylinting,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-28 09:23:07-07:00,25200,2014-06-28 09:23:07-07:00,25200,True,False,"['classfile.py', 'boolize.py', 'cfg.py', 'javamethod.py', 'mergevariables.py', 'method.py', '__init__.py']",['bebe240d60c365c2dd1f3156c5b6d7ceb4f7f313'],29,25,54,7,0.0,0.0,0.0
ef125ee899d4c7d5606a893616d2d4ea09886e2c,more pylinting,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-28 11:00:39-07:00,25200,2014-06-28 11:00:39-07:00,25200,True,False,"['__init__.py', 'assembler.py', 'disassembler.py', 'parse.py', 'attributes_raw.py', 'binUnpacker.py', 'bytecode.py', 'field.py', 'floatutil.py', 'setree.py', 'structuring.py', '__init__.py', 'float_c.py', 'ifcmp.py', 'switch.py', 'bitwise_util.py', 'convert.py', 'imath.py', 'inference_verifier.py', 'verifier_types.py', 'pylintrc']",['996abe81d3bac58532b2219168a0a0b7d847c243'],132,124,256,21,1.0,1.0,0.5
dee9f65d618e10b823cf263059e9d3df55226e2c,Delete constraint debug printing code,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-29 09:39:26-07:00,25200,2014-06-29 09:39:26-07:00,25200,True,False,"['cfg.py', 'float_c.py', 'int_c.py', 'obj_c.py']",['ef125ee899d4c7d5606a893616d2d4ea09886e2c'],54,4,58,4,0.02564102564102564,0.02564102564102564,0.0
1cbe8fc387f236cd367c4a9a8cc48c500c6f6085,Improve large static array handling and remove runtime array length analysis,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-29 10:25:47-07:00,25200,2014-06-29 10:25:47-07:00,25200,True,False,"['blockmaker.py', 'obj_c.py', 'graph.py', 'array.py', 'new.py']",['dee9f65d618e10b823cf263059e9d3df55226e2c'],60,42,102,5,1.0,1.0,0.7647058823529411
e94b8a7e03b1c7f950cda6eede19fb97f03c6fa5,Remove unecessary var type interning,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-29 10:44:40-07:00,25200,2014-06-29 10:44:40-07:00,25200,True,False,['graph.py'],['1cbe8fc387f236cd367c4a9a8cc48c500c6f6085'],12,3,15,1,0.2222222222222222,0.1111111111111111,0.0
9e9cfa6ea4c78aff0c69d678df999e4c6a1083cb,Fix java cfg bug and improve performance,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-29 11:34:50-07:00,25200,2014-06-29 11:34:50-07:00,25200,True,False,['cfg.py'],['e94b8a7e03b1c7f950cda6eede19fb97f03c6fa5'],18,20,38,1,1.0,0.5,0.5
1f4020cde9e7f5b78f64dc4f8c7e85222a728383,Add -path info to readme,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-29 15:19:08-07:00,25200,2014-06-29 15:19:08-07:00,25200,True,False,['README.TXT'],['9e9cfa6ea4c78aff0c69d678df999e4c6a1083cb'],1,2,3,1,,,
9078336ab60455c3bdb9e37580bded9110fb13ed,Add more comments explaining the verifier issue,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-06-29 22:18:02-07:00,25200,2014-06-29 22:18:02-07:00,25200,True,False,['inference_verifier.py'],['1f4020cde9e7f5b78f64dc4f8c7e85222a728383'],4,7,11,1,,,
ed35be52714b6fb30a21e1eb92f8fc6d0311be4f,Complete rewrite of SSA graph generation,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-07-03 20:45:54-07:00,25200,2014-07-03 21:08:30-07:00,25200,True,False,"['graphproxy.py', 'blockmaker.py', 'functionbase.py', 'graph.py', 'ifcmp.py', 'onexception.py', 'phi.py', 'ssa_types.py', 'subproc.py', 'variablegraph.py', 'inference_verifier.py', 'verifier_types.py']",['9078336ab60455c3bdb9e37580bded9110fb13ed'],604,522,1126,12,1.0,1.0,0.0
7637a95dd681e25ca738d0bf69907ceb24f543d7,performance tweaks,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-07-03 22:24:42-07:00,25200,2014-07-03 22:24:42-07:00,25200,True,False,"['blockmaker.py', 'graph.py', 'variablegraph.py']",['ed35be52714b6fb30a21e1eb92f8fc6d0311be4f'],13,13,26,3,0.0,0.0,1.0
7b911fe9f992cfd68307a2b2c062dba8e437ff63,Add test for Procyon to try catch test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-07-03 23:31:27-07:00,25200,2014-07-03 23:33:22-07:00,25200,True,False,"['runtests.py', 'TryCatchTest.class', 'TryCatchTest.java']",['7637a95dd681e25ca738d0bf69907ceb24f543d7'],27,43,70,3,0.0,1.0,1.0
c3777454549546061c9f9d54e83710655d4c9dcc,Improved ordering of early exit if statements,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-07-04 01:04:03-07:00,25200,2014-07-04 01:04:03-07:00,25200,True,False,['javamethod.py'],['7b911fe9f992cfd68307a2b2c062dba8e437ff63'],7,20,27,1,0.0,0.0,1.0
c235d4b0ce217959afeb7a8449e2ecedc4cceeff,Assume no linkage errors in field access,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-07-04 11:21:38-07:00,25200,2014-07-04 11:21:38-07:00,25200,True,False,"['graphproxy.py', 'javamethod.py', 'blockmaker.py', 'fieldaccess.py', 'tryreturn.py']",['c3777454549546061c9f9d54e83710655d4c9dcc'],11,19,30,5,0.8571428571428571,0.8571428571428571,0.7142857142857143
c91d3c1c2d3abdd07d2b967c15f07f05eb4c7ea9,Fix race condition calling os.makedirs,Kevin Cernekee,cernekee@gmail.com,Kevin Cernekee,cernekee@gmail.com,2014-09-07 15:00:14-07:00,25200,2014-09-07 15:00:14-07:00,25200,True,False,['script_util.py'],['c235d4b0ce217959afeb7a8449e2ecedc4cceeff'],3,8,11,1,1.0,1.0,1.0
3acc4cfe1634feea2d9d9c6c94ce0aff7d92ee99,Allow output to zip/jar file,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-09-23 22:37:55-07:00,25200,2014-09-23 22:37:55-07:00,25200,True,False,"['script_util.py', 'README.TXT', 'assemble.py', 'decompile.py', 'disassemble.py']",['c235d4b0ce217959afeb7a8449e2ecedc4cceeff'],43,70,113,5,1.0,1.0,0.0
0309e9ef6cccbbe877c899dea352263d04c87492,Escape field names before printing,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-09-23 22:46:54-07:00,25200,2014-09-23 22:46:54-07:00,25200,True,False,['ast.py'],['3acc4cfe1634feea2d9d9c6c94ce0aff7d92ee99'],1,3,4,1,1.0,1.0,0.0
1fdf165518b2cf02761a2b10ae7fa9ac5778f66f,Add visitor callback to AST printing,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-09-24 23:09:54-07:00,25200,2014-09-24 23:09:54-07:00,25200,True,False,"['ast.py', 'ast2.py', 'astgen.py', 'javaclass.py', 'javamethod.py', 'decompile.py']",['e83450346568029a53fcc26de936b9469cdf6cac'],73,104,177,6,0.2608695652173913,0.9130434782608695,0.0
f513151c906204aa5f9d3f1fc36daf27dcdab2b5,Fix bug in boolization,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-09-28 11:44:51-07:00,25200,2014-09-28 11:44:51-07:00,25200,True,False,"['boolize.py', '__init__.py', 'ArgumentTypes.class', 'ArgumentTypes.java']",['1fdf165518b2cf02761a2b10ae7fa9ac5778f66f'],3,11,14,4,0.5,1.0,1.0
4e3fce2813010ee9c8701992d399ab84514c9f1f,Fix initialization of longs,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-10-17 20:40:57-07:00,25200,2014-10-17 20:40:57-07:00,25200,True,False,"['javamethod.py', '__init__.py', 'ConditionalTest.class', 'ConditionalTest.java']",['f513151c906204aa5f9d3f1fc36daf27dcdab2b5'],0,41,41,4,0.11764705882352941,1.0,1.0
6168755a64e85fd64b5e86b42ee550cac84348e7,Simplify casted literals,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-10-17 21:19:39-07:00,25200,2014-10-17 21:19:39-07:00,25200,True,False,"['ast.py', 'astgen.py', 'javamethod.py', 'ConditionalTest.class', 'ConditionalTest.java']",['4e3fce2813010ee9c8701992d399ab84514c9f1f'],3,31,34,5,0.0,0.55,0.65
8c1a2fd9a6acf63f6bcef3dc4e89c19ac02416fd,Fix os detection with cygwin,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-10-29 22:23:40-07:00,25200,2014-10-29 22:23:40-07:00,25200,True,False,['script_util.py'],['6168755a64e85fd64b5e86b42ee550cac84348e7'],1,1,2,1,,,
24af6d8cd7a12690968778508f04bac50e65b283,Move visitor to seperate file,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-09 14:22:21-08:00,28800,2014-11-09 14:22:21-08:00,28800,True,False,"['visitor.py', 'decompile.py']",['8c1a2fd9a6acf63f6bcef3dc4e89c19ac02416fd'],10,10,20,2,,,
16e87f66254fb2d68e764c813e0b7bf9f7ba6b65,Improve error skipping and expose it via commandline flag,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-11 22:51:06-08:00,28800,2014-11-11 22:51:06-08:00,28800,True,False,"['ast2.py', 'javaclass.py', 'README.TXT', 'decompile.py']",['24af6d8cd7a12690968778508f04bac50e65b283'],27,43,70,4,1.0,1.0,0.5714285714285714
a4ea26e5391e77309ed8c2e731b07f6e50f05809,Experimental AST serialization support,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-13 22:10:54-08:00,28800,2014-11-13 22:10:54-08:00,28800,True,False,"['ast.py', 'ast2.py', 'visitor.py']",['16e87f66254fb2d68e764c813e0b7bf9f7ba6b65'],1,92,93,3,1.0,1.0,0.07547169811320754
c8b3c277fb95a5b85234fdd037fe45d0776406c0,Add test for try with resources,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-15 17:13:39-08:00,28800,2014-11-15 17:16:16-08:00,28800,True,False,"['__init__.py', 'TryWithResources.class', 'TryWithResources.java', 'UnicodeTest.java']",['a4ea26e5391e77309ed8c2e731b07f6e50f05809'],3,65,68,4,1.0,1.0,1.0
9c4eddcb8a899da674457b92c34f4a7404f55f33,Fix unreachable break/continue generation,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-16 23:05:50-08:00,28800,2014-11-16 23:05:50-08:00,28800,True,False,"['ast.py', 'astgen.py', 'javamethod.py']",['c8b3c277fb95a5b85234fdd037fe45d0776406c0'],36,81,117,3,0.058823529411764705,0.058823529411764705,0.0
97b19ddb4d2584a3edaf37c62862ba6461010c15,Expose break labels in tree output,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-17 21:55:47-08:00,28800,2014-11-17 21:55:47-08:00,28800,True,False,['ast.py'],['9c4eddcb8a899da674457b92c34f4a7404f55f33'],10,12,22,1,1.0,1.0,0.0
4843e8486a67a7324892f8aaba3974264f8e9652,Minor cleanup of merge single successors,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-17 23:35:50-08:00,28800,2014-11-17 23:35:50-08:00,28800,True,False,['graph.py'],['97b19ddb4d2584a3edaf37c62862ba6461010c15'],8,6,14,1,1.0,1.0,0.0
03d2b548fc2f9573b4ff62e39e8e9dae228c5a5d,Disambiguate typenames in field access tree,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-18 22:42:57-08:00,28800,2014-11-18 22:42:57-08:00,28800,True,False,['ast.py'],['4843e8486a67a7324892f8aaba3974264f8e9652'],1,1,2,1,,,
dadbe1e193b58ec374fca22ce8e37b64b2db714a,Convert throws to gotos where possible,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-18 23:48:37-08:00,28800,2014-11-18 23:48:37-08:00,28800,True,False,"['graph.py', 'decompile.py', 'TryWithResources.class', 'TryWithResources.java']",['03d2b548fc2f9573b4ff62e39e8e9dae228c5a5d'],35,68,103,4,0.0,0.0,1.0
6871e44f9d7657d2600a1c1f6401affd7a70114b,Add option to disable widening method parameter casting,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-19 00:06:10-08:00,28800,2014-11-19 00:06:10-08:00,28800,True,False,['ast.py'],['dadbe1e193b58ec374fca22ce8e37b64b2db714a'],3,5,8,1,,,
ecfb4ea28bd710088ee1771660019133dd924c40,Add space before condition in if statements,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-19 00:09:23-08:00,28800,2014-11-19 00:09:23-08:00,28800,True,False,['ast.py'],['6871e44f9d7657d2600a1c1f6401affd7a70114b'],2,2,4,1,,,
49b06de7d19f78e9245196105dce9aa572eda4aa,Fix linear time index checks in inference verifier,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-23 10:34:14-08:00,28800,2014-11-23 10:34:14-08:00,28800,True,False,['inference_verifier.py'],['ecfb4ea28bd710088ee1771660019133dd924c40'],9,14,23,1,0.3333333333333333,0.3333333333333333,0.6666666666666666
360324f0115af82c6cd8e941d8d89d1d488f3523,Begin abstracting away type tuples,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-23 17:26:40-08:00,28800,2014-11-23 17:26:40-08:00,28800,True,False,"['ast.py', 'objtypes.py']",['49b06de7d19f78e9245196105dce9aa572eda4aa'],40,51,91,2,0.0,0.5,0.0
7d39d48c26190741df5a84bd85648512422d995c,Finish abstracting out type tuples,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-23 18:49:30-08:00,28800,2014-11-23 18:49:30-08:00,28800,True,False,"['ast.py', 'ast2.py', 'astgen.py', 'boolize.py', 'javamethod.py', 'structuring.py', 'blockmaker.py', 'obj_c.py', 'exceptionset.py', 'excepttypes.py', 'objtypes.py', 'onexception.py', 'array.py', 'imath.py', 'new.py']",['360324f0115af82c6cd8e941d8d89d1d488f3523'],82,90,172,15,0.0,0.8333333333333334,1.0
cb3406d059d16547df93f005a6cc8629b0e88484,Fix absolute imports,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-23 21:35:20-08:00,28800,2014-11-23 21:35:20-08:00,28800,True,False,"['bytecode.py', 'environment.py']",['7d39d48c26190741df5a84bd85648512422d995c'],5,4,9,2,,,
0b004950edad53b817511914dca6c75926f330d6,Refactor missing class support,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-23 21:46:34-08:00,28800,2014-11-23 21:46:34-08:00,28800,True,False,"['environment.py', 'objtypes.py', 'stdcache.py']",['cb3406d059d16547df93f005a6cc8629b0e88484'],18,32,50,3,1.0,1.0,0.0
e326a12d5e45284ed35fffe03d17db3b4a41f7bf,"Remove stdcache, add interfaces to classfile",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-23 22:29:05-08:00,28800,2014-11-23 22:29:05-08:00,28800,True,False,"['classfile.py', 'environment.py', 'stdcache.py', 'README.TXT']",['0b004950edad53b817511914dca6c75926f330d6'],84,31,115,4,0.0,0.3548387096774194,0.6774193548387096
7ab15f6b73c7c3c8bac315823dfaa17360c764a0,Another type tuple fix,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-24 22:29:33-08:00,28800,2014-11-24 23:21:22-08:00,28800,True,False,"['ast.py', 'objtypes.py']",['e326a12d5e45284ed35fffe03d17db3b4a41f7bf'],2,2,4,2,,,
2914c38631c98d9412471c38bb97b30831679044,Temporary hack to reduce the interface->object issue,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-25 00:41:07-08:00,28800,2014-11-25 00:41:07-08:00,28800,True,False,"['ast.py', 'astgen.py', 'boolize.py', 'javamethod.py']",['7ab15f6b73c7c3c8bac315823dfaa17360c764a0'],5,69,74,4,0.5384615384615384,0.36538461538461536,0.36538461538461536
877bbbea843dbffe37ff50f7eeffb92b6239246e,AST serialization fixes,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2014-11-25 21:25:36-08:00,28800,2014-11-25 21:25:36-08:00,28800,True,False,['ast.py'],['2914c38631c98d9412471c38bb97b30831679044'],5,7,12,1,,,
b67e228ef38119ce74c58b03dc06b64e376d587a,fix spacing,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-01-03 12:13:41-08:00,28800,2015-01-03 12:13:41-08:00,28800,True,False,"['inference_verifier.py', 'verifier_types.py']",['877bbbea843dbffe37ff50f7eeffb92b6239246e'],4,4,8,2,,,
d981b553c03d12fdfd4b39f730c67a17c8ffc47e,Fix assertion to handle pruning of trailing invalid locals in verifier,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-01-03 12:17:50-08:00,28800,2015-01-03 12:17:50-08:00,28800,True,False,['blockmaker.py'],['b67e228ef38119ce74c58b03dc06b64e376d587a'],1,2,3,1,0.0,0.0,0.0
c6d0f2f13b0eeda7dbd65f6a2ee830fbd231497b,Fix handling of if statement with no else followed by a break,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-01-03 13:41:12-08:00,28800,2015-01-03 13:41:12-08:00,28800,True,False,"['javamethod.py', 'ConditionalTest.class', 'ConditionalTest.java']",['d981b553c03d12fdfd4b39f730c67a17c8ffc47e'],1,61,62,3,0.125,0.9642857142857143,1.0
a80d3751c38a6410e646c894ac05b5181f8442d2,remove bad assertion,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-01-03 13:56:52-08:00,28800,2015-01-03 13:56:52-08:00,28800,True,False,['boolize.py'],['c6d0f2f13b0eeda7dbd65f6a2ee830fbd231497b'],1,0,1,1,0.0,0.0,0.0
5fbffa46c0a2afb30f4263efe074285f27a76444,Improve if else with early throw/return simplification,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-01-07 23:48:14-08:00,28800,2015-01-07 23:48:14-08:00,28800,True,False,['javamethod.py'],['a80d3751c38a6410e646c894ac05b5181f8442d2'],5,19,24,1,1.0,0.0,1.0
aeebb6e877dcb2564d162b3cb3532a3493f5eeff,Add test for exception handlers,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-01-10 23:43:22-08:00,28800,2015-01-10 23:43:22-08:00,28800,True,False,"['__init__.py', 'ExceptionHandlers.class', 'ExceptionHandlers.j']",['5fbffa46c0a2afb30f4263efe074285f27a76444'],0,268,268,3,,,
6221069bfb4d77ab85fe45f9b4b177cc3c893651,Add throws declaration option for testing purposes,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-01-11 01:00:37-08:00,28800,2015-01-11 10:56:46-08:00,28800,True,False,"['ast2.py', 'javaclass.py', 'throws.py', 'graph.py', 'decompile.py', 'runtests.py', 'ExceptionHandlers.class', 'ExceptionHandlers.j']",['aeebb6e877dcb2564d162b3cb3532a3493f5eeff'],9,65,74,8,0.0,0.0,0.8571428571428571
a3715a9dce8fe4c95e92fa9498561f354c7cf5ef,Move dual inedge splitting to ssa graph,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-01-11 11:29:46-08:00,28800,2015-01-11 12:38:40-08:00,28800,True,False,"['graphproxy.py', 'javamethod.py', 'graph.py', 'phi.py']",['6221069bfb4d77ab85fe45f9b4b177cc3c893651'],0,44,44,4,0.0,0.0,0.9705882352941176
865e6f692d0a05c79e822ba606e890d0ea132d29,"Pass optimize=1 to lexer, even though it doesn't seem to make a difference in practice",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-01-12 23:00:38-08:00,28800,2015-01-12 23:00:38-08:00,28800,True,False,"['.gitignore', 'inference_verifier.py', 'README.TXT', 'assemble.py']",['a3715a9dce8fe4c95e92fa9498561f354c7cf5ef'],6,11,17,4,1.0,1.0,0.0
2219640387092392c14be85c2cc461a1eae87d5a,Remove subprocs from ControlFlow test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-02-08 18:08:12-08:00,28800,2015-02-08 18:08:12-08:00,28800,True,False,"['graph.py', 'ControlFlow.class', 'ControlFlow.j']",['865e6f692d0a05c79e822ba606e890d0ea132d29'],25,76,101,3,,,
a5730780e1ce58505223ec594c9e4ee3efc9fa69,Add more JSR tests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-02-08 18:48:36-08:00,28800,2015-02-08 18:48:36-08:00,28800,True,False,"['graph.py', '__init__.py', 'SkipJSR.class', 'SkipJSR.j']",['2219640387092392c14be85c2cc461a1eae87d5a'],7,98,105,4,,,
de3a047613a8e1ce4d15e48c7560b1a725a4ba21,Factor out region duplication code in ssa graph,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-02-08 22:41:50-08:00,28800,2015-02-08 22:42:53-08:00,28800,True,False,"['graph.py', 'goto.py', 'onexception.py', 'subproc.py']",['a5730780e1ce58505223ec594c9e4ee3efc9fa69'],33,46,79,4,1.0,1.0,0.0
b235b4620aa487fb4e96eef3878e64c4ee87d141,Move irregular loop fixing to ssa graph,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-02-08 23:39:25-08:00,28800,2015-02-08 23:39:25-08:00,28800,True,False,"['javamethod.py', 'structuring.py', 'graph.py', 'switch.py']",['de3a047613a8e1ce4d15e48c7560b1a725a4ba21'],5,51,56,4,0.1282051282051282,0.10256410256410256,0.9230769230769231
b83f8082fd957234b445f4095361b753220c44c4,Fix stupid mistake in assembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-03-04 22:44:27-08:00,28800,2015-03-04 22:44:27-08:00,28800,True,False,['parse.py'],['b235b4620aa487fb4e96eef3878e64c4ee87d141'],1,1,2,1,,,
408ccbdf568118c870d62bbfcda6e2d0a45389a4,Add comment line to top of test source files,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-03-22 16:32:43-07:00,25200,2015-03-22 16:32:43-07:00,25200,True,False,"['ArgumentTypes.java', 'ArrayTest.java', 'BadInnerTest.j', 'BoolizeTest.java', 'ConditionalTest.java', 'ControlFlow.j', 'DoubleEdge.j', 'DuplicateInit.j', 'ExceptionHandlers.j', 'NullInference.java', 'OddsAndEnds.java', 'OldVersionTest.j', 'SkipJSR.j', 'StaticInitializer.java', 'SwapLoopTest.j', 'Switch.java', 'Synchronized.java', 'TryCatchTest.java', 'TryWithResources.java', 'UnicodeTest.java', 'WhileLoops.java', 'floattest.java', 'splitnew.java']",['b83f8082fd957234b445f4095361b753220c44c4'],14,39,53,23,,,
c3471f6502be3645e15a44746ac3cc52962dfb28,Add option to print out entire constant pool when disassembling,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-03-22 17:05:16-07:00,25200,2015-03-22 17:05:16-07:00,25200,True,False,"['disassembler.py', 'README.TXT', 'assemble.py', 'disassemble.py']",['408ccbdf568118c870d62bbfcda6e2d0a45389a4'],11,18,29,4,1.0,0.0,0.0
136baced7bdbb08a01454f0f66dceba089852a84,Remove check for bytecode length,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-03-29 00:02:20-07:00,25200,2015-03-29 00:03:14-07:00,25200,True,False,['method.py'],['c3471f6502be3645e15a44746ac3cc52962dfb28'],2,2,4,1,1.0,1.0,1.0
7c2e4050199b25b8963b0ea44c03098631bf4f3b,Update copyright,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-03-29 10:14:55-07:00,25200,2015-03-29 10:14:55-07:00,25200,True,False,['script_util.py'],['136baced7bdbb08a01454f0f66dceba089852a84'],1,1,2,1,,,
4c9dcde491b6a0a5bbcfb1446352f2174eb24217,Update ast json format.,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-06-04 22:59:02-07:00,25200,2015-06-04 22:59:02-07:00,25200,True,False,['ast.py'],['7c2e4050199b25b8963b0ea44c03098631bf4f3b'],15,16,31,1,0.0,0.0,1.0
88803a09753c75edfe057678bf23d21c083edd04,Add shebang for directly running script on UNIX,Andrew Chen,llkiwi2006@gmail.com,Andrew Chen,llkiwi2006@gmail.com,2015-06-20 13:03:46+12:00,-43200,2015-06-20 13:03:46+12:00,-43200,True,False,"['assemble.py', 'decompile.py', 'disassemble.py', 'runtests.py']",['4c9dcde491b6a0a5bbcfb1446352f2174eb24217'],0,4,4,4,,,
169ce41d7a5618b2d8e4d8c8486c47278e854c1d,Update AST JSON format),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-05 23:02:32-07:00,25200,2015-07-05 23:02:32-07:00,25200,True,False,"['ast.py', 'ast2.py']",['f143f9dce5417db41b07c685cc52b59ee375c361'],1,2,3,2,1.0,1.0,0.0
8aacf170f64ad057b9549681e789bfd76c4a31a4,Implement constrainJumps for switches,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-15 22:25:47-07:00,25200,2015-07-15 22:25:47-07:00,25200,True,False,['switch.py'],['169ce41d7a5618b2d8e4d8c8486c47278e854c1d'],1,13,14,1,1.0,1.0,1.0
0698c4558c3bd67a929d5ea972af03b2659f3a4d,Fix unnecessary parenthesis for negative and float literals,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-15 23:04:02-07:00,25200,2015-07-15 23:04:02-07:00,25200,True,False,"['ast.py', 'javaclass.py', 'javamethod.py']",['8aacf170f64ad057b9549681e789bfd76c4a31a4'],34,53,87,3,1.0,0.8666666666666667,1.0
62ecf80b7953326297dbc4e59b60388c1f31967a,Switch to extended basic blocks for performance,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-18 15:17:34-07:00,25200,2015-07-18 15:17:34-07:00,25200,True,False,"['ast.py', 'astgen.py', 'structuring.py', 'blockmaker.py', 'graph.py', 'onexception.py', '__init__.py', 'checkcast.py', 'phi.py', 'ssa_types.py', 'variablegraph.py']",['0698c4558c3bd67a929d5ea972af03b2659f3a4d'],148,250,398,11,0.5483870967741935,0.3709677419354839,0.9354838709677419
18d83ec37ab9e90bc1f8c07ac55f359750b5f404,Fix for null values in interface inference,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-18 17:19:09-07:00,25200,2015-07-18 17:19:09-07:00,25200,True,False,"['boolize.py', 'ArgumentTypes.class', 'ArgumentTypes.java']",['62ecf80b7953326297dbc4e59b60388c1f31967a'],4,17,21,3,0.8181818181818182,1.0,1.0
cb9c17c27ad4725fc5d814eeedcb3c4aa360039a,Fix stupid bug,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-18 17:56:12-07:00,25200,2015-07-18 17:56:12-07:00,25200,True,False,['javamethod.py'],['18d83ec37ab9e90bc1f8c07ac55f359750b5f404'],1,1,2,1,,,
c9606920dab25b72db3c0390df5d381e7d4e2d6c,Allow interface inference to narrow non interface tpyes for now,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-18 20:09:40-07:00,25200,2015-07-18 20:09:40-07:00,25200,True,False,['boolize.py'],['cb9c17c27ad4725fc5d814eeedcb3c4aa360039a'],1,1,2,1,1.0,1.0,1.0
77a0af15a6b97ee12e7e3f4056185a16b013d863,Remove out of date comments,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-19 00:22:23-07:00,25200,2015-07-19 00:22:23-07:00,25200,True,False,['graph.py'],['c9606920dab25b72db3c0390df5d381e7d4e2d6c'],5,0,5,1,,,
99e0c8ac7ff74574f9a0cf8eeed913e59a851d27,Change JavaExpression.params to always be a list,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-19 11:31:00-07:00,25200,2015-07-19 11:31:00-07:00,25200,True,False,"['ast.py', 'astgen.py', 'boolize.py', 'javamethod.py']",['77a0af15a6b97ee12e7e3f4056185a16b013d863'],16,16,32,4,,,
81250cb12c3d9ed0a449616063a501981becb9ca,minor cleanup,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-19 12:21:12-07:00,25200,2015-07-19 12:21:12-07:00,25200,True,False,"['cfg.py', 'mergevariables.py']",['99e0c8ac7ff74574f9a0cf8eeed913e59a851d27'],5,7,12,2,,,
0ef5eef8bf17eef5bfee3fe1a27b09a3ae640e79,Make sure all of InstructionNode's fields are assigned in the constructor to improve performance,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-19 16:12:12-07:00,25200,2015-07-19 16:14:33-07:00,25200,True,False,['inference_verifier.py'],['81250cb12c3d9ed0a449616063a501981becb9ca'],6,24,30,1,0.0,1.0,0.0
9ce63d942fd61c8c9fac3f3dcd7b31e67d32ebcb,Fix switch statements with bool argument,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-20 22:47:56-07:00,25200,2015-07-20 23:03:22-07:00,25200,True,False,"['boolize.py', 'Switch.class', 'Switch.java']",['0ef5eef8bf17eef5bfee3fe1a27b09a3ae640e79'],3,14,17,3,0.2222222222222222,0.2222222222222222,1.0
1f4ba737f70e61cb28039079678a820694ea3e5e,Implement Switch.getSuccessorConstraints,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-20 23:05:02-07:00,25200,2015-07-20 23:05:02-07:00,25200,True,False,"['onexception.py', 'switch.py']",['9ce63d942fd61c8c9fac3f3dcd7b31e67d32ebcb'],13,23,36,2,1.0,1.0,0.2222222222222222
afce24f5220030e071b3fd84c46abe4ae4bee1d7,Try to replace 2-case switch statements with if statements,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-20 23:32:30-07:00,25200,2015-07-20 23:32:30-07:00,25200,True,False,"['graph.py', 'base.py', 'goto.py', 'ifcmp.py', 'onexception.py', 'switch.py', 'subproc.py']",['1f4ba737f70e61cb28039079678a820694ea3e5e'],7,21,28,7,0.0,0.0,0.0
bbc02bbf57cb948df686752d71f22ba055823fb6,Fixes for unicode class names,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-22 21:25:49-07:00,25200,2015-07-22 21:31:35-07:00,25200,True,False,"['script_util.py', 'decompile.py', 'disassemble.py']",['afce24f5220030e071b3fd84c46abe4ae4bee1d7'],6,6,12,3,,,
bc53dfc60ed36478c840634980b999d876cc516a,minor cleanup,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-23 21:18:54-07:00,25200,2015-07-23 21:18:54-07:00,25200,True,False,['graph.py'],['bbc02bbf57cb948df686752d71f22ba055823fb6'],5,3,8,1,0.0,0.0,0.0
fc84870548210a45ee057c90ea52be19d16fae55,Complete rewrite of constraint propagation and fix for switch simplification,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-25 14:01:59-07:00,25200,2015-07-25 14:01:59-07:00,25200,True,False,"['__init__.py', 'int_c.py', 'graph.py', 'switch.py', 'variablegraph.py', 'decompile.py', 'runtests.py']",['bc53dfc60ed36478c840634980b999d876cc516a'],248,181,429,7,0.28846153846153844,0.3076923076923077,0.4807692307692308
9d79e897d7430308bae4b17fc8e5aa23dc173e03,Move switch->if code to seperate function,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-25 14:07:14-07:00,25200,2015-07-25 14:07:14-07:00,25200,True,False,"['graph.py', 'base.py', 'goto.py', 'ifcmp.py', 'onexception.py', 'switch.py', 'subproc.py']",['fc84870548210a45ee057c90ea52be19d16fae55'],15,19,34,7,1.0,1.0,1.0
f63df3c9e1f99041b88e45314cad37704cbbba4d,Remove unused code,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-25 14:59:14-07:00,25200,2015-07-25 15:01:08-07:00,25200,True,False,"['binUnpacker.py', 'graphproxy.py', 'structuring.py', 'obj_c.py', 'exceptionset.py', 'graph.py', 'phi.py', 'placeholder.py']",['9d79e897d7430308bae4b17fc8e5aa23dc173e03'],87,6,93,8,0.6935483870967742,0.6935483870967742,0.22580645161290322
685c0652adf8bf2b3c19cd715897d1744b9c58da,Workaround for bug and improve test coverage,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-25 16:31:18-07:00,25200,2015-07-25 16:31:18-07:00,25200,True,False,"['blockmaker.py', 'obj_c.py', 'graph.py', 'ssa_types.py', 'SkipJSR.class', 'TryCatchTest.class', 'SkipJSR.j', 'TryCatchTest.java']",['f63df3c9e1f99041b88e45314cad37704cbbba4d'],9,46,55,8,0.7692307692307693,0.7692307692307693,0.9230769230769231
33ad32a6f4a475281be8a4a6526ba7ec17012b8c,Fix side effect tracking,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-25 18:31:42-07:00,25200,2015-07-25 18:31:42-07:00,25200,True,False,"['astgen.py', 'graphproxy.py', 'blockmaker.py', '__init__.py', 'monad_c.py', 'graph.py', 'array.py', 'base.py', 'checkcast.py', 'fieldaccess.py', 'fmath.py', 'imath.py', 'invoke.py', 'monitor.py', 'new.py', 'phi.py', 'throw.py', 'truncate.py', 'tryreturn.py', 'ssa_types.py', 'subproc.py', 'TryCatchTest.class', 'TryCatchTest.java']",['685c0652adf8bf2b3c19cd715897d1744b9c58da'],154,156,310,23,0.0,0.25,1.0
106ad1764c4438695e641c71ba262b0ef2a2b1b4,Add test for abstract methods,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-25 18:42:36-07:00,25200,2015-07-25 18:42:36-07:00,25200,True,False,"['floattest.class', 'floattest.java']",['33ad32a6f4a475281be8a4a6526ba7ec17012b8c'],0,2,2,2,,,
9b2e9ba5c299c8661a57534f6b9c240e256562fd,Fix failing to infer that thrown exception is non-null,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-25 21:31:49-07:00,25200,2015-07-25 21:31:49-07:00,25200,True,False,"['ast.py', 'structuring.py', 'graph.py', 'base.py', 'invoke.py']",['106ad1764c4438695e641c71ba262b0ef2a2b1b4'],5,5,10,5,0.0,0.0,1.0
07a2beb4992faac0a0ac3fd0b7ca39ed65539e18,Add explicit error message for invokedynamic,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-26 13:10:24-07:00,25200,2015-07-26 13:10:24-07:00,25200,True,False,['inference_verifier.py'],['9b2e9ba5c299c8661a57534f6b9c240e256562fd'],0,3,3,1,0.0,0.0,1.0
e5cef9549fec94bef3b4946a1ceac7d7b95fbfaa,Only check for circular inheritance if class hasn't been loaded yet,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-26 13:19:18-07:00,25200,2015-07-26 13:19:18-07:00,25200,True,False,['environment.py'],['07a2beb4992faac0a0ac3fd0b7ca39ed65539e18'],2,2,4,1,,,
71b427676f85360cea9359872164f39d255210e0,Make sure BlockProxy attributes are assigned in ctor,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-26 13:32:47-07:00,25200,2015-07-26 13:32:47-07:00,25200,True,False,"['graphproxy.py', 'structuring.py']",['e5cef9549fec94bef3b4946a1ceac7d7b95fbfaa'],5,6,11,2,0.0,1.0,1.0
8e159db82fb7aed57b44617ea49013eaa24b764e,Allow mergeSingleSuccessorBlocks to merge extended basic blocks as well,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-26 23:02:53-07:00,25200,2015-07-26 23:02:53-07:00,25200,True,False,['graph.py'],['71b427676f85360cea9359872164f39d255210e0'],36,48,84,1,0.0,0.0,1.0
3724c05ba11ff6913c01ecdfe4fde6a0f246e5db,Remove unused method,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-07-26 23:23:23-07:00,25200,2015-07-26 23:23:23-07:00,25200,True,False,['graph.py'],['8e159db82fb7aed57b44617ea49013eaa24b764e'],11,0,11,1,1.0,0.2,0.0
21ec92cea1fe15eec9f2dfe2f4d5071de499cdb6,Rewrite verifier and remove all checks for efficiency,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-01 21:58:20-07:00,25200,2015-08-01 21:58:20-07:00,25200,True,False,"['bytecode.py', 'blockmaker.py', 'inference_verifier.py', 'verifier_types.py']",['3724c05ba11ff6913c01ecdfe4fde6a0f246e5db'],790,354,1144,4,0.9485861182519281,0.9511568123393316,0.07969151670951156
f7340a06690d060e60548e4a2e22f29faabed7f6,Keep track of array lengths in verifier to try to prune array store exceptions early,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-01 23:55:53-07:00,25200,2015-08-01 23:55:53-07:00,25200,True,False,"['blockmaker.py', 'objtypes.py', 'ssa_types.py', 'inference_verifier.py', 'verifier_types.py']",['21ec92cea1fe15eec9f2dfe2f4d5071de499cdb6'],7,47,54,5,0.6129032258064516,0.6129032258064516,0.6451612903225806
6352288bdb8221694d59fa588466ddc4aacf2cab,Improve merging of exception basic blocks,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-02 00:56:02-07:00,25200,2015-08-02 00:56:02-07:00,25200,True,False,"['exceptionset.py', 'graph.py', 'decompile.py']",['f7340a06690d060e60548e4a2e22f29faabed7f6'],4,26,30,3,0.0,0.5,1.0
21e0fdc3e54ff1256365090ad40683d0198a403b,Fix bug where Switch can be shallow copied and then mutated,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-02 13:17:03-07:00,25200,2015-08-02 13:17:03-07:00,25200,True,False,"['ast.py', 'exceptionset.py', 'switch.py', 'SkipJSR.class', 'SkipJSR.j']",['6352288bdb8221694d59fa588466ddc4aacf2cab'],2,56,58,5,1.0,1.0,1.0
c8b0df226cafd7d6cce9083dfba6b1ee7e87f92c,Remove unused function,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-02 13:31:33-07:00,25200,2015-08-02 13:31:33-07:00,25200,True,False,['ssa_types.py'],['21e0fdc3e54ff1256365090ad40683d0198a403b'],3,0,3,1,0.0,0.0,0.0
7ca76bd76ec83523bc1af3b0b6e763ca9c043809,Add note about makeConstraint,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-02 15:10:25-07:00,25200,2015-08-02 16:05:23-07:00,25200,True,False,['graph.py'],['c8b0df226cafd7d6cce9083dfba6b1ee7e87f92c'],1,2,3,1,,,
b9b8258180f2cc346383c697db7920e9478306fd,Fix nondeterminism bug,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-02 16:17:02-07:00,25200,2015-08-02 16:17:02-07:00,25200,True,False,['structuring.py'],['7ca76bd76ec83523bc1af3b0b6e763ca9c043809'],4,8,12,1,0.0,0.0,0.0
0ee129474a3b8ab9a1f008352eda9a866bb15555,Rename SkipJSR -> JSRTests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-03 20:22:34-07:00,25200,2015-08-03 20:22:34-07:00,25200,True,False,"['__init__.py', 'JSRTests.class', 'JSRTests.j']",['b9b8258180f2cc346383c697db7920e9478306fd'],8,8,16,3,,,
4b52d28143bc1cbe89fd06d58bdf3ce41129a051,Remove unused verifier top types,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-03 20:30:19-07:00,25200,2015-08-03 20:30:19-07:00,25200,True,False,"['objtypes.py', 'descriptors.py', 'verifier_types.py']",['0ee129474a3b8ab9a1f008352eda9a866bb15555'],13,11,24,3,,,
d5a6b16acf2017d554d4112956a4ad56b3214919,Simplify throw/catch to goto when exception is ignored,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-03 21:35:31-07:00,25200,2015-08-03 21:35:31-07:00,25200,True,False,"['graph.py', 'decompile.py']",['4b52d28143bc1cbe89fd06d58bdf3ce41129a051'],1,31,32,2,0.0,0.045454545454545456,1.0
8c7cc085046521986b9157f98b3ee47295bb4331,Fix class literal handling,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-08 12:13:38-07:00,25200,2015-08-08 12:13:38-07:00,25200,True,False,"['blockmaker.py', '__init__.py', 'LClassLiteralTest.class', 'LClassLiteralTest.j']",['d5a6b16acf2017d554d4112956a4ad56b3214919'],3,64,67,4,1.0,1.0,1.0
65f745ea72d7d74be426e00cf097cb88b9462a22,Add another test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-08 15:52:11-07:00,25200,2015-08-08 15:52:11-07:00,25200,True,False,"['TryCatchTest.class', 'TryCatchTest.java']",['8c7cc085046521986b9157f98b3ee47295bb4331'],0,14,14,2,0.9230769230769231,0.9230769230769231,1.0
cb23fa7d78fffed8a8d36c027c5f634ce322dd23,Improve detection of instructions which always throw,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-08 18:04:24-07:00,25200,2015-08-08 18:04:24-07:00,25200,True,False,"['__init__.py', 'graph.py', 'base.py', 'array.py', 'checkcast.py', 'fieldaccess.py', 'fmath.py', 'imath.py', 'invoke.py', 'monitor.py', 'new.py', 'throw.py', 'truncate.py', 'tryreturn.py']",['65f745ea72d7d74be426e00cf097cb88b9462a22'],66,80,146,14,0.0,0.0,0.0
adcd61216f642d241e7d6249495bd86427dbadeb,Fix (disabled) tryreturn pruning,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-08 18:21:21-07:00,25200,2015-08-08 18:21:21-07:00,25200,True,False,"['blockmaker.py', 'tryreturn.py']",['cb23fa7d78fffed8a8d36c027c5f634ce322dd23'],4,8,12,2,0.0,0.0,1.0
30bbb52c84ce234678a76c3a358e010fe5f745fa,"Remove merging of exception blocks, since the current version was buggy, and when done correctly, it doesn't provide any noticeable benefit",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-08-16 14:56:00-07:00,25200,2015-08-16 14:56:00-07:00,25200,True,False,"['exceptionset.py', 'graph.py', 'TryCatchTest.class', 'TryCatchTest.java']",['adcd61216f642d241e7d6249495bd86427dbadeb'],46,21,67,4,0.0,1.0,0.0
263d152809cb241653ed3a43a0f6d80ff919f91a,Attempt to locate rt.jar automatically on Linux,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-11-27 10:38:06-08:00,28800,2015-11-27 10:38:06-08:00,28800,True,False,"['decompile.py', 'runtests.py']",['30bbb52c84ce234678a76c3a358e010fe5f745fa'],10,18,28,2,0.0,0.0,1.0
b06760b049e91f0c785ed5025c269bb1bc845dc2,Disable Hotspot specific tests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-11-27 10:40:09-08:00,28800,2015-11-27 10:40:09-08:00,28800,True,False,['__init__.py'],['263d152809cb241653ed3a43a0f6d80ff919f91a'],2,0,2,1,,,
dd5cf1237404fe5dc666b494948ba8dedaaa242b,Complete rewrite of assembler and diassembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2015-12-23 18:11:20-08:00,28800,2015-12-23 18:11:20-08:00,28800,True,False,"['assembler.txt', 'assembler.py', 'assembly.py', 'codes.py', 'disassembler.py', 'disassembly.py', 'flags.py', 'instructions.py', 'parse.py', 'pool.py', 'token_regexes.py', 'tokenize.py', 'writer.py', 'binUnpacker.py', '__init__.py', 'classdata.py', 'mutf8.py', 'reader.py', 'environment.py', 'method.py', '__init__.py', 'thunk.py', 'README.TXT', 'assemble.py', 'disassemble.py', 'BadInnerTest.j', 'ControlFlow.j']",['b06760b049e91f0c785ed5025c269bb1bc845dc2'],1991,2959,4950,27,0.5382830626450116,0.5510440835266821,1.0
4ae65d19ad3b31eac8957be524f74698033a5126,Remove unused interfaces code,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-06 20:02:24-08:00,28800,2016-02-06 20:02:24-08:00,28800,True,False,"['classfile.py', 'environment.py', 'decompile.py']",['dd5cf1237404fe5dc666b494948ba8dedaaa242b'],15,3,18,3,1.0,0.0,0.8888888888888888
703baa4e6f95db3346907bb403ad70918ad5da08,Remove usage of getSupers,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-06 20:22:08-08:00,28800,2016-02-06 20:22:08-08:00,28800,True,False,"['classfile.py', 'environment.py', 'objtypes.py', 'verifier_types.py']",['4ae65d19ad3b31eac8957be524f74698033a5126'],9,24,33,4,1.0,1.0,0.08333333333333333
793236b27ba415ccb7c8bce420d14d865ef281b2,Remove eager loading of superclass hierarchy,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-06 20:43:02-08:00,28800,2016-02-06 20:43:02-08:00,28800,True,False,"['classfile.py', 'environment.py']",['703baa4e6f95db3346907bb403ad70918ad5da08'],26,8,34,2,0.0,0.0,1.0
6fe0c3b7bc0061db81a8a1d8f932c5f5f08a79dd,Allow phantom refs for boolize check,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-06 20:58:15-08:00,28800,2016-02-06 20:58:15-08:00,28800,True,False,['boolize.py'],['793236b27ba415ccb7c8bce420d14d865ef281b2'],1,3,4,1,1.0,1.0,1.0
0680229d5d4f285dbee51c52530a247e246391a1,Fix handling of casts that always fail,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-07 11:40:20-08:00,28800,2016-02-07 12:44:53-08:00,28800,True,False,"['script_util.py', 'checkcast.py', 'TryCatchTest.class', 'TryCatchTest.java']",['6fe0c3b7bc0061db81a8a1d8f932c5f5f08a79dd'],7,24,31,4,0.9285714285714286,0.9285714285714286,0.7142857142857143
a43b2e7e0a53bca9fe7c34d97b3b3738d662f8d5,Add test for casting to interface,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-07 12:54:39-08:00,28800,2016-02-07 12:54:39-08:00,28800,True,False,"['OddsAndEnds.class', 'OddsAndEnds.java']",['0680229d5d4f285dbee51c52530a247e246391a1'],43,58,101,2,0.8333333333333334,1.0,1.0
2a970f6b981e146ce7feaa428ca4a5a289fd6974,refactor env checks,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-14 15:41:11-08:00,28800,2016-02-14 15:41:11-08:00,28800,True,False,"['environment.py', 'boolize.py', 'objtypes.py', 'verifier_types.py']",['a43b2e7e0a53bca9fe7c34d97b3b3738d662f8d5'],17,22,39,4,1.0,1.0,1.0
b6f6d906e36212a8df4d4957f4001992e7025ffc,Disable constant pool type checks. Fixes issue #60,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-14 16:11:11-08:00,28800,2016-02-14 16:11:11-08:00,28800,True,False,['constant_pool.py'],['2a970f6b981e146ce7feaa428ca4a5a289fd6974'],2,2,4,1,0.0,0.0,1.0
55d0059b60f7e218a601d544cb4bc6d93c7a0f25,Make class loading deterministic,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-15 13:04:04-08:00,28800,2016-02-15 13:04:04-08:00,28800,True,False,['objtypes.py'],['b6f6d906e36212a8df4d4957f4001992e7025ffc'],2,3,5,1,0.0,0.0,1.0
a30a886405bd6a1c05c50b5559773b532db30e44,Update Readme,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-15 13:08:06-08:00,28800,2016-02-15 13:08:06-08:00,28800,True,False,['README.TXT'],['55d0059b60f7e218a601d544cb4bc6d93c7a0f25'],1,7,8,1,,,
cb1703e8e0d09bf2dcada7ce40744a3cc6bd0448,refactor runtests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-15 13:35:45-08:00,28800,2016-02-15 13:35:45-08:00,28800,True,False,['runtests.py'],['a30a886405bd6a1c05c50b5559773b532db30e44'],20,30,50,1,1.0,1.0,1.0
9958d6db7efc1dad4d730a00dc9fb4ec9127481c,Move decompiler tests into seperate folder,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-15 13:43:15-08:00,28800,2016-02-15 13:43:15-08:00,28800,True,False,"['__init__.py', 'runtests.py', '__init__.py', '__init__.py', 'ArgumentTypes.class', 'ArrayTest.class', 'BadInnerTest.class', 'BoolizeTest.class', 'ConditionalTest.class', 'ControlFlow.class', 'DoubleEdge.class', 'DuplicateInit.class', 'ExceptionHandlers.class', 'JSRTests.class', 'LClassLiteralTest.class', 'NullInference.class', 'OddsAndEnds.class', 'OldVersionTest.class', 'StaticInitializer.class', 'SwapLoopTest.class', 'Switch.class', 'Synchronized.class', 'TryCatchTest.class', 'TryWithResources.class', 'UnicodeTest.class', 'WhileLoops.class', 'floattest.class', 'splitnew.class', 'ArgumentTypes.java', 'ArrayTest.java', 'BadInnerTest.j', 'BoolizeTest.java', 'ConditionalTest.java', 'ControlFlow.j', 'DoubleEdge.j', 'DuplicateInit.j', 'ExceptionHandlers.j', 'JSRTests.j', 'LClassLiteralTest.j', 'NullInference.java', 'OddsAndEnds.java', 'OldVersionTest.j', 'StaticInitializer.java', 'SwapLoopTest.j', 'Switch.java', 'Synchronized.java', 'TryCatchTest.java', 'TryWithResources.java', 'UnicodeTest.java', 'WhileLoops.java', 'floattest.java', 'splitnew.java']",['cb1703e8e0d09bf2dcada7ce40744a3cc6bd0448'],44,38,82,52,,,
73e554849e97cc4a2d73a525547852d227c1debe,Cache results in runtests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-15 14:16:08-08:00,28800,2016-02-15 14:16:08-08:00,28800,True,False,"['.gitignore', 'runtests.py']",['9958d6db7efc1dad4d730a00dc9fb4ec9127481c'],55,60,115,2,0.7692307692307693,1.0,0.7692307692307693
96e9fe60466091a6c16fa086c9794c3d73c3b565,Also cache compilation,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-15 14:27:18-08:00,28800,2016-02-15 14:28:12-08:00,28800,True,False,['runtests.py'],['73e554849e97cc4a2d73a525547852d227c1debe'],4,15,19,1,1.0,1.0,1.0
af258861dbd3caee6e8b84daecee2a575656e83b,Add disassembler java test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-15 17:14:32-08:00,28800,2016-02-15 17:14:32-08:00,28800,True,False,"['runtests.py', '__init__.py', '__init__.py', '__init__.py', 'Primes.class', 'Primes.java']",['96e9fe60466091a6c16fa086c9794c3d73c3b565'],37,67,104,6,1.0,0.625,0.625
af04de0e80dd1ae4ba2153b651b7d596d20c32d3,Add disassembler test for self-inner class,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-15 17:18:38-08:00,28800,2016-02-15 17:18:57-08:00,28800,True,False,"['__init__.py', 'SelfInner.class', 'SelfInner.j']",['af258861dbd3caee6e8b84daecee2a575656e83b'],0,37,37,3,,,
9b8323c7cdd4954018dbd419ffb83ecfc23c9ca5,Add assembler tests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-15 17:41:32-08:00,28800,2016-02-15 17:41:32-08:00,28800,True,False,"['parse.py', 'assemble.py', 'runtests.py', 'badcircularcp.j', 'badcircularcp2.j', 'badescapes1.j', 'badescapes2.j', 'badescapes3.j', 'badescapes4.j', 'badescapes5.j', 'badescapes6.j', 'badnestedcp.j', 'badstring.j', 'evenscpdouble.j', 'exhaustcp_impbs.j', 'exhaustcp_impsmt.j', 'lbloutsidecode.j', 'longstring.j', 'noconstrhs.j', 'oddscpdouble.j', 'strictfp.j', 'LambdaTest.j', 'longsymrefchain.j', 'nans.j', 'oddscpdouble2.j', 'strictfp.j']",['af04de0e80dd1ae4ba2153b651b7d596d20c32d3'],7,297634,297641,26,1.0,0.0,0.0
f982138d7e6440d8866b25aff9006d11246aca1b,Remove unused code,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-15 18:13:57-08:00,28800,2016-02-15 18:13:57-08:00,28800,True,False,"['disassembly.py', 'float_c.py']",['9b8323c7cdd4954018dbd419ffb83ecfc23c9ca5'],19,0,19,2,0.0,0.0,0.0
17eaeec107e824aebc75df36f3161a2a5874f12f,Add dummy method body when method has a skipped error (see issue #62),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-15 18:23:53-08:00,28800,2016-02-15 18:23:53-08:00,28800,True,False,['ast2.py'],['f982138d7e6440d8866b25aff9006d11246aca1b'],1,4,5,1,0.0,0.0,0.0
5f772c71e2267bf10d957d8f87577e998674d056,Temporary workaround for new instance casting issue (#63),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-25 07:30:08-08:00,28800,2016-02-25 07:30:08-08:00,28800,True,False,"['astgen.py', 'javamethod.py', 'DuplicateInit.class', 'DuplicateInit.j']",['17eaeec107e824aebc75df36f3161a2a5874f12f'],3,32,35,4,0.0,0.0,0.0
1b7b4c4d53619ea72e1015b0f01744be00c609d4,Add trailing newline to decompiled source,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-25 07:33:45-08:00,28800,2016-02-25 07:33:45-08:00,28800,True,False,['ast2.py'],['5f772c71e2267bf10d957d8f87577e998674d056'],1,1,2,1,,,
a450dae27f31942155db380c4dc7fb726a2e564c,Fix handling of dead code,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-25 18:38:49-08:00,28800,2016-02-25 18:38:49-08:00,28800,True,False,"['blockmaker.py', 'DuplicateInit.class', 'DuplicateInit.j']",['1b7b4c4d53619ea72e1015b0f01744be00c609d4'],2,10,12,3,,,
a2f8a4ba3ee8b8ba1cc3208d40e113a6abdb8d01,Infer new instances to be nonnull from verification results (#64),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-25 19:05:45-08:00,28800,2016-02-25 19:05:45-08:00,28800,True,False,"['__init__.py', 'graph.py', 'DuplicateInit.class', 'DuplicateInit.j']",['a450dae27f31942155db380c4dc7fb726a2e564c'],3,31,34,4,1.0,1.0,1.0
7c2e0e62ed49f1549052798c1eb4615036c1730c,Fix nonnull inference of new instances for real (#64),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-25 20:41:19-08:00,28800,2016-02-25 20:41:19-08:00,28800,True,False,"['__init__.py', 'graph.py', 'ssa_types.py']",['a2f8a4ba3ee8b8ba1cc3208d40e113a6abdb8d01'],5,5,10,3,,,
d13062cdcbed97af3fe24c188b9676c1575627ad,fix,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-28 15:50:55-08:00,28800,2016-02-28 15:50:55-08:00,28800,True,False,['assembler.txt'],['7c2e0e62ed49f1549052798c1eb4615036c1730c'],3,3,6,1,,,
a0d986dd3f9be7ac07abb253fb0751dd48320290,change dummy expr format,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-28 15:56:47-08:00,28800,2016-02-28 15:56:47-08:00,28800,True,False,"['ast.py', 'astgen.py', 'javamethod.py']",['d13062cdcbed97af3fe24c188b9676c1575627ad'],17,8,25,3,0.5,0.5,0.5
e6cae1a3e9d482d9a3f2ea8d0c9c8999d14f685e,Print out comment when invokedynamic appears (#62),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-28 16:28:32-08:00,28800,2016-02-28 16:28:32-08:00,28800,True,False,"['ast.py', 'astgen.py', 'blockmaker.py', '__init__.py', 'invoke.py']",['a0d986dd3f9be7ac07abb253fb0751dd48320290'],2,55,57,5,0.3,0.875,0.075
7e863e86d20135ecfb2bbf270aafd7c2ba8f0a52,Add dummy value for invokedynamic to keep Java parsers happy (#62),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-29 07:37:24-08:00,28800,2016-02-29 07:37:24-08:00,28800,True,False,"['ast.py', 'astgen.py', 'javamethod.py']",['e6cae1a3e9d482d9a3f2ea8d0c9c8999d14f685e'],11,17,28,3,1.0,0.0,0.0
214c6ea8fe1f5b754bccce35e602bcc094686035,Fix handling of jsrs followed by dead code,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-29 19:31:48-08:00,28800,2016-02-29 19:31:48-08:00,28800,True,False,"['blockmaker.py', 'runtests.py', 'JSRTests.class', 'JSRTests.j']",['7e863e86d20135ecfb2bbf270aafd7c2ba8f0a52'],4,25,29,4,1.0,1.0,0.0
7626a1b3e41cfe0d8ae7b499ad3d8393024a7a6d,Don't print invokedynamic params to avoid nested comments (#62),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-02-29 19:41:47-08:00,28800,2016-02-29 19:41:47-08:00,28800,True,False,['astgen.py'],['214c6ea8fe1f5b754bccce35e602bcc094686035'],2,2,4,1,,,
ae56e5d809ae4c42929f2d266756ded7b9aba4c7,Fix inlining of subprocedures with backedges to head (#65),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-01 20:28:03-08:00,28800,2016-03-01 20:28:03-08:00,28800,True,False,"['graph.py', 'JSRTests.class', 'JSRTests.j']",['7626a1b3e41cfe0d8ae7b499ad3d8393024a7a6d'],6,12,18,3,,,
bc6649af4479a00d6b31ff8b0b08f1caa3f940e2,Fix not passing catchcb in recursive calls (#67),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-01 20:54:29-08:00,28800,2016-03-01 20:54:29-08:00,28800,True,False,['boolize.py'],['ae56e5d809ae4c42929f2d266756ded7b9aba4c7'],1,1,2,1,,,
ac78870110925116f3bd8a810f092522fa7811a8,Fix handling of unreachable exception handlers,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-04 18:38:28-08:00,28800,2016-03-04 18:38:28-08:00,28800,True,False,['blockmaker.py'],['bc6649af4479a00d6b31ff8b0b08f1caa3f940e2'],2,3,5,1,0.0,0.0,0.0
8c9f5728ef68b1f1c05a56e5654d751367d5d40b,rewrite runtests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-05 07:52:12-08:00,28800,2016-03-05 07:52:12-08:00,28800,True,False,['runtests.py'],['ac78870110925116f3bd8a810f092522fa7811a8'],45,65,110,1,1.0,1.0,0.7777777777777778
8abfc20f647cef25cd6baf064daf7d28dad72911,runtests more tempdirs,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-05 07:59:04-08:00,28800,2016-03-05 07:59:04-08:00,28800,True,False,['runtests.py'],['8c9f5728ef68b1f1c05a56e5654d751367d5d40b'],12,13,25,1,,,
c8d7cce06d59fb7a2b9284c560312bc46fa81070,Use multiple processes to run tests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-05 08:25:14-08:00,28800,2016-03-05 08:25:14-08:00,28800,True,False,['runtests.py'],['8abfc20f647cef25cd6baf064daf7d28dad72911'],28,34,62,1,1.0,0.0,0.0
b67bccb0b1d7ba40060f90571974319c281963fd,Temporary hack to optionally disable most exception pruning (#70),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-05 10:17:52-08:00,28800,2016-03-05 10:17:52-08:00,28800,True,False,"['astgen.py', 'blockmaker.py', 'graph.py', '__init__.py', 'throw.py', 'tryreturn.py', 'decompile.py', 'runtests.py']",['c8d7cce06d59fb7a2b9284c560312bc46fa81070'],41,72,113,8,0.45,0.45,0.0
0884fecd3ea67a23e116518dd0188607fe2c229a,fix off by one,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-06 21:21:04-08:00,28800,2016-03-06 21:21:04-08:00,28800,True,False,"['blockmaker.py', 'inference_verifier.py']",['b67bccb0b1d7ba40060f90571974319c281963fd'],2,1,3,2,1.0,1.0,1.0
fa81a2d6a86bc4dc6ae62b96da4a8defa7ce7684,update continueKey when simplifying a while loop (#72),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-06 21:39:48-08:00,28800,2016-03-06 21:39:48-08:00,28800,True,False,"['ast.py', 'javamethod.py']",['0884fecd3ea67a23e116518dd0188607fe2c229a'],2,4,6,2,0.3333333333333333,0.3333333333333333,0.6666666666666666
e1014720366f9b0dec3826de7bd5432572b4f97c,Fix verification edge case (#71),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-07 19:33:52-08:00,28800,2016-03-07 19:33:52-08:00,28800,True,False,"['inference_verifier.py', '__init__.py', 'SamSunTests.class', 'SamSunTests.j']",['fa81a2d6a86bc4dc6ae62b96da4a8defa7ce7684'],2,44,46,4,,,
89c9518dfbd22338dd065e13d64eeea760fe0dac,Remove bad assertions (#73),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-07 19:42:58-08:00,28800,2016-03-07 19:42:58-08:00,28800,True,False,"['cfg.py', 'javamethod.py', 'SamSunTests.class', 'SamSunTests.j']",['e1014720366f9b0dec3826de7bd5432572b4f97c'],4,13,17,4,1.0,1.0,0.75
2126a77cae2688d9039e640db49b5ac1b4e0aa98,Fix test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-07 19:46:25-08:00,28800,2016-03-07 19:46:25-08:00,28800,True,False,"['SamSunTests.class', 'SamSunTests.j']",['89c9518dfbd22338dd065e13d64eeea760fe0dac'],1,9,10,2,,,
eb0d6fe5ee3084e7917e98ea9bef54e754665689,remove unused slot,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-08 07:02:03-08:00,28800,2016-03-08 07:02:03-08:00,28800,True,False,['obj_c.py'],['2126a77cae2688d9039e640db49b5ac1b4e0aa98'],1,1,2,1,,,
863db1cdc92480d478db3f5402c0dc6f7938d90a,"Temporary hack to allow interface casts (#74, #75)",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-08 07:52:14-08:00,28800,2016-03-08 07:52:14-08:00,28800,True,False,"['graph.py', 'objtypes.py', 'array.py', 'checkcast.py', 'inference_verifier.py', 'verifier_types.py', 'SamSunTests.class', 'SamSunTests.j']",['eb0d6fe5ee3084e7917e98ea9bef54e754665689'],10,91,101,8,0.6428571428571429,0.5714285714285714,0.9285714285714286
04762ae7b5ba4b1eebff8415d8d965785a19603a,Allow running only subset of tests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-11 18:04:12-08:00,28800,2016-03-11 18:04:12-08:00,28800,True,False,['runtests.py'],['863db1cdc92480d478db3f5402c0dc6f7938d90a'],23,20,43,1,,,
e5921f008ea32d19f47a24e5777cd515b463d65b,Split blockmaker,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-11 18:06:52-08:00,28800,2016-03-12 07:16:34-08:00,28800,True,False,"['blockmaker.py', 'blockmakerfuncs.py']",['04762ae7b5ba4b1eebff8415d8d965785a19603a'],456,466,922,2,,,
eea863b5043574fcd8fcd4334d895d69694ecf64,Change assert style,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-12 07:26:44-08:00,28800,2016-03-12 07:26:44-08:00,28800,True,False,"['assembly.py', 'bytecode.py', 'classfile.py', 'constant_pool.py', 'environment.py', 'floatutil.py', 'graph_util.py', 'ast.py', 'ast2.py', 'astgen.py', 'boolize.py', 'cfg.py', 'graphproxy.py', 'javaclass.py', 'javamethod.py', 'mergevariables.py', 'setree.py', 'structuring.py', 'throws.py', 'method.py', 'script_util.py', 'blockmaker.py', 'blockmakerfuncs.py', '__init__.py', 'obj_c.py', 'exceptionset.py', 'functionbase.py', 'graph.py', 'objtypes.py', 'base.py', 'ifcmp.py', 'onexception.py', 'base.py', 'bitwise_util.py', 'checkcast.py', 'imath.py', 'phi.py', 'truncate.py', 'ssa_types.py', 'subproc.py', 'inference_verifier.py', 'verifier_types.py']",['e5921f008ea32d19f47a24e5777cd515b463d65b'],347,347,694,42,,,
848085d1bef00801ec86c90eb8d889d7a2b7071c,Only run graph consistency checks in debug mode,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-12 07:28:30-08:00,28800,2016-03-12 07:28:30-08:00,28800,True,False,['graph.py'],['eea863b5043574fcd8fcd4334d895d69694ecf64'],13,13,26,1,,,
04a673bc40b916c922494ab65fe3271b81305243,Change blockmaker to store locals in dict,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-12 08:34:09-08:00,28800,2016-03-12 08:34:09-08:00,28800,True,False,"['blockmaker.py', 'blockmakerfuncs.py', 'graph.py', 'ssa_types.py', 'subproc.py']",['848085d1bef00801ec86c90eb8d889d7a2b7071c'],57,68,125,5,0.0,0.0,1.0
7d9f42256efe929ecbbc10c53c69033e61d70eaa,Prune unused locals prior to graph creation to improve performance,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-12 11:57:59-08:00,28800,2016-03-12 11:57:59-08:00,28800,True,False,"['blockmaker.py', 'blockmakerfuncs.py', 'graph.py', 'ssa_types.py', 'subproc.py', 'inference_verifier.py']",['04a673bc40b916c922494ab65fe3271b81305243'],21,79,100,6,0.20454545454545456,0.20454545454545456,0.1590909090909091
5580a6a0f20d0c8e0adc1a8ca6a9aa64f7a5a50b,performance tweak,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-12 12:22:58-08:00,28800,2016-03-12 12:22:58-08:00,28800,True,False,['blockmaker.py'],['7d9f42256efe929ecbbc10c53c69033e61d70eaa'],6,7,13,1,0.0,0.0,0.0
edc21fa25ebab60097e3e6fd85172c415b941f78,Add test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-12 12:34:41-08:00,28800,2016-03-12 12:34:41-08:00,28800,True,False,"['ControlFlow.class', 'ControlFlow.j']",['5580a6a0f20d0c8e0adc1a8ca6a9aa64f7a5a50b'],0,12,12,2,,,
48403332c265ba58cd9f1e879792e1eab4214ce3,refactor,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-13 19:03:34-07:00,25200,2016-03-13 19:03:34-07:00,25200,True,False,"['exceptionset.py', 'onexception.py']",['edc21fa25ebab60097e3e6fd85172c415b941f78'],17,15,32,2,0.0,0.0,1.0
bff6992fed5b43f2efba95d324108a5a1e0b2042,Change comment style,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-13 19:11:17-07:00,25200,2016-03-13 19:11:17-07:00,25200,True,False,"['assembly.py', 'token_regexes.py', 'attributes_raw.py', 'bytecode.py', 'classfile.py', 'constant_pool.py', 'environment.py', 'floatutil.py', 'graph_util.py', 'ast.py', 'ast2.py', 'astgen.py', 'boolize.py', 'cfg.py', 'graphproxy.py', 'javaclass.py', 'javamethod.py', 'mergevariables.py', 'setree.py', 'stringescape.py', 'structuring.py', 'method.py', 'script_util.py', 'blockmaker.py', 'blockmakerfuncs.py', '__init__.py', 'float_c.py', 'obj_c.py', 'exceptionset.py', 'excepttypes.py', 'graph.py', 'objtypes.py', 'base.py', 'ifcmp.py', 'onexception.py', 'switch.py', 'bitwise_util.py', 'fieldaccess.py', 'fmath.py', 'imath.py', 'invoke.py', 'new.py', 'phi.py', 'truncate.py', 'ssa_types.py', 'descriptors.py', 'inference_verifier.py', 'verifier_types.py', 'decompile.py', 'disassemble.py']",['48403332c265ba58cd9f1e879792e1eab4214ce3'],486,486,972,50,,,
fb405012967c87d0a04402b4faf4c8a2dfb1a6a2,Fix casting of string literals (#81),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-24 07:41:29-07:00,25200,2016-03-24 07:41:29-07:00,25200,True,False,"['astgen.py', 'SamSunTests.class', 'SamSunTests.j']",['bff6992fed5b43f2efba95d324108a5a1e0b2042'],2,22,24,3,,,
e6d9676b0afca27d285367870351dbee2f082d33,Limit expression nesting depth (#80),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-24 08:06:54-07:00,25200,2016-03-24 08:06:54-07:00,25200,True,False,"['javamethod.py', 'ExprInlining.class', 'ExprInlining.java']",['fb405012967c87d0a04402b4faf4c8a2dfb1a6a2'],0,10,10,3,0.6,0.6,1.0
a2bc534aa27361a21cfa2160375513e0b7e1b1f5,Fix missing import (#79),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-24 08:08:49-07:00,25200,2016-03-24 08:08:49-07:00,25200,True,False,['blockmaker.py'],['e6d9676b0afca27d285367870351dbee2f082d33'],1,1,2,1,,,
b92d466f822e49788a675a7deaca37929c8b9491,Change from assignment to import alias,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-26 11:56:26-07:00,25200,2016-03-26 11:56:26-07:00,25200,True,False,"['graphproxy.py', 'structuring.py', 'ssa_types.py', 'verifier_types.py']",['a2bc534aa27361a21cfa2160375513e0b7e1b1f5'],4,4,8,4,,,
bb8384f504751b287592480c44789cd84e47bf18,Sort imports and add trailing newlines,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-26 17:57:19-07:00,25200,2016-03-26 17:57:19-07:00,25200,True,False,"['assembly.py', 'disassembly.py', 'parse.py', 'pool.py', 'tokenize.py', 'writer.py', 'bytecode.py', 'classfile.py', 'constant_pool.py', 'environment.py', 'field.py', 'floatutil.py', 'graph_util.py', 'ast.py', 'ast2.py', 'astgen.py', 'boolize.py', 'cfg.py', 'graphproxy.py', 'javamethod.py', 'mergevariables.py', 'reserved.py', 'stringescape.py', 'structuring.py', 'throws.py', 'method.py', 'namegen.py', 'opnames.py', 'script_util.py', 'blockmaker.py', 'blockmakerfuncs.py', 'float_c.py', 'mixin.py', 'obj_c.py', 'exceptionset.py', 'excepttypes.py', 'functionbase.py', 'graph.py', 'mixin.py', 'objtypes.py', 'base.py', 'exit.py', 'ifcmp.py', 'onexception.py', 'placeholder.py', 'switch.py', 'array.py', 'bitwise_util.py', 'checkcast.py', 'convert.py', 'fieldaccess.py', 'fmath.py', 'imath.py', 'invoke.py', 'monitor.py', 'new.py', 'phi.py', 'throw.py', 'truncate.py', 'tryreturn.py', 'thunk.py', 'descriptors.py', 'inference_verifier.py']",['b92d466f822e49788a675a7deaca37929c8b9491'],153,192,345,63,,,
830aa12e788d36120b32914a234dd2988cfcebd3,Remove unused imports,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-03-26 18:11:27-07:00,25200,2016-03-26 18:11:27-07:00,25200,True,False,"['assembly.py', 'writer.py', 'graphproxy.py', 'structuring.py', 'blockmaker.py', 'blockmakerfuncs.py', 'obj_c.py', 'objtypes.py', 'array.py', 'convert.py', 'fieldaccess.py', 'imath.py', 'invoke.py', 'monitor.py', 'new.py', 'throw.py', 'truncate.py', 'tryreturn.py', 'ssa_types.py', 'inference_verifier.py', 'verifier_types.py']",['bb8384f504751b287592480c44789cd84e47bf18'],34,13,47,21,,,
5122f4cb02460a3559b4e57e151c2dd7bb88f950,Clarify assembler documentation (#83),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-04-08 17:10:50-07:00,25200,2016-04-08 17:10:50-07:00,25200,True,False,['assembler.txt'],['830aa12e788d36120b32914a234dd2988cfcebd3'],0,2,2,1,,,
a000009e6fea1af91917cda4721462b5238cb561,Fix handling of ret in blockmaker (#84),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-04-08 17:33:18-07:00,25200,2016-04-08 17:33:18-07:00,25200,True,False,"['blockmaker.py', 'JSRTests.class', 'SamSunTests.class', 'JSRTests.j', 'SamSunTests.j']",['5122f4cb02460a3559b4e57e151c2dd7bb88f950'],1,37,38,5,1.0,1.0,0.0
6a8edbc6e64051ba36ad68a51588b12fd88bf962,Fix param check in graph.simplifyThrows (#87),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-04-25 20:12:59-07:00,25200,2016-04-25 20:12:59-07:00,25200,True,False,"['graph.py', 'SamSunTests.class', 'SamSunTests.j']",['a000009e6fea1af91917cda4721462b5238cb561'],2,14,16,3,,,
1a9035a0fcc01867cb2727c7c7bb84fb4b5ddd73,Fix missing error check in assembler (#88),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-04-29 06:47:57-07:00,25200,2016-04-29 06:47:57-07:00,25200,True,False,"['parse.py', 'adjacentframes.j']",['6a8edbc6e64051ba36ad68a51588b12fd88bf962'],1,16,17,2,0.0,0.0,1.0
bad84294be6bec5b7a92907b7a6195555d684429,Allow argument count of invokeinterface to be omitted when descriptor is specified inline. (#91),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-06-10 20:26:47-07:00,25200,2016-06-10 20:26:47-07:00,25200,True,False,"['assembler.txt', 'changelog.txt', 'parse.py', 'invokeinterface.j']",['1a9035a0fcc01867cb2727c7c7bb84fb4b5ddd73'],2,72,74,4,0.0,0.0,1.0
1edb47305ad09e493062285583b8a4c701463f10,"Allow *, -, and + to be used in WORDS (#89)",Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-06-10 20:37:38-07:00,25200,2016-06-10 20:37:38-07:00,25200,True,False,"['assembler.txt', 'changelog.txt', 'token_regexes.py']",['bad84294be6bec5b7a92907b7a6195555d684429'],2,6,8,3,,,
a61923f6c9884c20d0f6ee9b8aaf702c2b29dbf4,Fix missing error check in assembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-06-10 20:44:43-07:00,25200,2016-06-10 20:45:02-07:00,25200,True,False,"['parse.py', 'missingmethod.j']",['1edb47305ad09e493062285583b8a4c701463f10'],1,13,14,2,,,
2124fde805e95a342c1c7cab3d09d2ca26c569c6,Fix,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-06-10 20:49:47-07:00,25200,2016-06-10 20:49:47-07:00,25200,True,False,['parse.py'],['a61923f6c9884c20d0f6ee9b8aaf702c2b29dbf4'],0,1,1,1,0.0,0.0,1.0
1946086367dea737e3a20bbe907a80cadcc6d183,Fix 3,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-06-10 20:51:53-07:00,25200,2016-06-10 20:51:53-07:00,25200,True,False,['parse.py'],['2124fde805e95a342c1c7cab3d09d2ca26c569c6'],3,4,7,1,0.0,0.0,1.0
8f9f746a125b008035691a91e160443419cedc2a,Remind users of the ability to quote words in the assembler (#89),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-06-11 12:56:52-07:00,25200,2016-06-11 12:56:52-07:00,25200,True,False,"['assembler.txt', 'tokenize.py']",['1946086367dea737e3a20bbe907a80cadcc6d183'],2,9,11,2,0.0,0.0,1.0
0e1ff7ca70f7b155a0fbd6c45fd94861bed75abb,Add weird strings to test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-06-19 08:57:09-07:00,25200,2016-06-19 08:57:09-07:00,25200,True,False,"['OddsAndEnds.class', 'OddsAndEnds.java']",['8f9f746a125b008035691a91e160443419cedc2a'],0,4,4,2,0.0,1.0,1.0
b17b9f0da5381efcb6c43625ede24c4fb73ef30f,Fix hnadling of explicit class descriptors in checkcast (#94),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-06-27 08:07:59-07:00,25200,2016-06-27 08:07:59-07:00,25200,True,False,"['inference_verifier.py', 'LClassLiteralTest.class', 'LClassLiteralTest.j']",['0e1ff7ca70f7b155a0fbd6c45fd94861bed75abb'],1,6,7,3,,0.0,
c68ff09a6a74e8e1b6e5bc42b1ee523e8d275098,Sanitize long paths on Linux too,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-07-16 11:13:20-07:00,25200,2016-07-16 11:20:28-07:00,25200,True,False,['script_util.py'],['b17b9f0da5381efcb6c43625ede24c4fb73ef30f'],48,73,121,1,1.0,1.0,0.6
4a63a028ec354613212a995037d1c00028518f9f,Fix unicode errors (#78),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-07-16 11:55:04-07:00,25200,2016-07-16 11:55:04-07:00,25200,True,False,"['script_util.py', 'decompile.py']",['c68ff09a6a74e8e1b6e5bc42b1ee523e8d275098'],3,4,7,2,,,
d3d4b422acc7190b542f5b317e37a9b6d795024e,More unicode path fixes (#78),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-07-16 19:39:33-07:00,25200,2016-07-16 19:39:33-07:00,25200,True,False,"['environment.py', 'error.py', 'script_util.py', 'decompile.py', 'disassemble.py']",['4a63a028ec354613212a995037d1c00028518f9f'],10,10,20,5,,,
95a435d399d545a262bc6c346afb770b109a7dfa,Fix silly bug,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-09-26 07:13:53-07:00,25200,2016-09-26 07:13:53-07:00,25200,True,False,"['parse.py', 'disassemble.py', 'badmhcode.j']",['d3d4b422acc7190b542f5b317e37a9b6d795024e'],3,8,11,3,,,
d2e8187f8219254b49fb1f73e84ca8c97a9d365b,Remove legacy colon hack (#93),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-09-26 07:19:46-07:00,25200,2016-09-26 07:19:46-07:00,25200,True,False,"['tokenize.py', 'ControlFlow.j', 'ExceptionHandlers.j', 'SamSunTests.j']",['95a435d399d545a262bc6c346afb770b109a7dfa'],11,3,14,4,1.0,1.0,0.0
9a15925c61e84659b3dad7200f7f1580a7cc6cb7,Create simple preprocessor for large test files to avoid misleading line counts on Github from huge test files,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-01 10:46:31-07:00,25200,2016-10-01 10:46:31-07:00,25200,True,False,"['assemble.py', 'runtests.py', 'evenscpdouble.j', 'exhaustcp_impbs.j', 'exhaustcp_impsmt.j', 'longstring.j', 'oddscpdouble.j']",['d2e8187f8219254b49fb1f73e84ca8c97a9d365b'],196482,53,196535,7,0.25,1.0,0.875
694291e89dfdc2660f75faed45cab86145c16af2,more preprocessing,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-01 11:00:35-07:00,25200,2016-10-01 11:01:03-07:00,25200,True,False,"['runtests.py', 'longsymrefchain.j', 'oddscpdouble2.j']",['9a15925c61e84659b3dad7200f7f1580a7cc6cb7'],100660,10,100670,3,,,
35faad678f9c0016c088ba7faa10b9c5d14e6ae4,Add ability for disassembler tests to be jars and add Annotation test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-02 11:22:34-07:00,25200,2016-10-02 11:22:34-07:00,25200,True,False,"['script_util.py', 'disassemble.py', 'runtests.py', '__init__.py', 'AnnotationsTest.jar', 'AnnotationsTest.java']",['694291e89dfdc2660f75faed45cab86145c16af2'],38,192,230,6,0.09302325581395349,0.27906976744186046,0.8372093023255814
acdac4b42e1dcac87c2d9ef5ad95e657ecb67189,add roundtrip disassembly tests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-02 12:03:13-07:00,25200,2016-10-02 12:03:13-07:00,25200,True,False,['runtests.py'],['35faad678f9c0016c088ba7faa10b9c5d14e6ae4'],8,25,33,1,1.0,1.0,1.0
9d3de8f3d4f43ac41bdd4fc26c7cddec6d8d34b6,test disassembler on decompiler tests too,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-02 12:10:57-07:00,25200,2016-10-02 12:10:57-07:00,25200,True,False,['runtests.py'],['acdac4b42e1dcac87c2d9ef5ad95e657ecb67189'],10,17,27,1,0.6666666666666666,1.0,0.0
f173ddfa5a14ddda11d3de0e82164d7c442b2dc0,add line numbers test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-02 12:53:07-07:00,25200,2016-10-02 12:53:07-07:00,25200,True,False,"['pool.py', 'writer.py', '__init__.py', 'LineNumbersTest.class', 'LineNumbersTest.java']",['9d3de8f3d4f43ac41bdd4fc26c7cddec6d8d34b6'],2,28,30,5,1.0,1.0,1.0
83769418677f058d0134170c417f09ae223672f0,Add more tests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-02 13:51:45-07:00,25200,2016-10-02 13:51:45-07:00,25200,True,False,"['parse.py', 'tokenize.py', 'badintlitval.j', 'badlonglitval.j', 'badrawref.j', 'badversion.j', 'bscpmixup.j', 'bscpmixup2.j', 'bscpmixup3.j', 'bscpmixup4.j', 'duplicatelabels.j', 'duprawdef.j', 'dupsymdef.j', 'emptytable.j', 'exhaustbs.j', 'invalidarraycode.j', 'jumptoofar.j', 'ldc256.j', 'nametoolong.j', 'nonllabel.j', 'nosuper.j', 'rawalias.j', 'toomanyldcs.j', 'undefinedref.j', 'undeflabel.j', 'widenop.j', 'widerawdefconflict.j']",['f173ddfa5a14ddda11d3de0e82164d7c442b2dc0'],2,189,191,27,1.0,1.0,0.0
c2e3bc8301bcd9202ca9d6317e078ab196b9bee1,Remove unused code,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-02 13:58:32-07:00,25200,2016-10-02 13:58:32-07:00,25200,True,False,['constant_pool.py'],['83769418677f058d0134170c417f09ae223672f0'],120,15,135,1,0.3088235294117647,0.3088235294117647,0.3382352941176471
924097dd002490bb7de50562491a70571d943f0f,exclude debug code from coverage,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-02 14:04:04-07:00,25200,2016-10-02 14:04:04-07:00,25200,True,False,"['ast.py', 'graphproxy.py', 'structuring.py', 'method.py', 'int_c.py', 'obj_c.py', 'exceptionset.py', 'graph.py', 'ssa_types.py', 'subproc.py', 'inference_verifier.py', 'verifier_types.py']",['c2e3bc8301bcd9202ca9d6317e078ab196b9bee1'],15,17,32,12,1.0,1.0,1.0
8cbd4e128044184817a4b1dbb8de58abf8030540,remove more unused code,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-02 14:15:09-07:00,25200,2016-10-02 14:15:09-07:00,25200,True,False,"['classfile.py', 'floatutil.py', 'exceptionset.py', 'graph.py', 'onexception.py']",['924097dd002490bb7de50562491a70571d943f0f'],44,1,45,5,0.4594594594594595,0.4594594594594595,0.1891891891891892
ebdcdb3de05959137534243060649d7c0d44f257,Defer error on invalid token to produce better error message,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-08 12:41:23-07:00,25200,2016-10-08 12:41:23-07:00,25200,True,False,['tokenize.py'],['8cbd4e128044184817a4b1dbb8de58abf8030540'],4,5,9,1,0.0,1.0,1.0
685201305baa006c38ebecadc19a92b41d4e9ade,allow extra notes for assembler error messages,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-08 13:08:36-07:00,25200,2016-10-08 13:08:36-07:00,25200,True,False,"['assembly.py', 'parse.py', 'tokenize.py', 'writer.py']",['ebdcdb3de05959137534243060649d7c0d44f257'],44,54,98,4,1.0,1.0,0.5
9a2e6c28d857c5d16aea05641945e8cd9e323222,error message for duplicate lookup key,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-08 13:18:18-07:00,25200,2016-10-08 13:18:18-07:00,25200,True,False,"['assembly.py', 'parse.py', 'duplookupswitchkey.j']",['685201305baa006c38ebecadc19a92b41d4e9ade'],7,27,34,3,0.0,0.0,1.0
1a0cb7c3510676900389069178fa1fa7fdd2daeb,more error messages,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-08 13:32:15-07:00,25200,2016-10-08 13:32:15-07:00,25200,True,False,"['parse.py', 'pool.py']",['9a2e6c28d857c5d16aea05641945e8cd9e323222'],7,13,20,2,0.16666666666666666,0.16666666666666666,0.16666666666666666
b6eaf85993861595586940adade12f8cd7a62cee,error message for circular definitions,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-08 13:47:00-07:00,25200,2016-10-08 13:47:00-07:00,25200,True,False,['pool.py'],['1a0cb7c3510676900389069178fa1fa7fdd2daeb'],6,15,21,1,0.4444444444444444,0.0,0.0
1744878eb8e368e2b5886a8eda1b5049221cf051,better error message for ldc,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-08 13:53:30-07:00,25200,2016-10-08 13:53:30-07:00,25200,True,False,['assembly.py'],['b6eaf85993861595586940adade12f8cd7a62cee'],1,1,2,1,,,
e060bcb21135a54b9c648c3fce1100924b2259b2,add tests for ldc handling,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-08 14:00:02-07:00,25200,2016-10-08 14:00:02-07:00,25200,True,False,"['ldcs.j', 'ldcs2.j', 'ldcs3.j']",['1744878eb8e368e2b5886a8eda1b5049221cf051'],0,44,44,3,,,
8d6d6c29e65f95de5727239043030740c923b7b1,enforce whitespace seperation consistently,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-08 14:04:42-07:00,25200,2016-10-08 14:04:42-07:00,25200,True,False,"['tokenize.py', 'duprawdef.j', 'dupsymdef.j']",['e060bcb21135a54b9c648c3fce1100924b2259b2'],11,11,22,3,,,
f7fcd3cacde52e701ada10b0e972c0eb2fd90e1f,Name output by input filename rather than class when disassembling raw classfiles. Also fix stupid bug with -roundtrip,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-08 14:19:49-07:00,25200,2016-10-08 14:19:49-07:00,25200,True,False,"['script_util.py', 'disassemble.py']",['8d6d6c29e65f95de5727239043030740c923b7b1'],14,14,28,2,0.0,0.0,1.0
bd4e9ec392abd76b3ddc7f4e6b5af19dedfbcde2,fix tests on Windows,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-09 10:18:33-07:00,25200,2016-10-09 10:18:33-07:00,25200,True,False,"['script_util.py', 'runtests.py']",['f7fcd3cacde52e701ada10b0e972c0eb2fd90e1f'],3,12,15,2,1.0,1.0,1.0
61dd4e6303454f65b0c082621170732ca78df9ae,add test for missing space after directive,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-09 22:25:32-07:00,25200,2016-10-09 22:25:32-07:00,25200,True,False,['constnospace.j'],['bd4e9ec392abd76b3ddc7f4e6b5af19dedfbcde2'],0,4,4,1,,,
638f78dba409f52d5a992a61ea5c9c6a2560a852,misc assembler tweaks,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-09 22:39:00-07:00,25200,2016-10-09 22:39:00-07:00,25200,True,False,"['pool.py', 'tokenize.py']",['61dd4e6303454f65b0c082621170732ca78df9ae'],11,8,19,2,1.0,0.0,0.0
d572014480e594f508ecdae94895ed8c25366e42,Fix handling of SourceDebugExtension (#99),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-16 20:49:08-07:00,25200,2016-10-16 20:49:08-07:00,25200,True,False,"['disassembly.py', 'parse.py', 'SelfInner.class', 'SelfInner.j']",['638f78dba409f52d5a992a61ea5c9c6a2560a852'],2,5,7,4,,,
fb86ae89c7871c9e285e525eb3904343a9a132e4,Make string element values take utfref rather than ldcrhs (#100),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-10-18 07:41:40-07:00,25200,2016-10-18 07:41:40-07:00,25200,True,False,"['assembler.txt', 'changelog.txt', 'disassembly.py', 'parse.py']",['d572014480e594f508ecdae94895ed8c25366e42'],5,8,13,4,,,
2793645e017937551aed28c68f1ee8e469988f9d,Fix handling of .const [0] (#106),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-12-31 14:21:05-08:00,28800,2016-12-31 14:21:05-08:00,28800,True,False,"['pool.py', 'const0.j', 'bs0.j']",['fb86ae89c7871c9e285e525eb3904343a9a132e4'],1,14,15,3,0.3333333333333333,0.3333333333333333,0.3333333333333333
e0999e05590fc49f7ad634417b54e6de85d05649,Fix handling of leading +s in assembler (#107),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-12-31 14:40:18-08:00,28800,2016-12-31 14:40:18-08:00,28800,True,False,"['parse.py', 'ldcs_plus.j']",['2793645e017937551aed28c68f1ee8e469988f9d'],3,42,45,2,,,
3c1102d8fed00b1498c05b7d8162dda9f493ce95,Ignore Code attributes outside of methods (#110),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-12-31 15:05:27-08:00,28800,2016-12-31 15:05:27-08:00,28800,True,False,['disassembly.py'],['e0999e05590fc49f7ad634417b54e6de85d05649'],3,3,6,1,,,0.0
53f539beb8275494d851563a3a63c378e4aab7ff,Add test for checkcast of nonexistent class (#105),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2016-12-31 15:17:57-08:00,28800,2016-12-31 15:17:57-08:00,28800,True,False,"['__init__.py', 'NonexistentCheckcast.class', 'BadInnerTest.j', 'NonexistentCheckcast.j']",['3c1102d8fed00b1498c05b7d8162dda9f493ce95'],1,14,15,4,,,
13b830037f33debf9b12bd5cd535b287db0fb041,Handle explicit class descriptor in new (#104),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-01-02 13:29:24-08:00,28800,2017-01-02 13:29:34-08:00,28800,True,False,"['blockmakerfuncs.py', 'LClassLiteralTest.class', 'LClassLiteralTest.j']",['53f539beb8275494d851563a3a63c378e4aab7ff'],0,10,10,3,1.0,1.0,0.0
ff839c92288ceccbd21c067dbe54206da97e9a3b,Fix handling of nonstandard whitespace in assembler,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-01-05 20:29:12-08:00,28800,2017-01-05 20:29:12-08:00,28800,True,False,"['assembler.txt', 'tokenize.py', 'verticaltab.j']",['13b830037f33debf9b12bd5cd535b287db0fb041'],5,6,11,3,0.0,0.0,0.0
a3e9c8bac16b32b2f6b00ffc4b10b3244b76dca5,remove unused attribute,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-03-02 19:39:00-08:00,28800,2017-03-02 19:39:00-08:00,28800,True,False,['disassembly.py'],['ff839c92288ceccbd21c067dbe54206da97e9a3b'],3,1,4,1,0.0,0.0,1.0
00c84d2644ec7ef82fe7d94831dda817403ce5c9,Minor cleanups,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-03-03 03:02:15-08:00,28800,2017-03-03 03:02:15-08:00,28800,True,False,"['disassembly.py', 'classdata.py']",['a3e9c8bac16b32b2f6b00ffc4b10b3244b76dca5'],14,16,30,2,,,
d36d6dbf29ec78ce15cddf105d8d7ce7dc2d34e9,fix missing length check when disassembling ldc string,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-03-03 03:09:01-08:00,28800,2017-03-03 03:09:01-08:00,28800,True,False,['disassembly.py'],['00c84d2644ec7ef82fe7d94831dda817403ce5c9'],4,6,10,1,0.0,0.0,0.0
b8cc9831a53af6e20ed89c8eea739368bdf6d2e6,add type specific prefix to disassembled symrefs,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-03-03 03:18:16-08:00,28800,2017-03-03 03:18:16-08:00,28800,True,False,['disassembly.py'],['d36d6dbf29ec78ce15cddf105d8d7ce7dc2d34e9'],1,8,9,1,1.0,1.0,0.0
78e54879fa8a36539bc12cd1a4a9cd23ef6f87d7,Fix handling of class name [0] (#114),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-04-15 14:45:44-07:00,25200,2017-04-15 14:45:44-07:00,25200,True,False,"['assembly.py', 'script_util.py', 'name0.j']",['b8cc9831a53af6e20ed89c8eea739368bdf6d2e6'],2,5,7,3,,,
0ab54b6506d654b23ae4e5aadb4c9da1b5d9cd37,Change top level scripts to use print function,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-04-26 18:53:14-07:00,25200,2017-04-26 18:53:14-07:00,25200,True,False,"['assemble.py', 'decompile.py', 'disassemble.py', 'runtests.py']",['78e54879fa8a36539bc12cd1a4a9cd23ef6f87d7'],28,36,64,4,,,
51de90f15a7dea2ac4fa2ab165c7e3469c6c748a,More print functions,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-04-26 19:00:38-07:00,25200,2017-04-26 19:00:38-07:00,25200,True,False,"['disassembly.py', 'parse.py']",['0ab54b6506d654b23ae4e5aadb4c9da1b5d9cd37'],3,7,10,2,,,
7b7f4a7ee8c9775f27da5e29eaccb1dcfa2b22b3,Python3 compatibility fixes,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-04-26 19:10:56-07:00,25200,2017-04-26 19:11:01-07:00,25200,True,False,"['assembly.py', 'disassembly.py', 'classdata.py', 'disassemble.py']",['51de90f15a7dea2ac4fa2ab165c7e3469c6c748a'],14,20,34,4,0.0,0.0,1.0
63044c7a37e33df5aafdc7795c292afc64344ffc,More python3 fixes,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-04-26 20:10:33-07:00,25200,2017-04-26 20:10:33-07:00,25200,True,False,"['assembly.py', 'disassembly.py', 'parse.py', 'pool.py', 'tokenize.py', 'writer.py', 'mutf8.py', 'script_util.py', 'runtests.py']",['7b7f4a7ee8c9775f27da5e29eaccb1dcfa2b22b3'],29,41,70,9,1.0,1.0,0.6666666666666666
3e6b7cd121d724caff1ecf538842f62d214d4cd4,Make unicode path errors go away,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-04-26 20:17:11-07:00,25200,2017-04-26 20:17:11-07:00,25200,True,False,['script_util.py'],['63044c7a37e33df5aafdc7795c292afc64344ffc'],1,5,6,1,0.0,0.0,0.6666666666666666
351fe7890cd7c6b0f5889174045c8a01e90886f4,update readme,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-04-26 20:21:20-07:00,25200,2017-04-26 20:21:20-07:00,25200,True,False,['README.TXT'],['3e6b7cd121d724caff1ecf538842f62d214d4cd4'],5,11,16,1,,,
4668a4f7fdd8f9eb948fb7fb4e735dbf8fd9b815,improve readme explanation of -roundtrip,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-04-26 20:29:09-07:00,25200,2017-04-26 20:29:09-07:00,25200,True,False,['README.TXT'],['351fe7890cd7c6b0f5889174045c8a01e90886f4'],2,8,10,1,,,
35dd3c8842a0a835d0f309e7b980a9c765453869,set exit code 1 on assembler error (#116),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-05-16 20:13:39-07:00,25200,2017-05-16 20:13:39-07:00,25200,True,False,['parse.py'],['4668a4f7fdd8f9eb948fb7fb4e735dbf8fd9b815'],0,2,2,1,0.0,0.0,0.0
ca0e43a377916967e90c35f08e355ccf0e8b9f9f,make tests runable under python 3,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-05-16 20:16:13-07:00,25200,2017-05-16 20:16:13-07:00,25200,True,False,['runtests.py'],['35dd3c8842a0a835d0f309e7b980a9c765453869'],1,2,3,1,,,
86dfd43d148f65226ae4c020aff7421637e3756d,fix python3 bug,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-05-16 20:27:57-07:00,25200,2017-05-16 20:27:57-07:00,25200,True,False,"['parse.py', 'jasminfield.j', 'jasminmethod.j']",['ca0e43a377916967e90c35f08e355ccf0e8b9f9f'],4,28,32,3,,,
9626aee20bac4d8e7fbcec4d73fcd827e51458d8,remove unused method,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-07-28 18:44:00-07:00,25200,2017-07-28 18:44:00-07:00,25200,True,False,['reader.py'],['86dfd43d148f65226ae4c020aff7421637e3756d'],1,0,1,1,,,
15408bb74866b161c7d0ae3d019c313d05a5c3e1,remove unnecessary method,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-07-28 19:22:07-07:00,25200,2017-07-28 19:22:07-07:00,25200,True,False,"['disassembly.py', 'classdata.py', 'reader.py']",['9626aee20bac4d8e7fbcec4d73fcd827e51458d8'],6,5,11,3,,,
4a2a5e0b3418f61cafe8c060a4006e5ebc4e0e79,Fix handling of unmerged surrogates in mutf8 encoding,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-07-30 18:30:06-07:00,25200,2017-07-30 18:39:17-07:00,25200,True,False,['mutf8.py'],['15408bb74866b161c7d0ae3d019c313d05a5c3e1'],1,2,3,1,,,
2a712fe6f82beaff1cd20a67625a3ae5f851cab4,fix mispelling,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-07-30 19:50:17-07:00,25200,2017-07-30 19:50:17-07:00,25200,True,False,"['parse.py', 'pool.py', 'objtypes.py']",['4a2a5e0b3418f61cafe8c060a4006e5ebc4e0e79'],12,12,24,3,,,
c18a8abdf365eb9e0d584c4a964a2a7314aa2d2d,remove unnecessary sign conversions in parseFloat,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-07-31 17:41:40-07:00,25200,2017-07-31 17:41:40-07:00,25200,True,False,['parse.py'],['2a712fe6f82beaff1cd20a67625a3ae5f851cab4'],4,4,8,1,,,
2d19dfc3026c8a05a8f8ca2744a6c79c1ebab69c,Allow filtering assembler tests,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-07-31 17:57:54-07:00,25200,2017-07-31 17:57:54-07:00,25200,True,False,['runtests.py'],['c18a8abdf365eb9e0d584c4a964a2a7314aa2d2d'],6,6,12,1,,,
3ab83b337a58be1dbc7eaf98e5aa5c684754671e,add test,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-07-31 18:12:38-07:00,25200,2017-07-31 18:12:38-07:00,25200,True,False,['floatliterals.j'],['2d19dfc3026c8a05a8f8ca2744a6c79c1ebab69c'],0,40,40,1,,,
1c23c1d77ec2489c80dde2dd2fff6fb5b4a6334a,Fix bug in assembler error message for invalid stackmaps,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-08-15 12:53:42-07:00,25200,2017-08-15 12:53:42-07:00,25200,True,False,"['parse.py', 'stackframe_offset_toobig.j']",['3ab83b337a58be1dbc7eaf98e5aa5c684754671e'],1,79,80,2,,,
b75b3c6e5eaf22c291e3463527583167000a779c,Change brace style to put opening brace on the same line (#120),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-09-27 12:42:39-07:00,25200,2017-09-27 12:42:39-07:00,25200,True,False,"['ast.py', 'ast2.py']",['1c23c1d77ec2489c80dde2dd2fff6fb5b4a6334a'],7,7,14,2,,,
4b52034e60513ac039136bccd63400ba08919695,Update tests broken by Java 9,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-09-29 16:23:18-07:00,25200,2017-09-29 16:23:18-07:00,25200,True,False,"['__init__.py', 'floattest.class', 'floattest.java']",['b75b3c6e5eaf22c291e3463527583167000a779c'],8,8,16,3,,,
0ba0558382c053da0eb434312dc7c5e8f215c786,Assembler/disassembler support for Java 9,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-09-29 19:06:39-07:00,25200,2017-09-29 19:06:39-07:00,25200,True,False,"['assembler.txt', 'disassembly.py', 'flags.py', 'parse.py', 'pool.py', 'classdata.py', 'README.TXT']",['4b52034e60513ac039136bccd63400ba08919695'],16,99,115,7,0.234375,0.234375,0.71875
b3333e55edd6211dc9f6cc20eb7355c97ac54b6a,fix assembler bugs with modules,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-09-30 10:18:49-07:00,25200,2017-09-30 10:18:49-07:00,25200,True,False,"['disassembly.py', 'parse.py', 'runtests.py', 'module.j', 'module-info.class']",['0ba0558382c053da0eb434312dc7c5e8f215c786'],20,36,56,5,,0.0,0.0
89932bd236a1783b42b55b8edd9a4a071048fe89,fix bug in parsing MethodParameters attribute,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-10-01 12:10:46-07:00,25200,2017-10-01 12:10:46-07:00,25200,True,False,"['disassembly.py', 'parse.py', '__init__.py', 'MethodParametersTest.jar', 'MethodParametersTest.java']",['b3333e55edd6211dc9f6cc20eb7355c97ac54b6a'],3,32,35,5,0.0,1.0,1.0
da8a6287cf83a21b849cbfa301ae004fadb8f7d0,display context appropriate flags in case of multiple flags with same value,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-10-01 12:34:11-07:00,25200,2017-10-01 12:34:11-07:00,25200,True,False,"['disassembly.py', 'flags.py']",['89932bd236a1783b42b55b8edd9a4a071048fe89'],13,24,37,2,1.0,1.0,1.0
51212eb27017252d9b7b04917ac79c588697427a,Fix disassembly of module name,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2017-10-01 12:38:00-07:00,25200,2017-10-01 12:38:00-07:00,25200,True,False,['disassembly.py'],['da8a6287cf83a21b849cbfa301ae004fadb8f7d0'],1,2,3,1,0.0,0.0,1.0
a486c6a44eb3222276605ce5db762d53433ee31a,Ignore <clinit> flags #129,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2018-01-23 20:12:38-08:00,28800,2018-01-23 20:13:43-08:00,28800,True,False,"['method.py', 'script_util.py', '__init__.py', 'ClinitFlagsTest.class', 'ClinitFlagsTest.j']",['51212eb27017252d9b7b04917ac79c588697427a'],6,26,32,5,,1.0,
fb066073276575d0fe9ceabfc57fe5f2601aa921,Disassemble invalid cp references as raw instead of failing,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2018-01-25 23:03:57-08:00,28800,2018-01-25 23:03:57-08:00,28800,True,False,"['disassembly.py', '__init__.py', 'AnachAttrBadCP.class', 'AnachAttrBadCP.j']",['a486c6a44eb3222276605ce5db762d53433ee31a'],2,27,29,4,0.0,0.0,0.0
c6c60beaafc6b5575bc8b3f945b08b4ffa123212,Fallback to binary when attribute disassembly fails,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2018-01-25 23:51:12-08:00,28800,2018-01-25 23:51:12-08:00,28800,True,False,"['disassembly.py', 'reader.py', '__init__.py', 'AnachAttrExtraData.class', 'AnachAttrTruncated.class', 'AnachAttrExtraData.j', 'AnachAttrTruncated.j']",['fb066073276575d0fe9ceabfc57fe5f2601aa921'],62,130,192,7,0.16666666666666666,0.16666666666666666,0.05555555555555555
4fb9b067b65743fbe45c113ded9c5f30e670236f,Handle invalid labels in invalid attributes,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2018-01-26 21:27:50-08:00,28800,2018-01-26 21:27:50-08:00,28800,True,False,"['disassembly.py', '__init__.py', 'AnachAttrBadLowLbl.class', 'AnachAttrBadLowLbl.j']",['c6c60beaafc6b5575bc8b3f945b08b4ffa123212'],15,47,62,4,0.7,0.7,0.9
b9b4b2af7cfc493d472660a11aa88dc150c25fce,Handle invalid StackMapTable attributes,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2018-01-26 22:16:56-08:00,28800,2018-01-26 22:23:20-08:00,28800,True,False,"['assembler.txt', 'changelog.txt', 'assembly.py', 'disassembly.py', 'parse.py', 'reader.py', '__init__.py', 'AnachAttrStackMapExtra.class', 'AnachAttrStackMapLbl.class', 'AnachAttrStackMapTruncated.class', 'AnachAttrStackMapTwice.class', 'AnachAttrStackMapVTCode.class', 'AnachAttrStackMapExtra.j', 'AnachAttrStackMapLbl.j', 'AnachAttrStackMapTruncated.j', 'AnachAttrStackMapTwice.j', 'AnachAttrStackMapVTCode.j']",['4fb9b067b65743fbe45c113ded9c5f30e670236f'],15,191,206,17,0.125,0.0,0.96875
e0aca943f9fdfa16f07c9c02bcfa6fec9f536fbf,Use better hash,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2018-01-26 22:39:34-08:00,28800,2018-01-26 22:39:34-08:00,28800,True,False,['script_util.py'],['b9b4b2af7cfc493d472660a11aa88dc150c25fce'],3,3,6,1,,,
3f63f29c9a393a44853b113a0a15a1df85a2fa00,"Update copyright year

A+ pull request",Carl Lange,carl@flax.ie,GitHub,noreply@github.com,2018-02-19 23:50:29+00:00,0,2018-02-19 23:50:29+00:00,0,True,False,['README.TXT'],['e0aca943f9fdfa16f07c9c02bcfa6fec9f536fbf'],1,1,2,1,,,
552464e5f7d2325d72b2a48fad1291b48125019d,Fix unicode issue on Python 3 (#134),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2018-02-24 11:24:53-08:00,28800,2018-02-24 11:25:58-08:00,28800,True,False,['script_util.py'],['746705d77725bf28950b68e936f792d9ce7db1b3'],1,1,2,1,,,
f12ebc608ba64d60bf3b14168765674a9b07caee,#139: Fix getcwdu on python3,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2018-03-24 10:25:27-07:00,25200,2018-03-24 10:25:27-07:00,25200,True,False,['script_util.py'],['552464e5f7d2325d72b2a48fad1291b48125019d'],1,1,2,1,,,
af9c9c79b2f563e4343825651549c167dce374c0,Update readme,Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2018-03-24 20:34:19-07:00,25200,2018-03-24 20:34:19-07:00,25200,True,False,['README.TXT'],['f12ebc608ba64d60bf3b14168765674a9b07caee'],2,2,4,1,,,
ee28dcb806f9bc1b9337faa189aab64f1a44989d,Added .editorconfig according to pep 8.,KOLANICH,kolan_n@mail.ru,KOLANICH,kolan_n@mail.ru,2018-03-30 12:00:09+03:00,-10800,2018-03-30 12:00:09+03:00,-10800,True,False,['.editorconfig'],['af9c9c79b2f563e4343825651549c167dce374c0'],0,8,8,1,,,
302bfee23fbaed666a7ce92c192ccc00cca96e73,Hide super() calls at start of ctor (#145),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2018-05-12 19:13:15-07:00,25200,2018-05-12 19:13:15-07:00,25200,True,False,['javamethod.py'],['9441e9a814000c44f4b497cf16dfc8bf7cf2915a'],0,9,9,1,0.875,0.0,0.875
258ae9a931e0c403a79a737e7f41d0fb0cbac051,Fix extra newline after if else (#149),Robert Grosse,n210241048576@gmail.com,Robert Grosse,n210241048576@gmail.com,2018-05-12 19:16:18-07:00,25200,2018-05-12 19:16:18-07:00,25200,True,False,['ast.py'],['302bfee23fbaed666a7ce92c192ccc00cca96e73'],3,2,5,1,0.0,1.0,1.0
3af782b940391a86ea35b24592f8ac8261a55323,initial setup.py,drstrange,drstrange@yermom,drstrange,drstrange@yermom,2018-12-12 10:31:26-05:00,18000,2018-12-12 10:31:26-05:00,18000,True,False,['setup.py'],['258ae9a931e0c403a79a737e7f41d0fb0cbac051'],0,92,92,1,,,
feb70f7089d19f00fa97f66ff72170f418e86404,added header for -noff version,drstrange,drstrange@yermom,drstrange,drstrange@yermom,2018-12-12 10:32:27-05:00,18000,2018-12-12 10:32:27-05:00,18000,True,False,['README.TXT'],['3af782b940391a86ea35b24592f8ac8261a55323'],0,14,14,1,,,
f4b7d028791f7fcd7f54b666612b24b62b352635,processed with 2to3,drstrange,drstrange@yermom,drstrange,drstrange@yermom,2018-12-12 10:33:07-05:00,18000,2018-12-12 10:33:07-05:00,18000,True,False,"['environment.py', 'floatutil.py', 'javaclass.py', 'graph.py', 'ifcmp.py', 'switch.py']",['feb70f7089d19f00fa97f66ff72170f418e86404'],34,40,74,6,1.0,1.0,1.0
4b4a5c104da0a8901deb3eb0260767637a55a2d9,non-MD syntax,drstrange,drstrange@yermom,drstrange,drstrange@yermom,2018-12-12 10:34:42-05:00,18000,2018-12-12 10:34:42-05:00,18000,True,False,['README.TXT'],['f4b7d028791f7fcd7f54b666612b24b62b352635'],1,1,2,1,,,
7e4be08c5f56186fff57a0bb746d42a557bcb402,clean version number for pypi,drstrange,drstrange@yermom,drstrange,drstrange@yermom,2018-12-12 10:39:51-05:00,18000,2018-12-12 10:39:51-05:00,18000,True,False,['setup.py'],['4b4a5c104da0a8901deb3eb0260767637a55a2d9'],1,1,2,1,,,
d22c3b10414ef1d1c1b2bfabff6d58122e7e400a,fixed download_url,drstrange,drstrange@yermom,drstrange,drstrange@yermom,2018-12-12 10:54:45-05:00,18000,2018-12-12 10:54:45-05:00,18000,True,False,['setup.py'],['7e4be08c5f56186fff57a0bb746d42a557bcb402'],1,1,2,1,,,
