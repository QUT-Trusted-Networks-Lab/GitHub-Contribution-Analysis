Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
b0ccb73bbdcb568015930103582d88d08ad7850c,"Initial working Hypercorn

This takes the serving code from Quart 0.5.0 and turns it into a
working ASGI server. This will then allow Quart to be an ASGI
Framework with Hypercorn as the ASGI Server. This in turn allows
for a richer asyncio based web ecosystem, as different frameworks
can be paired with differing servers.

The name Hypercorn has been chosen as the code is built on the
excellent sans-io Hyper libraries, h11, h2, and wsproto whilst being
inspired by Gunicorn.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-05-21 08:38:53+01:00,-3600,2018-05-27 11:16:33+01:00,-3600,True,False,"['.gitignore', '.gitlab-ci.yml', 'CHANGELOG.rst', 'LICENSE', 'MANIFEST.in', 'README.rst', 'fuzzingclient.json', 'server.py', 'summarise.py', 'cert.pem', 'key.pem', 'server.py', 'Makefile', 'api.rst', 'conf.py', 'index.rst', 'installation.rst', 'make.bat', 'quickstart.rst', '__about__.py', '__init__.py', '__main__.py', 'base.py', 'config.py', 'h11.py', 'h2.py', 'http.py', 'logging.py', 'run.py', 'typing.py', 'websocket.py', 'setup.cfg', 'setup.py', '__init__.py', 'helpers.py', 'test_base.py', 'test_h11.py', 'test_h2.py', 'test_http.py', 'test_logging.py', 'test_websocket.py', 'tox.ini']",[],0,2540,2540,42,0.49566587864460204,0.706855791962175,0.6824271079590228
33e6a364494a4f72fdd1546ee85bb89e7c073a45,"Add typical command line arguments

These are incomplete, e.g. bind only considers the first supplied
value. This should provide the basic config usage from the command
line.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-05-27 13:23:52+01:00,-3600,2018-05-27 14:06:53+01:00,-3600,True,False,['__main__.py'],['b0ccb73bbdcb568015930103582d88d08ad7850c'],0,51,51,1,0.0,1.0,1.0
448087102ba6b6f2744cd59aa9d44936fcc73f81,"Refactor the h11 and h2 serving code

This removes the inheritance from the http module for h11 and h2 on
the grounds that it made the code more confusing and difficult to
follow. In the process it also made it clear that the code was
unnecessarily trying to control back-pressure that should rather be
left to the framework. Specifically this means that an ASGI framework
can block whilst writing, but should still receive a disconnect
message and cleanup.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-05-28 10:39:24+01:00,-3600,2018-05-28 10:39:24+01:00,-3600,True,False,"['server.py', 'server.py', 'base.py', 'h11.py', 'h2.py', 'http.py', 'helpers.py', 'test_h11.py', 'test_h2.py', 'test_http.py']",['33e6a364494a4f72fdd1546ee85bb89e7c073a45'],429,428,857,10,0.0,0.19230769230769232,1.0
5fea7bfa64d72b4b005b88c32c6df0c45f00526b,"Add command line arguments to specify the SSL settings

This covers most (all?) of the desired settings for SSL with naming
matching Gunicorn.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-05-28 11:57:16+01:00,-3600,2018-05-28 11:58:23+01:00,-3600,True,False,['__main__.py'],['448087102ba6b6f2744cd59aa9d44936fcc73f81'],0,28,28,1,0.0,0.0,1.0
8efe627e8924f5f9611ffb492b416b62671d5835,"Handle unhandled exceptions in an ASGI Framework

These exceptions are handled by closing the connection if h11 or
stream if h2. This allows the server to continue serving after
framework exceptions.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-05-28 13:24:57+01:00,-3600,2018-05-28 13:24:57+01:00,-3600,True,False,"['h11.py', 'h2.py', 'helpers.py', 'test_h11.py', 'test_h2.py']",['5fea7bfa64d72b4b005b88c32c6df0c45f00526b'],9,53,62,5,0.42857142857142855,1.0,0.5
bcf88817175b78577935a2ad792e357bee3af66b,"Fix typo in autobahn compliance

Missed in 448087102ba6b6f2744cd59aa9d44936fcc73f81",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-05-28 13:27:20+01:00,-3600,2018-05-28 13:27:48+01:00,-3600,True,False,['server.py'],['8efe627e8924f5f9611ffb492b416b62671d5835'],1,1,2,1,,,
7c8848eb033b705656c513886c0ec01134fa3bbd,"Correctly handle unhandled ASGI Framework exceptions

This fixes a bug in 8efe627e8924f5f9611ffb492b416b62671d5835 whereby a
correct framework StreamEnded is checked for, rather than one due to a
framework error.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-05-28 14:50:37+01:00,-3600,2018-05-28 14:50:37+01:00,-3600,True,False,"['h2.py', 'test_h2.py']",['bcf88817175b78577935a2ad792e357bee3af66b'],3,6,9,2,0.3333333333333333,1.0,1.0
2f785d4a95dd9b8c68a0ffd842e88b59d70e6cb3,"Refactor websocket code, allow HTTP responses

This follows a similar refactor to the h11 and h2 in
448087102ba6b6f2744cd59aa9d44936fcc73f81, to aid readability. In
addition it uses the ASGI provisional websocket denial response
extension spec to allow frameworks to send a HTTP response denying the
upgrade.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-05-28 14:59:24+01:00,-3600,2018-06-02 18:33:02+01:00,-3600,True,False,"['server.py', 'base.py', 'websocket.py', 'helpers.py', 'test_websocket.py']",['7c8848eb033b705656c513886c0ec01134fa3bbd'],51,107,158,5,0.0,0.34615384615384615,0.09615384615384616
c53d64610326d6766708863fbe47c31ff233c896,Link to the relevant Hyper libraries in the README,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-05-28 15:14:29+01:00,-3600,2018-06-02 18:33:02+01:00,-3600,True,False,['README.rst'],['2f785d4a95dd9b8c68a0ffd842e88b59d70e6cb3'],1,4,5,1,,,
59c58f8b093b6675fc49c1c579c1a96b81fe8042,"Allow uvloop usage

uvloop is a fast implementation of the event loop, it can be
optionally used by installing `hypercorn[uvloop]` and setting the
config `uvloop` to True. If using the command line the option is
`--uvloop`. uvloop is not available by default as it does not support
windows.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-05-28 16:27:40+01:00,-3600,2018-06-02 18:33:02+01:00,-3600,True,False,"['__main__.py', 'config.py', 'run.py', 'setup.py']",['c53d64610326d6766708863fbe47c31ff233c896'],0,20,20,4,0.0,0.0,1.0
705b81cdb68234dc6c1d32d16e5154e370746aef,"Add initial documentation

This sets up basic documentation and also clarifies some config values
to match the documented values.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-05-30 22:09:08+01:00,-3600,2018-06-02 18:33:02+01:00,-3600,True,False,"['.gitlab-ci.yml', 'conf.py', 'dos_mitigations.rst', 'index.rst', 'logging.rst', 'quickstart.rst', 'usage.rst', 'config.py']",['59c58f8b093b6675fc49c1c579c1a96b81fe8042'],20,253,273,8,,,
602fe5ee9245fc4c8a0e380db46442c9983caad8,"Drop alpine version for autobahn testsuite

Cryptography isn't compatible with the latest libressl.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-05-30 22:31:33+01:00,-3600,2018-06-02 18:33:02+01:00,-3600,True,False,['.gitlab-ci.yml'],['705b81cdb68234dc6c1d32d16e5154e370746aef'],1,1,2,1,,,
b160d62b67eec6e67d06439870506db52d430e03,"Add discussion point documentation on backpressure

This should help ASGI Framework authors ensure that backpressure is
correctly dealt with, without tasks leaking.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-02 12:27:46+01:00,-3600,2018-06-02 18:33:02+01:00,-3600,True,False,"['backpressure.rst', 'index.rst']",['602fe5ee9245fc4c8a0e380db46442c9983caad8'],0,71,71,2,,,
400b08b096eb58f2a40993a08b6c5cc214c271f6,"Add initial multiprocessing (worker) support

This allows for better utilisation of a machine as it likely has more
than one CPU. Hence a process per CPU will better utilise the available
resource.

This initial code is heavily inspired by the solution used in Sanic to
run with multiple workers.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-02 15:41:43+01:00,-3600,2018-06-02 18:33:02+01:00,-3600,True,False,"['usage.rst', '__main__.py', 'config.py', 'run.py']",['b160d62b67eec6e67d06439870506db52d430e03'],11,84,95,4,0.06896551724137931,0.06896551724137931,0.05172413793103448
897100d9364f216e693a71a6694e7047e29bc497,"Add provisional startup/cleanup funtionality

This allows frameworks to have startup and cleanup (before any serving
and after all serving) coroutines awaited. It is provisional as this
isn't in the ASGI spec (and may not work correctly).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-02 17:22:51+01:00,-3600,2018-06-02 18:33:02+01:00,-3600,True,False,['run.py'],['400b08b096eb58f2a40993a08b6c5cc214c271f6'],0,5,5,1,0.0,0.0,0.0
d57105b8079f83a26d38f3f3a3b72d84440310f3,Release 0.1.0,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-02 17:24:50+01:00,-3600,2018-06-02 18:33:02+01:00,-3600,True,False,['CHANGELOG.rst'],['897100d9364f216e693a71a6694e7047e29bc497'],3,3,6,1,,,
80110feb022b4382acfacb1591e2cfc2510914a6,"Bugfix correct the ASGI extension definitions

These changed during the ASGI review, and I forgot to update
Hypercorn.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-03 10:26:41+01:00,-3600,2018-06-03 10:26:41+01:00,-3600,True,False,"['h2.py', 'websocket.py']",['d57105b8079f83a26d38f3f3a3b72d84440310f3'],2,4,6,2,0.0,1.0,1.0
68fccac70ffed02fc93d38ff040ffc861e6ff1bc,"Bugfix don't log without a log target

Logging is an expensive operation (even if there is no handler to log
to).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-03 16:09:08+01:00,-3600,2018-06-03 19:19:18+01:00,-3600,True,False,"['config.py', 'h11.py', 'h2.py', 'websocket.py']",['80110feb022b4382acfacb1591e2cfc2510914a6'],14,20,34,4,0.5,0.0,0.8333333333333334
d2d7906a24d15900845cbae8fe03879f639b4332,Fix ssl: values from 'args' instead of hardcoded,Jordi Masip,jordi@masip.cat,Jordi Masip,jordi@masip.cat,2018-06-07 23:20:40+02:00,-7200,2018-06-07 23:20:40+02:00,-7200,True,False,['__main__.py'],['68fccac70ffed02fc93d38ff040ffc861e6ff1bc'],1,1,2,1,,,
30d0467c731849d619a517387c6536bb8e722459,Avoid an UnboundLocalError in logging,HoverHell,hoverhell@gmail.com,HoverHell,hoverhell@gmail.com,2018-06-13 14:50:19+03:00,-10800,2018-06-13 14:50:19+03:00,-10800,True,False,['logging.py'],['68fccac70ffed02fc93d38ff040ffc861e6ff1bc'],1,3,4,1,0.0,0.0,0.0
f453e5baaf0b4dca9ed474a34a85dbebcd61b077,"Don't send empty bytes (b'')

Empty bytes (b'') are common with ASGI as it indicates the other parts
of the message are key. Sending b'' is unnecessarily wasteful.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-17 13:50:04+01:00,-3600,2018-06-17 22:07:08+01:00,-3600,True,False,"['h11.py', 'h2.py', 'websocket.py']",['e3368154bcda5c8148e87cffb2104725addd0ded'],4,13,17,3,0.0,0.0,0.3333333333333333
8acdeb32342fea3efec085fd87e3063f850a52e3,"Update documentation from Quart

The remaining serving rather than framework relevant documention in
Quart is moved to Hypercorn in this commit.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-17 13:51:08+01:00,-3600,2018-06-17 22:07:08+01:00,-3600,True,False,"['design_choices.rst', 'http2.rst', 'index.rst', 'serving_http2.rst']",['f453e5baaf0b4dca9ed474a34a85dbebcd61b077'],0,141,141,4,,,
4a8a3df76b0f1659e530353cacf58d15511dcf03,Support ipv6 binding (e.g. '--bind :::12345'),HoverHell,hoverhell@gmail.com,HoverHell,hoverhell@gmail.com,2018-06-22 18:43:08+03:00,-10800,2018-06-22 18:43:08+03:00,-10800,True,False,"['__main__.py', 'run.py']",['8acdeb32342fea3efec085fd87e3063f850a52e3'],3,3,6,2,,,
512aef665b960d6048db0df920eccec0ec118b48,linting,HoverHell,hoverhell@gmail.com,HoverHell,hoverhell@gmail.com,2018-06-23 11:56:27+03:00,-10800,2018-06-23 11:56:27+03:00,-10800,True,False,['run.py'],['4a8a3df76b0f1659e530353cacf58d15511dcf03'],1,1,2,1,,,
bcc2acbcb9f2e9e44521b3d80642cc52ff608139,"Add the ability to load the configuration from a file

This allows for the command line argument ``-c`` or ``--config`` to be
used to specify a TOML or python file containing the configuration. If
a python file is used the argument should be prefixed with
``python:`` (this prefix follows Gunicorn's usage).

TOML has been chosen as a nicer choice than JSON or YAML by my
subjective view.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-24 14:08:04+01:00,-3600,2018-06-24 15:28:33+01:00,-3600,True,False,"['MANIFEST.in', 'usage.rst', '__main__.py', 'config.py', 'setup.py', 'config.py', 'config.toml', 'test___main__.py', 'test_config.py']",['512aef665b960d6048db0df920eccec0ec118b48'],3,186,189,9,0.35658914728682173,0.9534883720930233,0.7674418604651163
cbf303728818b6fa6c6926eb7340c43c6daf79d6,"Unblock on connection close

This allows frameworks calling ``await send`` to also unblock and
therefore cleanup when the connection is closed.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-24 14:54:33+01:00,-3600,2018-06-24 15:28:33+01:00,-3600,True,False,"['backpressure.rst', 'base.py']",['bcc2acbcb9f2e9e44521b3d80642cc52ff608139'],55,3,58,2,1.0,1.0,1.0
9b22f5048bb623cc2b07586ddb78ec03de271777,"Bugfix send a closed message once

This better matches the expected behaviour.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-24 15:25:02+01:00,-3600,2018-06-24 15:28:33+01:00,-3600,True,False,"['base.py', 'h11.py', 'h2.py', 'websocket.py']",['cbf303728818b6fa6c6926eb7340c43c6daf79d6'],3,10,13,4,1.0,1.0,0.7142857142857143
0f81039ac5eef6a7a8d96acd2230874b49ae6bc3,"Correctly implement the client and server scope values

These should be a List[Tuple[str, int]] regardless of IPv4 or IPv6, it
isn't clear what it should be for other socket families though.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-24 17:42:00+01:00,-3600,2018-06-24 17:42:00+01:00,-3600,True,False,"['base.py', 'h11.py', 'h2.py', 'logging.py', 'websocket.py', 'helpers.py']",['9b22f5048bb623cc2b07586ddb78ec03de271777'],13,41,54,6,1.0,1.0,1.0
dd940c90ac1c79dd7e7e574a0e296b7542cf0e2a,"Implement root_path ASGI scope support

This follows the Daphne usage whereby it is specifiable via the
configuration.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-24 17:47:08+01:00,-3600,2018-06-24 17:47:08+01:00,-3600,True,False,"['__main__.py', 'config.py', 'h11.py', 'h2.py', 'websocket.py']",['0f81039ac5eef6a7a8d96acd2230874b49ae6bc3'],3,10,13,5,0.0,0.0,1.0
b9ea2230d952b75aff93355cdcd825b9ba2a9dd1,"Do not create a new loop, use the default one.

Normally, components are expected to use the default loop
unless explicitly provided one (also quart used to have such
contract). Current behaviour of Hypercorn breaks it and
makes initializing them trickier ootb.",jarek,jarek@nowhere,pgjones,philip.graham.jones@googlemail.com,2018-06-14 01:04:11+01:00,-3600,2018-06-24 17:49:29+01:00,-3600,True,False,['run.py'],['dd940c90ac1c79dd7e7e574a0e296b7542cf0e2a'],2,1,3,1,1.0,1.0,1.0
60f07424bd3a4f9242c72e32a8898e4907bca178,"Bugfix log target setting in config

The previous version never set the log target. Note the logging still
needs work as only one target ``-`` is supported.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-24 18:50:02+01:00,-3600,2018-06-24 18:50:02+01:00,-3600,True,False,['config.py'],['b9ea2230d952b75aff93355cdcd825b9ba2a9dd1'],0,2,2,1,1.0,1.0,1.0
df7684ca10179077b0a6b4b64d2e237ff4ca3dc7,"Bugfix cope with non-conformant ASGI implementations

The ASGI specification for websockets states the bytes key value
should either be None or bytes, some implementations however omit it
(https://github.com/django/channels/issues/1087). This makes Hypercorn
cope with both implementations.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-24 18:58:56+01:00,-3600,2018-06-24 18:58:56+01:00,-3600,True,False,['websocket.py'],['60f07424bd3a4f9242c72e32a8898e4907bca178'],1,1,2,1,,,
334adf59bdcea4d5448eef86de742340d9251f3d,"Bugfix client and server scope values should be a single tuple

The previous version of the ASGI specification incorrectly suggested
they should be a list of tuples.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-24 19:23:41+01:00,-3600,2018-06-24 19:24:41+01:00,-3600,True,False,['base.py'],['df7684ca10179077b0a6b4b64d2e237ff4ca3dc7'],5,5,10,1,,,
2c1d24e1f20a2191d4d7326f7b939adae49f28c6,Bump and release 0.2.0,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-24 22:04:24+01:00,-3600,2018-06-24 22:04:24+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['334adf59bdcea4d5448eef86de742340d9251f3d'],1,17,18,2,,,
8b00d1ef8f5e50f65afece21641102f4a23e725c,"Bugfix keep config settings rather than replace with CLI defaults

This should ensure that the arguments set in the config is only
overridden by actuall command line values, rather than the defaults as
previously.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-26 21:54:54+01:00,-3600,2018-06-26 21:54:54+01:00,-3600,True,False,"['__main__.py', 'config.py']",['2c1d24e1f20a2191d4d7326f7b939adae49f28c6'],27,40,67,2,0.0,0.0,1.0
5db4f960d2bcf4fed20a2256b310f39b56c7742a,Bump and release 0.2.1,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-26 21:56:23+01:00,-3600,2018-06-26 21:56:23+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['8b00d1ef8f5e50f65afece21641102f4a23e725c'],1,6,7,2,,,
87db4954b66990382ba81b6127eae83828214fdc,"Fix 8b00d1ef8f5e50f65afece21641102f4a23e725c

The sys_args argument should be Optional in order to work as an entry
point. It existed to allow for simple testing as introduced in this
commit.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-27 21:13:53+01:00,-3600,2018-06-27 21:13:53+01:00,-3600,True,False,"['__main__.py', 'test___main__.py']",['5db4f960d2bcf4fed20a2256b310f39b56c7742a'],3,15,18,2,1.0,1.0,1.0
4a231da634a3568a02fd577019b734619b0ca343,Bump and release 0.2.2,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-06-27 21:15:39+01:00,-3600,2018-06-27 21:15:39+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['87db4954b66990382ba81b6127eae83828214fdc'],1,6,7,2,,,
62318cfd6e16954f64622c5ddacc95bbaa26a51b,"Update CI to test against Python3.7

Now that it has been released.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-05 20:30:03+01:00,-3600,2018-07-05 20:30:03+01:00,-3600,True,False,"['.gitlab-ci.yml', 'tox.ini']",['4a231da634a3568a02fd577019b734619b0ca343'],7,14,21,2,,,
abc552864abdccd88469195354a50e1344992fa1,"Bugfix query_string value ASGI conformance

The ASGI specification states that the query_string value in the scope
should be everything after the `?`, rather than explicitly the query
string. This shouldn't make much difference, but should be clearer to
follow.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-06 21:19:36+01:00,-3600,2018-07-06 21:25:12+01:00,-3600,True,False,"['h11.py', 'h2.py', 'websocket.py']",['62318cfd6e16954f64622c5ddacc95bbaa26a51b'],14,14,28,3,,,
e513047f431c880ec292fb38abf08514ffe06d4e,"Bugfix use the wsgiref datetime formatter

This exists for servers to set the date header, and is hence correct
and likely to remain so.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-06 22:04:53+01:00,-3600,2018-07-06 22:04:53+01:00,-3600,True,False,['base.py'],['abc552864abdccd88469195354a50e1344992fa1'],3,3,6,1,,,
7d285d86d1b44cdf7ae1079a04aa00cef773e3d3,"Switch from ensure_future to create_task

The latter is preferred when a future isn't required and the loop is
available.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-06 22:05:55+01:00,-3600,2018-07-06 22:05:55+01:00,-3600,True,False,['run.py'],['e513047f431c880ec292fb38abf08514ffe06d4e'],1,1,2,1,,,
607d93520ca2727a65edd06407350660276bda31,Add Python 3.7 classifier to indicate support,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-07 10:56:20+01:00,-3600,2018-07-07 10:56:20+01:00,-3600,True,False,['setup.py'],['7d285d86d1b44cdf7ae1079a04aa00cef773e3d3'],0,1,1,1,,,
07ca0b899923111bfbfaa4c6e01cac0cfd7fd87d,"Bugfix ensure modules aren't set as config values

I think this can only apply to the `ssl` module given the name match,
however this should stop this happening in general. Previously the ssl
config value would be set to the module and then crash the runtime.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-07 13:25:28+01:00,-3600,2018-07-07 13:25:28+01:00,-3600,True,False,"['config.py', 'config.py', 'test___main__.py']",['607d93520ca2727a65edd06407350660276bda31'],2,10,12,3,0.4,1.0,1.0
9d90897de5b054191c6418331236bf13b56e868b,"Bugfix setting ssl from config files

Previously there was no (easy/obvious) way to set the SSL settings
from a configuration file and in addtion no way to override via the
command line. This should allow the full setup and configuration of
SSL as required.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-07 14:20:32+01:00,-3600,2018-07-07 14:23:14+01:00,-3600,True,False,"['MANIFEST.in', '__main__.py', 'config.py', 'cert.pem', 'config_ssl.py', 'key.pem', 'test___main__.py', 'test_config.py']",['07ca0b899923111bfbfaa4c6e01cac0cfd7fd87d'],21,135,156,8,0.125,0.3333333333333333,0.08333333333333333
088bab2c151cbb77b68f42078179c8f313f3f4bb,Bump and release 0.2.3,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-08 21:45:34+01:00,-3600,2018-07-08 21:45:34+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['9d90897de5b054191c6418331236bf13b56e868b'],1,9,10,2,,,
b8ae2510da40cf465286eb6d4ef78cf9635aec89,"Bugfix don't force the ALPN protocols

This will allow for a user to configure SSL as they like in relation
to the ALPN protocols advertised. It shouldn't affect the default
usage as the Config object will set the ALPN protocols on update (if
using the command line or update_ssl method).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-29 16:12:28+01:00,-3600,2018-07-29 16:12:28+01:00,-3600,True,False,['run.py'],['088bab2c151cbb77b68f42078179c8f313f3f4bb'],3,0,3,1,1.0,1.0,1.0
cbca52e126c204903e546989278e2160b0175854,"Update h2 compliance test to use latest ssl config setup

This should fix the error being seen in CI due to
b8ae2510da40cf465286eb6d4ef78cf9635aec89 not forcing the ALPN
protocols.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-29 16:27:40+01:00,-3600,2018-07-29 16:27:40+01:00,-3600,True,False,['server.py'],['b8ae2510da40cf465286eb6d4ef78cf9635aec89'],5,2,7,1,,,
ded87cd1fae719b49980e55a94b6a74fe850d7bc,"Raise a runtime error if reloading is used with multiple workers

The reloading mechanism is hacky and really only suitable for
development with a single worker.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-29 21:41:37+01:00,-3600,2018-07-29 21:41:37+01:00,-3600,True,False,['run.py'],['cbca52e126c204903e546989278e2160b0175854'],0,3,3,1,0.0,0.0,1.0
f7a0ccd78b079b2f84fbc6dbad1a1c99069b9e36,"Bugfix shutdown on reload

This ensures that the shutdown code is completed before the process is
killed and restarted. This in turn should remove some unhelpful
warnings about closing a loop without cleaning up.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-29 21:44:41+01:00,-3600,2018-07-29 21:44:41+01:00,-3600,True,False,['run.py'],['ded87cd1fae719b49980e55a94b6a74fe850d7bc'],4,5,9,1,0.0,0.0,0.0
9bcfbf79e815b87980c4a334bb964e6c214d836f,"Bugfix set the default log level if std(out/err) is used

This sets the level to INFO, as Gunicorn does - so seems like a
sensible default.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-29 21:49:17+01:00,-3600,2018-07-29 21:49:17+01:00,-3600,True,False,['config.py'],['f7a0ccd78b079b2f84fbc6dbad1a1c99069b9e36'],0,2,2,1,1.0,1.0,1.0
8fa56fc957098210efab9728b7c67c9d71f932fc,"Bugfix HTTP/1.1 -> HTTP/2 Upgrade requests

These were failing due to variables being used before they were
defined and then a lack of the correct HTTP/2 headers being set when
converting from the HTTP/1.1 request. This includes a test of the full
upgrade process (including response) that was missing before.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-01 08:52:30+01:00,-3600,2018-08-01 08:55:16+01:00,-3600,True,False,"['h2.py', 'test_h2.py']",['9bcfbf79e815b87980c4a334bb964e6c214d836f'],8,36,44,2,0.7368421052631579,0.3157894736842105,0.6842105263157895
e4bc403e50de8f5b09e3fae070fbe141bee21be1,"Bugfix correctly handle TERM and INT signals

This should ensure that the cleanup code is always triggered before
the process exists. It may not work on Windows, but I can't check...

The signals are ignore in the master process so that they are
correctly handled in the child processes without the master killing
them.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-04 16:05:01+01:00,-3600,2018-08-04 16:07:11+01:00,-3600,True,False,['run.py'],['8fa56fc957098210efab9728b7c67c9d71f932fc'],10,33,43,1,0.2,0.2,0.0
85ce85d16c55df75ff6624020ff8708dd39c30fd,"Bugix loop usage and creation for multiple workers

This partially reverts b9ea2230d952b75aff93355cdcd825b9ba2a9dd1 in
order to support multiple workers, i.e. ensure differing event loops
are used per worker.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-07-30 21:44:35+01:00,-3600,2018-08-04 16:08:48+01:00,-3600,True,False,['run.py'],['e4bc403e50de8f5b09e3fae070fbe141bee21be1'],5,9,14,1,0.0,0.0,0.0
118f6ab2049480121f8731890ec68a3f66610e37,Bump and release 0.2.4,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-04 19:25:16+01:00,-3600,2018-08-05 10:13:50+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['85ce85d16c55df75ff6624020ff8708dd39c30fd'],1,11,12,2,,,
cc53383612ede10fb484aec2ab807a6109709fc1,"Add the ability to specify a file logging target

This was originally intended but not implemented. This allows
hypercorn to be invoked with a filepath target for logging.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-12 19:42:44+01:00,-3600,2018-08-12 19:42:44+01:00,-3600,True,False,"['logging.rst', 'config.py']",['118f6ab2049480121f8731890ec68a3f66610e37'],5,11,16,2,1.0,1.0,1.0
749c0b7b3dbe1cea6b9ff86eb97a0d808fd38d6a,"Support serving on a unix domain socket

This is a request feature that makes Hypercorn easier to use on unix
systems.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-12 22:10:58+01:00,-3600,2018-08-12 22:10:58+01:00,-3600,True,False,"['__main__.py', 'config.py', 'run.py', 'test_config.py']",['cc53383612ede10fb484aec2ab807a6109709fc1'],6,47,53,4,0.56,0.56,0.6
fc4248d2e0e45cc4e0a127a69462c8f88975746e,"Bugfix propagate TERM signal to wokers

This ensures that there is a graceful shutdown when the master
receives a SIGTERM, and that killing the master kills the workers.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-19 12:34:09+01:00,-3600,2018-08-19 12:34:09+01:00,-3600,True,False,['run.py'],['749c0b7b3dbe1cea6b9ff86eb97a0d808fd38d6a'],2,7,9,1,0.75,0.75,1.0
22f54df4d080ca9657aed93182d337ecc5756e8c,"Do less encoding and decoding of h2 headers

As h2 allows headers to be sent to it in bytes form, and returns
headers in bytes form and as ASGI expects headers to be in bytes form
there is no need to decode or encode in hypercorn. This thus inproves
performance.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-19 13:42:11+01:00,-3600,2018-08-19 13:42:11+01:00,-3600,True,False,['h2.py'],['fc4248d2e0e45cc4e0a127a69462c8f88975746e'],14,14,28,1,,,
c5eecd776453182db6069718af3501e49d7367f2,"Alter keep alive timeout system

This will now timeout if a request isn't received within the keep
alive timeout as opposed to timeout if no activity is present. This
better reflects the intended protection from this timeout and for
example stops a malicious client sending irrelevant HTTP/2 frames to
occupy the connection.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-21 22:19:33+01:00,-3600,2018-08-21 22:19:33+01:00,-3600,True,False,"['base.py', 'h11.py', 'h2.py']",['22f54df4d080ca9657aed93182d337ecc5756e8c'],33,19,52,3,0.3076923076923077,0.0,0.3076923076923077
32ee7e0d1003b61c4f1194c8f64d2a6408a32418,"Bugfix c5eecd776453182db6069718af3501e49d7367f2

Ensure that websocket connections are not killed by the timeout.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-21 22:34:47+01:00,-3600,2018-08-21 22:34:47+01:00,-3600,True,False,['websocket.py'],['c5eecd776453182db6069718af3501e49d7367f2'],0,1,1,1,0.0,1.0,0.0
e83ed97ec8e7387a49cb18841cf92c7643c70b25,"Fix quickstart example

The body should be bytes.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-23 21:55:57+01:00,-3600,2018-08-23 21:55:57+01:00,-3600,True,False,['quickstart.rst'],['32ee7e0d1003b61c4f1194c8f64d2a6408a32418'],1,1,2,1,,,
2b5c29c1326b79f90998aae106d11893eee0d650,"Add the ASGI version to the scope

This is new to the ASGI specification, and should help applications
understand what ASGI specification Hypercorn is implementing.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-26 16:50:38+01:00,-3600,2018-08-26 16:50:38+01:00,-3600,True,False,"['h11.py', 'h2.py', 'websocket.py']",['e83ed97ec8e7387a49cb18841cf92c7643c70b25'],0,3,3,3,0.0,1.0,1.0
efd5aabd39ba2ed1eaae40237ba5aa0778db43dd,Remove unused and incorrect documentation,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-26 16:57:48+01:00,-3600,2018-08-26 16:57:48+01:00,-3600,True,False,['serving_http2.rst'],['2b5c29c1326b79f90998aae106d11893eee0d650'],80,0,80,1,,,
047a927a9478ebfe6d64267b66a58293e685cd6b,"Improve SSL Context configuration

This ensures that the SSL context has the correct configuration in
terms of disabled versions and compression. It also splits creation
out into a separate function for usage outside of this library.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-26 17:06:16+01:00,-3600,2018-08-26 17:06:16+01:00,-3600,True,False,"['server.py', 'config.py', 'test_config.py']",['efd5aabd39ba2ed1eaae40237ba5aa0778db43dd'],5,26,31,3,1.0,1.0,1.0
e7bb32e8fc6ca8d950a79cbab09fb7af7c13b568,"Allow the h2 max inbound frame size to be configured

By default Hypercorn uses the minimum value, roughly matching the h11
max incomplete size value.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-26 18:01:03+01:00,-3600,2018-08-26 18:03:24+01:00,-3600,True,False,"['config.py', 'h2.py']",['047a927a9478ebfe6d64267b66a58293e685cd6b'],0,3,3,2,0.0,1.0,0.0
92b1a109315fb410d8f92fe3c039a8ee4e967490,"Fix indentation to ensure hosting is printed

The hosting should be printed whether explicitly set in a bind or not.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-26 18:07:01+01:00,-3600,2018-08-26 18:07:01+01:00,-3600,True,False,['__main__.py'],['e7bb32e8fc6ca8d950a79cbab09fb7af7c13b568'],4,4,8,1,,,
f2e1ed620499fb6faebdde50f1053179b7ed1e1e,"Ensure Hypercorn errors if sent wrong types

This matches the ASGI specification ""[the server] should raise an
exception out of the send awaitable back into the application"" and
ensures that unexpected bugs do not silently progress into strange
responses.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-27 14:05:24+01:00,-3600,2018-08-27 14:07:09+01:00,-3600,True,False,"['h11.py', 'h2.py', 'websocket.py', 'test_h11.py', 'test_h2.py', 'test_websocket.py']",['92b1a109315fb410d8f92fe3c039a8ee4e967490'],17,162,179,6,0.30303030303030304,0.8787878787878788,0.030303030303030304
45279bfdfa0114dffd688b86ffab747e7d752f4d,"Bugfix f2e1ed620499fb6faebdde50f1053179b7ed1e1e

Sometimes an empty message is sent",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-27 15:00:26+01:00,-3600,2018-08-27 15:00:26+01:00,-3600,True,False,['websocket.py'],['f2e1ed620499fb6faebdde50f1053179b7ed1e1e'],1,1,2,1,,,
2171f791443ee5c5f1571ce45316b150562eeca1,"Add initial, simple, PID file support

This simply writes the master PID to a specified file.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-27 17:33:59+01:00,-3600,2018-08-27 17:33:59+01:00,-3600,True,False,"['__main__.py', 'config.py', 'run.py']",['45279bfdfa0114dffd688b86ffab747e7d752f4d'],0,20,20,3,0.2,0.2,0.8666666666666667
26b45ab5b028dde10901d944817a84b060f0376e,"Add support for opening a socket from a file descriptor

This is especially useful well working with systemd as it allows a
systemd created socket to be used via the file descriptor of the
socket.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-08-28 20:47:36+01:00,-3600,2018-08-29 21:25:49+01:00,-3600,True,False,"['__main__.py', 'config.py', 'run.py']",['2171f791443ee5c5f1571ce45316b150562eeca1'],2,17,19,3,0.18181818181818182,0.18181818181818182,0.5454545454545454
d2f1f54e8eb308a17fc9c8b71fa19f0df1dc26ef,"Use the latest wsproto release

This allows the workaround for the connection header to be removed as
well as the pinning of h11.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-09-23 12:39:31+01:00,-3600,2018-09-23 12:39:31+01:00,-3600,True,False,"['websocket.py', 'setup.py']",['26b45ab5b028dde10901d944817a84b060f0376e'],13,2,15,2,0.0,0.0,0.0
783f75f7a0f4f19462008397ca24457ec79aadf5,Bump and release 0.3.0,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-09-23 13:31:59+01:00,-3600,2018-09-23 13:34:01+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['d2f1f54e8eb308a17fc9c8b71fa19f0df1dc26ef'],1,17,18,2,,,
4f52a9057ffe11b9a00850a474b42693121a4c4d,Fix for non-unix,Almar Klein,almar.klein@gmail.com,Almar Klein,almar.klein@gmail.com,2018-09-24 15:32:23+02:00,-7200,2018-09-24 15:32:23+02:00,-7200,True,False,['run.py'],['783f75f7a0f4f19462008397ca24457ec79aadf5'],1,5,6,1,,,
b47f44091f1dddb762d3cdca8e67c67b25356a41,flake,Almar Klein,almar.klein@gmail.com,Almar Klein,almar.klein@gmail.com,2018-09-24 15:57:12+02:00,-7200,2018-09-24 15:57:12+02:00,-7200,True,False,['run.py'],['4f52a9057ffe11b9a00850a474b42693121a4c4d'],0,1,1,1,,,
cf0b257a08a351e20620ccb0f503b077e4e6686a,"Bugfix ensure the event-loop is configured before the app is created

This ensures that any asyncio primitives created with the app are
aware of the correct (fully configured) event-loop. This was a problem
as the loop would be re-created after the application was loaded
leading to run time warnings. This preserves the run_single behaviour
except that providing the event loop is now mandatory in order to make
this a clear requirement for users of ``run_single``.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-09-24 22:36:19+01:00,-3600,2018-09-24 22:36:19+01:00,-3600,True,False,"['__main__.py', 'config.py', 'run.py', 'test___main__.py']",['b47f44091f1dddb762d3cdca8e67c67b25356a41'],75,64,139,4,1.0,1.0,1.0
67b0e46856664045d6f30d6e2106e1dce609d628,"Bugfix cf0b257a08a351e20620ccb0f503b077e4e6686a

Missed some run_single usages.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-09-24 23:11:42+01:00,-3600,2018-09-24 23:11:42+01:00,-3600,True,False,"['server.py', 'server.py']",['cf0b257a08a351e20620ccb0f503b077e4e6686a'],2,2,4,2,,,
1b2a5d9a17f25e095619bbbf29f7e51ee1083fc5,Bump and release 0.3.1,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-09-25 20:33:06+01:00,-3600,2018-09-25 20:33:06+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['67b0e46856664045d6f30d6e2106e1dce609d628'],1,8,9,2,,,
05f754e09b5db3ca7d46de3329b73a6eb6e9d93a,"Cope with a None loop argument for run_single

Quart will use loop = None which causes issues, as this was previously
allowed. This will act as a workaround till Quart has fixed and enough
time has elapsed for people to upgrade.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-09-25 21:29:19+01:00,-3600,2018-09-25 21:30:21+01:00,-3600,True,False,['run.py'],['1b2a5d9a17f25e095619bbbf29f7e51ee1083fc5'],0,5,5,1,0.0,0.0,0.0
1115d71fa624072940a0b065bdb40de70be8a7be,"Add a Logo for Hypercorn

This is made with help from the vecteezy.com and stet.io editors.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-02 22:36:56+01:00,-3600,2018-10-02 22:37:57+01:00,-3600,True,False,"['README.rst', 'LICENSE', 'logo.png', 'logo.svg', 'logo_small.png', 'logo_small.svg']",['05f754e09b5db3ca7d46de3329b73a6eb6e9d93a'],0,77,77,6,,,
687d8c1243e8ab734f0d9a0f23c0df5fcd4c3bfc,"Bugfix 1115d71fa624072940a0b065bdb40de70be8a7be

Ensure the artwork is present in the mainfest.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-03 08:36:58+01:00,-3600,2018-10-03 08:38:13+01:00,-3600,True,False,['MANIFEST.in'],['1115d71fa624072940a0b065bdb40de70be8a7be'],0,1,1,1,,,
90bdc960cafddd974583150c3495e0587b02749b,Bump and release 0.3.2,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-04 08:36:27+01:00,-3600,2018-10-04 08:36:50+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['687d8c1243e8ab734f0d9a0f23c0df5fcd4c3bfc'],1,7,8,2,,,
a8d8069128fb3e9046c8d09c1f4e80d5dfe565d5,"Add worker-class option to the config and CLI

This allows the worker class to be specified as either asyncio, or
uvloop currently but with more options planned. The naming matches
Gunicorn.

A desire to match Gunicorn's conventions also results in the -k to -w
change present in this commit, which could cause confusion initially
and is backwards incompatible.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-09-30 11:56:57+01:00,-3600,2018-10-04 08:36:50+01:00,-3600,True,False,"['usage.rst', '__main__.py', 'config.py', 'run.py']",['90bdc960cafddd974583150c3495e0587b02749b'],9,32,41,4,0.0,0.0,1.0
ea7ae78ee8c419a9628f53148c3cf713fd4cb61e,"Refactor structure to allow for a new worker class

The asyncio worker class code is moved into a asyncio directory solely
to facilitate another worker directory.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-09-30 12:18:23+01:00,-3600,2018-10-04 08:36:50+01:00,-3600,True,False,"['__init__.py', 'base.py', 'h11.py', 'h2.py', 'wsproto.py', 'run.py', '__init__.py', 'helpers.py', 'test_base.py', 'test_h11.py', 'test_h2.py', 'test_wsproto.py']",['a8d8069128fb3e9046c8d09c1f4e80d5dfe565d5'],22,22,44,12,,,
00e38d3f3e188e0d47b591772e64ade673147400,"Add initial trio worker

This only supports HTTP/1 and is not complete (no upgrade support),
however it is a good checkpoint for the introduction of a trio worker
in that it actually works as an ASGI server for HTTP/1.1.

Interestingly this allows asyncio to be benchmarked against trio, with
these local results,

███████                                       1973  Hypercorn-trio
██████████████                                3590  Hypercorn-asyncio
█████████████████████                         5388  Hypercorn-uvloop

for a simple GET request. See the quart-benchmark repository for the
methodology. Note much work must be done before these results are
trustworthy (although interesting now).

This also refactors code where possible to be shared between the
asyncio and trio workers (also allowing for better tests).

The following commits will introduce a full trio worker.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-01 08:36:27+01:00,-3600,2018-10-08 21:23:54+01:00,-3600,True,False,"['server.py', 'server.py', '__init__.py', '__main__.py', 'base.py', 'h11.py', 'h2.py', 'run.py', 'wsproto.py', '__init__.py', 'h11.py', 'run.py', 'run.py', 'h11.py', 'run.py', 'utils.py', 'setup.py', 'tahelpers.py', 'test_base.py', 'test_h11.py', 'test_h11.py', 'helpers.py', 'test___main__.py', 'test_utils.py', '__init__.py', 'test_h11.py', 'tox.ini']",['ea7ae78ee8c419a9628f53148c3cf713fd4cb61e'],574,1275,1849,27,0.5156576200417536,0.7954070981210856,0.6409185803757829
544584e7e9726fb915a07bc01f474eb1207933e3,"Handle application failures with a 500 response for h11

This ensures that Hypercorn sends a 500 response if the application
errors in anyway whereby it does not send a response. In addition it
ensures that the connection is closed, as per the ASGI specification.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-07 23:27:04+01:00,-3600,2018-10-08 21:42:33+01:00,-3600,True,False,"['test_h11.py', 'helpers.py', 'test_h11.py']",['00e38d3f3e188e0d47b591772e64ade673147400'],2,40,42,3,1.0,1.0,0.8
097c4aa0260551f68185127a99ca2602b4ca3a5a,"Bugfix ensure the scheme is present for asyncio h11 connections

This fixes a bug introduced in
00e38d3f3e188e0d47b591772e64ade673147400.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-09 22:27:45+01:00,-3600,2018-10-09 22:27:45+01:00,-3600,True,False,"['h11.py', 'test_h11.py', 'test_h11.py']",['544584e7e9726fb915a07bc01f474eb1207933e3'],0,6,6,3,0.5,1.0,0.5
dbfb0ebc1e24e56fe186eeef6d186588274662cd,"Add a typing Protocol for a Queue

This allows the Queue to be typed and specified in the H11Mixin, which
was previously not possible as there is no common trio & asyncio Queue
abstract base class.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-09 22:29:55+01:00,-3600,2018-10-09 22:36:07+01:00,-3600,True,False,"['h11.py', 'typing.py']",['097c4aa0260551f68185127a99ca2602b4ca3a5a'],4,12,16,2,,,
285186befb369bcf82fc88eb23f139749b0572cd,"Add websocket support to the trio worker

This further advances the trio worker by supporting websocket
connections including rejection HTTP responses. In addition the
testing and asyncio code is refactored to reduce duplication.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-10 08:43:38+01:00,-3600,2018-10-10 21:55:55+01:00,-3600,True,False,"['run.py', 'wsproto.py', 'wsproto.py', 'base.py', 'h11.py', 'run.py', 'wsproto.py', 'test_wsproto.py', 'test_wsproto.py', 'helpers.py', 'test_wsproto.py']",['dbfb0ebc1e24e56fe186eeef6d186588274662cd'],232,467,699,11,0.46715328467153283,0.6496350364963503,0.7956204379562044
a960b155ca41324cec52c0151809a6b458ed65a0,"Handle application failures with wsproto

This ensures that Hypercorn sends a 403 response if the application
errors in anyway before the connection is accepted. In addition it
ensures that the connection is closed, as per the ASGI specification.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-11 22:38:45+01:00,-3600,2018-10-11 22:38:45+01:00,-3600,True,False,"['wsproto.py', 'test_wsproto.py', 'helpers.py', 'test_wsproto.py']",['285186befb369bcf82fc88eb23f139749b0572cd'],21,132,153,4,0.7613636363636364,0.9886363636363636,0.6136363636363636
3c175537bdf7e7a7690d8415805e9f5af7acca96,"Refactor h2 code to support trio-h2

This most completes the trio worker as it now supports HTTP/1.1,
HTTP/2 and Websockets but doesn't support h2c (HTTP/1.1 to HTTP/2
upgrades). However it isn't in a good state and implementing h2 in
trio has indicated just how poor a state the h2 code is.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-13 23:18:09+01:00,-3600,2018-10-14 09:35:19+01:00,-3600,True,False,"['h2.py', 'h2.py', 'h2.py', 'run.py', 'test_h2.py']",['a960b155ca41324cec52c0151809a6b458ed65a0'],196,400,596,5,0.4715447154471545,0.7886178861788617,0.4796747967479675
fff131b0bd419de8955bea8f1f35c5ae1a8f3bdd,"Add a missing __init__ file and fix mypy issues

With this file mypy knows to also check the files in the trio
directory which in turn highlights some issues missed in previous
commits.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-14 10:40:35+01:00,-3600,2018-10-14 10:40:35+01:00,-3600,True,False,"['__init__.py', 'h11.py', 'h2.py', 'run.py', 'wsproto.py', 'typing.py']",['3c175537bdf7e7a7690d8415805e9f5af7acca96'],6,8,14,6,,,
3d5aa93b2bd14708c412172aabe3362dde1dba19,Remove file added by mistake in 00e38d3f3e188e0d47b591772e64ade673147400,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-14 11:45:36+01:00,-3600,2018-10-14 11:45:36+01:00,-3600,True,False,['tahelpers.py'],['fff131b0bd419de8955bea8f1f35c5ae1a8f3bdd'],161,0,161,1,0.6328125,0.2734375,0.5078125
73efdb6269dbefba5239d5ec3550c700c296a5b5,"Refactor the h11 serving code

This is primarily to correct the logic regarding when to close the
connection and whether to send a disconnect message to the ASGI
app. More specifically this refactor makes the close decision the
responsibility of the worker rather than common code. In addition it
hopefully clarifies the lifecycle of the connection in terms of
requests and request-recycling. I hope as well that this makes the
code easier to follow and reason about.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-14 17:37:12+01:00,-3600,2018-10-18 22:25:21+01:00,-3600,True,False,"['base.py', 'h11.py', 'h11.py', 'h11.py', 'typing.py', 'test_base.py', 'test_h11.py', '__init__.py', 'test_h11.py', 'test_h11.py']",['3d5aa93b2bd14708c412172aabe3362dde1dba19'],185,295,480,10,0.3409090909090909,1.0,1.0
1e7d248d9013ad81b3278411743ae80d4cbe37b3,"Refactor the wsproto serving code

This is primarily to correct the logic regarding when to close the
connection and whether to send a disconnect message to the ASGI
app. More specifically this refactor makes the close decision the
responsibility of the worker rather than common code. I hope as well
that this makes the code easier to follow and reason about. It does
improve the autobahn test compliance, as regards to the closing tests.

This is roughly the limit without making some improvements to the
wsproto library itself, which I'll look at doing next.

The changes to the trio h11 code are too allow for the upgrade
exception to propagate without closing the connection.

There is a remaining possible issue with the close frames, which
relates to what the server should do if the client doesn't respond but
rather just holds the connection open. I will open an issue for a
websocket idle timeout.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-14 22:54:20+01:00,-3600,2018-10-20 21:58:47+01:00,-3600,True,False,"['server.py', 'wsproto.py', 'wsproto.py', 'h11.py', 'wsproto.py', 'utils.py', 'helpers.py', 'test_wsproto.py', 'test_h11.py', 'test_wsproto.py', 'helpers.py', 'test_wsproto.py']",['73efdb6269dbefba5239d5ec3550c700c296a5b5'],211,435,646,12,1.0,1.0,1.0
e05734af2333533904ba48dd4699b265f026d236,"Enable the autobahn test for the trio worker

This should ensure that the trio websocket implementation is, and
remains compliant with the specification (as tested by autobahn).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-16 22:34:59+01:00,-3600,2018-10-20 21:58:47+01:00,-3600,True,False,['.gitlab-ci.yml'],['1e7d248d9013ad81b3278411743ae80d4cbe37b3'],1,14,15,1,,,
bfd65454bcb09fdb2e360345e2a3003ad8d3cf62,"Refactor the h2 serving code

This is primarily to correct the logic regarding when to close the
connection and whether to send a disconnect message to the ASGI
app. More specifically this refactor makes the close decision the
responsibility of the worker rather than common code. It also makes
all the IO based decisions (flow control and server push) the
responsibility of the worker code. I hope as well that this makes the
code easier to follow and reason about.

There is a remaining issue with a lack of idle timeouts in the trio
worker, but I'm unsure how to solve this at the moment.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-20 21:57:07+01:00,-3600,2018-10-21 16:00:06+01:00,-3600,True,False,"['h2.py', 'h2.py', 'h2.py', 'run.py', 'helpers.py', 'test_h2.py', 'test_h2.py', 'helpers.py', 'test_h2.py']",['e05734af2333533904ba48dd4699b265f026d236'],404,905,1309,9,0.4523809523809524,0.6755952380952381,0.9404761904761905
6e9944f5469d84a2274f330c03e97b2bcef8d406,"Fix a race condition recording client/server address

The socket can close between opening and the call to get the
client/server address in the ASGI scoping. To avoid this the client
and server adddresses are saved on connection.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-20 22:51:02+01:00,-3600,2018-10-21 16:00:20+01:00,-3600,True,False,"['base.py', 'h11.py', 'h2.py', 'wsproto.py', 'base.py', 'test_h11.py', 'test_h2.py', 'test_wsproto.py', 'test_h11.py']",['bfd65454bcb09fdb2e360345e2a3003ad8d3cf62'],87,31,118,9,0.0,0.0,0.0
9044a13928bd8100957e0b5abe2dfab6fba184ee,"Enable h2spec testing for the trio worker

This should ensure that the trio HTTP/2 implementation is, and remains
compliant with the specification (as tested by h2spec).

The longer timeout is not understood, but is required in CI.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-21 10:25:19+01:00,-3600,2018-10-21 17:03:23+01:00,-3600,True,False,"['.gitlab-ci.yml', 'server.py']",['6e9944f5469d84a2274f330c03e97b2bcef8d406'],12,13,25,2,,,
2c558f25ef9cad30f717cb9bbff89db010dfc328,"Rename common to asgi

This should help clarify the conceptual separation of the code into
the I/O parts based on the worker, and the abstracted ASGI parts. In
addition the H11 and H2 states are made distinct, as they should
diverge.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-21 11:33:40+01:00,-3600,2018-10-21 17:03:23+01:00,-3600,True,False,"['__init__.py', 'h11.py', 'h2.py', 'run.py', 'wsproto.py', 'h11.py', 'h2.py', 'run.py', 'wsproto.py', 'h11.py', 'h2.py', 'run.py', 'wsproto.py', 'utils.py', '__init__.py', 'test_h11.py', 'test_h2.py', 'test_wsproto.py']",['9044a13928bd8100957e0b5abe2dfab6fba184ee'],115,121,236,18,1.0,1.0,1.0
423615c58b84fcc05683a628cb84e921b765e2ea,"Upgrade to trio >= 0.9.0 and switch to channels from Queues

Trio 0.9.0 deprecates Queues in favour of channels, this commit
follows suit for Hypercorn. This should be easier to reason about.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-21 13:56:28+01:00,-3600,2018-10-21 17:03:23+01:00,-3600,True,False,"['h11.py', 'h2.py', 'wsproto.py', 'h11.py', 'h2.py', 'wsproto.py', 'h11.py', 'h2.py', 'wsproto.py', 'typing.py', 'setup.py', 'test_h11.py', 'test_h2.py', 'test_wsproto.py', 'helpers.py']",['2c558f25ef9cad30f717cb9bbff89db010dfc328'],97,148,245,15,1.0,1.0,0.9622641509433962
e72cdbc09ec95a376d6fa2ccbb6e6f0993f0df7d,"Swtich from callback usage to a coroutine wrapper in h2

This makes the h2 code more consistent and clear across the asyncio
and trio versions. In addition it has pointed out that the test
frameworks are all bad in that they didn't stop and return when they
completed.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-21 16:48:33+01:00,-3600,2018-10-21 17:03:23+01:00,-3600,True,False,"['h2.py', 'h2.py', 'h2.py', 'helpers.py']",['423615c58b84fcc05683a628cb84e921b765e2ea'],19,15,34,4,0.0,0.0,1.0
185985476919d212507593d889206bbb40a7be97,"Fix issues as raised by latest flake8 version

E252 is ignored as I prefer no spaces in the definition. W503 and W504
as they work incorrectly in places i.e.

    if (
         ...
    ):",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-25 21:35:21+01:00,-3600,2018-10-25 21:35:21+01:00,-3600,True,False,"['h11.py', 'h2.py', 'wsproto.py', 'config.py', 'typing.py', 'setup.cfg']",['e72cdbc09ec95a376d6fa2ccbb6e6f0993f0df7d'],6,9,15,6,1.0,1.0,0.5
ffdc2f07ee4610d34a723c3dd0f040b176e1ad9b,"Bugix don't create an SSL context within the Config instance

The Config instance is shared among the worker processes by being
pickled, however SSL contexts are not pickle-able on
Windows. Therefore the config instance now stores the SSL
configuration and includes a method to create the context. With
hindsight this is also clearer code.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-27 17:16:49+01:00,-3600,2018-10-27 17:16:49+01:00,-3600,True,False,"['__main__.py', 'run.py', 'config.py', 'run.py', 'test___main__.py', 'test_config.py']",['185985476919d212507593d889206bbb40a7be97'],59,53,112,6,0.0,1.0,1.0
e824b32acb5d2db3513e1d0dfff3d7fa5c2bb316,"Support the ASGI lifespan protocol

This allows ASGI frameworks to startup and shutdown within the event
loop context. It also starts to help clarify the graceful shutdown
behaviour, especially for the trio worker which should gracefully
shutdown. The asyncio worker requires some more work to cancel any
outstanding tasks.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-29 08:19:02+00:00,0,2018-10-29 08:22:12+00:00,0,True,False,"['lifespan.py', 'run.py', 'config.py', 'lifespan.py', 'run.py']",['ffdc2f07ee4610d34a723c3dd0f040b176e1ad9b'],32,178,210,5,0.7608695652173914,0.9891304347826086,0.9891304347826086
ad6aee11868fa447844cb695ef5ba3a0181419ca,"Bugfix support the lifespan protocol in the compliance servers

This allows the compliance tests to proceed, and ideally pass...",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-29 08:33:43+00:00,0,2018-10-29 08:33:43+00:00,0,True,False,"['server.py', 'server.py']",['e824b32acb5d2db3513e1d0dfff3d7fa5c2bb316'],0,10,10,2,0.0,0.0,0.0
21845455a2267f703915f4d26cf6dc3bc024be33,"Shutdown all tasks on closure for asyncio workers

Trio workers already have this functionality via the nursery usage.

This helps ensure the server gracefully shuts down, as it allows the
CancelledErrors to be dealt with if required. The code is based on the
asyncio.run function present in 3.7 (this itself can't be used as 3.6
is supported and as Hypercorn needs to be able to use a supplied the
event loop).

Note the lifespan worker had a CancelledError bug that this surfaced
and fixed.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-30 08:36:10+00:00,0,2018-10-30 08:39:41+00:00,0,True,False,"['lifespan.py', 'run.py']",['ad6aee11868fa447844cb695ef5ba3a0181419ca'],0,23,23,2,0.1,0.1,0.9
0791fc21f10e44c4a17f6a1a8694ca717ea496c4,"Alter multi worker shutdown

This switches the shutdown prompt from a signal to based on a
multiprocessing event being set (which is polled). This should mean
that multiple workers gracefully shutdown on windows, as on windows
there is no way (I can find) to send a signal to the worker processes
and the terminate kills them outright.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-10-31 22:32:17+00:00,0,2018-11-01 20:32:22+00:00,0,True,False,['run.py'],['21845455a2267f703915f4d26cf6dc3bc024be33'],17,31,48,1,0.4444444444444444,0.4444444444444444,0.0
bece8051b14b3001a00d915114b2b58d07076205,"Adopt black and isort to autoformat the files

This removes any need to figure out how to style the code for
Hypercorn, instead allowing these two commands to do it instead,

    black --line-length 100 --py36 hypercorn/ tests/
    isort --dont-skip __init__.py --apply --settings-path setup.cfg --recursive hypercorn tests

Note that due to some incompatibility with black and isort some flake8
extensions have been removed and some checks ignored.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-01 22:23:19+00:00,0,2018-11-01 22:26:12+00:00,0,True,False,"['__about__.py', '__init__.py', '__main__.py', 'h11.py', 'h2.py', 'run.py', 'wsproto.py', 'base.py', 'h11.py', 'h2.py', 'lifespan.py', 'run.py', 'wsproto.py', 'config.py', 'logging.py', 'run.py', 'base.py', 'h11.py', 'h2.py', 'lifespan.py', 'run.py', 'wsproto.py', 'utils.py', 'setup.cfg', 'test_h11.py', 'test_h2.py', 'test_wsproto.py', 'config_ssl.py', 'helpers.py', 'test_base.py', 'test_h11.py', 'test_h2.py', 'test_wsproto.py', 'helpers.py', 'test___main__.py', 'test_config.py', 'test_logging.py', 'test_utils.py', 'test_h11.py', 'test_h2.py', 'test_wsproto.py', 'tox.ini']",['0791fc21f10e44c4a17f6a1a8694ca717ea496c4'],1173,1055,2228,42,0.5392156862745098,0.2647058823529412,0.27450980392156865
7ac88c7644355cb150dc3da0805729b5929dbcda,"Bump h2spec version to the latest

This includes some minor bugfixes. (It doesn't solve the trio timeout
issue though).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-01 21:22:40+00:00,0,2018-11-01 22:26:56+00:00,0,True,False,['.gitlab-ci.yml'],['bece8051b14b3001a00d915114b2b58d07076205'],2,2,4,1,,,
ac8ef24d3a7fcde6db46630394e2d69b56da1693,"Bugfix h2, don't try to send negative or zero bytes

This avoids a FlowControlError in the case whereby a client has
specified a 0 or negative window size. In this case now the data
sending simply continues the sending loop returning to the flow
control blocking part and trying again.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-03 12:28:45+00:00,0,2018-11-03 12:31:10+00:00,0,True,False,"['h2.py', 'h2.py']",['7ac88c7644355cb150dc3da0805729b5929dbcda'],0,4,4,2,1.0,1.0,0.0
08aae32f5b9da0ca4f10131dce4e55b1bab4c2a5,"Bugfix h2 don't send nothing

This shortcuts the sending when the data to send is just b"""".",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-03 12:30:37+00:00,0,2018-11-03 12:31:10+00:00,0,True,False,"['h2.py', 'h2.py']",['ac8ef24d3a7fcde6db46630394e2d69b56da1693'],2,7,9,2,1.0,1.0,1.0
19e6f61aee247909c265cc4c8063d4eccc8fe5c9,"Bugfix restore the single worker behaviour

This once again allows the reload option to work by bypassing any
multiprocessing for a single worker option.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-03 16:22:32+00:00,0,2018-11-03 16:22:32+00:00,0,True,False,"['run.py', 'run.py']",['08aae32f5b9da0ca4f10131dce4e55b1bab4c2a5'],1,11,12,2,1.0,1.0,1.0
4c8d68b09369bbc98149e27642d48d50fe2a7f9e,"Enable tox format environment checks

This was missed in bece8051b14b3001a00d915114b2b58d07076205.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-03 16:35:13+00:00,0,2018-11-03 18:46:22+00:00,0,True,False,"['test_h11.py', 'tox.ini']",['19e6f61aee247909c265cc4c8063d4eccc8fe5c9'],4,2,6,2,0.0,0.0,1.0
eda80d77a70dcb2dd8d3aa2ac167b28605900db1,"Normalise PID file writing support

This adds support to the trio worker and refactors the asyncio worker
code for clarity. This removes likely unused functionality in the
run_single to write the PID file. This is considered ok as this
function is mostly used by Quart and Quart does not use this feature.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-03 17:52:34+00:00,0,2018-11-03 18:46:22+00:00,0,True,False,"['run.py', 'run.py']",['4c8d68b09369bbc98149e27642d48d50fe2a7f9e'],7,7,14,2,1.0,1.0,1.0
10f97379914515df2e014d3af16a2fc8ce912283,"Support reloading on changes in the trio worker

This has required some refactoring of the asyncio code to use shared
code across both workers. It allows for developing a trio framework
with any changes causing an automatic reload, and hence a more
pleasant experience.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-03 18:44:42+00:00,0,2018-11-03 18:46:22+00:00,0,True,False,"['run.py', 'run.py', 'utils.py']",['eda80d77a70dcb2dd8d3aa2ac167b28605900db1'],37,55,92,3,0.0,0.0,0.8888888888888888
5c4d2e1b04656b0d951055e9622cf8eae5446633,Minor refactor to clarify logic,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-06 20:38:40+00:00,0,2018-11-06 20:38:40+00:00,0,True,False,['run.py'],['10f97379914515df2e014d3af16a2fc8ce912283'],3,1,4,1,1.0,1.0,0.0
fd16b849a4e5c1754a65cc6d6ba155723308d236,"Ensure sending doesn't error when the connection is closed

This is defined in the ASGI specification as a noop, rather than a
raised exception.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-06 21:54:04+00:00,0,2018-11-06 21:54:04+00:00,0,True,False,['h11.py'],['5c4d2e1b04656b0d951055e9622cf8eae5446633'],1,4,5,1,1.0,1.0,1.0
9c05d136c40191c1c3825498af36907c81261a38,"Allow further h2 initial settings to be configured

This allows the max concurrent streams and max header list size
settings to be configured via the configuration object. Note that the
creation of the settings instance is required due to a h2 pecularity
with the max concurrent streams (it is hardcoded to 100).

The default values match those used in the h2 library and are
considered safe defaults.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-10 11:01:30+00:00,0,2018-11-10 11:02:50+00:00,0,True,False,"['h2.py', 'config.py', 'h2.py']",['fd16b849a4e5c1754a65cc6d6ba155723308d236'],0,16,16,3,0.0,1.0,0.0
d2ea63b1d6f8a97ac9167fa73beba2d1518f33d7,"Refactor socket creation code

This fixes a bug with existing unix domain sockets (note the os.remove
line). It also ensures that the sockets are equivalently created for
both multi and single worker modes. Finally it will allow for this
code to be used in the trio worker.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-10 14:54:07+00:00,0,2018-11-10 14:54:07+00:00,0,True,False,"['run.py', 'utils.py']",['9c05d136c40191c1c3825498af36907c81261a38'],45,54,99,2,0.0,0.0,1.0
3add654fada947a2f265a6d276fc94d23e9fa209,"Bugfix multi worker shutdown

This fixes a bug introduced in
0791fc21f10e44c4a17f6a1a8694ca717ea496c4. The issue is that exceptions
raised by a signal handler are propagated within the try-except block
on the run_forever line. Whereas exceptions raised in the
_check_shutdown task are not propagated. This leads to a ``Task
exception was never retrieved`` warning indicating that the exception
never terminated the worker nor had any affect.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-10 15:11:04+00:00,0,2018-11-10 15:11:04+00:00,0,True,False,['run.py'],['d2ea63b1d6f8a97ac9167fa73beba2d1518f33d7'],4,8,12,1,0.0,0.0,0.0
847ee1be10954dc95e87459c99a4d3f21b073d18,"Bugfix don't report asyncio task cancellation as ASGI framework errors

Trio seems to have made a better decision here in that the trio
CancelledError inherits from BaseException rather than Exception. In
asyncio CancelledError inherits from Exception. This means that it was
previously caught and reported as an ASGI framework error, despite
neither being an error nor the frameworks fault.

This should have no affect on the trio worker.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-10 15:16:14+00:00,0,2018-11-10 15:17:52+00:00,0,True,False,"['h11.py', 'h2.py', 'wsproto.py']",['3add654fada947a2f265a6d276fc94d23e9fa209'],0,9,9,3,0.0,0.0,1.0
ee818c18e41f06c254745effb7459b578cac4254,"Support unix sockets for the trio worker

This makes use of the socket creation code introduced in
d2ea63b1d6f8a97ac9167fa73beba2d1518f33d7 to support various socket
types in the trio worker.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-10 17:29:48+00:00,0,2018-11-10 17:29:48+00:00,0,True,False,['run.py'],['847ee1be10954dc95e87459c99a4d3f21b073d18'],15,19,34,1,0.3333333333333333,0.3333333333333333,0.0
c2644be73c580eba0038a90c0efdac092be245a2,"Introduce a backlog configuration option

This allows the maximum number of pending connections, in a backlog,
to be configured. It follows the same name as with Gunicorn, but with
a smaller safer default (follows Python asyncio library).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-10 17:33:56+00:00,0,2018-11-10 17:33:56+00:00,0,True,False,"['__main__.py', 'run.py', 'config.py', 'run.py']",['ee818c18e41f06c254745effb7459b578cac4254'],2,8,10,4,0.0,0.0,1.0
21f5c3b0cc3dd8577c5df89fe4303a637fe73a8e,"Suport multiple workers with the trio worker class

This completes the trio worker class functionality set such that it
matches what can be done with the asyncio and uvloop worker
class. Note that there are issues with the signal handling, which have
been partially fixed in this commit.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-11 14:15:50+00:00,0,2018-11-11 14:15:50+00:00,0,True,False,"['run.py', 'run.py', 'run.py', 'typing.py', 'utils.py']",['c2644be73c580eba0038a90c0efdac092be245a2'],108,135,243,5,0.0,0.0,0.0
98c060fde4fb616834122b60b5efbe0eac1a6e25,"Bugfix trio worker socket listening

A socket listen call can only be made once on Windows.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-11 15:10:25+00:00,0,2018-11-11 15:10:25+00:00,0,True,False,['run.py'],['21f5c3b0cc3dd8577c5df89fe4303a637fe73a8e'],1,3,4,1,1.0,1.0,0.0
afc0ad4f596f9e4712ff1f8aaf46bc8a9aa24f3e,"Bugfix restore _raise_shutdown signal handler

This means the workers gracefully shutdown on Windows correctly, as
well as Linux. I'm not sure why it works though...",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-11 15:11:18+00:00,0,2018-11-11 15:11:18+00:00,0,True,False,['run.py'],['98c060fde4fb616834122b60b5efbe0eac1a6e25'],6,2,8,1,1.0,1.0,1.0
ac2bbb4847716b9c5f4977a411ee1a9938d950ac,"Change test fixture name from request

request will be a reserved fixture name in an upcoming pytest version,
and making this change now removes some warnings.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-11 16:04:15+00:00,0,2018-11-11 16:05:29+00:00,0,True,False,['test_logging.py'],['afc0ad4f596f9e4712ff1f8aaf46bc8a9aa24f3e'],7,7,14,1,,,
c9821b6e6e7a2f2bedbefc87164525bda84acf52,Bump and release 0.4.0,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-11 16:01:24+00:00,0,2018-11-11 16:05:29+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['ac2bbb4847716b9c5f4977a411ee1a9938d950ac'],1,33,34,2,,,
e2d3ff851ccc017caa3f1be6c17da669d3f93b80,"Bugfix uvloop argument usage

This fixes a bug introduced in a8d80691 whereby the uvloop argument
was not set properly and hence just caused an error.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-12 18:56:48+00:00,0,2018-11-12 19:00:45+00:00,0,True,False,['__main__.py'],['c9821b6e6e7a2f2bedbefc87164525bda84acf52'],1,1,2,1,,,
0eae5971e3c76bafe199dfe2deb0dfe5052fc78f,"Bugfix lifespan not supported error

This fixes a bug introduced in e824b32a whereby for ASGI applications
that don't support the lifespan protocol the startup (and shutdown if
it ever reached) would still be waited on till a Timeout error crashed
hypercorn.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-12 18:58:44+00:00,0,2018-11-12 19:00:48+00:00,0,True,False,['lifespan.py'],['e2d3ff851ccc017caa3f1be6c17da669d3f93b80'],0,2,2,1,1.0,1.0,1.0
da0927b1be67f301e1195decc54936d75947d2e7,"Bugfix downgrade logging to warning for no lifespan support

The previous error message looks to much like Hypercorn has crashed
and cannot continue. This makes it clearer that it is just a warning.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-12 19:04:34+00:00,0,2018-11-12 19:04:34+00:00,0,True,False,"['lifespan.py', 'lifespan.py']",['0eae5971e3c76bafe199dfe2deb0dfe5052fc78f'],2,2,4,2,,,
9bb61e236b8d4d34ec31702314066ba7ae70596b,"Add a minor README reference to the worker classes

This should help establish that Hypercorn is not just for asyncio ASGI
applications.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-12 19:45:17+00:00,0,2018-11-12 19:45:33+00:00,0,True,False,['README.rst'],['da0927b1be67f301e1195decc54936d75947d2e7'],1,2,3,1,,,
07ecd7f752b99db381e83de96e99d13005f691a5,Bump and release 0.4.1,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-12 19:47:17+00:00,0,2018-11-12 19:47:17+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['9bb61e236b8d4d34ec31702314066ba7ae70596b'],1,8,9,2,,,
32f7066f1720e9217827318b606c88944546d79b,"Pin the cryptography version for autobahn tests

The later versions have dropped support for the OpenSSL version used
in the Python2.7 alpine image. Autobahn only supports Python 2.7 :(.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-12 20:19:26+00:00,0,2018-11-12 20:19:26+00:00,0,True,False,['.gitlab-ci.yml'],['07ecd7f752b99db381e83de96e99d13005f691a5'],2,2,4,1,,,
5309cc2110e87bb9f291cf2fc3125b358ececb44,"Bugfix allow SSL setting to be configured in a file

This prevents the CLI arguments overwriting those loaded from a file,
and includes a test to ensure this doesn't regress.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-13 18:48:34+00:00,0,2018-11-13 18:48:34+00:00,0,True,False,"['__main__.py', 'test___main__.py']",['32f7066f1720e9217827318b606c88944546d79b'],20,39,59,2,1.0,0.0,0.0
a8aa68b4e1c9e3eb8e2b9c8447addad951fc47b8,Bump and release 0.4.2,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-13 20:51:50+00:00,0,2018-11-13 20:51:50+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['5309cc2110e87bb9f291cf2fc3125b358ececb44'],1,6,7,2,,,
80147629343a2b7467a69be6c460ea8d204fb3e2,"Bugfix ensure task cancellation works on Python 3.6

This function should cancel all bar the protected task, including any
tasks created by the ASGI application. This includes a simple test to
ensure it does so. Previously it used a Python 3.7 only function.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-11-20 21:10:23+00:00,0,2018-11-20 21:12:19+00:00,0,True,False,"['run.py', 'test_run.py']",['a8aa68b4e1c9e3eb8e2b9c8447addad951fc47b8'],1,17,18,2,1.0,1.0,1.0
67a33302dae03224c03a24485b65640fcdebac37,"Update the gitlab-ci file

This includes running the format tox environment and specifying the
image throughout to be the latest.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-09 15:16:26+00:00,0,2018-12-09 15:16:26+00:00,0,True,False,['.gitlab-ci.yml'],['80147629343a2b7467a69be6c460ea8d204fb3e2'],3,4,7,1,,,
4a55bb043ee79bd85aa7ff699b18dfd66632fb1a,"Bugfix task cancellation warnings

This prevents an annoying ``_GatheringFuture exception was never
retrieved`` message and clarifies the unhandled exception shutdown
message.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-16 13:16:02+00:00,0,2018-12-16 13:17:18+00:00,0,True,False,['run.py'],['67a33302dae03224c03a24485b65640fcdebac37'],2,7,9,1,0.0,0.0,0.0
3a188a4a988f65ad534d49d08d8adf5c2b7f370e,Bump and release 0.4.3,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-16 13:19:10+00:00,0,2018-12-16 13:19:10+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['4a55bb043ee79bd85aa7ff699b18dfd66632fb1a'],1,7,8,2,,,
98f2f0e887b16b95e0166362b180857d67b29b81,"PEP 561 compliance

This should allow the typing included with Hypercorn to be picked up
by mypy and used in projects that use Hypercorn.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-23 14:59:27+00:00,0,2018-12-23 14:59:27+00:00,0,True,False,"['MANIFEST.in', 'py.typed', 'setup.py']",['3a188a4a988f65ad534d49d08d8adf5c2b7f370e'],0,3,3,3,,,
f460e1e8db5e75518c1ac0c73013c4a660dc4d6b,"Bugfix ensure on timeout the connection is closed

This ensures that a GOAWAY frame is sent to the client, thereby
gracefully closing the connection.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-24 08:41:09+00:00,0,2018-12-24 08:42:45+00:00,0,True,False,"['base.py', 'h2.py', 'test_h2.py']",['98f2f0e887b16b95e0166362b180857d67b29b81'],2,9,11,3,1.0,1.0,1.0
130311ead8c0804bb93e6eca907b7d3228647f3b,"Bugfix ensure Trio h2 connections timeout when idle

A h2 connection is idle whilst waiting for data from a client with no
active streams, in this case it will timeout and close the connection
emitting the GOAWAY frame.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-24 09:16:16+00:00,0,2018-12-24 09:46:37+00:00,0,True,False,"['h2.py', 'test_h2.py']",['f460e1e8db5e75518c1ac0c73013c4a660dc4d6b'],1,45,46,2,0.0,0.32432432432432434,1.0
21892eb5aad44f2662383c644b46dd2b65ce57d2,"Bugfix delete reset h2-streams

Reset streams were closed, but not deleted. Which would confuse the
server in to believing it was still working when it instead was idle
and should be timing out.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-24 09:48:16+00:00,0,2018-12-24 09:48:16+00:00,0,True,False,"['h2.py', 'h2.py']",['130311ead8c0804bb93e6eca907b7d3228647f3b'],0,2,2,2,0.0,0.0,1.0
764e0fe967f7fe6abb8baf4787a9609c5be7601b,"Bugfix flow window updates to connection window

Previously only a stream_id value of None would be considered to
indicate that the window is updated for the connection, rather than
just a specific stream. However it should be if the stream_id is None
or *0*.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-24 10:09:06+00:00,0,2018-12-24 10:09:06+00:00,0,True,False,"['h2.py', 'h2.py']",['21892eb5aad44f2662383c644b46dd2b65ce57d2'],10,10,20,2,,0.0,
8498d038bb14614fa6a6c952b2115ead89b14249,"Bugfix ensure ASGI framework errors are logged

The lifespan part of the ASGI specification is new, and hence
Hypercorn will allow for frameworks that don't support it (the first
exception catch). However it should still show errors that occur in
the framework after the scope callable is called. Without this
debugging errors on startup (or shutdown) is very difficult.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-26 10:03:01+00:00,0,2018-12-26 10:03:01+00:00,0,True,False,"['lifespan.py', 'lifespan.py']",['764e0fe967f7fe6abb8baf4787a9609c5be7601b'],7,17,24,2,0.0,0.0,1.0
b27ec876cfa1adae7ccc335988fc85adb2927424,"Revert ""Bugfix delete reset h2-streams""

This reverts commit 21892eb5aad44f2662383c644b46dd2b65ce57d2. The
stream information must be kept until the handling of the request
completes.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-26 10:11:34+00:00,0,2018-12-26 10:11:34+00:00,0,True,False,"['h2.py', 'h2.py']",['8498d038bb14614fa6a6c952b2115ead89b14249'],2,0,2,2,1.0,1.0,0.0
b8d271543ad19d36ddd784508503734967b7831d,Bump and release 0.4.4,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-28 14:47:52+00:00,0,2018-12-28 14:47:52+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['b27ec876cfa1adae7ccc335988fc85adb2927424'],1,9,10,2,,,
7e32d1da765cc5b3c9c791dc56d26c0af3f402be,"Improve the test output and fix coverage reporting

The coverage reporting is confusing, Quart requires
``{envsitepackagesdir}`` to report coverage whereas Hypercorn does not
report if it is present. I've no idea why...",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-28 18:41:10+00:00,0,2018-12-28 18:41:10+00:00,0,True,False,"['setup.cfg', 'tox.ini']",['b8d271543ad19d36ddd784508503734967b7831d'],2,3,5,2,,,
47422dd2d6abf080b6b2c3f6d0fea02b2d11e89d,"Bugfix EOF handling for websocket connections

Previously neither the trio nor asyncio worker would correctly pass
``None`` to the wsproto connection and hence there would be no Close
event.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2018-12-30 16:30:52+00:00,0,2018-12-30 16:30:52+00:00,0,True,False,"['wsproto.py', 'wsproto.py']",['7e32d1da765cc5b3c9c791dc56d26c0af3f402be'],1,7,8,2,0.6,0.6,1.0
693093fb6bfb446781a55e3a4adb10540a180cd6,"Bugfix Introduce a random delay between worker starts on Windows

There is a strange bug on windows whereby this stack trace is seen,

  File ""c:\users\administrator\qtest\hypercorn\hypercorn\asyncio\run.py"", line 140, in run_single
    server = loop.run_until_complete(create_server)
  File ""C:\Program Files\Python37\lib\asyncio\base_events.py"", line 574, in run_until_complete
    return future.result()
  File ""C:\Program Files\Python37\lib\asyncio\base_events.py"", line 1387, in create_server
    server._start_serving()
  File ""C:\Program Files\Python37\lib\asyncio\base_events.py"", line 277, in _start_serving
    sock.listen(self._backlog)
  OSError: [WinError 10022] An invalid argument was supplied

I think this is a race condition when two processes listen on the same
socket at the same time. However I can only intermittently reproduce
this bug.

This fix follows Gunicorn's practice (although Gunicorn applies this
to all platforms), as discussed in
https://github.com/benoitc/gunicorn/issues/514 and implemented in
https://github.com/benoitc/gunicorn/commit/3ade8e8d78586621f735c62abc1c4bf0b497ff44.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-01 14:42:25+00:00,0,2019-01-01 14:46:08+00:00,0,True,False,['run.py'],['47422dd2d6abf080b6b2c3f6d0fea02b2d11e89d'],0,5,5,1,0.0,0.0,1.0
ab0a8a35be63587b411cd4c816a9f5555a2b51cb,Bump and release 0.4.5,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-01 16:56:47+00:00,0,2019-01-01 16:56:47+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['693093fb6bfb446781a55e3a4adb10540a180cd6'],1,7,8,2,,,
bac4668105ab3e8523cada1381feaad6c5cef382,Bump and release 0.4.6,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-01 17:20:49+00:00,0,2019-01-01 17:20:49+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['ab0a8a35be63587b411cd4c816a9f5555a2b51cb'],2,7,9,2,,,
11a44aceaf6011d912da121496a8924ccb31dffd,Add flag to control SSL verify mode.,jarek,jsiembida@github,pgjones,philip.graham.jones@googlemail.com,2018-12-31 14:56:43+01:00,-3600,2019-01-01 17:31:45+00:00,0,True,False,['config.py'],['bac4668105ab3e8523cada1381feaad6c5cef382'],0,3,3,1,0.0,1.0,1.0
20bb8c3a4ec2ee767de72f7ae00f2d11591f5b61,"Further Verify Mode support

This follows on from 11a44aceaf6011d912da121496a8924ccb31dffd and adds
a cert_reqs configuration parameter (or command line --cert-reqs) in
order to match Gunicorn. Users are encouraged to use verify_mode or
--verify-mode though.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-01 19:34:12+00:00,0,2019-01-01 19:34:12+00:00,0,True,False,"['__main__.py', 'config.py', 'test___main__.py']",['11a44aceaf6011d912da121496a8924ccb31dffd'],2,37,39,3,0.6,0.6,1.0
a727c1d5ae1a010e5e5e2ac1f951401cd8e84ef9,"Allow the SSL Verify Flags to be specified in the config

I think this is niche enough not to require a command line argument
for it.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-05 17:07:17+00:00,0,2019-01-05 17:07:17+00:00,0,True,False,['config.py'],['20bb8c3a4ec2ee767de72f7ae00f2d11591f5b61'],1,4,5,1,0.0,0.0,1.0
1ecfcc3ac8a1da1b8b12efdd5cab51fd41ad1c2f,"Add an official API for using Hypercorn programmatically

It is not expected that all usage of Hypercorn will be via the command
line, in fact both Quart and Quart-Trio use Hypercorn programmatically
via unofficial functionality. This standardises the API to the following
signature,

    async def serve(app: Type[ASGIFramework], config: Config) -> None:

with the intention being that this remains unchanged as Hypercorn
evolves.

In addition the documentation has been updated to reflect this.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-08 19:36:00+00:00,0,2019-01-08 19:39:01+00:00,0,True,False,"['api_usage.rst', 'index.rst', 'workers.rst', '__init__.py', 'run.py', '__init__.py', 'run.py', 'test_run.py']",['a727c1d5ae1a010e5e5e2ac1f951401cd8e84ef9'],41,197,238,8,0.05454545454545454,1.0,1.0
a047f71e7b86cc83689eb888c7acc9a3569f42e9,"Support the trio task_status system

This allows the serve method to be called via a ``nursery.start``, for
example,

    async with trio.open_nursery() as nursery:
        await nursery.start(partial(serve, app, config))",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-09 18:44:20+00:00,0,2019-01-09 18:46:08+00:00,0,True,False,['__init__.py'],['1ecfcc3ac8a1da1b8b12efdd5cab51fd41ad1c2f'],1,9,10,1,0.0,1.0,1.0
2ca9750773e0045fd22cfea08262e49c45fed2a3,"Add the ability to bind to multiple sockets

This allows (among other uses) a dual stack binding such as

    hypercorn --bind '0.0.0.0:5000' --bind '[::]:5000' ...

thereby ensuring hypercorn listens on both IPv4 and IPv6 sockets.

Note this deprecates the config ``host``, ``port``, ``unix_domain``
and ``file_descriptor`` options in favour of ``bind``.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-09 20:00:51+00:00,0,2019-01-09 20:00:51+00:00,0,True,False,"['binds.rst', 'index.rst', '__main__.py', 'run.py', 'config.py', 'run.py', 'run.py', 'typing.py', 'utils.py', 'test_config.py']",['a047f71e7b86cc83689eb888c7acc9a3569f42e9'],131,256,387,10,0.5416666666666666,0.8611111111111112,0.5694444444444444
22ffe3eac26dfffb03a4c47a835cbca2c0494d6d,"Bugfix default port is now 8000 not 5000

2ca9750773e0045fd22cfea08262e49c45fed2a3 changed the default port to
8000 (when not specified) to match Gunicorn. This commit is needed as
it was assumed the default was already 8000.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-09 20:07:18+00:00,0,2019-01-09 20:07:18+00:00,0,True,False,"['.gitlab-ci.yml', 'fuzzingclient.json', 'quickstart.rst']",['2ca9750773e0045fd22cfea08262e49c45fed2a3'],6,6,12,3,,,
77dcd42524cff19646efaabad6744a38b1c09c88,"Ensure that h2c upgrade requests work

Previously the h2c upgrade in the asyncio worker would not be
responded to (the coroutine wasn't awaited). Whereas the trio worker
had no code at all to handle a h2c upgrade and would crash strangly.

This now works and it is possible to upgrade from HTTP/1 to HTTP/2 on
an unencrypted (clear) connection.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-10 20:55:33+00:00,0,2019-01-10 20:55:33+00:00,0,True,False,"['h11.py', 'h11.py', 'h11.py', 'run.py', 'test_run.py', 'test_run.py']",['22ffe3eac26dfffb03a4c47a835cbca2c0494d6d'],11,142,153,6,0.2079207920792079,0.7227722772277227,1.0
69954068536d8dffd1d2fdb1ac4fad253ea0c175,"Support requests that assume HTTP/2

A HTTP/2 request starts with ``PRI * HTTP/2.0`` which can
intentionally be parsed by HTTP/1 parsers. When this is received
Hypercorn will now switch to the h2 mode and respond as such. This
happens when the client assumes the server supports HTTP/2 (without
consulting the ALPN or NPN flags or setting them) and sends a HTTP/2
request.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-10 21:42:00+00:00,0,2019-01-10 21:44:40+00:00,0,True,False,"['h11.py', 'run.py', 'h11.py', 'h2.py', 'run.py', 'h11.py', 'h2.py', 'run.py', 'test_run.py', 'test_run.py']",['77dcd42524cff19646efaabad6744a38b1c09c88'],28,85,113,10,0.8913043478260869,0.0,0.391304347826087
f51d20e0160dc77dc7a32017dea32797995759f3,"Allow the ALPN protocols to be configured

This allows control over HTTP/2 support, as this is a niche use there
is no command line support.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-12 21:18:55+00:00,0,2019-01-12 21:18:55+00:00,0,True,False,['config.py'],['69954068536d8dffd1d2fdb1ac4fad253ea0c175'],2,3,5,1,,,
e16bbae8306c2b5f10a7c6098fbce52d02df97c3,"Bugfix variable referenced before assignment

Issue from 2ca9750773e0045fd22cfea08262e49c45fed2a3",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-13 11:21:03+00:00,0,2019-01-13 11:21:03+00:00,0,True,False,['config.py'],['f51d20e0160dc77dc7a32017dea32797995759f3'],3,3,6,1,,,
001432f2a85516dd0a0c41f6fcf9f4bbc23d9292,"Bugfix signal handling

Signal handling with asyncio is an absolute pain. The previous version
would not gracefully shutdown. This version does by ensuring that
SIGINT or SIGTERM results in a Shutdown exception being raised (either
due to the loop handling the signal in single worker mode or the main
process doing so). The Shutdown exception can be caught and allow for
a graceful shutdown (lifespan shutdown). Note this is required due to
the changes in 1ecfcc3ac8a1da1b8b12efdd5cab51fd41ad1c2f which prevented
the try-except wrapping the loop.run_until_complete().

The run code is a basic copy of that in asyncio, and I'll switch when
Python 3.6 support is dropped.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-13 13:39:33+00:00,0,2019-01-13 13:58:41+00:00,0,True,False,"['run.py', 'utils.py']",['e16bbae8306c2b5f10a7c6098fbce52d02df97c3'],33,52,85,2,0.0,0.7142857142857143,1.0
9ab020c9f27bd14c686bdff4cd5435f42ec8a316,"Allow the access logger class to be customised

This also simplifies the code to access log within the various ASGI
protocol handlers. Note that the logger is created in the master
process (as with Gunicorn) and shared with the workers.

This is similar to Gunicorn in that the class of the logger can be
customised, however the mechanism requires a Python object rather than
a referenced string.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-15 10:06:19+00:00,0,2019-01-15 10:06:19+00:00,0,True,False,"['logging.rst', 'h11.py', 'h2.py', 'wsproto.py', 'config.py', 'logging.py', 'test___main__.py']",['001432f2a85516dd0a0c41f6fcf9f4bbc23d9292'],34,53,87,7,1.0,1.0,0.0
c0e35ca82d78ab3c7632c945c32179134a7fec57,"Change websocket access logging

Since 1e7d248d9013ad81b3278411743ae80d4cbe37b3 the access log for a
websocket connection is only emitted when the websocket is closed,
rather than when the handshake completes. As it is more intuitive to
think of the access being the handshake this changes it back.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-15 11:05:42+00:00,0,2019-01-15 11:05:42+00:00,0,True,False,"['wsproto.py', 'test_wsproto.py']",['9ab020c9f27bd14c686bdff4cd5435f42ec8a316'],6,15,21,2,0.8888888888888888,0.7777777777777778,0.4444444444444444
6ba0c80aa9a9fe5ce0aa197155e918dd7a314b19,"Allow the access logger Logger to be set

9ab020c9f27bd14c686bdff4cd5435f42ec8a316 introduced an AccessLogger
class with customisation, however it prevented a use case whereby the
access_logger Logger was set. Quart for example uses this to switch to
its defined logger with handlers for its use.

This also fixes a minor bug with file targets as found via the tests.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-15 11:52:33+00:00,0,2019-01-15 11:52:33+00:00,0,True,False,"['config.py', 'logging.py', 'test_logging.py']",['c0e35ca82d78ab3c7632c945c32179134a7fec57'],6,41,47,3,1.0,1.0,0.35
e9aeb30bf4f303d8eacb49ab550c81778378bebb,"Support existing Quart releases

2ca9750773e0045fd22cfea08262e49c45fed2a3 changed from host & port to
using bind and broke existing Quart versions. This adds compatibility
which will be removed in 0.6.0 (to allow fixes in Quart).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-15 12:00:26+00:00,0,2019-01-15 12:00:26+00:00,0,True,False,['config.py'],['6ba0c80aa9a9fe5ce0aa197155e918dd7a314b19'],5,17,22,1,1.0,1.0,1.0
16b0ae8f898e641a4c3d565f2a2f01ea9cedda61,"Bugfix ensure there is no race condition in lifespan startup

Previously it was possible to reach the `wait_for` in the
`wait_for_startup` before the support variable was set (in the case of
no support). Now the `await self._support_checked.wait()` will allow
the event loop to run and ensure the support variable is set.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-15 20:07:19+00:00,0,2019-01-15 20:07:19+00:00,0,True,False,"['lifespan.py', 'test_lifespan.py']",['e9aeb30bf4f303d8eacb49ab550c81778378bebb'],0,27,27,2,0.8571428571428571,0.8571428571428571,1.0
3ad4bde06a70f33ee95a88c1c9cdc7f8fee13fe5,"Correct import ordering for trio

Trio is a third party library, but wasn't positioned as such.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-16 16:14:44+00:00,0,2019-01-16 16:14:44+00:00,0,True,False,"['base.py', 'h11.py', 'h2.py', 'lifespan.py', 'run.py', 'wsproto.py', 'setup.cfg', 'test_h11.py', 'test_h2.py', 'test_run.py', 'test_wsproto.py']",['16b0ae8f898e641a4c3d565f2a2f01ea9cedda61'],8,11,19,11,,,
acad661e41e0cf1ed6671d7d9041dceb437b016b,"Bugfix don't crash or log on SSL handshake failures

These are typically due to client side issues so they shouldn't be
logged. Note the error in asyncio is attached to the loop (can't be
directly excepted) hence the need to set the exception handler. As
per the API definition this has no affect when using serve.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-18 18:32:27+00:00,0,2019-01-21 12:53:23+00:00,0,True,False,"['run.py', 'run.py']",['3ad4bde06a70f33ee95a88c1c9cdc7f8fee13fe5'],1,14,15,2,0.7,0.7,1.0
5b635eba3914445e242457bba93e41e940aec34b,"Upgrade wsproto to 0.13.0

This is quite a breaking change to wsproto, but it simplifies the
Hypercorn code a fair amount. It also comes with numerous bug fixes
and improvements.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-16 17:49:34+00:00,0,2019-01-21 12:53:23+00:00,0,True,False,"['wsproto.py', 'wsproto.py', 'wsproto.py', 'setup.py', 'test_wsproto.py', 'test_wsproto.py', 'test_wsproto.py']",['acad661e41e0cf1ed6671d7d9041dceb437b016b'],250,198,448,7,0.5853658536585366,0.3902439024390244,1.0
3e19e831a24a18b1ef5481b5a5df3ac561b3175d,"Initial working h2 Websocket support RFC 8441

This introduces support of websockets over HTTP/2, as defined in RFC
8441. It requires the latest versions of Hyper-h2 and wsproto. I've
chosen to move the logic to the h2 stream from the h2 connection as
that is effectively where the logic is.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-17 12:27:28+00:00,0,2019-01-23 17:42:26+00:00,0,True,False,"['h11.py', 'h2.py', 'utils.py', 'wsproto.py', 'h11.py', 'h2.py', 'wsproto.py', 'h11.py', 'h2.py', 'wsproto.py', 'typing.py', 'setup.py', 'test_h11.py', 'test_h2.py', 'test_utils.py', 'test_wsproto.py']",['5b635eba3914445e242457bba93e41e940aec34b'],346,885,1231,16,0.46954314720812185,0.6979695431472082,0.6091370558375635
d42f454b4cf461f53b4339f8673dd752fedd4582,Fix a mypy bug,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-24 10:04:19+00:00,0,2019-01-24 10:04:19+00:00,0,True,False,['config.py'],['3e19e831a24a18b1ef5481b5a5df3ac561b3175d'],1,1,2,1,,,
4982f29c11038a0869ac1f0fc35b8201ce2eb93a,"Bugfix Introduce a lock on sending for trio websocket

This prevents multiple tasks writing at the same time and hence
causing a trio.BusyResourceError.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-24 10:22:02+00:00,0,2019-01-24 10:22:02+00:00,0,True,False,['wsproto.py'],['d42f454b4cf461f53b4339f8673dd752fedd4582'],1,3,4,1,0.5,1.0,0.5
d8e02bccf6defd2db65717263a5d5216efaccdee,"Bugfix cope with file not found errors when reloading

On Windows (and possibly other systems) the module path may not exist
thereby crashing the reloader. To avoid this the error is caught and
the module ignored.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-24 15:26:31+00:00,0,2019-01-24 15:26:31+00:00,0,True,False,['utils.py'],['4982f29c11038a0869ac1f0fc35b8201ce2eb93a'],4,8,12,1,0.0,0.0,1.0
99fd66a5937f6d8a446419f33bb0dcc94f47a510,"Bugfix reload on Windows machines

This will reload Hypercorn on Windows (although it should only be used
in the development mode). It fixes a bug to do with Windows executable
files being executed differently to Linux executable files.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-24 15:58:24+00:00,0,2019-01-24 15:58:24+00:00,0,True,False,"['run.py', 'run.py', 'utils.py']",['d8e02bccf6defd2db65717263a5d5216efaccdee'],10,27,37,3,1.0,1.0,1.0
70d466cd0f6af77d867a2d0597fdff226b79ef68,Bump and release 0.5.0,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-24 16:11:30+00:00,0,2019-01-24 16:11:30+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['99fd66a5937f6d8a446419f33bb0dcc94f47a510'],1,28,29,2,,,
2e71983a982079271cf55ad4870f3d21463cbb4c,"Update the README to indicate WebSocket support

HTTP/2 WebSockets are now supported :).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-24 20:41:31+00:00,0,2019-01-24 20:41:31+00:00,0,True,False,['README.rst'],['70d466cd0f6af77d867a2d0597fdff226b79ef68'],3,3,6,1,,,
fe5448097f76660e2208c928ad1db986c6365f4f,"Bugfix mark the task started after the server starts

This is after the lifespan startup and just before the listeners are
served i.e. when the server is ready to handle requests.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-25 11:13:29+00:00,0,2019-01-25 11:17:13+00:00,0,True,False,"['__init__.py', 'run.py']",['2e71983a982079271cf55ad4870f3d21463cbb4c'],2,3,5,2,0.0,0.0,0.0
063372cb58ba104ad4faeed09cdc646deb94d9d9,"Unpin pep8-naming

The attribute error has been fixed.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-26 11:06:27+00:00,0,2019-01-26 11:06:27+00:00,0,True,False,['tox.ini'],['fe5448097f76660e2208c928ad1db986c6365f4f'],1,1,2,1,,,
98936be8141d3d015304bf73c652a6dbda0b6992,"Bugfix ensure h11 connections are closed

This ensures the connection is closed unless (and only if) the
connection can be recycled. Under the previous logic the connection
would remain open if the application errored whilst sending the
response - whereas the only possible thing Hypercorn can do is to
close the connection.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-28 15:15:25+00:00,0,2019-01-28 15:15:25+00:00,0,True,False,"['h11.py', 'h11.py']",['063372cb58ba104ad4faeed09cdc646deb94d9d9'],6,6,12,2,,,
d87a05a61a97629216cffe00c41a11acdffb3404,Ignore PEP8 error so build passes,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-28 21:18:47+00:00,0,2019-01-28 21:18:47+00:00,0,True,False,['run.py'],['98936be8141d3d015304bf73c652a6dbda0b6992'],1,1,2,1,,,
39041f27040edec88dd4840122812a96d443e7d9,"Bugfix ensure h2 streams are closed/reset

Much like with h11 in 98936be8141d3d015304bf73c652a6dbda0b6992 the
stream should be reset if the application errored whilst sending the
response or otherwise failed to leve the stream in a closed state.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-29 13:28:38+00:00,0,2019-01-29 13:30:42+00:00,0,True,False,"['h2.py', 'h2.py']",['d87a05a61a97629216cffe00c41a11acdffb3404'],0,6,6,2,1.0,1.0,1.0
6fcd77629a923b31307fc6d67dedc9b1f9276f9b,"Bugfix ensure connection is not closed when reseting streams

This fixes a bug in 39041f27040edec88dd4840122812a96d443e7d9 whereby
the stream would be closed due to the client closing the
connection. In this case the stream would be unable to complete and
hence require a reset, however as the connection is closed the reset
is invalid.

It however raises the issue that in the asyncio worker these stream
tasks are destroyed without being awaited (no nursery to clean them
up as in Trio).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-29 14:34:26+00:00,0,2019-01-29 14:34:26+00:00,0,True,False,"['h2.py', 'h2.py']",['39041f27040edec88dd4840122812a96d443e7d9'],4,12,16,2,1.0,1.0,1.0
9aac7f8c9661190ad3e1fe18a003d7864346c97f,Bump and release 0.5.1,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-29 15:15:00+00:00,0,2019-01-29 15:15:00+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['6fcd77629a923b31307fc6d67dedc9b1f9276f9b'],1,8,9,2,,,
1783e6d483410371b555abaec7d69d6ee521335b,"Bugfix ensure stream is not in closed dict when reseting

This fixes a bug in 6fcd77629a923b31307fc6d67dedc9b1f9276f9b which
manifests when the connection is remotely closed (correctly) and then
the stream handling completes. It then errored on

    File ""hypercorn/trio/h2.py"", line 190, in handle_request
      and not self.connection.streams[event.stream_id].closed
    KeyError: 15",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-03 12:43:56+00:00,0,2019-02-03 12:46:49+00:00,0,True,False,"['h2.py', 'h2.py']",['9aac7f8c9661190ad3e1fe18a003d7864346c97f'],0,2,2,2,1.0,1.0,1.0
2e72ba25d8f09a110406def50a67d629851454ff,Bump and release 0.5.2,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-03 12:47:12+00:00,0,2019-02-03 12:47:12+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['1783e6d483410371b555abaec7d69d6ee521335b'],1,6,7,2,,,
871668fe32c130de55d6aeaa7035be6187f3b152,"Bugfix reloading on both Windows and Linux

I've tested the reloading on Windows and Linux and it works. This is
quite a complex system - with thanks for Werkzeug for having already
solved this.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-05 22:29:54+00:00,0,2019-02-05 22:29:54+00:00,0,True,False,['utils.py'],['2e72ba25d8f09a110406def50a67d629851454ff'],4,30,34,1,0.0,0.0,1.0
437d3397e5bffb05b47f1dabde59a2fc1b1a264a,"Update quickstart docs

This indicates that the only supported ASGI protocol is HTTP, without
this Hypercorn will fail to run the example due to presumed lifespan
support.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-06 20:11:42+00:00,0,2019-02-06 20:11:42+00:00,0,True,False,['quickstart.rst'],['871668fe32c130de55d6aeaa7035be6187f3b152'],0,2,2,1,,,
a758091e06df44e7b1a3cf5b4f7bf078801bd54a,"Bugfix WebSocket unbounded memory usage

WebSocket servers buffer data on the way to the client. This buffer is
unbounded. Wait for the buffer to drain when it has crossed its high
watermark to avoid memory exhaustion.

Fixes Issue #57.",Kyle Larose,kyle@agilicus.com,Kyle Larose,kyle@agilicus.com,2019-02-21 14:39:55-05:00,18000,2019-02-21 14:39:55-05:00,18000,True,False,['wsproto.py'],['437d3397e5bffb05b47f1dabde59a2fc1b1a264a'],0,1,1,1,1.0,1.0,1.0
109bb2f3cd7bca632005a67aaf180906aa779a08,Fixed import from deprecated trio.ssl,Carlo Pires,carlopires@gmail.com,pgjones,philip.graham.jones@googlemail.com,2019-01-29 16:19:11-02:00,7200,2019-02-21 20:15:46+00:00,0,True,False,['base.py'],['a758091e06df44e7b1a3cf5b4f7bf078801bd54a'],1,1,2,1,,,
fe5334fdcf5cb8557d951c5652c6daa3c0ecf7cd,Bump and release 0.5.3,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-24 10:13:10+00:00,0,2019-02-24 10:13:10+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['109bb2f3cd7bca632005a67aaf180906aa779a08'],1,8,9,2,,,
2ef4ec156b625d3e5d32a162deedde6f7aff655a,"Remove features previously deprecated

In doing so this highlighted a bug with the bind config parameter, in
that it had to previously be a list of strings. Like Gunicorn
Hypercorn also allows for a single bind to be defined as a string.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-24 13:51:10+00:00,0,2019-02-24 13:52:49+00:00,0,True,False,"['__init__.py', 'lifespan.py', 'run.py', 'config.py', 'config.py', 'config.toml', 'config_ssl.py', 'test_config.py']",['fe5334fdcf5cb8557d951c5652c6daa3c0ecf7cd'],84,18,102,8,0.41304347826086957,0.0,0.0
d93da455bb84eff55255f19e4a93e3036662f2b0,"Add a LifespanTimeout Exception to better communicate the failure

On startup failure the output is now

    hypercorn.utils.LifespanTimeout: Timeout whilst awaiting
    startup. Your application may not support the ASGI Lifespan
    protocol correctly, alternatively the startup_timeout
    configuration is incorrect.

which should help users understand the error. Equally the error on
shutdown timeout is the same bar for `startup` -> `shutdown`.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-24 14:37:32+00:00,0,2019-02-24 14:37:32+00:00,0,True,False,"['lifespan.py', 'lifespan.py', 'utils.py', 'test_lifespan.py', 'test_lifespan.py']",['2ef4ec156b625d3e5d32a162deedde6f7aff655a'],8,61,69,5,1.0,1.0,1.0
e7a874f7e5fcce9cc80b90154f0cf5f9a832f39a,"Fix compliance scripts following 2ef4ec156b625d3e5d32a162deedde6f7aff655a

Neither needs to import anything, both tests failed due to the removal
of run_single.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-24 16:02:06+00:00,0,2019-02-24 16:02:06+00:00,0,True,False,"['server.py', 'server.py']",['d93da455bb84eff55255f19e4a93e3036662f2b0'],18,0,18,2,,,
3ca2605e25c9997768d156631693e2f3dbac9cd9,"Stop supporting Python 3.6, support only 3.7 or better

Hypercorn 0.5.X is the last release series to support 3.6, Hypercorn
0.6 onwards uses Python 3.7 features and hence drops support for
Python 3.6.

Regrettably this has necessitated the temporary disabling of the
autobahn compliance tests as there isn't an alpine linux image that
supports Python2.7 and Python3.7 at the same time. These tests can be
reenabled in CI when either autobahn supports Python 3 (less likely)
or Alpine supports Python 3.7.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-24 16:02:46+00:00,0,2019-02-24 16:21:43+00:00,0,True,False,"['.gitlab-ci.yml', 'installation.rst', 'run.py', 'setup.py', 'tox.ini']",['e7a874f7e5fcce9cc80b90154f0cf5f9a832f39a'],19,10,29,5,,,
89f5412ea6e7b7dafdeba7d8df8bd698191c7773,"Remove duplication in gitlab CI file

This is an attempt to improve the readability of the file.

The ``&something`` and ``<<: *something`` are YAML markers indicating
sections that should be copied and pasted respectively.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-24 16:28:12+00:00,0,2019-02-24 16:35:06+00:00,0,True,False,['.gitlab-ci.yml'],['3ca2605e25c9997768d156631693e2f3dbac9cd9'],27,24,51,1,,,
e963ec1cc088cc4b2af034e18977ef29d347ad62,"Add an SSL handshake timeout

This mitigates a DOS attack whereby the attacker simply opens
connections without attempting to do the SSL handshake. Eventually the
attacker can exhaust all the available connections and therefore
prevent any other clients from connecting.

The default value of 60 seconds copies the NGINX default value.

Note this is possible only with Python 3.7, so the 0.5.X branch will
remain affected.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-24 18:52:09+00:00,0,2019-02-24 19:00:44+00:00,0,True,False,"['dos_mitigations.rst', 'run.py', 'config.py', 'run.py']",['89f5412ea6e7b7dafdeba7d8df8bd698191c7773'],5,26,31,4,0.0,0.0,0.2
e285d9a1365b5378f0f344f756af594e40944f70,"Fix ssl handshake usage if no ssl

This fixes e963ec1cc088cc4b2af034e18977ef29d347ad62 by setting the
ssl_handshake_timeout to None if ssl is not enabled.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-24 19:31:00+00:00,0,2019-02-24 19:31:00+00:00,0,True,False,['run.py'],['e963ec1cc088cc4b2af034e18977ef29d347ad62'],1,5,6,1,0.0,0.0,0.0
ed384dd6e3bfd6f61971935492f3053959121186,Pause reading during h11 pipelining,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-24 19:35:40+00:00,0,2019-02-24 19:35:40+00:00,0,True,False,"['h11.py', 'helpers.py']",['e285d9a1365b5378f0f344f756af594e40944f70'],5,11,16,2,1.0,1.0,1.0
821ac362c716e6644851bfa7887273154cd5157b,"Bugfix correctly support the ASGI specification

This fixes two issues, firstly the header names were not lowercased
(h2 does this as part of the HTTP/2 specification) and secondly there
was no support for headers or subprotocol options on websocket
acceptance.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-02-24 20:10:09+00:00,0,2019-02-24 20:37:43+00:00,0,True,False,"['h11.py', 'wsproto.py', 'test_wsproto.py']",['ed384dd6e3bfd6f61971935492f3053959121186'],11,24,35,3,0.9166666666666666,0.4166666666666667,1.0
21ebeb3dca78f711c02d26530d3c321fc249a4c8,"Add the spec_version to the scope

This informs the ASGI application what additional features it can make
use of, specifically the accept headers supported since
821ac362c716e6644851bfa7887273154cd5157b.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-03 09:09:01+00:00,0,2019-03-03 09:17:26+00:00,0,True,False,"['h11.py', 'h2.py', 'wsproto.py', 'test_h11.py', 'test_h2.py', 'test_wsproto.py']",['821ac362c716e6644851bfa7887273154cd5157b'],8,8,16,6,,,
094a155c6fb99576b3403e2d7751a3d773d4c621,"Choose reverse_relative=True for the isort style

This is to match the Smarkets style as described in
flake8-import-order as that style was and is the style prefered. This
is required now due to an isort update that would otherwise re-order
these imports.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-04 21:55:17+00:00,0,2019-03-04 21:55:17+00:00,0,True,False,"['h11.py', 'h2.py', 'wsproto.py', 'h11.py', 'h2.py', 'run.py', 'wsproto.py', 'h11.py', 'h2.py', 'run.py', 'wsproto.py', 'setup.cfg', 'test_h11.py', 'test_h2.py', 'test_run.py', 'test_wsproto.py']",['21ebeb3dca78f711c02d26530d3c321fc249a4c8'],23,24,47,16,,,
c2718adec1be89cfe5281a9251db858c977f09c3,"Bugfix ensure the response headers are correctly built

ASGI specifies that the header names must be lowercase and that the
subprotocol can be specified in a websocket accept response (bug only
in h2, wsproto fixed in 821ac362c716e6644851bfa7887273154cd5157b).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-04 22:26:41+00:00,0,2019-03-04 22:26:41+00:00,0,True,False,"['h11.py', 'h2.py', 'utils.py', 'wsproto.py', 'test_h2.py', 'test_utils.py']",['094a155c6fb99576b3403e2d7751a3d773d4c621'],43,61,104,6,1.0,1.0,0.0
83de54fe4608f9b8f31522531c1c1e996126daf0,Added check for supported ssl versions,cromefire,tim.langhorst@outlook.de,cromefire,tim.langhorst@outlook.de,2019-03-12 20:45:15+01:00,-3600,2019-03-12 20:45:15+01:00,-3600,True,False,['config.py'],['c2718adec1be89cfe5281a9251db858c977f09c3'],3,5,8,1,0.0,0.0,1.0
bb6989da48080478a87d4e909b3da00fe6fe6ca4,"Bugfix reloading when invocated as python -m hypercorn

Previously it would try `python module:app -m hypercorn` instead of
the correct ordering `python -m hypercorn module:app`.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-16 18:31:26+00:00,0,2019-03-16 18:35:14+00:00,0,True,False,['utils.py'],['83de54fe4608f9b8f31522531c1c1e996126daf0'],1,1,2,1,,,
d47b2033e7db0eacbd7118534a35ef7dbe3bf694,"Support ASGI 3.0

This adds support for the latest ASGI version, whilst keeping support
for ASGI 2.0. In addition it requires the Lifespan support (and spec)
to be upgraded to 2.0.

Note this has required the clarification of the ASGIFramework types,
which results in a backwards incompatible change if you are reliant on
Hypercorn's types. On the up side this will result in mypy warnings
and hopefully introduce you to ASGI 3.0.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-17 14:16:45+00:00,0,2019-03-17 15:41:43+00:00,0,True,False,"['h11.py', 'h2.py', 'wsproto.py', '__init__.py', 'h11.py', 'h2.py', 'lifespan.py', 'run.py', 'wsproto.py', '__init__.py', 'h11.py', 'h2.py', 'lifespan.py', 'run.py', 'wsproto.py', 'typing.py', 'utils.py', 'test_h11.py', 'test_h2.py', 'test_lifespan.py', 'test_wsproto.py', 'helpers.py', 'test_utils.py', 'test_h11.py', 'test_h2.py', 'test_lifespan.py', 'test_wsproto.py']",['bb6989da48080478a87d4e909b3da00fe6fe6ca4'],107,219,326,27,1.0,1.0,0.0
4a1630cfea841d90aee22cbd3137f1c1d1550f18,"Change all apps to ASGI 3.0

Now ASGI 3.0 is supported it makes sense to update all the app
examples and usages to ASGI 3.0.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-17 15:26:13+00:00,0,2019-03-17 15:43:20+00:00,0,True,False,"['quickstart.rst', 'test_h11.py', 'test_h2.py', 'test_wsproto.py', 'test_h11.py', 'test_h2.py', 'test_lifespan.py', 'test_run.py', 'test_wsproto.py', 'helpers.py', 'test_h11.py', 'test_h2.py', 'test_lifespan.py', 'test_run.py', 'test_wsproto.py']",['d47b2033e7db0eacbd7118534a35ef7dbe3bf694'],183,161,344,15,0.0,0.0,0.0
68d83bc90209679f21c261189fa9ffad9558495b,"Update README given recent changes

Only Python 3.7 or greater is supported and ASGI/3 is also supported.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-17 15:44:55+00:00,0,2019-03-17 15:44:55+00:00,0,True,False,['README.rst'],['4a1630cfea841d90aee22cbd3137f1c1d1550f18'],3,3,6,1,,,
f81c3d5ee0c0583d5f529586a984c323b62920b0,"Improve the readability of the docs

The current fm color is too dark to read, this helps. See also
https://gitlab.com/vimalkvn/solar-theme/merge_requests/1 for
acceptance into the theme itself.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-17 16:04:12+00:00,0,2019-03-17 16:04:12+00:00,0,True,False,['conf.py'],['68d83bc90209679f21c261189fa9ffad9558495b'],0,3,3,1,1.0,1.0,1.0
2b7402f2829e8f8742082704ba4fe5794ced9866,"Improve the readability of the docs

The current fm color is too dark to read, this helps. See also
https://gitlab.com/vimalkvn/solar-theme/merge_requests/1 for
acceptance into the theme itself.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-17 16:04:12+00:00,0,2019-03-17 19:23:28+00:00,0,True,False,['hypercorn.css'],['f81c3d5ee0c0583d5f529586a984c323b62920b0'],0,3,3,1,,,
a395637ce05b85037d1d0c6109cf0bec4b7b006f,Fix a minor issue with the docs,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-17 19:02:54+00:00,0,2019-03-17 19:23:28+00:00,0,True,False,['http2.rst'],['2b7402f2829e8f8742082704ba4fe5794ced9866'],1,1,2,1,,,
4e44ae077975f8d432a508356ee4446c64537c9b,"Support serving on insecure binds alongside secure binds

The primary usage of this is to redirect HTTP traffic to HTTPS, as
such ASGI middleware to do so has been included. Care must be taken
when using this to ensure that the HTTP traffic is not served but
redirected.

This means that there need be nothing in front of Hypercorn, HTTP to
HTTPS was the last remaining missing feature. Allowing Hypercorn to
connect directly ensures HTTP/2 is delivered to Hypercorn rather than
being terminated upstream (as Nginx will do).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-17 19:19:07+00:00,0,2019-03-17 19:23:28+00:00,0,True,False,"['http_https_redirect.rst', 'index.rst', 'logging.rst', 'usage.rst', '__main__.py', 'run.py', 'config.py', 'logging.py', 'middleware.py', 'run.py', 'run.py', 'typing.py', 'test_config.py', 'test_middleware.py']",['a395637ce05b85037d1d0c6109cf0bec4b7b006f'],46,325,371,14,0.65,0.74375,0.6875
e97e9f1896c50beb7cbde9baabf6d8eed7092c6c,"Yield to the event loop after checking each module for changes

Without this it is feasible for this checking loop to take
considerable lengths of time, espeically for projects with a large
number of modules, during which the event loop is blocked.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-21 22:16:10+00:00,0,2019-03-21 22:18:08+00:00,0,True,False,['utils.py'],['4e44ae077975f8d432a508356ee4446c64537c9b'],0,1,1,1,0.0,0.0,1.0
da5c4e341e61fbd830a67dce5dc164d5357051df,"Bugix RESUSE -> REUSE typo

This may be the cause of the reported errors binding to sockets.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-03-23 17:34:56+00:00,0,2019-03-23 17:34:56+00:00,0,True,False,['config.py'],['e97e9f1896c50beb7cbde9baabf6d8eed7092c6c'],1,1,2,1,,,
57d0f94c90a733add931ce56d3281a359e3c306a,"Don't propagate access logs

If logging has been setup within an application, it is used here for the
access logs instead of the format specified in the hypercorn config
file. Not propagating the logger fixes this.

This follows the same pattern as gunicorn, as seen here:
https://github.com/benoitc/gunicorn/blob/cc8e67ea83ce1064ef605d82130ace2a3670d68a/gunicorn/glogging.py#L189",Jaime Lennox,jaime.lennox@smarkets.com,Jaime Lennox,jaime.lennox@smarkets.com,2019-03-28 20:20:08+00:00,0,2019-03-28 20:20:08+00:00,0,True,False,['logging.py'],['da5c4e341e61fbd830a67dce5dc164d5357051df'],0,1,1,1,1.0,1.0,0.0
6226dff5033f1106a0795f35a046be995ccdd95f,"Upgrade wsproto version

The latest wsproto version renames a function as a breaking change, so
this is required.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-04-06 19:27:43+01:00,-3600,2019-04-06 19:38:08+01:00,-3600,True,False,"['h2.py', 'setup.py']",['57d0f94c90a733add931ce56d3281a359e3c306a'],3,3,6,2,,,
29ead5d76733b3ce2861ad3ca99b5655db7cc0a6,"Add CHANGELOG entries for 0.5.4

See also the 0.5-maintenance branch.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-04-06 19:35:28+01:00,-3600,2019-04-06 19:38:08+01:00,-3600,True,False,['CHANGELOG.rst'],['6226dff5033f1106a0795f35a046be995ccdd95f'],0,10,10,1,,,
71619bc2af369b763e4e75c456cbf2657e9ea18f,Bump and release 0.6.0,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-04-06 20:07:36+01:00,-3600,2019-04-06 20:07:36+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['29ead5d76733b3ce2861ad3ca99b5655db7cc0a6'],1,19,20,2,,,
c6eca075755a0fd10ca4a3457a902ab5bf3507ac,"Bugfix lifespan failure handling

The version implemented in d47b2033e7db0eacbd7118534a35ef7dbe3bf694
would not fail correctly in the asyncio worker, as it would crash the
task but not the server (the server would fail after the startup timed
out). To ensure both trio and asyncio work correctly on lifespan
failure the tests have been updated to actually represent how the
lifespan is called and used.

This also wraps the failure message in single quotes to help it stand
out.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-04-14 18:49:41+01:00,-3600,2019-04-14 18:49:41+01:00,-3600,True,False,"['lifespan.py', 'run.py', 'utils.py', 'test_lifespan.py', 'helpers.py', 'test_lifespan.py']",['71619bc2af369b763e4e75c456cbf2657e9ea18f'],7,23,30,6,0.7333333333333333,0.7333333333333333,0.4666666666666667
11378d68675a67ad276b8c06174f4049d173e0e7,"Follow the black warning and change usage

--py36 => --target-version py37 (3.7 is minimum supported version).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-04-14 18:55:02+01:00,-3600,2019-04-14 18:55:02+01:00,-3600,True,False,['tox.ini'],['c6eca075755a0fd10ca4a3457a902ab5bf3507ac'],1,1,2,1,,,
b6f4541b15b67633418d3336d1c6a801d5a559c5,"Add a repr to the helper MockTransport

For easier debugging on test failure.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-04-16 21:52:48+01:00,-3600,2019-04-16 21:53:14+01:00,-3600,True,False,['helpers.py'],['11378d68675a67ad276b8c06174f4049d173e0e7'],0,3,3,1,1.0,1.0,1.0
4901eedeeb9673cfcc13068beaf479ba57a8b93a,"Bugfix ensure early connection closure

If a keep-alive request is made but the application choses to respond
before consuming the entire body, the connection cannot be
recycled. Additionally the body may still be sent which Hypercorn
would need to receive despite the application ignoring it. Previously
Hypercorn would error trying to keep the connection alive (cannot
recycle until body has been received). The simplest solution to this
is for the connection to be closed.

Note this only works for the asyncio worker, trio requires more
investigation.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-04-16 21:50:08+01:00,-3600,2019-04-16 21:53:27+01:00,-3600,True,False,"['h11.py', 'test_h11.py', 'helpers.py']",['b6f4541b15b67633418d3336d1c6a801d5a559c5'],9,32,41,3,0.058823529411764705,1.0,0.7058823529411765
6a2a76ff2a4ed16e697d7292749038fbb6a397c2,"Switch from pytoml to toml

pytoml is no longer maintained and recommends toml is used instead.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-04-19 16:17:21+01:00,-3600,2019-04-19 16:17:21+01:00,-3600,True,False,"['config.py', 'setup.py']",['4901eedeeb9673cfcc13068beaf479ba57a8b93a'],3,3,6,2,,,
3b7677e39db001a06ea4dbd26e1f15d78c7acdb2,"Update and improve tooling configuration

This moves tooling configuration to pyproject.toml where
possible. This seems to be gaining traction as the single place for
tool configuration and in addition helps migrate this project to use
poetry as the build tool.

In addition it standardises the mypy configuration.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-04-19 16:42:46+01:00,-3600,2019-04-19 16:51:50+01:00,-3600,True,False,"['MANIFEST.in', 'utils.py', 'h11.py', 'h2.py', 'config.py', 'h2.py', 'utils.py', 'pyproject.toml', 'setup.cfg', 'test_h11.py', 'test_h2.py', 'test_wsproto.py', 'test_base.py', 'test_h11.py', 'test_h2.py', 'test_lifespan.py', 'test_logging.py', 'test_middleware.py', 'test_utils.py', 'test_h11.py', 'test_h2.py', 'test_lifespan.py', 'tox.ini']",['6a2a76ff2a4ed16e697d7292749038fbb6a397c2'],57,89,146,23,1.0,0.0,0.0
ef93d741fe246846a127f9318b54505ac65f1ae7,"Add build-system to pyproject.toml

Without this I think the file is technically invalid.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-04-20 10:36:18+01:00,-3600,2019-04-20 10:36:18+01:00,-3600,True,False,['pyproject.toml'],['3b7677e39db001a06ea4dbd26e1f15d78c7acdb2'],0,3,3,1,,,
0dcdbdad893d926ef947fde231c2a415b49fd89b,Log exceptions with lifespan errors,Daniel Hahler,git@thequod.de,Daniel Hahler,git@thequod.de,2019-05-07 08:00:53+02:00,-7200,2019-05-07 08:00:53+02:00,-7200,True,False,"['lifespan.py', 'lifespan.py']",['ef93d741fe246846a127f9318b54505ac65f1ae7'],2,2,4,2,,,
2901272d4a214ad5dc32ed28a01469e6d3c921b1,"Add testing of the documentation build

This should ensure the documentation always builds and is free from
errors.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-05-07 20:02:28+01:00,-3600,2019-05-07 20:05:11+01:00,-3600,True,False,"['.gitlab-ci.yml', 'design_choices.rst', 'index.rst', 'tox.ini']",['0dcdbdad893d926ef947fde231c2a415b49fd89b'],5,18,23,4,,,
8cfe9352dd3d119a8340a042f4d86177d135cf17,"Improve the documentation

This adds nice logos, and links back to the source code.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-05-07 20:04:30+01:00,-3600,2019-05-07 20:05:12+01:00,-3600,True,False,"['hypercorn.css', 'logo.png', 'logo_small.png', 'sidebar.html', 'source.html', 'conf.py']",['2901272d4a214ad5dc32ed28a01469e6d3c921b1'],2,15,17,6,,,
8167c8cb1a872c57b0d9e6036eec52745e21589c,"Fix docs testing

This fixes 2901272d4a214ad5dc32ed28a01469e6d3c921b1",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-05-07 20:12:34+01:00,-3600,2019-05-07 20:12:34+01:00,-3600,True,False,['tox.ini'],['8cfe9352dd3d119a8340a042f4d86177d135cf17'],1,3,4,1,,,
d825518f04c00b2c10b14149b155ae469a87c834,"Try make the README more welcoming

This is to encourage contributions.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-05-07 20:19:03+01:00,-3600,2019-05-07 20:19:03+01:00,-3600,True,False,['README.rst'],['8167c8cb1a872c57b0d9e6036eec52745e21589c'],5,9,14,1,,,
1ec12d89210ed365caba962aafc44a21b66a9130,"BugFix further trio.ssl imports and bump trio version

trio.ssl has been deprecated since 0.11, this makes 0.11 the minimum
version Hypercorn can use. This follows
109bb2f3cd7bca632005a67aaf180906aa779a08.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-05-09 20:21:57+01:00,-3600,2019-05-09 20:26:52+01:00,-3600,True,False,"['run.py', 'setup.py']",['d825518f04c00b2c10b14149b155ae469a87c834'],2,2,4,2,,,
9c72ecc60d6a728c98d420d2265685cf2fffc731,"Bugfix support insecure binds with Trio workers

Each stream must now be tested to see if it is an SSL stream (rather
than assuming they all are based on the config).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-05-09 20:23:12+01:00,-3600,2019-05-09 20:27:24+01:00,-3600,True,False,['run.py'],['1ec12d89210ed365caba962aafc44a21b66a9130'],1,1,2,1,,,
2a1043d1b6860d507c0a02af435f638c4bde5410,"Clarify the HTTP -> HTTPS redirect documentation

As noted in a recent issue the documentation was not clear about which
host to use and the setup to serve both binds from the same hypercorn
process.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-05-17 10:25:10+01:00,-3600,2019-05-17 10:26:40+01:00,-3600,True,False,['http_https_redirect.rst'],['9c72ecc60d6a728c98d420d2265685cf2fffc731'],5,7,12,1,,,
e166198fc61bd26e17865064824e5a9b1235a11b,"Structually refactor the codebase

This is a structural refactor aimed at reducing the amount of
duplicated logic and to separate the event loop specific code from the
protocol specific code. It will allow for another event loop (curio)
to be supported (in a following commit) and more if they exist.

The logic to the refactor is that the IO and app handling parts are
event loop specific, whereas the protocol part isn't (although it does
depend on a normalised Event). The more logic that isn't event loop
specific that can be shared the less repitition. The protocol parts
are structured as streams with a handle method (receive) and passed a
send callable.

This also revereses an earlier decision to use the asyncio callback
approach switching to a stream approach. Whilst the later is reported
slower (this may have changed in the last year) it allows the stream
structure to be used. As Uvicorn is already faster than Hypercorn, the
raw speed is likely less of a draw than the feature set.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-06-02 20:23:29+01:00,-3600,2019-06-23 19:37:41+01:00,-3600,True,False,"['server.py', '__init__.py', 'h11.py', 'h2.py', 'run.py', 'utils.py', 'wsproto.py', 'base.py', 'h11.py', 'h2.py', 'lifespan.py', 'run.py', 'server.py', 'wsproto.py', 'config.py', 'events.py', '__init__.py', 'events.py', 'h11.py', 'h2.py', 'http_stream.py', 'ws_stream.py', '__init__.py', 'base.py', 'h11.py', 'h2.py', 'lifespan.py', 'run.py', 'server.py', 'wsproto.py', 'typing.py', 'utils.py', 'pyproject.toml', 'setup.cfg', 'setup.py', '__init__.py', 'test_h11.py', 'test_h2.py', 'test_utils.py', 'test_wsproto.py', 'helpers.py', 'test_base.py', 'test_h11.py', 'test_h2.py', 'test_run.py', 'test_sanity.py', 'test_server.py', 'test_wsproto.py', 'helpers.py', 'test_h11.py', 'test_h2.py', 'test_http_stream.py', 'test_ws_stream.py', 'test___main__.py', 'test_config.py', 'test_utils.py', 'test_h11.py', 'test_h2.py', 'test_run.py', 'test_sanity.py', 'test_server.py', 'test_wsproto.py', 'tox.ini']",['2a1043d1b6860d507c0a02af435f638c4bde5410'],4198,2745,6943,63,0.11894736842105263,0.19052631578947368,0.4557894736842105
3445952bb3abfe45a67baaa2aa44d9dc03a1b244,"Support raw_path in the scope

This is a recent addition to the ASGI specification that allows the
raw (quoted) path to be passed to the application.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-06-23 22:23:57+01:00,-3600,2019-06-23 22:23:57+01:00,-3600,True,False,"['http_stream.py', 'ws_stream.py', 'helpers.py', 'test_http_stream.py', 'test_ws_stream.py']",['e166198fc61bd26e17865064824e5a9b1235a11b'],0,5,5,5,0.0,0.4,0.8
2b9e068a55d00dbe987585a963990f5121c52244,"Add the ability to upgrade from HTTP/1 to HTTP/2

This was supported until e166198fc61bd26e17865064824e5a9b1235a11b and
is now restored. It allows for clients to ask to upgrade to HTTP/2 or
just assume HTTP/2.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-06-25 21:40:34+01:00,-3600,2019-06-25 21:41:58+01:00,-3600,True,False,"['server.py', '__init__.py', 'h11.py', 'h2.py', 'test_h11.py']",['3445952bb3abfe45a67baaa2aa44d9dc03a1b244'],8,131,139,5,0.2621359223300971,0.8155339805825242,0.7475728155339806
cf6330d887b473b3546fb4a36c5705dedb02994e,Update usage.rst (fix typo in example command),Ken R,krr428@gmail.com,Ken R,krr428@gmail.com,2019-06-26 17:05:30+00:00,0,2019-06-26 17:05:30+00:00,0,True,False,['usage.rst'],['2b9e068a55d00dbe987585a963990f5121c52244'],1,1,2,1,,,
97f001ffcbe563dc5d097fd5e071f42e67b96346,remove npn,Daniel Holth,dholth@fastmail.fm,Daniel Holth,dholth@fastmail.fm,2019-06-26 20:35:28-04:00,14400,2019-06-26 20:35:28-04:00,14400,True,False,"['CHANGELOG.rst', 'config.py']",['cf6330d887b473b3546fb4a36c5705dedb02994e'],5,4,9,2,1.0,1.0,0.0
ba0cbdeb57ba28fa61702b7352dc6c2418c29a7d,format with black,Daniel Holth,dholth@fastmail.fm,Daniel Holth,dholth@fastmail.fm,2019-06-26 20:41:07-04:00,14400,2019-06-26 20:41:07-04:00,14400,True,False,['config.py'],['97f001ffcbe563dc5d097fd5e071f42e67b96346'],1,1,2,1,,,
a642b815e7d65a1b1d7c0798a8d3bc0db8d12807,"Re-enable the autobahn websocket testing in CI

This was disabled with the move to Python 3.7 in
3ca2605e25c9997768d156631693e2f3dbac9cd9 due to a lack of support. As
Python 3.7 is now available in the Python2.7 image (autobahn requires
Python 2.7) this can now be re-enabled.",pgjones,philip.graham.jones@googlemail.com,Philip Jones,philip@octopuswealth.com,2019-05-25 18:13:32+01:00,-3600,2019-06-28 16:05:10+01:00,-3600,True,False,['.gitlab-ci.yml'],['ba0cbdeb57ba28fa61702b7352dc6c2418c29a7d'],3,3,6,1,,,
dc1f85ce6f93abdfdc58d67c44ccc1f1f5e1d947,"Following the release of 0.6.0 bump to +dev

This is helpful to collaborators.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-06-29 21:10:33+01:00,-3600,2019-06-29 22:19:15+01:00,-3600,True,False,['__about__.py'],['a642b815e7d65a1b1d7c0798a8d3bc0db8d12807'],1,1,2,1,,,
f6d6595b6f7246f9aa26597870028e96f42718d6,"Bugfix WebSocket shutdown

There are two parts to this, firstly the WebSocket connection won't
receive a CloseConnection event from itself, so the code handling this
can be removed. Secondly the instruction to close the connection
cannot immediately close the connection as the client needs to
respond.

There is an issue that if the client never responds with a close the
connection will remain open. This will be fixed in a subsequent
commit.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-06-29 22:13:24+01:00,-3600,2019-06-29 22:19:15+01:00,-3600,True,False,"['h11.py', 'h2.py', 'ws_stream.py', 'test_h11.py']",['dc1f85ce6f93abdfdc58d67c44ccc1f1f5e1d947'],5,14,19,4,0.6666666666666666,0.6666666666666666,1.0
b003efda5b652b06c914519cd53734381b363962,"Remove uvloop argument

It has been deprecated for a while and is replaced with -k uvloop.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-06-30 10:46:57+01:00,-3600,2019-06-30 15:40:59+01:00,-3600,True,False,['__main__.py'],['f6d6595b6f7246f9aa26597870028e96f42718d6'],14,0,14,1,1.0,1.0,0.0
1da32a182d56ea6ea83dde443b69c1b71147557d,"Rationalise the logging settings based on Gunicorn

This deprecates `--access-log` and `--error-log` and their associated
config names `access_logger` and `error_logger` for `--access-logfile`
and `accesslog`, and ``--error-logfile` and `errorlog`. This matches
the configuration used by Gunicorn. The originals will be removed in
0.8.

This also clarifies that the config.log can be used throughout to log,
as will be used in subsequent commits.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-06-30 15:36:53+01:00,-3600,2019-06-30 15:44:01+01:00,-3600,True,False,"['usage.rst', '__main__.py', 'lifespan.py', 'server.py', 'config.py', 'logging.py', 'http_stream.py', 'ws_stream.py', 'lifespan.py', 'server.py', 'test_http_stream.py', 'test_ws_stream.py', 'test___main__.py', 'test_logging.py']",['b003efda5b652b06c914519cd53734381b363962'],95,105,200,14,0.0,0.0,0.0
54bc6f96bead34d8d5146b10f0edc9d31ba50c15,"Set the default error log (target) to - i.e. stderr

This follows Gunicorn and allows the logger to be used rather than
print (following commits).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-06-30 16:41:52+01:00,-3600,2019-06-30 16:41:52+01:00,-3600,True,False,['config.py'],['1da32a182d56ea6ea83dde443b69c1b71147557d'],1,1,2,1,,,
9e1b5acb9c22957b1a60e008104eea635409ac6f,"Bugfix 1da32a182d56ea6ea83dde443b69c1b71147557d

Ensure the level is set for the logger",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-06-30 16:53:57+01:00,-3600,2019-06-30 16:56:02+01:00,-3600,True,False,"['logging.py', 'test_logging.py']",['54bc6f96bead34d8d5146b10f0edc9d31ba50c15'],0,2,2,2,0.0,1.0,0.5
1df1c27f25461f17a14edeb0d60b2460a2fa12d3,"Log the binding, rather than print

This also ensures that the correct binding is logged (say if the
configured port is 0 and hence a random port is chosen).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-06-30 17:09:59+01:00,-3600,2019-06-30 17:09:59+01:00,-3600,True,False,"['__main__.py', 'run.py', 'run.py', 'utils.py']",['9e1b5acb9c22957b1a60e008104eea635409ac6f'],34,46,80,4,1.0,1.0,0.3333333333333333
87b6d2081ce4f2105ca9f010647e9747a1ec5584,"Support literal IPv6 addresses (square brackets)

This allows a bind to be [::]:0 rather than :::0, in addition it
outputs IPv6 bins in the literal format.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-06-30 17:18:57+01:00,-3600,2019-06-30 17:33:58+01:00,-3600,True,False,"['config.py', 'utils.py', 'test_config.py']",['1df1c27f25461f17a14edeb0d60b2460a2fa12d3'],3,6,9,3,0.6666666666666666,0.6666666666666666,1.0
70be2ac5a7d2336ed804c47cb6dfb353d94ab9bb,"Allow the server header to be omitted

This adds a config option ``include_server_header`` which can be set
to False in order to prevent Hypercorn from adding the server
header. Additionally the config ``response_headers`` method can be
overidden in order to fully control headers added by Hypercorn.

This is often desired to obfuscate the server version in the hope it
improves security.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-06-30 21:19:15+01:00,-3600,2019-06-30 21:20:23+01:00,-3600,True,False,"['config.py', 'h11.py', 'h2.py', 'utils.py', 'test_sanity.py', 'conftest.py', 'test_h11.py', 'test_h2.py', 'test_config.py', 'test_utils.py', 'test_sanity.py']",['87b6d2081ce4f2105ca9f010647e9747a1ec5584'],54,42,96,11,0.0,0.0,1.0
1649c331895c3f5738f5798493c53b13b222be06,"Add the ability to log metrics to statsd

This follows the same interface as Gunicorn and reports the same
metrics. It should allow better monitoring of Hypercorn servers.

Note that the UDP socket is dependent upon the event loop and requires
the interface to change to be async.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-04 19:18:59+01:00,-3600,2019-07-04 19:32:38+01:00,-3600,True,False,"['usage.rst', '__main__.py', 'lifespan.py', 'run.py', 'server.py', 'statsd.py', 'config.py', 'logging.py', 'http_stream.py', 'ws_stream.py', 'statsd.py', 'lifespan.py', 'run.py', 'server.py', 'statsd.py', 'test_http_stream.py', 'test_ws_stream.py', 'test_logging.py']",['70be2ac5a7d2336ed804c47cb6dfb353d94ab9bb'],36,213,249,18,0.6767676767676768,0.7070707070707071,0.494949494949495
4c7a595dbb157e300e63ae1c993d6162a6993037,"Fix bug in 1649c331895c3f5738f5798493c53b13b222be06

The sentinel value should be checked to allow overriding via the CLI.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-04 20:28:47+01:00,-3600,2019-07-04 20:30:23+01:00,-3600,True,False,['__main__.py'],['1649c331895c3f5738f5798493c53b13b222be06'],2,3,5,1,0.0,0.0,1.0
d70b15eee59fc9ec7a26766da83b6c0fc9e28819,"Fix cancellation handling

Cancellations should be re-raised rather than being considered
application errors.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-06 10:20:52+01:00,-3600,2019-07-06 13:41:08+01:00,-3600,True,False,"['server.py', 'http_stream.py', 'server.py']",['4c7a595dbb157e300e63ae1c993d6162a6993037'],3,12,15,3,0.0,0.0,0.0
eda1b553f3c69d531af93635cfd41962c3a78ae8,"Fix pipelining behaviour

The key here is that the task that reaches the paused state is the one
that re-activates after the connection is recycled as this ensures
that it can and that the reading is paused.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-06 13:39:01+01:00,-3600,2019-07-06 13:44:47+01:00,-3600,True,False,"['h11.py', 'test_h11.py']",['d70b15eee59fc9ec7a26766da83b6c0fc9e28819'],7,7,14,2,1.0,1.0,
115b02ea9219c6fa622abe7e38ab2c802d8dd181,"Bugfix ensure WebSocket data is received

Previously if there was trailing data after the upgrade request
(unlikely but possible) it would be lost. This fixes that by ensuring
it is considered websocket data.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-06 18:53:32+01:00,-3600,2019-07-06 18:53:32+01:00,-3600,True,False,['h11.py'],['eda1b553f3c69d531af93635cfd41962c3a78ae8'],1,1,2,1,,,
56e765cabc19c822e9ae96f5824549083f750727,"Change trio worker timeout system

This follows the asyncio worker and closes the stream only on timeout
(rather than cancelling all the nursery tasks). This should allow
the application to gracefully finish handling the connection.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-07 16:09:23+01:00,-3600,2019-07-07 16:09:23+01:00,-3600,True,False,['server.py'],['115b02ea9219c6fa622abe7e38ab2c802d8dd181'],10,25,35,1,1.0,1.0,0.07692307692307693
b30b446510b8ac0f07070e41bd7a741e9215bc48,"Only send error responses when in the right h11 states

This prevents Hypercorn trying to send error responses after sending a
response to the client. A good example of which would be if the client
continued to send a body after Hypercorn had decided to send an early
response.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-07 17:44:00+01:00,-3600,2019-07-07 17:44:00+01:00,-3600,True,False,"['h11.py', 'test_h11.py']",['56e765cabc19c822e9ae96f5824549083f750727'],1,10,11,2,0.8333333333333334,0.8333333333333334,1.0
13bbb7faeebed7462449d751b0e198079c120755,"Bugfix early exit h11 event handling

If the connection state is DONE (or CLOSED or MUST_CLOSE) Hypercorn
will not expect to handle events from the client, hence it is best to
early exit.

This caused an error whereby Hypercorn responded before the request
body had been fully received. Specifically,

    File ""/usr/local/lib/python3.7/site-packages/Hypercorn-0.6.0+dev-py3.7.egg/hypercorn/protocol/h11.py"", line 156, in _handle_events
        await self.stream.handle(Body(stream_id=STREAM_ID, data=event.data))
    AttributeError: 'NoneType' object has no attribute 'handle'

as the stream had been set to None on completion of the response.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-07 19:23:27+01:00,-3600,2019-07-07 19:23:27+01:00,-3600,True,False,"['h11.py', 'test_h11.py']",['b30b446510b8ac0f07070e41bd7a741e9215bc48'],0,14,14,2,0.7777777777777778,0.7777777777777778,1.0
ccc233c3c37023f131a4c0b47d8fc8ccc099c43b,"Timeout close handshake WebSocket connections

This ensures that WebSocket connections will close even if the client
doesn't respond with a close frame (after a duration equal to the keep
alive timeout).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-07 22:25:27+01:00,-3600,2019-07-08 10:20:08+01:00,-3600,True,False,"['h11.py', 'h2.py', 'http_stream.py', 'ws_stream.py', 'test_http_stream.py', 'test_ws_stream.py']",['13bbb7faeebed7462449d751b0e198079c120755'],5,31,36,6,1.0,1.0,0.6666666666666666
aae3c317524c1b0cc2fe8fa25eded758d9ad54fb,"Report the list of binds on trio worker startup

This allows the following usage,

    from hypercorn.trio import serve

    ...
    binds: List[str] = await nusery.start(serve, ...)

thereby allowing the caller to know which binds have been made.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-08 10:29:13+01:00,-3600,2019-07-08 10:29:13+01:00,-3600,True,False,['run.py'],['ccc233c3c37023f131a4c0b47d8fc8ccc099c43b'],1,4,5,1,0.0,0.0,0.0
25348c21e754084459c609c16e10724716cc2c31,"modify Config for subclassing create_ssl_context

This allows a subclass to decide how, and crucially where, the
certificates for the SSL conext are loaded.",Daniel Holth,dholth@fastmail.fm,pgjones,philip.graham.jones@googlemail.com,2019-06-17 21:40:38-04:00,14400,2019-07-08 10:42:59+01:00,-3600,True,False,['config.py'],['aae3c317524c1b0cc2fe8fa25eded758d9ad54fb'],2,4,6,1,0.0,0.0,1.0
10b214a85303b73ecc5d0d9e4219edb52cd5b7db,"Bugfix HTTP/2 flow control handling

There are two bugs fixed here, firslty negative flow control values
are truthy (only 0 is False), and whilst negative flow control values
are possible only positive ones should allow data to be sent.

Secondly if the INITIAL_WINDOW_SIZE setting is changed (after the
headers have been sent) h2 does not emit a WindowUpdated event (see
https://github.com/python-hyper/hyper-h2/issues/1193) yet the window
should be updated.

This should fix the intermittent (race-condition) errors with h2spec
and the Trio worker.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-08 12:44:25+01:00,-3600,2019-07-08 12:44:25+01:00,-3600,True,False,['h2.py'],['25348c21e754084459c609c16e10724716cc2c31'],2,4,6,1,0.0,0.0,1.0
c0f12818889c0aca72a2b0eebcd69b53edef1fe8,Bugfix server push headers should not be combined,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-08 18:08:05+01:00,-3600,2019-07-08 18:41:25+01:00,-3600,True,False,['h2.py'],['10b214a85303b73ecc5d0d9e4219edb52cd5b7db'],1,1,2,1,,,
ac014dd17012b539d07b83d485a056c7abd73a84,"Bugfix flush before closing the stream

This ensures that the closing data is sent before the stream is torn
down and closed.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-08 18:40:48+01:00,-3600,2019-07-08 18:41:25+01:00,-3600,True,False,['h2.py'],['c0f12818889c0aca72a2b0eebcd69b53edef1fe8'],1,1,2,1,,,
ad278bd4a4e6a927193db21bf2f7ee59f84cb0c7,Bump and release 0.7.0,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-08 17:05:15+01:00,-3600,2019-07-08 18:41:25+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['ac014dd17012b539d07b83d485a056c7abd73a84'],1,29,30,2,,,
5a1c1124b0976069ff9537be3b4942d238496aa7,Following the release of 0.7.0 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-08 18:57:58+01:00,-3600,2019-07-08 18:57:58+01:00,-3600,True,False,['__about__.py'],['ad278bd4a4e6a927193db21bf2f7ee59f84cb0c7'],1,1,2,1,,,
a25199a0e8403ee43a36c4aac282c57adf8b9727,"Bugix correct the request duration units

It is meant to be milliseconds rather than microseconds.",Philip Jones,philip@octopuswealth.com,Philip Jones,philip@octopuswealth.com,2019-07-17 14:26:39+01:00,-3600,2019-07-17 14:26:39+01:00,-3600,True,False,['statsd.py'],['5a1c1124b0976069ff9537be3b4942d238496aa7'],1,1,2,1,,,
f7272f9bb65027c89d63626b415dcf5b640ad672,"Fix mypy issues

These have been introduced by the latest mypy version.",Philip Jones,philip@octopuswealth.com,Philip Jones,philip@octopuswealth.com,2019-07-17 16:14:43+01:00,-3600,2019-07-17 16:14:43+01:00,-3600,True,False,"['test_sanity.py', 'test_sanity.py']",['a25199a0e8403ee43a36c4aac282c57adf8b9727'],4,4,8,2,,,
ce1836517459c7a8ef9cffa892c83f2fcfdc0364,"Bugfix ensure disconnect messages are only sent once

Hypercorn is meant to guarantee that the disconnect message is only
sent to the ASGI application once. This ensures that this is the case.",pgjones,philip.graham.jones@googlemail.com,Philip Jones,philip@octopuswealth.com,2019-07-18 11:40:52+01:00,-3600,2019-07-18 11:43:33+01:00,-3600,True,False,"['closing.rst', 'index.rst', 'http_stream.py', 'ws_stream.py', 'test_http_stream.py', 'test_ws_stream.py']",['f7272f9bb65027c89d63626b415dcf5b640ad672'],4,66,70,6,0.9166666666666666,0.9166666666666666,1.0
8e5620052d18787e43a6de469ea53f08ccb72478,"Bugfix correctly handle client disconnection

This ensures that when a client disconnects and the server is still
reading or writing a Closed event is sent to the protocol and the
read/write is aborted.

Note that the trio too slow handling was missleading as the client
disconnection would not trigger this, nor would the keep alive
timeout.",pgjones,philip.graham.jones@googlemail.com,Philip Jones,philip@octopuswealth.com,2019-07-18 14:04:23+01:00,-3600,2019-07-18 14:33:00+01:00,-3600,True,False,"['closing.rst', 'server.py', 'server.py']",['ce1836517459c7a8ef9cffa892c83f2fcfdc0364'],5,18,23,3,0.0,0.0,0.0
e6d61ac786a35e22816c748ada96894cdb6a789f,"Bugfix ensure the keep alive timeout is updated

Every time a stream closes the keep alive timeout should be updated,
so that it starts if there are no active streams. This fixes this for
the h2 protocol and makes it clearer in the server why the event was
sent.",pgjones,philip.graham.jones@googlemail.com,Philip Jones,philip@octopuswealth.com,2019-07-18 14:35:50+01:00,-3600,2019-07-18 14:41:32+01:00,-3600,True,False,"['server.py', 'h2.py', 'server.py']",['8e5620052d18787e43a6de469ea53f08ccb72478'],3,8,11,3,0.8,0.8,1.0
f0659f0e14c7c002d7478ae2ebb0f50b4860b1ba,"Bugfix don't pass None to the wsproto connection

None is used to represent an unexpected disconnection rather than an
EOF marker, hence this code was incorrect.

Unexpected disconnections are handled by the protocol/server rather
than the wsproto connection.",pgjones,philip.graham.jones@googlemail.com,Philip Jones,philip@octopuswealth.com,2019-07-18 14:43:36+01:00,-3600,2019-07-18 14:45:01+01:00,-3600,True,False,['ws_stream.py'],['e6d61ac786a35e22816c748ada96894cdb6a789f'],6,1,7,1,1.0,1.0,0.0
73af8790efed6738834404e85399669b4cb9fdf2,"Bugfix correctly handle server disconnections

This ensures that the server correctly disconnects and the correct
events are sent between the server, protocol and stream. Critically
the protocol should only trigger closure on receipt of a StreamClosed
message from the stream.",pgjones,philip.graham.jones@googlemail.com,Philip Jones,philip@octopuswealth.com,2019-07-18 14:45:28+01:00,-3600,2019-07-18 14:52:06+01:00,-3600,True,False,"['closing.rst', 'server.py', 'h11.py', 'h2.py', 'http_stream.py', 'server.py', 'test_h11.py', 'test_http_stream.py']",['f0659f0e14c7c002d7478ae2ebb0f50b4860b1ba'],5,22,27,8,0.0,1.0,0.75
0c8fe0ad1cf672c09e991b11fbe9c456baaad3b9,"tweak, format setup.py",Daniel Holth,dholth@fastmail.fm,pgjones,philip.graham.jones@googlemail.com,2019-07-17 20:48:02-04:00,14400,2019-07-18 19:23:03+01:00,-3600,True,False,['setup.py'],['73af8790efed6738834404e85399669b4cb9fdf2'],44,28,72,1,,,
d653d858f4ddfffc79a0d3d60faec828e642ce58,"CI check the formatting of setup.py

Now it has been nicely formatted in
0c8fe0ad1cf672c09e991b11fbe9c456baaad3b9.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-18 19:33:25+01:00,-3600,2019-07-18 19:33:25+01:00,-3600,True,False,['tox.ini'],['0c8fe0ad1cf672c09e991b11fbe9c456baaad3b9'],1,1,2,1,,,
13f385be7277f407a9a361c958820515e16e217e,"Bugfix specify header encoding

Although HTTPbis says only ASCII chars are allowed in headers latin1
is a safer choice and prevents a UnicodeDecodeError seen in production
logging code.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-18 21:12:04+01:00,-3600,2019-07-18 21:12:04+01:00,-3600,True,False,"['logging.py', 'h11.py']",['d653d858f4ddfffc79a0d3d60faec828e642ce58'],9,9,18,2,,,
612b7769c6b964287c5f1cc5f07265e8a26f4367,"Bugfix HTTP/2 stream closing issues

It is important that the stream is closed before the window is updated
in order to allow the sending to terminate. This is done by exiting
rather than waiting for a valid window update when sending.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-21 12:56:20+01:00,-3600,2019-07-21 12:56:20+01:00,-3600,True,False,['h2.py'],['13f385be7277f407a9a361c958820515e16e217e'],2,4,6,1,1.0,0.0,0.0
006dfe840afb50611f5f86137dcde353c8c18833,"Bugfix send HTTP/2 push promise data sooner

Without this the connection can mistakenly enter a compression error
state, I'm not sure why.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-21 12:56:25+01:00,-3600,2019-07-21 12:56:25+01:00,-3600,True,False,['h2.py'],['612b7769c6b964287c5f1cc5f07265e8a26f4367'],0,1,1,1,0.0,1.0,0.0
9fe554aa4d2d9eff5396e290983f376757aed5c1,"Bugfix HTTP/2 stream closing issues

It is important that the stream is closed before the window is updated
in order to allow the sending to terminate.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-21 16:07:34+01:00,-3600,2019-07-21 16:07:43+01:00,-3600,True,False,['h2.py'],['006dfe840afb50611f5f86137dcde353c8c18833'],3,3,6,1,,,
6b39f17b02bdd92d9eda533221b71d1d1daf6846,Bump and release 0.7.1,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-21 16:18:41+01:00,-3600,2019-07-21 16:18:41+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['9fe554aa4d2d9eff5396e290983f376757aed5c1'],1,15,16,2,,,
da45924feee8f811d7cbdfbfb4e35c2064e6ec24,Following the release of 0.7.1 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-21 16:20:16+01:00,-3600,2019-07-21 16:20:16+01:00,-3600,True,False,['__about__.py'],['6b39f17b02bdd92d9eda533221b71d1d1daf6846'],1,1,2,1,,,
f12c9c5b4d9ebf4babb1140029304c5967dbdf73,"Bugfix only delete the H2 stream if present

There is a race condition whereby a stream can be cancelled and then
finish (or vice versa) which results in a KeyError as the stream has
already been removed from the streams collection.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-22 20:59:56+01:00,-3600,2019-07-22 20:59:56+01:00,-3600,True,False,['h2.py'],['da45924feee8f811d7cbdfbfb4e35c2064e6ec24'],4,7,11,1,1.0,1.0,1.0
9385f290d3fc7b80a622a829f5a73ed44be88ea9,"Bugfix change the h2 closed routine

It was possible for the streams dictionary to change size during
iteration (if a stream closed thanks to an await context switch). This
should remove this error by ensuring the stream ids list is fixed and
utilising the safer close from
f12c9c5b4d9ebf4babb1140029304c5967dbdf73.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-22 21:20:27+01:00,-3600,2019-07-22 21:20:27+01:00,-3600,True,False,['h2.py'],['f12c9c5b4d9ebf4babb1140029304c5967dbdf73'],3,3,6,1,,,
c822afed5b3d5a126eb521af8849b6a19a1ff55a,"Bugfix move the trio socket address parsing within the try-finally

The socket connection could disconnect during the SSL handshake
(especially if it fails to handshake) hence this code can error. If it
does error it should just trigger the finally clause as it does now.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-22 21:24:46+01:00,-3600,2019-07-22 21:24:46+01:00,-3600,True,False,['server.py'],['9385f290d3fc7b80a622a829f5a73ed44be88ea9'],3,3,6,1,,,
2108c41f5ba4a77e7ae0609ad88dc5ebae6b086e,"Bugfix handle ASGI apps ending prematurely

Previously if an ASGI app errored Hypercorn would attempt to cleanup
and close the connection. However if the ASGI app completed, without
erroring, Hypercorn would not attempt to cleanup and close. This could
leave the connection in a broken state with no way for Hypercorn to
know what to do.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-28 11:35:06+01:00,-3600,2019-07-28 11:35:06+01:00,-3600,True,False,"['server.py', 'http_stream.py', 'ws_stream.py', 'server.py']",['c822afed5b3d5a126eb521af8849b6a19a1ff55a'],4,6,10,4,,,
6570cda728f191a7a2174c3ac0fd9a4fa9d2d88b,"Bugfix use finally clause

This better expresses the intent of 2108c41f5ba4a77e7ae0609ad88dc5ebae6b086e",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-28 11:39:29+01:00,-3600,2019-07-28 11:39:29+01:00,-3600,True,False,"['server.py', 'server.py']",['2108c41f5ba4a77e7ae0609ad88dc5ebae6b086e'],2,4,6,2,0.5,0.5,0.0
a91f5abac47ed59d599f39f225d90cf8f1016833,"Bugfix shield data sending in Trio working

This ensures that data fragments aren't sent (say if the sening task
is cancelled). Data fragments, such as a partial HTTP/2 frame confuse
the client and likely result in a failed/stalled connection.

Note the asyncio worker write is synchronous and hence cannot be
cancelled whilst writing.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-28 16:31:22+01:00,-3600,2019-07-28 16:32:16+01:00,-3600,True,False,['server.py'],['6570cda728f191a7a2174c3ac0fd9a4fa9d2d88b'],1,3,4,1,1.0,1.0,1.0
50de172cca60ae096d286a3f6e5716e7464d9d4f,Bump and release 0.7.2,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-28 18:06:28+01:00,-3600,2019-07-28 18:06:28+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['a91f5abac47ed59d599f39f225d90cf8f1016833'],1,13,14,2,,,
9955f437f6ee82df21464b87a36035e66d8b7375,Following the release of 0.7.2 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-07-28 18:14:07+01:00,-3600,2019-07-28 18:14:07+01:00,-3600,True,False,['__about__.py'],['50de172cca60ae096d286a3f6e5716e7464d9d4f'],1,1,2,1,,,
e81ea4cf9a6be8fb575d8d9530f9998d8d94849b,Made response headers optional,Rob Blackbourn,rblackbourn@ugsb-rbla01.bhdgsystematic.com,Rob Blackbourn,rblackbourn@ugsb-rbla01.bhdgsystematic.com,2019-08-01 09:05:14+01:00,-3600,2019-08-01 09:05:14+01:00,-3600,True,False,"['logging.py', 'test_logging.py']",['9955f437f6ee82df21464b87a36035e66d8b7375'],1,14,15,2,1.0,1.0,1.0
86b0a7badc39ea23cd1d840b4bf0efa173a0e152,For http/2 use version 2 not 2.0,Rob Blackbourn,rblackbourn@ugsb-rbla01.bhdgsystematic.com,Rob Blackbourn,rblackbourn@ugsb-rbla01.bhdgsystematic.com,2019-08-01 10:18:21+01:00,-3600,2019-08-01 10:18:21+01:00,-3600,True,False,"['middleware.py', 'h2.py', 'http_stream.py', 'test_http_stream.py', 'test_ws_stream.py', 'test_middleware.py']",['e81ea4cf9a6be8fb575d8d9530f9998d8d94849b'],25,52,77,6,0.0,1.0,1.0
39e4d8970638e838500e266b5f06c9bad67d61d5,Removed unnecessary fixture,Rob Blackbourn,rblackbourn@ugsb-rbla01.bhdgsystematic.com,Rob Blackbourn,rblackbourn@ugsb-rbla01.bhdgsystematic.com,2019-08-01 11:29:36+01:00,-3600,2019-08-01 11:29:36+01:00,-3600,True,False,['test_logging.py'],['86b0a7badc39ea23cd1d840b4bf0efa173a0e152'],7,2,9,1,0.0,0.0,0.0
2dbfd4f17ffc883f14bff28a23a20d56a55fd519,Removed unnecessary fixtures and fixed test names,Rob Blackbourn,rblackbourn@ugsb-rbla01.bhdgsystematic.com,Rob Blackbourn,rblackbourn@ugsb-rbla01.bhdgsystematic.com,2019-08-01 11:30:17+01:00,-3600,2019-08-01 11:30:17+01:00,-3600,True,False,['test_http_stream.py'],['39e4d8970638e838500e266b5f06c9bad67d61d5'],8,6,14,1,,,
4e60c1eae6cde3152c880c1f118402d37e6a238c,"Simplify the h2 protocol code

min can take more than 2 arguments, and the negative chunk size case
is handled above in the while loop (it wasn't when the line was
added).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-04 09:12:08+01:00,-3600,2019-08-04 09:12:08+01:00,-3600,True,False,['h2.py'],['2dbfd4f17ffc883f14bff28a23a20d56a55fd519'],4,5,9,1,0.0,1.0,0.0
a2b2753aa01d5097b37e7806beaa216e4005c094,"Bugfix use the `at_eof` method

This seems the correct way to determine if the reader is at the EOF,
and therefore should lead to more robust code.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-04 09:27:26+01:00,-3600,2019-08-04 09:27:26+01:00,-3600,True,False,"['server.py', 'helpers.py']",['4e60c1eae6cde3152c880c1f118402d37e6a238c'],1,7,8,2,1.0,1.0,1.0
9993785b852a0c3a694fe08311595d9647f4a7c6,Update description in index.rst to include ASGI/3,Florimond Manca,florimond.manca@gmail.com,Florimond Manca,florimond.manca@gmail.com,2019-08-04 09:50:56+00:00,0,2019-08-04 09:50:56+00:00,0,True,False,['index.rst'],['a2b2753aa01d5097b37e7806beaa216e4005c094'],3,3,6,1,,,
fc6f5a108b0912d8c0504c2e335bd67be8599623,Bugfix Catch ClosedResourceError as well,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-08 20:58:42+01:00,-3600,2019-08-08 21:08:23+01:00,-3600,True,False,['server.py'],['9993785b852a0c3a694fe08311595d9647f4a7c6'],1,1,2,1,,,
d4bf215305674c3ae0c75a9f9d4d3c73188d16cc,"Bugfix fix KeyError in close_stream

Previously if the close stream was called during the handling of the
CloseStream message sending (possible due to the await) it would try
deleting the stream twice and hence error on the second time.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-08 20:58:57+01:00,-3600,2019-08-08 21:08:23+01:00,-3600,True,False,['h2.py'],['fc6f5a108b0912d8c0504c2e335bd67be8599623'],2,2,4,1,,,
122abaa65bbe9bf3f893c3c1a1e31819ff080481,"Bugfix catch and ignore OSErrors when setting up

These would be thrown if a socket disconnected during the setup e.g.
during the address parsing.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-09 09:38:13+01:00,-3600,2019-08-09 09:39:10+01:00,-3600,True,False,['server.py'],['d4bf215305674c3ae0c75a9f9d4d3c73188d16cc'],1,1,2,1,,,
e65378942636a74169d7549f8f84ab9172230661,"Support HTTP/2 prioritisation

This sends data as prioritised by the client using the Hyper priority
library to build and track the priority tree. I've chosen to have a
seperate task consume data from stream buffers and then send the data
as prioritised - this seems to be the simplest way, although it is
harder to reason about.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-08 20:38:11+01:00,-3600,2019-08-09 09:39:10+01:00,-3600,True,False,"['server.py', '__init__.py', 'h11.py', 'h2.py', 'server.py', 'setup.cfg', 'setup.py', 'test_sanity.py', 'test_h2.py', 'test_sanity.py']",['122abaa65bbe9bf3f893c3c1a1e31819ff080481'],80,210,290,10,0.7159090909090909,0.6704545454545454,1.0
614dc12d82c7146aede9463a612d4b0ed8228e2c,"Support the latest wsproto version

This allows the type checking to extend to usage of wsproto.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-10 13:39:09+01:00,-3600,2019-08-10 13:39:09+01:00,-3600,True,False,"['ws_stream.py', 'setup.cfg']",['e65378942636a74169d7549f8f84ab9172230661'],5,2,7,2,,,
7c1f519fe117f3fbcc6a62fcccdae2e8dfe0b61a,"Initially support HTTP/3

This is still a work in progress and hence is not enabled by default,
instead hypercorn will need to be installed with the extra ``h3`` e.g.
``pip install hypercorn[h3]``.

This makes use of the aioquic library as the sans-io library for the
QUIC and HTTP/3 protocols.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-11 17:36:29+01:00,-3600,2019-08-11 17:36:29+01:00,-3600,True,False,"['__main__.py', 'run.py', 'spawn_app.py', 'tcp_server.py', 'udp_server.py', 'config.py', 'events.py', 'h3.py', 'quic.py', 'run.py', 'spawn_app.py', 'tcp_server.py', 'udp_server.py', 'pyproject.toml', 'setup.cfg', 'setup.py', 'test_sanity.py', 'test_tcp_server.py', 'test_h2.py', 'test_sanity.py', 'test_tcp_server.py', 'tox.ini']",['614dc12d82c7146aede9463a612d4b0ed8228e2c'],100,476,576,22,0.3983402489626556,0.7344398340248963,0.6473029045643154
f471b2efa726ba24426d830a77997f481e4f15f9,"Bugfix ensure a closure code is sent with the disconnect

The ASGI specification requires a code with the disconnect
message. The absence was causing errors in ASGI applications.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-13 19:11:07+01:00,-3600,2019-08-13 19:11:07+01:00,-3600,True,False,"['ws_stream.py', 'test_ws_stream.py']",['7c1f519fe117f3fbcc6a62fcccdae2e8dfe0b61a'],3,7,10,2,0.0,0.0,1.0
146e09556ec74eac2a37f31f831a00d3b2e7b780,"Bugfix WinError 10022 Invalid argument

On Windows it seems as if sockets must be explicitly shared to be used
in a different process to the one that created it. This patch does
that using the Windows specific `share` and `fromshare` functionality.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-15 10:01:41+01:00,-3600,2019-08-15 10:01:41+01:00,-3600,True,False,['run.py'],['f471b2efa726ba24426d830a77997f481e4f15f9'],0,20,20,1,0.4,0.4,0.4
f3df2869ac88d336bdaf58ad583201d1f8f361a6,"Bugfix handle logger targets equal to None

This should fully disable the logging (so as to improve performance).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-19 17:01:37+01:00,-3600,2019-08-19 17:01:37+01:00,-3600,True,False,"['logging.py', 'test_logging.py']",['146e09556ec74eac2a37f31f831a00d3b2e7b780'],13,25,38,2,0.0,1.0,0.16666666666666666
9aaff3546aab716a578d55e322f88e4c433ca0c2,"Remove worker class warnings when using serve

It is very clear from the usage of serve what worker is being used, so
this is unlikely to be a source of confusion. Instead it adds annoyance
by printing something that is in fact obvious.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-19 19:43:28+01:00,-3600,2019-08-19 19:43:28+01:00,-3600,True,False,"['__init__.py', '__init__.py']",['f3df2869ac88d336bdaf58ad583201d1f8f361a6'],4,0,4,2,1.0,0.0,0.5
3fce96473c94ae9da98572e81c9cf87515016828,"Explain how to create a config instance in the API docs

This helps new users figure out how to serve an ASGI app.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-19 19:53:10+01:00,-3600,2019-08-19 19:53:10+01:00,-3600,True,False,['api_usage.rst'],['9aaff3546aab716a578d55e322f88e4c433ca0c2'],3,12,15,1,,,
0aa5bf1431e38f5a0dc1b05e9d6cfe1731b32b90,"Add client and server information for HTTP/3 connections

This is part of the ASGI scope requirement and helps make Hypercorn
more useful.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-21 15:57:59+01:00,-3600,2019-08-21 16:23:28+01:00,-3600,True,False,"['udp_server.py', 'h3.py', 'quic.py', 'udp_server.py']",['3fce96473c94ae9da98572e81c9cf87515016828'],18,50,68,4,0.0,0.72,0.0
ad39bb2ad7c5d662b2d5e76e6fb399e7b5cc540f,"Support WebSockets over HTTP/3

It looks as if WebSockets are supported over HTTP/3 in the same manner
as over HTTP/2 which makes this quite a simple change.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-21 16:37:56+01:00,-3600,2019-08-21 16:37:56+01:00,-3600,True,False,['h3.py'],['0aa5bf1431e38f5a0dc1b05e9d6cfe1731b32b90'],14,36,50,1,0.0,1.0,1.0
d515c3bee10a3e95c380cb9a04b77713d6a35821,Use aioquic 0.5.0 for HTTP/3 support,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-08-21 18:53:05+02:00,-7200,2019-08-21 18:53:05+02:00,-7200,True,False,"['h3.py', 'setup.py']",['ad39bb2ad7c5d662b2d5e76e6fb399e7b5cc540f'],2,2,4,2,,,
33a6f1a3847382921ec3d37143145d1bf06ee263,"Add a shutdown_trigger argument to serve functions

This allows the API usage to include an ability to trigger a graceful
shutdown. Without this the only way to shutdown is to cancel the
serving, which is not graceful (and has issues with Trio).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-23 20:56:41+01:00,-3600,2019-08-23 20:56:41+01:00,-3600,True,False,"['api_usage.rst', '__init__.py', 'run.py', '__init__.py', 'run.py', 'utils.py']",['d515c3bee10a3e95c380cb9a04b77713d6a35821'],18,84,102,6,0.0,1.0,0.0
83bd619f28290a7db2e6200406c3177cbca19cd7,"Add some discussion about recent HTTP/2 attacks

Hypercorn (or rather H2) is potentially vulnerable to CVE-2019-9516,
0-Length Headers Leak. Hypercorn is also potentially vulnerable to
CVE-2019-9513, Resource Loop. Both will be investigated further,
however the vulnerabilities released recently and mentioned in this
commit are mitigated against.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-24 12:35:32+01:00,-3600,2019-08-24 12:42:03+01:00,-3600,True,False,['dos_mitigations.rst'],['33a6f1a3847382921ec3d37143145d1bf06ee263'],0,44,44,1,,,
cd4427a03d86f8c34c2bb2eb573176e6a5b48751,"Bugfix don't send empty bytes (eof) to protocols

Closure is handled via explicit Closed events, rather than by passing
EOF markers (b""""). This should solve a bug whereby the h11-connection
is considered closed before the Closed event is received.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-25 11:03:44+01:00,-3600,2019-08-25 11:03:44+01:00,-3600,True,False,"['tcp_server.py', 'tcp_server.py']",['83bd619f28290a7db2e6200406c3177cbca19cd7'],3,3,6,2,,,
72b2ca0718973e8300ce26521ec3d20f5f039022,"Add the ability to change permissions and ownerships of unix sockets

An example of how this is useful is to consider using Hypercorn with
nginx where nginx is configured to use an upstream socket. In this
case nginx is often configured to run as another user, which will not
be able to read the Hypercorn created socket. Hence telling Hypercorn
to change the ownership helps.

Note this contains a usage update for the quic binds (this was missed
previously).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-25 14:12:30+01:00,-3600,2019-08-25 14:14:24+01:00,-3600,True,False,"['binds.rst', 'usage.rst', '__main__.py', 'config.py', 'test_config.py']",['cd4427a03d86f8c34c2bb2eb573176e6a5b48751'],3,48,51,5,0.07142857142857142,0.07142857142857142,1.0
3650bfaac272a419bf3be26daf79fd373fdad450,"Take extra precautions establishing HTTP/3 connection

This catches ValueError exceptions which occur when parsing an invalid
QUIC packet.

It also ensures a connection is only created if the datagram carrying
the INITIAL packet is at least 1200 bytes long, as specified in:

https://tools.ietf.org/html/draft-ietf-quic-transport-22#section-14",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-08-25 16:53:30+02:00,-7200,2019-08-25 16:53:30+02:00,-7200,True,False,['quic.py'],['72b2ca0718973e8300ce26521ec3d20f5f039022'],2,9,11,1,0.0,0.0,1.0
dae98515b6c8c7f990d19a8fda52df7602db6898,"Add HTTP/3 information to the readme

This gives the basic instructions on how to serve HTTP/3.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-25 21:22:40+01:00,-3600,2019-08-25 21:22:40+01:00,-3600,True,False,['README.rst'],['3650bfaac272a419bf3be26daf79fd373fdad450'],0,7,7,1,,,
9d52873c30623073fe2aad7e581b6f1399dc034c,Bump and release 0.8.0,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-26 10:40:53+01:00,-3600,2019-08-26 10:41:10+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['dae98515b6c8c7f990d19a8fda52df7602db6898'],1,23,24,2,,,
d0053e69d9eaccb928e060ed01e168eb08369f96,Following the release of 0.8.0 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-26 10:42:26+01:00,-3600,2019-08-26 10:42:26+01:00,-3600,True,False,['__about__.py'],['9d52873c30623073fe2aad7e581b6f1399dc034c'],1,1,2,1,,,
3fdbebc08d5431fe74470ce2a584db0178a59e4c,"Bugfix make unix socker ownership and mask optional

This alters 72b2ca0718973e8300ce26521ec3d20f5f039022 to make changing
the ownership (and umask) for unix sockets optional in order to
support Windows as the getuid and getgid functions are not available.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-26 13:15:25+01:00,-3600,2019-08-26 13:23:13+01:00,-3600,True,False,['config.py'],['d0053e69d9eaccb928e060ed01e168eb08369f96'],6,9,15,1,0.0,0.0,1.0
d1988d539b9b7ac80c8aea930e76396007cf80bc,Bump and release 0.8.1,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-26 13:59:50+01:00,-3600,2019-08-26 13:59:50+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['3fdbebc08d5431fe74470ce2a584db0178a59e4c'],1,7,8,2,,,
add11719fa4b61a8b0a4c167b2cfa7442877c188,Following the release of 0.8.1 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-26 14:02:34+01:00,-3600,2019-08-26 14:02:34+01:00,-3600,True,False,['__about__.py'],['d1988d539b9b7ac80c8aea930e76396007cf80bc'],1,1,2,1,,,
06ca766de3bab56406905b88e18d69c797d2b236,"Loosen the aioquic requirement

This allows more rapid development of the interaction between aioquic
and Hypercorn at the expense of likely bugs. This is ok though as
HTTP/3 is not production ready yet and is an optional extra.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-29 15:14:52+01:00,-3600,2019-08-29 15:14:52+01:00,-3600,True,False,['setup.py'],['add11719fa4b61a8b0a4c167b2cfa7442877c188'],1,1,2,1,,,
b511cd0e875d2f67cacc36d511183e1752825aab,"Correctly handle HTTP/3 request with no body

This change ensures that hypercorn responds correctly if it receives only a
HEADERS frame with the FIN bit set and no subsequent DATA frames.",Jeremy Lainé,jeremy.laine@m4x.org,pgjones,philip.graham.jones@googlemail.com,2019-08-29 10:01:21+02:00,-7200,2019-08-29 15:17:58+01:00,-3600,True,False,['h3.py'],['06ca766de3bab56406905b88e18d69c797d2b236'],0,2,2,1,1.0,0.0,1.0
6b3bbcc292f68889b9fa3cf0144325a4f9ab6852,"Bugfix correct the alt-svc for HTTP/3

Other reference servers utilise this version.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-29 19:18:16+01:00,-3600,2019-08-29 19:18:16+01:00,-3600,True,False,['config.py'],['b511cd0e875d2f67cacc36d511183e1752825aab'],1,1,2,1,,,
d8fac8072166ae90007e346ea098e28c568cefd0,Bump and release 0.8.2,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-29 20:03:44+01:00,-3600,2019-08-29 20:03:49+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['6b3bbcc292f68889b9fa3cf0144325a4f9ab6852'],1,7,8,2,,,
db9ec5a947ad8538fbbb309d2b3c4c2539e7df25,Following the release of 0.8.2 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-08-29 20:04:21+01:00,-3600,2019-08-29 20:04:21+01:00,-3600,True,False,['__about__.py'],['d8fac8072166ae90007e346ea098e28c568cefd0'],1,1,2,1,,,
b2452e13358588e7a840aa72c2c95150db9e8f02,"Fix TypeError with `--error-logfile`

It was assigning `--error-log`, which typically is the sentinel object
then.",Daniel Hahler,gitlab@thequod.de,pgjones,philip.graham.jones@googlemail.com,2019-09-01 10:48:51+00:00,0,2019-09-01 10:48:51+00:00,0,True,False,['__main__.py'],['db9ec5a947ad8538fbbb309d2b3c4c2539e7df25'],1,1,2,1,,,
0bee779b531b8ae1fac786df1b4aab15ac441753,"tox: use `{posargs}`, pytest: use `testpaths`

This allows for `tox -e py37 -- …` to pass through args to pytest.

pytest: configure `testpaths` to look into `tests/` only.",Daniel Hahler,gitlab@thequod.de,pgjones,philip.graham.jones@googlemail.com,2019-09-01 11:00:07+00:00,0,2019-09-01 11:00:07+00:00,0,True,False,"['setup.cfg', 'tox.ini']",['b2452e13358588e7a840aa72c2c95150db9e8f02'],1,2,3,2,,,
6779f7e5bcc81098210322af71eee8b79bd9f02b,"asyncio: tcp_server: update keep_alive_timeout after handling data

Otherwise the connection is considered to be ""idle"" still, although
`data` contains the request headers already.

This results in hypercorn closing the connection then already after 5s
if the response takes longer than this.",Daniel Hahler,gitlab@thequod.de,pgjones,philip.graham.jones@googlemail.com,2019-09-01 11:44:13+00:00,0,2019-09-01 11:44:13+00:00,0,True,False,['tcp_server.py'],['0bee779b531b8ae1fac786df1b4aab15ac441753'],1,2,3,1,1.0,1.0,1.0
47d47015bfae796c8c5cbc54ba19c16e47334e6d,Complete 6779f7e5bcc81098210322af71eee8b79bd9f02b for Trio workers,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-01 12:45:26+01:00,-3600,2019-09-01 12:45:26+01:00,-3600,True,False,['tcp_server.py'],['6779f7e5bcc81098210322af71eee8b79bd9f02b'],1,2,3,1,1.0,1.0,1.0
304585a3df50bbfb33f04b38aa8e7104b3fa5cc5,"Support HTTP/3 server push

This utilises the new aioquic functionality to server push over
HTTP/3. As with HTTP/2 this should make sites faster to load for the
client.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-04 10:07:34+01:00,-3600,2019-09-04 10:07:34+01:00,-3600,True,False,"['h3.py', 'http_stream.py', 'setup.py']",['47d47015bfae796c8c5cbc54ba19c16e47334e6d'],5,34,39,3,0.0,0.043478260869565216,0.21739130434782608
14d099be2bd6d8f4f7f1e4fdc9c183de76bf150f,"Replace RequestReceived with HeadersReceived in h3

As the former is deprecated for the latter.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-04 10:55:56+01:00,-3600,2019-09-04 10:55:56+01:00,-3600,True,False,['h3.py'],['304585a3df50bbfb33f04b38aa8e7104b3fa5cc5'],4,4,8,1,,,
3bdcd536068f89f743df0157eefcefa0a42baec5,"Filter and reject Pseudo headers

The ASGI specification has recently been updated to disallow pseudo
headers being passed to or received from ASGI applications. This
implements this filtering.

It also implements the creation of a host header from an
``:authority`` header as also specified.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-10 20:38:11+01:00,-3600,2019-09-10 20:38:11+01:00,-3600,True,False,"['h2.py', 'h3.py', 'utils.py', 'test_utils.py']",['14d099be2bd6d8f4f7f1e4fdc9c183de76bf150f'],3,32,35,4,1.0,1.0,1.0
9918dab3f960ccaf4e67e9781dcf98bc83bec353,Test the validation that headers are bytes tuples,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-10 20:39:33+01:00,-3600,2019-09-10 20:40:03+01:00,-3600,True,False,['test_utils.py'],['3bdcd536068f89f743df0157eefcefa0a42baec5'],0,5,5,1,1.0,1.0,1.0
88fdaf5341f7a77958abe32d7fd41c8a1934eca8,"Bugfix ensure keep alive timeout is not active when pipelining

Previously if the h11 protocol entered a read block state it would
prevent the keep alive update in the tcp server and hence could result
in the server timing out (after the keep alive). This fixes that by
updating the tcp server just before the h11 protocol enters the read
blocked state.

This also includes working tests for keep alive over HTTP/1. Note by
standard ``b""""`` is not sent by sockets, hence the change in the
asyncio helpers.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-20 16:37:48+01:00,-3600,2019-09-20 16:40:15+01:00,-3600,True,False,"['h11.py', 'helpers.py', 'test_keep_alive.py', 'test_tcp_server.py', 'test_keep_alive.py', 'test_tcp_server.py']",['9918dab3f960ccaf4e67e9781dcf98bc83bec353'],72,206,278,6,0.20833333333333334,0.5729166666666666,0.5833333333333334
2bdea45cd58103f4adaf1377b3cdf526e464d182,"Bugfix clarify lifespan error messages

If the app handling the lifespan fails before the startup the message
should make it clear there will be no lifespan support. If it fails
after startup but before shutdown it should make it clear only
shutdown failed. Otherwise it should note that the app failed after
shutdown - probably because the application failed to stop/return.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-20 19:35:52+01:00,-3600,2019-09-20 19:38:28+01:00,-3600,True,False,['lifespan.py'],['88fdaf5341f7a77958abe32d7fd41c8a1934eca8'],3,8,11,1,0.0,1.0,1.0
836540ac4ce099ecedd7c99e5d18a92652962e55,"Bugfix remove signal handling from worker_serve

The worker_serve function is meant to be used in an environment
whereby the caller sets the event loop, workers and signal
handling. Without this the API cannot be used on a subthread (as
adding the signal handlers raises an error).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-20 20:35:44+01:00,-3600,2019-09-20 20:35:44+01:00,-3600,True,False,['run.py'],['2bdea45cd58103f4adaf1377b3cdf526e464d182'],34,40,74,1,0.0,1.0,0.0
ffd7d69761e9d2143a6d4ae3ad2abfcf808ebfd2,"Add missing test requirements

This allows the following to work

    pip install -e '.[tests]'
    pytest",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-20 20:43:12+01:00,-3600,2019-09-20 20:43:12+01:00,-3600,True,False,['setup.py'],['836540ac4ce099ecedd7c99e5d18a92652962e55'],1,3,4,1,,,
dfb2c6db96bac005ab3d1a9fcd25ea468fd7e1a1,Fix formatting error introduced in ffd7d69761e9d2143a6d4ae3ad2abfcf808ebfd2,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-20 20:54:57+01:00,-3600,2019-09-20 20:55:10+01:00,-3600,True,False,['setup.py'],['ffd7d69761e9d2143a6d4ae3ad2abfcf808ebfd2'],1,7,8,1,,,
e12dbebbd9d338a6daab21338ed63448c4f15a14,"Update h3 Alt-Svc header

This version should be recognised by Chrome.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-22 21:21:21+01:00,-3600,2019-09-22 21:21:21+01:00,-3600,True,False,['config.py'],['dfb2c6db96bac005ab3d1a9fcd25ea468fd7e1a1'],1,1,2,1,,,
bab0d3c6390f0840db9050cdb6bbdb6797640168,"Bugfix remove run_forever usage in worker_serve

This fixes an error introduced in
836540ac4ce099ecedd7c99e5d18a92652962e55. The issue was that in the
case whereby serve was used in an event loop without a shutdown
trigger it would try to call the run_forever, which would fail as the
loop was already running. To solve this it instead awaits a Future (as
the shutdown trigger) which never completes (it is never set).

The Future 'hack' is required as Hypercorn can't await the TCP servers
as it may only be serving UDP which doesn't have a serve_forever
equivalent.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-23 10:03:36+01:00,-3600,2019-09-23 10:03:36+01:00,-3600,True,False,['run.py'],['e12dbebbd9d338a6daab21338ed63448c4f15a14'],11,9,20,1,1.0,1.0,1.0
172b55838f168b1776fb17c5c6e36be8a167e598,Use QuicConfiguration.load_cert_chain for h3,Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2019-09-24 11:37:02+02:00,-7200,2019-09-24 11:37:02+02:00,-7200,True,False,"['quic.py', 'setup.py']",['bab0d3c6390f0840db9050cdb6bbdb6797640168'],18,3,21,2,1.0,0.0,1.0
71fa0946a57a6edc0050943ff29ed390d0a6aed5,"Fix the HTTP/3 draft version usage

It is now 23, as advertised in the Alt-Svc.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-25 10:07:19+01:00,-3600,2019-09-25 10:07:19+01:00,-3600,True,False,['quic.py'],['172b55838f168b1776fb17c5c6e36be8a167e598'],1,1,2,1,,,
010a399cff85d5b3ed0ad796aba9c17c86ebfa90,"Stop advertising h3 in the ALPN protocols

As it cannot be served over TCP.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-25 10:07:27+01:00,-3600,2019-09-25 10:07:27+01:00,-3600,True,False,['config.py'],['71fa0946a57a6edc0050943ff29ed390d0a6aed5'],1,1,2,1,,,
ab41618a6fdbcb9f36899c1fff9be2d23c620179,Bump and release 0.8.3,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-26 09:27:42+01:00,-3600,2019-09-26 09:27:42+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['010a399cff85d5b3ed0ad796aba9c17c86ebfa90'],1,17,18,2,,,
3602e279527653a38982e6f3a33e2631f18b4f9a,Following the release of 0.8.3 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-26 09:29:54+01:00,-3600,2019-09-26 09:29:54+01:00,-3600,True,False,['__about__.py'],['ab41618a6fdbcb9f36899c1fff9be2d23c620179'],1,1,2,1,,,
e9b43f58d7bc900be8ed7e2d1a13652663a6544b,"Bugfix server push pseudo headers

As 3bdcd536068f89f743df0157eefcefa0a42baec5 removed the pseudo headers
the HTTPStream can no longer use them when preparing the server push,
hence the need to use the host header (as guaranteed by the referenced
commit) and the scope scheme.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-26 11:28:33+01:00,-3600,2019-09-26 11:32:11+01:00,-3600,True,False,"['http_stream.py', 'test_http_stream.py']",['3602e279527653a38982e6f3a33e2631f18b4f9a'],3,21,24,2,1.0,1.0,1.0
6f04e6353a34ff24207c03f01ac5b8b19c0fb83b,Bump and release 0.8.4,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-26 11:33:29+01:00,-3600,2019-09-26 11:33:29+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['e9b43f58d7bc900be8ed7e2d1a13652663a6544b'],1,7,8,2,,,
46d9fea9a455d1c61e95d20f688660b37e78ce3f,Following the release of 0.8.4 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-09-26 11:33:52+01:00,-3600,2019-09-26 11:33:52+01:00,-3600,True,False,['__about__.py'],['6f04e6353a34ff24207c03f01ac5b8b19c0fb83b'],1,1,2,1,,,
2dcf0e573c3830bca5d281973a8592f34b8991d1,"Switch log format to be the same as Gunicorn's

This is also the common log format (with referrer and user agent
appended to the end).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-10-04 18:00:14+01:00,-3600,2019-10-04 18:00:14+01:00,-3600,True,False,['config.py'],['46d9fea9a455d1c61e95d20f688660b37e78ce3f'],1,1,2,1,,,
2d9e0bbb7bf0963b6384cecf62154963427aba3d,"Support logging configuration setup

This follows the Gunicorn configuration naming, and allows users to
specify the logging configuration either completely or by overriding
the defaults included.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-10-04 19:39:38+01:00,-3600,2019-10-04 19:41:14+01:00,-3600,True,False,"['usage.rst', '__main__.py', 'config.py', 'logging.py']",['2dcf0e573c3830bca5d281973a8592f34b8991d1'],0,62,62,4,0.0,0.6875,1.0
f116f69eb1184ca47243044d85e633334d3d5cd2,"Fix mypy issues

The latest version correct the reported lines for errors.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-10-04 19:54:36+01:00,-3600,2019-10-04 19:54:36+01:00,-3600,True,False,"['logging.py', 'test_keep_alive.py', 'test_sanity.py', 'test_tcp_server.py']",['2d9e0bbb7bf0963b6384cecf62154963427aba3d'],14,22,36,4,0.0,0.5,1.0
c8515f9160f413e9126764922e21e39f4f579a71,"Add dispatcher middleware

This allows for multiple applications to be served based on the root
path that matches the mount.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-10-04 23:38:13+01:00,-3600,2019-10-04 23:38:13+01:00,-3600,True,False,"['dispatch_apps.rst', 'index.rst', 'middleware.py', 'test_middleware.py']",['f116f69eb1184ca47243044d85e633334d3d5cd2'],2,96,98,4,0.5909090909090909,1.0,0.5681818181818182
e3ffc31015dfaf2fe3aa644229ade5eb12a795d4,"Allow the Alt-Svc headers to be configured

If specified the configured Alt-Svc headers are used in preference to
auto generated ones. This allows for port remapping whereby Hypercorn
is not aware that the service is exposed on a different port to the
one Hypercorn is serving on.

This is a provisional API, I expect for a better version to become
apparent in time.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-10-09 15:31:12+01:00,-3600,2019-10-09 15:31:12+01:00,-3600,True,False,['config.py'],['c8515f9160f413e9126764922e21e39f4f579a71'],3,8,11,1,1.0,1.0,1.0
6bee5afe5718931e2a2b230d60ca7c5a0cc18096,"Update development status classifier to Beta

These don't mean much to me, but Alpha is misleading at this stage of
development.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-10-09 16:12:52+01:00,-3600,2019-10-09 16:12:52+01:00,-3600,True,False,['setup.py'],['e3ffc31015dfaf2fe3aa644229ade5eb12a795d4'],1,1,2,1,,,
271712f8b0f943eb592f79339474a992dbad4d33,Bump and release 0.9.0,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-10-09 16:15:49+01:00,-3600,2019-10-09 16:15:49+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['6bee5afe5718931e2a2b230d60ca7c5a0cc18096'],1,12,13,2,,,
eff35830f0abc1a450e2c47f4cd81e2fd913a0c2,Following the release of 0.9.0 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-10-09 16:16:20+01:00,-3600,2019-10-09 16:16:20+01:00,-3600,True,False,['__about__.py'],['271712f8b0f943eb592f79339474a992dbad4d33'],1,1,2,1,,,
a8ba7f62dd8f1a937ecf1ca3e5486e7d64df3e54,"Bugfix catch NotImplementedError alongside AttributeError

In Python 3.8 the former error is raised rather than the latter on
Windows.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-10-12 18:39:42+01:00,-3600,2019-10-12 18:39:42+01:00,-3600,True,False,['run.py'],['eff35830f0abc1a450e2c47f4cd81e2fd913a0c2'],1,1,2,1,,,
932b5aaa7ba77409373499d34900be4e90497689,"Allow the access log atoms to be customised

This follows the Gunicorn API by adding an atoms method that returns
the atoms mapping. This will allow a custom logger to return its own
custom atom mapping.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-10-25 10:34:18+01:00,-3600,2019-10-25 10:34:18+01:00,-3600,True,False,['logging.py'],['a8ba7f62dd8f1a937ecf1ca3e5486e7d64df3e54'],2,10,12,1,1.0,1.0,0.0
39511801b66fc732b5e91cc210aa5066a6e1adea,Fix mypy upgrade issues,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-10-25 10:49:22+01:00,-3600,2019-10-25 10:49:22+01:00,-3600,True,False,"['__main__.py', 'config.py']",['932b5aaa7ba77409373499d34900be4e90497689'],3,3,6,2,,,
cd265280c13798bef524f83646776b366bed04f3,"Support Python 3.8

Now that Python 3.8 has been released.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2019-10-25 18:37:32+01:00,-3600,2019-10-25 18:38:26+01:00,-3600,True,False,"['.gitlab-ci.yml', 'setup.py', 'tox.ini']",['39511801b66fc732b5e91cc210aa5066a6e1adea'],2,9,11,3,,,
bb4fe0ef0ba9619d8073e8767c291cece7d3d166,"Add basic statsd documentation

This indicates the basics for how to use it, hopefully allowing people
to start and report back. This basically follows Gunicorn.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-01-16 22:51:29+00:00,0,2020-01-16 22:57:42+00:00,0,True,False,"['index.rst', 'statsd.rst']",['cd265280c13798bef524f83646776b366bed04f3'],0,35,35,2,,,
277eac7ea00fc80153df08e08bda52ac013404c5,Update formatting following black upgrade,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-01-17 10:25:53+00:00,0,2020-01-17 10:25:53+00:00,0,True,False,['test_keep_alive.py'],['bb4fe0ef0ba9619d8073e8767c291cece7d3d166'],5,5,10,1,,,
7da4c8e2542d702f9df11a5c8960d1181e079fb5,Add scope check in  DispatcherMiddleware,David Hirschfeld,david.hirschfeld@stanwell.com,pgjones,philip.graham.jones@googlemail.com,2020-01-02 09:34:22+10:00,-36000,2020-01-17 10:30:17+00:00,0,True,False,"['middleware.py', 'test_middleware.py']",['277eac7ea00fc80153df08e08bda52ac013404c5'],4,7,11,2,0.6666666666666666,1.0,0.3333333333333333
6f243df889ff008bf8a8175010b660d92892669c,"Move source to the src directory

This is to ensure that the setup works correctly, and follows a trend
in the Python community of moving code to within a src directory -
particularly as Quart has done so.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-01-17 10:44:30+00:00,0,2020-01-17 10:44:30+00:00,0,True,False,"['MANIFEST.in', 'setup.py', '__about__.py', '__init__.py', '__main__.py', '__init__.py', 'lifespan.py', 'run.py', 'spawn_app.py', 'statsd.py', 'tcp_server.py', 'udp_server.py', 'config.py', 'events.py', 'logging.py', 'middleware.py', '__init__.py', 'events.py', 'h11.py', 'h2.py', 'h3.py', 'http_stream.py', 'quic.py', 'ws_stream.py', 'py.typed', 'run.py', 'statsd.py', '__init__.py', 'lifespan.py', 'run.py', 'spawn_app.py', 'statsd.py', 'tcp_server.py', 'udp_server.py', 'typing.py', 'utils.py', 'tox.ini']",['7da4c8e2542d702f9df11a5c8960d1181e079fb5'],8,9,17,37,,,
398510392f08ee74b51340c9b4c9df28295138f3,"Fix CI following src move

This was missed in 6f243df889ff008bf8a8175010b660d92892669c",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-01-17 10:51:40+00:00,0,2020-01-17 10:51:40+00:00,0,True,False,['.gitlab-ci.yml'],['6f243df889ff008bf8a8175010b660d92892669c'],1,1,2,1,,,
0e8b1a02c8e1ddb31d163443b29e8ae52312f1c9,"Utilise the H3_ALPN constant

This ensures that the latest version (supported by the installed
aioquic library) is always used.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-02-02 13:30:08+00:00,0,2020-02-02 13:30:08+00:00,0,True,False,"['config.py', 'quic.py']",['398510392f08ee74b51340c9b4c9df28295138f3'],3,7,10,2,1.0,0.0,1.0
00dc9f8c19454df4dc0f836237cc1270b95536ef,"Update gitlab badge

At some point it seems to have changed from build to pipeline.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-02-20 20:39:38+00:00,0,2020-02-20 20:39:38+00:00,0,True,False,['README.rst'],['0e8b1a02c8e1ddb31d163443b29e8ae52312f1c9'],1,1,2,1,,,
6a6388e3635a3657041a2564b0d74d49eb136224,"Bugfix H3_ALPN constant usage

This fixes 0e8b1a02c8e1ddb31d163443b29e8ae52312f1c9 to use the updated
specification,
https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Alt-Svc,
that each protocol should have its own header.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-02-24 18:41:52+00:00,0,2020-02-24 18:41:52+00:00,0,True,False,['config.py'],['00dc9f8c19454df4dc0f836237cc1270b95536ef'],4,4,8,1,,,
0880aeb52ba00df3bbe3896497864bfc105881ac,Bump and release 0.9.1,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-02-24 18:45:55+00:00,0,2020-02-24 18:45:55+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['6a6388e3635a3657041a2564b0d74d49eb136224'],1,13,14,2,,,
4e6a6076c7942f0d7aa8930b760e4d0e0a547eb1,Following the release of 0.9.1 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-02-24 18:46:24+00:00,0,2020-02-24 18:46:24+00:00,0,True,False,['__about__.py'],['0880aeb52ba00df3bbe3896497864bfc105881ac'],1,1,2,1,,,
41c30e25b420bdb1630285964557adf7ef32fa60,"Bugfix HTTP/1 connection recycling

If a subsequent request on a kept alive connection is received before
the http stream indicates it has closed i.e. between the stream
sending EndBody and StreamClosed the h11 protocol would recycle after
receiving the subsequent request. This meant that the request would
not be handled, the connection would stall and then timeout.

This is mostly seen in benchmarking (as the requests have to sent in
quick succession), although there are bug reports for production
issues.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-02-29 13:08:49+00:00,0,2020-02-29 13:08:49+00:00,0,True,False,"['h11.py', 'test_h11.py']",['4e6a6076c7942f0d7aa8930b760e4d0e0a547eb1'],0,14,14,2,0.0,1.0,1.0
992f7b9893c5c1c560dfeecff455f0f16e1bcf89,"Bugfix trio syntax error

The filter method is a class method, rather than an instance method.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-02-29 14:19:50+00:00,0,2020-02-29 14:19:50+00:00,0,True,False,['spawn_app.py'],['41c30e25b420bdb1630285964557adf7ef32fa60'],1,3,4,1,0.0,0.0,0.0
2397db2c904564c940adee0770ccd50b02831d2f,"Bugfix catch NotADirectoryError alongside FileNotFoundError

This should prevent Hypercorn crashing if it tries to stat a file that
is within a path that is not a directory, e.g. an egg binary file.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-02-29 14:23:55+00:00,0,2020-02-29 14:23:55+00:00,0,True,False,['utils.py'],['992f7b9893c5c1c560dfeecff455f0f16e1bcf89'],1,1,2,1,,,
42c2f6f5c9534f4a8912614a8a19a6317ee01a26,"Bugfix support multiple workers on Windows for Python 3.8

The proactor event loop is the default in Python >= 3.8 and sadly
errors with WinError87,

    Traceback (most recent call last):
      File ""Python38\lib\asyncio\proactor_events.py"", line 817, in loop
        f = self._proactor.accept(sock)
      File ""Python38\lib\asyncio\windows_events.py"", line 545, in accept
        self._register_with_iocp(listener)
      File ""Python38\lib\asyncio\windows_events.py"", line 714, in _register_with_iocp
        _overlapped.CreateIoCompletionPort(obj.fileno(), self._iocp, 0, 0)
    OSError: [WinError 87] The parameter is incorrect

I don't understand why (nor how to fix), but reverting to the Selector
event loop policy fixes the issue.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-02-29 20:45:36+00:00,0,2020-02-29 20:45:36+00:00,0,True,False,['run.py'],['2397db2c904564c940adee0770ccd50b02831d2f'],0,3,3,1,1.0,1.0,0.0
59aaa5d8d07f317c5b7ddfea1ee14f35732baf33,Fix linting following 6f243df889ff008bf8a8175010b660d92892669c,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-02-29 20:47:52+00:00,0,2020-02-29 20:47:52+00:00,0,True,False,['tox.ini'],['42c2f6f5c9534f4a8912614a8a19a6317ee01a26'],1,1,2,1,,,
f164a8c48aecf18a87d8edc50c44d5dd890bf212,Bump and release 0.9.2,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-02-29 20:56:53+00:00,0,2020-02-29 20:56:53+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['59aaa5d8d07f317c5b7ddfea1ee14f35732baf33'],1,10,11,2,,,
b062659a476e7508e8c4ea5cb329a13b0e24074b,Following the release of 0.9.2 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-02-29 20:57:21+00:00,0,2020-02-29 20:57:21+00:00,0,True,False,['__about__.py'],['f164a8c48aecf18a87d8edc50c44d5dd890bf212'],1,1,2,1,,,
4b614d837842b935f3917ab3f27dc4ec070d8379,"Fix trio with multiple workers

The `shutdown_trigger` argument of `worker_serve` needs to be a callable returning an awaitable, not an awaitable directly.",Michael Elsdörfer,michael@elsdoerfer.com,GitHub,noreply@github.com,2020-03-02 16:18:00+00:00,0,2020-03-02 16:18:00+00:00,0,True,False,['run.py'],['b062659a476e7508e8c4ea5cb329a13b0e24074b'],1,1,2,1,,,
1e350e4fd5b22257227e06d03d134b9681a4c404,"Bugfix unblock sending when the connection closes

This allows the send_task to unblock and exit when the connection
closes. This should prevent these warnings,

    Task was destroyed but it is pending!
    task: <Task pending coro=<ProtocolWrapper.send_task() done, defined at hypercorn/protocol/__init__.py:58> wait_for=<Future pending cb=[<TaskWakeupMethWrapper object at 0x7f08fc3db1d0>()]>>",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-03 10:21:55+00:00,0,2020-03-03 10:23:34+00:00,0,True,False,['h2.py'],['4b614d837842b935f3917ab3f27dc4ec070d8379'],0,1,1,1,1.0,1.0,1.0
45b1d754256c986a45f590edcd193a938cccf4a1,"Switch from the solar theme to the PyData bootstrap theme

As the latter is responsive, much cleaner, and much more pleasant to
read. It is also under active development whereas solar seems to be
unmaintained.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-10 21:18:12+00:00,0,2020-03-10 21:18:33+00:00,0,True,False,"['.gitignore', '.gitlab-ci.yml', 'hypercorn.css', 'sidebar.html', 'source.html', 'conf.py', 'backpressure.rst', 'closing.rst', 'design_choices.rst', 'dos_mitigations.rst', 'http2.rst', 'index.rst', 'workers.rst', 'api_usage.rst', 'binds.rst', 'dispatch_apps.rst', 'http_https_redirect.rst', 'index.rst', 'logging.rst', 'statsd.rst', 'index.rst', 'api.rst', 'index.rst', 'index.rst', 'installation.rst', 'quickstart.rst', 'usage.rst', 'tox.ini']",['1e350e4fd5b22257227e06d03d134b9681a4c404'],74,68,142,28,,,
4f3cb156f4b578495bdc24f47ce44df2d74ebc70,"Bugfix Trio HTTP/1 keep alive handling

This Partially reverts 13bbb7faeebed7462449d751b0e198079c120755

This was breaking keep alive handling with Trio (where a different
race condition is possible).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-19 21:36:49+00:00,0,2020-03-19 21:50:30+00:00,0,True,False,"['h11.py', 'test_h11.py']",['45b1d754256c986a45f590edcd193a938cccf4a1'],3,9,12,2,1.0,1.0,1.0
aa52319e648585ba2388e906593edee4b1fb5ed1,"Bugfix catch TimeoutError

The underlying socket can also raise a TimeoutError which should be
caught and handled as if the socket had closed.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-19 21:49:38+00:00,0,2020-03-19 21:50:52+00:00,0,True,False,['tcp_server.py'],['4f3cb156f4b578495bdc24f47ce44df2d74ebc70'],1,1,2,1,,,
eaa2f9631339eb376a38f913f551cd4babe5ca57,"Update pandas-sphinx-theme to pydata-sphinx-theme

As the theme has renamed",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-20 10:27:19+00:00,0,2020-03-20 10:27:19+00:00,0,True,False,"['.gitlab-ci.yml', 'conf.py', 'tox.ini']",['aa52319e648585ba2388e906593edee4b1fb5ed1'],3,3,6,3,,,
d9214214701df939f8831ad3fa623c53ad45a007,"Correct min Python version on ""Installation"" page",jarhill0,git@reeshill.net,jarhill0,git@reeshill.net,2020-03-20 10:51:31-07:00,25200,2020-03-20 10:51:31-07:00,25200,True,False,['installation.rst'],['eaa2f9631339eb376a38f913f551cd4babe5ca57'],1,1,2,1,,,
de3961214d5d5b44b6fa8ed6711bc86ae720c54c,"Pin pytest < 5.4 until pytest-sugar is fixed

See https://github.com/Teemu/pytest-sugar/issues/187.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-20 20:49:07+00:00,0,2020-03-20 20:58:48+00:00,0,True,False,['tox.ini'],['d9214214701df939f8831ad3fa623c53ad45a007'],1,1,2,1,,,
b23a5ffb837ce21362fd39772aba7774a78bed51,"Bugfix cope with quick disconnection

This copes with disconnection when the handler tries to read the
peername i.e. Errno 107 Socket not connected. The try/except
arrangement follows the trio version.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-20 20:49:28+00:00,0,2020-03-20 20:58:48+00:00,0,True,False,['tcp_server.py'],['de3961214d5d5b44b6fa8ed6711bc86ae720c54c'],24,29,53,1,0.0,1.0,1.0
ac07919034295dfbb0429209dbaff62fa7cdb269,"Bugfix HTTP->HTTPS redirect middleware path encoding

The path is percent decoded, which makes it unsuitable to be sent back
to the client as a request target. Instead the raw path should be
used.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-23 12:26:40+00:00,0,2020-03-23 12:34:29+00:00,0,True,False,"['middleware.py', 'test_middleware.py']",['b23a5ffb837ce21362fd39772aba7774a78bed51'],10,18,28,2,1.0,1.0,0.0
f9798c6cb8ee824e69977475cbc96ebf587d754e,"Bugfix catch ConnectionRefusedError and OSError when reading

These are further exception variants when the client has disconnected,
this now triggers a connection close.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-23 13:16:51+00:00,0,2020-03-23 13:18:54+00:00,0,True,False,['tcp_server.py'],['ac07919034295dfbb0429209dbaff62fa7cdb269'],1,7,8,1,0.0,1.0,1.0
d7757f19ce381a7f0ab974c33b0e539dc8ebe12c,"Bugfix Ensure there is only a single timeout

This ensures the timeout update is atomic in that only one task can
delete and then create a timeout at a time. This should prevent race
conditions whereby a timeout isn't cancelled when it should be, and
when multiple timeouts occur.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-23 17:05:30+00:00,0,2020-03-23 17:05:30+00:00,0,True,False,"['tcp_server.py', 'tcp_server.py']",['f9798c6cb8ee824e69977475cbc96ebf587d754e'],19,23,42,2,0.0,1.0,0.5
c6dcf63fd948def0c2fdd76c5374828eaef8748c,"Bugfix ensure the send_task completes on timeout

It is important that the tasks spawned when a connection is
established complete. This wouldn't happen previously as the send_task
would continue, eventually leading to a,

     Task was destroyed but it is pending!

message.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-23 17:32:57+00:00,0,2020-03-23 17:32:57+00:00,0,True,False,"['tcp_server.py', 'h2.py', 'tcp_server.py']",['d7757f19ce381a7f0ab974c33b0e539dc8ebe12c'],5,19,24,3,1.0,1.0,1.0
289669a4fe2d397c012f91fbd62d2fed46ee8c50,"Bugfix trio has deprecated event.clear

As per

   TrioDeprecationWarning: trio.Event.clear is deprecated since Trio
   0.12.0; use multiple Event objects or other synchronization
   primitives instead",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-23 17:42:31+00:00,0,2020-03-23 17:42:31+00:00,0,True,False,['tcp_server.py'],['c6dcf63fd948def0c2fdd76c5374828eaef8748c'],1,1,2,1,,,
c0e45a5c1c61e7f3f698d770492a04b51e2b01bc,Bump and release 0.9.3,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-23 19:23:31+00:00,0,2020-03-23 19:23:31+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['289669a4fe2d397c012f91fbd62d2fed46ee8c50'],1,15,16,2,,,
3e57b7d33cef09eb51122158a75c34e9a7a8fb4c,Following the release of 0.9.3 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-23 19:35:59+00:00,0,2020-03-23 19:35:59+00:00,0,True,False,['__about__.py'],['c0e45a5c1c61e7f3f698d770492a04b51e2b01bc'],1,1,2,1,,,
2700a5a84a6dcb0d4154ec6b1bf95e9905a4399a,"Bugfix AssertionError when draining

There can only be a single task waiting on the drain otherwise this
line raises an AssertionError

    assert waiter is None or waiter.cancelled()

the fix is to follow the trio TCP server and introduce a send lock.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-31 12:19:18+01:00,-3600,2020-03-31 12:19:18+01:00,-3600,True,False,['tcp_server.py'],['3e57b7d33cef09eb51122158a75c34e9a7a8fb4c'],5,7,12,1,0.5,1.0,0.5
ab22c5c144257102c7a867ecbe6a03d2ee62cf85,"Bugfix catch the correct timeout error

This fixes aa52319e648585ba2388e906593edee4b1fb5ed1",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-31 12:38:23+01:00,-3600,2020-03-31 12:38:23+01:00,-3600,True,False,['tcp_server.py'],['2700a5a84a6dcb0d4154ec6b1bf95e9905a4399a'],1,1,2,1,,,
2579388e8a2375e4974a0375be53873c3c243d40,Bump and release 0.9.4,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-31 15:32:33+01:00,-3600,2020-03-31 15:32:33+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['ab22c5c144257102c7a867ecbe6a03d2ee62cf85'],1,7,8,2,,,
297bc774153d576b8ddbac039292c2a06b10ae74,Following the release of 0.9.4 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-03-31 15:32:57+01:00,-3600,2020-03-31 15:32:57+01:00,-3600,True,False,['__about__.py'],['2579388e8a2375e4974a0375be53873c3c243d40'],1,1,2,1,,,
c5827469b0b11efb26d5c288bd1944bf81e2b928,"Bugfix also catch RuntimeError for uvloop workers

Trying to call write_eof on a closed uvloop stream will result in a
RuntimeError. As this was not caught it would crash the shutdown,
rather than being ignored (as per the other errors).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-04-11 12:56:25+01:00,-3600,2020-04-11 12:56:25+01:00,-3600,True,False,['tcp_server.py'],['297bc774153d576b8ddbac039292c2a06b10ae74'],1,1,2,1,,,
7fc168c7c86854a28c6e6879ad50467e9c392871,corrected handling of verify-flag argument and improved error message on bad values,James Watson,James.Watson@independenthealth.com,pgjones,philip.graham.jones@googlemail.com,2020-04-11 12:33:02-04:00,14400,2020-04-13 09:43:00+01:00,-3600,True,False,['__main__.py'],['c5827469b0b11efb26d5c288bd1944bf81e2b928'],1,3,4,1,0.0,0.0,1.0
f092554447c0e811841a258b45856f467d8830d9,"Bugfix correctly cope with TCP half closes via asyncio

This introduces a simple version of the trio nursery to manage the
tasks spawned in the TCP server - this makes it much easier to reason
about and understand. It is slightly based on CoroExecutor.

The issue is that a half close (client sends `b""""`) would cause the
server to close before it had finished responding i.e. the app task
should be awaited. The task group now ensures that the task finishes
before allowing the group with block to exit and the server to close.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-04-15 12:18:39+01:00,-3600,2020-04-15 12:18:39+01:00,-3600,True,False,"['spawn_app.py', 'task_group.py', 'tcp_server.py', 'helpers.py', 'test_keep_alive.py', 'test_tcp_server.py', 'test_middleware.py']",['7fc168c7c86854a28c6e6879ad50467e9c392871'],32,83,115,7,0.9714285714285714,1.0,0.7714285714285715
1c0b5fa291d4da1e796a4b6c85700264bdbab014,"Fix testing usage of `b""""`

This follows the clarification in
https://github.com/python-hyper/h11/issues/100 that the empty
bytestring should not be sent unless it is an explicit close.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-04-16 10:04:10+01:00,-3600,2020-04-16 10:04:10+01:00,-3600,True,False,"['closing.rst', 'helpers.py', 'test_keep_alive.py', 'test_tcp_server.py']",['f092554447c0e811841a258b45856f467d8830d9'],5,11,16,4,1.0,1.0,1.0
e755bde0f34d6fe27e0d0ef9c541a7946562730a,"Bugfix handle MissingStreamError and KeyError

Both are potentially raised if the stream (application) tries to send
events after the connection has closed. As this is a valid occurance
the h2 protocol should just return, rather than error.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-04-19 19:14:19+01:00,-3600,2020-04-19 19:14:19+01:00,-3600,True,False,['h2.py'],['1c0b5fa291d4da1e796a4b6c85700264bdbab014'],1,1,2,1,,,
540b10b70e3495587534bb61f3ae13352688db41,Bump and release 0.9.5,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-04-19 19:19:18+01:00,-3600,2020-04-19 19:20:20+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['e755bde0f34d6fe27e0d0ef9c541a7946562730a'],1,10,11,2,,,
fe12c0ae9ea89058e3e06eaf0992331a766609bc,Following the release of 0.9.5 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-04-19 19:19:40+01:00,-3600,2020-04-19 19:20:26+01:00,-3600,True,False,['__about__.py'],['540b10b70e3495587534bb61f3ae13352688db41'],1,1,2,1,,,
f9b417b6e318b13a750d7b48ff217fd65c3d4c92,"Bugfix spawn_app usage

f092554447c0e811841a258b45856f467d8830d9 introduced a mandatory task
group argument that wasn't added to the UDP server.

This isn't the ideal usage as it doesn't use the TaskGroup's cleanup,
however this is equivalent to the previous working functionality.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-05-27 20:00:14+01:00,-3600,2020-05-27 20:10:31+01:00,-3600,True,False,['udp_server.py'],['fe12c0ae9ea89058e3e06eaf0992331a766609bc'],1,3,4,1,1.0,1.0,1.0
d5c3a0d357e91b93cc5a0b2b154bdde3b6b74690,"Upin pytest

It seems to work now",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-05-27 20:36:48+01:00,-3600,2020-05-27 20:36:48+01:00,-3600,True,False,['tox.ini'],['f9b417b6e318b13a750d7b48ff217fd65c3d4c92'],1,1,2,1,,,
5c0b8160ac0f28ac13d4e0e3235fd936fc24267b,"Bugfix f9b417b6e318b13a750d7b48ff217fd65c3d4c92

The loop argument should also have been removed.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-05-27 20:37:11+01:00,-3600,2020-05-27 20:37:11+01:00,-3600,True,False,['udp_server.py'],['d5c3a0d357e91b93cc5a0b2b154bdde3b6b74690'],1,1,2,1,,,
8b29cb1d67f56c76622b34411a3435a9967550e8,"Update HTTP/3 code for aioquic >= 0.9.0

The QuicConnection constructor now needs to be passed the Original
Destination Connection ID when acting as a server.

Updating aioquic gives us compatibility with the latest QUIC draft
(draft-28).",Jeremy Lainé,jeremy.laine@m4x.org,Jeremy Lainé,jeremy.laine@m4x.org,2020-05-27 21:22:52+02:00,-7200,2020-05-27 21:38:40+02:00,-7200,True,False,"['setup.py', 'quic.py']",['5c0b8160ac0f28ac13d4e0e3235fd936fc24267b'],2,3,5,2,0.0,0.0,1.0
62b1faf9b040e7d20e9d53cfc96eaaa92f3086e1,"Add some docs on the loop's exception handler

This will help users understand how to ignore SSLErrors if they use
the API.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-05-31 13:04:43+01:00,-3600,2020-05-31 13:04:43+01:00,-3600,True,False,['api_usage.rst'],['8b29cb1d67f56c76622b34411a3435a9967550e8'],0,21,21,1,,,
6f300157d655f26784d289a4a3821f3afd421ba0,"Bugfix don't error if send to a h11 errored client

If the client is in a errored state after the request line, for
example from sending body beyond what the request headers indicated,
the asgi app will try to respond to a client in a error state. This
would previously have errored, now the error is ignore and the
connection dropped as normal.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-05-31 13:50:45+01:00,-3600,2020-05-31 13:50:45+01:00,-3600,True,False,"['h11.py', 'test_h11.py']",['62b1faf9b040e7d20e9d53cfc96eaaa92f3086e1'],2,18,20,2,1.0,1.0,1.0
414fbb80c0f4ddffdafa27fbb22217ea2e5cc2fa,Correct the docs access log format default,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-05-31 13:55:33+01:00,-3600,2020-05-31 13:55:33+01:00,-3600,True,False,['logging.rst'],['6f300157d655f26784d289a4a3821f3afd421ba0'],3,3,6,1,,,
2be7acdb7014055ff97c79d117ad7bccc9881a61,"Bugfix handle SIGINT/SIGTERM on Windows

This follows Uvicorn and a suggestion from @selimb to ensure that the
signal handlers are present on Windows where the loop
add_signal_handler isn't implemented.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-05-31 14:08:29+01:00,-3600,2020-05-31 14:08:29+01:00,-3600,True,False,['run.py'],['414fbb80c0f4ddffdafa27fbb22217ea2e5cc2fa'],5,6,11,1,,0.0,
7caaadba5869983d8d391b09563a52042ef418b2,"Improve the reloader efficiency

This is based on @blueyed work in !28.

Extracting the module paths is fairly expensive, as is yielding after
every check. This pre-extracts the paths and yields every 10 checks
improving the efficiency of the reloader. In local tests CPU usage
drops by a factor of at least 5.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-05-31 17:14:03+01:00,-3600,2020-05-31 17:14:03+01:00,-3600,True,False,['utils.py'],['2be7acdb7014055ff97c79d117ad7bccc9881a61'],13,25,38,1,0.0,0.0,1.0
80e2ad5db107c42d42471ea64764d2b42202349c,"Update testing

Switch from asynctest to the stdlib (with a backport as AsyncMock was
introduced in 3.8) and update the base python versions to 3.8.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-05-31 18:53:02+01:00,-3600,2020-05-31 18:53:02+01:00,-3600,True,False,"['.gitlab-ci.yml', 'setup.cfg', 'setup.py', 'test_h11.py', 'test_h2.py', 'test_http_stream.py', 'test_ws_stream.py', 'test_sanity.py', 'tox.ini']",['7caaadba5869983d8d391b09563a52042ef418b2'],38,61,99,9,,,
eb520969b45253f1ca8d2703b6ddf33a292a851f,"Bugfix ignore BufferCompleteErrors when trying to send

This is another indicator of the connection being closed (depending on
which race condition wins) it can be ignored.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-05-31 19:07:58+01:00,-3600,2020-05-31 19:07:58+01:00,-3600,True,False,"['h2.py', 'test_h2.py']",['80e2ad5db107c42d42471ea64764d2b42202349c'],4,13,17,2,0.0,0.0,1.0
f288675469199737227a858f1949076e67da220f,"Add support for server names

This allows the valid hosts to be configured and for Hypercorn to only
reply to these hosts (404s to others). This helps mitigate DNS
rebinding attacks.

As Hypercorn is often used without a server name validating proxy (for
HTTP/2 and HTTP/3) it makes sense for this functionality to be in
Hypercorn.

I'm unsure what the best default is, I think there is a case for the
secure default to require server names to be set. However I think this
is too restrictive to the actual use cases.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-01 10:52:06+01:00,-3600,2020-06-01 10:52:06+01:00,-3600,True,False,"['index.rst', 'server_names.rst', 'usage.rst', '__main__.py', 'config.py', 'http_stream.py', 'ws_stream.py', 'utils.py', 'test_http_stream.py', 'test_ws_stream.py']",['eb520969b45253f1ca8d2703b6ddf33a292a851f'],19,126,145,10,0.3088235294117647,0.9264705882352942,1.0
d32ffd73a97ba8b24f9def1f21da80d67fcd85a3,"Add WSGI middleware

This allows Hypercorn to serve WSGI applications via the use of this
middleware.

Whilst this exists elsewhere (and the asgiref version is probably
better) there is no Trio WSGI middleware I can find, hence why this
exists.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-03 13:45:32+01:00,-3600,2020-06-03 13:45:32+01:00,-3600,True,False,"['index.rst', 'wsgi_apps.rst', '__init__.py', 'dispatcher.py', 'http_to_https.py', 'wsgi.py', '__init__.py', 'test_dispatcher.py', 'test_http_to_https.py', 'test_wsgi.py']",['f288675469199737227a858f1949076e67da220f'],63,359,422,10,0.44808743169398907,0.819672131147541,0.6830601092896175
e1a3973c78f554540e0b01587114f73e8dcd083d,Fix QUIC bind output,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-04 11:06:51+01:00,-3600,2020-06-04 11:06:51+01:00,-3600,True,False,['run.py'],['d32ffd73a97ba8b24f9def1f21da80d67fcd85a3'],0,1,1,1,0.0,0.0,0.0
887bd180ff550d7c807d999f7d9cf8cc47cfc45c,"Refactor the event loop specific handling

Previously the event loop specific calls, e.g. spawn, sleep, time, all
had to be done within the xxx_server modules with the exception of the
spawn app. However this has become unweidly (e.g. the send_task or
call_at) and is making feature development, such as ping intervals
difficult. This refactor instead passes the relevant functionality to
the protocols in the context object.

With thanks to @petrikigor for the inspiration for the context object.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-04 11:08:15+01:00,-3600,2020-06-04 11:57:24+01:00,-3600,True,False,"['context.py', 'spawn_app.py', 'tcp_server.py', 'udp_server.py', '__init__.py', 'h11.py', 'h2.py', 'h3.py', 'http_stream.py', 'quic.py', 'ws_stream.py', 'context.py', 'spawn_app.py', 'tcp_server.py', 'udp_server.py', 'typing.py', 'test_context.py', 'test_tcp_server.py', 'test_h11.py', 'test_h2.py', 'test_http_stream.py', 'test_ws_stream.py']",['e1a3973c78f554540e0b01587114f73e8dcd083d'],254,314,568,22,1.0,0.5714285714285714,0.6190476190476191
4a884dbf9701145d5659610248bf52e78ee85536,"Add the ability to send websocket pings

This allows the connection to be kept alive (busy) until either the
client disconnects or the ASGI app decides to close the connection.
This helps, for example, when Hypercorn is used behind Nginx and Nginx
decides that the connection is not alive based on usage.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-04 12:49:29+01:00,-3600,2020-06-04 13:35:02+01:00,-3600,True,False,"['usage.rst', '__main__.py', 'config.py', 'ws_stream.py', 'test_ws_stream.py']",['887bd180ff550d7c807d999f7d9cf8cc47cfc45c'],10,60,70,5,0.40540540540540543,1.0,1.0
241d97861875049e0d3a59fb0e01a49bd018cfd8,"Add a graceful timeout on shutdown

This should give any tasks (requests, or background) the graceful
timeout to finish before they are cancelled. Note that this timeout is
before the lifespan shutdown timeout.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-04 16:46:00+01:00,-3600,2020-06-04 16:47:26+01:00,-3600,True,False,"['usage.rst', '__main__.py', 'run.py', 'config.py', 'run.py']",['4a884dbf9701145d5659610248bf52e78ee85536'],1,26,27,5,0.0,0.0,0.47368421052631576
75b012bff739f6839125561d01996f5b6656eca0,Bump and release 0.10.0,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-06 12:39:13+01:00,-3600,2020-06-06 12:39:13+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['241d97861875049e0d3a59fb0e01a49bd018cfd8'],1,17,18,2,,,
8170cdc6079f8c1203eee7b555f35914a21e9d12,Following the release of 0.10.0 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-06 12:39:42+01:00,-3600,2020-06-06 12:39:42+01:00,-3600,True,False,['__about__.py'],['75b012bff739f6839125561d01996f5b6656eca0'],1,1,2,1,,,
005008924a7e4d39fb23a26527e039f10c8d904f,"Bugfix close streams on server name rejection

This prevents teh server crashing trying to handle the request body
after rejecting the request because of the host name.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-08 21:20:09+01:00,-3600,2020-06-08 21:20:09+01:00,-3600,True,False,"['http_stream.py', 'ws_stream.py', 'test_http_stream.py', 'test_ws_stream.py']",['8170cdc6079f8c1203eee7b555f35914a21e9d12'],3,10,13,4,0.0,0.4,1.0
78b229ce8a18183080636028345f31482afd073f,"Refactor 005008924a7e4d39fb23a26527e039f10c8d904f

This is clearer and less prone to error.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-09 20:29:54+01:00,-3600,2020-06-09 20:29:54+01:00,-3600,True,False,"['http_stream.py', 'ws_stream.py']",['005008924a7e4d39fb23a26527e039f10c8d904f'],7,11,18,2,0.0,0.0,1.0
87e2db694c7a0305f788d9498f50482a3b229637,"Fix tests

Request lines end after two newlines
GET doesn't have a body",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-09 22:36:08+01:00,-3600,2020-06-09 22:38:32+01:00,-3600,True,False,"['test_h11.py', 'test_sanity.py']",['78b229ce8a18183080636028345f31482afd073f'],5,7,12,2,1.0,1.0,1.0
ba4547238a402a1c233c2320556994b8a88fd74d,"Bugfix handle receiving data after stream closure

If the stream closes earlier than the client, especially for
websockets when the server closes whilst the client is sending, it
would previously error as the stream would be None.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-09 22:38:50+01:00,-3600,2020-06-09 22:38:50+01:00,-3600,True,False,"['h11.py', 'test_h11.py']",['87e2db694c7a0305f788d9498f50482a3b229637'],6,19,25,2,0.7777777777777778,0.7777777777777778,1.0
37edacce2ba131760c10c2da9ebb20d6987f082a,"Remove pipenv reference

I prefer poetry, but pip indicates any manager can be used without
stating a preference.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-10 11:15:36+01:00,-3600,2020-06-10 11:15:36+01:00,-3600,True,False,['README.rst'],['ba4547238a402a1c233c2320556994b8a88fd74d'],4,2,6,1,,,
e7213689888b1d9ac883abc3fa774ded77d8e992,"Add programatic usage to the README quickstart

This is a very common use case, and should be better advertised.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-10 11:18:24+01:00,-3600,2020-06-10 11:18:24+01:00,-3600,True,False,['README.rst'],['37edacce2ba131760c10c2da9ebb20d6987f082a'],0,16,16,1,,,
6001f5d527c05c2826ed70b77f54ccc4af8f2e97,Bump and release 0.10.1,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-10 11:30:34+01:00,-3600,2020-06-10 11:30:34+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['e7213689888b1d9ac883abc3fa774ded77d8e992'],1,7,8,2,,,
9fbad6c0f7b18e6bce1db33bf38373702a4f541a,Following the release of 0.10.1 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-06-10 11:31:04+01:00,-3600,2020-06-10 11:31:04+01:00,-3600,True,False,['__about__.py'],['6001f5d527c05c2826ed70b77f54ccc4af8f2e97'],1,1,2,1,,,
674862d8a54800951a1a196b015d95cdf86085d7,"[h2c] add missing Connection header field

1. Without this field, nghttp2 report the following errors:

[ERROR] Failed to parse HTTP Upgrade response header: (HPE_INVALID_CONSTANT) Expected HTTP/

2. https://tools.ietf.org/html/rfc7230#section-6.7

When Upgrade is sent, the sender MUST also send a Connection header
field (Section 6.1) that contains an ""upgrade"" connection option.

3. https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism

Because Upgrade is a hop-by-hop header, it also needs to be listed in the
Connection header field.

After creating the initial HTTP/1.1 session, you need to request the upgrade
by adding to a standard request the Upgrade and Connection headers.",宋冬生,songdongsheng@live.cn,pgjones,philip.graham.jones@googlemail.com,2020-06-18 18:14:18+08:00,-28800,2020-06-19 09:56:34+01:00,-3600,True,False,"['h11.py', 'test_h11.py']",['9fbad6c0f7b18e6bce1db33bf38373702a4f541a'],3,8,11,2,0.0,0.8,1.0
ccfbe8460a5784fae4dc60b88de84db101aa5a09,"Bugfix raise an exception for unknown scopes to WSGI middleware

The correct action for a scope that cannot be handled by the
middleware (or passed on) is to raise an exception.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-05 18:04:11+01:00,-3600,2020-07-05 18:04:11+01:00,-3600,True,False,['wsgi.py'],['674862d8a54800951a1a196b015d95cdf86085d7'],1,1,2,1,,,
6de1301908aef735be82916ace4531938c2592b0,"Bugfix ensure HTTP/2 sending is active after upgrades

Previously the send task would not be running after an upgrade request
(as it would have triggered the HTTP/1 protocol send_task instead).

Thanks to @dongsheng.song for identifying the bug.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-05 18:07:34+01:00,-3600,2020-07-05 18:14:15+01:00,-3600,True,False,"['tcp_server.py', '__init__.py', 'h11.py', 'h2.py', 'tcp_server.py']",['ccfbe8460a5784fae4dc60b88de84db101aa5a09'],8,1,9,5,0.4,0.0,0.0
80326336f035edcfa7a446c5f064d77e0442ecde,Update to isort > 5,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-05 18:14:29+01:00,-3600,2020-07-05 18:14:29+01:00,-3600,True,False,"['pyproject.toml', 'tox.ini']",['6de1301908aef735be82916ace4531938c2592b0'],2,1,3,2,,,
62ca3a41cc4d0d1b0e0d42f9d3fdacefc67adb71,"Bugfix WSGI PATH_INFO and SCRIPT_NAME encoding

Both should be latin1 encoded not UTF-8 (as ASGI specifies). Thanks to
https://github.com/django/asgiref/pull/183 for this solution.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-14 17:05:24+01:00,-3600,2020-07-14 17:05:24+01:00,-3600,True,False,"['wsgi.py', 'test_wsgi.py']",['80326336f035edcfa7a446c5f064d77e0442ecde'],2,18,20,2,1.0,1.0,1.0
56c2111d6be87fcd62a2cbe10a4799f8faa8ad50,"Bugfix dispatcher middleware with non http/websocket scopes

The previous version would only pass on the scope to the first app.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-17 10:25:26+01:00,-3600,2020-07-17 10:25:26+01:00,-3600,True,False,"['dispatcher.py', 'test_dispatcher.py']",['62ca3a41cc4d0d1b0e0d42f9d3fdacefc67adb71'],10,40,50,2,0.32,0.32,0.68
9a42bd5c5946a8ac88992b7d118b655a9ac06ea9,"Bugfix dispatcher lifespan handling

The lifespan must be duplicated to all mounted apps and the return
messages combined. This does so, although doesn't handle the lifespan
failures correctly. As the app invocation must be in its own task the
middleware is split into a Asyncio and Trio version.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-18 21:57:44+01:00,-3600,2020-07-18 21:57:44+01:00,-3600,True,False,"['dispatcher.py', 'test_dispatcher.py']",['56c2111d6be87fcd62a2cbe10a4799f8faa8ad50'],10,90,100,2,0.3448275862068966,0.6206896551724138,0.0
fad58013d2ca8109ca05a11e9ce23ec1449e88ba,"Bugfix Trio dispatcher lifespan handling

This fixes 9a42bd5c5946a8ac88992b7d118b655a9ac06ea9 correctly for the
Trio version (with a test).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-19 11:24:33+01:00,-3600,2020-07-19 11:24:33+01:00,-3600,True,False,"['dispatcher.py', 'test_dispatcher.py']",['9a42bd5c5946a8ac88992b7d118b655a9ac06ea9'],11,33,44,2,0.8461538461538461,1.0,1.0
391a2533cc85ea9a71f994a87155f38759911e1b,"Bugfix catch TimeoutError as well

This extends ab22c5c1 to also catch TimeoutErrors thereby fixing both
bugs.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-22 14:39:17+01:00,-3600,2020-07-22 14:39:17+01:00,-3600,True,False,['tcp_server.py'],['fad58013d2ca8109ca05a11e9ce23ec1449e88ba'],0,1,1,1,0.0,1.0,1.0
c3ca27bceb4d59849ac6ae8c89f9ad887bd64850,Bump and release 0.10.2,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-22 14:41:24+01:00,-3600,2020-07-22 14:41:24+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['391a2533cc85ea9a71f994a87155f38759911e1b'],1,11,12,2,,,
3696cf2f92798777bb35aefc5fe41150b0d5ab9b,Following the release of 0.10.2 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-22 14:48:11+01:00,-3600,2020-07-22 14:48:11+01:00,-3600,True,False,['__about__.py'],['c3ca27bceb4d59849ac6ae8c89f9ad887bd64850'],1,1,2,1,,,
ccf477776a2fc5456cc44c6a1dd876f2fc28eb38,"Race condition in H11 handling

maybe_recycle may run while send(Updated()) is executing, thus it sets
can_read before handle_events clears it, resulting in a hung connection.",Matthias Urlichs,matthias@urlichs.de,Matthias Urlichs,matthias@urlichs.de,2020-07-28 10:08:17+02:00,-7200,2020-07-28 10:08:17+02:00,-7200,True,False,['h11.py'],['3696cf2f92798777bb35aefc5fe41150b0d5ab9b'],1,1,2,1,,,
9ea071c028d9c9df1705cdde29394e3e71773138,"Replace `only` with `rules`

Gitlab CIs API is changing.
Thanks to @perobertson",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-31 09:04:26+01:00,-3600,2020-07-31 09:05:01+01:00,-3600,True,False,['.gitlab-ci.yml'],['ccf477776a2fc5456cc44c6a1dd876f2fc28eb38'],2,2,4,1,,,
fb7b110860b16887580b90cc67c6d228a0b06b1d,"Bugfix HTTP/1 recycling

41c30e25b420bdb1630285964557adf7ef32fa60 ensured that a closing stream
would handle events after it closed (and had triggered the
recycle). This though can cause bugs in Trio as the closing stream
should not be pushing onto another task's send channel.

Subsequent fixes such as 13bbb7faeebed7462449d751b0e198079c120755 and
4f3cb156f4b578495bdc24f47ce44df2d74ebc70 have allowed the event
handling to be removed whilst ensuring the protocol recycles.

The test is updated to make the task separation clearer.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-08-04 22:32:33+01:00,-3600,2020-08-04 22:32:33+01:00,-3600,True,False,"['h11.py', 'test_h11.py']",['9ea071c028d9c9df1705cdde29394e3e71773138'],3,6,9,2,1.0,1.0,1.0
dbaf6a4bc372522db9615375698d1613e43e609d,"Bugfix wait for tasks to complete when cancelled

This seems to be the best practice to avoid any confusing additional
errors.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-08-16 22:29:34+01:00,-3600,2020-08-16 22:29:34+01:00,-3600,True,False,"['task_group.py', 'tcp_server.py']",['fb7b110860b16887580b90cc67c6d228a0b06b1d'],0,9,9,2,1.0,1.0,0.5
354e7c8263e55b83189a34aa99328579e0f997e9,"Bugfix ensure signals are always handled (asyncio)

If no shutdown trigger is provided then signal handlers are now
created by default (rather than not as before). This is required as
the default Ctrl+C handler will cause the cancellation of all tasks,
most notably the lifespan task that cannot then complete during the
shutdown as it has been cancelled.

This will require some investigation into how Hypercorn is used before
the docs are updated - as signal handling has been explicitly the
caller's concern before now.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-08-17 08:24:24+01:00,-3600,2020-08-17 08:24:24+01:00,-3600,True,False,['run.py'],['dbaf6a4bc372522db9615375698d1613e43e609d'],16,15,31,1,1.0,1.0,1.0
19cbe37e7fa653ea130cd50a6141f5533ce139e3,"Bugfix wait on the serving when running

This was implicitly the case before (as they ran in the event loop
anyway) but could result in strange GeneratorExit errors or ignored
GeneratorExit errors (still confused).

Note that the documentation for UDP suggests that serving the loop is
sufficient (`await asyncio.sleep(3600)` used).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-08-17 08:36:22+01:00,-3600,2020-08-17 08:39:01+01:00,-3600,True,False,['run.py'],['354e7c8263e55b83189a34aa99328579e0f997e9'],1,2,3,1,0.0,0.0,0.0
1119d02aae91214eba47fb94e660a10f729083c5,Fix mypy typing issue,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-08-17 10:07:46+01:00,-3600,2020-08-17 10:07:46+01:00,-3600,True,False,['run.py'],['19cbe37e7fa653ea130cd50a6141f5533ce139e3'],1,1,2,1,,,
f011b7a4c4fb061a8a22ba7d850918fdca6ff98e,don't propagate hypercorn.access messages by default,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 14:45:23+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['logging.py'],['1119d02aae91214eba47fb94e660a10f729083c5'],1,1,2,1,,,
76e729c137f12862538f284e1dca7fda650bc403,use log level from CONFIG_DEFAULTS as a default value,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 14:51:33+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,"['config.py', 'logging.py']",['f011b7a4c4fb061a8a22ba7d850918fdca6ff98e'],4,8,12,2,0.0,1.0,0.6666666666666666
25fe1094cf1ce62b044fc195617df3ec5ba92f23,remove explicit level for hypercorn.error,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 15:04:02+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['logging.py'],['76e729c137f12862538f284e1dca7fda650bc403'],1,0,1,1,,,
d732aec07ad2a7f9a657660939554dc28f537c05,base logging config on CONFIG_DEFAULTS in all cases,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 15:09:06+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['logging.py'],['25fe1094cf1ce62b044fc195617df3ec5ba92f23'],9,10,19,1,,,
d3da1c8c5d791eab4d5e4d4cb741619f40318b9e,cleanup _create_logger,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 16:46:53+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['logging.py'],['d732aec07ad2a7f9a657660939554dc28f537c05'],16,12,28,1,1.0,0.0,1.0
b34e3272c413804fdcda72087b5521c6ecefcfcd,call _create_logger after base logging configuration,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 16:47:29+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['logging.py'],['d3da1c8c5d791eab4d5e4d4cb741619f40318b9e'],6,3,9,1,1.0,0.0,0.0
3a3a2aab1f755d88f081716fdcab2799c0ec4f2c,disable_existing_loggers is no longer required,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 16:47:50+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['logging.py'],['b34e3272c413804fdcda72087b5521c6ecefcfcd'],4,1,5,1,1.0,0.0,0.0
e35a7fd2a4c73d0dfd0b32341f5e3dba041e1081,target root logger to stderr by default,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 16:48:40+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['logging.py'],['3a3a2aab1f755d88f081716fdcab2799c0ec4f2c'],1,1,2,1,,,
34fe786345661f5d4692dd52979f47440e4e66f6,remove hypercorn.access handler to maintain backward compatibility,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 16:52:06+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['logging.py'],['e35a7fd2a4c73d0dfd0b32341f5e3dba041e1081'],1,0,1,1,,,
1eb74d0fee48e27b75701dcd5a1ad3e43a03459b,"remove handler from hypercorn.error to avoid duplicate messages, remove propagate default value",Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 16:52:54+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['logging.py'],['34fe786345661f5d4692dd52979f47440e4e66f6'],2,0,2,1,,,
37cfb561fc7976306c8cd99d1b820d3fc90885f2,fix format warnings,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 16:53:13+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['logging.py'],['1eb74d0fee48e27b75701dcd5a1ad3e43a03459b'],8,2,10,1,,,
502b94e17f7f8b313c4357672a2b3b89a0e0a78d,discard unused handler definition,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 16:53:29+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['logging.py'],['37cfb561fc7976306c8cd99d1b820d3fc90885f2'],5,0,5,1,,,
b71b4e93928dca8796ce22a99418c4a11068a87c,remove default value for --log-level option,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 16:53:43+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['__main__.py'],['502b94e17f7f8b313c4357672a2b3b89a0e0a78d'],3,1,4,1,1.0,1.0,0.0
ac7b0b4059f229a541fe1b50a9c1e3e177fc996c,tests for --loglevel option,Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 17:19:12+02:00,-7200,2020-08-29 17:49:16+01:00,-3600,True,False,['test_logging.py'],['b71b4e93928dca8796ce22a99418c4a11068a87c'],0,11,11,1,1.0,1.0,1.0
59afd56050dcec483b6ddd1c760ed01a6d3b91c6,Upgrade black and reformat,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-08-29 17:54:12+01:00,-3600,2020-08-29 17:54:12+01:00,-3600,True,False,"['__init__.py', 'test_sanity.py']",['ac7b0b4059f229a541fe1b50a9c1e3e177fc996c'],7,29,36,2,0.0,1.0,0.45454545454545453
c6df3becf73df7be03451d53f5685aaadd4bbd80,"Minor naming and style changes

To match the style I use in Hypercorn.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-08-29 17:56:03+01:00,-3600,2020-08-29 17:56:03+01:00,-3600,True,False,"['logging.py', 'test_logging.py']",['59afd56050dcec483b6ddd1c760ed01a6d3b91c6'],2,5,7,2,,,
76930bb661e32cb3028b4c787202fcc752271d8f,"Don't Require 'typing_extensions' in Python 3.8+

According to the documentation only Python version 3.7 and above are
supported by Hypercorn. Python 3.8 has been out for quite a while and
3.9 is soon to be released. There is no need to maintain the
dependency on the 'typing_extensions' package for folks using 3.8 and
higher.",justin0mcateer,justin0mcateer@users.noreply.github.com,pgjones,philip.graham.jones@googlemail.com,2020-09-01 17:26:03-05:00,18000,2020-09-12 15:30:40+01:00,-3600,True,False,"['setup.py', 'typing.py']",['c6df3becf73df7be03451d53f5685aaadd4bbd80'],2,7,9,2,,,
15bfd2427ccd48ee4ecf1906f6dda57b738ee969,Fix python_version usage in 76930bb661e32cb3028b4c787202fcc752271d8f,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-09-12 15:34:24+01:00,-3600,2020-09-12 15:34:24+01:00,-3600,True,False,['setup.py'],['76930bb661e32cb3028b4c787202fcc752271d8f'],1,1,2,1,,,
0462326d91893df562147421dadea412d4597560,Fix 76930bb661e32cb3028b4c787202fcc752271d8f linting,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-09-12 15:48:28+01:00,-3600,2020-09-12 15:48:28+01:00,-3600,True,False,['typing.py'],['15bfd2427ccd48ee4ecf1906f6dda57b738ee969'],2,2,4,1,,,
ab0f6b6fc49ddf8cc78670df6796b5c41555bc8d,"Change configuration loading for python files

Previously using the `python:` prefix on the command line would load a
python file path, this is now achieved via the `file:` prefix. The
`python:` prefix now loads a python module. this matches Gunicorn and
removes a source of confusion.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-09-13 14:58:04+01:00,-3600,2020-09-13 21:57:29+01:00,-3600,True,False,"['configuring.rst', 'index.rst', 'usage.rst', '__main__.py', 'config.py', 'test___main__.py', 'test_config.py']",['0462326d91893df562147421dadea412d4597560'],88,189,277,7,1.0,1.0,1.0
58a789b576a1321fbbb89f34db6f1d8acbe0eddc,"Bugfix allow lifespan completion if app just returns

This ensures that if the app just returns (rather than erroring or
responding to messages) the lifespan waits can complete. This is
possible for badly behaving apps that don't implement the ASGI
specification as Hypercorn does.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-09-26 14:37:13+01:00,-3600,2020-09-26 14:49:30+01:00,-3600,True,False,"['lifespan.py', 'lifespan.py', 'test_lifespan.py']",['ab0f6b6fc49ddf8cc78670df6796b5c41555bc8d'],0,19,19,3,0.6153846153846154,0.0,0.8461538461538461
3cde8e7f191381d7a44e8b2a9b2c9925afbb3b61,"Bugfix handle lifespan in WSGI middleware

This just returns, rather than erroring or otherwise. This is the
correct action as lifespan cannot do anything with WSGI, but this
isn't something that should be considered an error.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-09-26 14:50:05+01:00,-3600,2020-09-26 14:50:05+01:00,-3600,True,False,['wsgi.py'],['58a789b576a1321fbbb89f34db6f1d8acbe0eddc'],0,2,2,1,1.0,1.0,0.0
9690f8c6d354bd8f5e43cd577c309bcb2b88add8,"Handle sockets given as file descriptors properly

Currently file descriptors are converted into python sockets using
`socket.fromfd`, this method has two flaws. The first is that it
duplicates the file descriptor, this results in a dangling file
descriptor which is left behind if it is not manually closed. Secondly
it requires passing the socket type and family, of which we have no
knowledge of and are left to give some defaults which are likely to be
wrong. Instead of this, `socket.socket(fileno=fd)` can be used. This
adopts the file descriptor rather than closing it and infers the socket
parameters.",Peter Ryan Smith,comprs@outlook.com,Peter Ryan Smith,comprs@outlook.com,2020-09-24 15:55:53+01:00,-3600,2020-09-26 15:39:27+01:00,-3600,True,False,"['config.py', 'test_config.py']",['3cde8e7f191381d7a44e8b2a9b2c9925afbb3b61'],5,5,10,2,,,
b3194de8ff7f19f89468b16b4cf46a067932b418,Add socket type check,Peter Ryan Smith,comprs@outlook.com,Peter Ryan Smith,comprs@outlook.com,2020-09-24 22:18:00+01:00,-3600,2020-09-26 15:39:32+01:00,-3600,True,False,"['config.py', 'test_config.py']",['9690f8c6d354bd8f5e43cd577c309bcb2b88add8'],1,16,17,2,0.7272727272727273,0.7272727272727273,0.5454545454545454
f038f9e54946065d463511d4f97a4ea415358528,"Get QUIC socket addresses from themselves

Since `--bind-quic` may contain a combination of IP addresses, UNIX
socket addresses and file descriptor numbers, we cannot use it to
directly to get port numbers to send in a ""alt-svc"" header. Instead
once all of the sockets have been assembled, query each in turn for its
own address and filter out UNIX addresses.",Peter Ryan Smith,comprs@outlook.com,Peter Ryan Smith,comprs@outlook.com,2020-09-24 16:48:43+01:00,-3600,2020-09-26 16:55:05+01:00,-3600,True,False,['config.py'],['b3194de8ff7f19f89468b16b4cf46a067932b418'],3,12,15,1,1.0,1.0,1.0
ec294bab1d009dc651732a27a29ec79633300364,"Add a warning for UNIX QUIC sockets

Since ""alt-svc"" cannot be used to redirect to these sockets, they may
not be used.",Peter Ryan Smith,comprs@outlook.com,Peter Ryan Smith,comprs@outlook.com,2020-09-24 19:32:27+01:00,-3600,2020-09-26 16:55:05+01:00,-3600,True,False,['config.py'],['f038f9e54946065d463511d4f97a4ea415358528'],0,5,5,1,1.0,1.0,1.0
c200d692d22bd053d35bda7de3693f34fd30b024,"Allow HTTP -> HTTPS redirects to host from headers

This allows the server to redirect to whatever host is present in the
headers rather than having to be defined upfront. This makes it easier
to use Hypercorn in situations whereby there isn't a known upfront
hostname e.g. in clusters.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-09-26 21:04:38+01:00,-3600,2020-09-26 21:04:38+01:00,-3600,True,False,"['http_to_https.py', 'utils.py', 'test_http_to_https.py']",['ec294bab1d009dc651732a27a29ec79633300364'],9,33,42,3,1.0,1.0,0.8095238095238095
3fc569df7a0b9ff781495b5ed61488a30a206d96,"Introduce new access log atoms

This makes it easier to log the path or URL with a querystring.",Dmitriy Geels,dmitriy.geels@gmail.com,pgjones,philip.graham.jones@googlemail.com,2020-07-28 17:52:15+02:00,-7200,2020-09-27 18:38:20+01:00,-3600,True,False,"['logging.rst', 'logging.py', 'test_logging.py']",['c200d692d22bd053d35bda7de3693f34fd30b024'],2,15,17,3,0.0,0.4444444444444444,0.4444444444444444
8b130b1b9628491b98b7504269533a6875e032ae,Bump and release 0.11.0,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-09-27 18:52:45+01:00,-3600,2020-09-27 18:52:45+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['3fc569df7a0b9ff781495b5ed61488a30a206d96'],1,20,21,2,,,
2f2e9803647a4be5ea44573b3758f8fe2d16976e,Following the release of 0.11.0 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-09-27 18:57:40+01:00,-3600,2020-09-27 18:57:40+01:00,-3600,True,False,['__about__.py'],['8b130b1b9628491b98b7504269533a6875e032ae'],1,1,2,1,,,
3cc31bdb3bdef530aeaf542dfd0fca8cde4f6787,"Explain how to disable signal handling

This snippet allows the default behaviour of Hypercorn < 0.11 to be
restored.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-10-01 21:33:44+01:00,-3600,2020-10-01 21:33:44+01:00,-3600,True,False,['api_usage.rst'],['2f2e9803647a4be5ea44573b3758f8fe2d16976e'],0,13,13,1,,,
857aff3879cb679a1ecfc393cbf6105217351dd7,"Change running on message to be a valid url

This makes it possible to click the url in the terminal (in some
situations).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-10-04 19:33:28+01:00,-3600,2020-10-04 19:33:28+01:00,-3600,True,False,"['run.py', 'run.py']",['3cc31bdb3bdef530aeaf542dfd0fca8cde4f6787'],6,6,12,2,,,
21dcfff87b08fbb6279942d525f704bebbe5496f,"Bugfix isolate log level changes to the Hypercorn loggers

This partially reverts 76e729c137f12862538f284e1dca7fda650bc403 and
d3da1c8c5d791eab4d5e4d4cb741619f40318b9e to ensure that the log level
is set on the Hypercorn loggers and not the root logger.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-10-05 20:05:15+01:00,-3600,2020-10-05 20:05:15+01:00,-3600,True,False,"['logging.py', 'test_logging.py']",['857aff3879cb679a1ecfc393cbf6105217351dd7'],8,11,19,2,0.0,0.0,0.5
1a1c1c3feec8b164b680bb93e9f546e9090fb3ec,"Revert ""disable_existing_loggers is no longer required""

This reverts commit 3a3a2aab1f755d88f081716fdcab2799c0ec4f2c.

Disabling existing logger is only True (by default) to support legacy
usages and actively makes Hypercorn harder to use as all other loggers
are disabled. Best then to ensure that disabling existing is set to
False.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-10-05 20:09:24+01:00,-3600,2020-10-05 20:13:35+01:00,-3600,True,False,['logging.py'],['21dcfff87b08fbb6279942d525f704bebbe5496f'],1,4,5,1,0.0,1.0,1.0
d7d76ad7c473cb1c01e82eed4cdab5853d395c67,Fix tests to work with h11 >= 0.11.0,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-10-05 20:19:38+01:00,-3600,2020-10-05 20:19:38+01:00,-3600,True,False,['test_h11.py'],['1a1c1c3feec8b164b680bb93e9f546e9090fb3ec'],2,2,4,1,,,
4068c4ef46afbfd6a8951838d2a234e6fb353a21,"Bugfix logging

This reverts recent changes, and simplifies the logging configuration
to work as expected. This hopefully now works correctly in all cases.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-10-05 21:04:23+01:00,-3600,2020-10-05 21:04:23+01:00,-3600,True,False,"['__main__.py', 'config.py', 'logging.py']",['d7d76ad7c473cb1c01e82eed4cdab5853d395c67'],46,25,71,3,0.0,1.0,0.0
63ad4cfff2204197a112e5c0ed34b8db7e557b6d,"Bugfix do not propagate the access logger

This can be overriden by using a logging configuration. I think it
makes sense for errors to propagate by default.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-10-07 11:14:56+01:00,-3600,2020-10-07 11:14:56+01:00,-3600,True,False,['logging.py'],['4068c4ef46afbfd6a8951838d2a234e6fb353a21'],2,12,14,1,0.0,1.0,0.4
7e3b13a3865b916d63e257c87656863e2df5a61a,Bump and release 0.11.1,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-10-07 11:17:05+01:00,-3600,2020-10-07 11:17:05+01:00,-3600,True,False,"['CHANGELOG.rst', '__about__.py']",['63ad4cfff2204197a112e5c0ed34b8db7e557b6d'],1,7,8,2,,,
06fb15657d71f4bf55f0c7ca68a8de2090361757,Following the release of 0.11.1 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-10-07 11:17:30+01:00,-3600,2020-10-07 11:17:30+01:00,-3600,True,False,['__about__.py'],['7e3b13a3865b916d63e257c87656863e2df5a61a'],1,1,2,1,,,
301946b1de3b5a61d37f9f2dbceb6ca93b33362c,Instruct to trio.run directly if kwargs not needed,Nguyễn Gia Phong,mcsinyx@disroot.org,Nguyễn Gia Phong,mcsinyx@disroot.org,2020-11-21 16:20:13+07:00,-25200,2020-11-22 11:34:16+07:00,-25200,True,False,"['api_usage.rst', '__init__.py']",['06fb15657d71f4bf55f0c7ca68a8de2090361757'],4,2,6,2,,,
3531db423291a74dc9bdb0fb466a61e8cee635b6,"Bugfix catch the base class ConnectionError

Instead of BrokenPipeError, ConnectionAbortedError,
ConnectionRefusedError and ConnectionResetError. As for any of these
errors the connection has errored and must close.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-11-22 10:24:12+00:00,0,2020-11-22 10:24:12+00:00,0,True,False,['tcp_server.py'],['301946b1de3b5a61d37f9f2dbceb6ca93b33362c'],4,2,6,1,1.0,0.0,0.0
97d50ac45d7facf8420cc940f62ca91742ddb965,Fix mypy issue,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-11-22 10:47:07+00:00,0,2020-11-22 10:47:07+00:00,0,True,False,['test_config.py'],['3531db423291a74dc9bdb0fb466a61e8cee635b6'],1,3,4,1,0.0,1.0,1.0
60e7a1325c871556903f5c0693d8b7e144f6a92c,"Officially support Python 3.9

By including it in the CI testing.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-11-29 14:21:58+00:00,0,2020-11-29 14:21:58+00:00,0,True,False,"['.gitlab-ci.yml', 'setup.py', 'tox.ini']",['97d50ac45d7facf8420cc940f62ca91742ddb965'],10,17,27,3,,,
ee5072d0d6ea9575426a0406e62541f533b0a844,"Fix the PyOpenSSL version for the autobahn tests

Sadly autobahn only supports Python2, and I'll likely have to disable
it soon (unless they support Python3).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-11-29 14:38:34+00:00,0,2020-11-29 14:38:34+00:00,0,True,False,['.gitlab-ci.yml'],['60e7a1325c871556903f5c0693d8b7e144f6a92c'],1,1,2,1,,,
df99d1633e242216959d3c7ca3ff43c36ee6840b,"Catch KeyboardInterrupt

It may be raised here, rather than in the worker_serve depending on
the system (Windows does this).",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-12-04 13:42:05+00:00,0,2020-12-04 13:42:05+00:00,0,True,False,['run.py'],['ee5072d0d6ea9575426a0406e62541f533b0a844'],0,2,2,1,0.0,1.0,0.0
45e4720eeb07a88b00b1a16b2d277f8a2fb4f6e6,Support non-standard HTTP status codes,Luna,git@l4.pm,Luna,git@l4.pm,2020-12-10 18:40:37-03:00,10800,2020-12-10 18:40:37-03:00,10800,True,False,['logging.py'],['df99d1633e242216959d3c7ca3ff43c36ee6840b'],1,6,7,1,0.0,0.0,0.0
a48f393605fcab4a7de46a793e9ef5260731152e,Add test for non-standard status code logging,Luna,git@l4.pm,Luna,git@l4.pm,2020-12-10 19:03:42-03:00,10800,2020-12-10 19:03:42-03:00,10800,True,False,['test_logging.py'],['45e4720eeb07a88b00b1a16b2d277f8a2fb4f6e6'],0,5,5,1,1.0,1.0,1.0
5f93a2c9449a5f33a89d2bdd748949ab65b308f9,"Add typing for the ASGI scopes

This makes use of the TypedDict (added to Python in 3.8 and available
in the typing_extensions package) to specify the types of the key
values in the ASGI scopes. This then ensures that the scopes are
correctly constructued and used in the code.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-12-24 16:23:27+00:00,0,2020-12-24 18:10:24+00:00,0,True,False,"['context.py', 'lifespan.py', 'logging.py', 'dispatcher.py', 'http_to_https.py', 'wsgi.py', 'http_stream.py', 'ws_stream.py', 'statsd.py', 'context.py', 'lifespan.py', 'typing.py', 'utils.py', 'test_context.py', 'test_lifespan.py', 'test_tcp_server.py', 'conftest.py', 'helpers.py', 'test_dispatcher.py', 'test_http_to_https.py', 'test_wsgi.py', 'test_http_stream.py', 'test_logging.py', 'test_utils.py', 'test_keep_alive.py']",['a48f393605fcab4a7de46a793e9ef5260731152e'],133,278,411,25,0.0,0.9166666666666666,0.9166666666666666
39094e724667689d5728c9225313980d304e173d,"Add typing for the ASGI messages

This makes use of the TypedDict (added to Python in 3.8 and available
in the typing_extensions package) to specify the types of the key
values in the ASGI messages. This then ensures that the messages are
correctly constructued and used in the code.

Note the type ignores are due to this issue
https://github.com/python/mypy/issues/8533.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-12-24 18:09:33+00:00,0,2020-12-24 18:10:24+00:00,0,True,False,"['context.py', 'lifespan.py', 'logging.py', 'http_stream.py', 'ws_stream.py', 'statsd.py', 'context.py', 'lifespan.py', 'typing.py', 'utils.py', 'test_context.py', 'test_logging.py']",['5f93a2c9449a5f33a89d2bdd748949ab65b308f9'],48,248,296,12,0.6666666666666666,0.6666666666666666,1.0
5fd8ac67dc083cb74211ea6c176d6f4af9548a97,Fix 39094e724667689d5728c9225313980d304e173d,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2020-12-24 21:32:16+00:00,0,2020-12-24 21:32:16+00:00,0,True,False,['test_logging.py'],['39094e724667689d5728c9225313980d304e173d'],2,2,4,1,,,
eb55446b2272ab5622c8af69c5bfc1c4fae759f8,"Bugfix WebsocketCloseEvent typing

The code is not optional",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2021-01-10 13:03:01+00:00,0,2021-01-10 13:03:01+00:00,0,True,False,['typing.py'],['5fd8ac67dc083cb74211ea6c176d6f4af9548a97'],1,1,2,1,,,
6ab2ab9f187526d5da5c2a12220d7abfc7573d0b,Bump and release 0.11.2,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2021-01-10 13:06:11+00:00,0,2021-01-10 13:06:11+00:00,0,True,False,"['CHANGELOG.rst', '__about__.py']",['eb55446b2272ab5622c8af69c5bfc1c4fae759f8'],1,9,10,2,,,
a9357dea6cf64c14527656dfa3cd6d7147f0ad1f,Following the release of 0.11.2 bump to +dev,pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2021-01-10 13:06:40+00:00,0,2021-01-10 13:06:40+00:00,0,True,False,['__about__.py'],['6ab2ab9f187526d5da5c2a12220d7abfc7573d0b'],1,1,2,1,,,
c9dd670eef4c7cfd6cecf93f56e819413e0436d4,"Bugfix the root_path handling

If a root_path is specified the server should return 404 to any
requests that have a path that do not start with the root_path. The
server should also adjust the path to remove the root_path, whilst
keeping the raw_path intact.

This allows the root_path to be used as a global prefix to all routes
served.",pgjones,philip.graham.jones@googlemail.com,pgjones,philip.graham.jones@googlemail.com,2021-01-21 10:41:51+00:00,0,2021-01-21 10:41:51+00:00,0,True,False,"['config.py', 'http_stream.py', 'ws_stream.py', 'utils.py', 'test_http_stream.py', 'test_ws_stream.py', 'test_utils.py']",['a9357dea6cf64c14527656dfa3cd6d7147f0ad1f'],17,110,127,7,0.2413793103448276,0.9655172413793104,1.0
405c7e651968eb70ef373247ee50b29702b0c3a6,extract DispatcherMiddleware from hypercorn,Thomas Grainger,tagrain@gmail.com,Thomas Grainger,tagrain@gmail.com,2021-01-23 12:08:20+00:00,0,2021-01-23 15:03:53+00:00,0,True,False,"['main.yml', '.gitignore', '.gitlab-ci.yml', '.pre-commit-config.yaml', 'CHANGELOG.rst', 'LICENSE', 'MANIFEST.in', 'README.rst', 'LICENSE', 'logo.png', 'logo.svg', 'logo_small.png', 'logo_small.svg', '__init__.py', '_core.py', 'asgitypes.py', 'py.typed', 'changelog.md', 'fuzzingclient.json', 'server.py', 'summarise.py', 'cert.pem', 'key.pem', 'server.py', 'Makefile', 'logo.png', 'logo_small.png', 'conf.py', 'backpressure.rst', 'closing.rst', 'design_choices.rst', 'dos_mitigations.rst', 'http2.rst', 'index.rst', 'workers.rst', 'api_usage.rst', 'binds.rst', 'configuring.rst', 'dispatch_apps.rst', 'http_https_redirect.rst', 'index.rst', 'logging.rst', 'server_names.rst', 'statsd.rst', 'wsgi_apps.rst', 'index.rst', 'make.bat', 'api.rst', 'index.rst', 'index.rst', 'installation.rst', 'quickstart.rst', 'usage.rst', 'pyproject.toml', 'readme.md', 'setup.cfg', 'setup.py', '__about__.py', '__init__.py', '__main__.py', '__init__.py', 'context.py', 'lifespan.py', 'run.py', 'statsd.py', 'task_group.py', 'tcp_server.py', 'udp_server.py', 'config.py', 'events.py', 'logging.py', '__init__.py', 'dispatcher.py', 'http_to_https.py', 'wsgi.py', '__init__.py', 'events.py', 'h11.py', 'h2.py', 'h3.py', 'http_stream.py', 'quic.py', 'ws_stream.py', 'py.typed', 'run.py', 'statsd.py', '__init__.py', 'context.py', 'lifespan.py', 'run.py', 'statsd.py', 'tcp_server.py', 'udp_server.py', 'utils.py', 'cert.pem', 'config.py', 'config.toml', 'config_ssl.py', 'key.pem', '__init__.py', 'helpers.py', 'test_context.py', 'test_keep_alive.py', 'test_lifespan.py', 'test_sanity.py', 'test_tcp_server.py', 'conftest.py', 'helpers.py', '__init__.py', 'test_dispatcher.py', 'test_http_to_https.py', 'test_wsgi.py', 'test_h11.py', 'test_h2.py', 'test_http_stream.py', 'test_ws_stream.py', 'test___main__.py', 'test_asgi_dispatcher_middleware.py', 'test_config.py', 'test_logging.py', 'test_utils.py', '__init__.py', 'test_keep_alive.py', 'test_lifespan.py', 'test_sanity.py', 'tox.ini']",['c9dd670eef4c7cfd6cecf93f56e819413e0436d4'],10062,771,10833,126,0.6291674790407487,0.31624098264768963,0.24273737570676546
aae1919e17814ec0900df49740a3b6e230c4e877,replace coveralls with mypy,Thomas Grainger,tagrain@gmail.com,Thomas Grainger,tagrain@gmail.com,2021-01-23 15:07:52+00:00,0,2021-01-23 15:26:49+00:00,0,True,False,['main.yml'],['405c7e651968eb70ef373247ee50b29702b0c3a6'],1,1,2,1,,,
26e49fe26c78df58c704b2468c68571e04357cd2,fix type annotations,Thomas Grainger,tagrain@gmail.com,Thomas Grainger,tagrain@gmail.com,2021-01-23 15:34:04+00:00,0,2021-01-23 15:34:04+00:00,0,True,False,"['_core.py', 'asgitypes.py']",['aae1919e17814ec0900df49740a3b6e230c4e877'],4,5,9,2,,,
7c5cadf7a45242dce2bb30c3ccd88804936f9860,Preparing release 1.0.0,Thomas Grainger,tagrain@gmail.com,Thomas Grainger,tagrain@gmail.com,2021-01-23 15:41:35+00:00,0,2021-01-23 15:44:07+00:00,0,True,False,"['__init__.py', 'changelog.md']",['26e49fe26c78df58c704b2468c68571e04357cd2'],2,2,4,2,,,
5b5b2614bc06032406412b565150cc72f922fcd5,Back to development: 1.0.1,Thomas Grainger,tagrain@gmail.com,Thomas Grainger,tagrain@gmail.com,2021-01-23 15:43:00+00:00,0,2021-01-23 15:44:07+00:00,0,True,False,"['__init__.py', 'changelog.md']",['7c5cadf7a45242dce2bb30c3ccd88804936f9860'],1,5,6,2,,,
