Hash,Commit Message,Author Name,Author Email,Committor Name,Committor Email,Author Date,Author Timezone,Committor Date,Committor Timezone,in_main_branch,merge,modified_files,parents,deletions,insertions,lines,files,dmm_unit_size,dmm_unit_complexity,dmm_unit_interfacing
41f3333fe1c0bb924238a537da0095d086dd2397,"Initial commit, ported from magma",Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-08 16:20:09-08:00,28800,2018-03-08 16:20:09-08:00,28800,True,False,"['__init__.py', 'bitvector.py', 'setup.py']",[],0,224,224,3,0.8553459119496856,0.7924528301886793,0.8113207547169812
4f5ebbb77a11c55a870c91db80e60b9e806a04b2,Add numpy requirement,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-08 16:23:00-08:00,28800,2018-03-08 16:23:00-08:00,28800,True,False,"['requirements.txt', 'setup.py']",['41f3333fe1c0bb924238a537da0095d086dd2397'],0,12,12,2,,,
2757dfee30a0e8d93d8f2db2c49422dd7279c71f,Rename package,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-08 16:25:23-08:00,28800,2018-03-08 16:25:23-08:00,28800,True,False,"['__init__.py', 'bit_vector.py', '__init__.py']",['4f5ebbb77a11c55a870c91db80e60b9e806a04b2'],1,1,2,3,,,
462cf32afbc3f92dffd3d38bb273dd6d6245956b,Add compatibility,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-08 16:49:36-08:00,28800,2018-03-08 16:49:36-08:00,28800,True,False,"['compatibility.py', 'setup.py']",['2757dfee30a0e8d93d8f2db2c49422dd7279c71f'],2,16,18,2,,,
1c7c095b2fc583ef7d0cfbfa5b02de84d5ae568d,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-08 16:49:44-08:00,28800,2018-03-08 16:49:44-08:00,28800,True,False,['setup.py'],['462cf32afbc3f92dffd3d38bb273dd6d6245956b'],1,1,2,1,,,
1c7b212499d0defce5cdc76f6cf8100c9a313c27,Add bitutils,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-08 16:50:46-08:00,28800,2018-03-08 16:50:46-08:00,28800,True,False,['bit_vector.py'],['1c7c095b2fc583ef7d0cfbfa5b02de84d5ae568d'],1,28,29,1,1.0,0.4375,1.0
5efd24a3f125d41264c32009add43b0bbf3c601f,Update .gitignore,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-08 17:06:31-08:00,28800,2018-03-08 17:06:31-08:00,28800,True,False,['.gitignore'],['1c7b212499d0defce5cdc76f6cf8100c9a313c27'],0,3,3,1,,,
a366f88479f62e05760734c2cee157fe572419c5,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-08 17:07:40-08:00,28800,2018-03-08 17:07:40-08:00,28800,True,False,['setup.py'],['5efd24a3f125d41264c32009add43b0bbf3c601f'],1,1,2,1,,,
2dbe9aa42e7f3d375c99b3115557a83b0c166f83,Fix bug in signed comparisons,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-12 22:19:46-07:00,25200,2018-03-12 22:19:46-07:00,25200,True,False,['bit_vector.py'],['a366f88479f62e05760734c2cee157fe572419c5'],5,14,19,1,1.0,1.0,1.0
7a9fae581a5a6250491844019382766daa76ebb1,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-12 22:20:13-07:00,25200,2018-03-12 22:20:13-07:00,25200,True,False,['setup.py'],['2dbe9aa42e7f3d375c99b3115557a83b0c166f83'],1,1,2,1,,,
c67f9ad06daa28f01fbf3339a860d068e2838a0c,Fix bug in right shift,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-12 22:30:29-07:00,25200,2018-03-12 22:30:29-07:00,25200,True,False,['bit_vector.py'],['7a9fae581a5a6250491844019382766daa76ebb1'],5,5,10,1,,,
74e4e3ec120d7d43ced38fb465fb63393f555437,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-12 22:30:40-07:00,25200,2018-03-12 22:30:40-07:00,25200,True,False,['setup.py'],['c67f9ad06daa28f01fbf3339a860d068e2838a0c'],1,1,2,1,,,
b255fb36ba746bbef68bac0a27a1cd9f02593af2,Fix bug in negate,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-12 22:55:26-07:00,25200,2018-03-12 22:55:26-07:00,25200,True,False,['bit_vector.py'],['74e4e3ec120d7d43ced38fb465fb63393f555437'],1,3,4,1,1.0,1.0,1.0
eea53a1e1f53c3e4bd2c742e8f7ad2b6ce97c3a5,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-12 22:55:39-07:00,25200,2018-03-12 22:55:39-07:00,25200,True,False,['setup.py'],['b255fb36ba746bbef68bac0a27a1cd9f02593af2'],1,1,2,1,,,
ba4dbf4df2fc11e1172b1f6c52fcf9f24814bd89,Add signed division,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-13 10:22:14-07:00,25200,2018-03-13 10:22:14-07:00,25200,True,False,['bit_vector.py'],['eea53a1e1f53c3e4bd2c742e8f7ad2b6ce97c3a5'],3,11,14,1,1.0,1.0,1.0
e7167c144f4163940ddc4d6189c15fed87f129e6,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-13 10:22:26-07:00,25200,2018-03-13 10:22:26-07:00,25200,True,False,['setup.py'],['ba4dbf4df2fc11e1172b1f6c52fcf9f24814bd89'],1,1,2,1,,,
7aa8ed442cb8884af7193de28688ac9c264d1104,Fix bug in shift mask,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-21 15:54:50-07:00,25200,2018-03-21 15:54:50-07:00,25200,True,False,['bit_vector.py'],['e7167c144f4163940ddc4d6189c15fed87f129e6'],2,2,4,1,,,
33656d622c9073a9b409c0d7638b77fad025d580,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-21 15:57:58-07:00,25200,2018-03-21 15:57:58-07:00,25200,True,False,['setup.py'],['7aa8ed442cb8884af7193de28688ac9c264d1104'],1,1,2,1,,,
fec7d17dfb11638ae5f847a28c58fd63f8c5b86a,Fix bug in signed logic,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-21 18:58:10-07:00,25200,2018-03-21 18:58:10-07:00,25200,True,False,['bit_vector.py'],['33656d622c9073a9b409c0d7638b77fad025d580'],2,4,6,1,0.0,0.0,0.0
a16801a7ca70ce3f021feb240a5132d65ecf2aac,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-21 18:58:27-07:00,25200,2018-03-21 18:58:27-07:00,25200,True,False,['setup.py'],['fec7d17dfb11638ae5f847a28c58fd63f8c5b86a'],1,1,2,1,,,
e01100d3d27dd9af0c733d01df9bfababe1b95f0,Fix bug in getting signed value,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-21 21:22:20-07:00,25200,2018-03-21 21:22:20-07:00,25200,True,False,"['bit_vector.py', 'setup.py']",['a16801a7ca70ce3f021feb240a5132d65ecf2aac'],7,5,12,2,0.0,0.0,0.0
7d44348eb53bd692e1fd9c8e927f827d7f1d2aeb,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-22 14:29:18-07:00,25200,2018-03-22 14:29:18-07:00,25200,True,False,"['bit_vector.py', 'setup.py']",['e01100d3d27dd9af0c733d01df9bfababe1b95f0'],10,14,24,2,0.0,0.0,0.0
2e195d663b6a0935a869a5ecc3e0f40d3cce1687,Update version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-22 14:34:15-07:00,25200,2018-03-22 14:34:15-07:00,25200,True,False,"['bit_vector.py', 'setup.py']",['7d44348eb53bd692e1fd9c8e927f827d7f1d2aeb'],2,2,4,2,,,
443ceb4110213dc2035c612d5c16f99bc13f7234,Fix bug in signed logic,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-22 18:25:54-07:00,25200,2018-03-22 18:25:54-07:00,25200,True,False,"['bit_vector.py', 'setup.py']",['2e195d663b6a0935a869a5ecc3e0f40d3cce1687'],8,9,17,2,0.0,0.0,0.0
240d669b50112c3802227445f7295dbecb576965,Fix more issues with signed logic,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-22 18:38:40-07:00,25200,2018-03-22 18:38:40-07:00,25200,True,False,"['bit_vector.py', 'setup.py']",['443ceb4110213dc2035c612d5c16f99bc13f7234'],9,9,18,2,0.0,0.0,0.0
7059e3c7a99754720b8309fa18c22bdd8ed8829d,Add bitstring method,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-24 11:02:57-07:00,25200,2018-03-24 11:02:57-07:00,25200,True,False,['bit_vector.py'],['240d669b50112c3802227445f7295dbecb576965'],1,8,9,1,1.0,1.0,1.0
0b13acc1ac58631e5f36b9ac49745706ac74efb6,bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-24 11:03:17-07:00,25200,2018-03-24 11:03:17-07:00,25200,True,False,['setup.py'],['7059e3c7a99754720b8309fa18c22bdd8ed8829d'],1,1,2,1,,,
b771dda827597ccb2237a6808b888d86a95f8dc4,"Fix ordering in bit_string, fix bug in invert",Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-24 12:53:25-07:00,25200,2018-03-24 12:53:25-07:00,25200,True,False,['bit_vector.py'],['0b13acc1ac58631e5f36b9ac49745706ac74efb6'],2,2,4,1,,,
805de96387b00034e03a64f70eff48b2bc0c33c9,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-24 12:53:38-07:00,25200,2018-03-24 12:53:38-07:00,25200,True,False,['setup.py'],['b771dda827597ccb2237a6808b888d86a95f8dc4'],1,1,2,1,,,
6532b465658b7931ecd73b395acfe0a03da0cd0e,Return full multiply result,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-27 17:59:20-10:00,36000,2018-03-27 17:59:20-10:00,36000,True,False,['bit_vector.py'],['805de96387b00034e03a64f70eff48b2bc0c33c9'],3,5,8,1,1.0,1.0,1.0
44f3f6b08ffcd4c9b272a3342922a05223b314e8,Bump version number,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-03-27 17:59:29-10:00,36000,2018-03-27 17:59:29-10:00,36000,True,False,['setup.py'],['6532b465658b7931ecd73b395acfe0a03da0cd0e'],1,1,2,1,,,
3cdb0350e8778f9e74bbba1184d2100ab04e27bb,Add __int__ method,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-11 10:29:08-07:00,25200,2018-04-11 10:29:08-07:00,25200,True,False,"['bit_vector.py', 'setup.py', 'test_int.py']",['44f3f6b08ffcd4c9b272a3342922a05223b314e8'],1,15,16,3,1.0,1.0,1.0
3fb36aa5da2cfa707d42b49c5d43fe16cb0fe39a,Add travis script,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-11 10:31:09-07:00,25200,2018-04-11 10:31:09-07:00,25200,True,False,['.travis.yml'],['3cdb0350e8778f9e74bbba1184d2100ab04e27bb'],0,10,10,1,,,
2e5a32a3ac970ec63b683ed23c4b2539080c655d,Add deploy logic,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-11 10:32:24-07:00,25200,2018-04-11 10:32:24-07:00,25200,True,False,"['.gitignore', '.travis.yml']",['3fb36aa5da2cfa707d42b49c5d43fe16cb0fe39a'],6,12,18,2,,,
cfd80e9b843a6fb3bec9db91dce22fce6f9cdf45,Add readme,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-11 10:32:58-07:00,25200,2018-04-11 10:32:58-07:00,25200,True,False,['README.md'],['2e5a32a3ac970ec63b683ed23c4b2539080c655d'],0,5,5,1,,,
cc19cdc21f5b15192e3d618d34dc7e049ecae7e1,Install pytest-cov,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-11 10:33:20-07:00,25200,2018-04-11 10:33:20-07:00,25200,True,False,['.travis.yml'],['cfd80e9b843a6fb3bec9db91dce22fce6f9cdf45'],0,1,1,1,,,
d9a91ab1f3613441dc0bf98a1adf9946dc8d376d,Add package meta-data,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-11 10:35:06-07:00,25200,2018-04-11 10:35:06-07:00,25200,True,False,['setup.py'],['cc19cdc21f5b15192e3d618d34dc7e049ecae7e1'],0,3,3,1,,,
db33143082aed1f181d29df9a4873825925d20d7,Add missing comma,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-11 10:37:03-07:00,25200,2018-04-11 10:37:03-07:00,25200,True,False,['setup.py'],['d9a91ab1f3613441dc0bf98a1adf9946dc8d376d'],1,1,2,1,,,
1f0eb2b1296a19571d39d898355377986c811ae6,Only deploy on tags,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-11 10:38:52-07:00,25200,2018-04-11 10:38:52-07:00,25200,True,False,['.travis.yml'],['db33143082aed1f181d29df9a4873825925d20d7'],0,1,1,1,,,
1441b7c41d171cfb2c2d3c2d94d55a3cdc2279b7,Remove requires logic from setup.py,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-11 10:50:51-07:00,25200,2018-04-11 10:50:51-07:00,25200,True,False,['setup.py'],['1f0eb2b1296a19571d39d898355377986c811ae6'],10,10,20,1,,,
cffcd7251303c4db5c6034194a6d0a18bebef22e,Add support for X values,Brennan Shacklett,bpshacklett@gmail.com,Brennan Shacklett,bpshacklett@gmail.com,2018-04-13 11:45:47-07:00,25200,2018-04-13 11:45:47-07:00,25200,True,False,['bit_vector.py'],['44f3f6b08ffcd4c9b272a3342922a05223b314e8'],7,71,78,1,0.8333333333333334,0.38095238095238093,0.8333333333333334
e2ea086fd96e6d7964062f307bde8d159b94a3f5,Add unsigned_value,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-18 15:23:16-07:00,25200,2018-04-18 15:23:16-07:00,25200,True,False,['bit_vector.py'],['f09e63f52c65d0fd1695a0424341363cd3c52e3c'],1,4,5,1,1.0,1.0,1.0
8e512d04156140ece35a0a20f94ff4ba937fbf0f,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-18 15:23:52-07:00,25200,2018-04-18 15:23:52-07:00,25200,True,False,['setup.py'],['e2ea086fd96e6d7964062f307bde8d159b94a3f5'],1,1,2,1,,,
eee47609a3cee23e951d41465cf3a75a69b6e24f,Fix bug with no_x_support,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-19 07:21:01-07:00,25200,2018-04-19 07:21:01-07:00,25200,True,False,"['bit_vector.py', 'setup.py']",['8e512d04156140ece35a0a20f94ff4ba937fbf0f'],3,3,6,2,,,
0a9d49821ecc2210ecd3b16859acf72f9cb0cae4,Fix bug in __or__,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-04-19 08:32:42-07:00,25200,2018-04-19 08:32:42-07:00,25200,True,False,"['bit_vector.py', 'setup.py']",['eee47609a3cee23e951d41465cf3a75a69b6e24f'],2,2,4,2,,,
7ecd7cb657e5fddc33fc614ae2b5f9ebd106b95c,Add a license,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-06-20 15:53:14-07:00,25200,2018-06-20 15:53:14-07:00,25200,True,False,['LICENSE.txt'],['0a9d49821ecc2210ecd3b16859acf72f9cb0cae4'],0,26,26,1,,,
7acdf51a250e01be94f3ebe83120a39b179da7c7,Add static 'concat' method to BitVector,Raj Setaluri,raj.setaluri@gmail.com,Raj Setaluri,raj.setaluri@gmail.com,2018-06-29 18:27:15-07:00,25200,2018-06-29 18:43:01-07:00,25200,True,False,"['bit_vector.py', 'test_concat.py']",['7ecd7cb657e5fddc33fc614ae2b5f9ebd106b95c'],0,15,15,2,1.0,1.0,1.0
c93bffb7b9f8a8795f2ffe2a433a0119593a210e,Release concat static method,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-07-01 20:13:31-07:00,25200,2018-07-01 20:13:31-07:00,25200,True,False,['setup.py'],['e4dd4e1d5da48620b305c0753f355be9b958e936'],1,1,2,1,,,
376b47623e6d9332188a1c41a796bfac0dfdb7a0,Preserve signed flag in operators,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-07-09 10:04:09-07:00,25200,2018-07-09 10:04:09-07:00,25200,True,False,"['.gitignore', 'bit_vector.py', 'setup.py', 'test_operators.py']",['c93bffb7b9f8a8795f2ffe2a433a0119593a210e'],25,71,96,4,1.0,1.0,0.0
8033b2577546c22b5e9923353cc0683a35f1d678,Fixup logic for signed initialization with bit list,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-07-24 14:28:15-07:00,25200,2018-07-24 14:28:15-07:00,25200,True,False,['bit_vector.py'],['376b47623e6d9332188a1c41a796bfac0dfdb7a0'],2,0,2,1,1.0,1.0,1.0
ee9fa72edae3e622938fdedfbf1a7c5f9395e1a9,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-07-24 14:28:26-07:00,25200,2018-07-24 14:28:26-07:00,25200,True,False,['setup.py'],['8033b2577546c22b5e9923353cc0683a35f1d678'],1,1,2,1,,,
f18db1527babcb2d00c280049151411448efeabe,Add support for equality with X values,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-07-24 20:19:49-07:00,25200,2018-07-24 20:19:49-07:00,25200,True,False,['bit_vector.py'],['ee9fa72edae3e622938fdedfbf1a7c5f9395e1a9'],1,8,9,1,1.0,0.3333333333333333,1.0
5d7a8116fb30ac80684bc9bc24464bc05212fd41,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-07-24 20:19:56-07:00,25200,2018-07-24 20:19:56-07:00,25200,True,False,['setup.py'],['f18db1527babcb2d00c280049151411448efeabe'],1,1,2,1,,,
3fe33d9a4da9097634595c32b2d498076e561b78,Add a __hash__ method,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-07-24 21:16:26-07:00,25200,2018-07-24 21:16:26-07:00,25200,True,False,"['bit_vector.py', 'setup.py']",['5d7a8116fb30ac80684bc9bc24464bc05212fd41'],1,4,5,2,1.0,1.0,1.0
12b0b2e8898b8df6c1d20b03a8e718550fa8601a,"New implementation of bit_vector. Added UIntVector and SIntVector.
Conforms better to the smtlib BV interface.",Pat Hanrahan,hanrahan@cs.stanford.edu,Pat Hanrahan,hanrahan@cs.stanford.edu,2018-07-31 07:42:47-07:00,25200,2018-07-31 07:42:47-07:00,25200,True,False,"['bit_vector.py', 'test_bv.py', 'test_concat.py', 'test_int.py', 'test_operators.py', 'test_sint.py', 'test_uint.py']",['3fe33d9a4da9097634595c32b2d498076e561b78'],294,490,784,7,1.0,1.0,0.5428571428571428
8fce70b0e24a20f91c9db56bbdb8da9a8c6cad20,Fixed a couple of bugs in BitVector.,Pat Hanrahan,hanrahan@cs.stanford.edu,Pat Hanrahan,hanrahan@cs.stanford.edu,2018-07-31 14:50:44-07:00,25200,2018-07-31 14:50:44-07:00,25200,True,False,['bit_vector.py'],['12b0b2e8898b8df6c1d20b03a8e718550fa8601a'],7,8,15,1,,,
2b3e8043e6a38b3698400a0a2c72270d92f1ae00,WIP,Pat Hanrahan,hanrahan@cs.stanford.edu,Pat Hanrahan,hanrahan@cs.stanford.edu,2018-08-01 17:24:04-07:00,25200,2018-08-01 17:24:04-07:00,25200,True,False,"['bit_vector.py', 'test_bv.py', 'test_uint.py']",['8fce70b0e24a20f91c9db56bbdb8da9a8c6cad20'],43,63,106,3,1.0,0.1875,1.0
c41734a0cb898d9f0d3ec5555f98144a524dbd49,Update @no_x to support functions with arguments,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-08-02 09:54:55+08:00,-28800,2018-08-02 09:54:55+08:00,-28800,True,False,['bit_vector.py'],['2b3e8043e6a38b3698400a0a2c72270d92f1ae00'],2,2,4,1,,,0.0
b68453212922629d0bb5bd8843f38f06e413858b,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-08-11 17:49:40-07:00,25200,2018-08-11 17:49:40-07:00,25200,True,False,['setup.py'],['e8f8671e296da0a8abf6e0d1c3e1f46d602059af'],1,1,2,1,,,
70c1557865e5c68e3c92460114c0fe9e3f893987,Fix bug in extension logic,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-08-12 19:12:44-07:00,25200,2018-08-12 19:12:44-07:00,25200,True,False,['bit_vector.py'],['b68453212922629d0bb5bd8843f38f06e413858b'],2,2,4,1,,,
045b86c7fe43570a4174b0138318cb85a4544270,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-08-12 19:13:11-07:00,25200,2018-08-12 19:13:11-07:00,25200,True,False,['setup.py'],['70c1557865e5c68e3c92460114c0fe9e3f893987'],1,1,2,1,,,
a117eeb0e8a041acf3da9245c4b52a744186a2f2,Add general ext method,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-08-12 20:13:53-07:00,25200,2018-08-12 20:13:53-07:00,25200,True,False,['bit_vector.py'],['045b86c7fe43570a4174b0138318cb85a4544270'],0,8,8,1,1.0,1.0,1.0
f56e4cffc45145c21480969bae8ebfb5c86d06ca,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-08-12 20:18:25-07:00,25200,2018-08-12 20:18:25-07:00,25200,True,False,['setup.py'],['a117eeb0e8a041acf3da9245c4b52a744186a2f2'],1,1,2,1,,,
7e36c5818b479840c6b231321aaec256ab53f691,Use repr for __hash__ so different types to collide,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-08-23 13:32:43-07:00,25200,2018-08-23 13:32:43-07:00,25200,True,False,['bit_vector.py'],['f56e4cffc45145c21480969bae8ebfb5c86d06ca'],5,7,12,1,,,
798da79f281c992ccc4d908e7df0ea7863734bc4,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-08-23 13:33:21-07:00,25200,2018-08-23 13:33:21-07:00,25200,True,False,['setup.py'],['7e36c5818b479840c6b231321aaec256ab53f691'],1,1,2,1,,,
320f1637271635840bade21c064cd011b740bdda,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-08-23 15:26:47-07:00,25200,2018-08-23 15:26:47-07:00,25200,True,False,"['bit_vector.py', 'setup.py']",['798da79f281c992ccc4d908e7df0ea7863734bc4'],2,2,4,2,,,
be57a1928b1852dd984b067a157d50edcb1e4a29,Bump version again,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-09-20 11:32:12-07:00,25200,2018-09-20 11:32:12-07:00,25200,True,False,['setup.py'],['320f1637271635840bade21c064cd011b740bdda'],1,1,2,1,,,
9549e77bd894f2eb965afdd2ec95e057ecd84a61,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-10-10 20:10:39-07:00,25200,2018-10-10 20:10:39-07:00,25200,True,False,['setup.py'],['be57a1928b1852dd984b067a157d50edcb1e4a29'],1,1,2,1,,,
812a8dfceaeb464503bfef96a5cb58be2b03477a,Changed string print format,Cristian Mattarei,mattarei@stanford.edu,Cristian Mattarei,mattarei@stanford.edu,2018-10-16 09:11:22-07:00,25200,2018-10-16 09:11:22-07:00,25200,True,False,['bit_vector.py'],['9549e77bd894f2eb965afdd2ec95e057ecd84a61'],3,3,6,1,,,
7faf0984fef4f5a936a53c57e4d4218549f9870f,Add 3.5 to travis,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-10-17 08:24:25-07:00,25200,2018-10-17 08:24:25-07:00,25200,True,False,"['.travis.yml', 'setup.py']",['9c06a0fd864b72e89778246739db3bea5a1202ec'],1,2,3,2,,,
ccc539d3db545199c1773d2e1e70d7b9034f63bd,fixed setitem bug and added test,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2018-10-17 11:08:06-07:00,25200,2018-10-17 11:08:06-07:00,25200,True,False,"['bit_vector.py', 'test_bv.py']",['7faf0984fef4f5a936a53c57e4d4218549f9870f'],0,11,11,2,1.0,1.0,0.9
9bba813a383cde7ec7c3c32c6a9648f8ba57ff2f,Bump version,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2018-10-17 13:10:32-07:00,25200,2018-10-17 13:10:32-07:00,25200,True,False,['setup.py'],['7faf0984fef4f5a936a53c57e4d4218549f9870f'],1,1,2,1,,,
a988ec689ad2e10770c36875611d6302985f8f64,Added adc and overflow. Changed zext to not wrap output type.,Pat Hanrahan,hanrahan@cs.stanford.edu,Pat Hanrahan,hanrahan@cs.stanford.edu,2019-01-04 11:30:46-08:00,28800,2019-01-04 11:30:46-08:00,28800,True,False,['bit_vector.py'],['8479078d8ad7d07a01141cc0cfe2a299a5d874a6'],7,23,30,1,1.0,1.0,0.0
a08f1edfde7e34961d0467cccbf4ed038a5d68ac,Remove commented debug print,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-07 15:21:08-08:00,28800,2019-01-07 15:21:08-08:00,28800,True,False,['bit_vector.py'],['a988ec689ad2e10770c36875611d6302985f8f64'],1,0,1,1,,,
05a206b39e63edc02f7eeb493910ef80fe31839a,Minor formatting,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-07 15:22:08-08:00,28800,2019-01-07 15:22:08-08:00,28800,True,False,['bit_vector.py'],['a08f1edfde7e34961d0467cccbf4ed038a5d68ac'],1,1,2,1,,,
e940ca36ee4b6713d73622e0a122f051219fad68,"Reformat comment into docstring, add comment on c extension calculation",Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-07 15:25:28-08:00,28800,2019-01-07 15:25:28-08:00,28800,True,False,['bit_vector.py'],['05a206b39e63edc02f7eeb493910ef80fe31839a'],2,8,10,1,,,
14bfea315e10f26e9440f087de6e28a544926227,Minor formatting,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-07 15:26:36-08:00,28800,2019-01-07 15:26:36-08:00,28800,True,False,['bit_vector.py'],['e940ca36ee4b6713d73622e0a122f051219fad68'],4,4,8,1,,,
5fa088daa9e754047f2ca245e749610a16d30a1e,Add basic tests for sext/zext,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-07 16:13:02-08:00,28800,2019-01-07 16:13:02-08:00,28800,True,False,['test_ext.py'],['14bfea315e10f26e9440f087de6e28a544926227'],0,38,38,1,1.0,1.0,0.0
9d6731cd6a0852211f6c1093122bde35496d7d65,Add test for adc,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-07 16:19:21-08:00,28800,2019-01-07 16:19:21-08:00,28800,True,False,['test_adc.py'],['5fa088daa9e754047f2ca245e749610a16d30a1e'],0,20,20,1,1.0,1.0,0.0
2b23d31613745a6abe53d8957079571cdd0c37cf,Don't allow 0 width in test parameters,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-07 16:22:13-08:00,28800,2019-01-07 16:22:13-08:00,28800,True,False,"['bit_vector.py', 'test_adc.py']",['9d6731cd6a0852211f6c1093122bde35496d7d65'],4,4,8,2,,,
86f9be8ad7f47c1609d8e816c7ccb40469478c55,Add tests for overflow,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-07 16:33:34-08:00,28800,2019-01-07 16:33:34-08:00,28800,True,False,['test_overflow.py'],['2b23d31613745a6abe53d8957079571cdd0c37cf'],0,20,20,1,1.0,0.0,1.0
4ef701b8b9dd5f80b7672cad72769a7efe4de884,Revert cast changes for now,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-07 16:35:35-08:00,28800,2019-01-07 16:35:35-08:00,28800,True,False,['bit_vector.py'],['86f9be8ad7f47c1609d8e816c7ccb40469478c55'],3,3,6,1,,,
b094101803c8c2afe4fc6e71708d2cfa8ccea3c3,Revert changes to extension casting,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-08 08:35:21-08:00,28800,2019-01-08 08:35:21-08:00,28800,True,False,['bit_vector.py'],['4ef701b8b9dd5f80b7672cad72769a7efe4de884'],3,3,6,1,,,
4ffcb00f021b8f79aba885b504ba5c1d63e036b5,Bump version for release,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-08 08:36:01-08:00,28800,2019-01-08 08:36:01-08:00,28800,True,False,['setup.py'],['12da6e838a71e7476741b57c9e94b87a568a7007'],1,1,2,1,,,
c4d53f97aac2d401585777a257b05c64ab0f61c4,Skip divide by zero test,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-08 08:55:19-08:00,28800,2019-01-08 08:55:19-08:00,28800,True,False,['test_sint.py'],['4ffcb00f021b8f79aba885b504ba5c1d63e036b5'],0,3,3,1,1.0,1.0,0.0
13dbd026037e3cbf212811319b71939bde5b0a2c,Bump version for release,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-08 09:24:11-08:00,28800,2019-01-08 09:24:11-08:00,28800,True,False,['setup.py'],['c4d53f97aac2d401585777a257b05c64ab0f61c4'],1,1,2,1,,,
b40a209e40cf8b9eb7c325874ab18b8d23199a84,"Remove casting logic for extension operators

Closes #13",Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-08 13:02:42-08:00,28800,2019-01-08 13:02:42-08:00,28800,True,False,['bit_vector.py'],['13dbd026037e3cbf212811319b71939bde5b0a2c'],3,26,29,1,,,
3c4133dff95888ad1a7ca4a7d95296d556fec84b,Bump version for release,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-08 13:03:29-08:00,28800,2019-01-08 13:03:29-08:00,28800,True,False,['setup.py'],['b40a209e40cf8b9eb7c325874ab18b8d23199a84'],1,1,2,1,,,
ecafc7118f05b6e6f010a6bc5b86765e2ab8dcb8,Use job stages for deployment,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-08 14:35:28-08:00,28800,2019-01-08 14:35:28-08:00,28800,True,False,['.travis.yml'],['3c4133dff95888ad1a7ca4a7d95296d556fec84b'],10,15,25,1,,,
1d2ebd647bc2700e457302f03be3dd9056a4af27,Use functools.wraps,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-01-10 14:42:40-08:00,28800,2019-01-10 14:42:40-08:00,28800,True,False,['bit_vector.py'],['ecafc7118f05b6e6f010a6bc5b86765e2ab8dcb8'],0,5,5,1,1.0,1.0,1.0
793a179eaabe415dd843001e485be16f9b37aa5a,Fix script key in travis.yml,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-10 16:01:58-08:00,28800,2019-01-10 16:01:58-08:00,28800,True,False,['.travis.yml'],['ecafc7118f05b6e6f010a6bc5b86765e2ab8dcb8'],2,1,3,1,,,
53e2c5d77bc8fc7cda91b9343dc58fb4c482886b,Move test script out of jobs,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-01-10 16:05:47-08:00,28800,2019-01-10 16:05:47-08:00,28800,True,False,['.travis.yml'],['793a179eaabe415dd843001e485be16f9b37aa5a'],2,1,3,1,,,
067a6acc1b09bc6fbaa11d2ed2d6422145c69200,Minor bug fix,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-01-10 17:52:40-08:00,28800,2019-01-10 17:52:40-08:00,28800,True,False,['bit_vector.py'],['213ae2b24ab8896740daff70bddfc47be5258b20'],1,1,2,1,,,
3a5888e2b0bbb724bf7b0de239d1766409694893,bit_vector_abc,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-01-17 15:22:16-08:00,28800,2019-01-17 15:22:16-08:00,28800,True,False,"['bit_vector.py', 'bit_vector_abc.py']",['d319d513652f3c3455ab613dfa5119331a8db82d'],78,189,267,2,1.0,1.0,0.78125
a7e199cdd7b98fecf4736b1d3b2e3039a9497c5c,Added ite.,Pat Hanrahan,hanrahan@cs.stanford.edu,Pat Hanrahan,hanrahan@cs.stanford.edu,2019-01-24 08:17:13-08:00,28800,2019-01-24 08:17:13-08:00,28800,True,False,"['bit_vector.py', 'test_adc.py', 'test_ite.py']",['d319d513652f3c3455ab613dfa5119331a8db82d'],0,30,30,3,1.0,1.0,0.5833333333333334
09588b6aba0ca79786059847ab25ee3f5d452f5a,Update abc,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-01-30 21:25:38-08:00,28800,2019-01-30 21:25:38-08:00,28800,True,False,['bit_vector_abc.py'],['73c5c342aca65a1ba351b0a001d2b5f975dad3f0'],0,4,4,1,1.0,1.0,0.0
87870ca91c5268904553e1134cd8582141316e1e,Rename BitVecAbc; remove seitem from base ABC,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-13 21:18:30-08:00,28800,2019-02-13 21:18:30-08:00,28800,True,False,"['__init__.py', 'bit_vector.py', 'bit_vector_abc.py']",['09588b6aba0ca79786059847ab25ee3f5d452f5a'],8,5,13,3,0.0,0.0,1.0
b9e019e3eba6f62a60065e328bdf57a96bc040e7,Move to BitVector[size] syntax,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-14 15:37:48-08:00,28800,2019-02-14 15:37:48-08:00,28800,True,False,"['bit_vector.py', 'bit_vector_abc.py', 'test_adc.py', 'test_bv.py', 'test_concat.py', 'test_ext.py', 'test_ite.py', 'test_overflow.py', 'test_sint.py', 'test_uint.py']",['87870ca91c5268904553e1134cd8582141316e1e'],107,159,266,10,0.16129032258064516,1.0,1.0
c3b9f31059652169b589bb20cfcc8f61dc37808b,Remove format string,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-14 15:53:19-08:00,28800,2019-02-14 15:53:19-08:00,28800,True,False,['bit_vector_abc.py'],['b9e019e3eba6f62a60065e328bdf57a96bc040e7'],1,1,2,1,,,
cad87c5c00b09e56a8ee6351c41d5d641af8969d,Fix some bugs / add some tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-14 16:19:35-08:00,28800,2019-02-14 16:19:35-08:00,28800,True,False,"['bit_vector.py', 'bit_vector_abc.py', 'test_div.py']",['c3b9f31059652169b589bb20cfcc8f61dc37808b'],8,29,37,3,0.6,0.0,0.0
662885156ea9bba0584865ef46c172549fa511eb,Fix broken ite test,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-14 16:28:58-08:00,28800,2019-02-14 16:28:58-08:00,28800,True,False,['test_ite.py'],['cad87c5c00b09e56a8ee6351c41d5d641af8969d'],2,2,4,1,,,
9526606ca9bff88e4587dcac4ecbb7498b9ff0be,Fix how bases are generated in meta.__getitem__; add tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-14 16:56:31-08:00,28800,2019-02-14 16:56:31-08:00,28800,True,False,"['bit_vector_abc.py', 'test_meta.py']",['662885156ea9bba0584865ef46c172549fa511eb'],6,33,39,2,0.0,1.0,1.0
9d67e0157b2d7e4a54f1fce344f0d6f17311f14d,Remove extraneous if,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-14 16:59:29-08:00,28800,2019-02-14 16:59:29-08:00,28800,True,False,['bit_vector_abc.py'],['9526606ca9bff88e4587dcac4ecbb7498b9ff0be'],2,1,3,1,1.0,1.0,0.0
b1c03c8cad23eda056ef7245f38dd1393c0e0a02,add support for inheriting from sized types,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-20 10:55:24-08:00,28800,2019-02-20 10:55:24-08:00,28800,True,False,"['bit_vector_abc.py', 'test_meta.py']",['9d67e0157b2d7e4a54f1fce344f0d6f17311f14d'],17,96,113,2,0.48214285714285715,0.75,0.75
0b95792526a1c5fcfae9f79d82e3f9aa3a910824,"Add AbstractBit, type annotations",Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-21 18:38:15-08:00,28800,2019-02-21 18:38:15-08:00,28800,True,False,"['bit_vector.py', 'bit_vector_abc.py', 'test_bv.py', 'test_meta.py', 'test_sint.py', 'test_uint.py']",['b1c03c8cad23eda056ef7245f38dd1393c0e0a02'],92,224,316,6,0.8554216867469879,0.8795180722891566,0.7349397590361446
2cff240d300aedd545a6a151364a15a75c9d2ea0,"Rewite bitvector

Change signature of most operators from
OP :: BitVector[k] -> BitVector[j] -> BitVector[k]
to
OP :: BitVector[k] -> BitVector[k] -> BitVector[k]",Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-22 17:48:48-08:00,28800,2019-02-22 17:49:09-08:00,28800,True,False,"['bit_vector.py', 'bit_vector_abc.py', 'test_adc.py', 'test_bv.py']",['0b95792526a1c5fcfae9f79d82e3f9aa3a910824'],244,147,391,4,0.0,0.3333333333333333,0.0
bb488d66608d398ba2357926628a430da805f8e0,Use type(self) instead of explicit types,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-22 18:01:25-08:00,28800,2019-02-22 18:01:38-08:00,28800,True,False,['bit_vector.py'],['2cff240d300aedd545a6a151364a15a75c9d2ea0'],11,10,21,1,1.0,0.0,1.0
c1d38f8d5c4fb792f4608a32345699be0e1b79c6,Add support for old style bitvectors,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-27 19:52:17-08:00,28800,2019-02-27 19:52:17-08:00,28800,True,False,['bit_vector_abc.py'],['bb488d66608d398ba2357926628a430da805f8e0'],20,32,52,1,0.0,0.0,0.0
1fede059c1db3487cb6fdd9557211ea39589e6b0,Bug fix,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-27 19:57:45-08:00,28800,2019-02-27 19:57:45-08:00,28800,True,False,['bit_vector_abc.py'],['c1d38f8d5c4fb792f4608a32345699be0e1b79c6'],2,2,4,1,,,
a0b15984db180a909b71e8ef567a9d2cbf1cc677,Add TypeFamily,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-27 20:16:04-08:00,28800,2019-02-27 20:16:04-08:00,28800,True,False,"['bit_vector.py', 'bit_vector_abc.py']",['1fede059c1db3487cb6fdd9557211ea39589e6b0'],1,25,26,2,1.0,1.0,1.0
c6cdf28cc1ed2d7c2fd7793f5f0c2a7cfe899ce5,Release 1.0.0,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-02-28 12:20:24-08:00,28800,2019-02-28 12:20:24-08:00,28800,True,False,['setup.py'],['1c741f817ba4cbc03e8f7577be114689e5217183'],1,1,2,1,,,
7e5d762f18901d1f2eb4360dbd6b35f486cc5136,Rename package,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-02-28 12:28:22-08:00,28800,2019-02-28 12:28:22-08:00,28800,True,False,"['__init__.py', 'bit_vector.py', 'bit_vector_abc.py', 'compatibility.py', 'setup.py', 'test_adc.py', 'test_bv.py', 'test_concat.py', 'test_div.py', 'test_ext.py', 'test_ite.py', 'test_meta.py', 'test_overflow.py', 'test_sint.py', 'test_uint.py']",['c6cdf28cc1ed2d7c2fd7793f5f0c2a7cfe899ce5'],16,16,32,15,,,
ed13c2d77906fb887cf435bb4747c23e4bccaad9,Update README,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-02-28 12:29:41-08:00,28800,2019-02-28 12:29:41-08:00,28800,True,False,['README.md'],['7e5d762f18901d1f2eb4360dbd6b35f486cc5136'],2,2,4,1,,,
c3f2b50a0ee27d60affed69be02096fc1c65faeb,Update setup.py,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-02-28 12:30:47-08:00,28800,2019-02-28 12:30:47-08:00,28800,True,False,['setup.py'],['ed13c2d77906fb887cf435bb4747c23e4bccaad9'],1,2,3,1,,,
a927e309460affd36d71e186628c0f0b736e915c,Test release of new package,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-02-28 12:31:24-08:00,28800,2019-02-28 12:31:24-08:00,28800,True,False,['setup.py'],['c3f2b50a0ee27d60affed69be02096fc1c65faeb'],1,1,2,1,,,
0f105effca371ea03cd3a1a4264c4bbe7990d2ce,Implement the corner case of x % 0,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-02-28 12:22:31-08:00,28800,2019-02-28 13:25:13-08:00,28800,True,False,['bit_vector.py'],['a927e309460affd36d71e186628c0f0b736e915c'],0,2,2,1,1.0,1.0,1.0
9e650251c5f085af1785cab83ee5f9b310d71ecf,Update travis script,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-02-28 13:35:55-08:00,28800,2019-02-28 13:35:55-08:00,28800,True,False,['.travis.yml'],['a927e309460affd36d71e186628c0f0b736e915c'],1,1,2,1,,,
c9f5839dab7aee3315efbe823dd3ee79c2e0fa20,Add long description,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-02-28 13:37:10-08:00,28800,2019-02-28 13:37:10-08:00,28800,True,False,['setup.py'],['9e650251c5f085af1785cab83ee5f9b310d71ecf'],0,5,5,1,,,
bda85f88f63d4dce8eda35ccc67c0785f8b2ade8,Update setup.py,Leonard (Lenny) Truong,leonardtruong@gmail.com,GitHub,noreply@github.com,2019-02-28 13:48:23-08:00,28800,2019-02-28 13:48:23-08:00,28800,True,False,['setup.py'],['13c550ef8d70702b227a297b8a95deb626289189'],1,1,2,1,,,
328c600f78989b882f6b1f2d036dc8dacc5b6fcb,Better error messages,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-28 15:23:47-08:00,28800,2019-02-28 15:23:47-08:00,28800,True,False,"['bit_vector.py', 'bit_vector_abc.py']",['bda85f88f63d4dce8eda35ccc67c0785f8b2ade8'],2,2,4,2,,,
452a2b622ddb71acf4a0948034b88f7d54cb4d5b,Better bit construction,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-02-28 15:37:13-08:00,28800,2019-02-28 15:37:13-08:00,28800,True,False,['bit_vector.py'],['6a9a8046ee7de53864dbaaf53750e083a8590f40'],3,7,10,1,1.0,0.0,1.0
700e76b2427d12edce51acbe8f81510c078966cf,Add setitem to abc,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-03-05 13:26:17-08:00,28800,2019-03-05 13:26:17-08:00,28800,True,False,"['bit_vector.py', 'bit_vector_abc.py']",['452a2b622ddb71acf4a0948034b88f7d54cb4d5b'],1,5,6,2,1.0,1.0,0.0
b8aa017f34eb08f800b398a8cc93f31a990cfc8b,Add range check on setitem,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-03-05 13:33:15-08:00,28800,2019-03-05 13:33:15-08:00,28800,True,False,['bit_vector.py'],['700e76b2427d12edce51acbe8f81510c078966cf'],0,7,7,1,1.0,0.0,0.0
92c49ac5b264fab96820f05e951b3cfd926aacba,"Minor fixes

Add more type checking
bvcomp -> BV[1] and bveq -> Bit
Make abc.__call__ more cooperative",Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-03-07 15:44:34-08:00,28800,2019-03-07 15:44:47-08:00,28800,True,False,"['bit_vector.py', 'bit_vector_abc.py']",['b8aa017f34eb08f800b398a8cc93f31a990cfc8b'],28,52,80,2,0.0,0.1111111111111111,0.9444444444444444
b3c020c943639392012cbf45314244600cb519be,Fix a bug; add tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-03-07 16:30:41-08:00,28800,2019-03-07 16:30:41-08:00,28800,True,False,"['bit_vector.py', 'test_bit.py', 'test_bv.py']",['92c49ac5b264fab96820f05e951b3cfd926aacba'],1,67,68,3,1.0,1.0,0.6666666666666666
ee72c09137c604e6ec322d1cbff28544262bfa6a,more tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-03-07 17:02:28-08:00,28800,2019-03-07 17:02:28-08:00,28800,True,False,"['test_bit.py', 'test_bv.py']",['b3c020c943639392012cbf45314244600cb519be'],0,10,10,2,1.0,1.0,1.0
77e3a4b976e73fd734dc36c2cb93fb9dd16d5f98,Add ite test,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-03-07 17:26:39-08:00,28800,2019-03-07 17:26:39-08:00,28800,True,False,['test_optypes.py'],['ee72c09137c604e6ec322d1cbff28544262bfa6a'],0,98,98,1,0.06779661016949153,0.6101694915254238,0.06779661016949153
bc42a14c53ccff4e2fc0fdd66a6b5e5726456c26,Release v1.0.2,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-03-08 10:36:08-08:00,28800,2019-03-08 10:36:08-08:00,28800,True,False,['setup.py'],['2a1754813f92059eb94a324b44b9d83617a0e3e0'],1,1,2,1,,,
7f74de8e12e2c5f4f66d95bdf9e664aacd8954b3,Fix as_bool_list,Raj Setaluri,raj.setaluri@gmail.com,Raj Setaluri,raj.setaluri@gmail.com,2019-03-12 14:49:33-07:00,25200,2019-03-12 14:49:33-07:00,25200,True,False,['bit_vector.py'],['bc42a14c53ccff4e2fc0fdd66a6b5e5726456c26'],1,1,2,1,,,
aa815d9c168f5c1d8c9ca6fe613d3cebb74f957a,Release v1.0.3,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-03-13 09:52:27-07:00,25200,2019-03-13 09:52:27-07:00,25200,True,False,['setup.py'],['7f74de8e12e2c5f4f66d95bdf9e664aacd8954b3'],1,1,2,1,,,
fc423667279f293de1b314d2f0ca7e4fc0b1e8e9,Fix bug with signed,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-03-13 13:24:23-07:00,25200,2019-03-13 13:24:23-07:00,25200,True,False,"['bit_vector.py', 'bit_vector_abc.py']",['7f74de8e12e2c5f4f66d95bdf9e664aacd8954b3'],1,6,7,2,1.0,1.0,1.0
c743c2b81395f29f089518c08369eb160ee528c6,Major adt rewrite,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-04-12 16:49:43-07:00,25200,2019-04-12 16:51:28-07:00,25200,True,False,"['adt.py', 'adt_meta.py', 'test_adt.py']",['25bbd9b61446892d7ea7487e5ab3ddedc37dc0ec'],0,531,531,3,0.7824858757062146,0.844632768361582,0.655367231638418
af0d9fb6931fe278d69787216f599f37f0521aef,Remove 3.5 from travis,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-04-22 11:17:36-07:00,25200,2019-04-22 11:17:36-07:00,25200,True,False,['.travis.yml'],['aa815d9c168f5c1d8c9ca6fe613d3cebb74f957a'],1,0,1,1,,,
e182b233164057c7f06d65d3d10109fdf6d1fdd2,Bump version for release,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-04-22 11:25:29-07:00,25200,2019-04-22 11:25:29-07:00,25200,True,False,['setup.py'],['4c375572228cd71c45bd804a9d32c7bafa2b51be'],1,1,2,1,,,
ca932489efd57f9d28bf988dc4da78d80f05e41a,Fix some bugs,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-04-23 15:40:04-07:00,25200,2019-04-23 15:40:04-07:00,25200,True,False,"['__init__.py', 'adt.py', 'adt_meta.py']",['e182b233164057c7f06d65d3d10109fdf6d1fdd2'],4,24,28,3,0.0,0.0,0.6153846153846154
69643e72a2a9c1d0e30d700cdfe2b2b5d8792152,Change Product to put base fields before declared own fields,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-04-23 15:47:38-07:00,25200,2019-04-23 15:47:38-07:00,25200,True,False,['adt_meta.py'],['ca932489efd57f9d28bf988dc4da78d80f05e41a'],6,9,15,1,0.0,0.0,0.0
882c0f988e715620afabd734ffae910d591b7ed6,Bump version for release,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-04-23 17:32:57-07:00,25200,2019-04-23 17:32:57-07:00,25200,True,False,['setup.py'],['10c3bbbe0453e3ee41e077f0586c4a846f034e2f'],1,1,2,1,,,
1c4684f5ec2df20bc6676e36b139b182e8b2a584,Move smt_bit_vector and add z3_bit_vector,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-04-23 13:55:02-07:00,25200,2019-04-24 12:20:44-07:00,25200,True,False,"['__init__.py', 'smt_bit_vector.py', 'z3_bit_vector.py']",['10c3bbbe0453e3ee41e077f0586c4a846f034e2f'],0,1120,1120,3,0.5849335302806499,0.5494830132939439,0.6085672082717873
bf6bd8f97ed440081e72267c918a399bdd85bc03,Update requirements / travis,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-04-26 13:08:10-07:00,25200,2019-04-26 13:08:10-07:00,25200,True,False,"['.travis.yml', 'requirements.txt', 'setup.py']",['1c4684f5ec2df20bc6676e36b139b182e8b2a584'],1,4,5,3,,,
a273aafcab2fc13814dd4567e9fd83dcf3b4a439,Release 1.0.6,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-04-26 13:22:49-07:00,25200,2019-04-26 13:22:49-07:00,25200,True,False,['setup.py'],['2f366a9ef7052d980561ef583492627b1ea491cd'],1,1,2,1,,,
f264c2488a6a5dfc2642a4d2ea80c2ca29a9f6f7,Add test / fix a bug,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-04-26 13:54:58-07:00,25200,2019-04-26 13:54:58-07:00,25200,True,False,"['z3_bit_vector.py', 'test_bv.py', 'test_smt_bit.py', 'test_smt_bv.py']",['a273aafcab2fc13814dd4567e9fd83dcf3b4a439'],7,77,84,4,1.0,1.0,0.4
0c388dfb36e0e8d5b2e129fe4d8ef8c1d73d96a5,update travis / setup,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-04-26 15:37:15-07:00,25200,2019-04-26 15:37:15-07:00,25200,True,False,"['.travis.yml', 'setup.py']",['25eb08f586bd267371cac8bb625bed791c17fb8c'],3,1,4,2,,,
3b2cf74522582956f1226ad7030f70a1ccd774ab,Move script into build stage,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-04-26 15:45:51-07:00,25200,2019-04-26 15:45:51-07:00,25200,True,False,['.travis.yml'],['25eb08f586bd267371cac8bb625bed791c17fb8c'],1,2,3,1,,,
951ed6f8a77bbe27d749a9170257a45c3a4f8d4d,Release 1.0.7,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-04-26 16:02:27-07:00,25200,2019-04-26 16:02:27-07:00,25200,True,False,['setup.py'],['807c82c99e6a3cb9cc14da7b20ecd8a04659315a'],1,1,2,1,,,
f1cc3837bec1f4309bcf67acfed469b69efe60a4,added default for enumerating,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2019-04-29 17:04:06-07:00,25200,2019-04-29 17:04:06-07:00,25200,True,False,['adt_meta.py'],['951ed6f8a77bbe27d749a9170257a45c3a4f8d4d'],1,1,2,1,,,
a342a8798f45f18c8469904ea58b39d28ff9f855,Release v1.0.9,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-04-30 13:28:33-07:00,25200,2019-04-30 13:36:03-07:00,25200,True,False,['setup.py'],['65439bb5e1d8f9afa7852c00a8378b622a9f986e'],1,1,2,1,,,
42957a643e53efb1fba04d8563de804348213d01,Basic support for field and value dict on Sum; Add tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-09 14:47:44-07:00,25200,2019-05-09 14:47:44-07:00,25200,True,False,"['adt.py', 'adt_meta.py', 'test_adt.py']",['a342a8798f45f18c8469904ea58b39d28ff9f855'],24,53,77,3,0.0,1.0,0.9473684210526315
b8d67e9d8cff6c9bfc7a38b93abc690bbf2bf377,Sligtly simpler Product; Add tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-09 16:59:41-07:00,25200,2019-05-09 16:59:41-07:00,25200,True,False,"['adt_meta.py', 'test_adt.py']",['42957a643e53efb1fba04d8563de804348213d01'],15,54,69,2,0.0,1.0,0.896551724137931
5d06e1d6a0965eaff2922a0ceed520c989ee8238,Simplify abc,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-15 21:11:03-07:00,25200,2019-05-15 21:11:03-07:00,25200,True,False,['bit_vector_abc.py'],['ababa3019ace5c05fb1646d6bc4c9e9fd321954c'],12,16,28,1,0.0,0.0,1.0
5f0159a3f1e5fd31663325c710b1c22fbea3f109,Add Floating point,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-15 21:14:55-07:00,25200,2019-05-15 21:14:55-07:00,25200,True,False,"['__init__.py', 'fp_vector.py', 'fp_vector_abc.py']",['5d06e1d6a0965eaff2922a0ceed520c989ee8238'],0,410,410,3,0.7028571428571428,0.7885714285714286,0.76
d65be8bed53ae0bfd74feb6dcc8eedfbc655079a,Update requirements,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-15 21:15:18-07:00,25200,2019-05-15 21:15:18-07:00,25200,True,False,"['.travis.yml', 'requirements.txt', 'setup.py']",['5f0159a3f1e5fd31663325c710b1c22fbea3f109'],2,7,9,3,,,
aa19bc8091592296d734419b26aeebcea2f0f517,Add tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-16 17:30:02-07:00,25200,2019-05-16 17:30:02-07:00,25200,True,False,"['fp_vector.py', 'test_fp.py']",['d65be8bed53ae0bfd74feb6dcc8eedfbc655079a'],1,212,213,2,0.7445255474452555,1.0,0.8102189781021898
cd3d3314b216f2d116d778f64527a15ee36cf4e5,Add reinterpret methods,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-16 22:19:55-07:00,25200,2019-05-16 22:19:55-07:00,25200,True,False,"['fp_vector.py', 'fp_vector_abc.py', 'test_fp.py']",['aa19bc8091592296d734419b26aeebcea2f0f517'],17,127,144,3,0.0,0.5774647887323944,0.7183098591549296
bd597ef31e342202fe8bcbad1a3ec98caddaf675,Better as_bv,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-16 22:35:45-07:00,25200,2019-05-16 22:35:45-07:00,25200,True,False,['fp_vector.py'],['cd3d3314b216f2d116d778f64527a15ee36cf4e5'],3,2,5,1,1.0,0.0,0.0
0e23809e5b9bd9208b37274cb7aee9de9b561906,Slight change to metaclass behavior; Add random generator; Bug fixes; Add tests;,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-17 16:29:18-07:00,25200,2019-05-17 16:29:18-07:00,25200,True,False,"['fp_vector.py', 'fp_vector_abc.py', 'test_fp.py']",['bd597ef31e342202fe8bcbad1a3ec98caddaf675'],74,200,274,3,0.5238095238095238,0.0,1.0
5bc80fbf873479d0ed8dbfae07f71ce6063c5806,Add __ALL__,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-20 14:07:10-07:00,25200,2019-05-20 14:07:10-07:00,25200,True,False,['fp_vector.py'],['0e23809e5b9bd9208b37274cb7aee9de9b561906'],0,2,2,1,,,
8bac23486d3811cf3f220ea4682e96060c1b931c,Add __int__ method for Bit,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-05-20 14:50:01-07:00,25200,2019-05-20 14:50:01-07:00,25200,True,False,['bit_vector.py'],['a342a8798f45f18c8469904ea58b39d28ff9f855'],0,3,3,1,1.0,1.0,1.0
0949fb6c67d6aab53f71a4f655c51b760e357baa,Update Install instructions,Caleb Donovick,cdonovick@users.noreply.github.com,GitHub,noreply@github.com,2019-05-20 16:09:02-07:00,25200,2019-05-20 16:09:02-07:00,25200,True,False,['README.md'],['5bc80fbf873479d0ed8dbfae07f71ce6063c5806'],0,9,9,1,,,
204c7b9b2803988f94bdeaa11e9d88f5d288ad6d,Finish missing methods,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-20 17:32:10-07:00,25200,2019-05-20 17:32:10-07:00,25200,True,False,"['fp_vector.py', 'test_fp.py']",['0949fb6c67d6aab53f71a4f655c51b760e357baa'],31,48,79,2,0.0,0.0,1.0
7bdec24c2b143afd33d7618f464214cd5122f29b,Wrap return with Bit,Caleb Donovick,cdonovick@users.noreply.github.com,GitHub,noreply@github.com,2019-05-21 11:27:18-07:00,25200,2019-05-21 11:27:18-07:00,25200,True,False,['fp_vector.py'],['204c7b9b2803988f94bdeaa11e9d88f5d288ad6d'],2,2,4,1,,,
281fc99a9885515e69f92fe7f38a66559ad48688,Release 1.0.10,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-05-21 14:30:14-07:00,25200,2019-05-21 14:30:14-07:00,25200,True,False,['setup.py'],['a4e7ee479e13953170447d7fd0f055c675638330'],1,1,2,1,,,
cc7e418eb3561970bd6ca87779f858528670b67c,Update README.md,Leonard (Lenny) Truong,lenny@stanford.edu,GitHub,noreply@github.com,2019-05-21 15:00:10-07:00,25200,2019-05-21 15:00:10-07:00,25200,True,False,['README.md'],['281fc99a9885515e69f92fe7f38a66559ad48688'],0,6,6,1,,,
b9d060fb856bfe76d602d9e8eebfbe6ca4706267,Allow construction from more types,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-22 11:13:47-07:00,25200,2019-05-22 11:13:47-07:00,25200,True,False,"['fp_vector.py', 'test_fp.py']",['281fc99a9885515e69f92fe7f38a66559ad48688'],4,53,57,2,0.17142857142857143,0.17142857142857143,1.0
acd599acdbce3336d56517b49c8ba6c88ac2b078,Add FPVector->FPVector constructor,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-22 12:29:53-07:00,25200,2019-05-22 12:30:05-07:00,25200,True,False,['fp_vector.py'],['b9d060fb856bfe76d602d9e8eebfbe6ca4706267'],3,7,10,1,0.0,0.0,1.0
1f165ed039a0c0fad34ac53e395b5435102cdfef,Add modifiers,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-22 13:32:31-07:00,25200,2019-05-22 13:32:31-07:00,25200,True,False,"['modifiers.py', 'test_modifiers.py']",['cc7e418eb3561970bd6ca87779f858528670b67c'],0,65,65,2,1.0,1.0,1.0
ce628c33c6a26c1e3bb9890f9b45975179d6bead,Move new to modifiers; use WeakValueDictionary for _sub_classes,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-22 13:37:59-07:00,25200,2019-05-22 13:39:30-07:00,25200,True,False,"['__init__.py', 'adt.py', 'modifiers.py']",['1f165ed039a0c0fad34ac53e395b5435102cdfef'],18,22,40,3,,,
794502f41e86f7d2d2a217df431dbe631e6548e7,Fix imports,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-22 13:48:04-07:00,25200,2019-05-22 13:48:04-07:00,25200,True,False,['test_adt.py'],['ce628c33c6a26c1e3bb9890f9b45975179d6bead'],2,3,5,1,,,
e47cfff6f718a0deaf9dc08158fa6a7ddfb43f7c,"Fix hwtypes.Enum import

Fixes issue where hwtypes.Enum was being overwritten by python Enum
(because of an import * in __init__.py).",Raj Setaluri,raj.setaluri@gmail.com,Raj Setaluri,raj.setaluri@gmail.com,2019-05-22 14:30:04-07:00,25200,2019-05-22 14:30:07-07:00,25200,True,False,['fp_vector_abc.py'],['cc7e418eb3561970bd6ca87779f858528670b67c'],7,7,14,1,,,
c6ff105cde39d768ccb6a81994e248e8f3c484c2,Release v1.0.11,Raj Setaluri,raj.setaluri@gmail.com,Raj Setaluri,raj.setaluri@gmail.com,2019-05-22 18:07:00-07:00,25200,2019-05-22 18:07:00-07:00,25200,True,False,['setup.py'],['331dd74ca4ac0eae236f2e965a01f10ff13148c8'],1,1,2,1,,,
16e8298099e1400df86669dda0b66b45d30e22d0,Simplify abc,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-20 13:37:23-07:00,25200,2019-05-28 12:11:58-07:00,25200,True,False,"['adt_meta.py', 'bit_vector_abc.py', 'fp_vector_abc.py', 'util.py']",['39a1503567ee165a1f5c5dcb7bc5bdfdab03b957'],70,180,250,4,0.0,0.7115384615384616,0.25
43e22a44fa16288a44c48e38c489e9ffe44270a8,Update tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-28 12:12:19-07:00,25200,2019-05-28 12:12:19-07:00,25200,True,False,['test_adt.py'],['16e8298099e1400df86669dda0b66b45d30e22d0'],63,72,135,1,0.0,1.0,1.0
0ca76c8f8477cf8d02a815cd8f5485065c36de53,Remove 3.7 requirement,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-05-28 12:35:23-07:00,25200,2019-05-28 12:35:23-07:00,25200,True,False,['adt_meta.py'],['43e22a44fa16288a44c48e38c489e9ffe44270a8'],2,2,4,1,,,
0aa596e0969d29fb8a8f8c098e81bde4d33d9756,Run coveralls after success,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-06-05 10:18:51-07:00,25200,2019-06-05 10:18:51-07:00,25200,True,False,['.travis.yml'],['39a1503567ee165a1f5c5dcb7bc5bdfdab03b957'],0,2,2,1,,,
0d7158f683b31c6855545ff85004aaf7763a01b6,Simplify build flow,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-06-05 10:19:42-07:00,25200,2019-06-05 10:19:42-07:00,25200,True,False,['.travis.yml'],['0aa596e0969d29fb8a8f8c098e81bde4d33d9756'],15,10,25,1,,,
cd9facdbb0d394445d8fd2c7200ca2d65b0d40b7,Remove debug code; Add tests; Improve documentation.,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-05 14:01:54-07:00,25200,2019-06-05 14:01:54-07:00,25200,True,False,"['util.py', 'test_util.py']",['0ca76c8f8477cf8d02a815cd8f5485065c36de53'],21,55,76,2,0.3333333333333333,1.0,1.0
5d80c8c5b03ffbbef42bb41c7285d78588da5cb2,Add __len__ to AbstractBitVectorMeta,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-07 14:13:54-07:00,25200,2019-06-07 14:13:54-07:00,25200,True,False,['bit_vector_abc.py'],['4ccd27e060eebd5e5851221ec739c49bbd5e20bd'],0,7,7,1,1.0,1.0,1.0
bafa75948bcfe616c72e75a69f411e45a9f74887,Change concat to match magma,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-10 16:52:08-07:00,25200,2019-06-10 16:52:08-07:00,25200,True,False,"['bit_vector.py', 'bit_vector_abc.py', 'fp_vector.py', 'smt_bit_vector.py', 'z3_bit_vector.py', 'test_concat.py']",['11bf81a76f31f703248e3d5b84a9c631bd618422'],26,50,76,6,1.0,1.0,1.0
92e62062e51fa4481c8869d2b28d0e20cb1d5376,add some fp tests to make coveralls happy,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-10 17:17:03-07:00,25200,2019-06-10 17:17:03-07:00,25200,True,False,['test_fp.py'],['bafa75948bcfe616c72e75a69f411e45a9f74887'],1,32,33,1,0.0,1.0,1.0
64d5e17e784bc0956f47b4fb8aa9734f219abcf9,Fix name error,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-11 12:11:51-07:00,25200,2019-06-11 12:11:51-07:00,25200,True,False,['smt_bit_vector.py'],['92e62062e51fa4481c8869d2b28d0e20cb1d5376'],1,1,2,1,,,
921f03baf0431c6bb4193d2ef1baa5fbd8f47fc9,Fix issue with overflow,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-12 15:10:17-07:00,25200,2019-06-12 15:10:17-07:00,25200,True,False,['bit_vector.py'],['d8d93af2e8340d919f94e4d85fae8eede79c51f9'],2,2,4,1,,,
a1eb7d524b23c1d93c603f53b67dcd57ee825be2,Release 1.0.12,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2019-06-12 22:59:23-07:00,25200,2019-06-12 22:59:23-07:00,25200,True,False,['setup.py'],['d8d93af2e8340d919f94e4d85fae8eede79c51f9'],1,1,2,1,,,
50a5c3c17cf4bb8a8474f82e9cb0a864c404059d,Release 1.0.13,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2019-06-17 12:38:24-07:00,25200,2019-06-17 12:38:24-07:00,25200,True,False,['setup.py'],['44cb8be2c6b49a497c50365cdeb07076c20db8bf'],1,1,2,1,,,
7a5c182e23f3a8365449c24730e375ea3be59ae9,Improve repr,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-18 09:52:54-07:00,25200,2019-06-18 09:52:54-07:00,25200,True,False,"['adt.py', 'fp_vector.py', 'smt_bit_vector.py', 'z3_bit_vector.py']",['50a5c3c17cf4bb8a8474f82e9cb0a864c404059d'],12,14,26,4,,,
0de6867cdeaff24a4668dbd703d9be1dcad54e60,fix whitespace,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-18 16:52:42-07:00,25200,2019-06-18 16:52:42-07:00,25200,True,False,['fp_vector.py'],['7a5c182e23f3a8365449c24730e375ea3be59ae9'],1,1,2,1,,,
4e1723acdba9798ee5373a438992f2549dc1a996,Fix repr bug add tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-19 08:06:44-07:00,25200,2019-06-19 08:06:44-07:00,25200,True,False,"['adt.py', 'test_adt.py']",['78f178a9f109f840649236443c99e54f58cbf444'],1,12,13,2,1.0,1.0,1.0
8dea1ca522d8c1856fb0e885c1bbd9349a61c637,Remove old style constructor; deprecate implicit size construction,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-27 13:16:46-07:00,25200,2019-06-27 13:16:50-07:00,25200,True,False,['bit_vector_abc.py'],['d945781cc0ff5cd5dfa659a5802ed4d480a9bf55'],9,4,13,1,1.0,1.0,1.0
8c4f1a0640636af42091ea797e56ad0bbbe7385b,Remove implicit construction from ite,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-27 13:35:38-07:00,25200,2019-06-27 13:35:41-07:00,25200,True,False,['bit_vector.py'],['8dea1ca522d8c1856fb0e885c1bbd9349a61c637'],9,1,10,1,1.0,1.0,1.0
e9ca6da4048ed6686ec176b0a4b884f577cc0823,Update tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-27 13:36:16-07:00,25200,2019-06-27 13:36:16-07:00,25200,True,False,"['test_bv.py', 'test_meta.py', 'test_optypes.py']",['8c4f1a0640636af42091ea797e56ad0bbbe7385b'],13,3,16,3,1.0,1.0,0.7
e2c213bc9ff0289d8cad4edd7d31e40ae74d2fbc,Add tests of deprecated code,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-06-27 14:09:12-07:00,25200,2019-06-27 14:11:40-07:00,25200,True,False,"['bit_vector_abc.py', 'test_bv.py']",['e9ca6da4048ed6686ec176b0a4b884f577cc0823'],1,13,14,2,0.75,0.75,0.75
fafa1a40d79150676d64141fedf69620dc5e16f4,Release 1.1.0,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-01 12:59:24-07:00,25200,2019-07-01 13:16:11-07:00,25200,True,False,['setup.py'],['e2c213bc9ff0289d8cad4edd7d31e40ae74d2fbc'],1,1,2,1,,,
c4bc1129b2c7436168c269fba51d19d262a2886a,"Unify BoundMeta subtypes some (#59)

* Unify BoundMeta subtypes some

* Add some tests; fix a bug",Caleb Donovick,cdonovick@users.noreply.github.com,GitHub,noreply@github.com,2019-07-08 17:12:07-04:00,14400,2019-07-08 17:12:07-04:00,14400,True,False,"['adt.py', 'adt_meta.py', 'test_adt.py']",['12620081f099dd9d9157b8d2a5d1a0cf66952746'],3,25,28,3,0.8181818181818182,1.0,1.0
2ebbd240cdcbb653c2aacee527bd0ad630bd5ea9,remove dead code (#60),Caleb Donovick,cdonovick@users.noreply.github.com,GitHub,noreply@github.com,2019-07-08 17:31:33-04:00,14400,2019-07-08 17:31:33-04:00,14400,True,False,['adt_meta.py'],['c4bc1129b2c7436168c269fba51d19d262a2886a'],21,0,21,1,0.0,0.0,0.21428571428571427
7ea0aaf57d7a5ee9a009f677bf02cd02fcec5732,"Fix spelling; whitespace

More spelling",Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-09 11:16:37-07:00,25200,2019-07-09 11:25:00-07:00,25200,True,False,['adt_meta.py'],['2ebbd240cdcbb653c2aacee527bd0ad630bd5ea9'],13,13,26,1,,,
2ad07ff75977d2520b95f58d6ebc77b7b37a37ad,"Ensure field names aren't used by the type machinery (#61)

* Ensure field names aren't used by the type machinery

* Add enumerate to _RESERVED_NAMES",Caleb Donovick,cdonovick@users.noreply.github.com,GitHub,noreply@github.com,2019-07-10 10:52:40-04:00,14400,2019-07-10 10:52:40-04:00,14400,True,False,"['adt.py', 'adt_meta.py', 'test_adt.py']",['7ea0aaf57d7a5ee9a009f677bf02cd02fcec5732'],8,51,59,3,0.7692307692307693,0.7692307692307693,0.7692307692307693
46f33057e6d099ca993849ba1903cb4fb09d2bb8,"Make field_dict and value_dict ordered for Product

Resloves #57",Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-10 14:44:56-07:00,25200,2019-07-10 14:52:57-07:00,25200,True,False,"['adt.py', 'adt_meta.py', 'test_adt.py']",['2ad07ff75977d2520b95f58d6ebc77b7b37a37ad'],2,16,18,3,0.0,1.0,1.0
b4de87033aef442a101c2bb52263f6befcf12b98,Allow dynamic construction of Products,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-10 14:58:53-07:00,25200,2019-07-10 15:13:20-07:00,25200,True,False,"['adt.py', 'adt_meta.py']",['06507759411b492ae7355b572adc0fc2a5bc3688'],4,29,33,2,0.9375,0.0,0.0
4f57c18b3fe46fe9c5db9e7a76d4f36a41c1a61c,Add tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-10 15:09:07-07:00,25200,2019-07-10 15:31:36-07:00,25200,True,False,['test_adt.py'],['b4de87033aef442a101c2bb52263f6befcf12b98'],2,30,32,1,1.0,1.0,1.0
bcc73791b36104135046ccc0850ed2664ad5f066,Remove call style dynamic construction,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-10 15:45:13-07:00,25200,2019-07-10 15:45:13-07:00,25200,True,False,['adt.py'],['4f57c18b3fe46fe9c5db9e7a76d4f36a41c1a61c'],11,0,11,1,0.0,0.0,1.0
db1076c422df0e3443a669ca4fa92021104b71c0,Step version to 1.1.1,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-11 11:09:56-07:00,25200,2019-07-11 11:09:56-07:00,25200,True,False,['setup.py'],['df08ed311e9592e3ed1d819b1812b6838c312217'],1,1,2,1,,,
addf1c16491be477aa5e3ffa4a396558a0f42efb,Add unbound_t,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-15 10:59:59-07:00,25200,2019-07-15 10:59:59-07:00,25200,True,False,['adt_meta.py'],['db1076c422df0e3443a669ca4fa92021104b71c0'],5,33,38,1,0.2857142857142857,0.2857142857142857,0.2857142857142857
5842b2821a418634a8358d123bfd85d714123978,Support Product / Enum,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-15 11:20:08-07:00,25200,2019-07-15 11:28:58-07:00,25200,True,False,['adt_meta.py'],['addf1c16491be477aa5e3ffa4a396558a0f42efb'],1,21,22,1,0.0,0.0,0.0
3bbb99e0114c080204332cbe6cd7b56ce5d03227,Add tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-15 11:29:21-07:00,25200,2019-07-15 11:29:47-07:00,25200,True,False,['test_adt.py'],['5842b2821a418634a8358d123bfd85d714123978'],0,13,13,1,1.0,1.0,1.0
1e7d6e6a164d9fc05b968fb59391f8fb5adb6d09,Add rebind,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-15 12:20:34-07:00,25200,2019-07-15 12:20:34-07:00,25200,True,False,"['adt.py', 'adt_meta.py', 'test_adt.py']",['3bbb99e0114c080204332cbe6cd7b56ce5d03227'],22,84,106,3,1.0,1.0,0.3888888888888889
533beaabc2972e074c1b70dc213d38420ecd8cb8,Step version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-17 09:36:53-07:00,25200,2019-07-17 09:36:53-07:00,25200,True,False,['setup.py'],['acabe3ed3f2a20d887a3c63dc5fd8361b77076bd'],1,1,2,1,,,
947603bbe4ebf82e532e7a12cbb0010353f0d0b9,Make Sums mutable,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-17 10:41:08-07:00,25200,2019-07-17 10:41:08-07:00,25200,True,False,['adt.py'],['533beaabc2972e074c1b70dc213d38420ecd8cb8'],3,7,10,1,1.0,1.0,1.0
72b697b5d845840e82c3e1231431b4ece8fdbc29,Allow attribute access on Sums,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-17 10:41:26-07:00,25200,2019-07-17 10:41:26-07:00,25200,True,False,['adt_meta.py'],['947603bbe4ebf82e532e7a12cbb0010353f0d0b9'],0,22,22,1,1.0,1.0,0.5
1a453f174345ddc18626443711f502164dec11b5,Add tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-17 10:41:57-07:00,25200,2019-07-17 10:41:57-07:00,25200,True,False,['test_adt.py'],['72b697b5d845840e82c3e1231431b4ece8fdbc29'],1,21,22,1,0.0,1.0,1.0
6571ec8ade2580424b80d966d19ae08ecd8ce1aa,Move _issubclass to until,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-18 14:54:03-07:00,25200,2019-07-18 14:56:50-07:00,25200,True,False,"['adt_meta.py', 'bit_vector_abc.py', 'util.py']",['228ab0bd19635fdc6b13f554791b8fa539fdb258'],7,10,17,3,,,
7c10d7c0d7e2f7474d55238df0562f3ee7ce4351,Add rebind_bitvector utility function,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-18 14:54:49-07:00,25200,2019-07-18 14:57:06-07:00,25200,True,False,"['adt_meta.py', 'adt_util.py']",['6571ec8ade2580424b80d966d19ae08ecd8ce1aa'],1,24,25,2,1.0,1.0,0.8235294117647058
a8fdcd4ae96ca97633d2fac68660a97c217cb150,Add tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-18 14:55:27-07:00,25200,2019-07-18 14:57:20-07:00,25200,True,False,['test_adt.py'],['7c10d7c0d7e2f7474d55238df0562f3ee7ce4351'],0,28,28,1,1.0,1.0,1.0
7dcae5a35bf56d55174f3a794b5a0481626aa2af,Step version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-18 15:20:57-07:00,25200,2019-07-18 15:21:06-07:00,25200,True,False,['setup.py'],['228ab0bd19635fdc6b13f554791b8fa539fdb258'],1,1,2,1,,,
85a69e89a8ee2eb6e0a8d650a4aa9e6dacb82ba7,Step version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-18 15:25:06-07:00,25200,2019-07-18 15:25:06-07:00,25200,True,False,['setup.py'],['cc5253a4c575370f03a804db526dfda31d6118cf'],1,1,2,1,,,
629f31f09b40f788c68fac7fafd679ac64a45c89,Make identical products return the same type,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-23 18:45:17-07:00,25200,2019-07-23 18:45:17-07:00,25200,True,False,"['adt_meta.py', 'test_adt.py']",['85a69e89a8ee2eb6e0a8d650a4aa9e6dacb82ba7'],7,28,35,2,0.0,0.3125,0.375
d523f5334c717c6f40d460a50f3888d22f248b49,Major rework of ADT types; Product caching,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-24 16:00:54-07:00,25200,2019-07-24 16:28:24-07:00,25200,True,False,"['adt_meta.py', 'util.py', 'test_adt.py']",['629f31f09b40f788c68fac7fafd679ac64a45c89'],87,141,228,3,1.0,1.0,0.5
37528d493f8f58a1f9b4816e5be18a2a4b7870f5,Allow rebinding by subtype,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-25 10:36:08-07:00,25200,2019-07-25 11:10:55-07:00,25200,True,False,['adt_meta.py'],['d523f5334c717c6f40d460a50f3888d22f248b49'],7,8,15,1,,0.0,
686767621eabd41fecd7d6707d489b99ad18826f,"Move rebind tests, add tests",Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-25 12:19:12-07:00,25200,2019-07-25 12:25:53-07:00,25200,True,False,"['test_adt.py', 'test_rebind.py']",['37528d493f8f58a1f9b4816e5be18a2a4b7870f5'],64,142,206,2,0.15384615384615385,1.0,0.4358974358974359
ca9239bd82a102a2ad745630292c5d868daf38da,Add test for issue #74,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-25 12:51:31-07:00,25200,2019-07-25 14:12:08-07:00,25200,True,False,['test_rebind.py'],['3752bc414f1d9cc29cc72b6009d1d900ca08f646'],1,9,10,1,1.0,1.0,1.0
2bc4bd9c1e63dfc06835426e7e453fdbce2df6b2,Bump version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-25 14:47:51-07:00,25200,2019-07-25 14:47:51-07:00,25200,True,False,['setup.py'],['1868ebb88b08ab26bcf21d80309a0ec2de731fac'],1,1,2,1,,,
5ee0bd350a6a14bb07f9cac55a0bd4201ae3c530,Make sure old style constructors fail properly,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-25 14:59:56-07:00,25200,2019-07-25 15:00:02-07:00,25200,True,False,"['bit_vector_abc.py', 'test_bv.py']",['2bc4bd9c1e63dfc06835426e7e453fdbce2df6b2'],1,12,13,2,1.0,1.0,1.0
1a8a1fc6a74f8262b9d9df222e8c861a516c9bf2,Add utility functions for modifiers; Better type hierarchy,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-30 10:02:17-07:00,25200,2019-07-30 10:02:17-07:00,25200,True,False,"['modifiers.py', 'test_modifiers.py']",['acb48342712e4cd7549c1fc645306ee6051e9f55'],11,92,103,2,0.20754716981132076,1.0,0.8867924528301887
07a5b2b3aa11ae7edc4ea0f66e8a9077fdfc91bc,Update rebind_bitvector interface to match rebind,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-30 10:26:18-07:00,25200,2019-07-30 10:26:18-07:00,25200,True,False,"['adt_util.py', 'test_rebind.py']",['acb48342712e4cd7549c1fc645306ee6051e9f55'],7,10,17,2,0.0,1.0,0.0
37ee39610c3867d52323eea8e29e9e7c010a9c58,Add call back to set class name,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-07-31 17:00:19-07:00,25200,2019-07-31 17:00:19-07:00,25200,True,False,['adt_meta.py'],['c063ba867d8f33739a42a5bf08b2f391230134e4'],1,7,8,1,1.0,1.0,1.0
5dd96d24c7df855990b23f01528fdd7127a3085b,Add InconsistentSizeError,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-08-01 09:29:03-07:00,25200,2019-08-01 09:29:55-07:00,25200,True,False,"['bit_vector.py', 'bit_vector_abc.py', 'smt_bit_vector.py', 'test_optypes.py']",['ad044f5c14093229f03faa26aa68a0e8ecbf58f8'],9,22,31,4,0.0,0.0,0.0
804130210de34e057c7d7e6150aeac0c898b366f,return NotImplemented from operators,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-08-01 09:30:32-07:00,25200,2019-08-01 09:30:32-07:00,25200,True,False,"['bit_vector.py', 'smt_bit_vector.py']",['5dd96d24c7df855990b23f01528fdd7127a3085b'],52,353,405,2,1.0,1.0,1.0
a4cf2a112e4a43d842653a7920e340a1fdbd993f,Bumb version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-08-01 10:24:42-07:00,25200,2019-08-01 10:24:42-07:00,25200,True,False,['setup.py'],['a184707062497a1b68e1af2c293c744482833d6f'],1,1,2,1,,,
290fa5feba46d71c057471cb212a18d0aab8ac41,Make modifiers work with ADT types,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-08-01 15:04:35-07:00,25200,2019-08-01 15:05:07-07:00,25200,True,False,"['adt_meta.py', 'test_modifiers.py']",['a4cf2a112e4a43d842653a7920e340a1fdbd993f'],7,23,30,2,0.0,1.0,1.0
41b01056ff32d0f0bbcfcf543305f8fc8e8f8f40,Add rebind_keep_modifier,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-08-02 14:11:15-07:00,25200,2019-08-02 14:11:15-07:00,25200,True,False,"['adt_util.py', 'modifiers.py']",['692621cbc6f9dde3fa88a1fa8b56b17b7a1e91ec'],0,21,21,2,1.0,0.23529411764705882,0.23529411764705882
87af791bee055a4e72f8d236e301da65ae4f0042,added wrap and unwrap modifiers,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2019-08-02 15:37:13-07:00,25200,2019-08-02 15:37:13-07:00,25200,True,False,"['modifiers.py', 'test_modifiers.py']",['41b01056ff32d0f0bbcfcf543305f8fc8e8f8f40'],1,26,27,2,1.0,1.0,1.0
f3b1f75ffd741401805063338f909cd3b6b1258d,added test for rebind_keep_modifiers,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2019-08-05 13:45:21-07:00,25200,2019-08-05 13:45:21-07:00,25200,True,False,"['adt_util.py', 'test_rebind.py']",['87af791bee055a4e72f8d236e301da65ae4f0042'],10,29,39,2,0.7142857142857143,0.42857142857142855,0.6428571428571429
c2b56c4e17ff0d8146139b67ab7adf35c9196722,Update test_rebind.py,Ross Daly,rdaly525@stanford.edu,GitHub,noreply@github.com,2019-08-05 15:51:56-07:00,25200,2019-08-05 15:51:56-07:00,25200,True,False,['test_rebind.py'],['f3b1f75ffd741401805063338f909cd3b6b1258d'],1,0,1,1,,,
9f9053c027a1b33ce73cc014feb9916a1b394e7f,"Major rework of Sum interfaces

* remove attr access
* add contains
* add getitem
* deprecate .value on ADT types",Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-08-05 15:56:38-07:00,25200,2019-08-05 15:56:38-07:00,25200,True,False,"['adt.py', 'adt_meta.py', 'test_adt.py', 'test_modifiers.py']",['828c0d89d11418f4316229ab4f2a828639497031'],73,114,187,4,0.4838709677419355,1.0,1.0
2cf0a13f6a463b50870606540a8042c4a9e07962,Switch in to match,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-08-07 11:09:16-07:00,25200,2019-08-07 11:09:16-07:00,25200,True,False,"['adt.py', 'adt_meta.py', 'test_adt.py']",['9f9053c027a1b33ce73cc014feb9916a1b394e7f'],12,15,27,3,1.0,1.0,1.0
d359eb5e54202b4953c0ba2d02dfc920c2648108,Add Bit.random() staticmethod,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2019-08-20 11:47:04-07:00,25200,2019-08-20 11:48:05-07:00,25200,True,False,['bit_vector.py'],['828c0d89d11418f4316229ab4f2a828639497031'],0,4,4,1,1.0,1.0,1.0
ad78d8be1219ef0db3e30d14de8a981611963bd5,Fixed bvrol and bvror.,Pat Hanrahan,hanrahan@cs.stanford.edu,Pat Hanrahan,hanrahan@cs.stanford.edu,2019-08-21 15:11:38-07:00,25200,2019-08-21 15:11:38-07:00,25200,True,False,['bit_vector.py'],['828c0d89d11418f4316229ab4f2a828639497031'],4,4,8,1,,,
d6ac411c907de2c5028b42e2f802afc6d47dae99,allow ite over bits,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-08-27 12:35:46-07:00,25200,2019-08-27 12:35:46-07:00,25200,True,False,['smt_bit_vector.py'],['2cf0a13f6a463b50870606540a8042c4a9e07962'],1,4,5,1,0.0,0.0,0.0
71d9de5f86df5c5cf480ebc892e131f7b0153b5a,fixed sum issue,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2019-09-09 21:39:17-07:00,25200,2019-09-09 21:39:17-07:00,25200,True,False,"['adt_meta.py', 'adt_util.py']",['d6ac411c907de2c5028b42e2f802afc6d47dae99'],7,11,18,2,0.0,0.0,0.0
ffb5a790edfd96949d4732cec0848929761858fa,added test for sum issue,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2019-09-09 21:39:29-07:00,25200,2019-09-09 21:39:29-07:00,25200,True,False,['test_rebind.py'],['71d9de5f86df5c5cf480ebc892e131f7b0153b5a'],0,14,14,1,1.0,1.0,1.0
8ff037bd82f0100adb6c9393f4f413506a048c87,Move to new match syntax,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-09-17 09:37:27-07:00,25200,2019-09-17 09:37:27-07:00,25200,True,False,"['adt.py', 'test_adt.py', 'test_modifiers.py']",['339b7690004c25abab2a5fa72999f78b1bd19d3b'],26,38,64,3,1.0,1.0,1.0
ad29288047920f5e7f7c28c0ac49346a0a01b3ac,Add small test,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-09-17 09:45:10-07:00,25200,2019-09-17 09:45:10-07:00,25200,True,False,['test_adt.py'],['8ff037bd82f0100adb6c9393f4f413506a048c87'],0,2,2,1,0.0,1.0,1.0
63c5eb80cbd85fa3f9d5f2dcf17968961da8576e,added substitute method for SMT,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2019-09-17 17:22:36-07:00,25200,2019-09-17 17:22:36-07:00,25200,True,False,"['smt_bit_vector.py', 'test_smt_bit.py', 'test_smt_bv.py']",['ad78d8be1219ef0db3e30d14de8a981611963bd5'],1,40,41,3,1.0,1.0,1.0
da139586d638f23322bacd54ac854dc4dd7b8bb1,Change match interface slightly to better support assembled adt,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-09-19 09:58:20-07:00,25200,2019-09-19 09:58:23-07:00,25200,True,False,['adt.py'],['ad29288047920f5e7f7c28c0ac49346a0a01b3ac'],8,9,17,1,1.0,1.0,0.0
335514d0b63982ac93d612abd16a5e257abe79a7,step version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-09-24 14:17:54-07:00,25200,2019-09-24 14:19:52-07:00,25200,True,False,['setup.py'],['618cfefec1481dbb87d94845b6b86e78cd3479ab'],1,1,2,1,,,
0e149a174b082cc399fc7b0527c59014e6649462,Factor syntax,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-09-24 14:13:24-07:00,25200,2019-09-24 14:23:30-07:00,25200,True,False,['adt_meta.py'],['335514d0b63982ac93d612abd16a5e257abe79a7'],136,139,275,1,1.0,1.0,1.0
d982e9fd7591f5ed8fde457bbaba940c4bf9966e,Add TaggedUnionMeta,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-09-24 14:15:33-07:00,25200,2019-09-24 14:23:30-07:00,25200,True,False,['adt_meta.py'],['0e149a174b082cc399fc7b0527c59014e6649462'],1,62,63,1,1.0,1.0,0.75
7bcdd4f22f07fbd2788db3a7084e6d93afab3254,Add TaggedUnion,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-09-24 14:16:09-07:00,25200,2019-09-24 14:23:30-07:00,25200,True,False,['adt.py'],['d982e9fd7591f5ed8fde457bbaba940c4bf9966e'],1,42,43,1,1.0,1.0,0.9333333333333333
c7dfa1b7b60662ff8e220238b82e9ca1c500038f,Add tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-09-24 14:16:21-07:00,25200,2019-09-24 14:23:30-07:00,25200,True,False,['test_adt.py'],['7bcdd4f22f07fbd2788db3a7084e6d93afab3254'],20,132,152,1,0.36231884057971014,0.2753623188405797,1.0
1f94521054c226498c19dfec09f69cef06364f7e,Step version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-09-24 15:57:45-07:00,25200,2019-09-24 15:57:45-07:00,25200,True,False,['setup.py'],['c7dfa1b7b60662ff8e220238b82e9ca1c500038f'],1,1,2,1,,,
f981036c5edba36bd1f52eecc2ed7245962918c3,Build UF backed fpvector,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-12-02 12:32:10-08:00,28800,2019-12-02 12:32:10-08:00,28800,True,False,"['__init__.py', 'smt_fp_vector.py', 'test_smt_fp.py']",['d1cb901540127ad6c9c346a839d0a1dd538b0c5c'],0,273,273,3,0.7969924812030075,0.7969924812030075,0.6240601503759399
56a8ee15a8499ebc2a6db04684156327a0cb30c0,step version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2019-12-20 10:57:28-08:00,28800,2019-12-20 10:57:28-08:00,28800,True,False,['setup.py'],['01e9ff96c2a52acc5fd147292949cd3bf6d83b01'],1,1,2,1,,,
96342e2db370c561e66f8f76cdc67a869a774535,Added rebind_type as a util function,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-01-06 19:42:57-08:00,28800,2020-01-06 19:42:57-08:00,28800,True,False,"['adt_util.py', 'smt_bit_vector.py']",['56a8ee15a8499ebc2a6db04684156327a0cb30c0'],2,25,27,2,1.0,0.125,1.0
a0f13d767a489b5eab8d79ce24f50ab7003f5e1f,added a test for rebind_type,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-01-07 17:28:16-08:00,28800,2020-01-07 17:28:16-08:00,28800,True,False,['test_rebind.py'],['96342e2db370c561e66f8f76cdc67a869a774535'],1,20,21,1,1.0,1.0,1.0
3ac71b926a540f4ce515cdb18c43bc852308c131,Update smt_bit_vector.py,Ross Daly,rdaly525@stanford.edu,GitHub,noreply@github.com,2020-01-07 19:40:13-08:00,28800,2020-01-07 19:40:13-08:00,28800,True,False,['smt_bit_vector.py'],['a0f13d767a489b5eab8d79ce24f50ab7003f5e1f'],1,1,2,1,,,
bda1608d1e1b02875ddb5a0f481448cf52c65b84,Update test_rebind.py,Ross Daly,rdaly525@stanford.edu,GitHub,noreply@github.com,2020-01-07 19:40:41-08:00,28800,2020-01-07 19:40:41-08:00,28800,True,False,['test_rebind.py'],['3ac71b926a540f4ce515cdb18c43bc852308c131'],1,1,2,1,,,
4edb9e21c444a412c69667474c8f85709220dbbd,bumped version,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-01-07 20:40:23-08:00,28800,2020-01-07 20:40:23-08:00,28800,True,False,['setup.py'],['b1d5e3eea5bd193c97071f7d48366926d9935898'],1,1,2,1,,,
93d4bc315bd27ec0aa8a4a6a2d1477fb518fa6ff,Unify ite logic,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-01-08 12:50:58-08:00,28800,2020-01-08 12:50:58-08:00,28800,True,False,"['bit_vector.py', 'smt_bit_vector.py']",['b1d5e3eea5bd193c97071f7d48366926d9935898'],26,31,57,2,0.0,0.0,0.0
e6a1350107fdf807a1d50cd909218f344bb3167b,"Ite cast to try to cls before BV_T

resolves #107",Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-01-08 13:00:55-08:00,28800,2020-01-08 13:00:55-08:00,28800,True,False,"['bit_vector.py', 'smt_bit_vector.py', 'test_smt_bit.py']",['93d4bc315bd27ec0aa8a4a6a2d1477fb518fa6ff'],5,22,27,3,0.3333333333333333,0.3333333333333333,0.3333333333333333
5d1d9afd6b1bfc20c7956ddaca0fa8ab6e41df00,Better error messages,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-01-08 13:06:31-08:00,28800,2020-01-08 13:06:31-08:00,28800,True,False,"['bit_vector.py', 'smt_bit_vector.py']",['e6a1350107fdf807a1d50cd909218f344bb3167b'],2,2,4,2,,,
65baf57ebc88561ad2e11779e186ee041cca68aa,Even better error messages,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-01-08 13:16:46-08:00,28800,2020-01-08 13:16:46-08:00,28800,True,False,"['bit_vector.py', 'smt_bit_vector.py']",['5d1d9afd6b1bfc20c7956ddaca0fa8ab6e41df00'],2,2,4,2,,,
95bfaa036cf1fe7d8581c8c2285af9581f8ef86d,Add comments,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-01-08 13:31:07-08:00,28800,2020-01-08 13:34:45-08:00,28800,True,False,"['bit_vector.py', 'smt_bit_vector.py']",['65baf57ebc88561ad2e11779e186ee041cca68aa'],0,46,46,2,,,
07332ae46d02c44cfa29a8a214f35397c1fde0ec,bumped release version,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-01-10 13:34:38-08:00,28800,2020-01-10 13:34:38-08:00,28800,True,False,['setup.py'],['a025a219c945ef634e891ea648a865582b541d8e'],1,1,2,1,,,
5135b4961fa0e3f60c85b29c4d773116ee9feec7,Make field_dict more consistent,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-01-10 15:28:34-08:00,28800,2020-01-10 15:29:01-08:00,28800,True,False,"['adt_meta.py', 'test_adt.py']",['60222cfa663d2bd91f66491aa5f4230af018ba7d'],3,3,6,2,,,
5960289d103493e74c9bf058ab9a25b784e79f2b,step version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-01-10 16:20:53-08:00,28800,2020-01-10 16:20:53-08:00,28800,True,False,['setup.py'],['609b78d70215b3b6b231220be5b5cb0453f4272b'],1,1,2,1,,,
3b652917fb32f83d21ba3faa7bd660da260904d5,"Added the following helper functions
strip_modifiers remoes all type modifiers with an ADT type
push_modifiers pushes all the type modifiers to the leafs of the ADT",Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-01-12 08:48:21-08:00,28800,2020-01-12 08:48:21-08:00,28800,True,False,"['modifiers.py', 'test_modifiers.py']",['5960289d103493e74c9bf058ab9a25b784e79f2b'],6,94,100,2,0.0,0.47761194029850745,1.0
0c2ae61b42e6fb79db8fab647b62c1438d1048ee,Added check that modifiers cannot be applied twice,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-01-13 09:03:15-08:00,28800,2020-01-13 09:03:15-08:00,28800,True,False,"['modifiers.py', 'test_modifiers.py']",['5960289d103493e74c9bf058ab9a25b784e79f2b'],3,7,10,2,1.0,1.0,1.0
3b2811a219327bd3d75cea8769c35bad770c7871,changed ValueError to TypeError,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-01-13 09:06:03-08:00,28800,2020-01-13 09:06:03-08:00,28800,True,False,['test_modifiers.py'],['0c2ae61b42e6fb79db8fab647b62c1438d1048ee'],1,1,2,1,,,
b4231ea918e74efcf4521b99186d4e20523f8118,Allow ites to work on python tuples,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-01-14 14:09:27-08:00,28800,2020-01-14 14:12:16-08:00,28800,True,False,"['bit_vector.py', 'bit_vector_util.py', 'smt_bit_vector.py', 'test_ite.py', 'test_smt_bit.py']",['5960289d103493e74c9bf058ab9a25b784e79f2b'],98,197,295,5,1.0,1.0,1.0
1bceaaabca0f38af159d72c71c1d9e893b813a3c,Update modifiers.py,Ross Daly,rdaly525@stanford.edu,GitHub,noreply@github.com,2020-01-15 10:38:40-08:00,28800,2020-01-15 10:38:40-08:00,28800,True,False,['modifiers.py'],['3b2811a219327bd3d75cea8769c35bad770c7871'],1,1,2,1,,,
074538014604fca86321e53db33ede72c6222ff5,added failing syntax test,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-01-16 13:00:45-08:00,28800,2020-01-16 13:00:45-08:00,28800,True,False,['test_adt.py'],['150884892c54013665eb14df706a1bc53e935a4c'],1,12,13,1,1.0,1.0,1.0
c08cf4f4825ed48a62febc4edb6d027db3c97954,updated strip and push to use common code for each syntax,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-01-16 13:04:35-08:00,28800,2020-01-16 13:04:35-08:00,28800,True,False,['modifiers.py'],['dfe282c9a42fbd8604af97a6f2e613474b69b255'],26,11,37,1,1.0,1.0,0.0
134bd88dd590f9ddeef5db22664be51e8be5b636,Hack syntax bug,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-01-16 14:01:45-08:00,28800,2020-01-16 14:01:45-08:00,28800,True,False,['adt_meta.py'],['074538014604fca86321e53db33ede72c6222ff5'],16,31,47,1,1.0,1.0,1.0
7368cc34d9e7f69bcdae7effda866e1f95f10d6c,Added additional failing tests,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-01-16 14:16:52-08:00,28800,2020-01-16 14:16:52-08:00,28800,True,False,['test_adt.py'],['134bd88dd590f9ddeef5db22664be51e8be5b636'],0,6,6,1,1.0,1.0,1.0
9a997534171702e1c6ffd525f38d6ad82060ab70,Fix bugs,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-01-16 14:22:28-08:00,28800,2020-01-16 14:22:28-08:00,28800,True,False,['adt_meta.py'],['7368cc34d9e7f69bcdae7effda866e1f95f10d6c'],1,1,2,1,,,
ac936bfc07a1aa55afcaa2b25a88ea1416692007,fixed ordering of Syntaxes,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-01-16 14:35:42-08:00,28800,2020-01-16 14:35:42-08:00,28800,True,False,['modifiers.py'],['6fd1e1db6669356004d1eac0f2bdfcc88ede9edd'],6,6,12,1,,,
92318a6ef0f85a125cb0829f21d185fc9bbd1d5a,bumped version to 1.3.5,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-01-16 16:47:41-08:00,28800,2020-01-16 16:47:41-08:00,28800,True,False,['setup.py'],['6f522c53783068681c0fc3a144df79cc3c0fc8ff'],1,1,2,1,,,
f3822a08c456181e76b442b0e69f9926305dbe0e,Add AnonymousProduct type,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-02-05 11:02:40-08:00,28800,2020-02-05 11:02:44-08:00,28800,True,False,"['adt.py', 'adt_meta.py', 'test_adt.py']",['92318a6ef0f85a125cb0829f21d185fc9bbd1d5a'],65,184,249,3,0.9125,1.0,1.0
1d8099178e6175775da271a9088245e2f582841d,Remove duplicate code,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-02-05 12:48:55-08:00,28800,2020-02-07 12:15:58-08:00,28800,True,False,['adt.py'],['f3822a08c456181e76b442b0e69f9926305dbe0e'],2,1,3,1,0.0,0.0,0.0
7ac4d93ea7d8c7174e0c7b924bdda39062f9c4bc,Make polymorhic bitvector,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-03-10 14:58:19-07:00,25200,2020-03-10 15:02:15-07:00,25200,True,False,"['bit_vector.py', 'bit_vector_abc.py', 'bit_vector_util.py', 'smt_bit_vector.py', 'test_optypes.py']",['bbe123d40d2d87beeb8d27ca53f62380bb7ade78'],116,155,271,5,0.6756756756756757,0.6756756756756757,0.7837837837837838
689f7e00c95d857b1466f09107ed1f436880a5fe,Fix some bugs,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-03-10 16:04:38-07:00,25200,2020-03-10 16:04:38-07:00,25200,True,False,"['bit_vector_util.py', 'smt_bit_vector.py', 'test_optypes.py']",['7ac4d93ea7d8c7174e0c7b924bdda39062f9c4bc'],30,44,74,3,0.0,0.0,0.0
baba2e4563839ba253867334bab9b6aaec173ef4,Fix a bunch of bugs,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-03-10 18:42:40-07:00,25200,2020-03-10 18:42:40-07:00,25200,True,False,"['bit_vector.py', 'bit_vector_util.py', 'smt_bit_vector.py', 'test_optypes.py']",['689f7e00c95d857b1466f09107ed1f436880a5fe'],64,87,151,4,1.0,1.0,0.0
ded09e45817f4eb5b7f673d342f08b6bef6ee57a,"Fix a couple bugs, add tests",Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-03-11 13:31:33-07:00,25200,2020-03-11 13:31:33-07:00,25200,True,False,"['bit_vector.py', 'bit_vector_util.py', 'test_poly.py']",['baba2e4563839ba253867334bab9b6aaec173ef4'],2,96,98,3,0.0,0.5892857142857143,1.0
aee03c086226fa3ed5892c998603cb8477e15f5e,Step version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-03-20 15:41:22-07:00,25200,2020-03-20 15:41:22-07:00,25200,True,False,['setup.py'],['d5029d8721cfa38d5268c3be9dd1761ea3fcff76'],1,1,2,1,,,
975bc0c19ee787ef42f08b5dce4721cccfb3d32f,Allow smt variables to have specified name prefix,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-09 10:48:23-07:00,25200,2020-06-09 10:50:10-07:00,25200,True,False,['smt_bit_vector.py'],['aee03c086226fa3ed5892c998603cb8477e15f5e'],11,21,32,1,0.0,0.0,0.0
b46cc84e46a01f5051abe6ea38f98a9fb099d515,add protocol,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-09 17:11:26-07:00,25200,2020-06-09 17:11:26-07:00,25200,True,False,"['bit_vector_util.py', 'test_bv_protocol.py']",['1c6b3804b929d8f0bd0cab942ed1469d0537c47d'],12,101,113,2,1.0,1.0,1.0
448c35835febc131e8addb76b6ac8f9eaf0fcc7e,Fix bug,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-09 18:19:54-07:00,25200,2020-06-09 18:23:08-07:00,25200,True,False,"['bit_vector_util.py', 'test_bv_protocol.py']",['b46cc84e46a01f5051abe6ea38f98a9fb099d515'],10,21,31,2,1.0,1.0,1.0
1327f2ce83a80f81ed33cb4ba4c9e83d627d20d4,step version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-10 13:32:15-07:00,25200,2020-06-10 13:32:15-07:00,25200,True,False,['setup.py'],['3cdeeaec41e45c8b5d499d327ad968ff55b968f6'],1,1,2,1,,,
44176e0c0632e6ed0b48329276ba79e7ee7ce871,Add ADT visitors,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-12 17:49:47-07:00,25200,2020-06-12 17:50:20-07:00,25200,True,False,"['adt_util.py', 'test_adt_visitor.py']",['1327f2ce83a80f81ed33cb4ba4c9e83d627d20d4'],1,136,137,2,1.0,0.7758620689655172,1.0
e5e1f0e99e5fa79abc3014ab5ede83a982e6219d,Fix non-determinism,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-12 17:57:04-07:00,25200,2020-06-12 18:01:20-07:00,25200,True,False,['test_adt_visitor.py'],['44176e0c0632e6ed0b48329276ba79e7ee7ce871'],3,2,5,1,,,
1ef73314d0c0d8c4142c28d18598f5102432d415,Make cache=true default,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-15 14:44:07-07:00,25200,2020-06-15 14:44:07-07:00,25200,True,False,"['adt_meta.py', 'test_adt.py']",['e7e4364c47c7ae31ed2f284bb14c7806b20e8e61'],9,17,26,2,1.0,1.0,1.0
8cf4fc1c2c1613ee75dbc42d39570622849419dc,Add more tests,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-15 15:06:34-07:00,25200,2020-06-15 15:06:34-07:00,25200,True,False,['test_adt.py'],['1ef73314d0c0d8c4142c28d18598f5102432d415'],2,21,23,1,0.0,1.0,1.0
3b6c64f230b7ab396a46aa7ebf0bef87d7510d67,add a test,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-18 13:01:58-07:00,25200,2020-06-18 13:02:30-07:00,25200,True,False,['test_adt.py'],['9c41727169a721a54b095d637e36b68b612f7970'],0,8,8,1,0.0,1.0,1.0
5dd93081f6da1fecfe4e43092549e422dd70393d,Add test,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-18 13:35:33-07:00,25200,2020-06-18 13:35:33-07:00,25200,True,False,['test_adt.py'],['c5be825dd80aadf8ad3a9d3086d64c17cf4bf775'],0,4,4,1,0.0,0.75,1.0
194fb52c92dd4145f5814e84a3c007f15d02da32,Build feature,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-18 13:35:59-07:00,25200,2020-06-18 13:35:59-07:00,25200,True,False,['adt.py'],['5dd93081f6da1fecfe4e43092549e422dd70393d'],1,61,62,1,1.0,0.6285714285714286,1.0
8d4340e0b50f71cc806e87e8c22e0aa2c29ba192,Refactor tests / reserve from_values,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-18 13:48:55-07:00,25200,2020-06-18 13:48:59-07:00,25200,True,False,"['adt_meta.py', 'test_adt.py']",['194fb52c92dd4145f5814e84a3c007f15d02da32'],4,6,10,2,1.0,0.5,0.0
803fcd73a7b95ed4facbe457a0c3b5e74a2ee107,fix test,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-18 14:10:38-07:00,25200,2020-06-18 14:10:38-07:00,25200,True,False,['test_adt_visitor.py'],['8d4340e0b50f71cc806e87e8c22e0aa2c29ba192'],2,2,4,1,,,
871feecf5b9d165c840ec9fe08cfc1353a398636,step version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-18 18:05:13-07:00,25200,2020-06-18 18:05:13-07:00,25200,True,False,['setup.py'],['59e480e6253dfb195c634541aa8eca3857463fec'],1,1,2,1,,,
9288b53a0681ad8702ebdb5bd28109fa5cab9185,Add failing test,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-23 15:06:43-07:00,25200,2020-06-23 15:06:43-07:00,25200,True,False,['test_bv_protocol.py'],['871feecf5b9d165c840ec9fe08cfc1353a398636'],20,53,73,1,1.0,1.0,1.0
aca93127fef4343a4237572b3a63ef6de55985fb,fix bug,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-23 15:11:20-07:00,25200,2020-06-23 15:14:15-07:00,25200,True,False,"['bit_vector_util.py', 'test_bv_protocol.py']",['9288b53a0681ad8702ebdb5bd28109fa5cab9185'],2,5,7,2,0.0,0.75,1.0
721f094ff8367d0591f96ba80d47ee209aace7aa,step version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-06-23 15:42:13-07:00,25200,2020-06-23 15:42:13-07:00,25200,True,False,['setup.py'],['aa9b62fc320ebd60cc8be08f61669e3aa96792af'],1,1,2,1,,,
15520d36c3dc8ff05ba5f106d5f25566d9e5bf2f,Added test for modifer case on non-adt types. Created test case for rebinding Tagged Unions,Ross,rdaly525@stanford.edu,Ross,rdaly525@stanford.edu,2020-08-02 12:14:25-07:00,25200,2020-08-02 12:14:25-07:00,25200,True,False,"['modifiers.py', 'test_modifiers.py', 'test_rebind.py']",['721f094ff8367d0591f96ba80d47ee209aace7aa'],3,29,32,3,1.0,0.9047619047619048,1.0
e54d26defb28908e7d64afc3e139cf0ef2e8d16e,Code reorg for rebind,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-08-02 16:22:11-07:00,25200,2020-08-02 16:22:11-07:00,25200,True,False,['adt_meta.py'],['15520d36c3dc8ff05ba5f106d5f25566d9e5bf2f'],28,27,55,1,,,
7997d575fb1619d6758f7d36ca633c95d6a6b4a6,step version,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2020-08-02 18:24:10-07:00,25200,2020-08-02 18:24:10-07:00,25200,True,False,['setup.py'],['84c7a1f21e7f182071c0d0e5658f78c7e376aa84'],1,1,2,1,,,
7772297078f749a43400932bfac85c45f035ccce,Add test,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2020-08-25 16:12:57-07:00,25200,2020-08-25 16:12:57-07:00,25200,True,False,"['bit_vector.py', 'test_bit.py']",['d359eb5e54202b4953c0ba2d02dfc920c2648108'],1,3,4,2,1.0,1.0,1.0
66cf6515ae8176baf2b5cd601f0d9da41920512f,Add logic/test for srem by 0,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2020-09-09 11:07:10-07:00,25200,2020-09-09 11:07:10-07:00,25200,True,False,"['bit_vector.py', 'test_bv.py', 'test_sint.py']",['75685c6064167b6a1a457d715521794a5a82f290'],0,21,21,3,1.0,1.0,1.0
2a59399ee40cd346b993dc745842f0c6545a726a,"Add type string to hash for uniqueness

This way BitVector/SIntVector/UIntVector hash to different values,
avoiding collisions (this becomes a problem in magma's cacheing for
generator arguments, because UIntVector and SIntVector of the same
underlying value will hash to the same value, but we actually want them
to dispatch to different generators since one will generate UInt and the
other SInt for the interface types)",Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2020-09-14 11:58:24-07:00,25200,2020-09-14 12:01:50-07:00,25200,True,False,"['bit_vector.py', 'test_hash.py']",['d0d85dbfcae82d3dacb872903e175d9ace485fb7'],2,16,18,2,1.0,1.0,1.0
f104f3fc0e0fa04130aa33707dab99ca843a0f11,"Set warnings.warn stacklevel to 3

With this change, instead of a message like this:
```
  /Users/lenny/repos/hwtypes/hwtypes/bit_vector.py:143: UserWarning: Truncating value from <class 'hwtypes.bit_vector.BitVector[32]'> to <class 'hwtypes.bit_vector.BitVector[21]'>
    warnings.warn('Truncating value from {} to {}'.format(type(value), type(self)))
```

we now get something like this:
```
  /Users/lenny/repos/magma_riscv_mini/tests/utils.py:11: UserWarning: Truncating value from <class 'hwtypes.bit_vector.BitVector[32]'> to <class 'hwtypes.bit_vector.BitVector[21]'>
    return BitVector[21](x & ((1 << 20) - 1))
```

which is much more helpful.  We set stacklevel to 3 instead of 2 because
we need to also ignore the metaclass __call__ method, or else we get a
message like this:
```
  /Users/lenny/repos/hwtypes/hwtypes/bit_vector_abc.py:28: UserWarning: Truncating value from <class 'hwtypes.bit_vector.BitVector[32]'> to <class 'hwtypes.bit_vector.BitVector[21]'>
    return super().__call__(value, *args, **kwargs)
```",Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2020-10-05 14:04:13-07:00,25200,2020-10-05 14:04:13-07:00,25200,True,False,['bit_vector.py'],['d0d85dbfcae82d3dacb872903e175d9ace485fb7'],3,3,6,1,,,
49bd1c362883b7e5a85e53c0e746912bdb85858a,Release 1.4.4,Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2020-10-05 15:20:06-07:00,25200,2020-10-05 15:20:06-07:00,25200,True,False,['setup.py'],['094e10652e3aa0e3958231061f431a78fd2302d6'],1,1,2,1,,,
5f3a3802a768321015b012da9c0704608e95e275,Hash using tuple of type and value,Leonard (Lenny) Truong,leonardtruong@gmail.com,GitHub,noreply@github.com,2021-02-11 16:29:35-08:00,28800,2021-02-11 16:29:35-08:00,28800,True,False,['bit_vector.py'],['2a59399ee40cd346b993dc745842f0c6545a726a'],1,1,2,1,,,
dda74512b243eb8e2d13da4a62fa7fee037807ad,"Add repr method

Prints `BitVector[32]` instead of
`<class 'hwtypes.bit_vector.BitVector[32]'>` which is a bit nicer (more
concise) for debugging.  Especially for adding repr logic to container
classes that implicitly call repr on BV",Lenny Truong,lenny@stanford.edu,Lenny Truong,lenny@stanford.edu,2021-03-22 12:09:44-07:00,25200,2021-03-22 12:09:44-07:00,25200,True,False,['bit_vector_abc.py'],['da47de56a79644d20a0227b0fc1d65b349f73f5e'],0,3,3,1,1.0,1.0,1.0
8a2bd910df8fdce9ba1baca9439140a6fc70482f,raise TypeError in SMTBit.__bool__,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2022-03-15 15:24:18-07:00,25200,2022-03-15 15:24:18-07:00,25200,True,False,"['smt_bit_vector.py', 'test_smt_bit.py']",['76670f84f2f1a94aea3321160891efaa8795616e'],0,7,7,2,1.0,1.0,1.0
416c76d8a7ac965b846b87a00814773e6faf8ad1,Initial smt int class with basic test,ross,rdaly525@stanford.edu,ross,rdaly525@stanford.edu,2022-09-22 08:23:29-07:00,25200,2022-09-22 08:23:29-07:00,25200,True,False,"['__init__.py', 'smt_int.py', 'test_smt_int.py']",['f15b8a6e37d0e5c51c94a15464c714c1b1e6b43d'],0,189,189,3,0.6481481481481481,0.6481481481481481,0.6481481481481481
6fe0b003c1142ffb128b3d0bf45fb148ee823c1c,Adds bv-related methods,ross,rdaly525@stanford.edu,ross,rdaly525@stanford.edu,2022-09-22 11:46:46-07:00,25200,2022-09-22 11:46:46-07:00,25200,True,False,"['smt_bit_vector.py', 'smt_int.py', 'test_smt_int.py']",['416c76d8a7ac965b846b87a00814773e6faf8ad1'],49,96,145,3,0.9523809523809523,0.9523809523809523,0.9523809523809523
3347fa971805206a0aee7fefd1658742ff1fc967,"Adds comments, adds init from pysmt bv",ross,rdaly525@stanford.edu,ross,rdaly525@stanford.edu,2022-09-22 12:01:36-07:00,25200,2022-09-22 12:01:36-07:00,25200,True,False,"['smt_bit_vector.py', 'smt_int.py', 'test_smt_int.py']",['6fe0b003c1142ffb128b3d0bf45fb148ee823c1c'],0,6,6,3,0.3333333333333333,0.3333333333333333,0.3333333333333333
8f038503f044e8d6945d7c4f1db3bb7f2cd3924c,adds convenient formula constructor,ross,rdaly525@stanford.edu,ross,rdaly525@stanford.edu,2022-09-23 16:20:18-07:00,25200,2022-09-23 16:20:18-07:00,25200,True,False,"['smt_utils.py', 'test_smt_utils.py']",['5bf0b71f6e89a76f05a8dd23229fe61dd783033d'],0,105,105,2,0.75,1.0,0.6666666666666666
7c1c75304de3cbd5609386b2d92e2f73e19b7950,Release 1.4.5,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2022-09-27 11:29:12-07:00,25200,2022-09-27 11:29:12-07:00,25200,True,False,['setup.py'],['5bf0b71f6e89a76f05a8dd23229fe61dd783033d'],1,1,2,1,,,
60caf0b0619df169aa42300dbe44331f3b50c63f,code quality improvements,ross,rdaly525@stanford.edu,ross,rdaly525@stanford.edu,2022-09-27 11:46:52-07:00,25200,2022-09-27 11:46:52-07:00,25200,True,False,"['smt_utils.py', 'test_smt_utils.py']",['8f038503f044e8d6945d7c4f1db3bb7f2cd3924c'],4,17,21,2,0.0,1.0,1.0
b660a616404e86896ddc67a8240b691ca5039c34,adds another serialize test,ross,rdaly525@stanford.edu,ross,rdaly525@stanford.edu,2022-09-27 11:57:15-07:00,25200,2022-09-27 11:57:15-07:00,25200,True,False,['test_smt_utils.py'],['60caf0b0619df169aa42300dbe44331f3b50c63f'],1,13,14,1,0.0,1.0,1.0
0a3aa034524a986e130c5e5edb2eece8546cfbfd,changes ts to line_prefix,ross,rdaly525@stanford.edu,ross,rdaly525@stanford.edu,2022-09-27 12:26:49-07:00,25200,2022-09-27 12:26:49-07:00,25200,True,False,"['smt_utils.py', 'test_smt_utils.py']",['b660a616404e86896ddc67a8240b691ca5039c34'],17,17,34,2,,,
e1cd3ebc9eb47df2523eb171dac4f90ff0a3713e,Release 1.4.6,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2022-09-27 14:28:07-07:00,25200,2022-09-27 14:28:07-07:00,25200,True,False,['setup.py'],['1172655f9bca1600bbc26e58c51ceb9299f0e9ae'],1,1,2,1,,,
3cdb48ac2949dbed582ba3bbd015ffeaec4168af,Migrate to github actions,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2022-10-03 10:45:07-07:00,25200,2022-10-03 10:45:07-07:00,25200,True,False,"['linux-test.yml', '.travis.yml']",['e1cd3ebc9eb47df2523eb171dac4f90ff0a3713e'],24,33,57,2,,,
aaf6a98aa414ffa5adf17152b340501a91e366cb,Update status badge,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2022-10-03 10:45:44-07:00,25200,2022-10-03 10:45:44-07:00,25200,True,False,['README.md'],['3cdb48ac2949dbed582ba3bbd015ffeaec4168af'],1,1,2,1,,,
12f1f69a31e9404d669567c248bf80995cc34d07,Add deploy script,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2022-10-03 10:49:15-07:00,25200,2022-10-03 10:49:15-07:00,25200,True,False,"['deploy.yml', 'linux-test.yml']",['aaf6a98aa414ffa5adf17152b340501a91e366cb'],1,39,40,2,,,
4149cfca51a290f9c3bd5278f5568a44cd794647,Fixes and adds test for name_table bug,ross,rdaly525@stanford.edu,ross,rdaly525@stanford.edu,2022-10-03 17:40:05-07:00,25200,2022-10-03 17:40:05-07:00,25200,True,False,"['smt_int.py', 'test_smt_int.py']",['e1cd3ebc9eb47df2523eb171dac4f90ff0a3713e'],28,8,36,2,0.0,0.0,0.0
8a6edcbaf9cda03a7b7961f19a68700af44e13f3,Fixes and adds test for name_table bug,ross,rdaly525@stanford.edu,ross,rdaly525@stanford.edu,2022-10-03 17:40:05-07:00,25200,2022-10-03 17:47:29-07:00,25200,True,False,"['smt_int.py', 'test_smt_int.py']",['12f1f69a31e9404d669567c248bf80995cc34d07'],28,8,36,2,0.0,0.0,0.0
7a3ea1b5b9d6557e167b4d6c6e3004c4731573a7,generalizes smt int serialization test,ross,rdaly525@stanford.edu,ross,rdaly525@stanford.edu,2022-10-03 18:03:14-07:00,25200,2022-10-03 18:03:14-07:00,25200,True,False,['test_smt_utils.py'],['8a6edcbaf9cda03a7b7961f19a68700af44e13f3'],12,17,29,1,0.4,1.0,1.0
43b5641b2bd3db38559289a01aebcee716cb3c33,install master gmpy,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2022-10-04 16:00:03-07:00,25200,2022-10-04 16:00:03-07:00,25200,True,False,['linux-test.yml'],['f883fcebb9780d659053a73fe972879cfa4a33d6'],0,4,4,1,,,
1a980e5d9fea21a4bcad660d98a22ffb0198dca6,Use http endpoint,Leonard (Lenny) Truong,leonardtruong@fb.com,GitHub,noreply@github.com,2022-10-05 08:27:55-07:00,25200,2022-10-05 08:27:55-07:00,25200,True,False,['linux-test.yml'],['43b5641b2bd3db38559289a01aebcee716cb3c33'],1,1,2,1,,,
661d1f5625665860c8a7ec28d8fe23eab30831a5,adds right associative ops,ross,rdaly525@stanford.edu,ross,rdaly525@stanford.edu,2022-10-13 16:15:24-07:00,25200,2022-10-13 16:15:24-07:00,25200,True,False,"['smt_int.py', 'test_smt_int.py']",['1a980e5d9fea21a4bcad660d98a22ffb0198dca6'],0,27,27,2,1.0,1.0,1.0
667c26189dfd63732a44f0ce02f503fcdadb5b91,changes python-coveralls to coveralls,ross,rdaly525@stanford.edu,ross,rdaly525@stanford.edu,2022-10-14 07:07:28-07:00,25200,2022-10-14 07:07:28-07:00,25200,True,False,['linux-test.yml'],['661d1f5625665860c8a7ec28d8fe23eab30831a5'],1,1,2,1,,,
eed3a73970bf2dbb13f90115554dc9bca1c72767,Use coveralls app,Lenny Truong,leonardtruong@fb.com,GitHub,noreply@github.com,2022-10-14 09:50:27-07:00,25200,2022-10-14 09:50:27-07:00,25200,True,False,['linux-test.yml'],['667c26189dfd63732a44f0ce02f503fcdadb5b91'],4,4,8,1,,,
255cfada4707b6a90c6ba7e009de50e4f7fa96bd,Try just setting env variable,Lenny Truong,leonardtruong@fb.com,GitHub,noreply@github.com,2022-10-14 09:53:04-07:00,25200,2022-10-14 09:53:04-07:00,25200,True,False,['linux-test.yml'],['eed3a73970bf2dbb13f90115554dc9bca1c72767'],2,4,6,1,,,
99f2b2e8f154e264956446e3b0e22bdd0cc2b75f,Update linux-test.yml,Lenny Truong,leonardtruong@fb.com,GitHub,noreply@github.com,2022-10-14 09:53:51-07:00,25200,2022-10-14 09:53:51-07:00,25200,True,False,['linux-test.yml'],['255cfada4707b6a90c6ba7e009de50e4f7fa96bd'],2,2,4,1,,,
1db48d353ae15655552535842400c07a2ee3f1cb,Update linux-test.yml,Lenny Truong,leonardtruong@fb.com,GitHub,noreply@github.com,2022-10-14 09:55:51-07:00,25200,2022-10-14 09:55:51-07:00,25200,True,False,['linux-test.yml'],['99f2b2e8f154e264956446e3b0e22bdd0cc2b75f'],1,1,2,1,,,
899b5ea1ab4b99ef115b2ed00a0785facd32b1ff,Update deploy script,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2022-10-14 09:58:38-07:00,25200,2022-10-14 09:58:38-07:00,25200,True,False,['deploy.yml'],['4ae34701f996cb5cee23e0f88a087ad1ee138d43'],3,2,5,1,,,
3e67c2b867723ab9932a9c81327d3364b2b20c5a,Release 1.4.7,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2022-10-14 09:58:49-07:00,25200,2022-10-14 09:58:49-07:00,25200,True,False,['setup.py'],['899b5ea1ab4b99ef115b2ed00a0785facd32b1ff'],1,1,2,1,,,
dcef312cf14056bf648bb2341396053f697963c4,Install gmpy master in deploy,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2022-10-14 09:59:39-07:00,25200,2022-10-14 09:59:39-07:00,25200,True,False,['deploy.yml'],['3e67c2b867723ab9932a9c81327d3364b2b20c5a'],0,4,4,1,,,
aeed3d881dcd1cc62c0e7423c3b55d9591907506,Fix setup,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2022-10-14 10:03:03-07:00,25200,2022-10-14 10:03:03-07:00,25200,True,False,['deploy.yml'],['dcef312cf14056bf648bb2341396053f697963c4'],3,7,10,1,,,
99a6d7f696689274388be9dd747316a829acb142,Only deploy one version since sdist,Lenny Truong,leonardtruong@fb.com,Lenny Truong,leonardtruong@fb.com,2022-10-14 10:05:16-07:00,25200,2022-10-14 10:05:16-07:00,25200,True,False,['deploy.yml'],['aeed3d881dcd1cc62c0e7423c3b55d9591907506'],1,1,2,1,,,
3a50170f20404d7ea7e463e56648a4bbc2b2683f,fix minor typo / export TaggedUnion,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2023-04-25 16:30:32-07:00,25200,2023-04-25 16:30:32-07:00,25200,True,False,"['adt.py', 'adt_meta.py']",['99a6d7f696689274388be9dd747316a829acb142'],3,2,5,2,,,
4948fe41f7042e5f3dc8f25a8606bea674f5b113,Add reflected operators to bit and bv types,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2023-08-01 15:05:48-07:00,25200,2023-08-02 15:30:59-07:00,25200,True,False,"['bit_vector.py', 'bit_vector_util.py', 'smt_bit_vector.py', 'util.py', 'test_bv.py']",['aa051b31e330b44dcb67834af0e454b58d7aa2d8'],244,199,443,5,0.0,0.0,0.0
15d97e5973a023dd2dff5836860f9bfc2ac06e43,Remove use of mixin bv methods,Caleb Donovick,donovick@cs.stanford.edu,Caleb Donovick,donovick@cs.stanford.edu,2023-08-29 16:03:34-07:00,25200,2023-08-29 16:03:34-07:00,25200,True,False,"['bit_vector.py', 'smt_bit_vector.py']",['3afb9f0ce727e844a3b9fe5e245e610debb7959d'],9,24,33,2,1.0,1.0,1.0
